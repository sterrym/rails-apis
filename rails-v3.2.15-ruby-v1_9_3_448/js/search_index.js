var search_data = {"index":{"searchIndex":["!()","!()","!=()","!=()","!~~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()",">()",">()",">()",">()",">()",">()",">()",">=()",">=()",">=()",">=()",">=()",">=()",">>()",">>()",">>()",">>()",">>()",">>()",">>()",">>()","acl","aclentry","acllist","apop()","apop()","apop()","apop()","argf","abbrev","abstractcontroller","actionnotfound","assetpaths","base","callbacks","classmethods","collector","doublerendererror","error","helpers","classmethods","layouts","classmethods","layoutconditions","logger","railties","routeshelpers","rendering","classmethods","translation","urlfor","classmethods","viewpaths","classmethods","actioncontroller","base","caching","actions","actioncachepath","classmethods","configmethods","fragments","pages","classmethods","sweeping","compatibility","conditionalget","cookies","datastreaming","flash","forcessl","classmethods","head","helpers","classmethods","hideactions","classmethods","httpauthentication","basic","controllermethods","classmethods","digest","controllermethods","token","controllermethods","implicitrender","instrumentation","classmethods","logsubscriber","metal","middleware","actionmiddleware","mimeresponds","classmethods","paramswrapper","classmethods","rackdelegation","railtie","railties","paths","recordidentifier","redirecting","renderers","all","classmethods","rendering","requestforgeryprotection","classmethods","rescue","responder","sessionmanagement","classmethods","streaming","urlfor","actiondispatch","beststandardssupport","bodyproxy","callbacks","cookies","cookieoverflow","debugexceptions","exceptionwrapper","filehandler","flash","flashhash","head","http","cache","request","response","filterparameters","headers","mimenegotiation","parameterfilter","parameters","url","upload","uploadedfile","middlewarestack","middleware","paramsparser","publicexceptions","railsentitystore","railsmetastore","railtie","reloader","remoteip","getip","ipspoofattackerror","request","requestid","rescue","response","routing","mapper","base","httphelpers","resources","scoping","polymorphicroutes","redirection","routeset","mountedhelpers","urlfor","session","abstractstore","cachestore","compatibility","cookiestore","destroyablesession","memcachestore","stalesessioncheck","showexceptions","static","actionmailer","base","collector","deliverymethods","classmethods","logsubscriber","mailhelper","railtie","actionpack","actionview","base","context","filesystemresolver","helpers","activemodelhelper","activemodelinstancetag","assetpaths","assettaghelper","assetincludetag","javascriptincludetag","javascripttaghelpers","classmethods","stylesheetincludetag","stylesheettaghelpers","classmethods","atomfeedhelper","atombuilder","atomfeedbuilder","cachehelper","capturehelper","csrfhelper","datehelper","datehelperinstancetag","debughelper","formbuilder","formhelper","formoptionshelper","formtaghelper","instancetag","javascripthelper","numberhelper","invalidnumbererror","outputsafetyhelper","recordtaghelper","renderinghelper","sanitizehelper","taghelper","texthelper","translationhelper","urlhelper","logsubscriber","lookupcontext","detailscache","viewpaths","partialrenderer","railtie","renderer","resolver","path","template","handlers","builder","erb","erubis","activemodel","attributemethods","classmethods","attributemethodmatcher","blockvalidator","callbacks","conversion","dirty","eachvalidator","errors","lint","tests","massassignmentsecurity","blacklist","classmethods","error","loggersanitizer","permissionset","sanitizer","strictsanitizer","whitelist","missingattributeerror","name","naming","observer","observerarray","observing","classmethods","securepassword","classmethods","instancemethodsonactivation","serialization","serializers","json","xml","strictvalidationfailed","translation","validations","acceptancevalidator","callbacks","classmethods","classmethods","confirmationvalidator","exclusionvalidator","formatvalidator","helpermethods","inclusionvalidator","lengthvalidator","numericalityvalidator","presencevalidator","withvalidator","validator","activerecord","activerecorderror","adapternotfound","adapternotspecified","aggregations","classmethods","associationtypemismatch","associations","classmethods","attributeassignment","classmethods","attributeassignmenterror","attributemethods","beforetypecast","classmethods","deprecatedunderscoreread","classmethods","dirty","primarykey","classmethods","query","read","classmethods","serialization","attribute","classmethods","timezoneconversion","classmethods","write","classmethods","autosaveassociation","classmethods","base","batches","calculations","callbacks","coders","yamlcolumn","configurationerror","connectionadapters","abstractadapter","abstractmysqladapter","column","format","connectionhandler","connectionmanagement","connectionpool","databaselimits","databasestatements","mysql2adapter","mysqladapter","statementpool","postgresqladapter","statementpool","tabledefinition","utils","postgresqlcolumn","querycache","quoting","sqliteadapter","explainprettyprinter","statementpool","version","schemacache","schemastatements","statementpool","table","tabledefinition","connectionnotestablished","connectiontimeouterror","countercache","dangerousattributeerror","delegation","dynamicfindermatch","dynamicmatchers","dynamicscopematch","explain","findermethods","fixtures","file","generators","migration","migrationgenerator","modelgenerator","observergenerator","sessionmigrationgenerator","identitymap","middleware","inheritance","classmethods","integration","invalidforeignkey","irreversiblemigration","locking","optimistic","classmethods","pessimistic","logsubscriber","migration","commandrecorder","migrationproxy","modelschema","classmethods","multiparameterassignmenterrors","nestedattributes","classmethods","toomanyrecords","observer","persistence","classmethods","preparedstatementinvalid","querycache","classmethods","querymethods","querying","railtie","railties","controllerruntime","classmethods","readonlyrecord","readonlyattributes","classmethods","recordinvalid","recordnotfound","recordnotsaved","recordnotunique","reflection","classmethods","macroreflection","relation","result","rollback","sanitization","classmethods","schema","scoping","classmethods","default","classmethods","named","classmethods","serialization","serializationtypemismatch","sessionstore","session","sqlbypass","spawnmethods","staleobjecterror","statementinvalid","store","classmethods","testfixtures","classmethods","throwresult","timestamp","transactions","classmethods","translation","unknownattributeerror","unknownprimarykey","validations","associatedvalidator","classmethods","uniquenessvalidator","wrappeddatabaseexception","activeresource","base","connection","custommethods","classmethods","errors","formats","jsonformat","xmlformat","httpmock","invalidrequesterror","logsubscriber","observing","railtie","request","response","sslerror","timeouterror","validations","activesupport","autoload","backtracecleaner","base64","basicobject","benchmarkable","bufferedlogger","severity","cache","entry","filestore","memcachestore","memorystore","nullstore","store","strategy","localcache","localstore","callbacks","classmethods","concern","configurable","classmethods","configuration","dependencies","classcache","watchstack","deprecation","descendantstracker","duration","fileupdatechecker","filewatcher","backend","gzip","stream","hashwithindifferentaccess","inflector","inflections","inheritableoptions","json","encoding","circularreferenceerror","encoder","variable","logsubscriber","memoizable","instancemethods","messageencryptor","invalidmessage","messageverifier","invalidsignature","multibyte","chars","encodingerror","unicode","codepoint","unicodedatabase","notifications","event","fanout","instrumenter","orderedhash","orderedoptions","railtie","rescuable","classmethods","safebuffer","safeconcaterror","stringinquirer","taggedlogging","timewithzone","timezone","xmlmini","xmlmini_libxmlsax","hashbuilder","xmlmini_nokogirisax","hashbuilder","addrinfo","applicationcontroller","applicationhelper","arjdbcmysql","error","argumenterror","array","array","array()","base64","base64","basicobject","basicsocket","benchmark","benchmark","tms","bigdecimal","bigdecimal","bigdecimal()","bigmath","bignum","binding","blog","application","build","cgi","cookie","htmlextension","invalidencoding","queryextension","session","filestore","memorystore","nullstore","pstore","cmath","csv","csv()","malformedcsverror","row","table","call()","class","class","closekey()","comment","commentscontroller","commentshelper","comparable","complex","complex()","compositepublisher","conditionvariable","continuation","coverage","createcomments","createkey()","createposts","createtags","css","generators","assetsgenerator","scaffoldgenerator","currentcontext()","curses","key","mouseevent","window","dbm","dbmerror","debug()","debug=()","debugger__","context","dl","basictypes","cfunc","cparser","cptr","cstruct","cstructbuilder","cstructentity","cunion","cunionentity","carriedfunction","compositehandler","dlerror","dltypeerror","function","handle","importer","packinfo","packer","stack","tempfunction","valueutil","win32types","drb","drbarray","drbbadscheme","drbbaduri","drbconn","drbconnerror","drberror","drbidconv","drbmessage","drbobject","drbobservable","drbprotocol","drbremoteerror","drbsslsocket","sslconfig","drbserver","invokemethod18mixin","drbservernotfound","drbtcpsocket","drbunixsocket","drbundumped","drbunknown","drbunknownerror","extserv","extservmanager","gw","gwidconv","timeridconv","timerholder2","invalidindexerror","data","date","date","datetime","datetime","delegateclass()","delegator","deletekey()","deletevalue()","digest","digest()","base","class","hmac","instance","dir","e()","env","eoferror","erb","erb","defmethod","util","util","escdelay()","escdelay=()","encoding","compatibilityerror","converter","converternotfounderror","invalidbytesequenceerror","undefinedconversionerror","encodingerror","enumkey()","enumvalue()","enumerable","enumerable","enumerator","generator","yielder","erb","generators","controllergenerator","mailergenerator","scaffoldgenerator","errno","econnaborted","econnreset","eproto","etc","exception","exception2messagemapper","e2mm","fail()","fail()","fail()","fail()","fail()","fail()","fail()","falseclass","falseclass","fcntl","fiber","fibererror","fiddle","closure","blockcaller","function","pointer","file","file","constants","stat","filetest","fileutils","dryrun","lowmethods","nowrite","streamutils_","verbose","find","fixnum","float","float","float()","floatdomainerror","flushkey()","foo","forwardable","gc","profiler","gdbm","gdbmerror","gdbmfatalerror","get()","gserver","gem","builder","command","commandlineerror","commandmanager","commands","buildcommand","certcommand","checkcommand","cleanupcommand","contentscommand","dependencycommand","environmentcommand","fetchcommand","generateindexcommand","helpcommand","installcommand","listcommand","lockcommand","outdatedcommand","ownercommand","pristinecommand","pushcommand","querycommand","rdoccommand","searchcommand","servercommand","setupcommand","sourcescommand","specificationcommand","stalecommand","uninstallcommand","unpackcommand","updatecommand","whichcommand","configfile","consoleui","defaultuserinteraction","dependency","dependencyerror","dependencyinstaller","dependencylist","dependencyremovalexception","deprecate","docmanager","documenterror","endofyamlexception","errorreason","exception","ext","builder","configurebuilder","extconfbuilder","rakebuilder","filepermissionerror","format","formatexception","gemnotfoundexception","gemnotinhomeexception","gempathsearcher","gemrunner","gemcutterutilities","indexer","installerror","installupdateoptions","installer","extensionbuilderror","invalidspecificationexception","loaderror","localremoteoptions","mockgemui","systemexitexception","tty","termerror","noaliasyamltree","oldformat","operationnotsupportederror","package","badchecksum","closedio","error","fsyncdir","formaterror","nonseekableio","tarheader","tarinvaliderror","taroutput","tarreader","entry","unexpectedeof","tarwriter","boundedstream","fileoverflow","restrictedstream","toolongfilename","packagetask","pathsupport","platform","platformmismatch","remoteerror","remotefetcher","fetcherror","remoteinstallationcancelled","remoteinstallationskipped","remotesourceexception","requirepathsbuilder","requirement","ssl","security","exception","policy","signer","server","silentui","sourceindex","specfetcher","specification","streamui","silentdownloadreporter","silentprogressreporter","simpleprogressreporter","verbosedownloadreporter","verboseprogressreporter","systemexitexception","text","uninstaller","userinteraction","validator","verificationerror","version","versionoption","gemfile","gemfile","gemfile","gemfile","getoptlong","ambiguousoption","error","invalidoption","missingargument","needlessargument","html","fullsanitizer","linksanitizer","sanitizer","selector","tag","whitelistsanitizer","hash","hash","homecontroller","homehelper","httpserver","request","response","table","i()","i18n","exceptionhandler","railtie","io","io","waitreadable","waitwritable","readable","writable","ioerror","ipaddr","ipsocket","irb","abort","context","contextextender","ce","extendcommand","changeworkspace","currentworkingworkspace","foreground","fork","help","irbcommand","jobs","kill","load","nop","popworkspace","pushworkspace","require","source","workspaces","extendcommandbundle","excb","fileinputmethod","frame","history","historysavingability","inspectors","inputcompletor","inputmethod","inspector","irb","irbloader","jobmanager","loadabort","locale","methodextender","notifier","abstractnotifier","compositenotifier","levelednotifier","nomsgnotifier","outputmethod","readlineinputmethod","slex","node","stdioinputmethod","stdiooutputmethod","workspace","iconv","brokenlibrary","failure","illegalsequence","invalidcharacter","invalidencoding","outofrange","indexerror","inspector()","integer","integer","integer()","interrupt","json","circulardatastructure","ext","generatorerror","jsonerror","missingunicodesupport","nestingerror","parsererror","unparsererror","jacobian","jobmanager()","js","generators","assetsgenerator","kconv","kernel","kernel","keyerror","log_mask()","log_mask()","log_upto()","log_upto()","lusolve","loaderror","loaderror","localjumperror","logger","logger","application","formatter","logdevice","logdevicemutex","severity","simpleformatter","logging","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","marshal","marshal()","matchdata","math","domainerror","matrix","eigenvaluedecomposition","lupdecomposition","method","mime","mimes","type","module","module","monitor","monitormixin","conditionvariable","timeout","mutex","mutex_m","mysql","result","stmt","time","nkf","nqxml","node","nameerror","nameerror","net","apop","apopsession","ftp","nullsocket","ftpconnectionerror","ftperror","ftppermerror","ftpprotoerror","ftpreplyerror","ftptemperror","http","copy","delete","get","head","lock","mkcol","move","options","patch","post","propfind","proppatch","put","trace","unlock","httpaccepted","httpbadgateway","httpbadrequest","httpbadresponse","httpclienterror","httpconflict","httpcontinue","httpcreated","httperror","httpexceptions","httpexpectationfailed","httpfatalerror","httpforbidden","httpfound","httpgatewaytimeout","httpgenericrequest","httpgone","httpheader","httpheadersyntaxerror","httpinformation","httpinternalservererror","httplengthrequired","httpmethodnotallowed","httpmovedpermanently","httpmultiplechoice","httpnocontent","httpnonauthoritativeinformation","httpnotacceptable","httpnotfound","httpnotimplemented","httpnotmodified","httpok","httppartialcontent","httppaymentrequired","httppreconditionfailed","httpproxyauthenticationrequired","httpredirection","httprequest","httprequestentitytoolarge","httprequesttimeout","httprequesturitoolong","httprequestedrangenotsatisfiable","httpresetcontent","httpresponse","httpretriableerror","httpseeother","httpservererror","httpserverexception","httpserviceunavailable","httpsession","httpsuccess","httpswitchprotocol","httptemporaryredirect","httpunauthorized","httpunknownresponse","httpunsupportedmediatype","httpuseproxy","httpversionnotsupported","imap","badresponseerror","bodytypebasic","bodytypemessage","bodytypemultipart","bodytypetext","byeresponseerror","crammd5authenticator","dataformaterror","digestmd5authenticator","error","flagcounterror","loginauthenticator","noresponseerror","plainauthenticator","responseerror","responseparseerror","pop","pop3","pop3session","popauthenticationerror","popbadresponse","poperror","popmail","popsession","smtp","response","smtpauthenticationerror","smtperror","smtpfatalerror","smtpserverbusy","smtpsession","smtpsyntaxerror","smtpunknownerror","smtpunsupportedcommand","telnet","newton","nilclass","nilclass","nomemoryerror","nomethoderror","notimplementederror","numeric","numeric","oleproperty","object","object","hashwithindifferentaccess","missingsourcefile","parseerror","synchronizer","synchronizer_m","thwait","timeouterror","objectspace","observable","open3","openkey()","openssl","asn1","asn1data","asn1error","constructive","primitive","bn","bnerror","buffering","cipher","cipher","ciphererror","config","configerror","digest","digest","digesterror","engine","engineerror","hmac","hmacerror","netscape","spki","spkierror","ocsp","basicresponse","certificateid","ocsperror","request","response","opensslerror","pkcs12","pkcs12error","pkcs5","pkcs5error","pkcs7","pkcs7error","recipientinfo","signerinfo","pkey","dh","dherror","dsa","dsaerror","ec","group","error","point","error","ecerror","pkey","pkeyerror","rsa","rsaerror","random","randomerror","ssl","nonblock","sslcontext","sslerror","sslserver","sslsocket","session","sessionerror","socketforwarder","x509","attribute","attributeerror","crl","crlerror","certificate","certificateerror","extension","extensionerror","extensionfactory","name","rfc2253dn","nameerror","request","requesterror","revoked","revokederror","store","storecontext","storeerror","openstruct","openuri","httperror","httpredirect","meta","openread","optionparser","acceptables","ambiguousargument","ambiguousoption","arguable","completinghash","completion","invalidargument","invalidoption","list","missingargument","needlessargument","optionmap","parseerror","switch","noargument","optionalargument","placedargument","requiredargument","pi()","post()","pp","objectmixin","ppmethods","singleline","pstore","error","pty","childexited","pathname","pathname()","permalink?()","plugin","post","postscontroller","postshelper","prettyprint","breakable","group","groupqueue","singleline","text","prime","eratosthenesgenerator","eratosthenessieve","generator23","oldcompatibility","pseudoprimegenerator","trialdivision","trialdivisiongenerator","proc","process","process","gid","status","sys","uid","profiler__","proxy()","proxy()","psych","badalias","coder","emitter","exception","handler","dumperoptions","handlers","json","stream","treebuilder","nodes","alias","document","mapping","node","scalar","sequence","stream","omap","parser","mark","privatetype","scalarscanner","set","stream","streaming","syntaxerror","treebuilder","visitors","depthfirst","emitter","jsontree","toruby","visitor","yamltree","qualifiedconstutils","queryinfokey()","queryvalue()","queue","rails_version","rdoc","alias","anonclass","anymethod","attr","classmodule","codeobject","constant","context","section","crossreference","erbio","encoding","error","generator","darkfish","markup","ri","ghostmethod","include","markup","attrchanger","attrspan","attribute","attributemanager","blankline","document","formatter","heading","indentedparagraph","list","listitem","paragraph","parser","error","parseerror","preprocess","raw","rule","special","toansi","tobs","tohtml","tohtmlcrossref","tordoc","tottonly","verbatim","metamethod","methodattr","normalclass","normalmodule","options","parser","c","ruby","rubytools","simple","rdoc","ri","driver","error","notfounderror","error","paths","store","require","rubylex","rubytoken","tkerror","tkid","tkkw","tknode","tkopasgn","tkop","tksymbol","tkunknownchar","tkval","token","rubygemshook","singleclass","stats","normal","quiet","verbose","task","text","tokenstream","toplevel","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme_for_app","readme_for_app","releasing_rails","rexml","attlistdecl","attribute","attributes","cdata","child","comment","dtd","attlistdecl","elementdecl","entitydecl","notationdecl","parser","declaration","doctype","document","element","elementdecl","elements","encoding","entity","entityconst","externalentity","formatters","default","pretty","transitive","functions","iosource","instruction","light","node","namespace","node","notationdecl","output","parent","parseexception","parsers","baseparser","lightparser","pullevent","pullparser","sax2parser","streamparser","treeparser","ultralightparser","xpathparser","quickpath","sax2listener","source","sourcefactory","streamlistener","syncenumerator","text","undefinednamespaceexception","validation","choice","event","interleave","oneormore","optional","ref","relaxng","sequence","state","validationexception","validator","zeroormore","xmldecl","xmltokens","xpath","xpathparser","rss","atom","commonmodel","contentmodel","classmethods","dateconstruct","duplicatelinkchecker","entry","feed","author","category","contributor","entry","content","published","source","summary","generator","icon","id","link","logo","rights","subtitle","title","updated","personconstruct","email","name","uri","textconstruct","uricontentmodel","basedublincoremodel","baselistener","basemodel","baseparser","basetrackbackmodel","contentmodel","conversionerror","converter","dublincoremodel","dublincoremodel","element","error","itunesbasemodel","ituneschannelmodel","itunescategory","itunesimage","itunesowner","itunesitemmodel","itunesduration","itunesmodelutils","imagefaviconmodel","imagefavicon","imageitemmodel","imageitem","imagemodelutils","invalidrsserror","listenermixin","maker","atom","entry","channel","cloud","description","generator","skipdays","day","skiphours","hour","image","items","item","textinput","feed","channel","categories","category","cloud","generator","links","link","skipdays","day","skiphours","hour","image","items","item","categories","category","content","enclosure","guid","links","link","source","categories","category","generator","icon","links","link","logo","textinput","atomcategory","atomgenerator","atomlink","atomlogo","atompersonconstructbase","atompersons","atomtextconstruct","atomtextconstructbase","ensurexmlcontent","base","channelbase","authorsbase","authorbase","categoriesbase","categorybase","cloudbase","contributorsbase","contributorbase","copyrightbase","descriptionbase","generatorbase","itunescategories","itunescategory","itunesimage","itunesowner","linksbase","linkbase","skipdaysbase","daybase","skiphoursbase","hourbase","titlebase","contentmodel","dublincoremodel","itunesbasemodel","ituneschannelmodel","itunescategoriesbase","itunescategorybase","itunesimagebase","itunesownerbase","itunesitemmodel","itunesdurationbase","imagebase","imagefaviconmodel","imagefaviconbase","imageitemmodel","imageitembase","itemsbase","itembase","contentbase","descriptionbase","enclosurebase","guidbase","itunesduration","rightsbase","sourcebase","iconbase","logobase","rightsbase","subtitlebase","titlebase","titlebase","rss09","rss091","channel","image","items","item","textinput","rss092","channel","image","items","item","textinput","channel","authors","author","categories","category","cloud","contributors","contributor","copyright","description","generator","links","link","skipdays","day","skiphours","hour","title","image","items","item","authors","author","categories","category","content","contributors","contributor","description","enclosure","guid","links","link","rights","source","authors","author","categories","category","contributors","contributor","generator","icon","links","link","logo","rights","subtitle","title","title","textinput","rss10","channel","authors","author","categories","category","cloud","contributors","contributor","copyright","description","generator","links","link","skipdays","day","skiphours","hour","title","image","items","item","authors","author","categories","category","content","contributors","contributor","description","enclosure","guid","links","link","rights","source","authors","author","categories","category","contributors","contributor","generator","icon","links","link","logo","rights","subtitle","title","title","textinput","rss20","channel","categories","category","cloud","generator","skipdays","day","skiphours","hour","image","items","item","authors","author","categories","category","enclosure","guid","source","links","link","textinput","rssbase","setupdefaultdate","setupdefaultlanguage","slashmodel","syndicationmodel","taxonomytopicmodel","taxonomytopicsbase","taxonomytopicbase","taxonomytopicsmodel","taxonomytopicsbase","textinputbase","trackbackmodel","trackbackaboutsbase","trackbackaboutbase","xmlstylesheets","xmlstylesheet","missingattributeerror","missingtagerror","nserror","notavailablevalueerror","notexceptedtagerror","notexpectedtagerror","notseterror","notvalidxmlparser","notwellformederror","overlappedprefixerror","parser","rdf","bag","li","channel","image","items","seq","textinput","image","item","li","seq","li","textinput","rexmllikexmlparser","rexmllistener","rexmlparser","rss09","rss10","rootelementmixin","rss","channel","cloud","image","item","category","enclosure","guid","source","skipdays","day","skiphours","hour","textinput","setupmaker","slashmodel","syndicationmodel","taxonomytopicmodel","taxonomytopic","taxonomytopicsmodel","taxonomytopics","bag","toomuchtagerror","trackbackmodel10","trackbackabout","trackbackping","trackbackmodel20","trackbackabout","trackbackping","trackbackutils","unknownconversionmethoderror","unknownconvertmethod","unknowntagerror","unsupportedmakerversionerror","utils","csv","inheritedreader","yescleanother","yesother","xml","element","xmlparserlistener","xmlparsernotfound","xmlparserparser","xmlscanlistener","xmlscanparser","xmlstylesheet","xmlstylesheetmixin","running_unit_tests","running_unit_tests","racc","parseerror","parser","rack","rails","actionmethods","appbuilder","application","bootstrap","configuration","finisher","railties","routesreloader","backtracecleaner","commands","info","install","plugin","remove","configuration","console","consolemethods","dbconsole","engine","configuration","railties","generators","actions","activemodel","appbase","appgenerator","assetsgenerator","base","controllergenerator","error","generatedattribute","generatorgenerator","helpergenerator","mailergenerator","migration","classmethods","migrationgenerator","modelgenerator","namedbase","observergenerator","pluginnewgenerator","resourcegenerator","resourcehelpers","resourceroutegenerator","scaffoldcontrollergenerator","scaffoldgenerator","sessionmigrationgenerator","taskgenerator","info","infocontroller","initializable","classmethods","collection","initializer","paths","path","root","plugin","pluginbuilder","rack","debugger","logtailer","logger","railtie","configurable","classmethods","configuration","scriptrailsloader","server","options","railsenvironment","railsguides","generator","helpers","indexer","levenshtein","textileextensions","validator","raise()","raise()","raise()","raise()","rake","altsystem","application","cloneable","compositepublisher","dsl","defaultloader","earlytime","filecreationtask","filelist","filetask","fileutilsext","ftpfile","ftpuploader","invocationchain","emptyinvocationchain","invocationexceptionmixin","makefileloader","multitask","namespace","packagetask","pseudostatus","rdoctask","rubyforgepublisher","rulerecursionoverflowerror","sshdirpublisher","sshfilepublisher","sshfreshdirpublisher","task","taskargumenterror","taskarguments","tasklib","taskmanager","win32","win32homeerror","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","random","range","range","rangeerror","rational","rational()","readline","recursivehttpfetcher","regexp","regexp","regexperror","requireprofiler","resolv","dns","config","nxdomain","otherresolverror","decodeerror","encodeerror","name","query","requester","requesterror","resource","any","cname","domainname","generic","hinfo","in","a","aaaa","srv","wks","minfo","mx","ns","ptr","soa","txt","hosts","ipv4","ipv6","resolverror","resolvtimeout","rinda","drbobjecttemplate","invalidhashtuplekey","notifytemplateentry","requestcancelederror","requestexpirederror","rindaerror","ringfinger","ringprovider","ringserver","simplerenewer","template","templateentry","tuple","tuplebag","tuplebin","tupleentry","tuplespace","tuplespaceproxy","waittemplateentry","ripper","filter","tokenpattern","compileerror","error","matchdata","matcherror","rubylex","rubytoken","tkerror","tkid","tknode","tkopasgn","tkop","tkunknownchar","tkval","token","rubyvm","env","instructionsequence","runtimeerror","sdbm","sdbmerror","sockssocket","string_or_failed_format","scanf","formatspecifier","formatstring","scripterror","securerandom","securityerror","set","setvalue()","shell","appendfile","appendio","builtincommand","cat","commandprocessor","concat","echo","error","filter","glob","processcontroller","systemcommand","tee","void","shellwords","signal","signalexception","simpledelegator","singleforwardable","singleton","sizedqueue","socket","ancillarydata","option","udpsource","socketerror","sortedset","sourceannotationextractor","annotation","sprockets","bootstrap","compressors","helpers","isolatedhelper","railshelper","assetpaths","assetnotprecompilederror","railtie","staticcompiler","sshdirpublisher","sshfilepublisher","sshfreshdirpublisher","standarderror","stopiteration","string","string","string()","string()","stringio","stringscanner","error","struct","symbol","symbol","sync","sync_m","err","lockmodefailer","unknownlocker","syntaxerror","sys","syslog","constants","systemcallerror","systemexit","systemstackerror","tabsize()","tabsize=()","tcpserver","tcpsocket","tsort","cyclic","tag","tempfile","remover","thread","threaderror","threadgroup","threadswait","time","time","timeout","error","token()","tracer","trueclass","trueclass","typeerror","udpsocket","unixserver","unixsocket","uri","uri","uri()","badurierror","error","escape","ftp","generic","http","https","invalidcomponenterror","invalidurierror","ldap","ldaps","mailto","parser","regexp","pattern","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","unboundmethod","vector","zerovectorerror","webrick","accesslog","accesslogerror","basiclog","cgi","socket","config","cookie","daemon","fakeproxyuri","genericserver","htmlutils","httpauth","authenticator","basicauth","digestauth","htdigest","htgroup","htpasswd","proxyauthenticator","proxybasicauth","proxydigestauth","userdb","httpproxyserver","httprequest","httpresponse","httpserver","mounttable","httpservererror","httpservlet","abstractservlet","cgihandler","defaultfilehandler","erbhandler","filehandler","httpservleterror","prochandler","httpstatus","clienterror","eoferror","error","info","redirect","servererror","status","success","httputils","formdata","httpversion","log","nullreader","servererror","simpleserver","utils","timeouthandler","win32ole","variant","win32oleruntimeerror","win32ole_event","win32ole_method","win32ole_param","win32ole_type","win32ole_typelib","win32ole_variable","win32ole_variant","weakref","referror","win32","registry","api","constants","error","kernel32","predefinedkey","resolv","kernel32","sspi","api","identity","negotiateauth","sspiresult","securitybuffer","securityhandle","timestamp","win32api","xml","parser","xmlencoding_ja","sjishandler","xmlrpc","base64","basicserver","cgiserver","client","proxy","config","convert","create","datetime","faultexception","marshal","marshallable","modrubyserver","parsecontenttype","parserwriterchoosemixin","server","service","basicinterface","interface","publicinstancemethodsinterface","webrickservlet","xmlparser","abstractstreamparser","abstracttreeparser","nqxmlparser","nqxmlstreamparser","xmlrpcparser","nqxmltreeparser","rexmlstreamparser","streamlistener","streamparsermixin","xmlparser","xmlscanstreamparser","xmlscanparser","xmlstreamparser","xmltreeparser","xmlwriter","abstract","simple","xmlparser","xmp","stringinputmethod","yaml","dbm","store","syck","defaultkey","zerodivisionerror","zlib","buferror","dataerror","deflate","error","gzipfile","crcerror","error","lengtherror","nofooter","gzipreader","gzipwriter","inflate","memerror","needdict","streamend","streamerror","versionerror","zstreampermalink?()","__callback_runner_name()","__callee__()","__drbref()","__drburi()","__evaluate__()","__exit__()","__getobj__()","__getobj__()","__id__()","__inspect__()","__method__()","__reset_runner()","__send__()","__setobj__()","__setobj__()","__to_s__()","_all_autoload_once_paths()","_all_autoload_paths()","_all_load_paths()","_attribute()","_dasherize()","_dump()","_dump()","_dump()","_dump()","_dump()","_dump()","_dump()","_dump()","_dump_without_utc_flag()","_dump_without_zone()","_escape()","_field_changed?()","_get()","_getproperty()","_handle_method_missing()","_handle_render_options()","_httpdate()","_id2ref()","_implied_layout_name()","_insert_callbacks()","_invoke()","_iso8601()","_jisx0301()","_layout_for()","_layout_for()","_load()","_load()","_load()","_load()","_load()","_load()","_load()","_load_without_utc_flag()","_load_without_zone()","_make_regex()","_make_regex!()","_normalize_callback_options()","_normalize_options()","_normalize_options()","_original_to_s()","_parse()","_parse_file()","_prefixes()","_prepare_context()","_rfc2822()","_rfc3339()","_rfc822()","_routes()","_routes()","_routes_context()","_routes_context()","_save_fragment()","_set_detail()","_set_last_value()","_set_wrapper_defaults()","_setproperty()","_strptime()","_strptime()","_to_partial_path()","_unescape()","_validates_default_keys()","_with_routes()","_write_layout_method()","_xmlschema()","`()","a()","abbrev()","abbrev()","abbreviate()","abbreviate()","abort()","abort()","abort()","abort()","abort()","abort_on_exception()","abort_on_exception()","abort_on_exception=()","abort_on_exception=()","abs()","abs()","abs()","abs()","abs()","abs()","abs2()","abs2()","absolute()","absolute?()","absolute?()","absolute?()","absolute_path()","abstract!()","abstract_class?()","abstract_railtie?()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept_blank_line()","accept_blank_line()","accept_blank_line()","accept_charset()","accept_charset=()","accept_document()","accept_heading()","accept_heading()","accept_heading()","accept_heading()","accept_indented_paragraph()","accept_list_end()","accept_list_end()","accept_list_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_start()","accept_list_item_start()","accept_list_item_start()","accept_list_item_start()","accept_list_start()","accept_list_start()","accept_list_start()","accept_loop()","accept_nonblock()","accept_nonblock()","accept_nonblock()","accept_nonblock()","accept_paragraph()","accept_paragraph()","accept_paragraph()","accept_raw()","accept_raw()","accept_raw()","accept_rule()","accept_rule()","accept_rule()","accept_uri_http()","accept_verbatim()","accept_verbatim()","accept_verbatim()","accepts()","accepts_nested_attributes_for()","access_log()","accessible_attributes()","accessible_attributes()","acct()","acos()","acos()","acos!()","acosh()","acosh()","acosh!()","acronym()","action()","action_has_layout?()","action_methods()","action_methods()","action_methods()","action_methods()","activate()","activate()","activate()","activate_dependencies()","active?()","active?()","active?()","active?()","active?()","active?()","active?()","active?()","active?()","active?()","active?()","active?()","active_authorizer()","active_authorizers()","active_connection?()","active_connections?()","active_job?()","active_jobs()","active_jobs_exist?()","active_process_controllers()","activerecord?()","acts_like?()","acts_like_date?()","acts_like_date?()","acts_like_string?()","acts_like_string?()","acts_like_time?()","acts_like_time?()","acts_like_time?()","adapter()","adapter_name()","adapter_name()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add!()","add?()","add_alias()","add_alias()","add_alias()","add_alias()","add_alias()","add_alias()","add_also_in()","add_attribute()","add_attribute()","add_attribute()","add_attribute()","add_attributes()","add_authenticator()","add_bindir()","add_bulk_threshold_option()","add_cert()","add_certid()","add_certificate()","add_class()","add_class()","add_class()","add_class_or_module()","add_clear_sources_option()","add_column()","add_column()","add_column()","add_column_position!()","add_column_sql()","add_comment()","add_common_option()","add_constant()","add_constant()","add_constant()","add_crl()","add_crl()","add_data()","add_date()","add_delegate_command_to_shell()","add_delivery_method()","add_dependency()","add_description()","add_development_dependency()","add_element()","add_element()","add_entry()","add_event_to_arry()","add_event_to_arry()","add_expr()","add_expr_escaped()","add_expr_literal()","add_extension()","add_extension()","add_extension()","add_extra_args()","add_field()","add_file()","add_file()","add_file()","add_file_simple()","add_filter()","add_filter()","add_found_dependencies()","add_from()","add_gem_contents()","add_generator()","add_handler()","add_handler()","add_have_children_element()","add_html()","add_html()","add_import()","add_include()","add_include()","add_includes()","add_index()","add_index_length()","add_index_options()","add_index_sort_order()","add_index_sql()","add_install_update_options()","add_introspection()","add_key_option()","add_line_numbers()","add_listener()","add_listener()","add_listener()","add_listener()","add_listener()","add_listener()","add_listener()","add_loader()","add_local_remote_options()","add_maker()","add_metadata()","add_method()","add_method()","add_method()","add_method()","add_method_list()","add_module()","add_module()","add_module_alias()","add_multicall()","add_namespace()","add_need_initialize_variable()","add_need_initialize_variable()","add_nonce()","add_nonce()","add_observer()","add_observer()","add_observer!()","add_on_blank()","add_on_empty()","add_option()","add_other_element()","add_owners()","add_path()","add_platform()","add_platform_option()","add_plural_form()","add_postamble()","add_preamble()","add_prerelease_option()","add_private_type()","add_protocol()","add_proxy_option()","add_recipient()","add_renderer()","add_require()","add_resource_route()","add_response_handler()","add_revoked()","add_routes()","add_row()","add_ruby_type()","add_rubygems_trusted_certs()","add_runtime_dependency()","add_schedule()","add_section()","add_self_to_load_path()","add_shared_options_for()","add_shebang_option!()","add_signatures()","add_signer()","add_silencer()","add_source()","add_source_option()","add_spec()","add_spec()","add_special()","add_special()","add_specific_extra_args()","add_specs()","add_specs()","add_status()","add_tag()","add_target()","add_text()","add_text()","add_timestamps()","add_timestamps_sql()","add_to()","add_to_classes_or_modules()","add_to_element_method()","add_to_transaction()","add_token()","add_token_listener()","add_tokens()","add_trace_func()","add_transaction_record()","add_trusted_cert()","add_update_sources_option()","add_value()","add_version_option()","add_whiner()","add_word_pair()","add_word_pair()","addch()","addch()","added?()","addr()","addr()","addr()","addr()","addstr()","addstr()","adler()","adler32()","adler32_combine()","advance()","advance()","advance()","advance()","advise()","afamily()","after()","after()","after_commit()","after_filter()","after_initialize()","after_rollback()","after_validation()","ago()","ago()","ago()","ago()","ago()","ago()","ajd()","alert()","alert()","alert()","alert=()","alert_error()","alert_error()","alert_warning()","alert_warning()","alias()","alias()","alias()","alias_attribute()","alias_attribute()","alias_command()","alias_command()","alias_extension()","alias_map()","alias_method_chain()","aliased_path_for()","aliases()","alien()","align()","alive?()","alive?()","alive?()","alive?()","alive?()","alive?()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all()","all=()","all?()","all_classes()","all_classes_and_modules()","all_classes_hash()","all_day()","all_files()","all_files_hash()","all_gems()","all_helpers_from_path()","all_load_paths()","all_modules()","all_modules_hash()","all_month()","all_names()","all_paths()","all_quarter()","all_symbols()","all_waits()","all_waits()","all_waits()","all_waits()","all_week()","all_year()","allocate()","allow_addr?()","allow_socket?()","alternate=()","amjd()","ancestors()","ancestors()","ancestors()","ancestors()","ancestors()","ancestors_of()","angle()","angle()","angle()","annotate()","annotate()","announce()","announce()","anonymous?()","any()","any?()","any?()","any_content()","api_behavior()","api_key()","api_location()","apop?()","apop?()","apop?()","apop?()","apop?()","apop?()","app()","app()","app()","app()","app()","app_const()","app_const_base()","app_generators()","app_middleware()","app_name()","app_script_text()","app_secret()","app_templates_dir()","append()","append()","append()","append()","append()","append()","append_after_filter()","append_around_filter()","append_before_filter()","append_data()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_view_path()","append_view_path()","application()","application()","application()","application=()","application=()","application_definition()","application_name()","application_trace()","apply_finder_options()","apply_join_dependency()","apply_rails_template()","aref()","aref()","aref()","aref_prefix()","aref_prefix()","aref_prefix()","aref_to()","arel()","arel_engine()","arel_table()","arg()","arg()","arg()","arg_names()","arglists()","args()","arguments()","argv()","arity()","arity()","arity()","around_filter()","array()","array_attributes()","as_href()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_string()","ascend()","ascii_compatible?()","ascii_only?()","asciicompat_encoding()","asctime()","asctime()","asin()","asin()","asin!()","asinh()","asinh()","asinh!()","ask()","ask()","ask_for_password()","ask_for_password()","ask_for_password_on_unix()","ask_for_password_on_windows()","ask_if_ok()","ask_yes_no()","ask_yes_no()","asn1_flag()","asn1_flag=()","assert_index()","assert_valid_keys()","asset_name()","asset_name()","asset_name()","asset_name()","asset_path()","asset_paths()","asset_tag()","asset_tag()","asset_tag()","assets_gemfile_entry()","assign_attributes()","assign_names()","assign_shortcuts()","assoc()","assoc()","assoc()","assume_migrated_upto_version()","at()","at()","at()","at()","at()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_hour()","at_beginning_of_hour()","at_beginning_of_month()","at_beginning_of_month()","at_beginning_of_quarter()","at_beginning_of_quarter()","at_beginning_of_week()","at_beginning_of_week()","at_beginning_of_year()","at_beginning_of_year()","at_end_of_month()","at_end_of_month()","at_end_of_quarter()","at_end_of_quarter()","at_end_of_week()","at_end_of_week()","at_end_of_year()","at_end_of_year()","at_exit()","at_midnight()","at_midnight()","at_midnight()","at_with_coercion()","at_without_coercion()","atan()","atan()","atan()","atan!()","atan2()","atan2()","atan2!()","atanh()","atanh()","atanh!()","atime()","atime()","atime()","atime()","atom_feed()","atom_validate()","atom_validate()","atom_validate()","atomic_write()","attach_to()","attachments()","attachments()","attlistdecl()","attlistdecl()","attlistdecl?()","attr_accessible()","attr_internal()","attr_internal_accessor()","attr_internal_reader()","attr_internal_writer()","attr_protected()","attr_readonly()","attribute()","attribute()","attribute()","attribute_cast_code()","attribute_match()","attribute_method?()","attribute_method?()","attribute_method?()","attribute_method_affix()","attribute_method_prefix()","attribute_method_suffix()","attribute_methods_generated?()","attribute_missing()","attribute_names()","attribute_names()","attribute_of()","attributes()","attributes()","attributes()","attributes()","attributes=()","attributes=()","attributes=()","attributes_before_type_cast()","attributes_before_type_cast()","attributes_of()","attributes_protected_by_default()","attributes_protected_by_default()","attributes_with_index()","attroff()","attroff()","attron()","attron()","attrset()","attrset()","audio_path()","audio_tag()","auth_cram_md5()","auth_cram_md5()","auth_login()","auth_login()","auth_only()","auth_only()","auth_only()","auth_only()","auth_only()","auth_only()","auth_only()","auth_only()","auth_plain()","auth_plain()","auth_type()","auth_type=()","auth_type=()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate_or_request_with_http_basic()","authenticate_or_request_with_http_digest()","authenticate_or_request_with_http_token()","authenticate_with_http_basic()","authenticate_with_http_digest()","authenticate_with_http_token()","authentication_header()","authentication_request()","authentication_request()","authentication_request()","author()","author()","author=()","authorization()","authors()","authors=()","auto_discovery_link_tag()","auto_flushing=()","autoclose=()","autoclose?()","autoload()","autoload()","autoload()","autoload?()","autoload?()","autoload_at()","autoload_once()","autoload_once_paths()","autoload_paths()","autoload_paths()","autoload_under()","autoloads()","avail_in()","avail_out()","avail_out=()","available?()","available_action?()","available_tags()","available_views()","average()","axe()","backend()","backend=()","backend=()","backticks()","backtrace()","backtrace()","backtrace()","backtrace_cleaner()","bang?()","banner()","banner()","banner()","banner()","base()","base()","base64()","base64()","base64digest()","base64digest()","base64digest!()","base_class()","base_dir()","base_name()","base_name()","base_root()","basename()","basename()","basename()","basic()","basic_auth()","basic_auth()","basic_quote_characters()","basic_quote_characters=()","basic_word_break_characters()","basic_word_break_characters=()","becomes()","beep()","before()","before()","before_configuration()","before_eager_load()","before_filter()","before_initialize()","before_running_rdoc()","before_validation()","begin()","begin()","begin_adding()","begin_adding()","begin_db_transaction()","begin_db_transaction()","begin_db_transaction()","beginning_of_day()","beginning_of_day()","beginning_of_day()","beginning_of_hour()","beginning_of_hour()","beginning_of_line?()","beginning_of_month()","beginning_of_month()","beginning_of_quarter()","beginning_of_quarter()","beginning_of_week()","beginning_of_week()","beginning_of_year()","beginning_of_year()","begins?()","begx()","begy()","behavior()","behavior=()","belongs_to()","belongs_to()","belongs_to()","belongs_to?()","benchmark()","benchmark()","best_install_method()","between?()","between?()","bin_dir()","bin_file()","bin_path()","binary=()","binary?()","binary_mode()","bind()","bind()","bind()","bind()","bind()","bind()","bind()","bind()","bind()","bind()","bind_at_call()","bind_at_call()","bind_at_call()","bind_function()","binding()","binding()","bindir()","binmode()","binmode()","binmode()","binmode()","binmode=()","binmode?()","binmode?()","binread()","binread()","binwrite()","bit_set?()","bitmap_for()","bkgd()","bkgd()","bkgdset()","bkgdset()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blinding_off!()","blinding_on!()","blksize()","block_format()","block_given?()","block_length()","block_length()","block_length()","block_output_synchronize()","block_params=()","block_scanf()","block_yield()","blockdev?()","blockdev?()","blockdev?()","blockdev?()","blockquote()","blocks()","bm()","bmbm()","body()","body()","body()","body()","body=()","body=()","body=()","body_exist?()","body_parts()","body_permitted?()","body_stream=()","bool()","bool()","boolean()","boolean()","both?()","bottom()","bottom()","bound?()","box()","break()","break?()","break_outmost_groups()","break_points()","break_points()","breakable()","breakable()","breakpoint()","broadcast()","broadcast()","brush_for()","buffersize()","buffertype()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build2()","build_arel()","build_args()","build_args=()","build_cert()","build_extensions()","build_heading()","build_indicies()","build_legacy_indicies()","build_list()","build_marshal_gemspecs()","build_mem_cache()","build_modern_index()","build_modern_indicies()","build_original_fullpath()","build_paragraph()","build_rss()","build_self_signed_cert()","build_verbatim()","builder()","builtin_curves()","bump()","bundle_command()","bundler?()","button()","button_tag()","button_to()","button_to_function()","by_col()","by_col!()","by_col_or_row()","by_col_or_row!()","by_id()","by_row()","by_row!()","byte()","bytes()","bytes()","bytes()","bytes()","bytes()","bytes()","bytes()","bytes()","bytes_read()","bytesize()","byteslice()","cache()","cache()","cache()","cache()","cache()","cache()","cache_attribute?()","cache_attributes()","cache_dir()","cache_dir()","cache_dir()","cache_file()","cache_fixtures()","cache_for_connection()","cache_gem()","cache_gem()","cache_key()","cache_page()","cache_page()","cache_path()","cache_store()","cache_store=()","cache_template_loading()","cache_template_loading=()","cached_attributes()","cached_fixtures()","caches_action()","caches_page()","cachesize=()","caching_allowed?()","calculate()","calculate()","calculate_ip()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call2()","call2_async()","call_app()","call_async()","callcc()","caller()","calltype()","calltype=()","camelcase()","camelize()","camelize()","camelized()","camelized()","can_change_color?()","can_parse()","cancel()","cancel()","cancel()","cancel()","canceled?()","candidate()","candidate()","candidate()","canonical()","canonical=()","canonical_each()","canonname()","capabilities()","capability()","capable_auth_types()","capable_auth_types()","capable_cram_md5_auth?()","capable_cram_md5_auth?()","capable_login_auth?()","capable_login_auth?()","capable_plain_auth?()","capable_plain_auth?()","capable_starttls?()","capable_starttls?()","capify!()","capitalize()","capitalize()","capitalize()","capitalize!()","caption()","capture()","capture()","capture2()","capture2e()","capture3()","captures()","case_insensitive_comparison()","case_insensitive_comparison()","case_sensitive_equality_operator()","case_sensitive_modifier()","case_sensitive_modifier()","casecmp()","casecmp()","casefold?()","cat()","catch()","cattr_accessor()","cattr_reader()","cattr_writer()","cbreak()","cbrt()","cbrt()","cbrt!()","cd()","cd()","cd()","cdata()","cdata()","cdata?()","cdata_block()","cdata_section()","cdatas()","ceil()","ceil()","ceil()","ceil()","ceil()","ceiling()","center()","center()","cert()","cert()","certid()","certificates()","certificates=()","certs()","certs()","certs()","certs()","chain()","chain=()","challenge()","challenge()","challenge()","challenge=()","change()","change()","change()","change()","change()","change()","change()","change_attribute()","change_column()","change_column()","change_column_default()","change_column_default()","change_column_default()","change_column_null()","change_column_null()","change_column_null()","change_column_sql()","change_default()","change_privilege()","change_privilege()","change_table()","change_workspace()","changed()","changed()","changed?()","changed?()","changed_attribute_by_name()","changed_attributes()","changed_for_autosave?()","changes()","character()","character()","characters()","characters()","chardev?()","chardev?()","chardev?()","chardev?()","chars()","chars()","chars()","chars()","charset()","charset()","charset_map()","chdir()","chdir()","chdir()","chdir()","check()","check()","check()","check()","check()","check_box()","check_box()","check_box_checked?()","check_box_tag()","check_break_points()","check_class_collision()","check_closed()","check_encoding()","check_files()","check_generator()","check_insecure_method()","check_inspect_key()","check_key()","check_names()","check_nonce()","check_point()","check_private_key()","check_ruby_version()","check_signedness()","check_sizeof()","check_suspend()","check_that_user_bin_dir_is_in_path()","check_until()","check_validity()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","checkbox()","checkbox_group()","checkin()","checkout()","childnodes()","child_name()","children()","children()","children()","children()","chmod()","chmod()","chmod()","chmod()","chmod()","chmod_r()","chomp()","chomp()","chomp!()","choose_from_list()","choose_from_list()","chop()","chop()","chop!()","chown()","chown()","chown()","chown()","chown_r()","chr()","chr()","chroot()","chunk()","chunked=()","chunked?()","chunked?()","cipher()","cipher()","cipher()","cipher=()","ciphers()","ciphers()","ciphers=()","civil()","civil()","civil_from_format()","class()","class()","class_attribute()","class_attributes()","class_dir()","class_document()","class_eval()","class_eval()","class_exec()","class_file()","class_method_list()","class_methods()","class_name()","class_name()","class_name()","class_name()","class_of_active_record_descendant()","class_path()","class_path()","class_variable_defined?()","class_variable_get()","class_variable_set()","class_variables()","classes()","classes()","classes()","classes_and_includes_for()","classes_and_modules()","classes_hash()","classes_hash()","classify()","classify()","classify()","clean()","cleanpath()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup!()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear!()","clear!()","clear_action_methods!()","clear_actions()","clear_active_connections!()","clear_active_connections!()","clear_all_connections!()","clear_cache()","clear_cache!()","clear_cache!()","clear_cache!()","clear_cache!()","clear_cache!()","clear_comment()","clear_exclude()","clear_helpers()","clear_paths()","clear_prerequisites()","clear_query_cache()","clear_reloadable_connections!()","clear_reloadable_connections!()","clear_respond_to()","clear_stale_cached_connections!()","clear_suspend()","clear_table_cache!()","clear_tags!()","client_ca()","client_encoding()","client_error?()","client_min_messages()","client_min_messages=()","clobber_task_description()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone_empty()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close!()","close_enabled?()","close_on_exec=()","close_on_exec?()","close_read()","close_read()","close_read()","close_screen()","close_write()","close_write()","close_write()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed_read?()","closed_write?()","clrtoeol()","clrtoeol()","cmd()","cmds()","cmp()","cmp()","cmp()","cmp_issuer()","cmsg_is?()","code()","code()","code()","code()","codepage()","codepage=()","codepoints()","codepoints()","codepoints()","codepoints()","coerce()","coerce()","coerce()","coerce()","coerce()","coerce()","coerce()","coerce()","cofactor()","collation()","collect()","collect()","collect()","collect()","collect()","collect!()","collect!()","collect2()","collect_concat()","collect_first_comment()","collect_specs()","collect_tasks()","collect_tokens()","collection()","collection_name()","collection_path()","collection_path()","collection_select()","collection_select()","color()","color_content()","color_pair()","color_pairs()","color_set()","colorize_logging()","colorize_logging=()","colors()","cols()","column()","column()","column()","column()","column_defaults()","column_exists?()","column_exists?()","column_name_length()","column_names()","column_vector()","column_vectors()","columns()","columns()","columns()","columns()","columns()","columns()","columns_for_remove()","columns_hash()","columns_hash()","columns_hash()","columns_per_multicolumn_index()","columns_per_table()","combination()","comma_breakable()","command()","command=()","command_names()","comment()","comment()","comment()","comment=()","comment=()","comment=()","comment=()","comment=()","comment?()","comment_if()","comments()","commercial()","commercial()","commit()","commit_db_transaction()","commit_db_transaction()","commit_transaction_records()","common_options()","compact()","compact!()","compact_specs()","comparable_time()","compare_by_identity()","compare_by_identity?()","compare_file()","compare_language()","compare_stream()","compare_with_coercion()","compare_without_coercion()","compatible?()","compile()","compile()","compile()","compile_file()","compile_methods!()","compile_methods!()","compile_option()","compile_option=()","compiled_asset_path()","complain()","complete()","complete()","complete()","complete()","complete()","complete_authentication()","completer_quote_characters()","completer_quote_characters=()","completer_word_break_characters()","completer_word_break_characters=()","completion_append_character()","completion_append_character=()","completion_case_fold()","completion_case_fold=()","completion_proc()","completion_proc=()","component()","component()","component()","component()","component_ary()","compose()","compose_codepoints()","composed_of()","compress()","compress()","compress_indicies()","compressed?()","compute_key()","compute_tags()","compute_type()","concat()","concat()","concat()","concat()","concat()","concat()","concat()","conditional_layout?()","conditional_layout?()","conf()","config()","config()","config()","config()","config()","config()","config()","config()","config()","config=()","config_accessor()","config_file()","config_file_name()","configru()","configuration()","configuration()","configuration=()","configurations()","configure()","configure()","configure_connection_for_https()","configured_args()","configured_args=()","conflicts()","conj()","conj()","conj()","conjugate()","conjugate()","conjugate()","connect()","connect()","connect()","connect()","connect()","connect()","connect()","connect()","connect_address()","connect_from()","connect_nonblock()","connect_nonblock()","connect_to()","connected?()","connected?()","connected?()","connecting()","connection()","connection()","connection()","connection()","connection()","connection()","connection()","connection_close?()","connection_config()","connection_for()","connection_handler()","connection_id()","connection_id=()","connection_keep_alive?()","connection_pool()","connection_pool()","connections()","consider_all_requests_local?()","console()","console()","const_defined?()","const_defined_in?()","const_get()","const_load()","const_missing()","const_set()","const_warning()","constantize()","constantize()","constants()","constants()","constraints()","construct()","construct_join_dependency_for_association_find()","construct_limited_ids_condition()","construct_relation_for_association_calculations()","construct_relation_for_association_find()","consume()","consume()","consumes?()","contains()","contains_bad_protocols?()","contains_requirable_file?()","content=()","content=()","content_columns()","content_encoding()","content_for()","content_for?()","content_length()","content_length()","content_length()","content_length()","content_length()","content_length=()","content_length=()","content_mime_type()","content_range()","content_setup()","content_tag()","content_tag_for()","content_type()","content_type()","content_type()","content_type()","content_type()","content_type()","content_type()","content_type=()","content_type=()","content_type=()","context()","context()","context()","context()","context=()","continue()","continue?()","continue_timeout=()","continue_timeout=()","controller()","controller()","controller()","controller_class_name()","controller_class_path()","controller_file_name()","controller_file_path()","controller_i18n_scope()","controller_name()","controller_name()","controller_path()","controller_path()","controller_path()","conv()","conv()","convert()","convert()","convert()","convert()","convert()","convert()","convert()","convert()","convert_attrs()","convert_database_option_for_jruby()","convert_flow()","convert_html()","convert_key()","convert_key()","convert_special()","convert_special()","convert_specials()","convert_string()","convert_string()","convert_string()","convert_to_model()","convert_value()","convert_value()","converter=()","converters()","convertible_int()","convpath()","cooked()","cooked!()","cookie_jar()","cookies()","copy()","copy()","copy()","copy()","copy()","copy()","copy()","copy_entry()","copy_file()","copy_files()","copy_javascript()","copy_nonce()","copy_stream()","copy_stream()","copy_string()","copy_stylesheet()","copy_stylesheet()","copy_view_files()","copy_view_files()","coredump?()","correct?()","correct_for_windows_path()","cos()","cos()","cos()","cos!()","cosh()","cosh()","cosh!()","count()","count()","count()","count()","count()","count()","count()","count_by_sql()","count_objects()","count_observers()","count_observers()","covector()","cover?()","coverage_level=()","cp()","cp()","cp_r()","cram_md5_challenge()","crc()","crc32()","crc32_combine()","crc_table()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create!()","create!()","create_active_record_files()","create_app_files()","create_app_files()","create_boot_file()","create_carried_function()","create_carrier()","create_config_files()","create_config_files()","create_controller_files()","create_controller_files()","create_database()","create_database()","create_db_files()","create_doc_files()","create_dummy_app()","create_ext()","create_ext_from_array()","create_ext_from_hash()","create_ext_from_string()","create_extension()","create_fixtures()","create_from()","create_generator_files()","create_guid()","create_header()","create_helper_files()","create_images_directory()","create_javascript_files()","create_lib_files()","create_lib_files()","create_listeners()","create_log_files()","create_mailer_file()","create_makefile()","create_migration_file()","create_migration_file()","create_migration_file()","create_model_file()","create_module_file()","create_observer_file()","create_public_files()","create_public_stylesheets_files()","create_reflection()","create_root()","create_root_files()","create_root_files()","create_root_folder()","create_rule()","create_rule()","create_savepoint()","create_savepoint()","create_savepoint()","create_savepoint()","create_script_files()","create_script_files()","create_self_signed_cert()","create_ssl_params()","create_ssl_params()","create_ssl_params()","create_ssl_params()","create_subnode()","create_table()","create_task_files()","create_temp_function()","create_test_dummy_files()","create_test_files()","create_test_files()","create_tmp_files()","create_value()","create_vendor_files()","create_with()","created?()","creator?()","credentials_path()","critical=()","critical?()","crl=()","crls()","crls=()","crmode()","cross_reference()","crypt()","csrf_meta_tag()","csrf_meta_tags()","ctime()","ctime()","ctime()","ctime()","ctime()","ctime()","ctlmethods()","ctrl_cmd()","ctype()","ctype=()","current()","current()","current()","current()","current()","current()","current=()","current_cycle()","current_database()","current_database()","current_group()","current_hash()","current_hash()","current_line()","current_line()","current_page?()","current_savepoint_name()","current_schema()","current_scope()","current_section()","current_server()","curry()","curs_set()","curve_name()","curx()","cury()","custom()","custom_dir()","custom_dir()","custom_dir()","custom_method_collection_url()","cvs_url()","cvs_url()","cwday()","cweek()","cwyear()","cycle()","cycle()","cycle()","d()","daemon()","daemon()","dangerous_attribute_method?()","dangerous_attribute_method?()","dasherize()","dasherize()","data()","data()","data()","data()","data()","data()","data()","data()","data=()","data_column()","data_column_name()","data_column_name()","data_column_size_limit()","data_type()","database_configuration()","database_gemfile_entry()","database_yml()","datadir()","date()","date()","date=()","date=()","date=()","date=()","datetime()","date_select()","date_select()","datetime_format()","datetime_format=()","datetime_select()","datetime_select()","day()","day()","day()","day=()","day_fraction()","days()","days_in_month()","days_to_week_start()","days_to_week_start()","db()","dclone()","dclone()","dclone()","dclone()","dclone()","deafen()","debug()","debug()","debug()","debug()","debug()","debug()","debug=()","debug=()","debug=()","debug=()","debug?()","debug?()","debug?()","debug?()","debug_command()","debug_eval()","debug_funcname()","debug_level=()","debug_method_info()","debug_msg()","debug_output=()","debug_output=()","debug_print_help()","debug_protected_attribute_removal()","debug_silent_eval()","debug_thread_info()","debug_variable_info()","debugger()","decode()","decode()","decode()","decode()","decode()","decode()","decode()","decode64()","decode64()","decode64()","decode_all()","decode_credentials()","decode_credentials()","decode_credentials_header()","decode_utf7()","decode_www_form()","decode_www_form_component()","decoded()","decompose()","decompose_codepoints()","decompress()","deconstantize()","deconstantize()","decrement()","decrement()","decrement()","decrement()","decrement()","decrement!()","decrement_counter()","decrement_open_transactions()","decrypt()","decrypt()","decrypt()","decrypt_and_verify()","deep_clone()","deep_dup()","deep_merge()","deep_merge!()","deep_munge()","def_array_element()","def_atom_persons()","def_atom_text_construct()","def_builtin_commands()","def_class()","def_class_accessor()","def_class_accessor()","def_classed_element()","def_classed_element_without_accessor()","def_classed_elements()","def_convert()","def_corresponded_attr_reader()","def_corresponded_attr_writer()","def_csv_accessor()","def_csv_element()","def_delegator()","def_delegator()","def_delegators()","def_delegators()","def_e2message()","def_e2message()","def_e2message()","def_e2message()","def_element_class_accessor()","def_elements_class_accessor()","def_elements_class_accessor()","def_else_enc()","def_erb_method()","def_exception()","def_exception()","def_exception()","def_exception()","def_extend_command()","def_extend_command()","def_extend_command()","def_extend_command()","def_head_option()","def_iconv_convert()","def_inspector()","def_instance_delegator()","def_instance_delegators()","def_method()","def_module()","def_notifier()","def_notifier()","def_option()","def_other_element()","def_other_element_without_accessor()","def_post_proc()","def_pre_proc()","def_prog_mode()","def_rule()","def_rules()","def_same_enc()","def_single_delegator()","def_single_delegators()","def_system_command()","def_system_command()","def_tail_option()","def_to_euc_jp_from_iso_2022_jp()","def_to_euc_jp_from_shift_jis()","def_to_euc_jp_from_utf_8()","def_to_iso_2022_jp_from_euc_jp()","def_to_iso_8859_1_from_utf_8()","def_to_shift_jis_from_euc_jp()","def_to_shift_jis_from_utf_8()","def_to_utf_8_from_euc_jp()","def_to_utf_8_from_iso_8859_1()","def_to_utf_8_from_shift_jis()","def_token()","def_uconv_convert_if_can()","def_yes_clean_other_accessor()","def_yes_other_accessor()","default()","default()","default()","default()","default()","default()","default()","default()","default()","default=()","default=()","default_acl()","default_action()","default_aliases_for_option()","default_argc_limit()","default_bindir()","default_charset=()","default_dir()","default_event_sources()","default_exec_format()","default_executable()","default_external()","default_external=()","default_for_option()","default_generator_root()","default_id_conv()","default_inspect()","default_inspect()","default_internal()","default_internal=()","default_load_limit()","default_middleware_stack()","default_middleware_stack()","default_ole_types()","default_options()","default_options()","default_parser()","default_parser=()","default_path()","default_pop3_port()","default_pop3_port()","default_pop3_port()","default_pop3_port()","default_pop3s_port()","default_pop3s_port()","default_pop3s_port()","default_pop3s_port()","default_port()","default_port()","default_port()","default_port()","default_port()","default_port()","default_port()","default_port()","default_port()","default_port()","default_primary_key_type()","default_proc()","default_proc=()","default_record_separator()","default_record_separator=()","default_render()","default_render()","default_rubygems_dirs()","default_safe_level()","default_scope()","default_sequence_name()","default_source_root()","default_sources()","default_src_encoding()","default_ssl_context()","default_ssl_context()","default_ssl_port()","default_ssl_port()","default_submission_port()","default_submission_port()","default_system_path()","default_system_path=()","default_system_source_cache_dir()","default_timezone()","default_title=()","default_tls_port()","default_tls_port()","default_url_options()","default_url_options=()","default_user_source_cache_dir()","default_value()","default_value_for_option()","defaults()","defaults()","defaults_str()","defaults_str()","define()","define()","define()","define()","define()","define_aliases()","define_aliases()","define_aliases()","define_attribute_method()","define_attribute_methods()","define_attribute_methods()","define_callbacks()","define_callbacks()","define_finalizer()","define_head()","define_method__attribute()","define_method_attribute()","define_method_attribute()","define_method_attribute=()","define_method_attribute=()","define_model_callbacks()","define_module_function()","define_singleton_method()","define_tail()","define_task()","define_task()","defined_app_const_base()","defined_app_const_base?()","defined_app_name()","defined_in?()","definition()","definition()","definition()","definition()","deflate()","deflate()","deflate()","deflate()","degree()","delch()","delch()","delegate()","delegate()","delegate()","delegate_to_scoped_klass()","delegating_block()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete!()","delete!()","delete?()","delete?()","delete_all()","delete_all()","delete_all()","delete_all()","delete_all()","delete_all()","delete_all()","delete_all()","delete_all()","delete_all()","delete_all()","delete_all()","delete_at()","delete_at()","delete_attribute()","delete_caller()","delete_cookie()","delete_element()","delete_entry()","delete_entry()","delete_field()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_key()","delete_legacy_args()","delete_matched()","delete_matched()","delete_matched()","delete_matched()","delete_namespace()","delete_observer()","delete_observers()","delete_passwd()","delete_passwd()","delete_responses_to_replace()","delete_sql()","delete_unless_alive()","delete_value()","deleted?()","deleteln()","deleteln()","deliver()","demodulize()","demodulize()","denominator()","denominator()","denominator()","denominator()","denominator()","deny?()","deny?()","deny?()","depend_rules()","dependencies()","dependencies_ok?()","dependency_order()","dependent_gems()","dependent_specs()","deprecate()","deprecate()","deprecate()","deprecate_methods()","deprecated_method_warning()","deq()","deq()","deq()","dequote()","desc()","descend()","descendants()","descendants()","descends_from_active_record?()","description()","description()","description=()","destination_encoding()","destination_encoding()","destination_encoding()","destination_encoding_name()","destination_encoding_name()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_all()","destroy_session()","destroyed?()","det()","det()","det_e()","detach()","detached()","detached=()","detached?()","detail_args_for()","details_for_lookup()","detect()","detect_implicit()","determinant()","determinant()","determinant_e()","determine_install_method()","dev()","dev_major()","dev_minor()","development_dependencies()","dfdxi()","dh_compute_key()","diagonal()","diagonal?()","diff()","difference()","digest()","digest()","digest()","digest()","digest()","digest()","digest!()","digest_length()","digest_length()","digest_length()","dir()","dir()","dir()","dir()","dir_config()","direct_descendants()","direct_descendants()","directory?()","directory?()","directory?()","directory?()","directory?()","directory?()","dirname()","dirname()","dirname()","dirs()","dirs=()","dirties_query_cache()","disable()","disable()","disable()","disable_cache()","disable_close()","disable_query_cache!()","disable_referential_integrity()","disable_ssl()","disable_ssl()","disable_ssl()","disable_ssl()","disable_ssl()","disable_ssl()","disable_ssl()","disable_ssl()","disable_ssl()","disable_ssl()","disable_starttls()","disable_starttls()","disable_tls()","disable_tls()","disabled_for?()","disabled_for?()","disabled_observer_stack()","disabled_observers()","disasm()","disasm()","disassemble()","disassemble()","discard()","discard_ilseq=()","discard_ilseq?()","disconnect()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnected?()","disconnecting()","dispatch()","dispid()","display()","display()","display()","display()","display()","display()","display?()","display_attributes()","display_class()","display_error_message()","display_errors()","display_expression()","display_expressions()","display_frames()","display_list()","display_method()","display_name()","display_names()","display_prerequisites()","display_tasks_and_comments()","distance()","distance_of_time_in_words()","distance_of_time_in_words_to_now()","distinct()","div()","div()","div()","div()","div_for()","divide()","divmod()","divmod()","divmod()","divmod()","divmod()","dlload()","dlopen()","dlunwrap()","dlwrap()","dn()","dn=()","do_connect()","do_get()","do_get()","do_get()","do_get()","do_get()","do_get()","do_get()","do_head()","do_head()","do_options()","do_options()","do_options()","do_options()","do_post()","do_post()","do_post()","do_post()","do_post()","do_aliases()","do_attrs()","do_classes()","do_constants()","do_includes()","do_methods()","do_not_reverse_lookup()","do_not_reverse_lookup()","do_not_reverse_lookup=()","do_not_reverse_lookup=()","do_not_reverse_lookup=()","do_nothing()","do_reply()","do_validate()","do_validate=()","do_write()","doc()","doc_dir()","doc_stats()","docs_for_menu()","doctype()","doctype()","doctype()","doctype()","doctype()","doctype?()","doctype_end()","document()","document()","document()","document()","document()","document()","document_children=()","document_self=()","document_to_str()","document_to_str()","documented?()","documented?()","documented?()","documents_by_section()","documents_flat()","dom_class()","dom_id()","domain()","done()","done()","done()","done()","done()","done?()","done_adding()","done_adding()","done_documenting=()","double()","double_fig()","doupdate()","down()","downcase()","downcase()","downcase()","downcase!()","download()","download()","download_reporter()","download_reporter()","download_to_cache()","downto()","downto()","dowrite()","drop()","drop()","drop_table()","drop_while()","drop_while()","dsa_sign_asn1()","dsa_verify_asn1()","dst?()","dst?()","dummy?()","dummy_makefile()","dummy_path()","dump()","dump()","dump()","dump()","dump()","dump()","dump()","dump()","dump()","dump_call()","dump_call()","dump_response()","dump_response()","dump_stream()","dup()","dup()","dup()","dup()","dup()","dup()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","dynamic_width()","dynamic_width_stty()","dynamic_width_tput()","e2mm_message()","e2mm_message()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each2()","each_active_object()","each_address()","each_address()","each_address()","each_address()","each_ancestor()","each_attribute()","each_attribute()","each_byte()","each_byte()","each_byte()","each_byte()","each_byte()","each_byte()","each_capitalized()","each_capitalized_name()","each_char()","each_char()","each_char()","each_char()","each_char()","each_child()","each_child()","each_classmodule()","each_codepoint()","each_codepoint()","each_codepoint()","each_codepoint()","each_cons()","each_const()","each_constant()","each_data()","each_element()","each_element_with_attribute()","each_element_with_text()","each_entry()","each_entry()","each_entry()","each_filename()","each_header()","each_include()","each_index()","each_index()","each_installed_parser()","each_installed_writer()","each_key()","each_key()","each_key()","each_key()","each_key()","each_key()","each_key()","each_key()","each_line()","each_line()","each_line()","each_line()","each_line()","each_line()","each_line()","each_mail()","each_mail()","each_mail()","each_mail()","each_method()","each_name()","each_name()","each_name()","each_name()","each_name()","each_name_of()","each_object()","each_option()","each_option()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_parent()","each_prime()","each_recursive()","each_resource()","each_section()","each_slice()","each_strongly_connected_component()","each_strongly_connected_component_from()","each_subclass_array()","each_top_level_statement()","each_value()","each_value()","each_value()","each_value()","each_value()","each_value()","each_value()","each_value()","each_value()","each_with_index()","each_with_index()","each_with_index()","each_with_object()","each_with_object()","each_with_object()","eager_autoload()","eager_autoload!()","eager_load()","eager_load()","eager_load!()","eager_load!()","eager_load_paths()","eager_loading?()","echo()","echo()","echo=()","echo?()","edit()","egid()","egid=()","ehlo()","ehlo()","eid()","eid()","eigen()","eigensystem()","eigenvalue_matrix()","eigenvalues()","eigenvector_matrix()","eigenvector_matrix_inv()","eigenvectors()","ele()","element()","element()","element()","element()","element=()","element_initialize_arguments?()","element_name()","element_path()","element_path()","elementdecl()","elementdecl()","elementdecl?()","elements()","elements_to_f()","elements_to_f()","elements_to_i()","elements_to_i()","elements_to_r()","elements_to_r()","emacs_editing_mode()","emacs_editing_mode?()","email_field()","email_field_tag()","email_to_name()","emitted_hidden_id?()","empty()","empty()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty_directory_with_gitkeep()","empty_insert_statement_value()","empty_insert_statement_value()","emulate_booleans()","enable()","enable()","enable()","enable_close()","enable_config()","enable_query_cache!()","enable_ssl()","enable_ssl()","enable_ssl()","enable_ssl()","enable_ssl()","enable_ssl()","enable_ssl()","enable_ssl()","enable_ssl()","enable_ssl()","enable_starttls()","enable_starttls()","enable_starttls_auto()","enable_starttls_auto()","enable_tls()","enable_tls()","enable_warnings()","enabled()","enabled=()","enabled?()","enabled?()","enc_key()","enclose()","enclosed?()","encode()","encode()","encode()","encode()","encode()","encode()","encode()","encode()","encode()","encode!()","encode!()","encode64()","encode64()","encode64()","encode64s()","encode_credentials()","encode_credentials()","encode_credentials()","encode_fallback()","encode_json()","encode_json()","encode_json()","encode_json()","encode_json()","encode_json()","encode_json()","encode_utf7()","encode_with()","encode_with()","encode_with()","encode_with()","encode_with()","encode_www_form()","encode_www_form_component()","encoded()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding=()","encoding=()","encoding=()","encoding=()","encoding_aware?()","encrypt()","encrypt()","encrypt()","encrypt_and_sign()","end()","end()","end()","endelement()","endelement()","end_accepting()","end_accepting()","end_accepting()","end_document()","end_document()","end_document()","end_document()","end_document()","end_element()","end_element()","end_element?()","end_mapping()","end_mapping()","end_of_day()","end_of_day()","end_of_day()","end_of_hour()","end_of_hour()","end_of_month()","end_of_month()","end_of_quarter()","end_of_quarter()","end_of_week()","end_of_week()","end_of_year()","end_of_year()","end_prefix_mapping()","end_sequence()","end_sequence()","end_stream()","end_stream()","end_stream()","end_transaction()","end_with?()","ended?()","endgrent()","endpoint()","endpoint()","endpwent()","engine()","engine=()","engines()","engines()","england()","enhance()","enhance_with_matching_rule()","enlist_fixture_connections()","enq()","enq()","enq()","ensure_dependencies_met()","ensure_dependency()","ensure_gem_subdirectories()","ensure_required_ruby_version_met()","ensure_required_rubygems_version_met()","ensure_ssl_available()","ensure_xml_content()","entity()","entity()","entity()","entity()","entity?()","entity_class()","entity_class()","entity_expansion_limit()","entity_expansion_limit=()","entity_expansion_text_limit()","entity_expansion_text_limit()","entity_expansion_text_limit=()","entity_expansion_text_limit=()","entitydecl()","entitydecl()","entitydecl?()","entries()","entries()","entries()","entry()","enum_for()","enumerate()","env()","env()","env=()","env_config()","env_config()","env_filter()","environment()","environment()","environment=()","eof()","eof()","eof()","eof()","eof()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eos?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql_with_coercion()","eql_without_coercion()","equal?()","erf()","erfc()","errno()","error()","error()","error()","error()","error()","error()","error()","error?()","error?()","error?()","error?()","error_bytes()","error_char()","error_message()","error_message()","error_number()","error_wrapping()","errors()","errors()","errors()","errors()","escape()","escape()","escape()","escape()","escape()","escape()","escape()","escape()","escape()","escape()","escape8bit()","escapeelement()","escapehtml()","escape_bytea()","escape_element()","escape_form()","escape_glob_chars()","escape_html()","escape_javascript()","escape_once()","escape_path()","establish_connection()","establish_connection()","etag=()","etag_matches?()","euid()","euid=()","eval()","eval()","eval()","eval_history=()","eval_input()","evaluate()","evaluate()","evaluate_default_scope()","even?()","even?()","even?()","event?()","event_interface()","event_type()","exabyte()","exabytes()","examine()","except()","except()","except!()","exception()","exception()","exception()","exception_class()","excerpt()","exclude()","exclude?()","exclude?()","exclude_end?()","exclusive()","excn_handle()","exec()","exec()","exec_delete()","exec_delete()","exec_delete()","exec_delete()","exec_delete()","exec_format()","exec_if()","exec_insert()","exec_insert()","exec_query()","exec_query()","exec_query()","exec_query()","exec_query()","exec_script_rails!()","exec_update()","exec_update()","exec_update()","exec_update()","exec_update()","exec_without_stmt()","executable()","executable=()","executable?()","executable?()","executable?()","executable?()","executable_real?()","executable_real?()","executable_real?()","executable_real?()","executables()","executables=()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute_and_free()","execute_hook()","execute_if_updated()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","existent()","existent_directories()","exists?()","exists?()","exists?()","exists?()","exists?()","exists?()","exists?()","exit()","exit()","exit()","exit()","exit()","exit!()","exit!()","exit_on_failure?()","exit_value()","exited?()","exited?()","exitstatus()","exp()","exp()","exp()","exp!()","expand()","expand()","expand_cache_key()","expand_class()","expand_environ()","expand_hash_conditions_for_aggregates()","expand_hexstring()","expand_name()","expand_pair()","expand_path()","expand_path()","expand_path()","expand_path()","expand_ref_in()","expand_tabs()","expand_value()","expanded()","expanded_name()","expect()","expected()","expected()","expected()","expected()","expected()","expected()","expected_response()","expire()","expire_action()","expire_fragment()","expire_page()","expire_page()","expired?()","expired?()","expires()","expires=()","expires_at()","expires_at=()","expires_in()","expires_now()","explain()","explain()","explain()","explain()","exponent()","export()","export()","export()","expunge()","ext()","ext()","extend()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extended()","extended()","extended()","extended()","extended()","extending()","extension()","extension()","extension()","extension()","extension()","extensions()","extensions()","extensions()","extensions()","extensions()","extensions=()","extensions=()","extensions=()","extensions=()","extensions=()","extern()","external_encoding()","external_encoding()","external_encoding()","externals()","externals=()","extify()","extname()","extname()","extra_args()","extra_args=()","extra_rdoc_files()","extra_rdoc_files=()","extract()","extract()","extract!()","extract_annotations_from()","extract_call_seq()","extract_comment()","extract_domain()","extract_files()","extract_options!()","extract_schema_and_table()","extract_session_id()","extract_subdomain()","extract_subdomains()","extractable_options?()","extractable_options?()","extractable_options?()","extractable_options?()","facility()","fail()","fail()","fail()","failed()","fallbacks()","false()","family()","family()","family_addrinfo()","fast_generate()","fastmode=()","fatal","fatal()","fatal()","fatal?()","fatal?()","fault()","favicon_link_tag()","fcntl()","fcntl()","fcntl()","fdatasync()","fdiv()","fdiv()","fdiv()","fdiv()","fdiv()","fdiv()","feed()","feed_info()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch_dir()","fetch_file()","fetch_http()","fetch_https()","fetch_path()","fetch_server()","fetch_size()","fetch_spec()","fetch_with_errors()","fetcher()","fetcher()","fiddle?()","field()","field?()","field_row?()","field_set_tag()","field_type()","fields()","fields_for()","fields_for()","fifth()","file()","file()","file()","file()","file?()","file?()","file?()","file?()","file?()","file_dir()","file_field()","file_field()","file_field()","file_field_tag()","file_input?()","file_name()","file_name()","file_path()","filename()","filename()","filename()","filename_quote_characters()","filename_quote_characters=()","fileno()","fileno()","fileno()","files()","files()","files=()","files_hash()","fill()","fill_breakable()","filter()","filter()","filter()","filter()","filter=()","filter_backtrace()","filter_backtrace()","filter_by()","filter_methods()","filtered_env()","filtered_options()","filtered_parameters()","filtered_path()","filtered_query_string()","final()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find_active()","find_alias_comment()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all_by_name()","find_all_template()","find_ancestor_local_symbol()","find_attr_comment()","find_attribute()","find_attribute_named()","find_body()","find_by_attributes()","find_by_name()","find_by_path()","find_by_session_id()","find_by_session_id()","find_by_sql()","find_class()","find_class_comment()","find_class_method_named()","find_class_named()","find_class_named()","find_class_named_from()","find_class_or_module()","find_class_or_module()","find_cmd()","find_command()","find_command_possibilities()","find_const_comment()","find_constant_named()","find_each()","find_enclosing_module_named()","find_executable()","find_external_alias()","find_external_alias_named()","find_file_named()","find_file_named()","find_files()","find_first()","find_first_recursive()","find_gems_with_sources()","find_header()","find_in()","find_in_batches()","find_in_cache()","find_in_unresolved()","find_in_unresolved()","find_in_unresolved_tree()","find_in_unresolved_tree()","find_include_file()","find_index()","find_index()","find_index()","find_instance_method_named()","find_last()","find_library()","find_local_symbol()","find_local_symbol()","find_matching()","find_matching_with_errors()","find_method()","find_method_named()","find_methods()","find_modifiers()","find_module_named()","find_module_named()","find_module_named()","find_name()","find_name()","find_one()","find_or_instantiator_by_attributes()","find_override_comment()","find_paths()","find_proxy()","find_rakefile_location()","find_reverse_dependencies()","find_root_with_flag()","find_runnable()","find_some()","find_spec_by_name_and_version()","find_spec_for_file()","find_symbol()","find_symbol_module()","find_system_command()","find_template()","find_type()","find_tzinfo()","find_unique()","find_with_associations()","find_with_ids()","find_zone()","find_zone!()","finder?()","finger()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish_all_jobs()","finish_template()","finish_template()","finished?()","finished?()","finished?()","finished_documents()","finite?()","finite?()","first()","first()","first()","first()","first()","first()","first()","first()","first()","first()","first!()","first?()","first?()","first?()","first_or_create()","first_or_create!()","first_or_initialize()","fix()","fix_basic_object_inheritance()","fixed_encoding?()","fixture_is_cached?()","fixtures()","fixup()","flags=()","flash()","flash()","flat_map()","flatten()","flatten()","flatten()","flatten!()","flatten!()","flock()","floor()","floor()","floor()","floor()","floor()","floor()","flow()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush_all!()","flush_cache()","flush_left()","flush_next_in()","flush_next_out()","flush_sessions()","flushable_loggers()","fnmatch()","fnmatch()","fnmatch?()","fnmatch?()","font_path()","font_path()","for()","for_cache()","for_class()","for_fd()","for_fd()","for_files()","for_id()","force_documentation=()","force_encoding()","force_quotes?()","force_ssl()","foreach()","foreach()","foreach()","foreach()","foreach()","foreach()","foreach()","foreach()","foreach()","foreign_key()","foreign_key()","fork()","fork()","fork()","form()","form_authenticity_param()","form_authenticity_token()","form_data=()","form_data?()","form_for()","form_tag()","format()","format()","format()","format()","format()","format()","format()","format()","format()","format=()","format=()","format_date()","format_datetime()","format_duration()","format_frame()","format_paragraph()","format_text()","formats()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_program_filename()","formatted_program_filename()","formatter()","formatter()","fortnight()","fortnights()","forty_two()","fourth()","frac()","fragment=()","fragment_cache_key()","fragment_exist?()","frame_set_pos()","framework_trace()","framework_version()","frameworks()","free()","free()","free()","free=()","free=()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze_with_memoizable()","fresh?()","fresh_when()","frexp()","friday?()","friday?()","friendly_path()","from()","from()","from()","from()","from_array()","from_file_by_path()","from_file_by_path()","from_gems_in()","from_installed_gems()","from_io()","from_io()","from_json()","from_json()","from_module()","from_now()","from_now()","from_prime_division()","from_rails_root()","from_source_index()","from_specs()","from_trusted_xml()","from_xml()","from_xml()","from_xml()","from_yaml()","front()","front()","frozen?()","frozen?()","frozen?()","fsync()","fsync()","ftype()","ftype()","ftype()","full?()","full_gem_path()","full_message()","full_messages()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name=()","full_old_name()","full_trace()","fullpath()","fully_documented?()","fully_documented?()","fully_expanded_name()","function()","future?()","future?()","future?()","future?()","g_length()","g_pack()","g_unpack()","gamma()","garbage_collect()","garbage_collect()","gather_dependencies()","gather_files()","gcd()","gcdlcm()","gem()","gem()","gem()","gem_dir()","gem_dir()","gem_file_list()","gem_for_database()","gem_group()","gem_original_require()","gem_paths()","gem_signature()","gemdirs()","gemfile()","gemfile()","gems_dir()","gemspec()","gen_relative_url()","gen_sub_directories()","gen_url()","gen_url()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate_bin()","generate_bin_script()","generate_bin_symlink()","generate_class_files()","generate_default_dirs()","generate_event()","generate_file_files()","generate_index()","generate_index()","generate_key()","generate_key!()","generate_line()","generate_message()","generate_method_for_mime()","generate_prime()","generate_railtie_name()","generate_rdoc()","generate_ri()","generate_sid()","generate_test_dummy()","generate_windows_script()","generated_external_attribute_methods()","generated_feature_methods()","generation_hook()","generator()","generator_descriptions()","generator_dir()","generator_name()","generators()","generic?()","get()","get()","get()","get()","get()","get()","get()","get()","get()","get()","get()","get()","get()","get()","get2()","get2()","get?()","get_all_gem_names()","get_attribute()","get_attribute_ns()","get_attributes()","get_bool()","get_builder_class()","get_builder_class()","get_byte()","get_class_or_module()","get_class_specification()","get_constant()","get_constant_with_optional_parens()","get_default_handler()","get_elements()","get_fields()","get_file_and_line_from_caller()","get_first()","get_hosts_path()","get_initial_token()","get_instance()","get_instance()","get_instance()","get_metadata()","get_methods()","get_methods()","get_namespace()","get_one_gem_name()","get_one_optional_argument()","get_option()","get_passwd()","get_passwd()","get_passwd()","get_path()","get_print()","get_print()","get_proxy_from_env()","get_readed()","get_resolv_info()","get_response()","get_response()","get_screen_size()","get_service_hook()","get_session()","get_sorted_module_list()","get_svninfo()","get_symbol_or_name()","get_text()","get_thread()","get_tk()","get_tk_until()","get_tkread()","get_valid_ip()","get_value()","getacl()","getaddress()","getaddress()","getaddress()","getaddress()","getaddress()","getaddress_orig()","getaddresses()","getaddresses()","getaddresses()","getaddresses()","getaddrinfo()","getaddrinfo()","getbinaryfile()","getbkgd()","getbyte()","getbyte()","getbyte()","getbyte()","getbyte()","getbyte()","getc()","getc()","getc()","getc()","getc()","getc()","getc()","getc_of_rests()","getch()","getch()","getch()","getch()","getch()","getdir()","getegid()","geteuid()","getgid()","getgm()","getgm()","getgrent()","getgrgid()","getgrnam()","gethostbyaddr()","gethostbyname()","gethostbyname()","gethostname()","getlocal()","getlocal()","getlogin()","getmouse()","getname()","getname()","getname()","getname()","getnameinfo()","getnameinfo()","getnames()","getnames()","getnames()","getnames()","getopts()","getopts()","getopts()","getpeereid()","getpeername()","getpgid()","getpgrp()","getpriority()","getpty()","getpwent()","getpwnam()","getpwuid()","getquota()","getquotaroot()","getresource()","getresources()","getrlimit()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","getservbyname()","getservbyport()","getservername()","getservername()","getsockname()","getsockopt()","getsockopt()","getstr()","getstr()","getter()","gettextfile()","getuid()","getutc()","getutc()","getutc()","getwd()","getwd()","getwd()","gid()","gid()","gid=()","gigabyte()","gigabytes()","git()","git_keep()","git_url?()","gitignore","gitignore","gitignore()","gitignore()","glob()","glob()","glob()","global_plugins()","global_variables()","gm()","gmt?()","gmt?()","gmt_offset()","gmt_offset()","gmtime()","gmtime()","gmtoff()","gmtoff()","grant_privilege()","grant_privilege()","great_job()","gregorian()","gregorian?()","gregorian_leap?()","grep()","group()","group()","group()","group()","group()","group()","group=()","group_by()","group_by()","group_sub()","grouped_collection_select()","grouped_collection_select()","grouped_options_for_select()","groups()","groups()","groups=()","grpowned?()","grpowned?()","grpowned?()","grpowned?()","gsub()","gsub()","gsub!()","guard_inspect_key()","guess()","guess()","guess()","guid()","guid()","guide()","gunzip()","gzip()","gzip()","h()","h()","h()","ha1()","halted_callback()","handle()","handle_arguments()","handle_attr()","handle_class_module()","handle_constants()","handle_directive()","handle_ifdefs_in()","handle_method()","handle_options()","handle_options()","handle_pipe()","handle_singleton()","handle_special_crossref()","handle_special_hyperlink()","handle_special_hyperlink()","handle_special_suppressed_crossref()","handle_special_tidylink()","handle_tab_width()","handle_unverified_request()","handler()","handler()","handler=()","handler_for_rescue()","handlers()","handles?()","handles_encoding?()","haschildnodes()","has_and_belongs_to_many()","has_attributes?()","has_colors?()","has_elements?()","has_errors?()","has_expires?()","has_index?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_many()","has_migrations?()","has_name?()","has_name?()","has_next?()","has_one()","has_rdoc()","has_rdoc=()","has_rdoc?()","has_secure_password()","has_text?()","has_uniq_index?()","has_unit_tests?()","has_value?()","has_value?()","has_value?()","has_value?()","has_value?()","has_value?()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash_old()","have_author?()","have_author?()","have_author?()","have_author?()","have_children_elements()","have_const()","have_content?()","have_framework()","have_func()","have_header()","have_library()","have_macro()","have_rakefile()","have_required_elements?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_struct_member()","have_type()","have_var()","have_xml_content?()","have_xml_content?()","have_xml_content?()","having()","head()","head()","head()","head()","head2()","head2()","head?()","header()","header()","header?()","header_convert()","header_converters()","header_row?()","header_row?()","headers()","headers()","headers()","headers()","headers()","headers()","headers=()","heading()","hello()","helo()","helo()","help()","help()","help()","help()","help-message","help-message","helpcontext()","helpcontext()","helper()","helper()","helper_attr()","helper_method()","helpers()","helpers()","helpers_paths()","helpfile()","helpfile()","helpstring()","helpstring()","here?()","here?()","hermitian?()","hex()","hex()","hexdigest()","hexdigest()","hexdigest()","hexdigest()","hexdigest!()","hexencode()","hidden()","hidden_actions()","hidden_field()","hidden_field()","hidden_field_tag()","hidden_namespaces()","hide_action()","hide_namespace()","hide_namespaces()","hierarchical?()","hierarchical?()","highlight()","history_file()","history_file=()","home()","home_workspace()","hook_for()","host()","host()","host()","host=()","host=()","host_with_port()","hostname()","hostname=()","hour()","hour()","hour=()","hour=()","hour=()","hours()","href=()","html()","html?()","html_escape()","html_escape()","html_escape()","html_list_name()","html_name()","html_name()","html_safe()","html_safe?()","html_safe?()","html_safe?()","hton()","http_basic_authenticate_with()","http_default_port()","http_default_port()","http_url()","http_url()","httpd()","httpdate()","httpdate()","httpdate()","httpdate()","httpdate()","httpdate()","https?()","https_default_port()","https_default_port()","human()","human()","human_attribute_name()","human_name()","human_name()","humanize()","humanize()","hypot()","i()","i18n_scope()","i18n_scope()","ipimethods()","icon()","icon=()","iconv()","iconv()","iconv()","id()","id()","id()","id()","id()","id()","id2name()","id=()","id=()","id?()","id_from_response()","ident()","identical?()","identical?()","identical?()","identify()","identify_comment()","identify_gvar()","identify_here_document()","identify_identifier()","identify_number()","identify_quotation()","identify_string()","identify_string_dvar()","identity()","identity()","identity_map?()","idle()","idle_done()","idlok()","if_modified_since()","if_none_match()","iflush()","ignore()","ignore_unknown_element()","ignore_unknown_element=()","ignore_whitespace_nodes()","ignored?()","imag()","imag()","imag()","image()","image_alt()","image_button()","image_path()","image_path()","image_size=()","image_submit_tag()","image_tag()","imaginary()","imaginary()","imaginary()","img()","implemented_ole_types()","import_function()","import_symbol()","import_value()","in()","in()","in()","in?()","in_char_class?()","in_clause_length()","in_groups()","in_groups_of()","in_namespace()","in_path?()","in_rails_application?()","in_rails_application_subdirectory?()","in_service?()","in_time_zone()","in_time_zone()","in_time_zone()","in_tt?()","inactivate()","inc()","inc()","inch()","inch()","include()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include_all_railties?()","include_fallbacks_module()","include_file()","include_tag()","include_with_range?()","included()","included()","included()","included()","included()","included_modules()","includes()","incompatible_argument_styles()","incompatible_argument_styles()","incomplete_input?()","increment()","increment()","increment()","increment()","increment()","increment!()","increment_counter()","increment_open_transactions()","indent()","indent()","indent_text()","indentation()","indentation=()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index_by()","index_exists?()","index_exists?()","index_helper()","index_in_parent()","index_name()","index_name_exists?()","index_name_for_remove()","index_name_length()","index_name_length()","index_signature()","indexes()","indexes_per_table()","indir()","infinite?()","infinite?()","infinity?()","inflate()","inflate()","inflate()","inflate()","inflections()","info()","info()","info()","info()","info?()","info?()","info?()","inheritable_copy()","inheritance_column()","inheritance_column=()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited_array_reader()","inherited_base()","inherited_base()","inherited_hash_reader()","inherited_reader()","init()","init()","init()","init()","init_color()","init_config()","init_error()","init_fallbacks()","init_gemspecs()","init_pair()","init_save_history()","init_screen()","init_tags()","init_tags()","init_tags()","init_tags()","init_with()","initgroups()","initialize()","initialize!()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_dup()","initialize_dup()","initialize_dup()","initialize_generators()","initialize_http_header()","initialize_i18n()","initialize_input()","initialize_methods_etc()","initialize_schema_migrations_table()","initialize_sid()","initialize_template_class()","initialize_tracer()","initialized=()","initialized?()","initializer()","initializer()","initializers()","initializers()","initializers()","initializers_chain()","initializers_for()","inject()","inject()","inject_index_options()","inject_options()","inline_html?()","inline_html?()","inline_other?()","inline_other?()","inline_other_base64?()","inline_other_base64?()","inline_other_text?()","inline_other_text?()","inline_other_xml?()","inline_other_xml?()","inline_text?()","inline_text?()","inline_xhtml?()","inline_xhtml?()","inner_product()","ino()","inplace_mode()","inplace_mode=()","input()","input=()","input=()","input=()","input=()","input=()","input?()","inquiry()","insch()","insch()","insensitive_attributes()","insert()","insert()","insert()","insert()","insert()","insert()","insert()","insert_after()","insert_after()","insert_before()","insert_before()","insert_fixture()","insert_output()","insert_sql()","insert_sql()","insert_sql()","insertln()","insertln()","inside_template()","inside_template?()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect?()","inspect_last_value()","inspect_mode=()","inspect_sockaddr()","inspect_value()","install()","install()","install()","install()","install()","install()","install()","install_acl()","install_alias_method()","install_alias_method()","install_builtin_commands()","install_class_name()","install_date_element()","install_dublin_core()","install_executables()","install_extend_commands()","install_extend_commands()","install_extend_commands()","install_extend_commands()","install_get_attribute()","install_get_text_element()","install_have_attribute_element()","install_have_child_element()","install_have_children_element()","install_id_conv()","install_image_favicon()","install_image_item()","install_indicies()","install_lib()","install_list()","install_model()","install_must_call_validator()","install_ns()","install_rdoc()","install_rdoc()","install_ri()","install_siginfo_handler()","install_siginfo_handler()","install_system_commands()","install_system_commands()","install_taxo_topic()","install_taxo_topics()","install_text_element()","install_update_defaults_str()","installation_path()","installation_satisfies_dependency?()","installed?()","installed_spec_directories()","instance()","instance()","instance()","instance()","instance()","instance()","instance_attributes()","instance_delegate()","instance_eval()","instance_exec()","instance_method()","instance_method_already_implemented?()","instance_method_already_implemented?()","instance_method_list()","instance_method_names()","instance_methods()","instance_methods()","instance_of?()","instance_variable_defined?()","instance_variable_get()","instance_variable_names()","instance_variable_set()","instance_variables()","instantiate()","instantiate_all_loaded_fixtures()","instantiate_fixtures()","instantiate_observers()","instantiator?()","instruction()","instruction()","instruction?()","instructions()","instrument()","instrument()","instrument()","instrument=()","instrument_fragment_cache()","instrumenter()","int()","int()","int()","int()","int()","int_from_prime_division()","integer?()","integer?()","interactive()","interface()","intern()","intern()","intern()","internal_encoding()","internal_encoding()","internal_encoding()","internal_methods()","interrupt()","interrupt()","intersection()","inv()","invalid?()","inverse()","inverse()","invert()","invert()","invert()","invert()","invert()","invert()","invert()","invert!()","investigation()","invkind()","invoke()","invoke()","invoke()","invoke()","invoke_kind()","invoke_task()","ioctl()","ioflush()","ip()","ip()","ip6_arpa()","ip6_int()","ip?()","ip_address()","ip_address_list()","ip_pktinfo()","ip_pktinfo()","ip_port()","ip_unpack()","ips_from()","ipv4?()","ipv4?()","ipv4_compat()","ipv4_compat?()","ipv4_loopback?()","ipv4_mapped()","ipv4_mapped?()","ipv4_multicast?()","ipv4_private?()","ipv6?()","ipv6?()","ipv6_linklocal?()","ipv6_loopback?()","ipv6_mc_global?()","ipv6_mc_linklocal?()","ipv6_mc_nodelocal?()","ipv6_mc_orglocal?()","ipv6_mc_sitelocal?()","ipv6_multicast?()","ipv6_pktinfo()","ipv6_pktinfo()","ipv6_pktinfo_addr()","ipv6_pktinfo_ifindex()","ipv6_sitelocal?()","ipv6_to_ipv4()","ipv6_unspecified?()","ipv6_v4compat?()","ipv6_v4mapped?()","ipv6only!()","irb()","irb()","irb()","irb_abort()","irb_at_exit()","irb_context()","irb_context()","irb_exit()","irb_exit()","irb_exit()","irb_level()","irb_load()","irb_load()","irb_load()","irb_original_method_name()","irb_original_method_name()","irb_require()","irb_require()","irregular()","isequal()","is_a?()","is_a?()","is_a?()","is_missing?()","is_missing?()","is_utf8?()","is_version_1_2?()","is_version_1_2?()","isatty()","isatty()","isdst()","isdst()","iseuc()","iseuc()","isjis()","isjis()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","isolate_namespace()","isolated?()","issetugid()","issjis()","issjis()","issuer()","issuer()","issuer()","issuer()","issuer=()","issuer=()","issuer_certificate=()","isutf8()","isutf8()","italy()","items()","items()","iterator?()","iv=()","j()","j()","jacobian()","javascript_gemfile_entry()","javascript_include_tag()","javascript_include_tag()","javascript_path()","javascript_path()","javascript_runtime_gemfile_entry()","javascript_tag()","javascripts()","jd()","jd()","jd()","jisx0301()","jisx0301()","jisx0301()","jisx0301()","jobs()","jobs()","jobs_exist?()","join()","join()","join()","join()","join()","join()","join()","join()","join()","join()","join_nowait()","join_nowait()","join_tags()","joined_includes_values()","joins()","joins_per_query()","json_creatable?()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_escape()","json_resource_errors()","julian()","julian?()","julian_leap?()","kconv()","kconv()","keep()","keep_alive?()","keep_alive?()","keep_if()","keep_if()","keep_if()","keep_if()","key()","key()","key()","key()","key()","key()","key=()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key_len=()","key_matcher()","key_value()","key_value()","keyname()","keypad()","keypad=()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys_with_inspector()","kill()","kill()","kill()","kill()","kill()","kill()","kill_job()","kilobyte()","kilobytes()","kind()","kind()","kind_of?()","kind_of?()","kind_of?()","klass()","klass()","known_attributes()","known_attributes()","l()","l()","l()","label()","label()","label_tag()","lambda()","lambda?()","lang()","last()","last()","last()","last()","last()","last()","last()","last()","last()","last!()","lastbuilddate=()","last_error()","last_error()","last_error()","last_error=()","last_inserted_id()","last_inserted_id()","last_inserted_id()","last_inserted_id()","last_match()","last_modified()","last_modified()","last_modified()","last_modified=()","last_modified?()","last_update()","last_update=()","latest_load_paths()","latest_rubygems_version()","latest_spec_for()","latest_specs()","latest_specs()","latest_specs()","latest_version_for()","launch()","layout()","lchmod()","lchmod()","lchown()","lchown()","lcm()","ld()","ldexp()","leap?()","leap?()","lease()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","level()","level()","level()","level()","level=()","level=()","level=()","level_notifier=()","levenshtein_distance()","lex()","lex()","lex_init()","lex_int2()","lgamma()","lib()","lib()","lib()","lib_dirs_for()","lib_dirs_glob()","lib_files()","library_name()","libyaml_version()","license()","license()","license=()","licenses()","licenses=()","limit()","limit()","limit()","limited_update_conditions()","limited_update_conditions()","line()","line()","line()","line_at()","line_buffer()","line_width()","line_width=()","lineno()","lineno()","lineno()","lineno()","lineno()","lineno=()","lineno=()","lineno=()","lineno=()","lines()","lines()","lines()","lines()","lines()","lines()","linger()","linger()","link()","link()","link()","link()","link()","link_files()","link_to()","link_to_function()","link_to_if()","link_to_unless()","link_to_unless_current()","links()","list()","list()","list()","list()","list()","list()","list()","list()","list()","list_end_for()","list_files_in_directory()","list_item_start()","list_known_classes()","list_methods_matching()","listen()","listen()","listen()","listen()","listen()","listen()","listen()","listen()","listener()","listener()","listener()","listener=()","listeners_for()","listening?()","ljust()","ljust()","ln()","ln()","ln_s()","ln_sf()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load_all!()","load_api_keys()","load_attributes_from_response()","load_cache()","load_call()","load_call()","load_class()","load_console()","load_console()","load_console()","load_documents()","load_env_plugins()","load_file()","load_file()","load_file()","load_gems_in()","load_gemspec()","load_generators()","load_generators()","load_history()","load_imports()","load_method()","load_method()","load_methods_matching()","load_mime_types()","load_modules()","load_path_insert_index()","load_paths()","load_plugin_files()","load_plugins()","load_private_key()","load_public_key()","load_rakefile()","load_rakefile()","load_rdoc()","load_rdoc()","load_response()","load_response()","load_runner()","load_runner()","load_runner()","load_seed()","load_session()","load_specification()","load_specs()","load_stream()","load_tasks()","load_tasks()","load_tasks()","load_yaml()","loaded?()","loaded?()","loaded_from=()","loaded_path?()","local()","local()","local()","local?()","local?()","local_address()","local_constant_names()","local_constants()","local_name()","local_name()","local_name=()","local_offset()","local_time()","local_to_utc()","local_variables()","locale()","locale=()","locale_charmap()","localize()","localize()","localtime()","localtime()","location()","location()","location=()","location=()","location_of_caller()","lock()","lock()","lock()","lock()","lock!()","locked?()","locking_column()","locking_column=()","locking_enabled?()","log()","log()","log()","log()","log()","log()","log()","log()","log()","log()","log()","log()","log()","log!()","log10()","log10()","log10!()","log2()","log2()","log2!()","log=()","log_level()","log_path()","log_process_action()","log_subscribers()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger=()","logger=()","logger?()","logging()","logging()","logging()","logging()","login()","login()","login()","logo()","logo=()","logout()","look_for_directives_in()","look_for_directives_in()","lookup()","lookup()","lookup()","lookup_ancestors()","lookup_by_extension()","lookup_context()","lookup_ring()","lookup_ring_any()","lookup_server()","lookup_store()","loop()","lower()","lower_triangular?()","ls()","ls()","lstat()","lstat()","lstat()","lstrip()","lstrip()","lstrip!()","lsub()","ludecomp()","lup()","lup_decomposition()","lusolve()","magnitude()","magnitude()","magnitude()","magnitude()","magnitude()","magnitude()","mail()","mail()","mail_to()","mailer()","mailer_name()","mailer_name()","mailfrom()","mailfrom()","mails()","mails()","mails()","mails()","main()","main()","main_irb()","main_thread()","main_type()","major_version()","major_version()","make()","make()","make()","make()","make_affine!()","make_destination_dirs()","make_expires()","make_link()","make_message()","make_partial_content()","make_passwd()","make_passwd()","make_passwd()","make_regexp()","make_switch()","make_symlink()","make_temp_directories()","make_thread_list()","make_tuple()","makedirs()","makedirs()","makedirs()","maker_target()","maker_target()","maker_target()","maker_target()","maker_target()","makers()","malloc()","malloc()","malloc()","malloc()","malloc()","malloc_allocated_size()","malloc_allocations()","manage_owners()","many?()","many?()","map()","map()","map()","map()","map()","map!()","map!()","map2()","map=()","map_gems_to_specs()","mark()","mark_for_destruction()","mark_version()","marked_for_destruction?()","markup()","markup_code()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_version()","mask()","mask()","mask!()","mask=()","mask_protected_sequences()","mass_assignment_authorizer()","mass_assignment_options()","mass_assignment_role()","mass_assignment_sanitizer=()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match?()","match?()","match?()","match_io()","match_to()","match_to_consume()","matched()","matched?()","matched_size()","matches?()","matches?()","matches?()","matches?()","matches?()","matches?()","matches?()","matches_for_glob()","matches_spec?()","matching_file?()","matching_files()","matching_paths()","matching_specs()","math_mode=()","mattr_accessor()","mattr_reader()","mattr_writer()","max()","max()","max()","max=()","max_by()","max_flag_count()","max_flag_count=()","maxgroups()","maxgroups=()","maximum()","maxx()","maxy()","mb_chars()","mday()","mday()","mdtm()","measure()","media_subtype()","media_subtype()","media_subtype()","media_subtype()","media_type()","megabyte()","megabytes()","member()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","members()","members()","memberwise()","memoize()","memoize_all()","memoized_ivar_for()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge!()","merge!()","merge!()","merge!()","merge!()","merge_options()","merged?()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message_loop()","meta_vars()","method()","method()","methodcall()","methodresponse()","method_added()","method_added()","method_defined?()","method_defined_within?()","method_document()","method_file()","method_for_action()","method_for_action()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_name()","method_names()","method_symbol()","method_type()","methods()","methods()","methods_by_type()","methods_matching()","middleware()","middleware()","middleware()","middleware()","midnight()","midnight()","midnight()","migrate()","migrate()","migration_template()","migrations_paths()","mime_split()","mime_type()","mime_type()","mime_type()","mime_type()","min()","min()","min()","min=()","min_by()","minimum()","minmax()","minmax_by()","minor()","minor_version()","minor_version()","minus_with_coercion()","minus_without_coercion()","minus_without_duration()","minute()","minute=()","minute=()","minutes()","missing_name()","missing_name?()","mjd()","mkcol()","mkcol()","mkdir()","mkdir()","mkdir()","mkdir()","mkdir()","mkdir()","mkdir()","mkdir_p()","mkmf()","mkpath()","mkpath()","mktime()","mktmpdir()","mode()","mode()","mode()","model_name()","models()","modifiable()","module()","module?()","module?()","module_eval()","module_exec()","module_namespacing()","modules()","modules()","modules()","modules_for_helpers()","modules_for_helpers()","modules_hash()","modules_hash()","modulo()","modulo()","modulo()","modulo()","modulo()","mon()","mon()","mon=()","mon_enter()","mon_exit()","mon_synchronize()","mon_try_enter()","monday()","monday()","monday?()","monday?()","month()","month()","month()","month=()","months()","months_ago()","months_ago()","months_since()","months_since()","mount()","mount()","mount_proc()","mountable?()","mountpoint?()","mouseinterval()","mousemask()","move()","move()","move()","move()","move()","ms()","mtime()","mtime()","mtime()","mtime()","mtime()","mtime()","mtime=()","mu_extended()","mu_lock()","mu_locked?()","mu_synchronize()","mu_try_lock()","mu_unlock()","mult()","multicall()","multicall2()","multicall2_async()","multicall_async()","multipart=()","multipart?()","multipart?()","multipart?()","multipart?()","multipart?()","multipart_form()","multiple_of?()","must_c_version()","must_call_validators()","mute()","mute()","mutex()","mv()","mv()","mysql2_connection()","mysql_socket()","n_bytes()","n_bytes()","n_bytes()","n_bytes()","n_jobs()","n_mails()","n_mails()","n_mails()","n_mails()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name=()","name=()","name=()","name_for_path()","name_for_path()","name_list()","name_prefix()","name_prefix()","name_regexp()","named_captures()","names()","names()","names()","names()","namespace()","namespace()","namespace()","namespace()","namespace()","namespace()","namespace()","namespace=()","namespace_context()","namespace_context=()","namespace_uri()","namespaced?()","namespaced_class_path()","namespaced_file_path()","namespaces()","namespaces()","namespaces=()","namespaces=()","nan?()","nan?()","native()","native_database_types()","native_database_types()","navigation_behavior()","navigation_location()","need_base64_encode?()","need_base64_encode?()","need_initialize_variables()","need_initialize_variables()","need_parent?()","need_parent?()","needed?()","needed?()","needed?()","negotiate_mime()","nest()","nest()","nested()","nested_under_indifferent_access()","nested_under_indifferent_access()","nested_under_indifferent_access()","nested_under_indifferent_access()","nesting()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new2()","new2()","new3()","new?()","new_alias_name()","new_cond()","new_constants()","new_element_path()","new_element_path()","new_from_hash()","new_from_hash_copying_default()","new_from_hash_copying_default()","new_from_uri()","new_ntoh()","new_ostruct_member()","new_record?()","new_record?()","new_scope()","new_seed()","new_session()","new_start()","new_with()","new_with_uri()","new_with_value_if_need()","newobj()","newobj()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next!()","next_current()","next_day()","next_element()","next_element()","next_key()","next_migration_number()","next_month()","next_month()","next_month()","next_selector()","next_sibling=()","next_sibling_node()","next_to()","next_update()","next_update=()","next_values()","next_wait()","next_wait()","next_week()","next_week()","next_year()","next_year()","next_year()","nil?()","nil?()","nkf()","nl()","nlink()","nlsolve()","nlst()","no_color!()","nocbreak()","nocrmode()","nodename()","nodetype()","nodevalue()","node_type()","node_type()","node_type()","node_type()","node_type()","node_type()","node_type()","node_type()","node_type()","node_type()","nodelay=()","nodoc()","noecho()","noecho()","noecho()","non_aliases()","non_nil_attributes()","nonce()","none?()","none?()","nonl()","nonzero?()","nonzero?()","noop()","noop()","noraw()","norm()","norm()","normal?()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize!()","normalize_comment()","normalize_name()","normalize_path()","normalize_path()","normalize_space()","normalize_uri()","normalize_yaml_input()","normalized()","normalized_file_list()","not()","not_after()","not_after=()","not_before()","not_before=()","not_modified?()","not_modified?()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","notation()","notationdecl()","notationdecl()","notationdecl?()","notations()","notestuff()","notice()","notice=()","notify()","notify()","notify()","notify()","notify()","notify()","notify?()","notify?()","notify?()","notify_observers()","notify_observers()","notify_observers()","noutrefresh()","now()","now()","now()","now()","now_is_loaded?()","nowrite()","nowrite()","nread()","nsec()","nth_child()","ntop()","null?()","null?()","num_waiting()","num_waiting()","number()","number_field()","number_field_tag()","number_to_currency()","number_to_human()","number_to_human_size()","number_to_percentage()","number_to_phone()","number_with_delimiter()","number_with_precision()","numerator()","numerator()","numerator()","numerator()","numerator()","object()","object_address_group()","object_class()","object_group()","object_id()","object_maker()","observe()","observed_class()","observed_classes()","observed_classes()","observer_class_for()","observer_instances()","observers()","observers=()","oct()","odd?()","odd?()","odd?()","odd?()","off()","off_event()","off_tags()","offset()","offset()","offset_vtbl()","oflush()","oid()","oid()","oid=()","oid=()","ok?()","ok?()","ok_to_remove?()","old()","old_enc=()","ole_activex_initialize()","ole_classes()","ole_classes()","ole_free()","ole_free()","ole_func_methods()","ole_get_methods()","ole_initialize()","ole_method()","ole_method_help()","ole_methods()","ole_methods()","ole_obj_help()","ole_put_methods()","ole_query_interface()","ole_reference_count()","ole_respond_to?()","ole_show_help()","ole_type()","ole_type()","ole_type()","ole_type()","ole_type_detail()","ole_type_detail()","ole_typelib()","ole_typelib()","ole_types()","ole_uninitialize()","on()","on()","on_attr_charref()","on_attr_charref_hex()","on_attr_entityref()","on_attr_value()","on_attribute()","on_cdata()","on_cdata_block()","on_characters()","on_chardata()","on_charref()","on_charref()","on_charref_hex()","on_charref_hex()","on_curve?()","on_end_document()","on_end_element()","on_entityref()","on_entityref()","on_etag()","on_event()","on_event_with_outargs()","on_head()","on_load()","on_load_all()","on_stag()","on_stag_end()","on_stag_end()","on_stag_end_empty()","on_stag_end_empty()","on_start_document()","on_start_element()","on_tags()","on_tail()","on_xmldecl_encoding()","on_xmldecl_end()","on_xmldecl_standalone()","on_xmldecl_version()","one?()","ongoing_visibility=()","only()","only_child()","opaque()","opaque=()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open!()","open?()","open_log()","open_message_stream()","open_message_stream()","open_server()","open_server()","open_server()","open_server()","open_server_inaddr_any()","open_uri_or_path()","opendir()","opened?()","opt_parser()","option_groups_from_collection_for_select()","option_list()","optional?()","optional_port()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options=()","options_for()","options_for_select()","options_from_collection_for_select()","options_include_default?()","optname()","ord()","ord()","ord()","ord()","order()","order()","order()","order!()","order!()","ordered_railties()","ordering=()","ordinal()","ordinal()","ordinalize()","ordinalize()","org_initialize()","orig_delete()","orig_meta_vars()","orig_name()","orig_name=()","orig_parse()","orig_parse_uri()","original_concat()","original_dir()","original_fullpath()","original_name()","original_url()","orm_class()","orm_instance()","orthogonal?()","os_code()","other_elements()","out()","out()","out_of_line?()","out_of_line?()","outdated()","outdated()","output()","output()","output()","output=()","output?()","output_encoding=()","output_flag_file()","output_value()","outside_transaction?()","outside_transaction?()","overlaps?()","owned?()","owned?()","owned?()","owned?()","owner()","owner()","p()","p()","pack()","pack()","pack()","pack()","pack_sockaddr_in()","pack_sockaddr_un()","package_dir_path()","package_name()","packdw()","packqw()","padding=()","page()","paging?()","pair()","pair()","pair_content()","pair_number()","param_key()","param_list()","param_seq()","parameter_filter()","parameter_filter_for()","parameterize()","parameterize()","parameters()","parameters()","parameters()","parameters()","params()","params()","params()","params()","params()","params()","params()","params=()","params=()","params_ok?()","paranoid()","parent()","parent()","parent()","parent=()","parent=()","parent=()","parent?()","parent?()","parent_class_name()","parent_file_name()","parent_name()","parent_name()","parent_name()","parent_of?()","parent_prefixes()","parents()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parsemethodcall()","parsemethodcall()","parsemethodresponse()","parsemethodresponse()","parse_alias()","parse_args()","parse_attr()","parse_attr_accessor()","parse_call_parameters()","parse_class()","parse_comment()","parse_config()","parse_constant()","parse_content_type()","parse_csv()","parse_ctype()","parse_data_with_trailing_star()","parse_dot_doc_file()","parse_error()","parse_file()","parse_file()","parse_files()","parse_files_matching()","parse_form_data()","parse_header()","parse_helper()","parse_include()","parse_line()","parse_meta_attr()","parse_meta_method()","parse_method()","parse_method_or_yield_parameters()","parse_method_parameters()","parse_module()","parse_name()","parse_openssl()","parse_opts()","parse_printf_format()","parse_query()","parse_query()","parse_qvalues()","parse_range_header()","parse_raw_value_as_a_number()","parse_raw_value_as_an_integer()","parse_require()","parse_rfc2253()","parse_set_cookie()","parse_set_cookies()","parse_signature()","parse_source()","parse_source()","parse_statements()","parse_stream()","parse_stream()","parse_struct_signature()","parse_symbol_arg()","parse_symbol_in_arg()","parse_task_string()","parse_time()","parse_top_level_statements()","parse_uri()","parse_uri()","parse_visibility()","parse_yield()","parser()","parser()","parser()","partition()","partition()","pass()","passwd()","password()","password()","password=()","password=()","password=()","password=()","password=()","password_field()","password_field()","password_field_tag()","past?()","past?()","past?()","past?()","patch()","patch()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path=()","path_for()","path_ok?()","path_parameters()","path_to_asset()","path_to_audio()","path_to_font()","path_to_font()","path_to_image()","path_to_image()","path_to_javascript()","path_to_javascript()","path_to_stylesheet()","path_to_stylesheet()","path_to_video()","pathmap()","pathmap_explode()","pathmap_partial()","pathmap_replace()","paths()","paths()","paths()","paths=()","pattern()","pattern()","pbkdf2_hmac()","pbkdf2_hmac_sha1()","peek()","peek()","peek()","peek()","peek()","peek()","peek_equal?()","peek_match?()","peek_read()","peek_tk()","peek_token()","peek_values()","peep()","peer_cert()","peer_cert()","peer_cert()","peer_cert()","peer_cert_chain()","peer_cert_chain()","peeraddr()","peeraddr()","peeraddr()","peeraddr()","peeraddr()","pending()","percent_doc()","perform_validations()","perform_with_block()","performed?()","period()","period_for_local()","period_for_utc()","permanent_link=()","permanent_link?()","permutation()","permutation?()","permute()","permute!()","permute!()","persisted?()","persisted?()","petabyte()","petabytes()","pfamily()","phase()","phase()","phase()","phone_field()","phone_field_tag()","pi()","pi()","pid()","pid()","pid()","pid()","pipe()","pipe?()","pipe?()","pipe?()","pipe?()","pipeline()","pipeline_r()","pipeline_rw()","pipeline_start()","pipeline_w()","pk_and_sequence_for()","pkcs5_keyivgen()","plain?()","platform()","platform=()","platforms()","platforms=()","pluck()","plugin()","plugins()","plural()","plural()","plural_file_name()","plural_forms()","plural_name()","plural_table_name()","pluralize()","pluralize()","pluralize()","pluralize_table_names?()","plusplus()","point()","point_conversion_form()","point_conversion_form=()","pointer()","pointer=()","polar()","polar()","polar()","polymorphic_path()","polymorphic_url()","pop()","pop()","pop()","pop()","pop()","pop_d()","pop_inspect_key()","pop_tags()","pop_token()","pop_workspace()","popd()","popdir()","popen()","popen2()","popen2e()","popen3()","populate_with_current_scope_attributes()","popup_menu()","port()","port()","port()","port()","port()","port()","port=()","port_string()","pos()","pos()","pos()","pos()","pos()","pos()","pos()","pos()","pos=()","pos=()","pos=()","pos=()","pos=()","position()","position()","position()","position()","position()","post()","post()","post()","post()","post()","post()","post2()","post2()","post?()","post_build()","post_connection_check()","post_form()","post_form()","post_install()","post_match()","post_match()","post_reset()","post_uninstall()","postgresql_version()","postproc()","power()","power!()","power!()","power!()","pp()","pp()","pp()","pp()","pp()","pp()","pp_hash()","pp_object()","ppid()","ppx()","ppx()","pre_install()","pre_match()","pre_match()","pre_reset()","pre_uninstall()","precisionless_round()","precs()","pred()","predicate()","predicate()","predicate()","predicate_to_string()","prefetch_primary_key?()","prefix()","prefix()","prefix()","prefix()","prefix=()","prefix_source()","prefixes()","prefixes()","preload()","prepare!()","prepare!()","prepare_backtrace()","prepare_range()","prepend()","prepend()","prepend_after_filter()","prepend_around_filter()","prepend_before_filter()","prepend_view_path()","prepend_view_path()","preproc()","preprocess()","prerelease?()","prerelease?()","prerelease?()","prerelease_gems()","prerelease_specs()","prerequisite_tasks()","presence()","present?()","pretty()","pretty_generate()","pretty_inspect()","pretty_name()","pretty_name()","pretty_new_name()","pretty_old_name()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_inspect()","pretty_print_instance_variables()","prev_day()","prev_month()","prev_month()","prev_month()","prev_week()","prev_week()","prev_year()","prev_year()","prev_year()","previous=()","previous_changes()","previous_element()","previous_sibling=()","previous_sibling_node()","primary()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key=()","primary_keys()","prime?()","prime?()","prime?()","prime_cache()","prime_division()","prime_division()","prime_fasttest?()","primes()","primes_so_far()","primitive_convert()","primitive_errinfo()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print_alias()","print_attribute()","print_class()","print_constant()","print_dependencies()","print_file()","print_file()","print_method()","print_module()","print_profile()","print_rakefile_directory()","print_usage()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printn()","printn()","priority()","priority=()","private?()","private?()","private?()","private_class_method()","private_decrypt()","private_encrypt()","private_instance_methods()","private_key()","private_key=()","private_key?()","private_method_defined?()","private_methods()","proc()","process()","process()","process()","process()","process()","process()","process()","process_action()","process_action()","process_action()","process_action()","process_args()","process_args()","process_attributes_for()","process_directive()","process_node()","process_node()","process_node()","process_node()","process_options()","process_removed_attributes()","process_removed_attributes()","process_removed_attributes()","process_view_paths()","processinginstruction()","processing_instruction()","processing_instruction()","product()","progid()","progids()","program_name()","progress()","progress_reporter()","progress_reporter()","promote_load_path()","prompt()","prompt()","prompt_mode=()","prompting?()","proper_subset?()","proper_superset?()","properties()","property()","propfind()","propfind()","proppatch()","proppatch()","protect_against_forgery?()","protect_from_forgery()","protected_attributes()","protected_instance_methods()","protected_method_defined?()","protected_methods()","protected_methods()","protocol()","protocol()","provide()","provide()","proxy()","proxy()","proxy2()","proxy2_async()","proxy=()","proxy=()","proxy?()","proxy?()","proxy_address()","proxy_address()","proxy_async()","proxy_auth()","proxy_auth_get()","proxy_basic_auth()","proxy_basic_auth()","proxy_class()","proxy_class=()","proxy_class?()","proxy_class?()","proxy_pass()","proxy_pass()","proxy_port()","proxy_port()","proxy_service()","proxy_uri()","proxy_user()","proxy_user()","proxyaddr()","proxyaddr()","proxyport()","proxyport()","prune()","prune()","pruning?()","psych_to_yaml()","psych_y()","psych_yaml_as()","ptr()","ptr()","ptr()","ptr=()","pubdate()","pubdate()","pubdate=()","pubdate=()","public()","public?()","public?()","public?()","public_class_method()","public_decrypt()","public_directory()","public_encrypt()","public_instance_method()","public_instance_methods()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key=()","public_key=()","public_key=()","public_key=()","public_key?()","public_method()","public_method_defined?()","public_methods()","public_methods()","public_path()","public_send()","publish()","publish()","pull()","pull()","purpose=()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push_d()","push_inspect_key()","push_tags()","push_workspace()","pushd()","pushdir()","put()","put()","put()","put()","put()","put?()","putback()","putbinaryfile()","putc()","putc()","putc()","putc()","putc()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puttextfile()","pwd()","pwd()","pwd()","pwd()","qualified_const_defined?()","qualified_const_get()","qualified_const_set()","query()","query=()","query_attribute()","query_parameters()","quick()","quick_emit()","quiet()","quiet()","quiet=()","quietly()","quit()","quit()","quit()","quo()","quo()","quo()","quo()","quo()","quote()","quote()","quote()","quote()","quote_column_name()","quote_string()","quote_string()","quote_table_name()","quote_table_name()","quote_table_name()","quoted_columns_for_index()","quoted_columns_for_index()","quoted_date()","quoted_false()","quoted_false()","quoted_locking_column()","quoted_primary_key()","quoted_table_name()","quoted_true()","quoted_true()","r()","racc_runtime_type()","radio_button()","radio_button()","radio_button()","radio_button_checked?()","radio_button_tag()","radio_group()","rails","rails_gemfile_entry()","railtie_name()","railtie_name()","railtie_namespace()","railties()","railties()","raise()","raise()","raise()","raise_for_undefined_entity?()","raise_for_undefined_entity?()","raise_for_undefined_entity?()","raise_if_absolute()","raise_if_conflicts()","rake()","rake()","rake_check_options()","rake_extension()","rake_merge_option()","rake_original_const_missing()","rake_original_time_compare()","rake_output_message()","rake_require()","rake_system()","rake_tasks()","rakefile()","rakefile()","rakefile()","rakefile_location()","rakefile_test_tasks()","rand()","rand()","rand()","random_bytes()","random_iv()","random_key()","random_number()","random_string()","range()","range=()","range_field()","range_field_tag()","range_length()","rank()","rank_e()","rassoc()","rassoc()","rassoc()","rationalize()","rationalize()","rationalize()","rationalize()","rationalize()","raw()","raw()","raw()","raw()","raw!()","raw_connection()","raw_cookie()","raw_cookie2()","raw_host_with_port()","raw_path()","raw_post()","raw_value()","raw_write_attribute()","rb_scan_args()","rc_file()","rc_file_generators()","rcptto()","rcptto()","rcptto_list()","rcptto_list()","rdev()","rdev_major()","rdev_minor()","rdoc()","rdoc_installed?()","rdoc_installed?()","rdoc_options()","rdoc_options=()","rdoc_task_description()","rdoc_version()","re","re_exchange()","re_exchange()","re_exchangeable?()","re_exchangeable?()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read_all()","read_all()","read_attribute()","read_attribute_before_type_cast()","read_attribute_before_type_cast()","read_bin()","read_binary()","read_body()","read_directive()","read_documentation_modifiers()","read_entry()","read_entry()","read_escape()","read_file()","read_fragment()","read_i()","read_multi()","read_multi()","read_nonblock()","read_nonblock()","read_nonblock()","read_nonblock()","read_s()","read_s_expand()","read_smime()","read_timeout=()","read_timeout=()","read_timeout=()","read_timeout=()","read_timeout=()","read_timeout=()","read_timeout=()","read_timeout=()","read_type_class()","read_with_substitution()","readable?()","readable?()","readable?()","readable?()","readable_atfer_eof?()","readable_atfer_eof?()","readable_atfer_eof?()","readable_inspect()","readable_inspect()","readable_real?()","readable_real?()","readable_real?()","readable_real?()","readagain_bytes()","readbyte()","readbyte()","readbyte()","readbyte()","readchar()","readchar()","readchar()","readchar()","readchar()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlink()","readlink()","readme()","readme()","readme()","readonly()","readonly!()","readonly?()","readonly_attributes()","readpartial()","readpartial()","readpartial()","readpartial()","readpartial()","ready()","ready()","ready?()","real()","real()","real()","real?()","real?()","real?()","real_inspect()","realdirpath()","realdirpath()","realloc()","really_verbose()","realpath()","realpath()","realtime()","reason()","reason()","reason_phrase()","reason_phrase()","receive()","receive()","receive()","receiver()","recipients()","reconnect!()","reconnect!()","reconnect!()","reconnect!()","record()","record_entity_expansion()","record_key_for_dom_id()","record_location()","record_location()","recover()","recreate_database()","rect()","rect()","rect()","rect()","rectangular()","rectangular()","rectangular()","rectangular()","recurse_proc()","recv()","recv_io()","recv_nonblock()","recv_reply()","recv_request()","recvfrom()","recvfrom()","recvfrom()","recvfrom_nonblock()","recvfrom_nonblock()","recvmsg()","recvmsg_nonblock()","redefine_method()","redirect()","redirect?()","redirect_to()","redirect_to()","redirect_to()","redirect_to()","redirect_url()","redirector()","reduce()","reenable()","ref()","ref()","ref()","reference?()","references()","references()","reflect_on_aggregation()","reflect_on_all_aggregations()","reflect_on_all_associations()","reflect_on_all_autosave_associations()","reflect_on_association()","refresh()","refresh()","refresh()","refresh()","refresh!()","refresh_line()","regexp()","regexp()","regexp()","regist()","regist_server()","register()","register()","register()","register()","register()","register_alias()","register_command()","register_css_compressor()","register_interceptor()","register_interceptors()","register_javascript_expansion()","register_js_compressor()","register_kindle_mime_types()","register_observer()","register_observers()","register_stylesheet_expansion()","register_uri()","registered()","registered_css_compressor()","registered_js_compressor()","registry=()","regular?()","regular_class_path()","regular_update()","regular_update()","regular_writer()","regular_writer()","rehash()","rehash()","rehash()","reinit_with()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject!()","reject!()","reject!()","reject!()","reject!()","reject!()","reject!()","reject!()","relative?()","relative?()","relative_path_from()","release()","release()","release_connection()","release_savepoint()","release_savepoint()","release_savepoint()","release_savepoint()","released_gems()","released_specs()","reload()","reload()","reload()","reload()","reload()","reload()","reload()","reload()","reload!()","reload!()","reload_dependencies?()","reload_routes!()","reloader()","reloader_paths()","remainder()","remainder()","remainder()","remote?()","remote_address()","remote_ip()","remote_ip()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","removechild()","remove_all()","remove_belongs_to()","remove_by_id()","remove_by_name()","remove_callback()","remove_callback_internal()","remove_cdecl_callback()","remove_class_variable()","remove_coding_comment()","remove_column()","remove_column_sql()","remove_columns()","remove_commented_out_lines()","remove_connection()","remove_connection()","remove_dir()","remove_entry()","remove_entry_secure()","remove_executables()","remove_file()","remove_filters!()","remove_from_documentation?()","remove_handler()","remove_hook_for()","remove_index()","remove_index()","remove_index_sql()","remove_invisible()","remove_leading_dot_dir()","remove_multiparameter_id()","remove_nodoc()","remove_nodoc_children()","remove_old_bin_files()","remove_option()","remove_owners()","remove_possible_method()","remove_private_comments()","remove_private_comments()","remove_private_comments()","remove_references()","remove_response_handler()","remove_root()","remove_server()","remove_siginfo_handler()","remove_siginfo_handler()","remove_silencers!()","remove_spec()","remove_spec()","remove_specs_unsatisfied_by()","remove_stdcall_callback()","remove_timestamps()","remove_timestamps()","remove_timestamps_sql()","remove_token_listener()","remove_unparseable()","rename()","rename()","rename()","rename()","rename()","rename_column()","rename_column()","rename_column_sql()","rename_index()","rename_index()","rename_key()","rename_table()","rename_table()","rename_table()","rename_table()","render()","render()","render()","render()","render()","render()","render_body()","render_collection()","render_collection()","render_partial()","render_partial()","render_template()","render_template()","render_to_body()","render_to_body()","render_to_body()","render_to_string()","render_to_string()","renew()","renew()","reopen()","reopen()","reopen()","reorder()","reorder_characters()","reorganize()","repair_command()","repeated_combination()","repeated_permutation()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace_child()","replace_with()","replacement()","replacement=()","replicate()","reply()","reply_service()","report()","report()","report_attributes()","report_class_module()","report_constants()","report_methods()","repository()","represent_map()","represent_object()","represent_scalar()","represent_seq()","request()","request()","request()","request()","request_body_permitted?()","request_get()","request_get()","request_head()","request_head()","request_http_basic_authentication()","request_http_digest_authentication()","request_http_token_authentication()","request_method()","request_method_symbol()","request_parameters()","request_post()","request_post()","request_uri()","requests()","requests()","require()","require_engine()","require_fixture_classes()","require_path()","require_path=()","require_path_info?()","require_relative()","require_tzinfo()","required_attribute?()","required_attributes()","required_location()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_ruby_version=()","required_rubygems_version=()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","requirement()","requirements()","requirements=()","requirements_list()","requires_reloading?()","requires_reloading?()","rerdoc_task_description()","rescue_action()","rescue_from()","rescue_from()","rescue_responses()","rescue_template()","rescue_templates()","rescue_with_handler()","rescue_with_handler()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset!()","reset!()","reset!()","reset!()","reset!()","reset_cache()","reset_callbacks()","reset_column_information()","reset_counters()","reset_cycle()","reset_locking_column()","reset_prog_mode()","reset_runtime()","reset_sequence!()","reset_session()","reset_session()","resize()","resize()","resizeterm()","resolve()","resolve()","resolve()","resolve()","resolve_add()","resolve_aliases()","resolve_args()","resource()","resource_errors()","resource_location()","resourceful?()","resources()","resources()","resources()","resources_path_names()","respond()","respond_to()","respond_to()","respond_to()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_without_attributes?()","respond_to_without_attributes?()","respond_with()","response_body=()","response_body=()","response_body_permitted?()","response_code()","response_overridden?()","responses()","rest()","rest?()","rest_size()","restore()","restore()","restore()","restore()","restore()","restore()","restsize()","result()","result()","result()","result()","resume()","resume()","resume_all()","retrbinary()","retrieve_autoindex()","retrieve_connection()","retrieve_connection_pool()","retrieve_object()","retrlines()","return_headers?()","return_type()","return_type_detail()","return_vtype()","retval?()","reverse()","reverse()","reverse()","reverse()","reverse!()","reverse!()","reverse_each()","reverse_each()","reverse_merge()","reverse_merge()","reverse_merge()","reverse_merge!()","reverse_merge!()","reverse_merge!()","reverse_order()","reverse_update()","revert()","reverting?()","revoked()","revoked=()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rfc1123_date()","rfc2822()","rfc2822()","rfc2822()","rfc2822()","rfc2822()","rfc2822()","rfc3339()","rfc3339()","rfc3339()","rfc3339()","rfc3339()","rfc822()","rfc822()","rfc822()","rfc822()","rfc822()","rfc822()","ri_dir()","ri_installed?()","ri_installed?()","rid()","rid()","rindex()","rindex()","rindex()","rjust()","rjust()","rm()","rm()","rm_f()","rm_r()","rm_rf()","rmdir()","rmdir()","rmdir()","rmdir()","rmdir()","rmdir()","rmtree()","rmtree()","robots","robots","rollback_active_record_state!()","rollback_db_transaction()","rollback_db_transaction()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_transaction_records()","root()","root()","root()","root()","root()","root()","root()","root()","root=()","root?()","root?()","root_node()","roots()","rotate()","rotate!()","round()","round()","round()","round()","round()","round()","round()","round()","round()","route()","route_from()","route_key()","route_to()","route_url()","routes()","routes?()","routes_url_helpers()","row()","row_size()","row_vector()","row_vectors()","rows()","rpartition()","rsqrt()","rss()","rstrip()","rstrip()","rstrip!()","ruby()","ruby()","ruby()","ruby_debugger_gemfile_entry()","ruby_engine()","ruby_version()","rubygems_api_key=()","rubygems_api_request()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run!()","run_bundle()","run_callbacks()","run_config()","run_config()","run_in_transaction?()","run_initializers()","run_load_hooks()","run_rdoc()","run_rdoc()","run_validations!()","run_validations!()","runner()","runtime()","runtime=()","runtime_dependencies()","safe_concat()","safe_concat()","safe_constantize()","safe_constantize()","safe_get()","safe_join()","safe_level()","safe_ln()","safe_unlink()","sample()","sample()","sanitize()","sanitize()","sanitize()","sanitize()","sanitize()","sanitize_conditions()","sanitize_css()","sanitize_css()","sanitize_dom_id()","sanitize_for_mass_assignment()","sanitize_limit()","sanitize_sql()","sanitize_sql_array()","sanitize_sql_for_assignment()","sanitize_sql_for_conditions()","sanitize_sql_hash()","sanitize_sql_hash_for_assignment()","sanitize_sql_hash_for_conditions()","sanitize_string()","sanitizeable?()","sanitizeable?()","satisfied_by?()","satisfies_requirement?()","saturday?()","saturday?()","save()","save()","save()","save()","save()","save!()","save!()","save!()","save_cache()","save_class()","save_exception_mode()","save_history()","save_history()","save_history=()","save_limit()","save_method()","save_method()","save_record?()","save_rounding_mode()","save_with_validation()","say()","say()","say()","say_with_time()","scalar()","scalar()","scalar()","scalar()","scalar()","scalar=()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan_full()","scan_until()","scanf()","scanf()","scanf()","schema()","schema()","schema=()","schema_exists?()","schema_format()","schema_search_path()","schema_search_path=()","scheme=()","scheme_list()","scope()","scope()","scope()","scope=()","scope_for_create()","scope_name()","scoped()","scoping()","script()","script()","scrl()","scrl()","scroll()","scrolling_list()","scrollok()","search()","search()","search()","search()","search()","search()","search_const()","search_convpath()","search_field()","search_field_tag()","search_file_from_ruby_path()","search_full()","search_servlet()","searcher()","sec()","sec=()","second()","second()","second=()","second=()","seconds()","seconds_since_midnight()","seconds_since_midnight()","seconds_to_utc_offset()","secret_token()","section()","sections()","sections()","secure=()","see()","seed()","seed()","seed=()","seek()","seek()","seek()","seek()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select!()","select!()","select!()","select!()","select_all()","select_all()","select_date()","select_datetime()","select_day()","select_first()","select_hour()","select_message()","select_minute()","select_month()","select_one()","select_rows()","select_rows()","select_rows()","select_rows()","select_rows()","select_second()","select_tag()","select_time()","select_value()","select_values()","select_year()","selector()","send()","send()","send()","send_action()","send_body()","send_data()","send_data()","send_data()","send_file()","send_file()","send_file()","send_gem()","send_header()","send_io()","send_mail()","send_mail()","send_message()","send_message()","send_reply()","send_request()","send_request()","send_request()","send_response()","sendcmd()","sender()","sendmail()","sendmail()","sendmsg()","sendmsg_nonblock()","separator()","seplist()","seq=()","sequence()","sequence_name()","sequence_name=()","serial()","serial()","serial()","serial()","serial()","serial=()","serial=()","serial_sequence()","serializable_hash()","serializable_hash()","serialize()","serialize()","serialized_value()","serve()","serve()","serve()","serve()","server_error?()","server_name()","server_port()","server_software()","service()","service()","service()","service()","service()","service()","service()","session()","session=()","session_add()","session_auth=()","session_cache_mode()","session_cache_mode=()","session_cache_size()","session_cache_size=()","session_cache_stats()","session_id_column()","session_options=()","session_remove()","session_reused?()","session_store()","session_table_name()","set()","set()","set_arg_names()","set_attributes()","set_attrs()","set_backtrace()","set_backtrace()","set_callback()","set_callback()","set_callback_internal()","set_cdecl_callback()","set_close_on_exec()","set_content_type()","set_content_type()","set_cookie()","set_ctypes()","set_ctypes()","set_current_section()","set_debug_output()","set_debug_output()","set_debug_output()","set_debug_output()","set_debug_output()","set_debug_output()","set_debug_output()","set_debug_output()","set_default()","set_default_accessors!()","set_default_handler()","set_default_paths()","set_dictionary()","set_dictionary()","set_dn()","set_enablement()","set_encoding()","set_encoding()","set_encoding()","set_encoding()","set_environment()","set_eoutvar()","set_eoutvar()","set_error()","set_error()","set_extensions()","set_filter()","set_fixture_class()","set_flags_from_environment()","set_form()","set_form_data()","set_fragment()","set_generator()","set_get_line_procs()","set_headers()","set_host()","set_input()","set_last_thread()","set_last_thread()","set_last_value()","set_local_assigns!()","set_locking_column()","set_log()","set_next_element()","set_non_blocking()","set_opaque()","set_option()","set_options()","set_params()","set_parser()","set_passwd()","set_passwd()","set_passwd()","set_password()","set_path()","set_path()","set_port()","set_prefix()","set_prompt()","set_query()","set_range()","set_redirect()","set_registry()","set_scheme()","set_scope()","set_screen_size()","set_service_hook()","set_session()","set_size()","set_socket()","set_sockopt()","set_standard_conforming_strings()","set_stdcall_callback()","set_suspend()","set_to()","set_to_infinity!()","set_trace()","set_trace()","set_trace_all()","set_trace_func()","set_trace_func()","set_typecode()","set_user()","set_userinfo()","set_valid_ip()","set_visibility_for()","set_writer()","setacl()","setbyte()","setegid()","seteuid()","setgid()","setgid?()","setgid?()","setgid?()","setgid?()","setgrent()","setpgid()","setpgrp()","setpos()","setpos()","setpriority()","setproperty()","setpwent()","setquota()","setregid()","setresgid()","setresuid()","setreuid()","setrgid()","setrlimit()","setruid()","setscrreg()","setscrreg()","setsid()","setsockopt()","setsockopt()","setter()","setuid()","setuid?()","setuid?()","setuid?()","setuid?()","setup()","setup()","setup()","setup()","setup()","setup()","setup()","setup_certificate()","setup_fixture_accessors()","setup_fixtures()","setup_generator()","setup_header()","setup_maker()","setup_maker()","setup_maker()","setup_maker()","setup_maker()","setup_maker()","setup_maker()","setup_maker()","setup_maker_elements()","setup_output_dir()","setup_pager()","setup_params()","setup_rdoc()","setup_ssl_context()","setup_ssl_context()","sexp()","sexp_raw()","sfork()","sh()","shallow()","shallow?()","shebang()","shellescape()","shellescape()","shelljoin()","shelljoin()","shellsplit()","shellsplit()","shellwords()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","show()","show_detailed_exceptions?()","show_help()","show_lookup_failure()","show_owners()","show_rdoc_for_pattern()","show_variable()","show_version()","shuffle()","shuffle!()","shutdown()","shutdown()","shutdown()","shutdown()","shutdown()","sid_available?()","sid_available?()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign_cert()","sign_in()","signal()","signal()","signal()","signal_handle()","signal_status()","signaled?()","signature_algorithm()","signature_algorithm()","signature_algorithm()","signed_time()","signed_value()","signers()","signo()","silence()","silence()","silence()","silence()","silence()","silence!()","silence_auto_explain()","silence_stream()","silence_warnings()","silencer()","simple_format()","simple_selector()","sin()","sin()","sin()","sin!()","since()","since()","since()","since()","since()","since()","single?()","single_delegate()","singleline_format()","singleline_pp()","singleton_class()","singleton_class()","singleton_method_added()","singleton_methods()","singular()","singular()","singular?()","singular?()","singular_route_key()","singular_table_name()","singularize()","singularize()","sinh()","sinh()","sinh!()","site()","site()","site=()","site=()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size=()","size=()","size=()","size?()","size?()","size?()","size?()","size_opt_params()","size_params()","sizeof()","skip()","skip()","skip()","skip_after_filter()","skip_around_filter()","skip_before_filter()","skip_blanks?()","skip_callback()","skip_during()","skip_filter()","skip_for_variable()","skip_method()","skip_optional_do_after_expression()","skip_tkspace()","skip_tkspace_comment()","skip_until()","sleep()","sleep()","sleep()","slice()","slice()","slice()","slice()","slice()","slice()","slice!()","slice!()","slice!()","slice_before()","sockaddr_in()","sockaddr_un()","socket?()","socket?()","socket?()","socket?()","socketpair()","socketpair()","socktype()","solve()","sort()","sort()","sort()","sort!()","sort_by()","sort_by!()","sort_obj()","source()","source()","source()","source_encoding()","source_encoding()","source_encoding()","source_encoding_name()","source_encoding_name()","source_file()","source_index()","source_location()","source_location()","source_location()","source_ole_types()","source_root()","sources()","sources()","sources=()","spawn()","spawn()","spawn()","spec()","spec_dir()","spec_file()","spec_name()","spec_path()","spec_predecessors()","specific?()","specific?()","specific_extra_args()","specific_extra_args_hash()","specification()","specs()","spermy_recommendation()","split()","split()","split()","split()","split()","split()","split()","split()","split()","split_all()","split_all()","split_args()","split_header_value()","split_into_flow()","sprintf()","sql()","sql_for_insert()","sql_for_insert()","sql_query_length()","sqlite_version()","sqrt()","sqrt()","sqrt()","sqrt()","sqrt!()","square?()","squeeze()","squeeze!()","squish()","squish!()","srand()","srand()","src_type()","ssl?()","ssl?()","ssl?()","ssl_available?()","ssl_context()","ssl_options()","ssl_options=()","ssl_options=()","ssl_params()","ssl_params()","ssl_params()","ssl_params()","ssl_version=()","stale?()","stale_session_check!()","stand_alone?()","standard_exception_handling()","standard_port()","standard_port?()","standard_rake_options()","standend()","standend()","standout()","standout()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","startelement()","startelement()","start_accepting()","start_accepting()","start_accepting()","start_accepting()","start_collecting_tokens()","start_color()","start_doc()","start_document()","start_document()","start_document()","start_document()","start_document()","start_element()","start_element()","start_element?()","start_export()","start_import()","start_job()","start_mapping()","start_mapping()","start_prefix_mapping()","start_processing()","start_profile()","start_sequence()","start_sequence()","start_service()","start_stream()","start_stream()","start_stream()","start_transaction()","start_with?()","started?()","started?()","started?()","started?()","started?()","started?()","started?()","started?()","started_request_message()","starting()","starts_with()","starttls()","starttls()","starttls()","starttls?()","starttls?()","starttls_always?()","starttls_always?()","starttls_auto?()","starttls_auto?()","stat()","stat()","stat()","stat()","state()","stats()","status()","status()","status()","status()","status()","status()","status()","status()","status=()","status=()","status=()","status_code()","status_code_for_exception()","status_line()","status_message()","status_string()","status_type_char()","stdout()","stdout()","stdout=()","stdscr()","step()","step()","step()","step_with_blockless()","sti_name()","sticky?()","sticky?()","sticky?()","sticky?()","stop()","stop()","stop()","stop()","stop?()","stop_doc()","stop_next()","stop_profile()","stop_service()","stop_service()","stop_service()","stopped?()","stopped?()","stopped?()","stopping()","stopsig()","storbinary()","store()","store()","store()","store()","store()","store()","store()","store()","store()","store()","store()","store_accessor()","store_application_definition!()","storlines()","stream()","stream()","stream=()","stream_end?()","streaming?()","stress()","stress=()","strftime()","strftime()","strftime()","strftime()","strict_decode64()","strict_encode64()","strict_encode64()","string()","string()","string()","string()","string()","string=()","string=()","string_length()","string_value()","stringify_keys()","stringify_keys()","stringify_keys()","stringify_keys!()","stringify_keys!()","stringify_keys!()","strip()","strip()","strip!()","strip_hashes()","strip_heredoc()","strip_links()","strip_newlines()","strip_stars()","strip_tags()","strongly_connected_components()","strptime()","strptime()","strptime()","struct()","struct()","structure_dump()","stylesheet_link_tag()","stylesheet_link_tag()","stylesheet_path()","stylesheet_path()","stylesheets()","su()","sub()","sub()","sub()","sub()","sub!()","sub_ext()","sub_type()","subclasses()","subclasses()","subdomain()","subdomain_of?()","subdomains()","subject()","subject()","subject=()","subject=()","subject_certificate=()","subject_request=()","submit()","submit()","submit_tag()","subscribe()","subscribe()","subscribe()","subscribed()","subsec()","subset?()","substitute_at()","substitute_at()","substring()","substring_after()","substring_before()","subtract()","subwin()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ!()","success()","success()","success?()","success?()","success?()","success?()","success?()","suffix_pattern()","suffixes()","suggest_gems_from_name()","sum()","sum()","sum()","sum()","summarize()","summarize()","summarize()","summary()","summary=()","sunday()","sunday()","sunday?()","sunday?()","super_each()","superclass()","superclass()","superclass()","superclass=()","superclass_delegating_accessor()","superset?()","supported?()","supports_add_column?()","supports_bulk_alter?()","supports_count_distinct?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_explain?()","supports_explain?()","supports_explain?()","supports_explain?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_insert_with_returning?()","supports_migrations?()","supports_migrations?()","supports_migrations?()","supports_primary_key?()","supports_primary_key?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_statement_cache?()","supports_statement_cache?()","supports_statement_cache?()","supports_statement_cache?()","supports_streaming?()","supports_streaming?()","suppress()","suppress_messages()","suspend()","suspend_all()","suspend_context()","suspend_input_method()","suspend_name()","suspend_workspace()","svn_url?()","swap()","swapcase()","swapcase()","swapcase!()","switch()","switch()","switch()","switch_name()","sym()","sym()","sym()","symbolize_keys()","symbolize_keys()","symbolize_keys()","symbolize_keys!()","symbolized_base_class()","symbolized_path_parameters()","symbolized_sti_name()","symbols()","symlink()","symlink()","symlink()","symlink?()","symlink?()","symlink?()","symlink?()","symlink?()","symlink_files()","symmetric?()","sync()","sync()","sync()","sync()","sync()","sync=()","sync=()","sync=()","sync_exclusive?()","sync_exclusive?()","sync_extend()","sync_extend()","sync_inspect()","sync_inspect()","sync_keys!()","sync_lock()","sync_lock()","sync_locked?()","sync_locked?()","sync_point?()","sync_shared?()","sync_shared?()","sync_synchronize()","sync_synchronize()","sync_try_lock()","sync_try_lock()","sync_unlock()","sync_unlock()","synchronize()","synchronize()","synchronize()","syncmode=()","synthesize_file_task()","sysaccept()","sysaccept()","sysaccept()","syscall()","sysclose()","sysconfdir()","sysopen()","sysopen()","sysread()","sysread()","sysread()","sysread()","sysseek()","syssign()","system()","system()","system()","system()","system()","system_dir()","system_path=()","systmpdir()","sysverify()","syswrite()","syswrite()","t()","t()","t()","table()","table_alias_for()","table_alias_length()","table_alias_length()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_name()","table_name()","table_name()","table_name=()","table_name_length()","table_rows()","table_structure()","tableize()","tableize()","tables()","tag()","tag()","tag()","tag_end()","tag_end()","tag_name()","tag_name()","tag_start()","tag_start()","tagged()","tagurize()","tail!()","taint()","taint()","taint()","tainted?()","take()","take()","take()","take()","take_while()","take_while()","tan()","tan()","tan!()","tanh()","tanh()","tanh!()","tap()","tar_bz2_file()","tar_gz_file()","task_defined?()","tasks()","tasks()","tasks()","tasks()","tasks_in_scope()","tcp()","tcp()","tcp_server_loop()","tcp_server_sockets()","teardown_fixtures()","tee()","telephone_field()","telephone_field_tag()","tell()","tell()","tell()","tell()","tell()","tell()","telnetmode()","telnetmode=()","template()","template_dir_for()","template_exists?()","template_for()","template_result()","templates_path()","terabyte()","terabytes()","terminal_width()","terminate()","terminate()","terminate()","terminate()","terminate()","terminate()","terminate_interaction()","terminate_interaction()","terminate_interaction()","terminate_job()","terminated?()","terminated?()","termsig()","test()","test()","test()","test()","test_dummy_clean()","test_dummy_config()","test_errors_aref()","test_errors_full_messages()","test_file()","test_file=()","test_files()","test_files=()","test_model_naming()","test_persisted?()","test_to_key()","test_to_param()","test_to_partial_path()","test_valid?()","text()","text()","text()","text()","text()","text()","text()","text()","text()","text()","text=()","text=()","text?()","text_area()","text_area_tag()","text_field()","text_field()","text_field_tag()","textarea()","textinput()","texts()","tgz_file()","third()","thnum()","thread()","thread()","thread()","thread_list()","thread_list_all()","threadsafe!()","throw()","thursday?()","thursday?()","tidy_bytes()","tidy_bytes()","time()","time()","time()","time()","time()","time2wtime()","time=()","time=()","time=()","time_ago_in_words()","time_delta_string()","time_select()","time_select()","time_tag()","time_with_datetime_fallback()","time_zone_options_for_select()","time_zone_select()","time_zone_select()","timeout()","timeout()","timeout()","timeout()","timeout()","timeout=()","timeout=()","timeout=()","timeout=()","timeout=()","timeout=()","times()","times()","timestamp()","timestamp()","timestamp()","timestamp()","timestamped_migrations()","timestamps()","timestamps()","titlecase()","titlecase()","titleize()","titleize()","titleize()","tls?()","tls?()","tmp()","tmpdir()","to()","to()","to=()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_app()","to_ary()","to_ary()","to_ary()","to_ary()","to_ary()","to_ary()","to_atom()","to_bn()","to_bn()","to_bn()","to_boolean_select_tag()","to_c()","to_c()","to_c()","to_check_box_tag()","to_class_name()","to_cleanup()","to_content_tag()","to_csv()","to_csv()","to_csv()","to_d()","to_d()","to_d()","to_d()","to_d()","to_d()","to_date()","to_date()","to_date()","to_date()","to_date()","to_date()","to_date()","to_date()","to_date()","to_date_select_tag()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime_select_tag()","to_default_s()","to_default_s()","to_default_s()","to_default_s()","to_default_s()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_digits()","to_element_methods()","to_enum()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed_for_categories()","to_format()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_h()","to_h()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_html()","to_html()","to_html()","to_html()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_id()","to_id()","to_id()","to_id()","to_input_field_tag()","to_int()","to_int()","to_int()","to_int()","to_int()","to_int()","to_int()","to_io()","to_io()","to_io()","to_io()","to_js()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_key()","to_key()","to_label_tag()","to_mailtext()","to_model()","to_model()","to_name()","to_name()","to_number_field_tag()","to_obj()","to_obj()","to_obj()","to_obj()","to_obj()","to_options()","to_options!()","to_options!()","to_options!()","to_p()","to_p()","to_p()","to_p()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_partial_path()","to_partial_path()","to_path()","to_path()","to_path()","to_path()","to_path()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_prepare()","to_prepare()","to_prepare_blocks()","to_proc()","to_proc()","to_proc()","to_ptr()","to_ptr()","to_query()","to_query()","to_query()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_radio_button_tag()","to_range()","to_rfc822text()","to_rss()","to_ruby()","to_ruby()","to_ruby_for_cache()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_sentence()","to_set()","to_sockaddr()","to_spec()","to_specs()","to_sql()","to_sql()","to_sql()","to_str()","to_str()","to_str()","to_str()","to_string()","to_string()","to_sym()","to_sym()","to_sym()","to_tag()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text_area_tag()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time_in_current_zone()","to_time_select_tag()","to_value()","to_value()","to_write_io()","to_xml()","to_xml()","to_xml()","to_xml()","to_xml()","to_xml()","to_xml()","to_yaml()","to_yaml()","to_yaml()","to_yaml()","to_yaml()","to_yaml()","to_yaml_type()","today()","today()","today?()","today?()","today?()","toeuc()","toeuc()","toggle()","toggle!()","tojis()","tojis()","token()","token()","token_and_options()","token_listener()","token_pos()","token_stream()","tokenize()","tokenize()","tokenize()","tokenize()","tokenize()","tokenize()","tokens_to_s()","tolocale()","tolocale()","tomorrow()","tomorrow()","tomorrow()","top()","top()","top()","top()","top()","top_level()","top_level()","top_level()","top_level_test()","toplevel_load()","tosjis()","tosjis()","total_in()","total_out()","total_time()","touch()","touch()","touch()","toutf16()","toutf16()","toutf32()","toutf32()","toutf8()","toutf8()","tr()","tr()","tr!()","tr_s()","tr_s!()","trace()","trace()","trace()","trace?()","trace_func()","trace_func()","trace_func()","trace_var()","transact()","transaction()","transaction()","transaction()","transaction()","transaction()","transaction_joinable=()","transfer()","transform()","translate()","translate()","translate()","translate_exception()","translate_exception()","translate_exception()","translate_exception()","transliterate()","transliterate=()","transliterate?()","transpose()","transpose()","trap()","trap()","traverse()","traverse()","tree()","trigger()","trigger()","trivial?()","true()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate_output?()","trust()","trust()","trust=()","trusted_cert_path()","try()","try()","try_activate()","try_const()","try_convert()","try_convert()","try_convert()","try_convert()","try_convert()","try_lock()","try_mon_enter()","try_to_load_dependency()","try_type()","tsort()","tsort_each()","tsort_each_child()","tsort_each_child()","tsort_each_child()","tsort_each_node()","tsort_each_node()","tsvector()","tt?()","tt_sections()","tty?()","tty?()","tty?()","tty?()","tty_output=()","tty_output?()","tuesday?()","tuesday?()","tv_nsec()","tv_sec()","tv_sec()","tv_usec()","type()","type()","type()","type()","type()","type2name()","type=()","type_cast()","type_cast()","type_cast()","type_cast_attribute_for_write()","type_params()","type_to_sql()","type_to_sql()","typealias()","typecode=()","typekind()","typelibs()","typelibs()","types()","u()","u()","u_unpack()","udp()","udp_server_loop()","udp_server_loop_on()","udp_server_recv()","udp_server_sockets()","ui()","ui()","ui()","ui=()","ui=()","uid()","uid()","uid=()","uid_copy()","uid_fetch()","uid_search()","uid_sort()","uid_store()","uid_thread()","uidl()","umask()","umount()","unadvise()","unalias_command()","unalias_command()","unbind()","unbind()","unbind_at_call()","unbind_at_call()","uncached()","uncached()","unconverted_fields?()","uncountable()","uncountable?()","uncountable?()","undef_system_command()","undef_system_command()","undefine_attribute_methods()","undefine_attribute_methods()","undefine_attribute_methods()","undefine_finalizer()","underscore()","underscore()","undoc_params()","unescape()","unescape()","unescape()","unescape()","unescape()","unescape()","unescapeelement()","unescapehtml()","unescape_bytea()","unescape_element()","unescape_form()","unescape_html()","unescape_path()","unget()","unget_tk()","ungetbyte()","ungetbyte()","ungetbyte()","ungetc()","ungetc()","ungetc()","ungetc()","ungetc()","ungetch()","ungetmouse()","uninstall()","uninstall()","uninstall_doc()","uninstall_gem()","uninstall_old_gemcutter()","union()","union()","union()","uniq()","uniq()","uniq!()","uniq_by()","uniq_by!()","unique_classes()","unique_classes_and_modules()","unique_id()","unique_modules()","unit()","unitary?()","unix()","unix()","unix?()","unix?()","unix_path()","unix_rights()","unix_rights()","unix_server_loop()","unix_server_socket()","unknown()","unlink()","unlink()","unlink()","unlink()","unlink()","unlock()","unlock()","unlock()","unmask_protected_sequences()","unmemoize_all()","unmount()","unnormalize()","unnormalize()","unnormalized()","unpack()","unpack()","unpack()","unpack()","unpack()","unpack_sockaddr_in()","unpack_sockaddr_un()","unpackdw()","unpackqw()","unregist()","unregister()","unregister_command()","unresolved_deps()","unscan()","unserialize()","unserialized_value()","unshift()","unshift()","unshift()","unshift()","unsigned_value()","unsubscribe()","unsubscribe()","unsubscribe()","untaint()","untaint()","untaint()","until()","until()","untrace_var()","untrust()","untrust()","untrusted?()","unused()","up()","upcase()","upcase()","upcase()","upcase!()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_aliases()","update_all()","update_attribute()","update_attribute()","update_attributes()","update_attributes()","update_attributes()","update_attributes!()","update_checksum()","update_column()","update_counters()","update_counters()","update_gem()","update_gems()","update_includes()","update_index()","update_output_dir()","update_ri_cache()","update_rubygems()","update_specs_index()","update_sql()","update_sql()","updated()","updated()","updated()","updated()","updated()","updated()","updated()","updated=()","updated=()","updated=()","updated?()","upgrade_to_class()","upload()","upload()","upload()","upload()","upload()","upload()","upload()","upload()","upload_files()","upper()","upper_bound()","upper_bound=()","upper_triangular?()","upto()","upto()","upto()","uptodate?()","uri()","uri_escaper()","uri_option()","uri_option()","uri_option()","uri_option()","uri_registered?()","url()","url_encode()","url_field()","url_field_tag()","url_for()","url_for()","url_for()","url_for()","url_options()","url_options()","url_options()","urlsafe_base64()","urlsafe_decode64()","urlsafe_encode64()","us_zones()","usage()","usage_path()","use()","use()","use()","use()","use_accept_header()","use_checkout?()","use_default_colors()","use_externals?()","use_loader()","use_loader=()","use_loader?()","use_paths()","use_prefix()","use_readline=()","use_registry()","use_renderer()","use_renderers()","use_ssl=()","use_ssl=()","use_ssl?()","use_ssl?()","use_ssl?()","use_ssl?()","use_ssl?()","use_ssl?()","use_ssl?()","use_ssl?()","use_ssl?()","use_ssl?()","use_svn?()","use_tracer=()","use_ui()","use_ui()","use_zone()","usec()","usec()","user()","user()","user=()","user=()","user=()","user=()","user_agent()","user_dir()","user_home()","user_name_and_password()","userinfo()","userinfo=()","uses_transaction()","uses_transaction?()","using_limitable_reflections?()","using_match_shorthand?()","utc()","utc()","utc()","utc()","utc?()","utc?()","utc?()","utc_offset()","utc_offset()","utc_offset()","utc_offset()","utc_time()","utc_to_local()","utf8_enforcer_tag()","utime()","utime()","uuid()","uuid()","v()","v_inv()","valid?()","valid?()","valid?()","valid?()","valid_accept_header()","valid_alter_table_options()","valid_civil?()","valid_commercial?()","valid_const?()","valid_const?()","valid_date?()","valid_encoding?()","valid_jd?()","valid_ordinal?()","valid_scope_name?()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate_digest_response()","validate_duplicate_links()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_fallbacks()","validate_for_stream()","validate_nonce()","validate_one_tag_name()","validates()","validates!()","validates_acceptance_of()","validates_associated()","validates_confirmation_of()","validates_each()","validates_exclusion_of()","validates_format_of()","validates_inclusion_of()","validates_length_of()","validates_numericality_of()","validates_presence_of()","validates_size_of()","validates_uniqueness_of()","validates_with()","validates_with()","validators()","validators_on()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value=()","value=()","value=()","value=()","value=()","value=()","value?()","value?()","value?()","value?()","value?()","value_before_type_cast()","value_before_type_cast()","values()","values()","values()","values()","values()","values()","values()","values()","values()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","var_list()","variable_is_set?()","variable_kind()","variables()","variables()","variables=()","variables=()","varkind()","vartype()","vendor()","vendor()","vendor_javascripts()","vendor_plugins()","vendor_stylesheets()","ver()","ver()","verbose()","verbose()","verbose()","verbose()","verbose=()","verbose=()","verbose?()","verified_request?()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify!()","verify_api_key()","verify_authenticity_token()","verify_callback=()","verify_certificate_identity()","verify_gem()","verify_gem()","verify_gem_file()","verify_gem_home()","verify_request?()","verify_result()","verify_trust_dir()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version=()","version=()","version=()","version=()","version_1_2()","version_1_2()","version_1_2?()","version_1_2?()","versions()","vi_editing_mode()","vi_editing_mode?()","video_path()","video_tag()","view_assigns()","view_context()","view_context_class()","view_context_class()","view_paths()","view_paths=()","view_paths=()","view_renderer()","virtual_host()","visible?()","visible?()","visible?()","visible?()","visible_action?()","visit_array()","visit_bigdecimal()","visit_class()","visit_complex()","visit_date()","visit_datetime()","visit_exception()","visit_falseclass()","visit_float()","visit_hash()","visit_integer()","visit_module()","visit_nilclass()","visit_object()","visit_psych_nodes_alias()","visit_psych_nodes_alias()","visit_psych_nodes_document()","visit_psych_nodes_document()","visit_psych_nodes_mapping()","visit_psych_nodes_mapping()","visit_psych_nodes_scalar()","visit_psych_nodes_scalar()","visit_psych_nodes_sequence()","visit_psych_nodes_sequence()","visit_psych_nodes_stream()","visit_psych_nodes_stream()","visit_psych_omap()","visit_psych_set()","visit_range()","visit_rational()","visit_regexp()","visit_string()","visit_string()","visit_struct()","visit_symbol()","visit_time()","visit_trueclass()","voidcmd()","w3cdtf()","w3cdtf()","wait()","wait()","wait()","wait()","wait()","wait()","wait2()","wait?()","wait?()","wait_all_jobs_execution()","wait_to_finish_all_process_controllers()","wait_until()","wait_while()","wait_writable()","waitall()","waitfor()","waiting()","waiting_job?()","waiting_jobs()","waiting_jobs_exist?()","waitpid()","waitpid2()","wakeup()","wants?()","warn()","warn()","warn()","warn()","warn()","warn()","warn?()","warn?()","watch()","watch_namespaces()","watchable_args()","watchable_dirs()","watchable_files()","watching?()","wday()","wday()","weakref_alive?()","wednesday?()","wednesday?()","week()","weeks()","weeks_ago()","weeks_ago()","when_invoked()","when_writing()","where()","where_values_hash()","which_to_update()","whitespace()","why_not_ok?()","win32_last_error()","win32_last_error()","win32_last_error=()","win_platform?()","windows?()","windows?()","windows_stub_script()","winsize()","winsize=()","with()","with()","with()","with_backend()","with_backend()","with_config()","with_connection()","with_default_scope()","with_defaults()","with_dummy_app?()","with_exclusive_scope()","with_exclusive_scope()","with_fallbacks()","with_friend()","with_index()","with_indifferent_access()","with_indifferent_access()","with_indifferent_access()","with_local_cache()","with_lock()","with_object()","with_object()","with_options()","with_response()","with_scope()","with_scope_level()","with_transaction_returning_status()","with_warnings()","without()","without_modules()","word_wrap()","wordy()","workspaces()","world_readable?()","world_readable?()","world_readable?()","world_readable?()","world_writable?()","world_writable?()","world_writable?()","world_writable?()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap_arg()","wrap_args()","wrap_parameters()","wrap_result()","wrap_with_namespace()","writable?()","writable?()","writable?()","writable?()","writable_real?()","writable_real?()","writable_real?()","writable_real?()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","writeto()","write_asset()","write_attribute()","write_bin()","write_cdata()","write_cdata()","write_comment()","write_comment()","write_document()","write_document()","write_element()","write_element()","write_element()","write_entry()","write_entry()","write_fragment()","write_headers?()","write_i()","write_instruction()","write_manifest()","write_nonblock()","write_nonblock()","write_require_paths_file_if_needed()","write_s()","write_service()","write_smime()","write_spec()","write_style_sheet()","write_text()","write_text()","write_text()","write_with_substitution()","wtime2time()","xhr?()","xhtml()","xhtml()","xhtml=()","xlist()","xml()","xml()","xml()","xml=()","xmldecl()","xml_content=()","xml_content=()","xml_decl()","xml_getter()","xml_getter()","xml_http_request?()","xml_setter()","xml_setter()","xmldecl()","xmldecl()","xmldecl()","xmldecl()","xmldecl()","xmldecl()","xmldecl?()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmp()","xpath()","xpath()","xpath()","yaml()","yaml?()","yaml_as()","yaml_initialize()","yaml_tag()","yday()","yday()","year()","year()","year()","year=()","years()","years_ago()","years_ago()","years_since()","years_since()","yesterday()","yesterday()","yesterday()","yield()","yield()","zero()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zip()","zip()","zip?()","zip_file()","zlib_version()","zone()","zone()","zone()","zone=()","zone_offset()","zones_map()","|()","|()","|()","|()","|()","|()","|()","|()","|()","~()","~()","~()","~()","~()"],"longSearchIndex":["Rails basicobject#!()","Rails delegator#!()","Rails basicobject#!=()","Rails delegator#!=()","Rails object#!~()","Rails bigdecimal#%()","Rails bignum#%()","Rails fixnum#%()","Rails float#%()","Rails numeric#%()","Rails string_or_failed_format::%()","Rails string#%()","Rails array#&()","Rails bignum#&()","Rails falseclass#&()","Rails fixnum#&()","Rails ipaddr#&()","Rails nilclass#&()","Rails process::status#&()","Rails set#&()","Rails trueclass#&()","Rails array#*()","Rails benchmark::tms#*()","Rails bigdecimal#*()","Rails bignum#*()","Rails complex#*()","Rails fixnum#*()","Rails float#*()","Rails matrix#*()","Rails rake::filelist#*()","Rails rational#*()","Rails string#*()","Rails vector#*()","Rails bigdecimal#**()","Rails bignum#**()","Rails complex#**()","Rails fixnum#**()","Rails float#**()","Rails matrix#**()","Rails rational#**()","Ruby activemodel::massassignmentsecurity::permissionset#+()","Ruby activesupport::duration#+()","Ruby activesupport::multibyte::chars#+()","Ruby activesupport::safebuffer#+()","Ruby activesupport::timewithzone#+()","Ruby rails::initializable::collection#+()","Rails array#+()","Rails benchmark::tms#+()","Rails bigdecimal#+()","Rails bignum#+()","Rails complex#+()","Rails dl::cptr#+()","Rails dl::cptr#+()","Rails date#+()","Rails fixnum#+()","Rails float#+()","Rails matrix#+()","Rails pathname#+()","Rails rational#+()","Rails set#+()","Rails shell::filter#+()","Rails string#+()","Rails time#+()","Rails uri::generic#+()","Rails vector#+()","Rails bigdecimal#+@()","Rails dl::cptr#+@()","Rails dl::cptr#+@()","Rails numeric#+@()","Ruby activesupport::duration#-()","Ruby activesupport::timewithzone#-()","Ruby time#-()","Rails array#-()","Rails benchmark::tms#-()","Rails bigdecimal#-()","Rails bignum#-()","Rails complex#-()","Rails dl::cptr#-()","Rails dl::cptr#-()","Rails date#-()","Rails fixnum#-()","Rails float#-()","Rails matrix#-()","Rails rational#-()","Rails set#-()","Rails time#-()","Rails uri::generic#-()","Rails vector#-()","Rails bigdecimal#-@()","Rails bignum#-@()","Rails complex#-@()","Rails dl::cptr#-@()","Rails dl::cptr#-@()","Rails fixnum#-@()","Rails float#-@()","Rails numeric#-@()","Rails benchmark::tms#/()","Rails bigdecimal#/()","Rails bignum#/()","Rails complex#/()","Rails fixnum#/()","Rails float#/()","Rails matrix#/()","Rails openssl::bn#/()","Rails rational#/()","Rails vector#/()","Rails bigdecimal#<()","Rails bignum#<()","Rails comparable#<()","Rails fixnum#<()","Rails float#<()","Rails module#<()","Rails shell::filter#<()","Ruby activesupport::safebuffer#<<()","Rails array#<<()","Rails bignum#<<()","Rails csv#<<()","Rails csv::row#<<()","Rails csv::table#<<()","Rails curses::window#<<()","Rails date#<<()","Rails digest::hmac#<<()","Rails digest::instance#<<()","Rails fixnum#<<()","Rails io#<<()","Rails io::writable#<<()","Rails ipaddr#<<()","Rails logger#<<()","Rails openssl::buffering#<<()","Rails openssl::digest#<<()","Rails openssl::hmac#<<()","Rails psych::visitors::yamltree#<<()","Rails queue#<<()","Rails rdoc::markup::document#<<()","Rails rdoc::markup::list#<<()","Rails rdoc::markup::listitem#<<()","Rails rdoc::markup::raw#<<()","Rails rexml::attributes#<<()","Rails rexml::document#<<()","Rails rexml::elements#<<()","Rails rexml::light::node#<<()","Rails rexml::output#<<()","Rails rexml::parent#<<()","Rails rexml::text#<<()","Rails rexml::validation::choice#<<()","Rails rexml::validation::state#<<()","Rails rss::xml::element#<<()","Rails set#<<()","Rails sizedqueue#<<()","Rails string#<<()","Rails stringscanner#<<()","Rails webrick::basiclog#<<()","Rails webrick::cgi::socket#<<()","Rails webrick::httputils::formdata#<<()","Rails zlib::deflate#<<()","Rails zlib::gzipwriter#<<()","Rails zlib::inflate#<<()","Rails bigdecimal#<=()","Rails bignum#<=()","Rails comparable#<=()","Rails fixnum#<=()","Rails float#<=()","Rails module#<=()","Ruby activerecord::base#<=>()","Ruby activerecord::connectionadapters::sqliteadapter::version#<=>()","Ruby activesupport::multibyte::chars#<=>()","Ruby activesupport::timewithzone#<=>()","Ruby activesupport::timezone#<=>()","Ruby datetime#<=>()","Ruby time#<=>()","Rails array#<=>()","Rails bigdecimal#<=>()","Rails bignum#<=>()","Rails dl::cptr#<=>()","Rails dl::cptr#<=>()","Rails date#<=>()","Rails file::stat#<=>()","Rails fixnum#<=>()","Rails float#<=>()","Rails gem::dependency#<=>()","Rails gem::version#<=>()","Rails ipaddr#<=>()","Rails irb::notifier::levelednotifier#<=>()","Rails module#<=>()","Rails numeric#<=>()","Rails object#<=>()","Rails openssl::x509::name#<=>()","Rails pathname#<=>()","Rails rdoc::alias#<=>()","Rails rdoc::constant#<=>()","Rails rdoc::context#<=>()","Rails rdoc::include#<=>()","Rails rdoc::methodattr#<=>()","Rails rexml::comment#<=>()","Rails rexml::text#<=>()","Rails rss::maker::itemsbase::itembase#<=>()","Rails rake::earlytime#<=>()","Rails rational#<=>()","Rails string#<=>()","Rails symbol#<=>()","Rails time#<=>()","Rails webrick::httpversion#<=>()","Ruby actiondispatch::middlewarestack::middleware#==()","Ruby actionview::filesystemresolver#==()","Ruby activerecord::base#==()","Ruby activerecord::reflection::macroreflection#==()","Ruby activerecord::relation#==()","Ruby activeresource::base#==()","Ruby activeresource::request#==()","Ruby activeresource::response#==()","Ruby activesupport::duration#==()","Ruby mime::type#==()","Rails array#==()","Rails basicobject#==()","Rails bigdecimal#==()","Rails bignum#==()","Rails csv::row#==()","Rails csv::table#==()","Rails comparable#==()","Rails complex#==()","Rails dl::cptr#==()","Rails dl::cptr#==()","Rails drb::drbobject#==()","Rails delegator#==()","Rails digest::instance#==()","Rails encoding::converter#==()","Rails exception#==()","Rails fixnum#==()","Rails float#==()","Rails gem::platform#==()","Rails hash#==()","Rails ipaddr#==()","Rails matchdata#==()","Rails matrix#==()","Rails method#==()","Rails module#==()","Rails openssl::bn#==()","Rails openssl::pkey::ec::group#==()","Rails openssl::pkey::ec::point#==()","Rails openssl::ssl::session#==()","Rails openstruct#==()","Rails pathname#==()","Rails proc#==()","Rails process::status#==()","Rails rdoc::attr#==()","Rails rdoc::constant#==()","Rails rdoc::context::section#==()","Rails rdoc::markup::special#==()","Rails rdoc::toplevel#==()","Rails rexml::attribute#==()","Rails rexml::comment#==()","Rails rexml::instruction#==()","Rails rexml::validation::event#==()","Rails rexml::xmldecl#==()","Rails rss::xml::element#==()","Rails rake::filelist#==()","Rails random#==()","Rails range#==()","Rails rational#==()","Rails regexp#==()","Rails set#==()","Rails string#==()","Rails struct#==()","Rails symbol#==()","Rails uri::generic#==()","Rails unboundmethod#==()","Rails vector#==()","Rails win32::sspi::sspiresult#==()","Rails xmlrpc::datetime#==()","Ruby activerecord::base::===()","Ruby activesupport::multibyte::unicode::unicodedatabase#===()","Ruby mime::type#===()","Ruby time::===()","Rails bigdecimal#===()","Rails bignum#===()","Rails date#===()","Rails fixnum#===()","Rails float#===()","Rails gem::platform#===()","Rails gem::requirement#===()","Rails ipaddr#===()","Rails module#===()","Rails object#===()","Rails openssl::bn#===()","Rails pathname#===()","Rails proc#===()","Rails range#===()","Rails regexp#===()","Rails rinda::drbobjecttemplate#===()","Rails rinda::template#===()","Rails rinda::templateentry#===()","Rails string#===()","Rails symbol#===()","Rails systemcallerror::===()","Ruby activesupport::multibyte::chars#=~()","Ruby activesupport::timezone#=~()","Ruby mime::type#=~()","Rails gem::dependency#=~()","Rails gem::platform#=~()","Rails gem::requirement#=~()","Rails object#=~()","Rails rexml::light::node#=~()","Rails regexp#=~()","Rails string#=~()","Rails symbol#=~()","Rails bigdecimal#>()","Rails bignum#>()","Rails comparable#>()","Rails fixnum#>()","Rails float#>()","Rails module#>()","Rails shell::filter#>()","Rails bigdecimal#>=()","Rails bignum#>=()","Rails comparable#>=()","Rails fixnum#>=()","Rails float#>=()","Rails module#>=()","Ruby date#>>()","Rails bignum#>>()","Rails date#>>()","Rails fixnum#>>()","Rails ipaddr#>>()","Rails process::status#>>()","Rails rake::pseudostatus#>>()","Rails shell::filter#>>()","Rails acl","Rails acl::aclentry","Rails acl::acllist","Rails net::pop3::apop()","Rails net::pop3::apop()","Rails net::pop3::apop()","Rails net::pop3::apop()","Rails argf","Rails abbrev","Ruby abstractcontroller","Ruby abstractcontroller::actionnotfound","Ruby abstractcontroller::assetpaths","Ruby abstractcontroller::base","Ruby abstractcontroller::callbacks","Ruby abstractcontroller::callbacks::classmethods","Ruby abstractcontroller::collector","Ruby abstractcontroller::doublerendererror","Ruby abstractcontroller::error","Ruby abstractcontroller::helpers","Ruby abstractcontroller::helpers::classmethods","Ruby abstractcontroller::layouts","Ruby abstractcontroller::layouts::classmethods","Ruby abstractcontroller::layouts::classmethods::layoutconditions","Ruby abstractcontroller::logger","Ruby abstractcontroller::railties","Ruby abstractcontroller::railties::routeshelpers","Ruby abstractcontroller::rendering","Ruby abstractcontroller::rendering::classmethods","Ruby abstractcontroller::translation","Ruby abstractcontroller::urlfor","Ruby abstractcontroller::urlfor::classmethods","Ruby abstractcontroller::viewpaths","Ruby abstractcontroller::viewpaths::classmethods","Ruby actioncontroller","Ruby actioncontroller::base","Ruby actioncontroller::caching","Ruby actioncontroller::caching::actions","Ruby actioncontroller::caching::actions::actioncachepath","Ruby actioncontroller::caching::actions::classmethods","Ruby actioncontroller::caching::configmethods","Ruby actioncontroller::caching::fragments","Ruby actioncontroller::caching::pages","Ruby actioncontroller::caching::pages::classmethods","Ruby actioncontroller::caching::sweeping","Ruby actioncontroller::compatibility","Ruby actioncontroller::conditionalget","Ruby actioncontroller::cookies","Ruby actioncontroller::datastreaming","Ruby actioncontroller::flash","Ruby actioncontroller::forcessl","Ruby actioncontroller::forcessl::classmethods","Ruby actioncontroller::head","Ruby actioncontroller::helpers","Ruby actioncontroller::helpers::classmethods","Ruby actioncontroller::hideactions","Ruby actioncontroller::hideactions::classmethods","Ruby actioncontroller::httpauthentication","Ruby actioncontroller::httpauthentication::basic","Ruby actioncontroller::httpauthentication::basic::controllermethods","Ruby actioncontroller::httpauthentication::basic::controllermethods::classmethods","Ruby actioncontroller::httpauthentication::digest","Ruby actioncontroller::httpauthentication::digest::controllermethods","Ruby actioncontroller::httpauthentication::token","Ruby actioncontroller::httpauthentication::token::controllermethods","Ruby actioncontroller::implicitrender","Ruby actioncontroller::instrumentation","Ruby actioncontroller::instrumentation::classmethods","Ruby actioncontroller::logsubscriber","Ruby actioncontroller::metal","Ruby actioncontroller::middleware","Ruby actioncontroller::middleware::actionmiddleware","Ruby actioncontroller::mimeresponds","Ruby actioncontroller::mimeresponds::classmethods","Ruby actioncontroller::paramswrapper","Ruby actioncontroller::paramswrapper::classmethods","Ruby actioncontroller::rackdelegation","Ruby actioncontroller::railtie","Ruby actioncontroller::railties","Ruby actioncontroller::railties::paths","Ruby actioncontroller::recordidentifier","Ruby actioncontroller::redirecting","Ruby actioncontroller::renderers","Ruby actioncontroller::renderers::all","Ruby actioncontroller::renderers::classmethods","Ruby actioncontroller::rendering","Ruby actioncontroller::requestforgeryprotection","Ruby actioncontroller::requestforgeryprotection::classmethods","Ruby actioncontroller::rescue","Ruby actioncontroller::responder","Ruby actioncontroller::sessionmanagement","Ruby actioncontroller::sessionmanagement::classmethods","Ruby actioncontroller::streaming","Ruby actioncontroller::urlfor","Ruby actiondispatch","Ruby actiondispatch::beststandardssupport","Ruby actiondispatch::bodyproxy","Ruby actiondispatch::callbacks","Ruby actiondispatch::cookies","Ruby actiondispatch::cookies::cookieoverflow","Ruby actiondispatch::debugexceptions","Ruby actiondispatch::exceptionwrapper","Ruby actiondispatch::filehandler","Ruby actiondispatch::flash","Ruby actiondispatch::flash::flashhash","Ruby actiondispatch::head","Ruby actiondispatch::http","Ruby actiondispatch::http::cache","Ruby actiondispatch::http::cache::request","Ruby actiondispatch::http::cache::response","Ruby actiondispatch::http::filterparameters","Ruby actiondispatch::http::headers","Ruby actiondispatch::http::mimenegotiation","Ruby actiondispatch::http::parameterfilter","Ruby actiondispatch::http::parameters","Ruby actiondispatch::http::url","Ruby actiondispatch::http::upload","Ruby actiondispatch::http::uploadedfile","Ruby actiondispatch::middlewarestack","Ruby actiondispatch::middlewarestack::middleware","Ruby actiondispatch::paramsparser","Ruby actiondispatch::publicexceptions","Ruby actiondispatch::railsentitystore","Ruby actiondispatch::railsmetastore","Ruby actiondispatch::railtie","Ruby actiondispatch::reloader","Ruby actiondispatch::remoteip","Ruby actiondispatch::remoteip::getip","Ruby actiondispatch::remoteip::ipspoofattackerror","Ruby actiondispatch::request","Ruby actiondispatch::requestid","Ruby actiondispatch::rescue","Ruby actiondispatch::response","Ruby actiondispatch::routing","Ruby actiondispatch::routing::mapper","Ruby actiondispatch::routing::mapper::base","Ruby actiondispatch::routing::mapper::httphelpers","Ruby actiondispatch::routing::mapper::resources","Ruby actiondispatch::routing::mapper::scoping","Ruby actiondispatch::routing::polymorphicroutes","Ruby actiondispatch::routing::redirection","Ruby actiondispatch::routing::routeset","Ruby actiondispatch::routing::routeset::mountedhelpers","Ruby actiondispatch::routing::urlfor","Ruby actiondispatch::session","Ruby actiondispatch::session::abstractstore","Ruby actiondispatch::session::cachestore","Ruby actiondispatch::session::compatibility","Ruby actiondispatch::session::cookiestore","Ruby actiondispatch::session::destroyablesession","Ruby actiondispatch::session::memcachestore","Ruby actiondispatch::session::stalesessioncheck","Ruby actiondispatch::showexceptions","Ruby actiondispatch::static","Ruby actionmailer","Ruby actionmailer::base","Ruby actionmailer::collector","Ruby actionmailer::deliverymethods","Ruby actionmailer::deliverymethods::classmethods","Ruby actionmailer::logsubscriber","Ruby actionmailer::mailhelper","Ruby actionmailer::railtie","Ruby actionpack","Ruby actionview","Ruby actionview::base","Ruby actionview::context","Ruby actionview::filesystemresolver","Ruby actionview::helpers","Ruby actionview::helpers::activemodelhelper","Ruby actionview::helpers::activemodelinstancetag","Ruby actionview::helpers::assetpaths","Ruby actionview::helpers::assettaghelper","Ruby actionview::helpers::assettaghelper::assetincludetag","Ruby actionview::helpers::assettaghelper::javascriptincludetag","Ruby actionview::helpers::assettaghelper::javascripttaghelpers","Ruby actionview::helpers::assettaghelper::javascripttaghelpers::classmethods","Ruby actionview::helpers::assettaghelper::stylesheetincludetag","Ruby actionview::helpers::assettaghelper::stylesheettaghelpers","Ruby actionview::helpers::assettaghelper::stylesheettaghelpers::classmethods","Ruby actionview::helpers::atomfeedhelper","Ruby actionview::helpers::atomfeedhelper::atombuilder","Ruby actionview::helpers::atomfeedhelper::atomfeedbuilder","Ruby actionview::helpers::cachehelper","Ruby actionview::helpers::capturehelper","Ruby actionview::helpers::csrfhelper","Ruby actionview::helpers::datehelper","Ruby actionview::helpers::datehelperinstancetag","Ruby actionview::helpers::debughelper","Ruby actionview::helpers::formbuilder","Ruby actionview::helpers::formhelper","Ruby actionview::helpers::formoptionshelper","Ruby actionview::helpers::formtaghelper","Ruby actionview::helpers::instancetag","Ruby actionview::helpers::javascripthelper","Ruby actionview::helpers::numberhelper","Ruby actionview::helpers::numberhelper::invalidnumbererror","Ruby actionview::helpers::outputsafetyhelper","Ruby actionview::helpers::recordtaghelper","Ruby actionview::helpers::renderinghelper","Ruby actionview::helpers::sanitizehelper","Ruby actionview::helpers::taghelper","Ruby actionview::helpers::texthelper","Ruby actionview::helpers::translationhelper","Ruby actionview::helpers::urlhelper","Ruby actionview::logsubscriber","Ruby actionview::lookupcontext","Ruby actionview::lookupcontext::detailscache","Ruby actionview::lookupcontext::viewpaths","Ruby actionview::partialrenderer","Ruby actionview::railtie","Ruby actionview::renderer","Ruby actionview::resolver","Ruby actionview::resolver::path","Ruby actionview::template","Ruby actionview::template::handlers","Ruby actionview::template::handlers::builder","Ruby actionview::template::handlers::erb","Ruby actionview::template::handlers::erubis","Ruby activemodel","Ruby activemodel::attributemethods","Ruby activemodel::attributemethods::classmethods","Ruby activemodel::attributemethods::classmethods::attributemethodmatcher","Ruby activemodel::blockvalidator","Ruby activemodel::callbacks","Ruby activemodel::conversion","Ruby activemodel::dirty","Ruby activemodel::eachvalidator","Ruby activemodel::errors","Ruby activemodel::lint","Ruby activemodel::lint::tests","Ruby activemodel::massassignmentsecurity","Ruby activemodel::massassignmentsecurity::blacklist","Ruby activemodel::massassignmentsecurity::classmethods","Ruby activemodel::massassignmentsecurity::error","Ruby activemodel::massassignmentsecurity::loggersanitizer","Ruby activemodel::massassignmentsecurity::permissionset","Ruby activemodel::massassignmentsecurity::sanitizer","Ruby activemodel::massassignmentsecurity::strictsanitizer","Ruby activemodel::massassignmentsecurity::whitelist","Ruby activemodel::missingattributeerror","Ruby activemodel::name","Ruby activemodel::naming","Ruby activemodel::observer","Ruby activemodel::observerarray","Ruby activemodel::observing","Ruby activemodel::observing::classmethods","Ruby activemodel::securepassword","Ruby activemodel::securepassword::classmethods","Ruby activemodel::securepassword::instancemethodsonactivation","Ruby activemodel::serialization","Ruby activemodel::serializers","Ruby activemodel::serializers::json","Ruby activemodel::serializers::xml","Ruby activemodel::strictvalidationfailed","Ruby activemodel::translation","Ruby activemodel::validations","Ruby activemodel::validations::acceptancevalidator","Ruby activemodel::validations::callbacks","Ruby activemodel::validations::callbacks::classmethods","Ruby activemodel::validations::classmethods","Ruby activemodel::validations::confirmationvalidator","Ruby activemodel::validations::exclusionvalidator","Ruby activemodel::validations::formatvalidator","Ruby activemodel::validations::helpermethods","Ruby activemodel::validations::inclusionvalidator","Ruby activemodel::validations::lengthvalidator","Ruby activemodel::validations::numericalityvalidator","Ruby activemodel::validations::presencevalidator","Ruby activemodel::validations::withvalidator","Ruby activemodel::validator","Ruby activerecord","Ruby activerecord::activerecorderror","Ruby activerecord::adapternotfound","Ruby activerecord::adapternotspecified","Ruby activerecord::aggregations","Ruby activerecord::aggregations::classmethods","Ruby activerecord::associationtypemismatch","Ruby activerecord::associations","Ruby activerecord::associations::classmethods","Ruby activerecord::attributeassignment","Ruby activerecord::attributeassignment::classmethods","Ruby activerecord::attributeassignmenterror","Ruby activerecord::attributemethods","Ruby activerecord::attributemethods::beforetypecast","Ruby activerecord::attributemethods::classmethods","Ruby activerecord::attributemethods::deprecatedunderscoreread","Ruby activerecord::attributemethods::deprecatedunderscoreread::classmethods","Ruby activerecord::attributemethods::dirty","Ruby activerecord::attributemethods::primarykey","Ruby activerecord::attributemethods::primarykey::classmethods","Ruby activerecord::attributemethods::query","Ruby activerecord::attributemethods::read","Ruby activerecord::attributemethods::read::classmethods","Ruby activerecord::attributemethods::serialization","Ruby activerecord::attributemethods::serialization::attribute","Ruby activerecord::attributemethods::serialization::classmethods","Ruby activerecord::attributemethods::timezoneconversion","Ruby activerecord::attributemethods::timezoneconversion::classmethods","Ruby activerecord::attributemethods::write","Ruby activerecord::attributemethods::write::classmethods","Ruby activerecord::autosaveassociation","Ruby activerecord::autosaveassociation::classmethods","Ruby activerecord::base","Ruby activerecord::batches","Ruby activerecord::calculations","Ruby activerecord::callbacks","Ruby activerecord::coders","Ruby activerecord::coders::yamlcolumn","Ruby activerecord::configurationerror","Ruby activerecord::connectionadapters","Ruby activerecord::connectionadapters::abstractadapter","Ruby activerecord::connectionadapters::abstractmysqladapter","Ruby activerecord::connectionadapters::column","Ruby activerecord::connectionadapters::column::format","Ruby activerecord::connectionadapters::connectionhandler","Ruby activerecord::connectionadapters::connectionmanagement","Ruby activerecord::connectionadapters::connectionpool","Ruby activerecord::connectionadapters::databaselimits","Ruby activerecord::connectionadapters::databasestatements","Ruby activerecord::connectionadapters::mysql2adapter","Ruby activerecord::connectionadapters::mysqladapter","Ruby activerecord::connectionadapters::mysqladapter::statementpool","Ruby activerecord::connectionadapters::postgresqladapter","Ruby activerecord::connectionadapters::postgresqladapter::statementpool","Ruby activerecord::connectionadapters::postgresqladapter::tabledefinition","Ruby activerecord::connectionadapters::postgresqladapter::utils","Ruby activerecord::connectionadapters::postgresqlcolumn","Ruby activerecord::connectionadapters::querycache","Ruby activerecord::connectionadapters::quoting","Ruby activerecord::connectionadapters::sqliteadapter","Ruby activerecord::connectionadapters::sqliteadapter::explainprettyprinter","Ruby activerecord::connectionadapters::sqliteadapter::statementpool","Ruby activerecord::connectionadapters::sqliteadapter::version","Ruby activerecord::connectionadapters::schemacache","Ruby activerecord::connectionadapters::schemastatements","Ruby activerecord::connectionadapters::statementpool","Ruby activerecord::connectionadapters::table","Ruby activerecord::connectionadapters::tabledefinition","Ruby activerecord::connectionnotestablished","Ruby activerecord::connectiontimeouterror","Ruby activerecord::countercache","Ruby activerecord::dangerousattributeerror","Ruby activerecord::delegation","Ruby activerecord::dynamicfindermatch","Ruby activerecord::dynamicmatchers","Ruby activerecord::dynamicscopematch","Ruby activerecord::explain","Ruby activerecord::findermethods","Ruby activerecord::fixtures","Ruby activerecord::fixtures::file","Ruby activerecord::generators","Ruby activerecord::generators::migration","Ruby activerecord::generators::migrationgenerator","Ruby activerecord::generators::modelgenerator","Ruby activerecord::generators::observergenerator","Ruby activerecord::generators::sessionmigrationgenerator","Ruby activerecord::identitymap","Ruby activerecord::identitymap::middleware","Ruby activerecord::inheritance","Ruby activerecord::inheritance::classmethods","Ruby activerecord::integration","Ruby activerecord::invalidforeignkey","Ruby activerecord::irreversiblemigration","Ruby activerecord::locking","Ruby activerecord::locking::optimistic","Ruby activerecord::locking::optimistic::classmethods","Ruby activerecord::locking::pessimistic","Ruby activerecord::logsubscriber","Ruby activerecord::migration","Ruby activerecord::migration::commandrecorder","Ruby activerecord::migrationproxy","Ruby activerecord::modelschema","Ruby activerecord::modelschema::classmethods","Ruby activerecord::multiparameterassignmenterrors","Ruby activerecord::nestedattributes","Ruby activerecord::nestedattributes::classmethods","Ruby activerecord::nestedattributes::toomanyrecords","Ruby activerecord::observer","Ruby activerecord::persistence","Ruby activerecord::persistence::classmethods","Ruby activerecord::preparedstatementinvalid","Ruby activerecord::querycache","Ruby activerecord::querycache::classmethods","Ruby activerecord::querymethods","Ruby activerecord::querying","Ruby activerecord::railtie","Ruby activerecord::railties","Ruby activerecord::railties::controllerruntime","Ruby activerecord::railties::controllerruntime::classmethods","Ruby activerecord::readonlyrecord","Ruby activerecord::readonlyattributes","Ruby activerecord::readonlyattributes::classmethods","Ruby activerecord::recordinvalid","Ruby activerecord::recordnotfound","Ruby activerecord::recordnotsaved","Ruby activerecord::recordnotunique","Ruby activerecord::reflection","Ruby activerecord::reflection::classmethods","Ruby activerecord::reflection::macroreflection","Ruby activerecord::relation","Ruby activerecord::result","Ruby activerecord::rollback","Ruby activerecord::sanitization","Ruby activerecord::sanitization::classmethods","Ruby activerecord::schema","Ruby activerecord::scoping","Ruby activerecord::scoping::classmethods","Ruby activerecord::scoping::default","Ruby activerecord::scoping::default::classmethods","Ruby activerecord::scoping::named","Ruby activerecord::scoping::named::classmethods","Ruby activerecord::serialization","Ruby activerecord::serializationtypemismatch","Ruby activerecord::sessionstore","Ruby activerecord::sessionstore::session","Ruby activerecord::sessionstore::sqlbypass","Ruby activerecord::spawnmethods","Ruby activerecord::staleobjecterror","Ruby activerecord::statementinvalid","Ruby activerecord::store","Ruby activerecord::store::classmethods","Ruby activerecord::testfixtures","Ruby activerecord::testfixtures::classmethods","Ruby activerecord::throwresult","Ruby activerecord::timestamp","Ruby activerecord::transactions","Ruby activerecord::transactions::classmethods","Ruby activerecord::translation","Ruby activerecord::unknownattributeerror","Ruby activerecord::unknownprimarykey","Ruby activerecord::validations","Ruby activerecord::validations::associatedvalidator","Ruby activerecord::validations::classmethods","Ruby activerecord::validations::uniquenessvalidator","Ruby activerecord::wrappeddatabaseexception","Ruby activeresource","Ruby activeresource::base","Ruby activeresource::connection","Ruby activeresource::custommethods","Ruby activeresource::custommethods::classmethods","Ruby activeresource::errors","Ruby activeresource::formats","Ruby activeresource::formats::jsonformat","Ruby activeresource::formats::xmlformat","Ruby activeresource::httpmock","Ruby activeresource::invalidrequesterror","Ruby activeresource::logsubscriber","Ruby activeresource::observing","Ruby activeresource::railtie","Ruby activeresource::request","Ruby activeresource::response","Ruby activeresource::sslerror","Ruby activeresource::timeouterror","Ruby activeresource::validations","Ruby activesupport","Ruby activesupport::autoload","Ruby activesupport::backtracecleaner","Ruby activesupport::base64","Ruby activesupport::basicobject","Ruby activesupport::benchmarkable","Ruby activesupport::bufferedlogger","Ruby activesupport::bufferedlogger::severity","Ruby activesupport::cache","Ruby activesupport::cache::entry","Ruby activesupport::cache::filestore","Ruby activesupport::cache::memcachestore","Ruby activesupport::cache::memorystore","Ruby activesupport::cache::nullstore","Ruby activesupport::cache::store","Ruby activesupport::cache::strategy","Ruby activesupport::cache::strategy::localcache","Ruby activesupport::cache::strategy::localcache::localstore","Ruby activesupport::callbacks","Ruby activesupport::callbacks::classmethods","Ruby activesupport::concern","Ruby activesupport::configurable","Ruby activesupport::configurable::classmethods","Ruby activesupport::configurable::configuration","Ruby activesupport::dependencies","Ruby activesupport::dependencies::classcache","Ruby activesupport::dependencies::watchstack","Ruby activesupport::deprecation","Ruby activesupport::descendantstracker","Ruby activesupport::duration","Ruby activesupport::fileupdatechecker","Ruby activesupport::filewatcher","Ruby activesupport::filewatcher::backend","Ruby activesupport::gzip","Ruby activesupport::gzip::stream","Ruby activesupport::hashwithindifferentaccess","Ruby activesupport::inflector","Ruby activesupport::inflector::inflections","Ruby activesupport::inheritableoptions","Ruby activesupport::json","Ruby activesupport::json::encoding","Ruby activesupport::json::encoding::circularreferenceerror","Ruby activesupport::json::encoding::encoder","Ruby activesupport::json::variable","Ruby activesupport::logsubscriber","Ruby activesupport::memoizable","Ruby activesupport::memoizable::instancemethods","Ruby activesupport::messageencryptor","Ruby activesupport::messageencryptor::invalidmessage","Ruby activesupport::messageverifier","Ruby activesupport::messageverifier::invalidsignature","Ruby activesupport::multibyte","Ruby activesupport::multibyte::chars","Ruby activesupport::multibyte::encodingerror","Ruby activesupport::multibyte::unicode","Ruby activesupport::multibyte::unicode::codepoint","Ruby activesupport::multibyte::unicode::unicodedatabase","Ruby activesupport::notifications","Ruby activesupport::notifications::event","Ruby activesupport::notifications::fanout","Ruby activesupport::notifications::instrumenter","Ruby activesupport::orderedhash","Ruby activesupport::orderedoptions","Ruby activesupport::railtie","Ruby activesupport::rescuable","Ruby activesupport::rescuable::classmethods","Ruby activesupport::safebuffer","Ruby activesupport::safebuffer::safeconcaterror","Ruby activesupport::stringinquirer","Ruby activesupport::taggedlogging","Ruby activesupport::timewithzone","Ruby activesupport::timezone","Ruby activesupport::xmlmini","Ruby activesupport::xmlmini_libxmlsax","Ruby activesupport::xmlmini_libxmlsax::hashbuilder","Ruby activesupport::xmlmini_nokogirisax","Ruby activesupport::xmlmini_nokogirisax::hashbuilder","Rails addrinfo","Ruby applicationcontroller","Ruby applicationhelper","Ruby arjdbcmysql","Ruby arjdbcmysql::error","Rails argumenterror","Ruby array","Rails array","Rails kernel#array()","Ruby base64","Rails base64","Rails basicobject","Rails basicsocket","Ruby benchmark","Rails benchmark","Rails benchmark::tms","Ruby bigdecimal","Rails bigdecimal","Rails kernel#bigdecimal()","Rails bigmath","Rails bignum","Rails binding","Ruby blog","Ruby blog::application","Ruby build","Rails cgi","Rails cgi::cookie","Rails cgi::htmlextension","Rails cgi::invalidencoding","Rails cgi::queryextension","Rails cgi::session","Rails cgi::session::filestore","Rails cgi::session::memorystore","Rails cgi::session::nullstore","Rails cgi::session::pstore","Rails cmath","Rails csv","Rails object#csv()","Rails csv::malformedcsverror","Rails csv::row","Rails csv::table","Rails win32api#call()","Ruby class","Rails class","Rails win32::registry::api#closekey()","Ruby comment","Ruby commentscontroller","Ruby commentshelper","Rails comparable","Rails complex","Rails kernel#complex()","Rails compositepublisher","Rails conditionvariable","Rails continuation","Rails coverage","Ruby createcomments","Rails win32::registry::api#createkey()","Ruby createposts","Ruby createtags","Ruby css","Ruby css::generators","Ruby css::generators::assetsgenerator","Ruby css::generators::scaffoldgenerator","Rails irb::currentcontext()","Rails curses","Rails curses::key","Rails curses::mouseevent","Rails curses::window","Rails dbm","Rails dbmerror","Rails thread::debug()","Rails thread::debug=()","Rails debugger__","Rails debugger__::context","Rails dl","Rails dl::basictypes","Rails dl::cfunc","Rails dl::cparser","Rails dl::cptr","Rails dl::cstruct","Rails dl::cstructbuilder","Rails dl::cstructentity","Rails dl::cunion","Rails dl::cunionentity","Rails dl::carriedfunction","Rails dl::compositehandler","Rails dl::dlerror","Rails dl::dltypeerror","Rails dl::function","Rails dl::handle","Rails dl::importer","Rails dl::packinfo","Rails dl::packer","Rails dl::stack","Rails dl::tempfunction","Rails dl::valueutil","Rails dl::win32types","Rails drb","Rails drb::drbarray","Rails drb::drbbadscheme","Rails drb::drbbaduri","Rails drb::drbconn","Rails drb::drbconnerror","Rails drb::drberror","Rails drb::drbidconv","Rails drb::drbmessage","Rails drb::drbobject","Rails drb::drbobservable","Rails drb::drbprotocol","Rails drb::drbremoteerror","Rails drb::drbsslsocket","Rails drb::drbsslsocket::sslconfig","Rails drb::drbserver","Rails drb::drbserver::invokemethod18mixin","Rails drb::drbservernotfound","Rails drb::drbtcpsocket","Rails drb::drbunixsocket","Rails drb::drbundumped","Rails drb::drbunknown","Rails drb::drbunknownerror","Rails drb::extserv","Rails drb::extservmanager","Rails drb::gw","Rails drb::gwidconv","Rails drb::timeridconv","Rails drb::timeridconv::timerholder2","Rails drb::timeridconv::timerholder2::invalidindexerror","Rails data","Ruby date","Rails date","Ruby datetime","Rails datetime","Rails object#delegateclass()","Rails delegator","Rails win32::registry::api#deletekey()","Rails win32::registry::api#deletevalue()","Rails digest","Rails object#digest()","Rails digest::base","Rails digest::class","Rails digest::hmac","Rails digest::instance","Rails dir","Rails bigmath#e()","Rails env","Rails eoferror","Ruby erb","Rails erb","Rails erb::defmethod","Ruby erb::util","Rails erb::util","Rails curses::escdelay()","Rails curses::escdelay=()","Rails encoding","Rails encoding::compatibilityerror","Rails encoding::converter","Rails encoding::converternotfounderror","Rails encoding::invalidbytesequenceerror","Rails encoding::undefinedconversionerror","Rails encodingerror","Rails win32::registry::api#enumkey()","Rails win32::registry::api#enumvalue()","Ruby enumerable","Rails enumerable","Rails enumerator","Rails enumerator::generator","Rails enumerator::yielder","Ruby erb","Ruby erb::generators","Ruby erb::generators::controllergenerator","Ruby erb::generators::mailergenerator","Ruby erb::generators::scaffoldgenerator","Rails errno","Rails errno::econnaborted","Rails errno::econnreset","Rails errno::eproto","Rails etc","Rails exception","Rails exception2messagemapper","Rails exception2messagemapper::e2mm","Rails exception2messagemapper::fail()","Rails exception2messagemapper::fail()","Rails exception2messagemapper#fail()","Rails exception2messagemapper#fail()","Rails sync_m::err::fail()","Rails sync_m::err::lockmodefailer::fail()","Rails sync_m::err::unknownlocker::fail()","Ruby falseclass","Rails falseclass","Rails fcntl","Rails fiber","Rails fibererror","Rails fiddle","Rails fiddle::closure","Rails fiddle::closure::blockcaller","Rails fiddle::function","Rails fiddle::pointer","Ruby file","Rails file","Rails file::constants","Rails file::stat","Rails filetest","Rails fileutils","Rails fileutils::dryrun","Rails fileutils::lowmethods","Rails fileutils::nowrite","Rails fileutils::streamutils_","Rails fileutils::verbose","Rails find","Rails fixnum","Ruby float","Rails float","Rails kernel#float()","Rails floatdomainerror","Rails win32::registry::api#flushkey()","Rails foo","Rails forwardable","Rails gc","Rails gc::profiler","Rails gdbm","Rails gdbmerror","Rails gdbmfatalerror","Ruby actiondispatch::request#get()","Rails gserver","Rails gem","Rails gem::builder","Rails gem::command","Rails gem::commandlineerror","Rails gem::commandmanager","Rails gem::commands","Rails gem::commands::buildcommand","Rails gem::commands::certcommand","Rails gem::commands::checkcommand","Rails gem::commands::cleanupcommand","Rails gem::commands::contentscommand","Rails gem::commands::dependencycommand","Rails gem::commands::environmentcommand","Rails gem::commands::fetchcommand","Rails gem::commands::generateindexcommand","Rails gem::commands::helpcommand","Rails gem::commands::installcommand","Rails gem::commands::listcommand","Rails gem::commands::lockcommand","Rails gem::commands::outdatedcommand","Rails gem::commands::ownercommand","Rails gem::commands::pristinecommand","Rails gem::commands::pushcommand","Rails gem::commands::querycommand","Rails gem::commands::rdoccommand","Rails gem::commands::searchcommand","Rails gem::commands::servercommand","Rails gem::commands::setupcommand","Rails gem::commands::sourcescommand","Rails gem::commands::specificationcommand","Rails gem::commands::stalecommand","Rails gem::commands::uninstallcommand","Rails gem::commands::unpackcommand","Rails gem::commands::updatecommand","Rails gem::commands::whichcommand","Rails gem::configfile","Rails gem::consoleui","Rails gem::defaultuserinteraction","Rails gem::dependency","Rails gem::dependencyerror","Rails gem::dependencyinstaller","Rails gem::dependencylist","Rails gem::dependencyremovalexception","Rails gem::deprecate","Rails gem::docmanager","Rails gem::documenterror","Rails gem::endofyamlexception","Rails gem::errorreason","Rails gem::exception","Rails gem::ext","Rails gem::ext::builder","Rails gem::ext::configurebuilder","Rails gem::ext::extconfbuilder","Rails gem::ext::rakebuilder","Rails gem::filepermissionerror","Rails gem::format","Rails gem::formatexception","Rails gem::gemnotfoundexception","Rails gem::gemnotinhomeexception","Rails gem::gempathsearcher","Rails gem::gemrunner","Rails gem::gemcutterutilities","Rails gem::indexer","Rails gem::installerror","Rails gem::installupdateoptions","Rails gem::installer","Rails gem::installer::extensionbuilderror","Rails gem::invalidspecificationexception","Rails gem::loaderror","Rails gem::localremoteoptions","Rails gem::mockgemui","Rails gem::mockgemui::systemexitexception","Rails gem::mockgemui::tty","Rails gem::mockgemui::termerror","Rails gem::noaliasyamltree","Rails gem::oldformat","Rails gem::operationnotsupportederror","Rails gem::package","Rails gem::package::badchecksum","Rails gem::package::closedio","Rails gem::package::error","Rails gem::package::fsyncdir","Rails gem::package::formaterror","Rails gem::package::nonseekableio","Rails gem::package::tarheader","Rails gem::package::tarinvaliderror","Rails gem::package::taroutput","Rails gem::package::tarreader","Rails gem::package::tarreader::entry","Rails gem::package::tarreader::unexpectedeof","Rails gem::package::tarwriter","Rails gem::package::tarwriter::boundedstream","Rails gem::package::tarwriter::fileoverflow","Rails gem::package::tarwriter::restrictedstream","Rails gem::package::toolongfilename","Rails gem::packagetask","Rails gem::pathsupport","Rails gem::platform","Rails gem::platformmismatch","Rails gem::remoteerror","Rails gem::remotefetcher","Rails gem::remotefetcher::fetcherror","Rails gem::remoteinstallationcancelled","Rails gem::remoteinstallationskipped","Rails gem::remotesourceexception","Rails gem::requirepathsbuilder","Rails gem::requirement","Rails gem::ssl","Rails gem::security","Rails gem::security::exception","Rails gem::security::policy","Rails gem::security::signer","Rails gem::server","Rails gem::silentui","Rails gem::sourceindex","Rails gem::specfetcher","Rails gem::specification","Rails gem::streamui","Rails gem::streamui::silentdownloadreporter","Rails gem::streamui::silentprogressreporter","Rails gem::streamui::simpleprogressreporter","Rails gem::streamui::verbosedownloadreporter","Rails gem::streamui::verboseprogressreporter","Rails gem::systemexitexception","Rails gem::text","Rails gem::uninstaller","Rails gem::userinteraction","Rails gem::validator","Rails gem::verificationerror","Rails gem::version","Rails gem::versionoption","Ruby ","Ruby ","Ruby ","Ruby ","Rails getoptlong","Rails getoptlong::ambiguousoption","Rails getoptlong::error","Rails getoptlong::invalidoption","Rails getoptlong::missingargument","Rails getoptlong::needlessargument","Ruby html","Ruby html::fullsanitizer","Ruby html::linksanitizer","Ruby html::sanitizer","Ruby html::selector","Ruby html::tag","Ruby html::whitelistsanitizer","Ruby hash","Rails hash","Ruby homecontroller","Ruby homehelper","Rails httpserver","Rails httpserver::request","Rails httpserver::response","Rails httpserver::table","Rails matrix::i()","Ruby i18n","Ruby i18n::exceptionhandler","Ruby i18n::railtie","Ruby io","Rails io","Rails io::waitreadable","Rails io::waitwritable","Rails io::readable","Rails io::writable","Rails ioerror","Rails ipaddr","Rails ipsocket","Rails irb","Rails irb::abort","Rails irb::context","Rails irb::contextextender","Rails irb::contextextender::ce","Rails irb::extendcommand","Rails irb::extendcommand::changeworkspace","Rails irb::extendcommand::currentworkingworkspace","Rails irb::extendcommand::foreground","Rails irb::extendcommand::fork","Rails irb::extendcommand::help","Rails irb::extendcommand::irbcommand","Rails irb::extendcommand::jobs","Rails irb::extendcommand::kill","Rails irb::extendcommand::load","Rails irb::extendcommand::nop","Rails irb::extendcommand::popworkspace","Rails irb::extendcommand::pushworkspace","Rails irb::extendcommand::require","Rails irb::extendcommand::source","Rails irb::extendcommand::workspaces","Rails irb::extendcommandbundle","Rails irb::extendcommandbundle::excb","Rails irb::fileinputmethod","Rails irb::frame","Rails irb::history","Rails irb::historysavingability","Rails irb::inspectors","Rails irb::inputcompletor","Rails irb::inputmethod","Rails irb::inspector","Rails irb::irb","Rails irb::irbloader","Rails irb::jobmanager","Rails irb::loadabort","Rails irb::locale","Rails irb::methodextender","Rails irb::notifier","Rails irb::notifier::abstractnotifier","Rails irb::notifier::compositenotifier","Rails irb::notifier::levelednotifier","Rails irb::notifier::nomsgnotifier","Rails irb::outputmethod","Rails irb::readlineinputmethod","Rails irb::slex","Rails irb::slex::node","Rails irb::stdioinputmethod","Rails irb::stdiooutputmethod","Rails irb::workspace","Rails iconv","Rails iconv::brokenlibrary","Rails iconv::failure","Rails iconv::illegalsequence","Rails iconv::invalidcharacter","Rails iconv::invalidencoding","Rails iconv::outofrange","Rails indexerror","Rails irb::inspector()","Ruby integer","Rails integer","Rails kernel#integer()","Rails interrupt","Rails json","Rails json::circulardatastructure","Rails json::ext","Rails json::generatorerror","Rails json::jsonerror","Rails json::missingunicodesupport","Rails json::nestingerror","Rails json::parsererror","Rails json::unparsererror","Rails jacobian","Rails irb::jobmanager()","Ruby js","Ruby js::generators","Ruby js::generators::assetsgenerator","Rails kconv","Ruby kernel","Rails kernel","Rails keyerror","Rails syslog::log_mask()","Rails syslog::constants::log_mask()","Rails syslog::log_upto()","Rails syslog::constants::log_upto()","Rails lusolve","Ruby loaderror","Rails loaderror","Rails localjumperror","Ruby logger","Rails logger","Rails logger::application","Rails logger::formatter","Rails logger::logdevice","Rails logger::logdevice::logdevicemutex","Rails logger::severity","Ruby logger::simpleformatter","Rails logging","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Rails marshal","Rails gem::server#marshal()","Rails matchdata","Rails math","Rails math::domainerror","Rails matrix","Rails matrix::eigenvaluedecomposition","Rails matrix::lupdecomposition","Rails method","Ruby mime","Ruby mime::mimes","Ruby mime::type","Ruby module","Rails module","Rails monitor","Rails monitormixin","Rails monitormixin::conditionvariable","Rails monitormixin::conditionvariable::timeout","Rails mutex","Rails mutex_m","Ruby mysql","Ruby mysql::result","Ruby mysql::stmt","Ruby mysql::time","Rails nkf","Rails nqxml","Rails nqxml::node","Ruby nameerror","Rails nameerror","Rails net","Rails net::apop","Rails net::apopsession","Rails net::ftp","Rails net::ftp::nullsocket","Rails net::ftpconnectionerror","Rails net::ftperror","Rails net::ftppermerror","Rails net::ftpprotoerror","Rails net::ftpreplyerror","Rails net::ftptemperror","Rails net::http","Rails net::http::copy","Rails net::http::delete","Rails net::http::get","Rails net::http::head","Rails net::http::lock","Rails net::http::mkcol","Rails net::http::move","Rails net::http::options","Rails net::http::patch","Rails net::http::post","Rails net::http::propfind","Rails net::http::proppatch","Rails net::http::put","Rails net::http::trace","Rails net::http::unlock","Rails net::httpaccepted","Rails net::httpbadgateway","Rails net::httpbadrequest","Rails net::httpbadresponse","Rails net::httpclienterror","Rails net::httpconflict","Rails net::httpcontinue","Rails net::httpcreated","Rails net::httperror","Rails net::httpexceptions","Rails net::httpexpectationfailed","Rails net::httpfatalerror","Rails net::httpforbidden","Rails net::httpfound","Rails net::httpgatewaytimeout","Rails net::httpgenericrequest","Rails net::httpgone","Rails net::httpheader","Rails net::httpheadersyntaxerror","Rails net::httpinformation","Rails net::httpinternalservererror","Rails net::httplengthrequired","Rails net::httpmethodnotallowed","Rails net::httpmovedpermanently","Rails net::httpmultiplechoice","Rails net::httpnocontent","Rails net::httpnonauthoritativeinformation","Rails net::httpnotacceptable","Rails net::httpnotfound","Rails net::httpnotimplemented","Rails net::httpnotmodified","Rails net::httpok","Rails net::httppartialcontent","Rails net::httppaymentrequired","Rails net::httppreconditionfailed","Rails net::httpproxyauthenticationrequired","Rails net::httpredirection","Rails net::httprequest","Rails net::httprequestentitytoolarge","Rails net::httprequesttimeout","Rails net::httprequesturitoolong","Rails net::httprequestedrangenotsatisfiable","Rails net::httpresetcontent","Rails net::httpresponse","Rails net::httpretriableerror","Rails net::httpseeother","Rails net::httpservererror","Rails net::httpserverexception","Rails net::httpserviceunavailable","Rails net::httpsession","Rails net::httpsuccess","Rails net::httpswitchprotocol","Rails net::httptemporaryredirect","Rails net::httpunauthorized","Rails net::httpunknownresponse","Rails net::httpunsupportedmediatype","Rails net::httpuseproxy","Rails net::httpversionnotsupported","Rails net::imap","Rails net::imap::badresponseerror","Rails net::imap::bodytypebasic","Rails net::imap::bodytypemessage","Rails net::imap::bodytypemultipart","Rails net::imap::bodytypetext","Rails net::imap::byeresponseerror","Rails net::imap::crammd5authenticator","Rails net::imap::dataformaterror","Rails net::imap::digestmd5authenticator","Rails net::imap::error","Rails net::imap::flagcounterror","Rails net::imap::loginauthenticator","Rails net::imap::noresponseerror","Rails net::imap::plainauthenticator","Rails net::imap::responseerror","Rails net::imap::responseparseerror","Rails net::pop","Rails net::pop3","Rails net::pop3session","Rails net::popauthenticationerror","Rails net::popbadresponse","Rails net::poperror","Rails net::popmail","Rails net::popsession","Rails net::smtp","Rails net::smtp::response","Rails net::smtpauthenticationerror","Rails net::smtperror","Rails net::smtpfatalerror","Rails net::smtpserverbusy","Rails net::smtpsession","Rails net::smtpsyntaxerror","Rails net::smtpunknownerror","Rails net::smtpunsupportedcommand","Rails net::telnet","Rails newton","Ruby nilclass","Rails nilclass","Rails nomemoryerror","Rails nomethoderror","Rails notimplementederror","Ruby numeric","Rails numeric","Rails oleproperty","Ruby object","Rails object","Ruby object::hashwithindifferentaccess","Ruby object::missingsourcefile","Rails object::parseerror","Rails object::synchronizer","Rails object::synchronizer_m","Rails object::thwait","Rails object::timeouterror","Rails objectspace","Rails observable","Rails open3","Rails win32::registry::api#openkey()","Rails openssl","Rails openssl::asn1","Rails openssl::asn1::asn1data","Rails openssl::asn1::asn1error","Rails openssl::asn1::constructive","Rails openssl::asn1::primitive","Rails openssl::bn","Rails openssl::bnerror","Rails openssl::buffering","Rails openssl::cipher","Rails openssl::cipher::cipher","Rails openssl::cipher::ciphererror","Rails openssl::config","Rails openssl::configerror","Rails openssl::digest","Rails openssl::digest::digest","Rails openssl::digest::digesterror","Rails openssl::engine","Rails openssl::engine::engineerror","Rails openssl::hmac","Rails openssl::hmacerror","Rails openssl::netscape","Rails openssl::netscape::spki","Rails openssl::netscape::spkierror","Rails openssl::ocsp","Rails openssl::ocsp::basicresponse","Rails openssl::ocsp::certificateid","Rails openssl::ocsp::ocsperror","Rails openssl::ocsp::request","Rails openssl::ocsp::response","Rails openssl::opensslerror","Rails openssl::pkcs12","Rails openssl::pkcs12::pkcs12error","Rails openssl::pkcs5","Rails openssl::pkcs5::pkcs5error","Rails openssl::pkcs7","Rails openssl::pkcs7::pkcs7error","Rails openssl::pkcs7::recipientinfo","Rails openssl::pkcs7::signerinfo","Rails openssl::pkey","Rails openssl::pkey::dh","Rails openssl::pkey::dherror","Rails openssl::pkey::dsa","Rails openssl::pkey::dsaerror","Rails openssl::pkey::ec","Rails openssl::pkey::ec::group","Rails openssl::pkey::ec::group::error","Rails openssl::pkey::ec::point","Rails openssl::pkey::ec::point::error","Rails openssl::pkey::ecerror","Rails openssl::pkey::pkey","Rails openssl::pkey::pkeyerror","Rails openssl::pkey::rsa","Rails openssl::pkey::rsaerror","Rails openssl::random","Rails openssl::random::randomerror","Rails openssl::ssl","Rails openssl::ssl::nonblock","Rails openssl::ssl::sslcontext","Rails openssl::ssl::sslerror","Rails openssl::ssl::sslserver","Rails openssl::ssl::sslsocket","Rails openssl::ssl::session","Rails openssl::ssl::session::sessionerror","Rails openssl::ssl::socketforwarder","Rails openssl::x509","Rails openssl::x509::attribute","Rails openssl::x509::attributeerror","Rails openssl::x509::crl","Rails openssl::x509::crlerror","Rails openssl::x509::certificate","Rails openssl::x509::certificateerror","Rails openssl::x509::extension","Rails openssl::x509::extensionerror","Rails openssl::x509::extensionfactory","Rails openssl::x509::name","Rails openssl::x509::name::rfc2253dn","Rails openssl::x509::nameerror","Rails openssl::x509::request","Rails openssl::x509::requesterror","Rails openssl::x509::revoked","Rails openssl::x509::revokederror","Rails openssl::x509::store","Rails openssl::x509::storecontext","Rails openssl::x509::storeerror","Rails openstruct","Rails openuri","Rails openuri::httperror","Rails openuri::httpredirect","Rails openuri::meta","Rails openuri::openread","Rails optionparser","Rails optionparser::acceptables","Rails optionparser::ambiguousargument","Rails optionparser::ambiguousoption","Rails optionparser::arguable","Rails optionparser::completinghash","Rails optionparser::completion","Rails optionparser::invalidargument","Rails optionparser::invalidoption","Rails optionparser::list","Rails optionparser::missingargument","Rails optionparser::needlessargument","Rails optionparser::optionmap","Rails optionparser::parseerror","Rails optionparser::switch","Rails optionparser::switch::noargument","Rails optionparser::switch::optionalargument","Rails optionparser::switch::placedargument","Rails optionparser::switch::requiredargument","Rails bigmath#pi()","Ruby actiondispatch::request#post()","Rails pp","Rails pp::objectmixin","Rails pp::ppmethods","Rails pp::singleline","Rails pstore","Rails pstore::error","Rails pty","Rails pty::childexited","Rails pathname","Rails kernel#pathname()","Rails rss::rss::channel::item::guid#permalink?()","Ruby plugin","Ruby post","Ruby postscontroller","Ruby postshelper","Rails prettyprint","Rails prettyprint::breakable","Rails prettyprint::group","Rails prettyprint::groupqueue","Rails prettyprint::singleline","Rails prettyprint::text","Rails prime","Rails prime::eratosthenesgenerator","Rails prime::eratosthenessieve","Rails prime::generator23","Rails prime::oldcompatibility","Rails prime::pseudoprimegenerator","Rails prime::trialdivision","Rails prime::trialdivisiongenerator","Rails proc","Ruby process","Rails process","Rails process::gid","Rails process::status","Rails process::sys","Rails process::uid","Rails profiler__","Rails net::http::proxy()","Rails net::http::proxy()","Rails psych","Rails psych::badalias","Rails psych::coder","Rails psych::emitter","Rails psych::exception","Rails psych::handler","Rails psych::handler::dumperoptions","Rails psych::handlers","Rails psych::json","Rails psych::json::stream","Rails psych::json::treebuilder","Rails psych::nodes","Rails psych::nodes::alias","Rails psych::nodes::document","Rails psych::nodes::mapping","Rails psych::nodes::node","Rails psych::nodes::scalar","Rails psych::nodes::sequence","Rails psych::nodes::stream","Rails psych::omap","Rails psych::parser","Rails psych::parser::mark","Rails psych::privatetype","Rails psych::scalarscanner","Rails psych::set","Rails psych::stream","Rails psych::streaming","Rails psych::syntaxerror","Rails psych::treebuilder","Rails psych::visitors","Rails psych::visitors::depthfirst","Rails psych::visitors::emitter","Rails psych::visitors::jsontree","Rails psych::visitors::toruby","Rails psych::visitors::visitor","Rails psych::visitors::yamltree","Ruby qualifiedconstutils","Rails win32::registry::api#queryinfokey()","Rails win32::registry::api#queryvalue()","Rails queue","Ruby ","Rails rdoc","Rails rdoc::alias","Rails rdoc::anonclass","Rails rdoc::anymethod","Rails rdoc::attr","Rails rdoc::classmodule","Rails rdoc::codeobject","Rails rdoc::constant","Rails rdoc::context","Rails rdoc::context::section","Rails rdoc::crossreference","Rails rdoc::erbio","Rails rdoc::encoding","Rails rdoc::error","Rails rdoc::generator","Rails rdoc::generator::darkfish","Rails rdoc::generator::markup","Rails rdoc::generator::ri","Rails rdoc::ghostmethod","Rails rdoc::include","Rails rdoc::markup","Rails rdoc::markup::attrchanger","Rails rdoc::markup::attrspan","Rails rdoc::markup::attribute","Rails rdoc::markup::attributemanager","Rails rdoc::markup::blankline","Rails rdoc::markup::document","Rails rdoc::markup::formatter","Rails rdoc::markup::heading","Rails rdoc::markup::indentedparagraph","Rails rdoc::markup::list","Rails rdoc::markup::listitem","Rails rdoc::markup::paragraph","Rails rdoc::markup::parser","Rails rdoc::markup::parser::error","Rails rdoc::markup::parser::parseerror","Rails rdoc::markup::preprocess","Rails rdoc::markup::raw","Rails rdoc::markup::rule","Rails rdoc::markup::special","Rails rdoc::markup::toansi","Rails rdoc::markup::tobs","Rails rdoc::markup::tohtml","Rails rdoc::markup::tohtmlcrossref","Rails rdoc::markup::tordoc","Rails rdoc::markup::tottonly","Rails rdoc::markup::verbatim","Rails rdoc::metamethod","Rails rdoc::methodattr","Rails rdoc::normalclass","Rails rdoc::normalmodule","Rails rdoc::options","Rails rdoc::parser","Rails rdoc::parser::c","Rails rdoc::parser::ruby","Rails rdoc::parser::rubytools","Rails rdoc::parser::simple","Rails rdoc::rdoc","Rails rdoc::ri","Rails rdoc::ri::driver","Rails rdoc::ri::driver::error","Rails rdoc::ri::driver::notfounderror","Rails rdoc::ri::error","Rails rdoc::ri::paths","Rails rdoc::ri::store","Rails rdoc::require","Rails rdoc::rubylex","Rails rdoc::rubytoken","Rails rdoc::rubytoken::tkerror","Rails rdoc::rubytoken::tkid","Rails rdoc::rubytoken::tkkw","Rails rdoc::rubytoken::tknode","Rails rdoc::rubytoken::tkopasgn","Rails rdoc::rubytoken::tkop","Rails rdoc::rubytoken::tksymbol","Rails rdoc::rubytoken::tkunknownchar","Rails rdoc::rubytoken::tkval","Rails rdoc::rubytoken::token","Rails rdoc::rubygemshook","Rails rdoc::singleclass","Rails rdoc::stats","Rails rdoc::stats::normal","Rails rdoc::stats::quiet","Rails rdoc::stats::verbose","Rails rdoc::task","Rails rdoc::text","Rails rdoc::tokenstream","Rails rdoc::toplevel","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Rails ","Rails ","Rails ","Rails ","Ruby ","Ruby ","Ruby ","Rails rexml","Rails rexml::attlistdecl","Rails rexml::attribute","Rails rexml::attributes","Rails rexml::cdata","Rails rexml::child","Rails rexml::comment","Rails rexml::dtd","Rails rexml::dtd::attlistdecl","Rails rexml::dtd::elementdecl","Rails rexml::dtd::entitydecl","Rails rexml::dtd::notationdecl","Rails rexml::dtd::parser","Rails rexml::declaration","Rails rexml::doctype","Rails rexml::document","Rails rexml::element","Rails rexml::elementdecl","Rails rexml::elements","Rails rexml::encoding","Rails rexml::entity","Rails rexml::entityconst","Rails rexml::externalentity","Rails rexml::formatters","Rails rexml::formatters::default","Rails rexml::formatters::pretty","Rails rexml::formatters::transitive","Rails rexml::functions","Rails rexml::iosource","Rails rexml::instruction","Rails rexml::light","Rails rexml::light::node","Rails rexml::namespace","Rails rexml::node","Rails rexml::notationdecl","Rails rexml::output","Rails rexml::parent","Rails rexml::parseexception","Rails rexml::parsers","Rails rexml::parsers::baseparser","Rails rexml::parsers::lightparser","Rails rexml::parsers::pullevent","Rails rexml::parsers::pullparser","Rails rexml::parsers::sax2parser","Rails rexml::parsers::streamparser","Rails rexml::parsers::treeparser","Rails rexml::parsers::ultralightparser","Rails rexml::parsers::xpathparser","Rails rexml::quickpath","Rails rexml::sax2listener","Rails rexml::source","Rails rexml::sourcefactory","Rails rexml::streamlistener","Rails rexml::syncenumerator","Rails rexml::text","Rails rexml::undefinednamespaceexception","Rails rexml::validation","Rails rexml::validation::choice","Rails rexml::validation::event","Rails rexml::validation::interleave","Rails rexml::validation::oneormore","Rails rexml::validation::optional","Rails rexml::validation::ref","Rails rexml::validation::relaxng","Rails rexml::validation::sequence","Rails rexml::validation::state","Rails rexml::validation::validationexception","Rails rexml::validation::validator","Rails rexml::validation::zeroormore","Rails rexml::xmldecl","Rails rexml::xmltokens","Rails rexml::xpath","Rails rexml::xpathparser","Rails rss","Rails rss::atom","Rails rss::atom::commonmodel","Rails rss::atom::contentmodel","Rails rss::atom::contentmodel::classmethods","Rails rss::atom::dateconstruct","Rails rss::atom::duplicatelinkchecker","Rails rss::atom::entry","Rails rss::atom::feed","Rails rss::atom::feed::author","Rails rss::atom::feed::category","Rails rss::atom::feed::contributor","Rails rss::atom::feed::entry","Rails rss::atom::feed::entry::content","Rails rss::atom::feed::entry::published","Rails rss::atom::feed::entry::source","Rails rss::atom::feed::entry::summary","Rails rss::atom::feed::generator","Rails rss::atom::feed::icon","Rails rss::atom::feed::id","Rails rss::atom::feed::link","Rails rss::atom::feed::logo","Rails rss::atom::feed::rights","Rails rss::atom::feed::subtitle","Rails rss::atom::feed::title","Rails rss::atom::feed::updated","Rails rss::atom::personconstruct","Rails rss::atom::personconstruct::email","Rails rss::atom::personconstruct::name","Rails rss::atom::personconstruct::uri","Rails rss::atom::textconstruct","Rails rss::atom::uricontentmodel","Rails rss::basedublincoremodel","Rails rss::baselistener","Rails rss::basemodel","Rails rss::baseparser","Rails rss::basetrackbackmodel","Rails rss::contentmodel","Rails rss::conversionerror","Rails rss::converter","Rails rss::dublincoremodel","Rails rss::dublincoremodel","Rails rss::element","Rails rss::error","Rails rss::itunesbasemodel","Rails rss::ituneschannelmodel","Rails rss::ituneschannelmodel::itunescategory","Rails rss::ituneschannelmodel::itunesimage","Rails rss::ituneschannelmodel::itunesowner","Rails rss::itunesitemmodel","Rails rss::itunesitemmodel::itunesduration","Rails rss::itunesmodelutils","Rails rss::imagefaviconmodel","Rails rss::imagefaviconmodel::imagefavicon","Rails rss::imageitemmodel","Rails rss::imageitemmodel::imageitem","Rails rss::imagemodelutils","Rails rss::invalidrsserror","Rails rss::listenermixin","Rails rss::maker","Rails rss::maker::atom","Rails rss::maker::atom::entry","Rails rss::maker::atom::entry::channel","Rails rss::maker::atom::entry::channel::cloud","Rails rss::maker::atom::entry::channel::description","Rails rss::maker::atom::entry::channel::generator","Rails rss::maker::atom::entry::channel::skipdays","Rails rss::maker::atom::entry::channel::skipdays::day","Rails rss::maker::atom::entry::channel::skiphours","Rails rss::maker::atom::entry::channel::skiphours::hour","Rails rss::maker::atom::entry::image","Rails rss::maker::atom::entry::items","Rails rss::maker::atom::entry::items::item","Rails rss::maker::atom::entry::textinput","Rails rss::maker::atom::feed","Rails rss::maker::atom::feed::channel","Rails rss::maker::atom::feed::channel::categories","Rails rss::maker::atom::feed::channel::categories::category","Rails rss::maker::atom::feed::channel::cloud","Rails rss::maker::atom::feed::channel::generator","Rails rss::maker::atom::feed::channel::links","Rails rss::maker::atom::feed::channel::links::link","Rails rss::maker::atom::feed::channel::skipdays","Rails rss::maker::atom::feed::channel::skipdays::day","Rails rss::maker::atom::feed::channel::skiphours","Rails rss::maker::atom::feed::channel::skiphours::hour","Rails rss::maker::atom::feed::image","Rails rss::maker::atom::feed::items","Rails rss::maker::atom::feed::items::item","Rails rss::maker::atom::feed::items::item::categories","Rails rss::maker::atom::feed::items::item::categories::category","Rails rss::maker::atom::feed::items::item::content","Rails rss::maker::atom::feed::items::item::enclosure","Rails rss::maker::atom::feed::items::item::guid","Rails rss::maker::atom::feed::items::item::links","Rails rss::maker::atom::feed::items::item::links::link","Rails rss::maker::atom::feed::items::item::source","Rails rss::maker::atom::feed::items::item::source::categories","Rails rss::maker::atom::feed::items::item::source::categories::category","Rails rss::maker::atom::feed::items::item::source::generator","Rails rss::maker::atom::feed::items::item::source::icon","Rails rss::maker::atom::feed::items::item::source::links","Rails rss::maker::atom::feed::items::item::source::links::link","Rails rss::maker::atom::feed::items::item::source::logo","Rails rss::maker::atom::feed::textinput","Rails rss::maker::atomcategory","Rails rss::maker::atomgenerator","Rails rss::maker::atomlink","Rails rss::maker::atomlogo","Rails rss::maker::atompersonconstructbase","Rails rss::maker::atompersons","Rails rss::maker::atomtextconstruct","Rails rss::maker::atomtextconstructbase","Rails rss::maker::atomtextconstructbase::ensurexmlcontent","Rails rss::maker::base","Rails rss::maker::channelbase","Rails rss::maker::channelbase::authorsbase","Rails rss::maker::channelbase::authorsbase::authorbase","Rails rss::maker::channelbase::categoriesbase","Rails rss::maker::channelbase::categoriesbase::categorybase","Rails rss::maker::channelbase::cloudbase","Rails rss::maker::channelbase::contributorsbase","Rails rss::maker::channelbase::contributorsbase::contributorbase","Rails rss::maker::channelbase::copyrightbase","Rails rss::maker::channelbase::descriptionbase","Rails rss::maker::channelbase::generatorbase","Rails rss::maker::channelbase::itunescategories","Rails rss::maker::channelbase::itunescategories::itunescategory","Rails rss::maker::channelbase::itunesimage","Rails rss::maker::channelbase::itunesowner","Rails rss::maker::channelbase::linksbase","Rails rss::maker::channelbase::linksbase::linkbase","Rails rss::maker::channelbase::skipdaysbase","Rails rss::maker::channelbase::skipdaysbase::daybase","Rails rss::maker::channelbase::skiphoursbase","Rails rss::maker::channelbase::skiphoursbase::hourbase","Rails rss::maker::channelbase::titlebase","Rails rss::maker::contentmodel","Rails rss::maker::dublincoremodel","Rails rss::maker::itunesbasemodel","Rails rss::maker::ituneschannelmodel","Rails rss::maker::ituneschannelmodel::itunescategoriesbase","Rails rss::maker::ituneschannelmodel::itunescategoriesbase::itunescategorybase","Rails rss::maker::ituneschannelmodel::itunesimagebase","Rails rss::maker::ituneschannelmodel::itunesownerbase","Rails rss::maker::itunesitemmodel","Rails rss::maker::itunesitemmodel::itunesdurationbase","Rails rss::maker::imagebase","Rails rss::maker::imagefaviconmodel","Rails rss::maker::imagefaviconmodel::imagefaviconbase","Rails rss::maker::imageitemmodel","Rails rss::maker::imageitemmodel::imageitembase","Rails rss::maker::itemsbase","Rails rss::maker::itemsbase::itembase","Rails rss::maker::itemsbase::itembase::contentbase","Rails rss::maker::itemsbase::itembase::descriptionbase","Rails rss::maker::itemsbase::itembase::enclosurebase","Rails rss::maker::itemsbase::itembase::guidbase","Rails rss::maker::itemsbase::itembase::itunesduration","Rails rss::maker::itemsbase::itembase::rightsbase","Rails rss::maker::itemsbase::itembase::sourcebase","Rails rss::maker::itemsbase::itembase::sourcebase::iconbase","Rails rss::maker::itemsbase::itembase::sourcebase::logobase","Rails rss::maker::itemsbase::itembase::sourcebase::rightsbase","Rails rss::maker::itemsbase::itembase::sourcebase::subtitlebase","Rails rss::maker::itemsbase::itembase::sourcebase::titlebase","Rails rss::maker::itemsbase::itembase::titlebase","Rails rss::maker::rss09","Rails rss::maker::rss091","Rails rss::maker::rss091::channel","Rails rss::maker::rss091::image","Rails rss::maker::rss091::items","Rails rss::maker::rss091::items::item","Rails rss::maker::rss091::textinput","Rails rss::maker::rss092","Rails rss::maker::rss092::channel","Rails rss::maker::rss092::image","Rails rss::maker::rss092::items","Rails rss::maker::rss092::items::item","Rails rss::maker::rss092::textinput","Rails rss::maker::rss09::channel","Rails rss::maker::rss09::channel::authors","Rails rss::maker::rss09::channel::authors::author","Rails rss::maker::rss09::channel::categories","Rails rss::maker::rss09::channel::categories::category","Rails rss::maker::rss09::channel::cloud","Rails rss::maker::rss09::channel::contributors","Rails rss::maker::rss09::channel::contributors::contributor","Rails rss::maker::rss09::channel::copyright","Rails rss::maker::rss09::channel::description","Rails rss::maker::rss09::channel::generator","Rails rss::maker::rss09::channel::links","Rails rss::maker::rss09::channel::links::link","Rails rss::maker::rss09::channel::skipdays","Rails rss::maker::rss09::channel::skipdays::day","Rails rss::maker::rss09::channel::skiphours","Rails rss::maker::rss09::channel::skiphours::hour","Rails rss::maker::rss09::channel::title","Rails rss::maker::rss09::image","Rails rss::maker::rss09::items","Rails rss::maker::rss09::items::item","Rails rss::maker::rss09::items::item::authors","Rails rss::maker::rss09::items::item::authors::author","Rails rss::maker::rss09::items::item::categories","Rails rss::maker::rss09::items::item::categories::category","Rails rss::maker::rss09::items::item::content","Rails rss::maker::rss09::items::item::contributors","Rails rss::maker::rss09::items::item::contributors::contributor","Rails rss::maker::rss09::items::item::description","Rails rss::maker::rss09::items::item::enclosure","Rails rss::maker::rss09::items::item::guid","Rails rss::maker::rss09::items::item::links","Rails rss::maker::rss09::items::item::links::link","Rails rss::maker::rss09::items::item::rights","Rails rss::maker::rss09::items::item::source","Rails rss::maker::rss09::items::item::source::authors","Rails rss::maker::rss09::items::item::source::authors::author","Rails rss::maker::rss09::items::item::source::categories","Rails rss::maker::rss09::items::item::source::categories::category","Rails rss::maker::rss09::items::item::source::contributors","Rails rss::maker::rss09::items::item::source::contributors::contributor","Rails rss::maker::rss09::items::item::source::generator","Rails rss::maker::rss09::items::item::source::icon","Rails rss::maker::rss09::items::item::source::links","Rails rss::maker::rss09::items::item::source::links::link","Rails rss::maker::rss09::items::item::source::logo","Rails rss::maker::rss09::items::item::source::rights","Rails rss::maker::rss09::items::item::source::subtitle","Rails rss::maker::rss09::items::item::source::title","Rails rss::maker::rss09::items::item::title","Rails rss::maker::rss09::textinput","Rails rss::maker::rss10","Rails rss::maker::rss10::channel","Rails rss::maker::rss10::channel::authors","Rails rss::maker::rss10::channel::authors::author","Rails rss::maker::rss10::channel::categories","Rails rss::maker::rss10::channel::categories::category","Rails rss::maker::rss10::channel::cloud","Rails rss::maker::rss10::channel::contributors","Rails rss::maker::rss10::channel::contributors::contributor","Rails rss::maker::rss10::channel::copyright","Rails rss::maker::rss10::channel::description","Rails rss::maker::rss10::channel::generator","Rails rss::maker::rss10::channel::links","Rails rss::maker::rss10::channel::links::link","Rails rss::maker::rss10::channel::skipdays","Rails rss::maker::rss10::channel::skipdays::day","Rails rss::maker::rss10::channel::skiphours","Rails rss::maker::rss10::channel::skiphours::hour","Rails rss::maker::rss10::channel::title","Rails rss::maker::rss10::image","Rails rss::maker::rss10::items","Rails rss::maker::rss10::items::item","Rails rss::maker::rss10::items::item::authors","Rails rss::maker::rss10::items::item::authors::author","Rails rss::maker::rss10::items::item::categories","Rails rss::maker::rss10::items::item::categories::category","Rails rss::maker::rss10::items::item::content","Rails rss::maker::rss10::items::item::contributors","Rails rss::maker::rss10::items::item::contributors::contributor","Rails rss::maker::rss10::items::item::description","Rails rss::maker::rss10::items::item::enclosure","Rails rss::maker::rss10::items::item::guid","Rails rss::maker::rss10::items::item::links","Rails rss::maker::rss10::items::item::links::link","Rails rss::maker::rss10::items::item::rights","Rails rss::maker::rss10::items::item::source","Rails rss::maker::rss10::items::item::source::authors","Rails rss::maker::rss10::items::item::source::authors::author","Rails rss::maker::rss10::items::item::source::categories","Rails rss::maker::rss10::items::item::source::categories::category","Rails rss::maker::rss10::items::item::source::contributors","Rails rss::maker::rss10::items::item::source::contributors::contributor","Rails rss::maker::rss10::items::item::source::generator","Rails rss::maker::rss10::items::item::source::icon","Rails rss::maker::rss10::items::item::source::links","Rails rss::maker::rss10::items::item::source::links::link","Rails rss::maker::rss10::items::item::source::logo","Rails rss::maker::rss10::items::item::source::rights","Rails rss::maker::rss10::items::item::source::subtitle","Rails rss::maker::rss10::items::item::source::title","Rails rss::maker::rss10::items::item::title","Rails rss::maker::rss10::textinput","Rails rss::maker::rss20","Rails rss::maker::rss20::channel","Rails rss::maker::rss20::channel::categories","Rails rss::maker::rss20::channel::categories::category","Rails rss::maker::rss20::channel::cloud","Rails rss::maker::rss20::channel::generator","Rails rss::maker::rss20::channel::skipdays","Rails rss::maker::rss20::channel::skipdays::day","Rails rss::maker::rss20::channel::skiphours","Rails rss::maker::rss20::channel::skiphours::hour","Rails rss::maker::rss20::image","Rails rss::maker::rss20::items","Rails rss::maker::rss20::items::item","Rails rss::maker::rss20::items::item::authors","Rails rss::maker::rss20::items::item::authors::author","Rails rss::maker::rss20::items::item::categories","Rails rss::maker::rss20::items::item::categories::category","Rails rss::maker::rss20::items::item::enclosure","Rails rss::maker::rss20::items::item::guid","Rails rss::maker::rss20::items::item::source","Rails rss::maker::rss20::items::item::source::links","Rails rss::maker::rss20::items::item::source::links::link","Rails rss::maker::rss20::textinput","Rails rss::maker::rssbase","Rails rss::maker::setupdefaultdate","Rails rss::maker::setupdefaultlanguage","Rails rss::maker::slashmodel","Rails rss::maker::syndicationmodel","Rails rss::maker::taxonomytopicmodel","Rails rss::maker::taxonomytopicmodel::taxonomytopicsbase","Rails rss::maker::taxonomytopicmodel::taxonomytopicsbase::taxonomytopicbase","Rails rss::maker::taxonomytopicsmodel","Rails rss::maker::taxonomytopicsmodel::taxonomytopicsbase","Rails rss::maker::textinputbase","Rails rss::maker::trackbackmodel","Rails rss::maker::trackbackmodel::trackbackaboutsbase","Rails rss::maker::trackbackmodel::trackbackaboutsbase::trackbackaboutbase","Rails rss::maker::xmlstylesheets","Rails rss::maker::xmlstylesheets::xmlstylesheet","Rails rss::missingattributeerror","Rails rss::missingtagerror","Rails rss::nserror","Rails rss::notavailablevalueerror","Rails rss::notexceptedtagerror","Rails rss::notexpectedtagerror","Rails rss::notseterror","Rails rss::notvalidxmlparser","Rails rss::notwellformederror","Rails rss::overlappedprefixerror","Rails rss::parser","Rails rss::rdf","Rails rss::rdf::bag","Rails rss::rdf::bag::li","Rails rss::rdf::channel","Rails rss::rdf::channel::image","Rails rss::rdf::channel::items","Rails rss::rdf::channel::items::seq","Rails rss::rdf::channel::textinput","Rails rss::rdf::image","Rails rss::rdf::item","Rails rss::rdf::li","Rails rss::rdf::seq","Rails rss::rdf::seq::li","Rails rss::rdf::textinput","Rails rss::rexmllikexmlparser","Rails rss::rexmllistener","Rails rss::rexmlparser","Rails rss::rss09","Rails rss::rss10","Rails rss::rootelementmixin","Rails rss::rss","Rails rss::rss::channel","Rails rss::rss::channel::cloud","Rails rss::rss::channel::image","Rails rss::rss::channel::item","Rails rss::rss::channel::item::category","Rails rss::rss::channel::item::enclosure","Rails rss::rss::channel::item::guid","Rails rss::rss::channel::item::source","Rails rss::rss::channel::skipdays","Rails rss::rss::channel::skipdays::day","Rails rss::rss::channel::skiphours","Rails rss::rss::channel::skiphours::hour","Rails rss::rss::channel::textinput","Rails rss::setupmaker","Rails rss::slashmodel","Rails rss::syndicationmodel","Rails rss::taxonomytopicmodel","Rails rss::taxonomytopicmodel::taxonomytopic","Rails rss::taxonomytopicsmodel","Rails rss::taxonomytopicsmodel::taxonomytopics","Rails rss::taxonomytopicsmodel::taxonomytopics::bag","Rails rss::toomuchtagerror","Rails rss::trackbackmodel10","Rails rss::trackbackmodel10::trackbackabout","Rails rss::trackbackmodel10::trackbackping","Rails rss::trackbackmodel20","Rails rss::trackbackmodel20::trackbackabout","Rails rss::trackbackmodel20::trackbackping","Rails rss::trackbackutils","Rails rss::unknownconversionmethoderror","Rails rss::unknownconvertmethod","Rails rss::unknowntagerror","Rails rss::unsupportedmakerversionerror","Rails rss::utils","Rails rss::utils::csv","Rails rss::utils::inheritedreader","Rails rss::utils::yescleanother","Rails rss::utils::yesother","Rails rss::xml","Rails rss::xml::element","Rails rss::xmlparserlistener","Rails rss::xmlparsernotfound","Rails rss::xmlparserparser","Rails rss::xmlscanlistener","Rails rss::xmlscanparser","Rails rss::xmlstylesheet","Rails rss::xmlstylesheetmixin","Ruby ","Ruby ","Rails racc","Rails racc::parseerror","Rails racc::parser","Ruby rack","Ruby rails","Ruby rails::actionmethods","Ruby rails::appbuilder","Ruby rails::application","Ruby rails::application::bootstrap","Ruby rails::application::configuration","Ruby rails::application::finisher","Ruby rails::application::railties","Ruby rails::application::routesreloader","Ruby rails::backtracecleaner","Ruby rails::commands","Ruby rails::commands::info","Ruby rails::commands::install","Ruby rails::commands::plugin","Ruby rails::commands::remove","Ruby rails::configuration","Ruby rails::console","Ruby rails::consolemethods","Ruby rails::dbconsole","Ruby rails::engine","Ruby rails::engine::configuration","Ruby rails::engine::railties","Ruby rails::generators","Ruby rails::generators::actions","Ruby rails::generators::activemodel","Ruby rails::generators::appbase","Ruby rails::generators::appgenerator","Ruby rails::generators::assetsgenerator","Ruby rails::generators::base","Ruby rails::generators::controllergenerator","Ruby rails::generators::error","Ruby rails::generators::generatedattribute","Ruby rails::generators::generatorgenerator","Ruby rails::generators::helpergenerator","Ruby rails::generators::mailergenerator","Ruby rails::generators::migration","Ruby rails::generators::migration::classmethods","Ruby rails::generators::migrationgenerator","Ruby rails::generators::modelgenerator","Ruby rails::generators::namedbase","Ruby rails::generators::observergenerator","Ruby rails::generators::pluginnewgenerator","Ruby rails::generators::resourcegenerator","Ruby rails::generators::resourcehelpers","Ruby rails::generators::resourceroutegenerator","Ruby rails::generators::scaffoldcontrollergenerator","Ruby rails::generators::scaffoldgenerator","Ruby rails::generators::sessionmigrationgenerator","Ruby rails::generators::taskgenerator","Ruby rails::info","Ruby rails::infocontroller","Ruby rails::initializable","Ruby rails::initializable::classmethods","Ruby rails::initializable::collection","Ruby rails::initializable::initializer","Ruby rails::paths","Ruby rails::paths::path","Ruby rails::paths::root","Ruby rails::plugin","Ruby rails::pluginbuilder","Ruby rails::rack","Ruby rails::rack::debugger","Ruby rails::rack::logtailer","Ruby rails::rack::logger","Ruby rails::railtie","Ruby rails::railtie::configurable","Ruby rails::railtie::configurable::classmethods","Ruby rails::railtie::configuration","Ruby rails::scriptrailsloader","Ruby rails::server","Ruby rails::server::options","Ruby railsenvironment","Ruby railsguides","Ruby railsguides::generator","Ruby railsguides::helpers","Ruby railsguides::indexer","Ruby railsguides::levenshtein","Ruby railsguides::textileextensions","Ruby railsguides::validator","Rails exception2messagemapper#raise()","Rails exception2messagemapper::raise()","Rails exception2messagemapper::raise()","Rails exception2messagemapper#raise()","Rails rake","Rails rake::altsystem","Rails rake::application","Rails rake::cloneable","Rails rake::compositepublisher","Rails rake::dsl","Rails rake::defaultloader","Rails rake::earlytime","Rails rake::filecreationtask","Rails rake::filelist","Rails rake::filetask","Rails rake::fileutilsext","Rails rake::ftpfile","Rails rake::ftpuploader","Rails rake::invocationchain","Rails rake::invocationchain::emptyinvocationchain","Rails rake::invocationexceptionmixin","Rails rake::makefileloader","Rails rake::multitask","Rails rake::namespace","Rails rake::packagetask","Rails rake::pseudostatus","Rails rake::rdoctask","Rails rake::rubyforgepublisher","Rails rake::rulerecursionoverflowerror","Rails rake::sshdirpublisher","Rails rake::sshfilepublisher","Rails rake::sshfreshdirpublisher","Rails rake::task","Rails rake::taskargumenterror","Rails rake::taskarguments","Rails rake::tasklib","Rails rake::taskmanager","Rails rake::win32","Rails rake::win32::win32homeerror","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Rails random","Ruby range","Rails range","Rails rangeerror","Rails rational","Rails kernel#rational()","Rails readline","Ruby recursivehttpfetcher","Ruby regexp","Rails regexp","Rails regexperror","Ruby requireprofiler","Rails resolv","Rails resolv::dns","Rails resolv::dns::config","Rails resolv::dns::config::nxdomain","Rails resolv::dns::config::otherresolverror","Rails resolv::dns::decodeerror","Rails resolv::dns::encodeerror","Rails resolv::dns::name","Rails resolv::dns::query","Rails resolv::dns::requester","Rails resolv::dns::requester::requesterror","Rails resolv::dns::resource","Rails resolv::dns::resource::any","Rails resolv::dns::resource::cname","Rails resolv::dns::resource::domainname","Rails resolv::dns::resource::generic","Rails resolv::dns::resource::hinfo","Rails resolv::dns::resource::in","Rails resolv::dns::resource::in::a","Rails resolv::dns::resource::in::aaaa","Rails resolv::dns::resource::in::srv","Rails resolv::dns::resource::in::wks","Rails resolv::dns::resource::minfo","Rails resolv::dns::resource::mx","Rails resolv::dns::resource::ns","Rails resolv::dns::resource::ptr","Rails resolv::dns::resource::soa","Rails resolv::dns::resource::txt","Rails resolv::hosts","Rails resolv::ipv4","Rails resolv::ipv6","Rails resolv::resolverror","Rails resolv::resolvtimeout","Rails rinda","Rails rinda::drbobjecttemplate","Rails rinda::invalidhashtuplekey","Rails rinda::notifytemplateentry","Rails rinda::requestcancelederror","Rails rinda::requestexpirederror","Rails rinda::rindaerror","Rails rinda::ringfinger","Rails rinda::ringprovider","Rails rinda::ringserver","Rails rinda::simplerenewer","Rails rinda::template","Rails rinda::templateentry","Rails rinda::tuple","Rails rinda::tuplebag","Rails rinda::tuplebag::tuplebin","Rails rinda::tupleentry","Rails rinda::tuplespace","Rails rinda::tuplespaceproxy","Rails rinda::waittemplateentry","Rails ripper","Rails ripper::filter","Rails ripper::tokenpattern","Rails ripper::tokenpattern::compileerror","Rails ripper::tokenpattern::error","Rails ripper::tokenpattern::matchdata","Rails ripper::tokenpattern::matcherror","Rails rubylex","Rails rubytoken","Rails rubytoken::tkerror","Rails rubytoken::tkid","Rails rubytoken::tknode","Rails rubytoken::tkopasgn","Rails rubytoken::tkop","Rails rubytoken::tkunknownchar","Rails rubytoken::tkval","Rails rubytoken::token","Rails rubyvm","Rails rubyvm::env","Rails rubyvm::instructionsequence","Rails runtimeerror","Rails sdbm","Rails sdbmerror","Rails sockssocket","Rails string_or_failed_format","Rails scanf","Rails scanf::formatspecifier","Rails scanf::formatstring","Rails scripterror","Rails securerandom","Rails securityerror","Rails set","Rails win32::registry::api#setvalue()","Rails shell","Rails shell::appendfile","Rails shell::appendio","Rails shell::builtincommand","Rails shell::cat","Rails shell::commandprocessor","Rails shell::concat","Rails shell::echo","Rails shell::error","Rails shell::filter","Rails shell::glob","Rails shell::processcontroller","Rails shell::systemcommand","Rails shell::tee","Rails shell::void","Rails shellwords","Rails signal","Rails signalexception","Rails simpledelegator","Rails singleforwardable","Rails singleton","Rails sizedqueue","Rails socket","Rails socket::ancillarydata","Rails socket::option","Rails socket::udpsource","Rails socketerror","Rails sortedset","Ruby sourceannotationextractor","Ruby sourceannotationextractor::annotation","Ruby sprockets","Ruby sprockets::bootstrap","Ruby sprockets::compressors","Ruby sprockets::helpers","Ruby sprockets::helpers::isolatedhelper","Ruby sprockets::helpers::railshelper","Ruby sprockets::helpers::railshelper::assetpaths","Ruby sprockets::helpers::railshelper::assetpaths::assetnotprecompilederror","Ruby sprockets::railtie","Ruby sprockets::staticcompiler","Rails sshdirpublisher","Rails sshfilepublisher","Rails sshfreshdirpublisher","Rails standarderror","Rails stopiteration","Ruby string","Rails string","Rails irb::locale#string()","Rails kernel#string()","Rails stringio","Rails stringscanner","Rails stringscanner::error","Rails struct","Ruby symbol","Rails symbol","Rails sync","Rails sync_m","Rails sync_m::err","Rails sync_m::err::lockmodefailer","Rails sync_m::err::unknownlocker","Rails syntaxerror","Rails sys","Rails syslog","Rails syslog::constants","Rails systemcallerror","Rails systemexit","Rails systemstackerror","Rails curses::tabsize()","Rails curses::tabsize=()","Rails tcpserver","Rails tcpsocket","Rails tsort","Rails tsort::cyclic","Ruby tag","Rails tempfile","Rails tempfile::remover","Rails thread","Rails threaderror","Rails threadgroup","Rails threadswait","Ruby time","Rails time","Rails timeout","Rails timeout::error","Rails rubytoken#token()","Rails tracer","Ruby trueclass","Rails trueclass","Rails typeerror","Rails udpsocket","Rails unixserver","Rails unixsocket","Ruby uri","Rails uri","Rails kernel::uri()","Rails uri::badurierror","Rails uri::error","Rails uri::escape","Rails uri::ftp","Rails uri::generic","Rails uri::http","Rails uri::https","Rails uri::invalidcomponenterror","Rails uri::invalidurierror","Rails uri::ldap","Rails uri::ldaps","Rails uri::mailto","Rails uri::parser","Rails uri::regexp","Rails uri::regexp::pattern","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Rails unboundmethod","Rails vector","Rails vector::zerovectorerror","Rails webrick","Rails webrick::accesslog","Rails webrick::accesslog::accesslogerror","Rails webrick::basiclog","Rails webrick::cgi","Rails webrick::cgi::socket","Rails webrick::config","Rails webrick::cookie","Rails webrick::daemon","Rails webrick::fakeproxyuri","Rails webrick::genericserver","Rails webrick::htmlutils","Rails webrick::httpauth","Rails webrick::httpauth::authenticator","Rails webrick::httpauth::basicauth","Rails webrick::httpauth::digestauth","Rails webrick::httpauth::htdigest","Rails webrick::httpauth::htgroup","Rails webrick::httpauth::htpasswd","Rails webrick::httpauth::proxyauthenticator","Rails webrick::httpauth::proxybasicauth","Rails webrick::httpauth::proxydigestauth","Rails webrick::httpauth::userdb","Rails webrick::httpproxyserver","Rails webrick::httprequest","Rails webrick::httpresponse","Rails webrick::httpserver","Rails webrick::httpserver::mounttable","Rails webrick::httpservererror","Rails webrick::httpservlet","Rails webrick::httpservlet::abstractservlet","Rails webrick::httpservlet::cgihandler","Rails webrick::httpservlet::defaultfilehandler","Rails webrick::httpservlet::erbhandler","Rails webrick::httpservlet::filehandler","Rails webrick::httpservlet::httpservleterror","Rails webrick::httpservlet::prochandler","Rails webrick::httpstatus","Rails webrick::httpstatus::clienterror","Rails webrick::httpstatus::eoferror","Rails webrick::httpstatus::error","Rails webrick::httpstatus::info","Rails webrick::httpstatus::redirect","Rails webrick::httpstatus::servererror","Rails webrick::httpstatus::status","Rails webrick::httpstatus::success","Rails webrick::httputils","Rails webrick::httputils::formdata","Rails webrick::httpversion","Rails webrick::log","Rails webrick::nullreader","Rails webrick::servererror","Rails webrick::simpleserver","Rails webrick::utils","Rails webrick::utils::timeouthandler","Rails win32ole","Rails win32ole::variant","Rails win32oleruntimeerror","Rails win32ole_event","Rails win32ole_method","Rails win32ole_param","Rails win32ole_type","Rails win32ole_typelib","Rails win32ole_variable","Rails win32ole_variant","Rails weakref","Rails weakref::referror","Rails win32","Rails win32::registry","Rails win32::registry::api","Rails win32::registry::constants","Rails win32::registry::error","Rails win32::registry::error::kernel32","Rails win32::registry::predefinedkey","Rails win32::resolv","Rails win32::resolv::kernel32","Rails win32::sspi","Rails win32::sspi::api","Rails win32::sspi::identity","Rails win32::sspi::negotiateauth","Rails win32::sspi::sspiresult","Rails win32::sspi::securitybuffer","Rails win32::sspi::securityhandle","Rails win32::sspi::timestamp","Rails win32api","Rails xml","Rails xml::parser","Rails xmlencoding_ja","Rails xmlencoding_ja::sjishandler","Rails xmlrpc","Rails xmlrpc::base64","Rails xmlrpc::basicserver","Rails xmlrpc::cgiserver","Rails xmlrpc::client","Rails xmlrpc::client::proxy","Rails xmlrpc::config","Rails xmlrpc::convert","Rails xmlrpc::create","Rails xmlrpc::datetime","Rails xmlrpc::faultexception","Rails xmlrpc::marshal","Rails xmlrpc::marshallable","Rails xmlrpc::modrubyserver","Rails xmlrpc::parsecontenttype","Rails xmlrpc::parserwriterchoosemixin","Rails xmlrpc::server","Rails xmlrpc::service","Rails xmlrpc::service::basicinterface","Rails xmlrpc::service::interface","Rails xmlrpc::service::publicinstancemethodsinterface","Rails xmlrpc::webrickservlet","Rails xmlrpc::xmlparser","Rails xmlrpc::xmlparser::abstractstreamparser","Rails xmlrpc::xmlparser::abstracttreeparser","Rails xmlrpc::xmlparser::nqxmlparser","Rails xmlrpc::xmlparser::nqxmlstreamparser","Rails xmlrpc::xmlparser::nqxmlstreamparser::xmlrpcparser","Rails xmlrpc::xmlparser::nqxmltreeparser","Rails xmlrpc::xmlparser::rexmlstreamparser","Rails xmlrpc::xmlparser::rexmlstreamparser::streamlistener","Rails xmlrpc::xmlparser::streamparsermixin","Rails xmlrpc::xmlparser::xmlparser","Rails xmlrpc::xmlparser::xmlscanstreamparser","Rails xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser","Rails xmlrpc::xmlparser::xmlstreamparser","Rails xmlrpc::xmlparser::xmltreeparser","Rails xmlrpc::xmlwriter","Rails xmlrpc::xmlwriter::abstract","Rails xmlrpc::xmlwriter::simple","Rails xmlrpc::xmlwriter::xmlparser","Rails xmp","Rails xmp::stringinputmethod","Rails yaml","Rails yaml::dbm","Rails yaml::store","Rails yaml::syck","Rails yaml::syck::defaultkey","Rails zerodivisionerror","Rails zlib","Rails zlib::buferror","Rails zlib::dataerror","Rails zlib::deflate","Rails zlib::error","Rails zlib::gzipfile","Rails zlib::gzipfile::crcerror","Rails zlib::gzipfile::error","Rails zlib::gzipfile::lengtherror","Rails zlib::gzipfile::nofooter","Rails zlib::gzipreader","Rails zlib::gzipwriter","Rails zlib::inflate","Rails zlib::memerror","Rails zlib::needdict","Rails zlib::streamend","Rails zlib::streamerror","Rails zlib::versionerror","Rails zlib::zstream","Ruby actiondispatch::flash::flashhash#[]()","Ruby actiondispatch::http::headers#[]()","Ruby actiondispatch::middlewarestack#[]()","Ruby activemodel::errors#[]()","Ruby activerecord::connectionadapters::mysqladapter::statementpool#[]()","Ruby activerecord::connectionadapters::postgresqladapter::statementpool#[]()","Ruby activerecord::connectionadapters::sqliteadapter::statementpool#[]()","Ruby activerecord::connectionadapters::statementpool#[]()","Ruby activerecord::connectionadapters::tabledefinition#[]()","Ruby activerecord::fixtures#[]()","Ruby activeresource::formats::[]()","Ruby activeresource::response#[]()","Ruby activesupport::dependencies::classcache#[]()","Ruby activesupport::multibyte::chars#[]()","Ruby activesupport::orderedhash::[]()","Ruby activesupport::orderedoptions#[]()","Ruby activesupport::safebuffer#[]()","Ruby activesupport::timezone::[]()","Ruby mime::[]()","Rails array#[]()","Rails array::[]()","Rails bignum#[]()","Rails cgi::queryextension#[]()","Rails cgi::session#[]()","Rails csv::row#[]()","Rails csv::table#[]()","Rails continuation#[]()","Rails dbm#[]()","Rails dl::cfunc#[]()","Rails dl::cptr::[]()","Rails dl::cptr::[]()","Rails dl::cptr#[]()","Rails dl::cptr#[]()","Rails dl::cstructentity#[]()","Rails dl::compositehandler#[]()","Rails dl::handle#[]()","Rails dl::handle::[]()","Rails dl::importer#[]()","Rails dl::packer::[]()","Rails dl::stack::[]()","Rails drb::drbsslsocket::sslconfig#[]()","Rails drb::gw#[]()","Rails dir::[]()","Rails env::[]()","Rails fixnum#[]()","Rails gdbm#[]()","Rails gem::commandmanager#[]()","Rails gem::configfile#[]()","Rails hash::[]()","Rails hash#[]()","Rails httpserver::table#[]()","Rails irb::history#[]()","Rails json::[]()","Rails matchdata#[]()","Rails matrix#[]()","Rails matrix::[]()","Rails method#[]()","Rails nqxml::node#[]()","Rails net::httpheader#[]()","Rails oleproperty#[]()","Rails openssl::config#[]()","Rails pstore#[]()","Rails prime::trialdivision#[]()","Rails proc#[]()","Rails psych::coder#[]()","Rails rdoc::markup::attrspan#[]()","Rails rexml::attlistdecl#[]()","Rails rexml::attributes#[]()","Rails rexml::elements#[]()","Rails rexml::light::node#[]()","Rails rexml::parent#[]()","Rails rexml::parsers::pullevent#[]()","Rails rss::maker::[]()","Rails rss::xml::element#[]()","Rails rake::namespace#[]()","Rails rake::task::[]()","Rails rake::taskarguments#[]()","Rails rake::taskmanager#[]()","Rails rinda::tuple#[]()","Rails rinda::tupleentry#[]()","Rails sdbm#[]()","Rails set::[]()","Rails shell::commandprocessor#[]()","Rails string#[]()","Rails stringscanner#[]()","Rails struct#[]()","Rails symbol#[]()","Rails thread#[]()","Rails vector::[]()","Rails vector#[]()","Rails webrick::cgi#[]()","Rails webrick::genericserver#[]()","Rails webrick::httprequest#[]()","Rails webrick::httpresponse#[]()","Rails webrick::httpserver::mounttable#[]()","Rails webrick::httpstatus::[]()","Rails webrick::httputils::formdata#[]()","Rails win32ole#[]()","Rails win32ole_variant#[]()","Rails win32::registry#[]()","Rails yaml::dbm#[]()","Ruby activemodel::errors#[]=()","Ruby activerecord::connectionadapters::mysqladapter::statementpool#[]=()","Ruby activerecord::connectionadapters::postgresqladapter::statementpool#[]=()","Ruby activerecord::connectionadapters::sqliteadapter::statementpool#[]=()","Ruby activerecord::connectionadapters::statementpool#[]=()","Ruby activerecord::fixtures#[]=()","Ruby activeresource::response#[]=()","Ruby activesupport::hashwithindifferentaccess#[]=()","Ruby activesupport::hashwithindifferentaccess#[]=()","Ruby activesupport::multibyte::chars#[]=()","Ruby activesupport::orderedhash#[]=()","Ruby activesupport::orderedoptions#[]=()","Ruby rails::paths::root#[]=()","Rails array#[]=()","Rails cgi::session#[]=()","Rails csv::row#[]=()","Rails csv::table#[]=()","Rails dbm#[]=()","Rails dl::cptr#[]=()","Rails dl::cptr#[]=()","Rails dl::cstructentity#[]=()","Rails drb::gw#[]=()","Rails env::[]=()","Rails gdbm#[]=()","Rails gem::configfile#[]=()","Rails hash#[]=()","Rails httpserver::table#[]=()","Rails net::httpheader#[]=()","Rails oleproperty#[]=()","Rails openssl::config#[]=()","Rails pstore#[]=()","Rails psych::coder#[]=()","Rails rexml::attributes#[]=()","Rails rexml::elements#[]=()","Rails rexml::light::node#[]=()","Rails rexml::parent#[]=()","Rails rexml::xpathparser#[]=()","Rails rss::xml::element#[]=()","Rails sdbm#[]=()","Rails string#[]=()","Rails struct#[]=()","Rails thread#[]=()","Rails webrick::httpresponse#[]=()","Rails webrick::httpserver::mounttable#[]=()","Rails win32ole#[]=()","Rails win32ole_variant#[]=()","Rails win32::registry#[]=()","Rails yaml::dbm#[]=()","Rails bignum#^()","Rails falseclass#^()","Rails fixnum#^()","Rails nilclass#^()","Rails set#^()","Rails trueclass#^()","Rails rss::rss::channel::item::guid#_permalink?()","Ruby activesupport::callbacks::classmethods#__callback_runner_name()","Rails kernel#__callee__()","Rails drb::drbobject#__drbref()","Rails drb::drbobject#__drburi()","Rails irb::workspace#__evaluate__()","Rails irb::context#__exit__()","Rails delegator#__getobj__()","Rails simpledelegator#__getobj__()","Rails basicobject#__id__()","Rails irb::context#__inspect__()","Rails kernel#__method__()","Ruby activesupport::callbacks::classmethods#__reset_runner()","Rails basicobject#__send__()","Rails delegator#__setobj__()","Rails simpledelegator#__setobj__()","Rails irb::context#__to_s__()","Ruby rails::engine#_all_autoload_once_paths()","Ruby rails::engine#_all_autoload_paths()","Ruby rails::engine#_all_load_paths()","Ruby activerecord::attributemethods::deprecatedunderscoreread#_attribute()","Ruby activesupport::xmlmini#_dasherize()","Ruby time#_dump()","Rails bigdecimal#_dump()","Rails drb::drbarray#_dump()","Rails drb::drbobject#_dump()","Rails gem::specification#_dump()","Rails singleton#_dump()","Rails time#_dump()","Rails win32::registry#_dump()","Ruby time#_dump_without_utc_flag()","Ruby time#_dump_without_zone()","Rails webrick::httputils#_escape()","Ruby activerecord::attributemethods::serialization#_field_changed?()","Ruby activesupport::orderedoptions#_get()","Rails win32ole#_getproperty()","Ruby actioncontroller::compatibility#_handle_method_missing()","Ruby actioncontroller::renderers#_handle_render_options()","Rails date::_httpdate()","Rails objectspace::_id2ref()","Ruby abstractcontroller::layouts::classmethods#_implied_layout_name()","Ruby abstractcontroller::callbacks::classmethods#_insert_callbacks()","Rails win32ole#_invoke()","Rails date::_iso8601()","Rails date::_jisx0301()","Ruby actionview::context#_layout_for()","Ruby actionview::helpers::renderinghelper#_layout_for()","Ruby time::_load()","Rails bigdecimal::_load()","Rails drb::drbarray::_load()","Rails drb::drbobject::_load()","Rails gem::specification::_load()","Rails singleton::_load()","Rails time::_load()","Ruby time::_load_without_utc_flag()","Ruby time::_load_without_zone()","Rails webrick::httputils#_make_regex()","Rails webrick::httputils#_make_regex!()","Ruby abstractcontroller::callbacks::classmethods#_normalize_callback_options()","Ruby abstractcontroller::layouts#_normalize_options()","Ruby actioncontroller::compatibility#_normalize_options()","Ruby bigdecimal#_original_to_s()","Rails date::_parse()","Ruby activesupport::xmlmini#_parse_file()","Ruby abstractcontroller::viewpaths#_prefixes()","Ruby actionview::context#_prepare_context()","Rails date::_rfc2822()","Rails date::_rfc3339()","Rails date::_rfc822()","Ruby abstractcontroller::urlfor#_routes()","Ruby abstractcontroller::urlfor::classmethods#_routes()","Ruby actiondispatch::routing::urlfor#_routes_context()","Ruby actionview::helpers::urlhelper#_routes_context()","Ruby actioncontroller::caching::actions#_save_fragment()","Ruby actionview::lookupcontext::detailscache#_set_detail()","Rails irb::context#_set_last_value()","Ruby actioncontroller::paramswrapper::classmethods#_set_wrapper_defaults()","Rails win32ole#_setproperty()","Rails date::_strptime()","Rails datetime::_strptime()","Ruby actionview::helpers::formbuilder::_to_partial_path()","Rails webrick::httputils#_unescape()","Ruby activemodel::validations::classmethods#_validates_default_keys()","Ruby actiondispatch::routing::urlfor#_with_routes()","Ruby abstractcontroller::layouts::classmethods#_write_layout_method()","Rails date::_xmlschema()","Rails kernel#`()","Rails cgi::htmlextension#a()","Rails abbrev::abbrev()","Rails array#abbrev()","Rails gem::indexer#abbreviate()","Rails rexml::parsers::xpathparser#abbreviate()","Rails kernel#abort()","Rails net::ftp#abort()","Rails optionparser#abort()","Rails pstore#abort()","Rails process::abort()","Rails thread#abort_on_exception()","Rails thread::abort_on_exception()","Rails thread::abort_on_exception=()","Rails thread#abort_on_exception=()","Rails bigdecimal#abs()","Rails bignum#abs()","Rails complex#abs()","Rails fixnum#abs()","Rails float#abs()","Rails numeric#abs()","Rails complex#abs2()","Rails numeric#abs2()","Rails uri::generic#absolute()","Rails pathname#absolute?()","Rails resolv::dns::name#absolute?()","Rails uri::generic#absolute?()","Rails file::absolute_path()","Ruby abstractcontroller::base::abstract!()","Ruby activerecord::inheritance::classmethods#abstract_class?()","Ruby rails::railtie::abstract_railtie?()","Rails drb::drbsslsocket#accept()","Rails drb::drbsslsocket::sslconfig#accept()","Rails drb::drbtcpsocket#accept()","Rails drb::drbunixsocket#accept()","Rails openssl::ssl::sslserver#accept()","Rails openssl::ssl::sslsocket#accept()","Rails optionparser#accept()","Rails optionparser::accept()","Rails optionparser::list#accept()","Rails psych::visitors::jsontree#accept()","Rails psych::visitors::toruby#accept()","Rails psych::visitors::visitor#accept()","Rails psych::visitors::yamltree#accept()","Rails rdoc::markup::blankline#accept()","Rails rdoc::markup::document#accept()","Rails rdoc::markup::heading#accept()","Rails rdoc::markup::indentedparagraph#accept()","Rails rdoc::markup::list#accept()","Rails rdoc::markup::listitem#accept()","Rails rdoc::markup::paragraph#accept()","Rails rdoc::markup::raw#accept()","Rails rdoc::markup::rule#accept()","Rails rdoc::markup::verbatim#accept()","Rails socket#accept()","Rails tcpserver#accept()","Rails unixserver#accept()","Rails rdoc::markup::tohtml#accept_blank_line()","Rails rdoc::markup::tordoc#accept_blank_line()","Rails rdoc::markup::tottonly#accept_blank_line()","Rails cgi::accept_charset()","Rails cgi::accept_charset=()","Rails rdoc::markup::formatter#accept_document()","Rails rdoc::markup::tobs#accept_heading()","Rails rdoc::markup::tohtml#accept_heading()","Rails rdoc::markup::tordoc#accept_heading()","Rails rdoc::markup::tottonly#accept_heading()","Rails rdoc::markup::tordoc#accept_indented_paragraph()","Rails rdoc::markup::tohtml#accept_list_end()","Rails rdoc::markup::tordoc#accept_list_end()","Rails rdoc::markup::tottonly#accept_list_end()","Rails rdoc::markup::toansi#accept_list_item_end()","Rails rdoc::markup::tohtml#accept_list_item_end()","Rails rdoc::markup::tordoc#accept_list_item_end()","Rails rdoc::markup::tottonly#accept_list_item_end()","Rails rdoc::markup::toansi#accept_list_item_start()","Rails rdoc::markup::tohtml#accept_list_item_start()","Rails rdoc::markup::tordoc#accept_list_item_start()","Rails rdoc::markup::tottonly#accept_list_item_start()","Rails rdoc::markup::tohtml#accept_list_start()","Rails rdoc::markup::tordoc#accept_list_start()","Rails rdoc::markup::tottonly#accept_list_start()","Rails socket::accept_loop()","Rails openssl::ssl::sslsocket#accept_nonblock()","Rails socket#accept_nonblock()","Rails tcpserver#accept_nonblock()","Rails unixserver#accept_nonblock()","Rails rdoc::markup::tohtml#accept_paragraph()","Rails rdoc::markup::tordoc#accept_paragraph()","Rails rdoc::markup::tottonly#accept_paragraph()","Rails rdoc::markup::tohtml#accept_raw()","Rails rdoc::markup::tordoc#accept_raw()","Rails rdoc::markup::tottonly#accept_raw()","Rails rdoc::markup::tohtml#accept_rule()","Rails rdoc::markup::tordoc#accept_rule()","Rails rdoc::markup::tottonly#accept_rule()","Rails gem::localremoteoptions#accept_uri_http()","Rails rdoc::markup::tohtml#accept_verbatim()","Rails rdoc::markup::tordoc#accept_verbatim()","Rails rdoc::markup::tottonly#accept_verbatim()","Ruby actiondispatch::http::mimenegotiation#accepts()","Ruby activerecord::nestedattributes::classmethods#accepts_nested_attributes_for()","Rails webrick::httpserver#access_log()","Ruby activemodel::massassignmentsecurity::classmethods#accessible_attributes()","Ruby activerecord::generators::modelgenerator#accessible_attributes()","Rails net::ftp#acct()","Rails cmath::acos()","Rails math::acos()","Rails cmath::acos!()","Rails cmath::acosh()","Rails math::acosh()","Rails cmath::acosh!()","Ruby activesupport::inflector::inflections#acronym()","Ruby actioncontroller::metal::action()","Ruby abstractcontroller::layouts#action_has_layout?()","Ruby abstractcontroller::base::action_methods()","Ruby abstractcontroller::base#action_methods()","Ruby abstractcontroller::urlfor::classmethods#action_methods()","Ruby actioncontroller::hideactions::classmethods#action_methods()","Rails gem::activate()","Rails gem::specification#activate()","Rails shell::processcontroller::activate()","Rails gem::specification#activate_dependencies()","Ruby activerecord::connectionadapters::abstractadapter#active?()","Ruby activerecord::connectionadapters::mysql2adapter#active?()","Ruby activerecord::connectionadapters::mysqladapter#active?()","Ruby activerecord::connectionadapters::postgresqladapter#active?()","Rails net::http#active?()","Rails net::http#active?()","Rails net::pop3#active?()","Rails net::pop3#active?()","Rails net::pop3#active?()","Rails net::pop3#active?()","Rails shell::builtincommand#active?()","Rails shell::systemcommand#active?()","Ruby activemodel::massassignmentsecurity::classmethods#active_authorizer()","Ruby activemodel::massassignmentsecurity::classmethods#active_authorizers()","Ruby activerecord::connectionadapters::connectionpool#active_connection?()","Ruby activerecord::connectionadapters::connectionhandler#active_connections?()","Rails shell::processcontroller#active_job?()","Rails shell::processcontroller#active_jobs()","Rails shell::processcontroller#active_jobs_exist?()","Rails shell::processcontroller::active_process_controllers()","Ruby build#activerecord?()","Ruby object#acts_like?()","Ruby date#acts_like_date?()","Ruby datetime#acts_like_date?()","Ruby activesupport::multibyte::chars#acts_like_string?()","Ruby string#acts_like_string?()","Ruby activesupport::timewithzone#acts_like_time?()","Ruby datetime#acts_like_time?()","Ruby time#acts_like_time?()","Ruby build#adapter()","Ruby activerecord::connectionadapters::abstractadapter#adapter_name()","Ruby activerecord::connectionadapters::postgresqladapter#adapter_name()","Ruby actioncontroller::renderers::add()","Ruby activemodel::errors#add()","Ruby activerecord::identitymap::add()","Ruby activesupport::bufferedlogger#add()","Ruby activesupport::taggedlogging#add()","Ruby rails::paths::root#add()","Rails acl::acllist#add()","Rails benchmark::tms#add()","Rails bigdecimal#add()","Rails compositepublisher#add()","Rails drb::timeridconv::timerholder2#add()","Rails gem::dependencylist#add()","Rails logger#add()","Rails prettyprint::text#add()","Rails psych::coder#add()","Rails rexml::attributes#add()","Rails rexml::doctype#add()","Rails rexml::document#add()","Rails rexml::elements#add()","Rails rexml::parent#add()","Rails rake::compositepublisher#add()","Rails rake::filelist#add()","Rails rinda::tuplebag::tuplebin#add()","Rails set#add()","Rails threadgroup#add()","Rails webrick::httpauth::htgroup#add()","Rails benchmark::tms#add!()","Rails set#add?()","Rails rdoc::anymethod#add_alias()","Rails rdoc::attr#add_alias()","Rails rdoc::context#add_alias()","Rails rdoc::methodattr#add_alias()","Rails rdoc::stats#add_alias()","Rails rdoc::toplevel#add_alias()","Rails rdoc::ri::driver#add_also_in()","Rails openssl::x509::request#add_attribute()","Rails rdoc::context#add_attribute()","Rails rdoc::stats#add_attribute()","Rails rexml::element#add_attribute()","Rails rexml::element#add_attributes()","Rails net::imap::add_authenticator()","Rails gem::specification#add_bindir()","Rails gem::localremoteoptions#add_bulk_threshold_option()","Rails openssl::x509::store#add_cert()","Rails openssl::ocsp::request#add_certid()","Rails openssl::pkcs7#add_certificate()","Rails rdoc::context#add_class()","Rails rdoc::ri::driver#add_class()","Rails rdoc::stats#add_class()","Rails rdoc::context#add_class_or_module()","Rails gem::localremoteoptions#add_clear_sources_option()","Ruby activerecord::connectionadapters::abstractmysqladapter#add_column()","Ruby activerecord::connectionadapters::postgresqladapter#add_column()","Ruby activerecord::connectionadapters::schemastatements#add_column()","Ruby activerecord::connectionadapters::abstractmysqladapter#add_column_position!()","Ruby activerecord::connectionadapters::abstractmysqladapter#add_column_sql()","Rails rdoc::classmodule#add_comment()","Rails gem::command::add_common_option()","Rails rdoc::context#add_constant()","Rails rdoc::stats#add_constant()","Rails rdoc::toplevel#add_constant()","Rails openssl::pkcs7#add_crl()","Rails openssl::x509::store#add_crl()","Rails openssl::pkcs7#add_data()","Rails gem::server#add_date()","Rails shell::commandprocessor::add_delegate_command_to_shell()","Ruby actionmailer::deliverymethods::classmethods#add_delivery_method()","Rails gem::specification#add_dependency()","Rails rake::task#add_description()","Rails gem::specification#add_development_dependency()","Rails rexml::document#add_element()","Rails rexml::element#add_element()","Rails openssl::x509::name#add_entry()","Rails rexml::validation::choice#add_event_to_arry()","Rails rexml::validation::state#add_event_to_arry()","Ruby actionview::template::handlers::erubis#add_expr()","Ruby actionview::template::handlers::erubis#add_expr_escaped()","Ruby actionview::template::handlers::erubis#add_expr_literal()","Rails openssl::x509::crl#add_extension()","Rails openssl::x509::certificate#add_extension()","Rails openssl::x509::revoked#add_extension()","Rails gem::command#add_extra_args()","Rails net::httpheader#add_field()","Rails gem::package::tarwriter#add_file()","Rails openssl::x509::store#add_file()","Rails rdoc::stats#add_file()","Rails gem::package::tarwriter#add_file_simple()","Ruby activesupport::backtracecleaner#add_filter()","Rails tracer::add_filter()","Rails gem::dependencyinstaller#add_found_dependencies()","Rails rdoc::ri::driver#add_from()","Rails gem::package::taroutput#add_gem_contents()","Rails rdoc::rdoc::add_generator()","Rails webrick::httpservlet::filehandler::add_handler()","Rails xmlrpc::basicserver#add_handler()","Rails rss::element::add_have_children_element()","Rails rdoc::markup#add_html()","Rails rdoc::markup::attributemanager#add_html()","Rails rake::application#add_import()","Rails rdoc::context#add_include()","Rails rdoc::toplevel#add_include()","Rails rdoc::ri::driver#add_includes()","Ruby activerecord::connectionadapters::schemastatements#add_index()","Ruby activerecord::connectionadapters::abstractmysqladapter#add_index_length()","Ruby activerecord::connectionadapters::schemastatements#add_index_options()","Ruby activerecord::connectionadapters::schemastatements#add_index_sort_order()","Ruby activerecord::connectionadapters::abstractmysqladapter#add_index_sql()","Rails gem::installupdateoptions#add_install_update_options()","Rails xmlrpc::basicserver#add_introspection()","Rails gem::gemcutterutilities#add_key_option()","Rails rdoc::anymethod#add_line_numbers()","Rails rexml::parsers::baseparser#add_listener()","Rails rexml::parsers::lightparser#add_listener()","Rails rexml::parsers::pullparser#add_listener()","Rails rexml::parsers::sax2parser#add_listener()","Rails rexml::parsers::streamparser#add_listener()","Rails rexml::parsers::treeparser#add_listener()","Rails rexml::parsers::ultralightparser#add_listener()","Rails rake::application#add_loader()","Rails gem::localremoteoptions#add_local_remote_options()","Rails rss::maker::add_maker()","Rails gem::package::taroutput#add_metadata()","Rails rdoc::context#add_method()","Rails rdoc::stats#add_method()","Rails rdoc::toplevel#add_method()","Rails xmlrpc::service::basicinterface#add_method()","Rails rdoc::ri::driver#add_method_list()","Rails rdoc::context#add_module()","Rails rdoc::stats#add_module()","Rails rdoc::context#add_module_alias()","Rails xmlrpc::basicserver#add_multicall()","Rails rexml::element#add_namespace()","Rails rss::element::add_need_initialize_variable()","Rails rss::maker::base::add_need_initialize_variable()","Rails openssl::ocsp::basicresponse#add_nonce()","Rails openssl::ocsp::request#add_nonce()","Ruby activemodel::observing::classmethods#add_observer()","Rails observable#add_observer()","Ruby activerecord::observer#add_observer!()","Ruby activemodel::errors#add_on_blank()","Ruby activemodel::errors#add_on_empty()","Rails gem::command#add_option()","Rails rss::maker::base::add_other_element()","Rails gem::commands::ownercommand#add_owners()","Rails openssl::x509::store#add_path()","Rails gem::platformmismatch#add_platform()","Rails gem::versionoption#add_platform_option()","Rails rss::element::add_plural_form()","Ruby actionview::template::handlers::erubis#add_postamble()","Ruby actionview::template::handlers::erubis#add_preamble()","Rails gem::versionoption#add_prerelease_option()","Rails psych::add_private_type()","Rails drb::drbprotocol::add_protocol()","Rails gem::localremoteoptions#add_proxy_option()","Rails openssl::pkcs7#add_recipient()","Ruby actioncontroller::add_renderer()","Rails rdoc::context#add_require()","Ruby rails::generators::resourceroutegenerator#add_resource_route()","Rails net::imap#add_response_handler()","Rails openssl::x509::crl#add_revoked()","Ruby rails::generators::controllergenerator#add_routes()","Rails csv#add_row()","Rails psych::add_ruby_type()","Rails gem::remotefetcher#add_rubygems_trusted_certs()","Rails gem::specification#add_runtime_dependency()","Rails shell::processcontroller#add_schedule()","Rails rdoc::context#add_section()","Rails gem::specification#add_self_to_load_path()","Ruby rails::generators::appbase::add_shared_options_for()","Ruby rails::generators::base::add_shebang_option!()","Rails gem::package::taroutput#add_signatures()","Rails openssl::pkcs7#add_signer()","Ruby activesupport::backtracecleaner#add_silencer()","Ruby rails::generators::actions#add_source()","Rails gem::localremoteoptions#add_source_option()","Rails gem::sourceindex#add_spec()","Rails gem::specification::add_spec()","Rails rdoc::markup#add_special()","Rails rdoc::markup::attributemanager#add_special()","Rails gem::command::add_specific_extra_args()","Rails gem::sourceindex#add_specs()","Rails gem::specification::add_specs()","Rails openssl::ocsp::basicresponse#add_status()","Rails rdoc::markup::formatter#add_tag()","Rails rake::rulerecursionoverflowerror#add_target()","Ruby actionview::template::handlers::erubis#add_text()","Rails rexml::element#add_text()","Ruby activerecord::connectionadapters::schemastatements#add_timestamps()","Ruby activerecord::connectionadapters::abstractmysqladapter#add_timestamps_sql()","Rails rdoc::context#add_to()","Rails rdoc::toplevel#add_to_classes_or_modules()","Rails rss::element::add_to_element_method()","Ruby activerecord::transactions#add_to_transaction()","Rails rdoc::tokenstream#add_token()","Rails rdoc::parser::rubytools#add_token_listener()","Rails rdoc::tokenstream#add_tokens()","Rails thread#add_trace_func()","Ruby activerecord::connectionadapters::databasestatements#add_transaction_record()","Rails gem::security::add_trusted_cert()","Rails gem::localremoteoptions#add_update_sources_option()","Rails openssl::config#add_value()","Rails gem::versionoption#add_version_option()","Ruby nilclass::add_whiner()","Rails rdoc::markup#add_word_pair()","Rails rdoc::markup::attributemanager#add_word_pair()","Rails curses::addch()","Rails curses::window#addch()","Ruby activemodel::errors#added?()","Rails ipsocket#addr()","Rails openssl::ssl::socketforwarder#addr()","Rails unixsocket#addr()","Rails webrick::cgi::socket#addr()","Rails curses::addstr()","Rails curses::window#addstr()","Rails zlib::zstream#adler()","Rails zlib::adler32()","Rails zlib::adler32_combine()","Ruby activesupport::timewithzone#advance()","Ruby date#advance()","Ruby datetime#advance()","Ruby time#advance()","Rails io#advise()","Rails addrinfo#afamily()","Ruby actiondispatch::callbacks::after()","Ruby rails::initializable::initializer#after()","Ruby activerecord::transactions::classmethods#after_commit()","Ruby abstractcontroller::callbacks::classmethods#after_filter()","Ruby rails::railtie::configuration#after_initialize()","Ruby activerecord::transactions::classmethods#after_rollback()","Ruby activemodel::validations::callbacks::classmethods#after_validation()","Ruby activesupport::duration#ago()","Ruby activesupport::timewithzone#ago()","Ruby date#ago()","Ruby datetime#ago()","Ruby numeric#ago()","Ruby time#ago()","Rails date#ajd()","Ruby actiondispatch::flash::flashhash#alert()","Rails gem::streamui#alert()","Rails gem::userinteraction#alert()","Ruby actiondispatch::flash::flashhash#alert=()","Rails gem::streamui#alert_error()","Rails gem::userinteraction#alert_error()","Rails gem::streamui#alert_warning()","Rails gem::userinteraction#alert_warning()","Rails psych::emitter#alias()","Rails psych::handler#alias()","Rails psych::treebuilder#alias()","Ruby activemodel::attributemethods::classmethods#alias_attribute()","Ruby module#alias_attribute()","Rails shell::alias_command()","Rails shell::commandprocessor::alias_command()","Rails rdoc::parser::alias_extension()","Rails shell::commandprocessor::alias_map()","Ruby module#alias_method_chain()","Ruby sprockets::staticcompiler#aliased_path_for()","Rails encoding::aliases()","Rails gem::validator#alien()","Rails dl::packinfo::align()","Rails drb::drbserver#alive?()","Rails drb::drbtcpsocket#alive?()","Rails drb::extserv#alive?()","Rails fiber#alive?()","Rails rinda::tupleentry#alive?()","Rails thread#alive?()","Ruby actionmailer::collector#all()","Ruby activerecord::findermethods#all()","Ruby activeresource::base::all()","Ruby activesupport::timezone::all()","Ruby rails::application::railties#all()","Ruby rails::engine::railties#all()","Ruby rails::generators::activemodel::all()","Ruby rails::plugin::all()","Rails gem::specification::all()","Rails net::popmail#all()","Rails gem::specification::all=()","Rails enumerable#all?()","Rails rdoc::toplevel::all_classes()","Rails rdoc::toplevel::all_classes_and_modules()","Rails rdoc::toplevel::all_classes_hash()","Ruby time#all_day()","Rails rdoc::toplevel::all_files()","Rails rdoc::toplevel::all_files_hash()","Rails gem::sourceindex#all_gems()","Ruby actioncontroller::helpers::classmethods#all_helpers_from_path()","Rails gem::all_load_paths()","Rails rdoc::toplevel::all_modules()","Rails rdoc::toplevel::all_modules_hash()","Ruby time#all_month()","Rails gem::specification::all_names()","Ruby rails::paths::root#all_paths()","Ruby time#all_quarter()","Rails symbol::all_symbols()","Rails threadswait::all_waits()","Rails threadswait#all_waits()","Rails threadswait::all_waits()","Rails threadswait#all_waits()","Ruby time#all_week()","Ruby time#all_year()","Rails class#allocate()","Rails acl#allow_addr?()","Rails acl#allow_socket?()","Rails rss::xmlstylesheet#alternate=()","Rails date#amjd()","Rails module#ancestors()","Rails rdoc::classmodule#ancestors()","Rails rdoc::normalclass#ancestors()","Rails rdoc::ri::store#ancestors()","Rails rdoc::singleclass#ancestors()","Rails rdoc::ri::driver#ancestors_of()","Rails complex#angle()","Rails float#angle()","Rails numeric#angle()","Rails rdoc::markup::formatter#annotate()","Rails rdoc::markup::tobs#annotate()","Ruby activerecord::migration#announce()","Ruby build#announce()","Ruby module#anonymous?()","Ruby actionmailer::collector#any()","Ruby activerecord::relation#any?()","Rails enumerable#any?()","Rails rdoc::context#any_content()","Ruby actioncontroller::responder#api_behavior()","Rails gem::gemcutterutilities#api_key()","Ruby actioncontroller::responder#api_location()","Rails net::apop#apop?()","Rails net::apop#apop?()","Rails net::pop3#apop?()","Rails net::pop3#apop?()","Rails net::pop3#apop?()","Rails net::pop3#apop?()","Ruby rails::appbuilder#app()","Ruby rails::consolemethods#app()","Ruby rails::engine#app()","Ruby rails::pluginbuilder#app()","Ruby rails::server#app()","Ruby rails::generators::appgenerator#app_const()","Ruby rails::generators::appgenerator#app_const_base()","Ruby rails::railtie::configuration#app_generators()","Ruby rails::railtie::configuration#app_middleware()","Ruby rails::generators::appgenerator#app_name()","Rails gem::installer#app_script_text()","Ruby rails::generators::appgenerator#app_secret()","Ruby rails::generators::pluginnewgenerator#app_templates_dir()","Rails net::imap#append()","Rails optionparser::list#append()","Rails rake::invocationchain::append()","Rails rake::invocationchain#append()","Rails rake::invocationchain::emptyinvocationchain#append()","Rails shell::commandprocessor#append()","Ruby abstractcontroller::callbacks::classmethods#append_after_filter()","Ruby abstractcontroller::callbacks::classmethods#append_around_filter()","Ruby abstractcontroller::callbacks::classmethods#append_before_filter()","Rails webrick::httputils::formdata#append_data()","Ruby activesupport::concern#append_features()","Rails mutex_m::append_features()","Rails rss::atom::commonmodel::append_features()","Rails rss::atom::contentmodel::append_features()","Rails rss::atom::dateconstruct::append_features()","Rails rss::atom::personconstruct::append_features()","Rails rss::atom::textconstruct::append_features()","Rails rss::atom::uricontentmodel::append_features()","Rails rss::basedublincoremodel#append_features()","Rails rss::basetrackbackmodel#append_features()","Rails rss::contentmodel::append_features()","Rails rss::ituneschannelmodel::append_features()","Rails rss::itunesitemmodel::append_features()","Rails rss::imagefaviconmodel::append_features()","Rails rss::imageitemmodel::append_features()","Rails rss::maker::atompersonconstructbase::append_features()","Rails rss::maker::atomtextconstructbase::append_features()","Rails rss::maker::contentmodel::append_features()","Rails rss::maker::dublincoremodel::append_features()","Rails rss::maker::ituneschannelmodel::append_features()","Rails rss::maker::itunesitemmodel::append_features()","Rails rss::maker::imagefaviconmodel::append_features()","Rails rss::maker::imageitemmodel::append_features()","Rails rss::maker::slashmodel::append_features()","Rails rss::maker::syndicationmodel::append_features()","Rails rss::maker::taxonomytopicmodel::append_features()","Rails rss::maker::taxonomytopicsmodel::append_features()","Rails rss::maker::trackbackmodel::append_features()","Rails rss::rss09::append_features()","Rails rss::rss10::append_features()","Rails rss::slashmodel::append_features()","Rails rss::syndicationmodel::append_features()","Rails rss::taxonomytopicmodel::append_features()","Rails rss::taxonomytopicsmodel::append_features()","Rails sync_m::append_features()","Rails sync_m::append_features()","Ruby abstractcontroller::viewpaths#append_view_path()","Ruby abstractcontroller::viewpaths::classmethods#append_view_path()","Ruby rails::application()","Ruby rails::generators::actions#application()","Rails rake::application()","Ruby rails::application=()","Rails rake::application=()","Ruby rails::generators::pluginnewgenerator#application_definition()","Ruby rails::generators::namedbase#application_name()","Ruby actiondispatch::exceptionwrapper#application_trace()","Ruby activerecord::spawnmethods#apply_finder_options()","Ruby activerecord::findermethods#apply_join_dependency()","Ruby rails::generators::appbase#apply_rails_template()","Rails rdoc::alias#aref()","Rails rdoc::context::section#aref()","Rails rdoc::methodattr#aref()","Rails rdoc::anymethod#aref_prefix()","Rails rdoc::attr#aref_prefix()","Rails rdoc::methodattr#aref_prefix()","Rails rdoc::generator::markup#aref_to()","Ruby activerecord::querymethods#arel()","Ruby activerecord::base::arel_engine()","Ruby activerecord::base::arel_table()","Rails complex#arg()","Rails float#arg()","Rails numeric#arg()","Rails rake::task#arg_names()","Rails rdoc::anymethod#arglists()","Rails nomethoderror#args()","Rails gem::command#arguments()","Rails argf#argv()","Rails method#arity()","Rails proc#arity()","Rails unboundmethod#arity()","Ruby abstractcontroller::callbacks::classmethods#around_filter()","Rails win32ole_variant::array()","Rails gem::specification::array_attributes()","Rails rdoc::generator::markup#as_href()","Ruby activemodel::errors#as_json()","Ruby activemodel::serializers::json#as_json()","Ruby activesupport::json::encoding::encoder#as_json()","Ruby activesupport::json::variable#as_json()","Ruby activesupport::timewithzone#as_json()","Ruby bigdecimal#as_json()","Ruby falseclass#as_json()","Ruby nilclass#as_json()","Ruby numeric#as_json()","Ruby regexp#as_json()","Ruby string#as_json()","Ruby symbol#as_json()","Ruby trueclass#as_json()","Rails complex#as_json()","Rails date#as_json()","Rails datetime#as_json()","Rails exception#as_json()","Rails range#as_json()","Rails rational#as_json()","Rails regexp#as_json()","Rails struct#as_json()","Rails symbol#as_json()","Rails time#as_json()","Rails rdoc::markup::attribute::as_string()","Rails pathname#ascend()","Rails encoding#ascii_compatible?()","Rails string#ascii_only?()","Rails encoding::converter::asciicompat_encoding()","Rails date#asctime()","Rails time#asctime()","Rails cmath::asin()","Rails math::asin()","Rails cmath::asin!()","Rails cmath::asinh()","Rails math::asinh()","Rails cmath::asinh!()","Rails gem::streamui#ask()","Rails gem::userinteraction#ask()","Rails gem::streamui#ask_for_password()","Rails gem::userinteraction#ask_for_password()","Rails gem::streamui#ask_for_password_on_unix()","Rails gem::streamui#ask_for_password_on_windows()","Rails gem::uninstaller#ask_if_ok()","Rails gem::streamui#ask_yes_no()","Rails gem::userinteraction#ask_yes_no()","Rails openssl::pkey::ec::group#asn1_flag()","Rails openssl::pkey::ec::group#asn1_flag=()","Ruby actiondispatch::middlewarestack#assert_index()","Ruby hash#assert_valid_keys()","Ruby actionview::helpers::assettaghelper::assetincludetag#asset_name()","Ruby actionview::helpers::assettaghelper::javascriptincludetag#asset_name()","Ruby actionview::helpers::assettaghelper::stylesheetincludetag#asset_name()","Ruby rails::generators::assetsgenerator#asset_name()","Ruby sprockets::helpers::railshelper#asset_path()","Ruby sprockets::helpers::railshelper#asset_paths()","Ruby actionview::helpers::assettaghelper::assetincludetag#asset_tag()","Ruby actionview::helpers::assettaghelper::javascriptincludetag#asset_tag()","Ruby actionview::helpers::assettaghelper::stylesheetincludetag#asset_tag()","Ruby rails::generators::appbase#assets_gemfile_entry()","Ruby activerecord::attributeassignment#assign_attributes()","Rails dl::cstructentity#assign_names()","Ruby actioncontroller::compatibility#assign_shortcuts()","Rails array#assoc()","Rails env::assoc()","Rails hash#assoc()","Ruby activerecord::connectionadapters::schemastatements#assume_migrated_upto_version()","Ruby activesupport::timezone#at()","Ruby string#at()","Ruby time::at()","Rails array#at()","Rails time::at()","Ruby date#at_beginning_of_day()","Ruby datetime#at_beginning_of_day()","Ruby time#at_beginning_of_day()","Ruby datetime#at_beginning_of_hour()","Ruby time#at_beginning_of_hour()","Ruby date#at_beginning_of_month()","Ruby time#at_beginning_of_month()","Ruby date#at_beginning_of_quarter()","Ruby time#at_beginning_of_quarter()","Ruby date#at_beginning_of_week()","Ruby time#at_beginning_of_week()","Ruby date#at_beginning_of_year()","Ruby time#at_beginning_of_year()","Ruby date#at_end_of_month()","Ruby time#at_end_of_month()","Ruby date#at_end_of_quarter()","Ruby time#at_end_of_quarter()","Ruby date#at_end_of_week()","Ruby time#at_end_of_week()","Ruby date#at_end_of_year()","Ruby time#at_end_of_year()","Rails kernel#at_exit()","Ruby date#at_midnight()","Ruby datetime#at_midnight()","Ruby time#at_midnight()","Ruby time::at_with_coercion()","Ruby time::at_without_coercion()","Rails bigmath#atan()","Rails cmath::atan()","Rails math::atan()","Rails cmath::atan!()","Rails cmath::atan2()","Rails math::atan2()","Rails cmath::atan2!()","Rails cmath::atanh()","Rails math::atanh()","Rails cmath::atanh!()","Rails file::atime()","Rails file#atime()","Rails file::stat#atime()","Rails pathname#atime()","Ruby actionview::helpers::atomfeedhelper#atom_feed()","Rails rss::atom::dateconstruct#atom_validate()","Rails rss::atom::feed::entry::content#atom_validate()","Rails rss::atom::textconstruct#atom_validate()","Ruby file::atomic_write()","Ruby activesupport::logsubscriber::attach_to()","Ruby actionmailer::base#attachments()","Ruby actionmailer::mailhelper#attachments()","Rails rexml::sax2listener#attlistdecl()","Rails rexml::streamlistener#attlistdecl()","Rails rexml::parsers::pullevent#attlistdecl?()","Ruby activemodel::massassignmentsecurity::classmethods#attr_accessible()","Ruby module#attr_internal()","Ruby module#attr_internal_accessor()","Ruby module#attr_internal_reader()","Ruby module#attr_internal_writer()","Ruby activemodel::massassignmentsecurity::classmethods#attr_protected()","Ruby activerecord::readonlyattributes::classmethods#attr_readonly()","Rails rdoc::markup::attributemanager#attribute()","Rails rexml::element#attribute()","Rails rexml::quickpath::attribute()","Ruby activerecord::attributemethods::timezoneconversion::classmethods#attribute_cast_code()","Ruby html::selector#attribute_match()","Ruby activemodel::attributemethods#attribute_method?()","Ruby activemodel::validations::classmethods#attribute_method?()","Ruby activerecord::attributemethods::classmethods#attribute_method?()","Ruby activemodel::attributemethods::classmethods#attribute_method_affix()","Ruby activemodel::attributemethods::classmethods#attribute_method_prefix()","Ruby activemodel::attributemethods::classmethods#attribute_method_suffix()","Ruby activerecord::attributemethods::classmethods#attribute_methods_generated?()","Ruby activemodel::attributemethods#attribute_missing()","Ruby activerecord::attributemethods::classmethods#attribute_names()","Rails gem::specification::attribute_names()","Rails rexml::doctype#attribute_of()","Rails openssl::x509::request#attributes()","Rails rdoc::markup::tordoc#attributes()","Rails rdoc::ri::store#attributes()","Rails uri::ldap#attributes()","Ruby activerecord::attributeassignment#attributes=()","Rails openssl::x509::request#attributes=()","Rails uri::ldap#attributes=()","Ruby activerecord::attributemethods::beforetypecast#attributes_before_type_cast()","Ruby activerecord::attributemethods::serialization#attributes_before_type_cast()","Rails rexml::doctype#attributes_of()","Ruby activemodel::massassignmentsecurity::classmethods#attributes_protected_by_default()","Ruby activemodel::securepassword::classmethods::attributes_protected_by_default()","Ruby activerecord::generators::modelgenerator#attributes_with_index()","Rails curses::attroff()","Rails curses::window#attroff()","Rails curses::attron()","Rails curses::window#attron()","Rails curses::attrset()","Rails curses::window#attrset()","Ruby actionview::helpers::assettaghelper#audio_path()","Ruby actionview::helpers::assettaghelper#audio_tag()","Rails net::smtp#auth_cram_md5()","Rails net::smtp#auth_cram_md5()","Rails net::smtp#auth_login()","Rails net::smtp#auth_login()","Rails net::pop3::auth_only()","Rails net::pop3#auth_only()","Rails net::pop3#auth_only()","Rails net::pop3#auth_only()","Rails net::pop3#auth_only()","Rails net::pop3::auth_only()","Rails net::pop3::auth_only()","Rails net::pop3::auth_only()","Rails net::smtp#auth_plain()","Rails net::smtp#auth_plain()","Ruby activeresource::base::auth_type()","Ruby activeresource::base::auth_type=()","Ruby activeresource::connection#auth_type=()","Ruby actioncontroller::httpauthentication::basic#authenticate()","Ruby actioncontroller::httpauthentication::digest#authenticate()","Ruby actioncontroller::httpauthentication::token#authenticate()","Ruby activemodel::securepassword::instancemethodsonactivation#authenticate()","Rails net::imap#authenticate()","Rails net::smtp#authenticate()","Rails net::smtp#authenticate()","Rails webrick::httpauth::basicauth#authenticate()","Rails webrick::httpauth::digestauth#authenticate()","Ruby actioncontroller::httpauthentication::basic::controllermethods#authenticate_or_request_with_http_basic()","Ruby actioncontroller::httpauthentication::digest::controllermethods#authenticate_or_request_with_http_digest()","Ruby actioncontroller::httpauthentication::token::controllermethods#authenticate_or_request_with_http_token()","Ruby actioncontroller::httpauthentication::basic::controllermethods#authenticate_with_http_basic()","Ruby actioncontroller::httpauthentication::digest::controllermethods#authenticate_with_http_digest()","Ruby actioncontroller::httpauthentication::token::controllermethods#authenticate_with_http_token()","Ruby actioncontroller::httpauthentication::digest#authentication_header()","Ruby actioncontroller::httpauthentication::basic#authentication_request()","Ruby actioncontroller::httpauthentication::digest#authentication_request()","Ruby actioncontroller::httpauthentication::token#authentication_request()","Ruby railsguides::helpers#author()","Rails gem::specification#author()","Rails gem::specification#author=()","Ruby actiondispatch::request#authorization()","Rails gem::specification#authors()","Rails gem::specification#authors=()","Ruby actionview::helpers::assettaghelper#auto_discovery_link_tag()","Ruby activesupport::bufferedlogger#auto_flushing=()","Rails io#autoclose=()","Rails io#autoclose?()","Ruby activesupport::autoload#autoload()","Rails kernel#autoload()","Rails module#autoload()","Rails kernel#autoload?()","Rails module#autoload?()","Ruby activesupport::autoload#autoload_at()","Ruby rails::paths::root#autoload_once()","Ruby rails::engine::configuration#autoload_once_paths()","Ruby rails::engine::configuration#autoload_paths()","Ruby rails::paths::root#autoload_paths()","Ruby activesupport::autoload#autoload_under()","Ruby activesupport::autoload#autoloads()","Rails zlib::zstream#avail_in()","Rails zlib::zstream#avail_out()","Rails zlib::zstream#avail_out=()","Rails gem::available?()","Ruby abstractcontroller::base#available_action?()","Rails rss::baselistener::available_tags()","Ruby erb::generators::scaffoldgenerator#available_views()","Ruby activerecord::calculations#average()","Rails rexml::quickpath::axe()","Ruby activesupport::json::backend()","Ruby activesupport::json::backend=()","Ruby activesupport::xmlmini#backend=()","Rails rake::altsystem#backticks()","Rails exception#backtrace()","Rails gem::configfile#backtrace()","Rails thread#backtrace()","Ruby rails::backtrace_cleaner()","Ruby activerecord::dynamicfindermatch#bang?()","Ruby rails::generators::appgenerator::banner()","Ruby rails::generators::base::banner()","Ruby rails::generators::pluginnewgenerator::banner()","Rails optionparser#banner()","Rails cgi::htmlextension#base()","Rails optionparser#base()","Rails securerandom::base64()","Rails xmlrpc::convert::base64()","Rails digest::class::base64digest()","Rails digest::instance#base64digest()","Rails digest::instance#base64digest!()","Ruby activerecord::inheritance::classmethods#base_class()","Rails gem::specification#base_dir()","Ruby rails::generators::base::base_name()","Rails rdoc::toplevel#base_name()","Ruby rails::generators::base::base_root()","Ruby activerecord::migrationproxy#basename()","Rails file::basename()","Rails pathname#basename()","Rails openssl::ocsp::response#basic()","Rails net::httpheader#basic_auth()","Rails webrick::httpauth#basic_auth()","Rails readline::basic_quote_characters()","Rails readline::basic_quote_characters=()","Rails readline::basic_word_break_characters()","Rails readline::basic_word_break_characters=()","Ruby activerecord::persistence#becomes()","Rails curses::beep()","Ruby actiondispatch::callbacks::before()","Ruby rails::initializable::initializer#before()","Ruby rails::railtie::configuration#before_configuration()","Ruby rails::railtie::configuration#before_eager_load()","Ruby abstractcontroller::callbacks::classmethods#before_filter()","Ruby rails::railtie::configuration#before_initialize()","Rails rdoc::task#before_running_rdoc()","Ruby activemodel::validations::callbacks::classmethods#before_validation()","Rails matchdata#begin()","Rails range#begin()","Rails rdoc::stats#begin_adding()","Rails rdoc::stats::quiet#begin_adding()","Ruby activerecord::connectionadapters::abstractmysqladapter#begin_db_transaction()","Ruby activerecord::connectionadapters::databasestatements#begin_db_transaction()","Ruby activerecord::connectionadapters::postgresqladapter#begin_db_transaction()","Ruby date#beginning_of_day()","Ruby datetime#beginning_of_day()","Ruby time#beginning_of_day()","Ruby datetime#beginning_of_hour()","Ruby time#beginning_of_hour()","Rails stringscanner#beginning_of_line?()","Ruby date#beginning_of_month()","Ruby time#beginning_of_month()","Ruby date#beginning_of_quarter()","Ruby time#beginning_of_quarter()","Ruby date#beginning_of_week()","Ruby time#beginning_of_week()","Ruby date#beginning_of_year()","Ruby time#beginning_of_year()","Rails gem::command#begins?()","Rails curses::window#begx()","Rails curses::window#begy()","Ruby activesupport::deprecation::behavior()","Ruby activesupport::deprecation::behavior=()","Ruby activerecord::associations::classmethods#belongs_to()","Ruby activerecord::connectionadapters::table#belongs_to()","Ruby activerecord::connectionadapters::tabledefinition#belongs_to()","Ruby rails::initializable::initializer#belongs_to?()","Ruby activesupport::benchmarkable#benchmark()","Rails benchmark::benchmark()","Ruby railsenvironment#best_install_method()","Ruby activesupport::timewithzone#between?()","Rails comparable#between?()","Rails gem::specification#bin_dir()","Rails gem::specification#bin_file()","Rails gem::bin_path()","Rails net::ftp#binary=()","Rails rdoc::parser::binary?()","Rails gem::binary_mode()","Ruby activerecord::querymethods#bind()","Ruby rails::initializable::initializer#bind()","Rails addrinfo#bind()","Rails dl::function#bind()","Rails dl::importer#bind()","Rails exception2messagemapper#bind()","Rails exception2messagemapper#bind()","Rails socket#bind()","Rails udpsocket#bind()","Rails unboundmethod#bind()","Rails dl::carriedfunction#bind_at_call()","Rails dl::function#bind_at_call()","Rails dl::tempfunction#bind_at_call()","Rails dl::importer#bind_function()","Rails kernel#binding()","Rails proc#binding()","Rails gem::bindir()","Rails argf#binmode()","Rails io#binmode()","Rails net::telnet#binmode()","Rails stringio#binmode()","Rails net::telnet#binmode=()","Rails argf#binmode?()","Rails io#binmode?()","Rails io::binread()","Rails pathname#binread()","Rails io::binwrite()","Rails openssl::bn#bit_set?()","Rails rdoc::markup::attribute::bitmap_for()","Rails curses::bkgd()","Rails curses::window#bkgd()","Rails curses::bkgdset()","Rails curses::window#bkgdset()","Ruby activemodel::errors#blank?()","Ruby falseclass#blank?()","Ruby nilclass#blank?()","Ruby object#blank?()","Ruby string#blank?()","Ruby trueclass#blank?()","Rails openssl::pkey::rsa#blinding_off!()","Rails openssl::pkey::rsa#blinding_on!()","Rails file::stat#blksize()","Ruby actionmailer::mailhelper#block_format()","Rails kernel#block_given?()","Rails digest::hmac#block_length()","Rails digest::instance#block_length()","Rails openssl::digest#block_length()","Rails shell::processcontroller::block_output_synchronize()","Rails rdoc::methodattr#block_params=()","Rails string#block_scanf()","Rails drb::drbserver::invokemethod18mixin#block_yield()","Rails file::blockdev?()","Rails file::stat#blockdev?()","Rails filetest#blockdev?()","Rails pathname#blockdev?()","Rails cgi::htmlextension#blockquote()","Rails file::stat#blocks()","Rails benchmark::bm()","Rails benchmark::bmbm()","Ruby actiondispatch::request#body()","Ruby actiondispatch::response#body()","Rails net::httpresponse#body()","Rails webrick::httprequest#body()","Ruby actiondispatch::response#body=()","Rails net::httpgenericrequest#body=()","Rails net::httpresponse#body=()","Rails net::httpgenericrequest#body_exist?()","Ruby actiondispatch::response#body_parts()","Rails net::httpresponse::body_permitted?()","Rails net::httpgenericrequest#body_stream=()","Rails socket::option::bool()","Rails socket::option#bool()","Rails rexml::functions::boolean()","Rails xmlrpc::convert::boolean()","Rails gem::localremoteoptions#both?()","Rails irb::frame#bottom()","Rails irb::frame::bottom()","Rails dl::function#bound?()","Rails curses::window#box()","Rails prettyprint::group#break()","Rails prettyprint::group#break?()","Rails prettyprint#break_outmost_groups()","Rails debugger__::break_points()","Rails debugger__#break_points()","Rails prettyprint#breakable()","Rails prettyprint::singleline#breakable()","Ruby kernel#breakpoint()","Rails conditionvariable#broadcast()","Rails monitormixin::conditionvariable#broadcast()","Ruby railsguides::textileextensions#brush_for()","Rails win32::sspi::securitybuffer#buffersize()","Rails win32::sspi::securitybuffer#buffertype()","Ruby actioncontroller::middleware::build()","Ruby actiondispatch::middlewarestack#build()","Ruby actiondispatch::middlewarestack::middleware#build()","Ruby actionview::resolver::path::build()","Ruby activerecord::relation#build()","Ruby activeresource::base::build()","Ruby rails::generators::activemodel::build()","Ruby rails::generators::appbase#build()","Rails gem::builder#build()","Rails gem::ext::configurebuilder::build()","Rails gem::ext::extconfbuilder::build()","Rails gem::ext::rakebuilder::build()","Rails matrix::build()","Rails uri::ftp::build()","Rails uri::generic::build()","Rails uri::http::build()","Rails uri::ldap::build()","Rails uri::mailto::build()","Rails uri::generic::build2()","Ruby activerecord::querymethods#build_arel()","Rails gem::command::build_args()","Rails gem::command::build_args=()","Rails gem::security::build_cert()","Rails gem::installer#build_extensions()","Rails rdoc::markup::parser#build_heading()","Rails gem::indexer#build_indicies()","Rails gem::indexer#build_legacy_indicies()","Rails rdoc::markup::parser#build_list()","Rails gem::indexer#build_marshal_gemspecs()","Ruby activesupport::cache::memcachestore::build_mem_cache()","Rails gem::indexer#build_modern_index()","Rails gem::indexer#build_modern_indicies()","Ruby rails::application#build_original_fullpath()","Rails rdoc::markup::parser#build_paragraph()","Rails gem::indexer#build_rss()","Rails gem::security::build_self_signed_cert()","Rails rdoc::markup::parser#build_verbatim()","Ruby rails::generators::appbase#builder()","Rails openssl::pkey::ec::builtin_curves()","Rails gem::version#bump()","Ruby rails::generators::appbase#bundle_command()","Ruby object#bundler?()","Ruby actionview::helpers::formbuilder#button()","Ruby actionview::helpers::formtaghelper#button_tag()","Ruby actionview::helpers::urlhelper#button_to()","Ruby actionview::helpers::javascripthelper#button_to_function()","Rails csv::table#by_col()","Rails csv::table#by_col!()","Rails csv::table#by_col_or_row()","Rails csv::table#by_col_or_row!()","Rails openssl::engine::by_id()","Rails csv::table#by_row()","Rails csv::table#by_row!()","Ruby numeric#byte()","Ruby numeric#bytes()","Rails argf#bytes()","Rails io#bytes()","Rails rexml::child#bytes()","Rails random#bytes()","Rails string#bytes()","Rails stringio#bytes()","Rails zlib::gzipreader#bytes()","Rails gem::package::tarreader::entry#bytes_read()","Rails string#bytesize()","Rails string#byteslice()","Ruby actioncontroller::caching#cache()","Ruby actionview::helpers::cachehelper#cache()","Ruby activerecord::connectionadapters::querycache#cache()","Ruby activerecord::querycache::classmethods#cache()","Ruby rails::cache()","Rails prime::trialdivision#cache()","Ruby activerecord::attributemethods::read::classmethods#cache_attribute?()","Ruby activerecord::attributemethods::read::classmethods#cache_attributes()","Rails gem::cache_dir()","Rails gem::specfetcher#cache_dir()","Rails gem::specification#cache_dir()","Rails gem::specification#cache_file()","Ruby activerecord::fixtures::cache_fixtures()","Ruby activerecord::fixtures::cache_for_connection()","Rails gem::cache_gem()","Rails gem::specification#cache_gem()","Ruby activerecord::integration#cache_key()","Ruby actioncontroller::caching::pages#cache_page()","Ruby actioncontroller::caching::pages::classmethods#cache_page()","Rails rdoc::ri::store#cache_path()","Ruby actioncontroller::caching::configmethods#cache_store()","Ruby actioncontroller::caching::configmethods#cache_store=()","Ruby actionview::base::cache_template_loading()","Ruby actionview::base::cache_template_loading=()","Ruby activerecord::attributemethods::read::classmethods#cached_attributes()","Ruby activerecord::fixtures::cached_fixtures()","Ruby actioncontroller::caching::actions::classmethods#caches_action()","Ruby actioncontroller::caching::pages::classmethods#caches_page()","Rails gdbm#cachesize=()","Ruby actioncontroller::caching#caching_allowed?()","Ruby activerecord::calculations#calculate()","Rails rdoc::stats#calculate()","Ruby actiondispatch::remoteip::getip#calculate_ip()","Ruby actioncontroller::metal::call()","Ruby actioncontroller::middleware::actionmiddleware#call()","Ruby actioncontroller::responder::call()","Ruby actiondispatch::beststandardssupport#call()","Ruby actiondispatch::callbacks#call()","Ruby actiondispatch::cookies#call()","Ruby actiondispatch::debugexceptions#call()","Ruby actiondispatch::filehandler#call()","Ruby actiondispatch::flash#call()","Ruby actiondispatch::head#call()","Ruby actiondispatch::paramsparser#call()","Ruby actiondispatch::publicexceptions#call()","Ruby actiondispatch::reloader#call()","Ruby actiondispatch::remoteip#call()","Ruby actiondispatch::requestid#call()","Ruby actiondispatch::rescue#call()","Ruby actiondispatch::showexceptions#call()","Ruby actiondispatch::static#call()","Ruby actionview::template::handlers::builder#call()","Ruby actionview::template::handlers::erb::call()","Ruby actionview::template::handlers::erb#call()","Ruby activerecord::connectionadapters::connectionmanagement#call()","Ruby activerecord::identitymap::middleware#call()","Ruby activerecord::querycache#call()","Ruby activesupport::logsubscriber#call()","Ruby i18n::exceptionhandler#call()","Ruby logger::simpleformatter#call()","Ruby rails::application#call()","Ruby rails::engine#call()","Ruby rails::rack::debugger#call()","Ruby rails::rack::logtailer#call()","Ruby rails::rack::logger#call()","Rails continuation#call()","Rails dl::cfunc#call()","Rails dl::function#call()","Rails fiddle::closure::blockcaller#call()","Rails fiddle::function#call()","Rails logger::formatter#call()","Rails method#call()","Rails proc#call()","Rails win32api#call()","Rails xmlrpc::client#call()","Rails xmlrpc::client#call2()","Rails xmlrpc::client#call2_async()","Ruby rails::rack::logger#call_app()","Rails xmlrpc::client#call_async()","Rails kernel#callcc()","Rails kernel#caller()","Rails dl::cfunc#calltype()","Rails dl::cfunc#calltype=()","Ruby string#camelcase()","Ruby activesupport::inflector#camelize()","Ruby string#camelize()","Ruby rails::generators::appgenerator#camelized()","Ruby rails::generators::pluginnewgenerator#camelized()","Rails curses::can_change_color?()","Rails rdoc::parser::can_parse()","Rails rinda::tupleentry#cancel()","Rails rinda::waittemplateentry#cancel()","Rails webrick::utils::timeouthandler#cancel()","Rails webrick::utils::timeouthandler::cancel()","Rails rinda::tupleentry#canceled?()","Rails optionparser#candidate()","Rails optionparser::completion#candidate()","Rails optionparser::completion::candidate()","Rails psych::emitter#canonical()","Rails psych::emitter#canonical=()","Rails net::httpheader#canonical_each()","Rails addrinfo#canonname()","Rails net::smtp::response#capabilities()","Rails net::imap#capability()","Rails net::smtp#capable_auth_types()","Rails net::smtp#capable_auth_types()","Rails net::smtp#capable_cram_md5_auth?()","Rails net::smtp#capable_cram_md5_auth?()","Rails net::smtp#capable_login_auth?()","Rails net::smtp#capable_login_auth?()","Rails net::smtp#capable_plain_auth?()","Rails net::smtp#capable_plain_auth?()","Rails net::smtp#capable_starttls?()","Rails net::smtp#capable_starttls?()","Ruby rails::generators::actions#capify!()","Ruby activesupport::multibyte::chars#capitalize()","Rails string#capitalize()","Rails symbol#capitalize()","Rails string#capitalize!()","Rails cgi::htmlextension#caption()","Ruby actionview::helpers::capturehelper#capture()","Ruby kernel#capture()","Rails open3::capture2()","Rails open3::capture2e()","Rails open3::capture3()","Rails matchdata#captures()","Ruby activerecord::connectionadapters::abstractadapter#case_insensitive_comparison()","Ruby activerecord::connectionadapters::abstractmysqladapter#case_insensitive_comparison()","Ruby activerecord::connectionadapters::databasestatements#case_sensitive_equality_operator()","Ruby activerecord::connectionadapters::abstractadapter#case_sensitive_modifier()","Ruby activerecord::connectionadapters::abstractmysqladapter#case_sensitive_modifier()","Rails string#casecmp()","Rails symbol#casecmp()","Rails regexp#casefold?()","Rails shell::commandprocessor#cat()","Rails kernel#catch()","Ruby class#cattr_accessor()","Ruby class#cattr_reader()","Ruby class#cattr_writer()","Rails curses::cbreak()","Rails cmath::cbrt()","Rails math::cbrt()","Rails cmath::cbrt!()","Rails fileutils::cd()","Rails shell#cd()","Rails shell::cd()","Rails rexml::sax2listener#cdata()","Rails rexml::streamlistener#cdata()","Rails rexml::parsers::pullevent#cdata?()","Ruby activesupport::xmlmini_nokogirisax::hashbuilder#cdata_block()","Ruby actionview::helpers::taghelper#cdata_section()","Rails rexml::element#cdatas()","Rails bigdecimal#ceil()","Rails float#ceil()","Rails integer#ceil()","Rails numeric#ceil()","Rails rational#ceil()","Rails rexml::functions::ceiling()","Ruby activesupport::multibyte::chars#center()","Rails string#center()","Rails openssl::ssl::sslsocket#cert()","Rails webrick::cgi::socket#cert()","Rails openssl::ocsp::request#certid()","Rails openssl::pkcs7#certificates()","Rails openssl::pkcs7#certificates=()","Rails net::pop3::certs()","Rails net::pop3::certs()","Rails net::pop3::certs()","Rails net::pop3::certs()","Rails rake::invocationexceptionmixin#chain()","Rails rake::invocationexceptionmixin#chain=()","Rails openssl::netscape::spki#challenge()","Rails webrick::httpauth::basicauth#challenge()","Rails webrick::httpauth::digestauth#challenge()","Rails openssl::netscape::spki#challenge=()","Ruby activerecord::connectionadapters::table#change()","Ruby createcomments#change()","Ruby createposts#change()","Ruby createtags#change()","Ruby date#change()","Ruby datetime#change()","Ruby time#change()","Rails rdoc::markup::attributemanager#change_attribute()","Ruby activerecord::connectionadapters::postgresqladapter#change_column()","Ruby activerecord::connectionadapters::schemastatements#change_column()","Ruby activerecord::connectionadapters::abstractmysqladapter#change_column_default()","Ruby activerecord::connectionadapters::postgresqladapter#change_column_default()","Ruby activerecord::connectionadapters::schemastatements#change_column_default()","Ruby activerecord::connectionadapters::abstractmysqladapter#change_column_null()","Ruby activerecord::connectionadapters::postgresqladapter#change_column_null()","Ruby activerecord::connectionadapters::sqliteadapter#change_column_null()","Ruby activerecord::connectionadapters::abstractmysqladapter#change_column_sql()","Ruby activerecord::connectionadapters::table#change_default()","Rails process::gid::change_privilege()","Rails process::uid::change_privilege()","Ruby activerecord::connectionadapters::schemastatements#change_table()","Rails irb::context#change_workspace()","Ruby activemodel::dirty#changed()","Rails observable#changed()","Ruby activemodel::dirty#changed?()","Rails observable#changed?()","Rails rdoc::markup::attributemanager#changed_attribute_by_name()","Ruby activemodel::dirty#changed_attributes()","Ruby activerecord::autosaveassociation#changed_for_autosave?()","Ruby activemodel::dirty#changes()","Rails rss::rexmllikexmlparser#character()","Rails xmlrpc::xmlparser::streamparsermixin#character()","Ruby activesupport::xmlmini_nokogirisax::hashbuilder#characters()","Rails rexml::sax2listener#characters()","Rails file::chardev?()","Rails file::stat#chardev?()","Rails filetest#chardev?()","Rails pathname#chardev?()","Rails argf#chars()","Rails io#chars()","Rails string#chars()","Rails stringio#chars()","Ruby activerecord::connectionadapters::abstractmysqladapter#charset()","Rails openuri::meta#charset()","Rails iconv::charset_map()","Rails dir::chdir()","Rails fileutils::chdir()","Rails net::ftp#chdir()","Rails shell#chdir()","Rails net::imap#check()","Rails pty::check()","Rails rexml::text::check()","Rails stringscanner#check()","Rails win32::registry::api#check()","Ruby actionview::helpers::formbuilder#check_box()","Ruby actionview::helpers::formhelper#check_box()","Ruby actionview::helpers::instancetag::check_box_checked?()","Ruby actionview::helpers::formtaghelper#check_box_tag()","Rails debugger__#check_break_points()","Ruby rails::generators::namedbase::check_class_collision()","Rails gem::package::tarwriter#check_closed()","Rails rexml::encoding#check_encoding()","Rails rdoc::options#check_files()","Rails rdoc::options#check_generator()","Rails drb::drbserver#check_insecure_method()","Rails pp::ppmethods#check_inspect_key()","Rails openssl::pkey::ec#check_key()","Rails rdoc::task#check_names()","Rails openssl::ocsp::request#check_nonce()","Rails shell::commandprocessor#check_point()","Rails openssl::x509::certificate#check_private_key()","Rails gem::commands::setupcommand#check_ruby_version()","Rails object#check_signedness()","Rails object#check_sizeof()","Rails debugger__::context#check_suspend()","Rails gem::installer#check_that_user_bin_dir_is_in_path()","Rails stringscanner#check_until()","Rails openssl::x509::certificate#check_validity()","Ruby activemodel::eachvalidator#check_validity!()","Ruby activemodel::validations::exclusionvalidator#check_validity!()","Ruby activemodel::validations::formatvalidator#check_validity!()","Ruby activemodel::validations::inclusionvalidator#check_validity!()","Ruby activemodel::validations::lengthvalidator#check_validity!()","Ruby activemodel::validations::numericalityvalidator#check_validity!()","Rails cgi::htmlextension#checkbox()","Rails cgi::htmlextension#checkbox_group()","Ruby activerecord::connectionadapters::connectionpool#checkin()","Ruby activerecord::connectionadapters::connectionpool#checkout()","Rails nqxml::node#childnodes()","Rails rdoc::context#child_name()","Ruby rails::paths::path#children()","Rails pathname#children()","Rails rexml::light::node#children()","Rails rexml::parent#children()","Rails file::chmod()","Rails file#chmod()","Rails fileutils::chmod()","Rails object#chmod()","Rails pathname#chmod()","Rails fileutils::chmod_r()","Rails kernel#chomp()","Rails string#chomp()","Rails string#chomp!()","Rails gem::streamui#choose_from_list()","Rails gem::userinteraction#choose_from_list()","Rails kernel#chop()","Rails string#chop()","Rails string#chop!()","Rails file#chown()","Rails file::chown()","Rails fileutils::chown()","Rails pathname#chown()","Rails fileutils::chown_r()","Rails integer#chr()","Rails string#chr()","Rails dir::chroot()","Rails enumerable#chunk()","Rails webrick::httpresponse#chunked=()","Rails net::httpheader#chunked?()","Rails webrick::httpresponse#chunked?()","Rails openssl::engine#cipher()","Rails openssl::ssl::sslsocket#cipher()","Rails webrick::cgi::socket#cipher()","Rails openssl::pkcs7#cipher=()","Rails openssl::cipher::ciphers()","Rails openssl::ssl::sslcontext#ciphers()","Rails openssl::ssl::sslcontext#ciphers=()","Rails date::civil()","Rails datetime::civil()","Ruby datetime::civil_from_format()","Rails object#class()","Rails win32::registry::predefinedkey#class()","Ruby class#class_attribute()","Rails rdoc::context#class_attributes()","Rails rdoc::generator::darkfish#class_dir()","Rails rdoc::ri::driver#class_document()","Ruby kernel#class_eval()","Rails module#class_eval()","Rails module#class_exec()","Rails rdoc::ri::store#class_file()","Rails rdoc::context#class_method_list()","Rails rdoc::ri::store#class_methods()","Ruby activerecord::reflection::macroreflection#class_name()","Ruby rails::generators::namedbase#class_name()","Rails gem::ext::builder::class_name()","Rails rss::baselistener::class_name()","Ruby activerecord::inheritance::classmethods#class_of_active_record_descendant()","Ruby rails::generators::namedbase#class_path()","Rails rdoc::ri::store#class_path()","Rails module#class_variable_defined?()","Rails module#class_variable_get()","Rails module#class_variable_set()","Rails module#class_variables()","Rails rdoc::context#classes()","Rails rdoc::ri::driver#classes()","Rails rdoc::toplevel::classes()","Rails rdoc::ri::driver#classes_and_includes_for()","Rails rdoc::context#classes_and_modules()","Rails rdoc::context#classes_hash()","Rails rdoc::toplevel::classes_hash()","Ruby activesupport::inflector#classify()","Ruby string#classify()","Rails set#classify()","Ruby activesupport::backtracecleaner#clean()","Rails pathname#cleanpath()","Ruby activesupport::cache::filestore#cleanup()","Ruby activesupport::cache::memorystore#cleanup()","Ruby activesupport::cache::nullstore#cleanup()","Ruby activesupport::cache::store#cleanup()","Rails openssl::engine::cleanup()","Rails openssl::x509::storecontext#cleanup()","Ruby actiondispatch::reloader::cleanup!()","Ruby actiondispatch::flash::flashhash#clear()","Ruby activemodel::errors#clear()","Ruby activerecord::connectionadapters::mysqladapter::statementpool#clear()","Ruby activerecord::connectionadapters::postgresqladapter::statementpool#clear()","Ruby activerecord::connectionadapters::sqliteadapter::statementpool#clear()","Ruby activerecord::connectionadapters::statementpool#clear()","Ruby activerecord::identitymap::clear()","Ruby activesupport::cache::filestore#clear()","Ruby activesupport::cache::memcachestore#clear()","Ruby activesupport::cache::memorystore#clear()","Ruby activesupport::cache::nullstore#clear()","Ruby activesupport::cache::store#clear()","Ruby activesupport::cache::strategy::localcache::localstore#clear()","Ruby activesupport::descendantstracker::clear()","Ruby activesupport::inflector::inflections#clear()","Ruby activesupport::orderedhash#clear()","Rails array#clear()","Rails curses::clear()","Rails curses::window#clear()","Rails dbm#clear()","Rails env::clear()","Rails gc::profiler::clear()","Rails gdbm#clear()","Rails gem::dependencylist#clear()","Rails hash#clear()","Rails queue#clear()","Rails rake::task#clear()","Rails rake::task::clear()","Rails rake::taskmanager#clear()","Rails sdbm#clear()","Rails set#clear()","Rails string#clear()","Rails stringscanner#clear()","Ruby activerecord::connectionadapters::schemacache#clear!()","Ruby activesupport::dependencies::classcache#clear!()","Ruby abstractcontroller::base::clear_action_methods!()","Rails rake::task#clear_actions()","Ruby activerecord::base::clear_active_connections!()","Ruby activerecord::connectionadapters::connectionhandler#clear_active_connections!()","Ruby activerecord::connectionadapters::connectionhandler#clear_all_connections!()","Ruby actionview::resolver#clear_cache()","Ruby activerecord::connectionadapters::abstractadapter#clear_cache!()","Ruby activerecord::connectionadapters::connectionpool#clear_cache!()","Ruby activerecord::connectionadapters::mysqladapter#clear_cache!()","Ruby activerecord::connectionadapters::postgresqladapter#clear_cache!()","Ruby activerecord::connectionadapters::sqliteadapter#clear_cache!()","Rails rdoc::classmodule#clear_comment()","Rails rake::filelist#clear_exclude()","Ruby abstractcontroller::helpers::classmethods#clear_helpers()","Rails gem::clear_paths()","Rails rake::task#clear_prerequisites()","Ruby activerecord::connectionadapters::querycache#clear_query_cache()","Ruby activerecord::connectionadapters::connectionhandler#clear_reloadable_connections!()","Ruby activerecord::connectionadapters::connectionpool#clear_reloadable_connections!()","Ruby actioncontroller::mimeresponds::classmethods#clear_respond_to()","Ruby activerecord::connectionadapters::connectionpool#clear_stale_cached_connections!()","Rails debugger__::context#clear_suspend()","Ruby activerecord::connectionadapters::schemacache#clear_table_cache!()","Ruby activesupport::taggedlogging#clear_tags!()","Rails openssl::ssl::sslsocket#client_ca()","Ruby activerecord::connectionadapters::mysqladapter#client_encoding()","Rails webrick::httpstatus::client_error?()","Ruby activerecord::connectionadapters::postgresqladapter#client_min_messages()","Ruby activerecord::connectionadapters::postgresqladapter#client_min_messages=()","Rails rdoc::task#clobber_task_description()","Ruby activeresource::base#clone()","Rails matrix#clone()","Rails method#clone()","Rails object#clone()","Rails rexml::attribute#clone()","Rails rexml::cdata#clone()","Rails rexml::comment#clone()","Rails rexml::doctype#clone()","Rails rexml::document#clone()","Rails rexml::element#clone()","Rails rexml::instruction#clone()","Rails rexml::text#clone()","Rails rexml::xmldecl#clone()","Rails rake::cloneable#clone()","Rails singleton#clone()","Rails unboundmethod#clone()","Rails vector#clone()","Ruby activesupport::safebuffer#clone_empty()","Ruby actiondispatch::bodyproxy#close()","Ruby actiondispatch::response#close()","Ruby activerecord::connectionadapters::abstractadapter#close()","Ruby activesupport::bufferedlogger#close()","Ruby activesupport::gzip::stream#close()","Rails argf#close()","Rails cgi::session#close()","Rails cgi::session::filestore#close()","Rails cgi::session::memorystore#close()","Rails cgi::session::nullstore#close()","Rails cgi::session::pstore#close()","Rails curses::window#close()","Rails dbm#close()","Rails dl::handle#close()","Rails drb::drbsslsocket#close()","Rails drb::drbtcpsocket#close()","Rails drb::drbunixsocket#close()","Rails dir#close()","Rails gdbm#close()","Rails gem::package::taroutput#close()","Rails gem::package::tarreader#close()","Rails gem::package::tarreader::entry#close()","Rails gem::package::tarwriter#close()","Rails io#close()","Rails iconv#close()","Rails logger#close()","Rails logger::logdevice#close()","Rails net::ftp#close()","Rails net::imap#close()","Rails net::telnet#close()","Rails openssl::buffering#close()","Rails openssl::ssl::sslserver#close()","Rails rake::ftpuploader#close()","Rails resolv::dns#close()","Rails sdbm#close()","Rails sockssocket#close()","Rails stringio#close()","Rails syslog::close()","Rails tempfile#close()","Rails webrick::basiclog#close()","Rails win32::registry#close()","Rails win32::registry::predefinedkey#close()","Rails zlib::gzipfile#close()","Rails zlib::zstream#close()","Rails tempfile#close!()","Rails dl::handle#close_enabled?()","Rails io#close_on_exec=()","Rails io#close_on_exec?()","Rails basicsocket#close_read()","Rails io#close_read()","Rails stringio#close_read()","Rails curses::close_screen()","Rails basicsocket#close_write()","Rails io#close_write()","Rails stringio#close_write()","Ruby actiondispatch::bodyproxy#closed?()","Rails argf#closed?()","Rails curses::closed?()","Rails dbm#closed?()","Rails gdbm#closed?()","Rails gem::package::tarreader::entry#closed?()","Rails gem::package::tarwriter#closed?()","Rails io#closed?()","Rails net::ftp#closed?()","Rails openssl::ssl::socketforwarder#closed?()","Rails sdbm#closed?()","Rails stringio#closed?()","Rails zlib::gzipfile#closed?()","Rails zlib::zstream#closed?()","Rails stringio#closed_read?()","Rails stringio#closed_write?()","Rails curses::clrtoeol()","Rails curses::window#clrtoeol()","Rails net::telnet#cmd()","Rails openssl::engine#cmds()","Rails fileutils::cmp()","Rails openssl::ocsp::certificateid#cmp()","Rails openssl::x509::name#cmp()","Rails openssl::ocsp::certificateid#cmp_issuer()","Rails socket::ancillarydata#cmsg_is?()","Ruby actiondispatch::response#code()","Ruby railsguides::helpers#code()","Ruby railsguides::textileextensions#code()","Rails webrick::httpstatus::status#code()","Rails win32ole::codepage()","Rails win32ole::codepage=()","Rails argf#codepoints()","Rails io#codepoints()","Rails string#codepoints()","Rails stringio#codepoints()","Rails bigdecimal#coerce()","Rails bignum#coerce()","Rails float#coerce()","Rails matrix#coerce()","Rails numeric#coerce()","Rails openssl::bn#coerce()","Rails uri::generic#coerce()","Rails vector#coerce()","Rails openssl::pkey::ec::group#cofactor()","Ruby activerecord::connectionadapters::abstractmysqladapter#collation()","Rails array#collect()","Rails enumerable#collect()","Rails matrix#collect()","Rails rexml::elements#collect()","Rails vector#collect()","Rails array#collect!()","Rails set#collect!()","Rails vector#collect2()","Rails enumerable#collect_concat()","Rails rdoc::parser::ruby#collect_first_comment()","Rails gem::indexer#collect_specs()","Rails rake::application#collect_tasks()","Rails rdoc::tokenstream#collect_tokens()","Ruby actiondispatch::routing::mapper::resources#collection()","Ruby activeresource::base::collection_name()","Ruby activeresource::base#collection_path()","Ruby activeresource::base::collection_path()","Ruby actionview::helpers::formbuilder#collection_select()","Ruby actionview::helpers::formoptionshelper#collection_select()","Ruby activesupport::logsubscriber#color()","Rails curses::color_content()","Rails curses::color_pair()","Rails curses::color_pairs()","Rails curses::window#color_set()","Ruby rails::application::configuration#colorize_logging()","Ruby rails::application::configuration#colorize_logging=()","Rails curses::colors()","Rails curses::cols()","Ruby activerecord::connectionadapters::table#column()","Ruby activerecord::connectionadapters::tabledefinition#column()","Rails matrix#column()","Rails ripper::filter#column()","Ruby activerecord::modelschema::classmethods#column_defaults()","Ruby activerecord::connectionadapters::schemastatements#column_exists?()","Ruby activerecord::connectionadapters::table#column_exists?()","Ruby activerecord::connectionadapters::databaselimits#column_name_length()","Ruby activerecord::modelschema::classmethods#column_names()","Rails matrix::column_vector()","Rails matrix#column_vectors()","Ruby activerecord::connectionadapters::connectionpool#columns()","Ruby activerecord::connectionadapters::postgresqladapter#columns()","Ruby activerecord::connectionadapters::schemacache#columns()","Ruby activerecord::connectionadapters::schemastatements#columns()","Ruby activerecord::modelschema::classmethods#columns()","Rails matrix::columns()","Ruby activerecord::connectionadapters::schemastatements#columns_for_remove()","Ruby activerecord::connectionadapters::connectionpool#columns_hash()","Ruby activerecord::connectionadapters::schemacache#columns_hash()","Ruby activerecord::modelschema::classmethods#columns_hash()","Ruby activerecord::connectionadapters::databaselimits#columns_per_multicolumn_index()","Ruby activerecord::connectionadapters::databaselimits#columns_per_table()","Rails array#combination()","Rails pp::ppmethods#comma_breakable()","Rails drb::extservmanager::command()","Rails drb::extservmanager::command=()","Rails gem::commandmanager#command_names()","Rails rexml::sax2listener#comment()","Rails rexml::streamlistener#comment()","Rails zlib::gzipfile#comment()","Rails rdoc::classmodule#comment=()","Rails rdoc::codeobject#comment=()","Rails rdoc::context::section#comment=()","Rails rake::task#comment=()","Rails zlib::gzipwriter#comment=()","Rails rexml::parsers::pullevent#comment?()","Ruby rails::generators::appbase#comment_if()","Rails rexml::element#comments()","Rails date::commercial()","Rails datetime::commercial()","Rails pstore#commit()","Ruby activerecord::connectionadapters::databasestatements#commit_db_transaction()","Ruby activerecord::connectionadapters::postgresqladapter#commit_db_transaction()","Ruby activerecord::connectionadapters::databasestatements#commit_transaction_records()","Rails gem::command::common_options()","Rails array#compact()","Rails array#compact!()","Rails gem::indexer#compact_specs()","Ruby activesupport::timewithzone#comparable_time()","Rails hash#compare_by_identity()","Rails hash#compare_by_identity?()","Rails fileutils::compare_file()","Rails rexml::functions::compare_language()","Rails fileutils::compare_stream()","Ruby time#compare_with_coercion()","Ruby time#compare_without_coercion()","Rails encoding::compatible?()","Ruby sprockets::staticcompiler#compile()","Rails regexp::compile()","Rails rubyvm::instructionsequence::compile()","Rails rubyvm::instructionsequence::compile_file()","Ruby activesupport::configurable::configuration#compile_methods!()","Ruby activesupport::configurable::configuration::compile_methods!()","Rails rubyvm::instructionsequence::compile_option()","Rails rubyvm::instructionsequence::compile_option=()","Ruby rails::application::configuration#compiled_asset_path()","Rails gem::commands::lockcommand#complain()","Rails optionparser::completion#complete()","Rails optionparser::list#complete()","Rails rdoc::classmodule#complete()","Rails rdoc::ri::driver#complete()","Rails rdoc::toplevel::complete()","Rails win32::sspi::negotiateauth#complete_authentication()","Rails readline::completer_quote_characters()","Rails readline::completer_quote_characters=()","Rails readline::completer_word_break_characters()","Rails readline::completer_word_break_characters=()","Rails readline::completion_append_character()","Rails readline::completion_append_character=()","Rails readline::completion_case_fold()","Rails readline::completion_case_fold=()","Rails readline::completion_proc()","Rails readline::completion_proc=()","Rails matrix#component()","Rails uri::generic::component()","Rails uri::generic#component()","Rails vector#component()","Rails uri::generic#component_ary()","Ruby activesupport::multibyte::chars#compose()","Ruby activesupport::multibyte::unicode#compose_codepoints()","Ruby activerecord::aggregations::classmethods#composed_of()","Ruby activesupport::gzip::compress()","Rails gem::indexer#compress()","Rails gem::indexer#compress_indicies()","Ruby activesupport::cache::entry#compressed?()","Rails openssl::pkey::dh#compute_key()","Ruby rails::rack::logger#compute_tags()","Ruby activerecord::inheritance::classmethods#compute_type()","Ruby actionview::helpers::texthelper#concat()","Ruby activesupport::safebuffer#concat()","Rails array#concat()","Rails rexml::functions::concat()","Rails shell::commandprocessor#concat()","Rails string#concat()","Rails stringscanner#concat()","Ruby abstractcontroller::layouts#conditional_layout?()","Ruby abstractcontroller::layouts::classmethods::layoutconditions#conditional_layout?()","Rails irb::conf()","Ruby activesupport::configurable#config()","Ruby activesupport::configurable::classmethods#config()","Ruby rails::appbuilder#config()","Ruby rails::engine#config()","Ruby rails::plugin#config()","Ruby rails::pluginbuilder#config()","Ruby rails::railtie#config()","Ruby sprockets::helpers::isolatedhelper#config()","Rails drb::config()","Rails openssl::x509::extensionfactory#config=()","Ruby activesupport::configurable::classmethods#config_accessor()","Rails gem::config_file()","Rails gem::configfile#config_file_name()","Ruby rails::appbuilder#configru()","Ruby rails::configuration()","Rails gem::configuration()","Rails gem::configuration=()","Ruby activerecord::base::configurations()","Ruby activesupport::configurable::classmethods#configure()","Ruby rails::railtie::configurable::classmethods#configure()","Rails gem::remotefetcher#configure_connection_for_https()","Rails gem::docmanager::configured_args()","Rails gem::docmanager::configured_args=()","Rails gem::specification#conflicts()","Rails complex#conj()","Rails matrix#conj()","Rails numeric#conj()","Rails complex#conjugate()","Rails matrix#conjugate()","Rails numeric#conjugate()","Rails addrinfo#connect()","Rails drb::drbsslsocket::sslconfig#connect()","Rails net::ftp#connect()","Rails openssl::ssl::sslsocket#connect()","Rails rake::ftpuploader::connect()","Rails socket#connect()","Rails udpsocket#connect()","Rails win32ole::connect()","Rails basicsocket#connect_address()","Rails addrinfo#connect_from()","Rails openssl::ssl::sslsocket#connect_nonblock()","Rails socket#connect_nonblock()","Rails addrinfo#connect_to()","Ruby activerecord::base::connected?()","Ruby activerecord::connectionadapters::connectionhandler#connected?()","Ruby activerecord::connectionadapters::connectionpool#connected?()","Rails gserver#connecting()","Ruby activerecord::base#connection()","Ruby activerecord::base::connection()","Ruby activerecord::connectionadapters::connectionpool#connection()","Ruby activerecord::migration#connection()","Ruby activerecord::sessionstore::sqlbypass::connection()","Ruby activeresource::base#connection()","Ruby activeresource::base::connection()","Rails net::httpheader#connection_close?()","Ruby activerecord::base::connection_config()","Rails gem::remotefetcher#connection_for()","Ruby activerecord::base::connection_handler()","Ruby activerecord::base::connection_id()","Ruby activerecord::base::connection_id=()","Rails net::httpheader#connection_keep_alive?()","Ruby activerecord::base::connection_pool()","Ruby activerecord::sessionstore::sqlbypass::connection_pool()","Rails gserver#connections()","Ruby rails::infocontroller#consider_all_requests_local?()","Ruby rails::railtie::console()","Rails io::console()","Rails module#const_defined?()","Rails json::const_defined_in?()","Rails module#const_get()","Rails win32ole::const_load()","Rails module#const_missing()","Rails module#const_set()","Rails rake::application#const_warning()","Ruby activesupport::inflector#constantize()","Ruby string#constantize()","Rails module#constants()","Rails module::constants()","Ruby actiondispatch::routing::mapper::scoping#constraints()","Rails rss::itunesitemmodel::itunesduration::construct()","Ruby activerecord::findermethods#construct_join_dependency_for_association_find()","Ruby activerecord::findermethods#construct_limited_ids_condition()","Ruby activerecord::findermethods#construct_relation_for_association_calculations()","Ruby activerecord::findermethods#construct_relation_for_association_find()","Rails rexml::iosource#consume()","Rails rexml::source#consume()","Ruby activesupport::multibyte::chars::consumes?()","Rails rexml::functions::contains()","Ruby html::whitelistsanitizer#contains_bad_protocols?()","Rails gem::specification#contains_requirable_file?()","Rails rss::itunesitemmodel::itunesduration#content=()","Rails rss::maker::itunesitemmodel::itunesdurationbase#content=()","Ruby activerecord::modelschema::classmethods#content_columns()","Rails openuri::meta#content_encoding()","Ruby actionview::helpers::capturehelper#content_for()","Ruby actionview::helpers::capturehelper#content_for?()","Ruby actiondispatch::request#content_length()","Rails httpserver::request#content_length()","Rails net::httpheader#content_length()","Rails webrick::httprequest#content_length()","Rails webrick::httpresponse#content_length()","Rails net::httpheader#content_length=()","Rails webrick::httpresponse#content_length=()","Ruby actiondispatch::http::mimenegotiation#content_mime_type()","Rails net::httpheader#content_range()","Rails rss::element::content_setup()","Ruby actionview::helpers::taghelper#content_tag()","Ruby actionview::helpers::recordtaghelper#content_tag_for()","Ruby actioncontroller::metal#content_type()","Ruby actiondispatch::http::mimenegotiation#content_type()","Rails net::httpheader#content_type()","Rails openuri::meta#content_type()","Rails rss::atom::contentmodel::classmethods#content_type()","Rails webrick::httprequest#content_type()","Rails webrick::httpresponse#content_type()","Ruby actioncontroller::metal#content_type=()","Rails net::httpheader#content_type=()","Rails webrick::httpresponse#content_type=()","Rails debugger__#context()","Rails debugger__::context()","Rails rexml::doctype#context()","Rails rexml::parseexception#context()","Rails rexml::functions::context=()","Rails webrick::httprequest#continue()","Rails net::smtp::response#continue?()","Rails net::http#continue_timeout=()","Rails net::http#continue_timeout=()","Ruby actiondispatch::routing::mapper::scoping#controller()","Ruby rails::consolemethods#controller()","Ruby sprockets::helpers::isolatedhelper#controller()","Ruby rails::generators::resourcehelpers#controller_class_name()","Ruby rails::generators::resourcehelpers#controller_class_path()","Ruby rails::generators::resourcehelpers#controller_file_name()","Ruby rails::generators::resourcehelpers#controller_file_path()","Ruby rails::generators::resourcehelpers#controller_i18n_scope()","Ruby actioncontroller::metal#controller_name()","Ruby actioncontroller::metal::controller_name()","Ruby abstractcontroller::base#controller_path()","Ruby abstractcontroller::base::controller_path()","Ruby actionmailer::base::controller_path()","Rails iconv::conv()","Rails iconv#conv()","Rails csv#convert()","Rails encoding::converter#convert()","Rails optionparser::completion#convert()","Rails rdoc::markup#convert()","Rails rdoc::markup::formatter#convert()","Rails rss::converter#convert()","Rails rss::element#convert()","Rails webrick::httpversion::convert()","Rails rdoc::markup::attributemanager#convert_attrs()","Ruby rails::generators::appbase#convert_database_option_for_jruby()","Rails rdoc::markup::formatter#convert_flow()","Rails rdoc::markup::attributemanager#convert_html()","Ruby activesupport::hashwithindifferentaccess#convert_key()","Ruby activesupport::hashwithindifferentaccess#convert_key()","Rails rdoc::markup::formatter#convert_special()","Rails rdoc::markup::tobs#convert_special()","Rails rdoc::markup::attributemanager#convert_specials()","Rails rdoc::markup::formatter#convert_string()","Rails rdoc::markup::tobs#convert_string()","Rails rdoc::markup::tohtml#convert_string()","Ruby actionview::helpers::formhelper#convert_to_model()","Ruby activesupport::hashwithindifferentaccess#convert_value()","Ruby activesupport::hashwithindifferentaccess#convert_value()","Rails rss::element#converter=()","Rails csv#converters()","Rails object#convertible_int()","Rails encoding::converter#convpath()","Rails io#cooked()","Rails io#cooked!()","Ruby actiondispatch::request#cookie_jar()","Ruby actiondispatch::response#cookies()","Ruby activerecord::migration#copy()","Rails fileutils::copy()","Rails net::http#copy()","Rails net::http#copy()","Rails net::imap#copy()","Rails openssl::bn#copy()","Rails sys#copy()","Rails fileutils::copy_entry()","Rails fileutils::copy_file()","Rails sys#copy_files()","Ruby js::generators::assetsgenerator#copy_javascript()","Rails openssl::ocsp::basicresponse#copy_nonce()","Rails fileutils::copy_stream()","Rails io::copy_stream()","Rails rdoc::markup::attributemanager#copy_string()","Ruby css::generators::assetsgenerator#copy_stylesheet()","Ruby css::generators::scaffoldgenerator#copy_stylesheet()","Ruby erb::generators::controllergenerator#copy_view_files()","Ruby erb::generators::scaffoldgenerator#copy_view_files()","Rails process::status#coredump?()","Rails gem::version::correct?()","Rails gem::remotefetcher#correct_for_windows_path()","Rails bigmath#cos()","Rails cmath::cos()","Rails math::cos()","Rails cmath::cos!()","Rails cmath::cosh()","Rails math::cosh()","Rails cmath::cosh!()","Ruby activemodel::errors#count()","Ruby activerecord::calculations#count()","Rails array#count()","Rails enumerable#count()","Rails gc::count()","Rails rexml::functions::count()","Rails string#count()","Ruby activerecord::querying#count_by_sql()","Rails objectspace::count_objects()","Ruby activemodel::observing::classmethods#count_observers()","Rails observable#count_observers()","Rails vector#covector()","Rails range#cover?()","Rails rdoc::stats#coverage_level=()","Rails fileutils::cp()","Rails object#cp()","Rails fileutils::cp_r()","Rails net::smtp::response#cram_md5_challenge()","Rails zlib::gzipfile#crc()","Rails zlib::crc32()","Rails zlib::crc32_combine()","Rails zlib::crc_table()","Ruby activerecord::connectionadapters::mysql2adapter#create()","Ruby activerecord::persistence::classmethods#create()","Ruby activerecord::relation#create()","Ruby activeresource::base#create()","Ruby activeresource::base::create()","Ruby activesupport::cache::entry::create()","Ruby activesupport::timezone::create()","Ruby commentscontroller#create()","Ruby postscontroller#create()","Rails dl::cstructbuilder::create()","Rails gem::requirement::create()","Rails gem::version::create()","Rails irb::slex#create()","Rails net::imap#create()","Rails openssl::ocsp::response::create()","Rails openssl::pkcs12::create()","Rails resolv::dns::name::create()","Rails resolv::ipv4::create()","Rails resolv::ipv6::create()","Rails win32::registry::create()","Rails win32::registry#create()","Ruby activerecord::relation#create!()","Ruby activerecord::validations::classmethods#create!()","Ruby rails::generators::appgenerator#create_active_record_files()","Ruby rails::generators::appgenerator#create_app_files()","Ruby rails::generators::pluginnewgenerator#create_app_files()","Ruby rails::generators::appgenerator#create_boot_file()","Rails dl::importer#create_carried_function()","Rails dl::carriedfunction#create_carrier()","Ruby rails::generators::appgenerator#create_config_files()","Ruby rails::generators::pluginnewgenerator#create_config_files()","Ruby rails::generators::controllergenerator#create_controller_files()","Ruby rails::generators::scaffoldcontrollergenerator#create_controller_files()","Ruby activerecord::connectionadapters::abstractmysqladapter#create_database()","Ruby activerecord::connectionadapters::postgresqladapter#create_database()","Ruby rails::generators::appgenerator#create_db_files()","Ruby rails::generators::appgenerator#create_doc_files()","Ruby rails::generators::pluginnewgenerator#create_dummy_app()","Rails openssl::x509::extensionfactory#create_ext()","Rails openssl::x509::extensionfactory#create_ext_from_array()","Rails openssl::x509::extensionfactory#create_ext_from_hash()","Rails openssl::x509::extensionfactory#create_ext_from_string()","Rails openssl::x509::extensionfactory#create_extension()","Ruby activerecord::fixtures::create_fixtures()","Rails rexml::sourcefactory::create_from()","Ruby rails::generators::generatorgenerator#create_generator_files()","Rails win32ole::create_guid()","Rails object#create_header()","Ruby rails::generators::helpergenerator#create_helper_files()","Ruby rails::generators::pluginnewgenerator#create_images_directory()","Ruby rails::generators::pluginnewgenerator#create_javascript_files()","Ruby rails::generators::appgenerator#create_lib_files()","Ruby rails::generators::pluginnewgenerator#create_lib_files()","Rails webrick::utils::create_listeners()","Ruby rails::generators::appgenerator#create_log_files()","Ruby rails::generators::mailergenerator#create_mailer_file()","Rails object#create_makefile()","Ruby activerecord::generators::migrationgenerator#create_migration_file()","Ruby activerecord::generators::modelgenerator#create_migration_file()","Ruby activerecord::generators::sessionmigrationgenerator#create_migration_file()","Ruby activerecord::generators::modelgenerator#create_model_file()","Ruby activerecord::generators::modelgenerator#create_module_file()","Ruby activerecord::generators::observergenerator#create_observer_file()","Ruby rails::generators::appgenerator#create_public_files()","Ruby rails::generators::pluginnewgenerator#create_public_stylesheets_files()","Ruby activerecord::reflection::classmethods#create_reflection()","Ruby rails::generators::appbase#create_root()","Ruby rails::generators::appgenerator#create_root_files()","Ruby rails::generators::pluginnewgenerator#create_root_files()","Ruby erb::generators::scaffoldgenerator#create_root_folder()","Rails rake::task::create_rule()","Rails rake::taskmanager#create_rule()","Ruby activerecord::connectionadapters::abstractadapter#create_savepoint()","Ruby activerecord::connectionadapters::abstractmysqladapter#create_savepoint()","Ruby activerecord::connectionadapters::postgresqladapter#create_savepoint()","Ruby activerecord::connectionadapters::sqliteadapter#create_savepoint()","Ruby rails::generators::appgenerator#create_script_files()","Ruby rails::generators::pluginnewgenerator#create_script_files()","Rails webrick::utils::create_self_signed_cert()","Rails net::pop3::create_ssl_params()","Rails net::pop3::create_ssl_params()","Rails net::pop3::create_ssl_params()","Rails net::pop3::create_ssl_params()","Rails irb::slex::node#create_subnode()","Ruby activerecord::connectionadapters::schemastatements#create_table()","Ruby rails::generators::taskgenerator#create_task_files()","Rails dl::importer#create_temp_function()","Ruby rails::generators::pluginnewgenerator#create_test_dummy_files()","Ruby rails::generators::appgenerator#create_test_files()","Ruby rails::generators::pluginnewgenerator#create_test_files()","Ruby rails::generators::appgenerator#create_tmp_files()","Rails dl::importer#create_value()","Ruby rails::generators::appgenerator#create_vendor_files()","Ruby activerecord::querymethods#create_with()","Rails win32::registry#created?()","Ruby activerecord::dynamicfindermatch#creator?()","Rails gem::configfile#credentials_path()","Rails openssl::x509::extension#critical=()","Rails openssl::x509::extension#critical?()","Rails openssl::x509::extensionfactory#crl=()","Rails openssl::pkcs7#crls()","Rails openssl::pkcs7#crls=()","Rails curses::crmode()","Rails rdoc::markup::tohtmlcrossref#cross_reference()","Rails string#crypt()","Ruby actionview::helpers::csrfhelper#csrf_meta_tag()","Ruby actionview::helpers::csrfhelper#csrf_meta_tags()","Rails date#ctime()","Rails file::ctime()","Rails file#ctime()","Rails file::stat#ctime()","Rails pathname#ctime()","Rails time#ctime()","Rails iconv::ctlmethods()","Rails openssl::engine#ctrl_cmd()","Rails dl::cfunc#ctype()","Rails dl::cfunc#ctype=()","Ruby date::current()","Ruby datetime::current()","Ruby time::current()","Rails fiber::current()","Rails rdoc::rdoc::current()","Rails thread::current()","Rails rdoc::rdoc::current=()","Ruby actionview::helpers::texthelper#current_cycle()","Ruby activerecord::connectionadapters::abstractmysqladapter#current_database()","Ruby activerecord::connectionadapters::postgresqladapter#current_database()","Rails prettyprint#current_group()","Ruby activesupport::xmlmini_libxmlsax::hashbuilder#current_hash()","Ruby activesupport::xmlmini_nokogirisax::hashbuilder#current_hash()","Rails rexml::iosource#current_line()","Rails rexml::source#current_line()","Ruby actionview::helpers::urlhelper#current_page?()","Ruby activerecord::connectionadapters::abstractadapter#current_savepoint_name()","Ruby activerecord::connectionadapters::postgresqladapter#current_schema()","Rails rake::taskmanager#current_scope()","Rails rdoc::context#current_section()","Rails drb::current_server()","Rails proc#curry()","Rails curses::curs_set()","Rails openssl::pkey::ec::group#curve_name()","Rails curses::window#curx()","Rails curses::window#cury()","Ruby actionmailer::collector#custom()","Ruby actionview::helpers::assettaghelper::assetincludetag#custom_dir()","Ruby actionview::helpers::assettaghelper::javascriptincludetag#custom_dir()","Ruby actionview::helpers::assettaghelper::stylesheetincludetag#custom_dir()","Ruby activeresource::custommethods::classmethods#custom_method_collection_url()","Rails rdoc::generator::markup#cvs_url()","Rails rdoc::toplevel#cvs_url()","Rails date#cwday()","Rails date#cweek()","Rails date#cwyear()","Ruby actionview::helpers::texthelper#cycle()","Rails array#cycle()","Rails enumerable#cycle()","Rails matrix::eigenvaluedecomposition#d()","Ruby process::daemon()","Rails process::daemon()","Ruby activerecord::attributemethods::classmethods#dangerous_attribute_method?()","Ruby activerecord::attributemethods::primarykey::classmethods#dangerous_attribute_method?()","Ruby activesupport::inflector#dasherize()","Ruby string#dasherize()","Ruby activerecord::sessionstore::session#data()","Ruby activerecord::sessionstore::sqlbypass#data()","Rails net::smtp#data()","Rails net::smtp#data()","Rails openssl::config#data()","Rails resolv::dns::resource::txt#data()","Rails socket::ancillarydata#data()","Rails socket::option#data()","Rails openssl::pkcs7#data=()","Ruby activerecord::sessionstore::sqlbypass::data_column()","Ruby activerecord::sessionstore::session::data_column_name()","Ruby activerecord::sessionstore::sqlbypass::data_column_name()","Ruby activerecord::sessionstore::session::data_column_size_limit()","Rails zlib::zstream#data_type()","Ruby rails::application::configuration#database_configuration()","Ruby rails::generators::appbase#database_gemfile_entry()","Ruby rails::appbuilder#database_yml()","Rails gem::datadir()","Rails gem::specification#date()","Rails rake::ftpfile::date()","Rails gem::specification#date=()","Rails rss::maker::channelbase#date=()","Rails rss::maker::itemsbase::itembase#date=()","Rails rss::maker::itemsbase::itembase::sourcebase#date=()","Rails xmlrpc::convert::datetime()","Ruby actionview::helpers::datehelper#date_select()","Ruby actionview::helpers::formbuilder#date_select()","Rails logger#datetime_format()","Rails logger#datetime_format=()","Ruby actionview::helpers::datehelper#datetime_select()","Ruby actionview::helpers::formbuilder#datetime_select()","Ruby numeric#day()","Rails date#day()","Rails time#day()","Rails xmlrpc::datetime#day=()","Rails date#day_fraction()","Ruby numeric#days()","Ruby time::days_in_month()","Ruby date#days_to_week_start()","Ruby time#days_to_week_start()","Ruby rails::appbuilder#db()","Rails array#dclone()","Rails fixnum#dclone()","Rails float#dclone()","Rails object#dclone()","Rails symbol#dclone()","Rails rexml::parsers::sax2parser#deafen()","Ruby actionview::helpers::debughelper#debug()","Rails gem::streamui#debug()","Rails logger#debug()","Rails net::imap::debug()","Rails openssl::debug()","Rails webrick::basiclog#debug()","Rails net::imap::debug=()","Rails openssl::debug=()","Rails shell::debug=()","Rails shell#debug=()","Rails irb::context#debug?()","Rails logger#debug?()","Rails rubylex::debug?()","Rails webrick::basiclog#debug?()","Rails debugger__#debug_command()","Rails debugger__#debug_eval()","Rails debugger__#debug_funcname()","Rails irb::context#debug_level=()","Rails debugger__#debug_method_info()","Rails rdoc::generator::darkfish#debug_msg()","Rails net::smtp#debug_output=()","Rails net::smtp#debug_output=()","Rails debugger__#debug_print_help()","Ruby activemodel::massassignmentsecurity::sanitizer#debug_protected_attribute_removal()","Rails debugger__#debug_silent_eval()","Rails debugger__::debug_thread_info()","Rails debugger__#debug_variable_info()","Ruby kernel#debugger()","Ruby activeresource::formats::jsonformat#decode()","Ruby activeresource::formats::xmlformat#decode()","Ruby activesupport::json::decode()","Rails openssl::asn1::decode()","Rails rexml::encoding#decode()","Rails uri::escape#decode()","Rails xmlrpc::base64::decode()","Ruby activesupport::base64::decode64()","Ruby base64::decode64()","Rails base64#decode64()","Rails openssl::asn1::decode_all()","Ruby actioncontroller::httpauthentication::basic#decode_credentials()","Ruby actioncontroller::httpauthentication::digest#decode_credentials()","Ruby actioncontroller::httpauthentication::digest#decode_credentials_header()","Rails net::imap::decode_utf7()","Rails uri::decode_www_form()","Rails uri::decode_www_form_component()","Rails xmlrpc::base64#decoded()","Ruby activesupport::multibyte::chars#decompose()","Ruby activesupport::multibyte::unicode#decompose_codepoints()","Ruby activesupport::gzip::decompress()","Ruby activesupport::inflector#deconstantize()","Ruby string#deconstantize()","Ruby activerecord::persistence#decrement()","Ruby activesupport::cache::filestore#decrement()","Ruby activesupport::cache::memorystore#decrement()","Ruby activesupport::cache::nullstore#decrement()","Ruby activesupport::cache::store#decrement()","Ruby activerecord::persistence#decrement!()","Ruby activerecord::countercache#decrement_counter()","Ruby activerecord::connectionadapters::abstractadapter#decrement_open_transactions()","Ruby activesupport::messageencryptor#decrypt()","Rails openssl::cipher#decrypt()","Rails openssl::pkcs7#decrypt()","Ruby activesupport::messageencryptor#decrypt_and_verify()","Rails rexml::parent#deep_clone()","Ruby hash#deep_dup()","Ruby hash#deep_merge()","Ruby hash#deep_merge!()","Ruby actiondispatch::request#deep_munge()","Rails rss::maker::base::def_array_element()","Rails rss::maker::atompersons#def_atom_persons()","Rails rss::maker::atomtextconstruct::def_atom_text_construct()","Rails shell::commandprocessor::def_builtin_commands()","Rails erb#def_class()","Rails rss::itunesmodelutils#def_class_accessor()","Rails rss::maker::itunesbasemodel#def_class_accessor()","Rails rss::maker::base::def_classed_element()","Rails rss::maker::base::def_classed_element_without_accessor()","Rails rss::maker::base::def_classed_elements()","Rails rss::converter#def_convert()","Rails rss::element::def_corresponded_attr_reader()","Rails rss::element::def_corresponded_attr_writer()","Rails rss::maker::itunesbasemodel#def_csv_accessor()","Rails rss::maker::base::def_csv_element()","Rails forwardable#def_delegator()","Rails singleforwardable#def_delegator()","Rails forwardable#def_delegators()","Rails singleforwardable#def_delegators()","Rails exception2messagemapper#def_e2message()","Rails exception2messagemapper::def_e2message()","Rails exception2messagemapper#def_e2message()","Rails exception2messagemapper::def_e2message()","Rails rss::itunesmodelutils#def_element_class_accessor()","Rails rss::itunesmodelutils#def_elements_class_accessor()","Rails rss::maker::itunesbasemodel#def_elements_class_accessor()","Rails rss::converter#def_else_enc()","Rails erb::defmethod::def_erb_method()","Rails exception2messagemapper#def_exception()","Rails exception2messagemapper::def_exception()","Rails exception2messagemapper::def_exception()","Rails exception2messagemapper#def_exception()","Rails irb::contextextender::def_extend_command()","Rails irb::contextextender::def_extend_command()","Rails irb::extendcommandbundle::def_extend_command()","Rails irb::extendcommandbundle::def_extend_command()","Rails optionparser#def_head_option()","Rails rss::converter#def_iconv_convert()","Rails irb::inspectors::def_inspector()","Rails forwardable#def_instance_delegator()","Rails forwardable#def_instance_delegators()","Rails erb#def_method()","Rails erb#def_module()","Rails irb::notifier::def_notifier()","Rails irb::notifier::compositenotifier#def_notifier()","Rails optionparser#def_option()","Rails rss::maker::base::def_other_element()","Rails rss::maker::base::def_other_element_without_accessor()","Rails irb::methodextender#def_post_proc()","Rails irb::methodextender#def_pre_proc()","Rails curses::def_prog_mode()","Rails irb::slex#def_rule()","Rails irb::slex#def_rules()","Rails rss::converter#def_same_enc()","Rails singleforwardable#def_single_delegator()","Rails singleforwardable#def_single_delegators()","Rails shell::def_system_command()","Rails shell::commandprocessor::def_system_command()","Rails optionparser#def_tail_option()","Rails rss::converter#def_to_euc_jp_from_iso_2022_jp()","Rails rss::converter#def_to_euc_jp_from_shift_jis()","Rails rss::converter#def_to_euc_jp_from_utf_8()","Rails rss::converter#def_to_iso_2022_jp_from_euc_jp()","Rails rss::converter#def_to_iso_8859_1_from_utf_8()","Rails rss::converter#def_to_shift_jis_from_euc_jp()","Rails rss::converter#def_to_shift_jis_from_utf_8()","Rails rss::converter#def_to_utf_8_from_euc_jp()","Rails rss::converter#def_to_utf_8_from_iso_8859_1()","Rails rss::converter#def_to_utf_8_from_shift_jis()","Rails rubytoken::def_token()","Rails rss::converter#def_uconv_convert_if_can()","Rails rss::maker::itunesbasemodel#def_yes_clean_other_accessor()","Rails rss::maker::itunesbasemodel#def_yes_other_accessor()","Ruby actionmailer::base::default()","Ruby activesupport::hashwithindifferentaccess#default()","Ruby activesupport::hashwithindifferentaccess#default()","Ruby rails::generators::generatedattribute#default()","Ruby railsenvironment::default()","Rails gem::requirement::default()","Rails hash#default()","Rails rexml::xmldecl::default()","Rails win32ole_param#default()","Ruby railsenvironment::default=()","Rails hash#default=()","Rails drb::drbserver::default_acl()","Ruby actioncontroller::responder#default_action()","Ruby rails::generators::base::default_aliases_for_option()","Rails drb::drbserver::default_argc_limit()","Rails gem::default_bindir()","Ruby actioncontroller::compatibility::default_charset=()","Rails gem::default_dir()","Rails win32ole_type#default_event_sources()","Rails gem::default_exec_format()","Rails gem::specification#default_executable()","Rails encoding::default_external()","Rails encoding::default_external=()","Ruby rails::generators::base::default_for_option()","Ruby rails::generators::base::default_generator_root()","Rails drb::drbserver::default_id_conv()","Ruby date#default_inspect()","Ruby datetime#default_inspect()","Rails encoding::default_internal()","Rails encoding::default_internal=()","Rails drb::drbserver::default_load_limit()","Ruby rails::application#default_middleware_stack()","Ruby rails::engine#default_middleware_stack()","Rails win32ole_type#default_ole_types()","Ruby rails::server#default_options()","Rails rdoc::ri::driver::default_options()","Rails rss::parser::default_parser()","Rails rss::parser::default_parser=()","Rails gem::default_path()","Rails net::pop3::default_pop3_port()","Rails net::pop3::default_pop3_port()","Rails net::pop3::default_pop3_port()","Rails net::pop3::default_pop3_port()","Rails net::pop3::default_pop3s_port()","Rails net::pop3::default_pop3s_port()","Rails net::pop3::default_pop3s_port()","Rails net::pop3::default_pop3s_port()","Rails net::http::default_port()","Rails net::http::default_port()","Rails net::pop3::default_port()","Rails net::pop3::default_port()","Rails net::pop3::default_port()","Rails net::pop3::default_port()","Rails net::smtp::default_port()","Rails net::smtp::default_port()","Rails uri::generic#default_port()","Rails uri::generic::default_port()","Ruby activerecord::connectionadapters::sqliteadapter#default_primary_key_type()","Rails hash#default_proc()","Rails hash#default_proc=()","Rails shell::default_record_separator()","Rails shell::default_record_separator=()","Ruby actioncontroller::implicitrender#default_render()","Ruby actioncontroller::responder#default_render()","Rails gem::default_rubygems_dirs()","Rails drb::drbserver::default_safe_level()","Ruby activerecord::scoping::default::classmethods#default_scope()","Ruby activerecord::connectionadapters::databasestatements#default_sequence_name()","Ruby rails::generators::base::default_source_root()","Rails gem::default_sources()","Rails object#default_src_encoding()","Rails net::smtp::default_ssl_context()","Rails net::smtp::default_ssl_context()","Rails net::smtp::default_ssl_port()","Rails net::smtp::default_ssl_port()","Rails net::smtp::default_submission_port()","Rails net::smtp::default_submission_port()","Rails shell::default_system_path()","Rails shell::default_system_path=()","Rails gem::default_system_source_cache_dir()","Ruby activerecord::base::default_timezone()","Rails rdoc::options#default_title=()","Rails net::smtp::default_tls_port()","Rails net::smtp::default_tls_port()","Ruby actiondispatch::routing::mapper::base#default_url_options()","Ruby actiondispatch::routing::mapper::base#default_url_options=()","Rails gem::default_user_source_cache_dir()","Rails gem::specification#default_value()","Ruby rails::generators::base::default_value_for_option()","Ruby actiondispatch::routing::mapper::scoping#defaults()","Rails rdoc::task#defaults()","Rails gem::command#defaults_str()","Rails gem::commands::sourcescommand#defaults_str()","Ruby activerecord::schema::define()","Rails gem::packagetask#define()","Rails optionparser#define()","Rails rdoc::task#define()","Rails rake::packagetask#define()","Rails mutex_m::define_aliases()","Rails sync_m::define_aliases()","Rails sync_m::define_aliases()","Ruby activemodel::attributemethods::classmethods#define_attribute_method()","Ruby activemodel::attributemethods::classmethods#define_attribute_methods()","Ruby activerecord::attributemethods::classmethods#define_attribute_methods()","Ruby activerecord::observer#define_callbacks()","Ruby activesupport::callbacks::classmethods#define_callbacks()","Rails objectspace::define_finalizer()","Rails optionparser#define_head()","Ruby activerecord::attributemethods::deprecatedunderscoreread::classmethods#define_method__attribute()","Ruby activerecord::attributemethods::primarykey::classmethods#define_method_attribute()","Ruby activerecord::attributemethods::read::classmethods#define_method_attribute()","Ruby activerecord::attributemethods::timezoneconversion::classmethods#define_method_attribute=()","Ruby activerecord::attributemethods::write::classmethods#define_method_attribute=()","Ruby activemodel::callbacks#define_model_callbacks()","Rails rake::altsystem::define_module_function()","Rails object#define_singleton_method()","Rails optionparser#define_tail()","Rails rake::task::define_task()","Rails rake::taskmanager#define_task()","Ruby rails::generators::appgenerator#defined_app_const_base()","Ruby rails::generators::appgenerator#defined_app_const_base?()","Ruby rails::generators::appgenerator#defined_app_name()","Rails rdoc::context#defined_in?()","Rails rdoc::attr#definition()","Rails rdoc::normalclass#definition()","Rails rdoc::normalmodule#definition()","Rails rdoc::singleclass#definition()","Rails gem::deflate()","Rails zlib::deflate()","Rails zlib::deflate#deflate()","Rails zlib::deflate::deflate()","Rails openssl::pkey::ec::group#degree()","Rails curses::delch()","Rails curses::window#delch()","Ruby module#delegate()","Rails forwardable#delegate()","Rails singleforwardable#delegate()","Ruby activerecord::delegation::delegate_to_scoped_klass()","Rails delegator::delegating_block()","Ruby actiondispatch::flash::flashhash#delete()","Ruby actiondispatch::middlewarestack#delete()","Ruby actiondispatch::routing::mapper::httphelpers#delete()","Ruby activemodel::errors#delete()","Ruby activerecord::connectionadapters::databasestatements#delete()","Ruby activerecord::connectionadapters::mysqladapter::statementpool#delete()","Ruby activerecord::connectionadapters::postgresqladapter::statementpool#delete()","Ruby activerecord::connectionadapters::statementpool#delete()","Ruby activerecord::persistence#delete()","Ruby activerecord::relation#delete()","Ruby activeresource::base::delete()","Ruby activeresource::connection#delete()","Ruby activeresource::custommethods::delete()","Ruby activeresource::custommethods#delete()","Ruby activesupport::cache::store#delete()","Ruby activesupport::hashwithindifferentaccess#delete()","Ruby activesupport::hashwithindifferentaccess#delete()","Ruby activesupport::orderedhash#delete()","Rails array#delete()","Rails cgi::session#delete()","Rails cgi::session::filestore#delete()","Rails cgi::session::memorystore#delete()","Rails cgi::session::nullstore#delete()","Rails cgi::session::pstore#delete()","Rails csv::row#delete()","Rails csv::table#delete()","Rails dbm#delete()","Rails dir::delete()","Rails env::delete()","Rails file::delete()","Rails gdbm#delete()","Rails hash#delete()","Rails irb::jobmanager#delete()","Rails net::ftp#delete()","Rails net::http#delete()","Rails net::http#delete()","Rails net::httpheader#delete()","Rails net::imap#delete()","Rails net::popmail#delete()","Rails pstore#delete()","Rails pathname#delete()","Rails prettyprint::groupqueue#delete()","Rails rexml::attributes#delete()","Rails rexml::elements#delete()","Rails rexml::parent#delete()","Rails rinda::tuplebag#delete()","Rails rinda::tuplebag::tuplebin#delete()","Rails sdbm#delete()","Rails set#delete()","Rails string#delete()","Rails sys#delete()","Rails tempfile#delete()","Rails webrick::httpserver::mounttable#delete()","Rails win32::registry#delete()","Rails yaml::dbm#delete()","Rails net::popmail#delete!()","Rails string#delete!()","Ruby actiondispatch::request#delete?()","Rails set#delete?()","Ruby activerecord::relation#delete_all()","Rails net::pop3#delete_all()","Rails net::pop3#delete_all()","Rails net::pop3::delete_all()","Rails net::pop3::delete_all()","Rails net::pop3#delete_all()","Rails net::pop3::delete_all()","Rails net::pop3::delete_all()","Rails net::pop3#delete_all()","Rails rexml::attributes#delete_all()","Rails rexml::elements#delete_all()","Rails sys#delete_all()","Rails array#delete_at()","Rails rexml::parent#delete_at()","Rails rexml::element#delete_attribute()","Rails irb::delete_caller()","Ruby actiondispatch::response#delete_cookie()","Rails rexml::element#delete_element()","Ruby activesupport::cache::filestore#delete_entry()","Ruby activesupport::cache::strategy::localcache::localstore#delete_entry()","Rails openstruct#delete_field()","Ruby activesupport::orderedhash#delete_if()","Rails array#delete_if()","Rails csv::row#delete_if()","Rails csv::table#delete_if()","Rails dbm#delete_if()","Rails env::delete_if()","Rails gdbm#delete_if()","Rails hash#delete_if()","Rails rexml::parent#delete_if()","Rails sdbm#delete_if()","Rails set#delete_if()","Rails yaml::dbm#delete_if()","Rails win32::registry#delete_key()","Rails rdoc::rubygemshook#delete_legacy_args()","Ruby activesupport::cache::filestore#delete_matched()","Ruby activesupport::cache::memorystore#delete_matched()","Ruby activesupport::cache::nullstore#delete_matched()","Ruby activesupport::cache::store#delete_matched()","Rails rexml::element#delete_namespace()","Rails observable#delete_observer()","Rails observable#delete_observers()","Rails webrick::httpauth::htdigest#delete_passwd()","Rails webrick::httpauth::htpasswd#delete_passwd()","Ruby activeresource::httpmock::delete_responses_to_replace()","Ruby activerecord::connectionadapters::databasestatements#delete_sql()","Rails rinda::tuplebag#delete_unless_alive()","Rails win32::registry#delete_value()","Rails net::popmail#deleted?()","Rails curses::deleteln()","Rails curses::window#deleteln()","Ruby actionmailer::logsubscriber#deliver()","Ruby activesupport::inflector#demodulize()","Ruby string#demodulize()","Rails complex#denominator()","Rails float#denominator()","Rails integer#denominator()","Rails numeric#denominator()","Rails rational#denominator()","Ruby activemodel::massassignmentsecurity::blacklist#deny?()","Ruby activemodel::massassignmentsecurity::permissionset#deny?()","Ruby activemodel::massassignmentsecurity::whitelist#deny?()","Rails object#depend_rules()","Rails gem::specification#dependencies()","Rails gem::uninstaller#dependencies_ok?()","Rails gem::dependencylist#dependency_order()","Rails gem::specification#dependent_gems()","Rails gem::specification#dependent_specs()","Ruby module#deprecate()","Rails gem::deprecate::deprecate()","Rails rake::application#deprecate()","Ruby activesupport::deprecation::deprecate_methods()","Ruby activesupport::deprecation::deprecated_method_warning()","Rails prettyprint::groupqueue#deq()","Rails queue#deq()","Rails sizedqueue#deq()","Rails webrick::httputils::dequote()","Ruby rails::generators::base::desc()","Rails pathname#descend()","Ruby activesupport::descendantstracker::descendants()","Ruby activesupport::descendantstracker#descendants()","Ruby activerecord::inheritance::classmethods#descends_from_active_record?()","Rails gem::command#description()","Rails rdoc::generator::markup#description()","Rails gem::specification#description=()","Rails encoding::converter#destination_encoding()","Rails encoding::invalidbytesequenceerror#destination_encoding()","Rails encoding::undefinedconversionerror#destination_encoding()","Rails encoding::invalidbytesequenceerror#destination_encoding_name()","Rails encoding::undefinedconversionerror#destination_encoding_name()","Ruby actiondispatch::session::destroyablesession#destroy()","Ruby activerecord::persistence#destroy()","Ruby activerecord::relation#destroy()","Ruby activerecord::sessionstore::sqlbypass#destroy()","Ruby activeresource::base#destroy()","Ruby commentscontroller#destroy()","Ruby postscontroller#destroy()","Ruby rails::generators::activemodel#destroy()","Ruby activerecord::relation#destroy_all()","Ruby actiondispatch::session::cachestore#destroy_session()","Ruby activerecord::persistence#destroyed?()","Rails matrix#det()","Rails matrix::lupdecomposition#det()","Rails matrix#det_e()","Rails process::detach()","Rails openssl::pkcs7#detached()","Rails openssl::pkcs7#detached=()","Rails openssl::pkcs7#detached?()","Ruby actionview::lookupcontext::viewpaths#detail_args_for()","Ruby abstractcontroller::viewpaths#details_for_lookup()","Rails enumerable#detect()","Rails psych::detect_implicit()","Rails matrix#determinant()","Rails matrix::lupdecomposition#determinant()","Rails matrix#determinant_e()","Ruby rails::commands::install#determine_install_method()","Rails file::stat#dev()","Rails file::stat#dev_major()","Rails file::stat#dev_minor()","Rails gem::specification#development_dependencies()","Rails jacobian#dfdxi()","Rails openssl::pkey::ec#dh_compute_key()","Rails matrix::diagonal()","Rails matrix#diagonal?()","Ruby hash#diff()","Rails set#difference()","Rails digest::class::digest()","Rails digest::instance#digest()","Rails openssl::digest::digest()","Rails openssl::engine#digest()","Rails openssl::hmac#digest()","Rails openssl::hmac::digest()","Rails digest::instance#digest!()","Rails digest::hmac#digest_length()","Rails digest::instance#digest_length()","Rails openssl::digest#digest_length()","Ruby build#dir()","Rails gem::dir()","Rails gem::installer#dir()","Rails net::ftp#dir()","Rails object#dir_config()","Ruby activesupport::descendantstracker::direct_descendants()","Ruby activesupport::descendantstracker#direct_descendants()","Rails file::directory?()","Rails file::stat#directory?()","Rails filetest#directory?()","Rails gem::package::tarreader::entry#directory?()","Rails pathname#directory?()","Rails rake::ftpfile#directory?()","Ruby activesupport::multibyte::unicode::unicodedatabase::dirname()","Rails file::dirname()","Rails pathname#dirname()","Rails gem::specification::dirs()","Rails gem::specification::dirs=()","Ruby activerecord::connectionadapters::querycache::dirties_query_cache()","Ruby activemodel::observerarray#disable()","Rails gc::disable()","Rails gc::profiler::disable()","Ruby actionview::lookupcontext::detailscache#disable_cache()","Rails dl::handle#disable_close()","Ruby activerecord::connectionadapters::querycache#disable_query_cache!()","Ruby activerecord::connectionadapters::abstractadapter#disable_referential_integrity()","Rails net::pop3#disable_ssl()","Rails net::pop3::disable_ssl()","Rails net::pop3#disable_ssl()","Rails net::pop3::disable_ssl()","Rails net::pop3::disable_ssl()","Rails net::pop3#disable_ssl()","Rails net::pop3::disable_ssl()","Rails net::pop3#disable_ssl()","Rails net::smtp#disable_ssl()","Rails net::smtp#disable_ssl()","Rails net::smtp#disable_starttls()","Rails net::smtp#disable_starttls()","Rails net::smtp#disable_tls()","Rails net::smtp#disable_tls()","Ruby activemodel::observer#disabled_for?()","Ruby activemodel::observerarray#disabled_for?()","Ruby activemodel::observerarray#disabled_observer_stack()","Ruby activemodel::observerarray#disabled_observers()","Rails rubyvm::instructionsequence::disasm()","Rails rubyvm::instructionsequence#disasm()","Rails rubyvm::instructionsequence::disassemble()","Rails rubyvm::instructionsequence#disassemble()","Ruby actiondispatch::flash::flashhash#discard()","Rails iconv#discard_ilseq=()","Rails iconv#discard_ilseq?()","Rails net::imap#disconnect()","Ruby activerecord::connectionadapters::abstractadapter#disconnect!()","Ruby activerecord::connectionadapters::connectionpool#disconnect!()","Ruby activerecord::connectionadapters::mysql2adapter#disconnect!()","Ruby activerecord::connectionadapters::mysqladapter#disconnect!()","Ruby activerecord::connectionadapters::postgresqladapter#disconnect!()","Ruby activerecord::connectionadapters::sqliteadapter#disconnect!()","Rails net::imap#disconnected?()","Rails gserver#disconnecting()","Ruby actioncontroller::rackdelegation#dispatch()","Rails win32ole_method#dispid()","Ruby actioncontroller::responder#display()","Ruby sourceannotationextractor#display()","Rails debugger__#display()","Rails debugger__::display()","Rails object#display()","Rails rdoc::ri::driver#display()","Rails rdoc::codeobject#display?()","Rails rdoc::markup::attributemanager#display_attributes()","Rails rdoc::ri::driver#display_class()","Rails rake::application#display_error_message()","Ruby actioncontroller::responder#display_errors()","Rails debugger__#display_expression()","Rails debugger__#display_expressions()","Rails debugger__#display_frames()","Rails debugger__#display_list()","Rails rdoc::ri::driver#display_method()","Rails rdoc::ri::driver#display_name()","Rails rdoc::ri::driver#display_names()","Rails rake::application#display_prerequisites()","Rails rake::application#display_tasks_and_comments()","Ruby railsguides::levenshtein::distance()","Ruby actionview::helpers::datehelper#distance_of_time_in_words()","Ruby actionview::helpers::datehelper#distance_of_time_in_words_to_now()","Ruby activerecord::connectionadapters::schemastatements#distinct()","Rails bigdecimal#div()","Rails bignum#div()","Rails fixnum#div()","Rails numeric#div()","Ruby actionview::helpers::recordtaghelper#div_for()","Rails set#divide()","Rails bigdecimal#divmod()","Rails bignum#divmod()","Rails fixnum#divmod()","Rails float#divmod()","Rails numeric#divmod()","Rails dl::importer#dlload()","Rails dl::dlopen()","Rails dl::dlunwrap()","Rails dl::dlwrap()","Rails uri::ldap#dn()","Rails uri::ldap#dn=()","Rails webrick::httpproxyserver#do_connect()","Rails webrick::httpproxyserver#do_get()","Rails webrick::httpservlet::abstractservlet#do_get()","Rails webrick::httpservlet::cgihandler#do_get()","Rails webrick::httpservlet::defaultfilehandler#do_get()","Rails webrick::httpservlet::erbhandler#do_get()","Rails webrick::httpservlet::filehandler#do_get()","Rails webrick::httpservlet::prochandler#do_get()","Rails webrick::httpproxyserver#do_head()","Rails webrick::httpservlet::abstractservlet#do_head()","Rails webrick::httpproxyserver#do_options()","Rails webrick::httpserver#do_options()","Rails webrick::httpservlet::abstractservlet#do_options()","Rails webrick::httpservlet::filehandler#do_options()","Rails webrick::httpproxyserver#do_post()","Rails webrick::httpservlet::cgihandler#do_post()","Rails webrick::httpservlet::erbhandler#do_post()","Rails webrick::httpservlet::filehandler#do_post()","Rails webrick::httpservlet::prochandler#do_post()","Rails rdoc::parser::c#do_aliases()","Rails rdoc::parser::c#do_attrs()","Rails rdoc::parser::c#do_classes()","Rails rdoc::parser::c#do_constants()","Rails rdoc::parser::c#do_includes()","Rails rdoc::parser::c#do_methods()","Rails basicsocket#do_not_reverse_lookup()","Rails basicsocket::do_not_reverse_lookup()","Rails basicsocket::do_not_reverse_lookup=()","Rails basicsocket#do_not_reverse_lookup=()","Rails openssl::ssl::socketforwarder#do_not_reverse_lookup=()","Rails rdoc::markup::tottonly#do_nothing()","Rails rinda::ringserver#do_reply()","Rails rss::baseparser#do_validate()","Rails rss::baseparser#do_validate=()","Rails rinda::ringserver#do_write()","Ruby rails::appbuilder#doc()","Rails gem::specification#doc_dir()","Rails rdoc::stats#doc_stats()","Ruby railsguides::helpers#docs_for_menu()","Rails rexml::attribute#doctype()","Rails rexml::document#doctype()","Rails rexml::sax2listener#doctype()","Rails rexml::streamlistener#doctype()","Rails rexml::text#doctype()","Rails rexml::parsers::pullevent#doctype?()","Rails rexml::streamlistener#doctype_end()","Rails rdoc::rdoc#document()","Rails rdoc::rubygemshook#document()","Rails rexml::child#document()","Rails rexml::element#document()","Rails xmlrpc::xmlwriter::simple#document()","Rails xmlrpc::xmlwriter::xmlparser#document()","Rails rdoc::codeobject#document_children=()","Rails rdoc::codeobject#document_self=()","Rails xmlrpc::xmlwriter::simple#document_to_str()","Rails xmlrpc::xmlwriter::xmlparser#document_to_str()","Rails rdoc::codeobject#documented?()","Rails rdoc::constant#documented?()","Rails rdoc::methodattr#documented?()","Ruby railsguides::helpers#documents_by_section()","Ruby railsguides::helpers#documents_flat()","Ruby actioncontroller::recordidentifier#dom_class()","Ruby actioncontroller::recordidentifier#dom_id()","Ruby actiondispatch::http::url#domain()","Rails gem::streamui::silentdownloadreporter#done()","Rails gem::streamui::silentprogressreporter#done()","Rails gem::streamui::simpleprogressreporter#done()","Rails gem::streamui::verbosedownloadreporter#done()","Rails gem::streamui::verboseprogressreporter#done()","Rails rexml::validation::event#done?()","Rails rdoc::stats#done_adding()","Rails rdoc::stats::quiet#done_adding()","Rails rdoc::codeobject#done_documenting=()","Rails xmlrpc::convert::double()","Rails bigdecimal::double_fig()","Rails curses::doupdate()","Ruby activerecord::migration#down()","Ruby activesupport::multibyte::chars#downcase()","Rails string#downcase()","Rails symbol#downcase()","Rails string#downcase!()","Ruby recursivehttpfetcher#download()","Rails gem::remotefetcher#download()","Rails gem::silentui#download_reporter()","Rails gem::streamui#download_reporter()","Rails gem::remotefetcher#download_to_cache()","Rails date#downto()","Rails integer#downto()","Rails rexml::xmldecl#dowrite()","Rails array#drop()","Rails enumerable#drop()","Ruby activerecord::connectionadapters::schemastatements#drop_table()","Rails array#drop_while()","Rails enumerable#drop_while()","Rails openssl::pkey::ec#dsa_sign_asn1()","Rails openssl::pkey::ec#dsa_verify_asn1()","Ruby activesupport::timewithzone#dst?()","Rails time#dst?()","Rails encoding#dummy?()","Rails object#dummy_makefile()","Ruby rails::generators::pluginnewgenerator#dummy_path()","Rails csv::dump()","Rails gem::sourceindex#dump()","Rails json#dump()","Rails marshal::dump()","Rails psych::dump()","Rails rdoc::ri::driver::dump()","Rails rexml::validation::validator#dump()","Rails string#dump()","Rails xmlrpc::marshal::dump()","Rails xmlrpc::marshal#dump_call()","Rails xmlrpc::marshal::dump_call()","Rails xmlrpc::marshal#dump_response()","Rails xmlrpc::marshal::dump_response()","Rails psych::dump_stream()","Ruby activeresource::base#dup()","Ruby activesupport::hashwithindifferentaccess#dup()","Ruby activesupport::hashwithindifferentaccess#dup()","Rails object#dup()","Rails rake::cloneable#dup()","Rails singleton#dup()","Ruby bigdecimal#duplicable?()","Ruby class#duplicable?()","Ruby falseclass#duplicable?()","Ruby module#duplicable?()","Ruby nilclass#duplicable?()","Ruby numeric#duplicable?()","Ruby object#duplicable?()","Ruby symbol#duplicable?()","Ruby trueclass#duplicable?()","Rails rake::application#dynamic_width()","Rails rake::application#dynamic_width_stty()","Rails rake::application#dynamic_width_tput()","Rails exception2messagemapper::e2mm_message()","Rails exception2messagemapper::e2mm_message()","Ruby actiondispatch::flash::flashhash#each()","Ruby actiondispatch::middlewarestack#each()","Ruby activemodel::errors#each()","Ruby activerecord::connectionadapters::mysqladapter::statementpool#each()","Ruby activerecord::connectionadapters::postgresqladapter::statementpool#each()","Ruby activerecord::connectionadapters::sqliteadapter::statementpool#each()","Ruby activerecord::connectionadapters::statementpool#each()","Ruby activerecord::fixtures#each()","Ruby activerecord::fixtures::file#each()","Ruby activerecord::result#each()","Ruby activesupport::dependencies::watchstack#each()","Ruby activesupport::orderedhash#each()","Rails argf#each()","Rails array#each()","Rails csv#each()","Rails csv::row#each()","Rails csv::table#each()","Rails dbm#each()","Rails dir#each()","Rails env::each()","Rails enumerator#each()","Rails gdbm#each()","Rails gem::configfile#each()","Rails gem::dependencylist#each()","Rails gem::package::tarreader#each()","Rails gem::sourceindex#each()","Rails gem::specification::each()","Rails getoptlong#each()","Rails hash#each()","Rails httpserver::table#each()","Rails io#each()","Rails matrix#each()","Rails net::httpheader#each()","Rails net::pop3#each()","Rails net::pop3#each()","Rails net::pop3#each()","Rails net::pop3#each()","Rails openssl::asn1::constructive#each()","Rails openssl::buffering#each()","Rails openssl::config#each()","Rails prime#each()","Rails prime::oldcompatibility#each()","Rails prime::pseudoprimegenerator#each()","Rails psych::nodes::node#each()","Rails rdoc::ri::paths::each()","Rails rexml::attlistdecl#each()","Rails rexml::attributes#each()","Rails rexml::elements#each()","Rails rexml::light::node#each()","Rails rexml::parent#each()","Rails rexml::parsers::pullparser#each()","Rails rexml::quickpath::each()","Rails rexml::syncenumerator#each()","Rails rexml::xpath::each()","Rails rss::xml::element#each()","Rails rake::taskarguments#each()","Rails range#each()","Rails rinda::notifytemplateentry#each()","Rails rinda::ringfinger#each()","Rails rinda::tuple#each()","Rails sdbm#each()","Rails set#each()","Rails shell::cat#each()","Rails shell::concat#each()","Rails shell::echo#each()","Rails shell::filter#each()","Rails shell::glob#each()","Rails shell::systemcommand#each()","Rails shell::tee#each()","Rails shell::void#each()","Rails stringio#each()","Rails struct#each()","Rails vector#each()","Rails webrick::cgi::socket#each()","Rails webrick::httpauth::htdigest#each()","Rails webrick::httpauth::htpasswd#each()","Rails webrick::httprequest#each()","Rails webrick::httpresponse#each()","Rails win32ole#each()","Rails win32::registry#each()","Rails yaml::dbm#each()","Rails zlib::gzipreader#each()","Rails vector#each2()","Rails shell::processcontroller::each_active_object()","Rails resolv#each_address()","Rails resolv::each_address()","Rails resolv::dns#each_address()","Rails resolv::hosts#each_address()","Rails rdoc::classmodule#each_ancestor()","Rails rdoc::context#each_attribute()","Rails rexml::attributes#each_attribute()","Rails argf#each_byte()","Rails io#each_byte()","Rails openssl::buffering#each_byte()","Rails string#each_byte()","Rails stringio#each_byte()","Rails zlib::gzipreader#each_byte()","Rails net::httpheader#each_capitalized()","Rails net::httpheader#each_capitalized_name()","Rails argf#each_char()","Rails io#each_char()","Rails string#each_char()","Rails stringio#each_char()","Rails zlib::gzipreader#each_char()","Rails pathname#each_child()","Rails rexml::parent#each_child()","Rails rdoc::context#each_classmodule()","Rails argf#each_codepoint()","Rails io#each_codepoint()","Rails string#each_codepoint()","Rails stringio#each_codepoint()","Rails enumerable#each_cons()","Rails optionparser::each_const()","Rails rdoc::context#each_constant()","Rails webrick::httputils::formdata#each_data()","Rails rexml::element#each_element()","Rails rexml::element#each_element_with_attribute()","Rails rexml::element#each_element_with_text()","Rails enumerable#each_entry()","Rails gem::package::tarreader#each_entry()","Rails pathname#each_entry()","Rails pathname#each_filename()","Rails net::httpheader#each_header()","Rails rdoc::context#each_include()","Rails array#each_index()","Rails rexml::parent#each_index()","Rails xmlrpc::xmlparser::each_installed_parser()","Rails xmlrpc::xmlwriter::each_installed_writer()","Ruby activesupport::orderedhash#each_key()","Rails dbm#each_key()","Rails env::each_key()","Rails gdbm#each_key()","Rails hash#each_key()","Rails net::httpheader#each_key()","Rails sdbm#each_key()","Rails win32::registry#each_key()","Rails argf#each_line()","Rails io#each_line()","Rails openssl::buffering#each_line()","Rails pathname#each_line()","Rails string#each_line()","Rails stringio#each_line()","Rails zlib::gzipreader#each_line()","Rails net::pop3#each_mail()","Rails net::pop3#each_mail()","Rails net::pop3#each_mail()","Rails net::pop3#each_mail()","Rails rdoc::context#each_method()","Rails net::httpheader#each_name()","Rails resolv::each_name()","Rails resolv#each_name()","Rails resolv::dns#each_name()","Rails resolv::hosts#each_name()","Rails rdoc::markup::attribute::each_name_of()","Rails objectspace::each_object()","Rails getoptlong#each_option()","Rails optionparser::list#each_option()","Ruby activesupport::orderedhash#each_pair()","Rails dbm#each_pair()","Rails env::each_pair()","Rails gdbm#each_pair()","Rails hash#each_pair()","Rails sdbm#each_pair()","Rails struct#each_pair()","Rails yaml::dbm#each_pair()","Rails rdoc::codeobject#each_parent()","Rails integer::each_prime()","Rails rexml::node#each_recursive()","Rails resolv::dns#each_resource()","Rails rdoc::context#each_section()","Rails enumerable#each_slice()","Rails tsort#each_strongly_connected_component()","Rails tsort#each_strongly_connected_component_from()","Ruby activemodel::observerarray#each_subclass_array()","Rails rubylex#each_top_level_statement()","Ruby activesupport::orderedhash#each_value()","Rails dbm#each_value()","Rails env::each_value()","Rails gdbm#each_value()","Rails hash#each_value()","Rails net::httpheader#each_value()","Rails sdbm#each_value()","Rails win32::registry#each_value()","Rails yaml::dbm#each_value()","Rails enumerable#each_with_index()","Rails enumerator#each_with_index()","Rails matrix#each_with_index()","Ruby enumerable#each_with_object()","Rails enumerable#each_with_object()","Rails enumerator#each_with_object()","Ruby activesupport::autoload#eager_autoload()","Ruby activesupport::autoload::eager_autoload!()","Ruby activerecord::querymethods#eager_load()","Ruby rails::paths::root#eager_load()","Ruby rails::engine#eager_load!()","Ruby rails::railtie#eager_load!()","Ruby rails::engine::configuration#eager_load_paths()","Ruby activerecord::relation#eager_loading?()","Rails curses::echo()","Rails shell::commandprocessor#echo()","Rails io#echo=()","Rails io#echo?()","Ruby postscontroller#edit()","Rails process::egid()","Rails process::egid=()","Rails net::smtp#ehlo()","Rails net::smtp#ehlo()","Rails process::gid::eid()","Rails process::uid::eid()","Rails matrix#eigen()","Rails matrix#eigensystem()","Rails matrix::eigenvaluedecomposition#eigenvalue_matrix()","Rails matrix::eigenvaluedecomposition#eigenvalues()","Rails matrix::eigenvaluedecomposition#eigenvector_matrix()","Rails matrix::eigenvaluedecomposition#eigenvector_matrix_inv()","Rails matrix::eigenvaluedecomposition#eigenvectors()","Rails xmlrpc::xmlwriter::abstract#ele()","Rails matrix#element()","Rails vector#element()","Rails xmlrpc::xmlwriter::simple#element()","Rails xmlrpc::xmlwriter::xmlparser#element()","Rails rexml::attribute#element=()","Rails rss::utils#element_initialize_arguments?()","Ruby activeresource::base::element_name()","Ruby activeresource::base#element_path()","Ruby activeresource::base::element_path()","Rails rexml::sax2listener#elementdecl()","Rails rexml::streamlistener#elementdecl()","Rails rexml::parsers::pullevent#elementdecl?()","Rails vector::elements()","Rails matrix#elements_to_f()","Rails vector#elements_to_f()","Rails matrix#elements_to_i()","Rails vector#elements_to_i()","Rails matrix#elements_to_r()","Rails vector#elements_to_r()","Rails readline::emacs_editing_mode()","Rails readline::emacs_editing_mode?()","Ruby actionview::helpers::formhelper#email_field()","Ruby actionview::helpers::formtaghelper#email_field_tag()","Rails gem::security::email_to_name()","Ruby actionview::helpers::formbuilder#emitted_hidden_id?()","Rails matrix::empty()","Rails psych::handler#empty()","Ruby actiondispatch::flash::flashhash#empty?()","Ruby activemodel::errors#empty?()","Ruby activerecord::relation#empty?()","Ruby activesupport::dependencies::classcache#empty?()","Rails array#empty?()","Rails dbm#empty?()","Rails env::empty?()","Rails gdbm#empty?()","Rails gem::package::tarheader#empty?()","Rails gem::platform#empty?()","Rails hash#empty?()","Rails matrix#empty?()","Rails queue#empty?()","Rails rdoc::markup::document#empty?()","Rails rdoc::markup::list#empty?()","Rails rdoc::markup::listitem#empty?()","Rails rexml::elements#empty?()","Rails rexml::iosource#empty?()","Rails rexml::parsers::baseparser#empty?()","Rails rexml::source#empty?()","Rails rexml::text#empty?()","Rails sdbm#empty?()","Rails set#empty?()","Rails string#empty?()","Rails stringscanner#empty?()","Rails symbol#empty?()","Rails threadswait#empty?()","Rails threadswait#empty?()","Ruby rails::generators::appbase#empty_directory_with_gitkeep()","Ruby activerecord::connectionadapters::databasestatements#empty_insert_statement_value()","Ruby activerecord::connectionadapters::sqliteadapter#empty_insert_statement_value()","Ruby activerecord::connectionadapters::abstractmysqladapter::emulate_booleans()","Ruby activemodel::observerarray#enable()","Rails gc::enable()","Rails gc::profiler::enable()","Rails dl::handle#enable_close()","Rails object#enable_config()","Ruby activerecord::connectionadapters::querycache#enable_query_cache!()","Rails net::pop3#enable_ssl()","Rails net::pop3#enable_ssl()","Rails net::pop3::enable_ssl()","Rails net::pop3#enable_ssl()","Rails net::pop3::enable_ssl()","Rails net::pop3::enable_ssl()","Rails net::pop3#enable_ssl()","Rails net::pop3::enable_ssl()","Rails net::smtp#enable_ssl()","Rails net::smtp#enable_ssl()","Rails net::smtp#enable_starttls()","Rails net::smtp#enable_starttls()","Rails net::smtp#enable_starttls_auto()","Rails net::smtp#enable_starttls_auto()","Rails net::smtp#enable_tls()","Rails net::smtp#enable_tls()","Ruby kernel#enable_warnings()","Ruby activerecord::identitymap::enabled()","Ruby activerecord::identitymap::enabled=()","Ruby activerecord::identitymap::enabled?()","Rails gc::profiler::enabled?()","Rails openssl::pkcs7::recipientinfo#enc_key()","Rails threadgroup#enclose()","Rails threadgroup#enclosed?()","Ruby activeresource::base#encode()","Ruby activeresource::formats::jsonformat#encode()","Ruby activeresource::formats::xmlformat#encode()","Ruby activesupport::json::encode()","Ruby activesupport::json::encoding::encoder#encode()","Rails rexml::encoding#encode()","Rails string#encode()","Rails uri::escape#encode()","Rails xmlrpc::base64::encode()","Ruby actionview::template#encode!()","Rails string#encode!()","Ruby activesupport::base64::encode64()","Ruby base64::encode64()","Rails base64#encode64()","Ruby activesupport::base64::encode64s()","Ruby actioncontroller::httpauthentication::basic#encode_credentials()","Ruby actioncontroller::httpauthentication::digest#encode_credentials()","Ruby actioncontroller::httpauthentication::token#encode_credentials()","Rails rdoc::text::encode_fallback()","Ruby activesupport::json::variable#encode_json()","Ruby falseclass#encode_json()","Ruby hash#encode_json()","Ruby nilclass#encode_json()","Ruby numeric#encode_json()","Ruby string#encode_json()","Ruby trueclass#encode_json()","Rails net::imap::encode_utf7()","Ruby activerecord::base#encode_with()","Ruby activesupport::orderedhash#encode_with()","Ruby activesupport::safebuffer#encode_with()","Ruby activesupport::timewithzone#encode_with()","Ruby bigdecimal#encode_with()","Rails uri::encode_www_form()","Rails uri::encode_www_form_component()","Rails xmlrpc::base64#encoded()","Ruby activerecord::connectionadapters::postgresqladapter#encoding()","Rails irb::fileinputmethod#encoding()","Rails irb::readlineinputmethod#encoding()","Rails irb::stdioinputmethod#encoding()","Rails rexml::document#encoding()","Rails regexp#encoding()","Rails string#encoding()","Rails symbol#encoding()","Ruby rails::application::configuration#encoding=()","Rails rexml::encoding#encoding=()","Rails rexml::source#encoding=()","Rails rexml::xmldecl#encoding=()","Ruby string#encoding_aware?()","Ruby activesupport::messageencryptor#encrypt()","Rails openssl::cipher#encrypt()","Rails openssl::pkcs7::encrypt()","Ruby activesupport::messageencryptor#encrypt_and_sign()","Rails matchdata#end()","Rails range#end()","Rails zlib::zstream#end()","Rails rss::rexmllikexmlparser#endelement()","Rails xmlrpc::xmlparser::streamparsermixin#endelement()","Rails rdoc::markup::tohtml#end_accepting()","Rails rdoc::markup::tordoc#end_accepting()","Rails rdoc::markup::tottonly#end_accepting()","Ruby activesupport::xmlmini_nokogirisax::hashbuilder#end_document()","Rails psych::emitter#end_document()","Rails psych::handler#end_document()","Rails psych::treebuilder#end_document()","Rails rexml::sax2listener#end_document()","Ruby activesupport::xmlmini_nokogirisax::hashbuilder#end_element()","Rails rexml::sax2listener#end_element()","Rails rexml::parsers::pullevent#end_element?()","Rails psych::emitter#end_mapping()","Rails psych::handler#end_mapping()","Ruby date#end_of_day()","Ruby datetime#end_of_day()","Ruby time#end_of_day()","Ruby datetime#end_of_hour()","Ruby time#end_of_hour()","Ruby date#end_of_month()","Ruby time#end_of_month()","Ruby date#end_of_quarter()","Ruby time#end_of_quarter()","Ruby date#end_of_week()","Ruby time#end_of_week()","Ruby date#end_of_year()","Ruby time#end_of_year()","Rails rexml::sax2listener#end_prefix_mapping()","Rails psych::emitter#end_sequence()","Rails psych::handler#end_sequence()","Rails psych::emitter#end_stream()","Rails psych::handler#end_stream()","Rails psych::treebuilder#end_stream()","Ruby activemodel::observerarray#end_transaction()","Rails string#end_with?()","Rails zlib::zstream#ended?()","Rails etc::endgrent()","Ruby rails::engine#endpoint()","Ruby rails::engine::endpoint()","Rails etc::endpwent()","Ruby activesupport::json::engine()","Ruby activesupport::json::engine=()","Ruby rails::engine::railties::engines()","Rails openssl::engine::engines()","Rails date#england()","Rails rake::task#enhance()","Rails rake::taskmanager#enhance_with_matching_rule()","Ruby activerecord::testfixtures#enlist_fixture_connections()","Rails prettyprint::groupqueue#enq()","Rails queue#enq()","Rails sizedqueue#enq()","Rails gem::installer#ensure_dependencies_met()","Rails gem::installer#ensure_dependency()","Rails gem::ensure_gem_subdirectories()","Rails gem::installer#ensure_required_ruby_version_met()","Rails gem::installer#ensure_required_rubygems_version_met()","Rails gem::ensure_ssl_available()","Rails rss::maker::atomtextconstructbase::ensurexmlcontent#ensure_xml_content()","Rails net::httpresponse#entity()","Rails rexml::doctype#entity()","Rails rexml::parsers::baseparser#entity()","Rails rexml::streamlistener#entity()","Rails rexml::parsers::pullevent#entity?()","Rails dl::cstruct::entity_class()","Rails dl::cunion::entity_class()","Rails rexml::document::entity_expansion_limit()","Rails rexml::document::entity_expansion_limit=()","Rails rexml::entity_expansion_text_limit()","Rails rexml::document::entity_expansion_text_limit()","Rails rexml::entity_expansion_text_limit=()","Rails rexml::document::entity_expansion_text_limit=()","Rails rexml::sax2listener#entitydecl()","Rails rexml::streamlistener#entitydecl()","Rails rexml::parsers::pullevent#entitydecl?()","Rails dir::entries()","Rails enumerable#entries()","Rails pathname#entries()","Ruby actionview::helpers::atomfeedhelper::atomfeedbuilder#entry()","Rails object#enum_for()","Ruby sourceannotationextractor::enumerate()","Ruby actioncontroller::metal#env()","Ruby rails::env()","Ruby rails::env=()","Ruby rails::application#env_config()","Ruby rails::engine#env_config()","Ruby actiondispatch::http::filterparameters#env_filter()","Ruby rails::generators::actions#environment()","Rails optionparser#environment()","Ruby rails::commands::plugin#environment=()","Rails argf#eof()","Rails io#eof()","Rails openssl::buffering#eof()","Rails stringio#eof()","Rails zlib::gzipreader#eof()","Rails argf#eof?()","Rails gem::package::tarreader::entry#eof?()","Rails io#eof?()","Rails irb::fileinputmethod#eof?()","Rails irb::readlineinputmethod#eof?()","Rails irb::stdioinputmethod#eof?()","Rails openssl::buffering#eof?()","Rails rubylex#eof?()","Rails stringio#eof?()","Rails webrick::cgi::socket#eof?()","Rails xmp::stringinputmethod#eof?()","Rails zlib::gzipreader#eof?()","Rails stringscanner#eos?()","Ruby actionview::filesystemresolver#eql?()","Ruby activerecord::base#eql?()","Ruby activeresource::base#eql?()","Ruby activesupport::timewithzone#eql?()","Ruby time#eql?()","Rails array#eql?()","Rails bigdecimal#eql?()","Rails bignum#eql?()","Rails dl::cptr#eql?()","Rails dl::cptr#eql?()","Rails drb::drbobject#eql?()","Rails float#eql?()","Rails gem::platform#eql?()","Rails gem::version#eql?()","Rails hash#eql?()","Rails ipaddr#eql?()","Rails matchdata#eql?()","Rails matrix#eql?()","Rails method#eql?()","Rails numeric#eql?()","Rails object#eql?()","Rails openssl::bn#eql?()","Rails openssl::pkey::ec::group#eql?()","Rails openssl::pkey::ec::point#eql?()","Rails openssl::x509::name#eql?()","Rails pathname#eql?()","Rails proc#eql?()","Rails rdoc::toplevel#eql?()","Rails range#eql?()","Rails regexp#eql?()","Rails string#eql?()","Rails struct#eql?()","Rails time#eql?()","Rails uri::generic#eql?()","Rails unboundmethod#eql?()","Rails vector#eql?()","Ruby time#eql_with_coercion()","Ruby time#eql_without_coercion()","Rails basicobject#equal?()","Rails math::erf()","Rails math::erfc()","Rails systemcallerror#errno()","Ruby activesupport::xmlmini_nokogirisax::hashbuilder#error()","Rails gserver#error()","Rails gem::mockgemui#error()","Rails logger#error()","Rails rdoc::parser::ruby#error()","Rails rdoc::rdoc#error()","Rails webrick::basiclog#error()","Rails logger#error?()","Rails rexml::parsers::pullevent#error?()","Rails webrick::basiclog#error?()","Rails webrick::httpstatus::error?()","Rails encoding::invalidbytesequenceerror#error_bytes()","Rails encoding::undefinedconversionerror#error_char()","Ruby actionview::helpers::activemodelinstancetag#error_message()","Rails getoptlong#error_message()","Ruby activerecord::connectionadapters::mysql2adapter#error_number()","Ruby actionview::helpers::activemodelinstancetag#error_wrapping()","Ruby activemodel::validations#errors()","Ruby activeresource::validations#errors()","Ruby rails::generators::activemodel#errors()","Rails openssl::errors()","Ruby activesupport::json::encoding::encoder#escape()","Rails cgi::escape()","Rails gem::remotefetcher#escape()","Rails regexp::escape()","Rails shellwords::escape()","Rails uri::escape#escape()","Rails uri::parser#escape()","Rails webrick::accesslog#escape()","Rails webrick::htmlutils::escape()","Rails webrick::httputils#escape()","Rails webrick::httputils#escape8bit()","Rails cgi::escapeelement()","Rails cgi::escapehtml()","Ruby activerecord::connectionadapters::postgresqladapter#escape_bytea()","Rails cgi::escape_element()","Rails webrick::httputils#escape_form()","Ruby actiondispatch::filehandler#escape_glob_chars()","Rails cgi::escape_html()","Ruby actionview::helpers::javascripthelper#escape_javascript()","Ruby actionview::helpers::taghelper#escape_once()","Rails webrick::httputils#escape_path()","Ruby activerecord::base::establish_connection()","Ruby activerecord::connectionadapters::connectionhandler#establish_connection()","Ruby actiondispatch::http::cache::response#etag=()","Ruby actiondispatch::http::cache::request#etag_matches?()","Rails process::euid()","Rails process::euid=()","Rails binding#eval()","Rails kernel#eval()","Rails rubyvm::instructionsequence#eval()","Rails irb::context#eval_history=()","Rails irb::irb#eval_input()","Rails irb::context#evaluate()","Rails irb::workspace#evaluate()","Ruby activerecord::scoping::default::classmethods#evaluate_default_scope()","Rails bignum#even?()","Rails fixnum#even?()","Rails integer#even?()","Rails win32ole_method#event?()","Rails win32ole_method#event_interface()","Rails rexml::parsers::pullevent#event_type()","Ruby numeric#exabyte()","Ruby numeric#exabytes()","Rails net::imap#examine()","Ruby activerecord::spawnmethods#except()","Ruby hash#except()","Ruby hash#except!()","Rails drb::drbunknown#exception()","Rails exception#exception()","Rails exception::exception()","Rails net::smtp::response#exception_class()","Ruby actionview::helpers::texthelper#excerpt()","Rails rake::filelist#exclude()","Ruby enumerable#exclude?()","Ruby string#exclude?()","Rails range#exclude_end?()","Rails thread::exclusive()","Rails debugger__#excn_handle()","Rails kernel#exec()","Rails process::exec()","Ruby activerecord::connectionadapters::databasestatements#exec_delete()","Ruby activerecord::connectionadapters::mysql2adapter#exec_delete()","Ruby activerecord::connectionadapters::mysqladapter#exec_delete()","Ruby activerecord::connectionadapters::postgresqladapter#exec_delete()","Ruby activerecord::connectionadapters::sqliteadapter#exec_delete()","Rails gem::installer::exec_format()","Rails irb::notifier::abstractnotifier#exec_if()","Ruby activerecord::connectionadapters::databasestatements#exec_insert()","Ruby activerecord::connectionadapters::mysql2adapter#exec_insert()","Ruby activerecord::connectionadapters::databasestatements#exec_query()","Ruby activerecord::connectionadapters::mysql2adapter#exec_query()","Ruby activerecord::connectionadapters::mysqladapter#exec_query()","Ruby activerecord::connectionadapters::postgresqladapter#exec_query()","Ruby activerecord::connectionadapters::sqliteadapter#exec_query()","Ruby rails::scriptrailsloader::exec_script_rails!()","Ruby activerecord::connectionadapters::databasestatements#exec_update()","Ruby activerecord::connectionadapters::mysql2adapter#exec_update()","Ruby activerecord::connectionadapters::mysqladapter#exec_update()","Ruby activerecord::connectionadapters::postgresqladapter#exec_update()","Ruby activerecord::connectionadapters::sqliteadapter#exec_update()","Ruby activerecord::connectionadapters::mysql2adapter#exec_without_stmt()","Rails gem::specification#executable()","Rails gem::specification#executable=()","Rails file::executable?()","Rails file::stat#executable?()","Rails filetest#executable?()","Rails pathname#executable?()","Rails file::executable_real?()","Rails file::stat#executable_real?()","Rails filetest#executable_real?()","Rails pathname#executable_real?()","Rails gem::specification#executables()","Rails gem::specification#executables=()","Ruby activerecord::connectionadapters::abstractmysqladapter#execute()","Ruby activerecord::connectionadapters::databasestatements#execute()","Ruby activerecord::connectionadapters::mysql2adapter#execute()","Ruby activerecord::connectionadapters::postgresqladapter#execute()","Ruby activesupport::fileupdatechecker#execute()","Rails gem::command#execute()","Rails gem::commands::buildcommand#execute()","Rails gem::commands::certcommand#execute()","Rails gem::commands::checkcommand#execute()","Rails gem::commands::cleanupcommand#execute()","Rails gem::commands::contentscommand#execute()","Rails gem::commands::dependencycommand#execute()","Rails gem::commands::environmentcommand#execute()","Rails gem::commands::fetchcommand#execute()","Rails gem::commands::generateindexcommand#execute()","Rails gem::commands::helpcommand#execute()","Rails gem::commands::installcommand#execute()","Rails gem::commands::listcommand#execute()","Rails gem::commands::lockcommand#execute()","Rails gem::commands::outdatedcommand#execute()","Rails gem::commands::ownercommand#execute()","Rails gem::commands::pristinecommand#execute()","Rails gem::commands::pushcommand#execute()","Rails gem::commands::querycommand#execute()","Rails gem::commands::rdoccommand#execute()","Rails gem::commands::searchcommand#execute()","Rails gem::commands::servercommand#execute()","Rails gem::commands::setupcommand#execute()","Rails gem::commands::sourcescommand#execute()","Rails gem::commands::specificationcommand#execute()","Rails gem::commands::stalecommand#execute()","Rails gem::commands::uninstallcommand#execute()","Rails gem::commands::unpackcommand#execute()","Rails gem::commands::updatecommand#execute()","Rails gem::commands::whichcommand#execute()","Rails irb::extendcommand::changeworkspace#execute()","Rails irb::extendcommand::currentworkingworkspace#execute()","Rails irb::extendcommand::foreground#execute()","Rails irb::extendcommand::fork#execute()","Rails irb::extendcommand::help#execute()","Rails irb::extendcommand::irbcommand#execute()","Rails irb::extendcommand::jobs#execute()","Rails irb::extendcommand::kill#execute()","Rails irb::extendcommand::load#execute()","Rails irb::extendcommand::nop#execute()","Rails irb::extendcommand::nop::execute()","Rails irb::extendcommand::popworkspace#execute()","Rails irb::extendcommand::pushworkspace#execute()","Rails irb::extendcommand::require#execute()","Rails irb::extendcommand::source#execute()","Rails irb::extendcommand::workspaces#execute()","Rails rake::task#execute()","Ruby activerecord::connectionadapters::mysqladapter#execute_and_free()","Ruby activesupport::execute_hook()","Ruby activesupport::fileupdatechecker#execute_if_updated()","Ruby actiondispatch::railsentitystore#exist?()","Ruby activesupport::cache::store#exist?()","Rails dir::exist?()","Rails file::exist?()","Rails filetest#exist?()","Rails pathname#exist?()","Rails stringscanner#exist?()","Ruby rails::paths::path#existent()","Ruby rails::paths::path#existent_directories()","Ruby actionview::lookupcontext::viewpaths#exists?()","Ruby activerecord::findermethods#exists?()","Ruby activeresource::base::exists?()","Ruby activeresource::base#exists?()","Rails dir::exists?()","Rails file::exists?()","Rails filetest#exists?()","Rails irb::context#exit()","Rails kernel#exit()","Rails process::exit()","Rails thread::exit()","Rails thread#exit()","Rails kernel#exit!()","Rails process::exit!()","Ruby rails::generators::appgenerator::exit_on_failure?()","Rails localjumperror#exit_value()","Rails process::status#exited?()","Rails rake::pseudostatus#exited?()","Rails process::status#exitstatus()","Rails bigmath::exp()","Rails cmath::exp()","Rails math::exp()","Rails cmath::exp!()","Rails rexml::parsers::xpathparser#expand()","Rails rexml::text::expand()","Ruby activesupport::cache::expand_cache_key()","Rails rdoc::ri::driver#expand_class()","Rails win32::registry::expand_environ()","Ruby activerecord::sanitization::classmethods#expand_hash_conditions_for_aggregates()","Rails openssl::x509::name::rfc2253dn#expand_hexstring()","Rails rdoc::ri::driver#expand_name()","Rails openssl::x509::name::rfc2253dn#expand_pair()","Rails file::expand_path()","Rails pathname#expand_path()","Rails shell#expand_path()","Rails shell::commandprocessor#expand_path()","Rails rexml::validation::state#expand_ref_in()","Rails rdoc::text#expand_tabs()","Rails openssl::x509::name::rfc2253dn#expand_value()","Ruby rails::paths::path#expanded()","Rails rexml::document#expanded_name()","Rails io#expect()","Rails rexml::validation::choice#expected()","Rails rexml::validation::interleave#expected()","Rails rexml::validation::oneormore#expected()","Rails rexml::validation::optional#expected()","Rails rexml::validation::state#expected()","Rails rexml::validation::zeroormore#expected()","Ruby actioncontroller::httpauthentication::digest#expected_response()","Ruby activerecord::connectionadapters::abstractadapter#expire()","Ruby actioncontroller::caching::actions#expire_action()","Ruby actioncontroller::caching::fragments#expire_fragment()","Ruby actioncontroller::caching::pages#expire_page()","Ruby actioncontroller::caching::pages::classmethods#expire_page()","Ruby activesupport::cache::entry#expired?()","Rails rinda::tupleentry#expired?()","Rails webrick::cookie#expires()","Rails webrick::cookie#expires=()","Ruby activesupport::cache::entry#expires_at()","Ruby activesupport::cache::entry#expires_at=()","Ruby actioncontroller::conditionalget#expires_in()","Ruby actioncontroller::conditionalget#expires_now()","Ruby activerecord::connectionadapters::mysql2adapter#explain()","Ruby activerecord::connectionadapters::postgresqladapter#explain()","Ruby activerecord::connectionadapters::sqliteadapter#explain()","Ruby activerecord::relation#explain()","Rails bigdecimal#exponent()","Rails openssl::pkey::dh#export()","Rails openssl::pkey::dsa#export()","Rails openssl::pkey::rsa#export()","Rails net::imap#expunge()","Ruby actiondispatch::filehandler#ext()","Rails string#ext()","Rails object#extend()","Rails exception2messagemapper::extend_object()","Rails exception2messagemapper::extend_object()","Rails irb::extendcommandbundle::extend_object()","Rails irb::extendcommandbundle::extend_object()","Rails monitormixin::extend_object()","Rails mutex_m::extend_object()","Rails optionparser::arguable::extend_object()","Rails sync_m::extend_object()","Rails sync_m::extend_object()","Ruby activemodel::callbacks::extended()","Ruby activerecord::explain::extended()","Ruby activesupport::concern::extended()","Ruby activesupport::memoizable::extended()","Rails irb::historysavingability::extended()","Ruby activerecord::querymethods#extending()","Ruby actionview::helpers::assettaghelper::assetincludetag#extension()","Ruby actionview::helpers::assettaghelper::javascriptincludetag#extension()","Ruby actionview::helpers::assettaghelper::stylesheetincludetag#extension()","Ruby activeresource::formats::jsonformat#extension()","Ruby activeresource::formats::xmlformat#extension()","Rails gem::specification#extensions()","Rails openssl::x509::crl#extensions()","Rails openssl::x509::certificate#extensions()","Rails openssl::x509::revoked#extensions()","Rails uri::ldap#extensions()","Rails gem::specification#extensions=()","Rails openssl::x509::crl#extensions=()","Rails openssl::x509::certificate#extensions=()","Rails openssl::x509::revoked#extensions=()","Rails uri::ldap#extensions=()","Rails dl::importer#extern()","Rails argf#external_encoding()","Rails io#external_encoding()","Rails stringio#external_encoding()","Ruby railsenvironment#externals()","Ruby railsenvironment#externals=()","Ruby rails::generators::actions#extify()","Rails file::extname()","Rails pathname#extname()","Rails gem::command::extra_args()","Rails gem::command::extra_args=()","Rails gem::specification#extra_rdoc_files()","Rails gem::specification#extra_rdoc_files=()","Rails uri::extract()","Rails uri::parser#extract()","Ruby hash#extract!()","Ruby sourceannotationextractor#extract_annotations_from()","Rails rdoc::parser::ruby#extract_call_seq()","Rails rdoc::context::section#extract_comment()","Ruby actiondispatch::http::url::extract_domain()","Rails gem::installer#extract_files()","Ruby array#extract_options!()","Ruby activerecord::connectionadapters::postgresqladapter::utils#extract_schema_and_table()","Ruby actiondispatch::session::stalesessioncheck#extract_session_id()","Ruby actiondispatch::http::url::extract_subdomain()","Ruby actiondispatch::http::url::extract_subdomains()","Ruby activesupport::hashwithindifferentaccess#extractable_options?()","Ruby activesupport::hashwithindifferentaccess#extractable_options?()","Ruby activesupport::orderedhash#extractable_options?()","Ruby hash#extractable_options?()","Rails syslog::facility()","Rails exception2messagemapper#fail()","Rails exception2messagemapper#fail()","Rails kernel#fail()","Rails iconv::failure#failed()","Ruby rails::generators::fallbacks()","Rails rexml::functions::false()","Rails socket::ancillarydata#family()","Rails socket::option#family()","Rails addrinfo#family_addrinfo()","Rails json#fast_generate()","Rails gdbm#fastmode=()","Rails fatal","Rails logger#fatal()","Rails webrick::basiclog#fatal()","Rails logger#fatal?()","Rails webrick::basiclog#fatal?()","Rails xmlrpc::convert::fault()","Ruby actionview::helpers::assettaghelper#favicon_link_tag()","Rails io#fcntl()","Rails openssl::ssl::socketforwarder#fcntl()","Rails stringio#fcntl()","Rails io#fdatasync()","Rails bignum#fdiv()","Rails complex#fdiv()","Rails fixnum#fdiv()","Rails float#fdiv()","Rails numeric#fdiv()","Rails rational#fdiv()","Rails enumerator#feed()","Rails rss::rootelementmixin#feed_info()","Ruby activesupport::cache::store#fetch()","Ruby activesupport::hashwithindifferentaccess#fetch()","Ruby activesupport::hashwithindifferentaccess#fetch()","Ruby recursivehttpfetcher#fetch()","Rails array#fetch()","Rails dbm#fetch()","Rails drb::timeridconv::timerholder2#fetch()","Rails env::fetch()","Rails gdbm#fetch()","Rails gem::specfetcher#fetch()","Rails gem::streamui::silentdownloadreporter#fetch()","Rails gem::streamui::verbosedownloadreporter#fetch()","Rails hash#fetch()","Rails net::httpheader#fetch()","Rails net::imap#fetch()","Rails pstore#fetch()","Rails rinda::tuple#fetch()","Rails rinda::tupleentry#fetch()","Rails sdbm#fetch()","Rails yaml::dbm#fetch()","Ruby recursivehttpfetcher#fetch_dir()","Rails gem::remotefetcher#fetch_file()","Rails gem::remotefetcher#fetch_http()","Rails gem::remotefetcher#fetch_https()","Rails gem::remotefetcher#fetch_path()","Rails drb::fetch_server()","Rails gem::remotefetcher#fetch_size()","Rails gem::specfetcher#fetch_spec()","Rails gem::specfetcher#fetch_with_errors()","Rails gem::remotefetcher::fetcher()","Rails gem::specfetcher::fetcher()","Rails dl::fiddle?()","Rails csv::row#field()","Rails csv::row#field?()","Rails csv::row#field_row?()","Ruby actionview::helpers::formtaghelper#field_set_tag()","Ruby rails::generators::generatedattribute#field_type()","Rails csv::row#fields()","Ruby actionview::helpers::formbuilder#fields_for()","Ruby actionview::helpers::formhelper#fields_for()","Ruby array#fifth()","Ruby rails::generators::appgenerator#file()","Rails argf#file()","Rails digest::class::file()","Rails digest::instance#file()","Rails file::file?()","Rails file::stat#file?()","Rails filetest#file?()","Rails gem::package::tarreader::entry#file?()","Rails pathname#file?()","Rails rdoc::generator::darkfish#file_dir()","Ruby actionview::helpers::formbuilder#file_field()","Ruby actionview::helpers::formhelper#file_field()","Rails cgi::htmlextension#file_field()","Ruby actionview::helpers::formtaghelper#file_field_tag()","Rails irb::context#file_input?()","Rails gem::specification#file_name()","Rails rdoc::codeobject#file_name()","Ruby rails::generators::namedbase#file_path()","Ruby activesupport::multibyte::unicode::unicodedatabase::filename()","Rails argf#filename()","Rails ripper::filter#filename()","Rails readline::filename_quote_characters()","Rails readline::filename_quote_characters=()","Rails argf#fileno()","Rails io#fileno()","Rails stringio#fileno()","Rails gem::specification#files()","Rails rdoc::toplevel::files()","Rails gem::specification#files=()","Rails rdoc::toplevel::files_hash()","Rails array#fill()","Rails prettyprint#fill_breakable()","Ruby actiondispatch::http::parameterfilter#filter()","Rails csv::filter()","Rails rexml::quickpath::filter()","Rails uri::ldap#filter()","Rails uri::ldap#filter=()","Rails irb::workspace#filter_backtrace()","Rails optionparser::parseerror::filter_backtrace()","Ruby rails::paths::root#filter_by()","Rails rdoc::ri::driver#filter_methods()","Ruby actiondispatch::http::filterparameters#filtered_env()","Ruby activemodel::validations::numericalityvalidator#filtered_options()","Ruby actiondispatch::http::filterparameters#filtered_parameters()","Ruby actiondispatch::http::filterparameters#filtered_path()","Ruby actiondispatch::http::filterparameters#filtered_query_string()","Rails openssl::cipher#final()","Ruby actionview::lookupcontext::viewpaths#find()","Ruby activerecord::findermethods#find()","Ruby activeresource::base::find()","Ruby plugin::find()","Ruby rails::engine::find()","Ruby rails::generators::activemodel::find()","Ruby railsenvironment::find()","Ruby sourceannotationextractor#find()","Rails encoding::find()","Rails enumerable#find()","Rails find::find()","Rails gem::gempathsearcher#find()","Rails irb::locale#find()","Rails pathname#find()","Rails rinda::tuplebag#find()","Rails rinda::tuplebag::tuplebin#find()","Rails gem::gempathsearcher#find_active()","Rails rdoc::parser::c#find_alias_comment()","Ruby actionview::lookupcontext::viewpaths#find_all()","Ruby actionview::resolver#find_all()","Rails enumerable#find_all()","Rails gem::gempathsearcher#find_all()","Rails rinda::tuplebag#find_all()","Rails gem::specification::find_all_by_name()","Rails rinda::tuplebag#find_all_template()","Rails rdoc::classmodule#find_ancestor_local_symbol()","Rails rdoc::parser::c#find_attr_comment()","Rails rdoc::context#find_attribute()","Rails rdoc::context#find_attribute_named()","Rails rdoc::parser::c#find_body()","Ruby activerecord::findermethods#find_by_attributes()","Rails gem::specification::find_by_name()","Rails gem::specification::find_by_path()","Ruby activerecord::sessionstore::session::find_by_session_id()","Ruby activerecord::sessionstore::sqlbypass::find_by_session_id()","Ruby activerecord::querying#find_by_sql()","Rails rdoc::parser::c#find_class()","Rails rdoc::parser::c#find_class_comment()","Rails rdoc::context#find_class_method_named()","Rails rdoc::classmodule#find_class_named()","Rails rdoc::toplevel::find_class_named()","Rails rdoc::toplevel::find_class_named_from()","Rails rdoc::toplevel#find_class_or_module()","Rails rdoc::toplevel::find_class_or_module()","Ruby rails::dbconsole#find_cmd()","Rails gem::commandmanager#find_command()","Rails gem::commandmanager#find_command_possibilities()","Rails rdoc::parser::c#find_const_comment()","Rails rdoc::context#find_constant_named()","Ruby activerecord::batches#find_each()","Rails rdoc::context#find_enclosing_module_named()","Rails object#find_executable()","Rails rdoc::context#find_external_alias()","Rails rdoc::context#find_external_alias_named()","Rails rdoc::context#find_file_named()","Rails rdoc::toplevel::find_file_named()","Rails gem::find_files()","Ruby activerecord::findermethods#find_first()","Rails rexml::node#find_first_recursive()","Rails gem::dependencyinstaller#find_gems_with_sources()","Rails object#find_header()","Ruby sourceannotationextractor#find_in()","Ruby activerecord::batches#find_in_batches()","Rails gem::commands::unpackcommand#find_in_cache()","Rails gem::gempathsearcher#find_in_unresolved()","Rails gem::specification::find_in_unresolved()","Rails gem::gempathsearcher#find_in_unresolved_tree()","Rails gem::specification::find_in_unresolved_tree()","Rails rdoc::markup::preprocess#find_include_file()","Rails array#find_index()","Rails enumerable#find_index()","Rails matrix#find_index()","Rails rdoc::context#find_instance_method_named()","Ruby activerecord::findermethods#find_last()","Rails object#find_library()","Rails rdoc::context#find_local_symbol()","Rails rdoc::toplevel#find_local_symbol()","Rails gem::specfetcher#find_matching()","Rails gem::specfetcher#find_matching_with_errors()","Rails rdoc::context#find_method()","Rails rdoc::context#find_method_named()","Rails rdoc::ri::driver#find_methods()","Rails rdoc::parser::c#find_modifiers()","Rails rdoc::context#find_module_named()","Rails rdoc::toplevel::find_module_named()","Rails rdoc::toplevel#find_module_named()","Rails gem::dependencylist#find_name()","Rails gem::sourceindex#find_name()","Ruby activerecord::findermethods#find_one()","Ruby activerecord::findermethods#find_or_instantiator_by_attributes()","Rails rdoc::parser::c#find_override_comment()","Rails gem::commands::whichcommand#find_paths()","Rails uri::generic#find_proxy()","Rails rake::application#find_rakefile_location()","Rails gem::commands::dependencycommand#find_reverse_dependencies()","Ruby rails::engine#find_root_with_flag()","Rails rake::altsystem#find_runnable()","Ruby activerecord::findermethods#find_some()","Rails gem::dependencyinstaller#find_spec_by_name_and_version()","Rails gem::gempathsearcher#find_spec_for_file()","Rails rdoc::context#find_symbol()","Rails rdoc::context#find_symbol_module()","Rails shell::commandprocessor#find_system_command()","Ruby actionview::lookupcontext::viewpaths#find_template()","Rails object#find_type()","Ruby activesupport::timezone::find_tzinfo()","Rails rdoc::toplevel::find_unique()","Ruby activerecord::findermethods#find_with_associations()","Ruby activerecord::findermethods#find_with_ids()","Ruby time::find_zone()","Ruby time::find_zone!()","Ruby activerecord::dynamicfindermatch#finder?()","Rails rinda::ringfinger::finger()","Rails encoding::converter#finish()","Rails net::http#finish()","Rails net::http#finish()","Rails net::pop3#finish()","Rails net::pop3#finish()","Rails net::pop3#finish()","Rails net::pop3#finish()","Rails net::smtp#finish()","Rails net::smtp#finish()","Rails openssl::engine#finish()","Rails psych::visitors::yamltree#finish()","Rails rdoc::options#finish()","Rails zlib::gzipfile#finish()","Rails zlib::zstream#finish()","Rails shell::commandprocessor#finish_all_jobs()","Ruby rails::generators::appgenerator#finish_template()","Ruby rails::generators::pluginnewgenerator#finish_template()","Rails threadswait#finished?()","Rails threadswait#finished?()","Rails zlib::zstream#finished?()","Ruby railsguides::helpers#finished_documents()","Rails bigdecimal#finite?()","Rails float#finite?()","Ruby activerecord::findermethods#first()","Ruby activeresource::base::first()","Ruby rails::paths::path#first()","Ruby string#first()","Rails array#first()","Rails enumerable#first()","Rails rexml::quickpath::first()","Rails rexml::xpath::first()","Rails rexml::xpathparser#first()","Rails range#first()","Ruby activerecord::findermethods#first!()","Rails prettyprint#first?()","Rails prettyprint::group#first?()","Rails prettyprint::singleline#first?()","Ruby activerecord::relation#first_or_create()","Ruby activerecord::relation#first_or_create!()","Ruby activerecord::relation#first_or_initialize()","Rails bigdecimal#fix()","Rails rdoc::toplevel::fix_basic_object_inheritance()","Rails regexp#fixed_encoding?()","Ruby activerecord::fixtures::fixture_is_cached?()","Ruby activerecord::testfixtures::classmethods#fixtures()","Rails webrick::httprequest#fixup()","Rails openssl::x509::store#flags=()","Ruby actiondispatch::request#flash()","Rails curses::flash()","Rails enumerable#flat_map()","Rails array#flatten()","Rails hash#flatten()","Rails set#flatten()","Rails array#flatten!()","Rails set#flatten!()","Rails file#flock()","Rails bigdecimal#floor()","Rails float#floor()","Rails integer#floor()","Rails numeric#floor()","Rails rexml::functions::floor()","Rails rational#floor()","Rails rdoc::markup::attributemanager#flow()","Ruby activesupport::bufferedlogger#flush()","Ruby activesupport::taggedlogging#flush()","Rails gem::package::tarwriter#flush()","Rails io#flush()","Rails openssl::buffering#flush()","Rails prettyprint#flush()","Rails prettyprint::singleline#flush()","Rails shell::systemcommand#flush()","Rails stringio#flush()","Rails webrick::httpauth::htdigest#flush()","Rails webrick::httpauth::htgroup#flush()","Rails webrick::httpauth::htpasswd#flush()","Rails win32::registry#flush()","Rails zlib::deflate#flush()","Rails zlib::gzipwriter#flush()","Ruby activesupport::logsubscriber::flush_all!()","Ruby activesupport::memoizable::instancemethods#flush_cache()","Rails rdoc::text#flush_left()","Rails zlib::zstream#flush_next_in()","Rails zlib::zstream#flush_next_out()","Rails openssl::ssl::sslcontext#flush_sessions()","Ruby activesupport::logsubscriber::flushable_loggers()","Rails file::fnmatch()","Rails pathname#fnmatch()","Rails file::fnmatch?()","Rails pathname#fnmatch?()","Ruby actionview::helpers::assettaghelper#font_path()","Ruby sprockets::helpers::railshelper#font_path()","Rails rdoc::parser::for()","Rails gem::specification#for_cache()","Ruby html::selector::for_class()","Rails basicsocket::for_fd()","Rails io::for_fd()","Rails sys#for_files()","Ruby html::selector::for_id()","Rails rdoc::codeobject#force_documentation=()","Rails string#force_encoding()","Rails csv#force_quotes?()","Ruby actioncontroller::forcessl::classmethods#force_ssl()","Rails addrinfo::foreach()","Rails csv::foreach()","Rails dir::foreach()","Rails io::foreach()","Rails net::pop3::foreach()","Rails net::pop3::foreach()","Rails net::pop3::foreach()","Rails net::pop3::foreach()","Rails shell::commandprocessor#foreach()","Ruby activesupport::inflector#foreign_key()","Ruby string#foreign_key()","Rails kernel#fork()","Rails process::fork()","Rails thread::fork()","Rails cgi::htmlextension#form()","Ruby actioncontroller::requestforgeryprotection#form_authenticity_param()","Ruby actioncontroller::requestforgeryprotection#form_authenticity_token()","Rails net::httpheader#form_data=()","Ruby actiondispatch::request#form_data?()","Ruby actionview::helpers::formhelper#form_for()","Ruby actionview::helpers::formtaghelper#form_tag()","Ruby actiondispatch::http::mimenegotiation#format()","Ruby activeresource::base::format()","Ruby erb::generators::mailergenerator#format()","Rails benchmark::tms#format()","Rails gem::installer#format()","Rails irb::locale#format()","Rails kernel#format()","Rails prettyprint::format()","Rails webrick::accesslog#format()","Ruby actiondispatch::http::mimenegotiation#format=()","Ruby activeresource::base::format=()","Rails net::imap::format_date()","Rails net::imap::format_datetime()","Ruby activesupport::logsubscriber#format_duration()","Rails debugger__#format_frame()","Ruby actionmailer::mailhelper#format_paragraph()","Rails gem::text#format_text()","Ruby actiondispatch::http::mimenegotiation#formats()","Ruby activesupport::timewithzone#formatted_offset()","Ruby activesupport::timezone#formatted_offset()","Ruby datetime#formatted_offset()","Ruby time#formatted_offset()","Rails gem::installer#formatted_program_filename()","Rails gem::uninstaller#formatted_program_filename()","Rails rdoc::generator::markup#formatter()","Rails rdoc::ri::driver#formatter()","Ruby numeric#fortnight()","Ruby numeric#fortnights()","Ruby array#forty_two()","Ruby array#fourth()","Rails bigdecimal#frac()","Rails uri::generic#fragment=()","Ruby actioncontroller::caching::fragments#fragment_cache_key()","Ruby actioncontroller::caching::fragments#fragment_exist?()","Rails debugger__#frame_set_pos()","Ruby actiondispatch::exceptionwrapper#framework_trace()","Ruby rails::info::framework_version()","Ruby rails::info::frameworks()","Rails dl::free()","Rails dl::cptr#free()","Rails dl::cptr#free()","Rails dl::cptr#free=()","Rails dl::cptr#free=()","Ruby activerecord::base#freeze()","Ruby activesupport::timewithzone#freeze()","Rails delegator#freeze()","Rails module#freeze()","Rails object#freeze()","Rails pathname#freeze()","Ruby activesupport::memoizable::instancemethods#freeze_with_memoizable()","Ruby actiondispatch::http::cache::request#fresh?()","Ruby actioncontroller::conditionalget#fresh_when()","Rails math::frexp()","Rails date#friday?()","Rails time#friday?()","Rails rdoc::ri::store#friendly_path()","Ruby activerecord::querymethods#from()","Ruby array#from()","Ruby string#from()","Rails gem::package::tarheader::from()","Ruby activeresource::errors#from_array()","Rails gem::format::from_file_by_path()","Rails gem::oldformat::from_file_by_path()","Rails gem::sourceindex::from_gems_in()","Rails gem::sourceindex::from_installed_gems()","Rails gem::format::from_io()","Rails gem::oldformat::from_io()","Ruby activemodel::serializers::json#from_json()","Ruby activeresource::errors#from_json()","Rails rdoc::classmodule::from_module()","Ruby activesupport::duration#from_now()","Ruby numeric#from_now()","Rails integer::from_prime_division()","Ruby actionview::logsubscriber#from_rails_root()","Rails gem::dependencylist::from_source_index()","Rails gem::dependencylist::from_specs()","Ruby hash::from_trusted_xml()","Ruby activemodel::serializers::xml#from_xml()","Ruby activeresource::errors#from_xml()","Ruby hash::from_xml()","Rails gem::specification::from_yaml()","Rails drb::front()","Rails drb::extserv#front()","Ruby activerecord::base#frozen?()","Rails array#frozen?()","Rails object#frozen?()","Rails io#fsync()","Rails stringio#fsync()","Rails file::ftype()","Rails file::stat#ftype()","Rails pathname#ftype()","Ruby rails::generators::pluginnewgenerator#full?()","Rails gem::specification#full_gem_path()","Ruby activemodel::errors#full_message()","Ruby activemodel::errors#full_messages()","Rails gem::package::tarreader::entry#full_name()","Rails gem::specification#full_name()","Rails rdoc::classmodule#full_name()","Rails rdoc::context#full_name()","Rails rdoc::include#full_name()","Rails rdoc::methodattr#full_name()","Rails rdoc::toplevel#full_name()","Rails rss::element#full_name()","Rails rss::ituneschannelmodel::itunescategory#full_name()","Rails rss::ituneschannelmodel::itunesimage#full_name()","Rails rss::ituneschannelmodel::itunesowner#full_name()","Rails rss::itunesitemmodel::itunesduration#full_name()","Rails rss::imagefaviconmodel::imagefavicon#full_name()","Rails rss::imageitemmodel::imageitem#full_name()","Rails rss::rdf#full_name()","Rails rss::rdf::bag#full_name()","Rails rss::rdf::bag#full_name()","Rails rss::rdf::li#full_name()","Rails rss::rdf::li#full_name()","Rails rss::rdf::li#full_name()","Rails rss::rdf::seq#full_name()","Rails rss::rdf::seq#full_name()","Rails rss::taxonomytopicmodel::taxonomytopic#full_name()","Rails rss::taxonomytopicsmodel::taxonomytopics#full_name()","Rails rss::trackbackmodel10::trackbackabout#full_name()","Rails rss::trackbackmodel10::trackbackping#full_name()","Rails rss::trackbackmodel20::trackbackabout#full_name()","Rails rss::trackbackmodel20::trackbackping#full_name()","Rails rss::xml::element#full_name()","Rails rdoc::codeobject#full_name=()","Rails rdoc::alias#full_old_name()","Ruby actiondispatch::exceptionwrapper#full_trace()","Ruby actiondispatch::request#fullpath()","Rails rdoc::context#fully_documented?()","Rails rdoc::stats#fully_documented?()","Rails rexml::namespace#fully_expanded_name()","Rails rexml::quickpath::function()","Ruby activesupport::timewithzone#future?()","Ruby date#future?()","Ruby datetime#future?()","Ruby time#future?()","Ruby activesupport::multibyte::chars#g_length()","Ruby activesupport::multibyte::unicode#g_pack()","Ruby activesupport::multibyte::unicode#g_unpack()","Rails math::gamma()","Rails gc#garbage_collect()","Rails objectspace::garbage_collect()","Rails gem::dependencyinstaller#gather_dependencies()","Rails rdoc::rdoc#gather_files()","Rails integer#gcd()","Rails integer#gcdlcm()","Ruby build#gem()","Ruby rails::generators::actions#gem()","Rails kernel#gem()","Rails gem::installer#gem_dir()","Rails gem::specification#gem_dir()","Rails gem::indexer#gem_file_list()","Ruby rails::generators::appbase#gem_for_database()","Ruby rails::generators::actions#gem_group()","Rails kernel#gem_original_require()","Rails gem::commands::whichcommand#gem_paths()","Rails gem::sourceindex#gem_signature()","Rails rdoc::ri::paths::gemdirs()","Ruby rails::appbuilder#gemfile()","Ruby rails::pluginbuilder#gemfile()","Rails gem::specification#gems_dir()","Ruby rails::pluginbuilder#gemspec()","Rails rdoc::markup::tohtml::gen_relative_url()","Rails rdoc::generator::darkfish#gen_sub_directories()","Rails rdoc::markup::tohtml#gen_url()","Rails rdoc::markup::tohtmlcrossref#gen_url()","Ruby activesupport::messageverifier#generate()","Ruby rails::generators::actions#generate()","Ruby railsguides::generator#generate()","Rails csv::generate()","Rails json#generate()","Rails openssl::pkey::dh::generate()","Rails openssl::pkey::dsa::generate()","Rails openssl::pkey::rsa::generate()","Rails rdoc::generator::darkfish#generate()","Rails rdoc::generator::ri#generate()","Rails rdoc::rdoc#generate()","Rails rdoc::rubygemshook#generate()","Rails gem::installer#generate_bin()","Rails gem::installer#generate_bin_script()","Rails gem::installer#generate_bin_symlink()","Rails rdoc::generator::darkfish#generate_class_files()","Rails gem::commands::setupcommand#generate_default_dirs()","Rails rexml::validation::state#generate_event()","Rails rdoc::generator::darkfish#generate_file_files()","Rails gem::indexer#generate_index()","Rails rdoc::generator::darkfish#generate_index()","Rails openssl::pkey::ec#generate_key()","Rails openssl::pkey::dh#generate_key!()","Rails csv::generate_line()","Ruby activemodel::errors#generate_message()","Ruby abstractcontroller::collector::generate_method_for_mime()","Rails openssl::bn::generate_prime()","Ruby rails::railtie::generate_railtie_name()","Rails gem::docmanager#generate_rdoc()","Rails gem::docmanager#generate_ri()","Ruby actiondispatch::session::compatibility#generate_sid()","Ruby rails::pluginbuilder#generate_test_dummy()","Rails gem::installer#generate_windows_script()","Ruby activerecord::attributemethods::classmethods#generated_external_attribute_methods()","Ruby activerecord::base::generated_feature_methods()","Rails rdoc::rubygemshook::generation_hook()","Rails openssl::pkey::ec::group#generator()","Rails rdoc::options#generator_descriptions()","Ruby rails::generators::generatorgenerator#generator_dir()","Ruby rails::generators::base::generator_name()","Ruby rails::railtie::generators()","Rails complex::generic?()","Ruby actiondispatch::routing::mapper::httphelpers#get()","Ruby activemodel::errors#get()","Ruby activerecord::identitymap::get()","Ruby activeresource::connection#get()","Ruby activeresource::custommethods#get()","Ruby activeresource::custommethods::get()","Ruby activesupport::dependencies::classcache#get()","Rails getoptlong#get()","Rails net::ftp#get()","Rails net::http#get()","Rails net::http#get()","Rails net::http::get()","Rails net::http::get()","Rails rdoc::markup::parser#get()","Rails net::http#get2()","Rails net::http#get2()","Ruby actiondispatch::request#get?()","Rails gem::command#get_all_gem_names()","Rails rexml::attributes#get_attribute()","Rails rexml::attributes#get_attribute_ns()","Rails rss::element::get_attributes()","Rails rdoc::parser::ruby#get_bool()","Ruby rails::generators::appgenerator#get_builder_class()","Ruby rails::generators::pluginnewgenerator#get_builder_class()","Rails stringscanner#get_byte()","Rails rdoc::parser::ruby#get_class_or_module()","Rails rdoc::parser::ruby#get_class_specification()","Rails rdoc::parser::ruby#get_constant()","Rails rdoc::parser::ruby#get_constant_with_optional_parens()","Rails xmlrpc::basicserver#get_default_handler()","Rails rexml::element#get_elements()","Rails net::httpheader#get_fields()","Rails rss::utils#get_file_and_line_from_caller()","Rails rexml::xpathparser#get_first()","Rails win32::resolv::get_hosts_path()","Rails win32::sspi::negotiateauth#get_initial_token()","Rails webrick::httpservlet::abstractservlet::get_instance()","Rails webrick::httpservlet::prochandler#get_instance()","Rails xmlrpc::webrickservlet#get_instance()","Rails gem::commands::unpackcommand#get_metadata()","Rails xmlrpc::service::interface#get_methods()","Rails xmlrpc::service::publicinstancemethodsinterface#get_methods()","Rails rexml::functions::get_namespace()","Rails gem::command#get_one_gem_name()","Rails gem::command#get_one_optional_argument()","Rails getoptlong#get_option()","Rails webrick::httpauth::htdigest#get_passwd()","Rails webrick::httpauth::htpasswd#get_passwd()","Rails webrick::httpauth::userdb#get_passwd()","Rails gem::commands::unpackcommand#get_path()","Rails net::http::get_print()","Rails net::http::get_print()","Rails gem::remotefetcher#get_proxy_from_env()","Rails rubylex#get_readed()","Rails win32::resolv::get_resolv_info()","Rails net::http::get_response()","Rails net::http::get_response()","Rails readline::get_screen_size()","Rails xmlrpc::basicserver#get_service_hook()","Ruby actiondispatch::session::cachestore#get_session()","Rails rdoc::generator::darkfish#get_sorted_module_list()","Rails rdoc::generator::darkfish#get_svninfo()","Rails rdoc::parser::ruby#get_symbol_or_name()","Rails rexml::element#get_text()","Rails debugger__::get_thread()","Rails rdoc::parser::rubytools#get_tk()","Rails rdoc::parser::rubytools#get_tk_until()","Rails rdoc::parser::rubytools#get_tkread()","Rails xmlrpc::webrickservlet#get_valid_ip()","Rails openssl::config#get_value()","Rails net::imap#getacl()","Rails ipsocket::getaddress()","Rails resolv::getaddress()","Rails resolv#getaddress()","Rails resolv::dns#getaddress()","Rails resolv::hosts#getaddress()","Rails ipsocket::getaddress_orig()","Rails resolv#getaddresses()","Rails resolv::getaddresses()","Rails resolv::dns#getaddresses()","Rails resolv::hosts#getaddresses()","Rails addrinfo::getaddrinfo()","Rails socket::getaddrinfo()","Rails net::ftp#getbinaryfile()","Rails curses::window#getbkgd()","Rails argf#getbyte()","Rails io#getbyte()","Rails string#getbyte()","Rails stringio#getbyte()","Rails stringscanner#getbyte()","Rails zlib::gzipreader#getbyte()","Rails argf#getc()","Rails gem::package::tarreader::entry#getc()","Rails io#getc()","Rails openssl::buffering#getc()","Rails rubylex#getc()","Rails stringio#getc()","Rails zlib::gzipreader#getc()","Rails rubylex#getc_of_rests()","Rails curses::getch()","Rails curses::window#getch()","Rails io#getch()","Rails io::readable#getch()","Rails stringscanner#getch()","Rails net::ftp#getdir()","Rails process::sys::getegid()","Rails process::sys::geteuid()","Rails process::sys::getgid()","Ruby activesupport::timewithzone#getgm()","Rails time#getgm()","Rails etc::getgrent()","Rails etc::getgrgid()","Rails etc::getgrnam()","Rails socket::gethostbyaddr()","Rails socket::gethostbyname()","Rails tcpsocket::gethostbyname()","Rails socket::gethostname()","Ruby activesupport::timewithzone#getlocal()","Rails time#getlocal()","Rails etc::getlogin()","Rails curses::getmouse()","Rails resolv#getname()","Rails resolv::getname()","Rails resolv::dns#getname()","Rails resolv::hosts#getname()","Rails addrinfo#getnameinfo()","Rails socket::getnameinfo()","Rails resolv#getnames()","Rails resolv::getnames()","Rails resolv::dns#getnames()","Rails resolv::hosts#getnames()","Rails optionparser::getopts()","Rails optionparser#getopts()","Rails optionparser::arguable#getopts()","Rails basicsocket#getpeereid()","Rails basicsocket#getpeername()","Rails process::getpgid()","Rails process::getpgrp()","Rails process::getpriority()","Rails pty::getpty()","Rails etc::getpwent()","Rails etc::getpwnam()","Rails etc::getpwuid()","Rails net::imap#getquota()","Rails net::imap#getquotaroot()","Rails resolv::dns#getresource()","Rails resolv::dns#getresources()","Rails process::getrlimit()","Rails argf#gets()","Rails csv#gets()","Rails io#gets()","Rails irb::fileinputmethod#gets()","Rails irb::inputmethod#gets()","Rails irb::locale#gets()","Rails irb::readlineinputmethod#gets()","Rails irb::stdioinputmethod#gets()","Rails kernel#gets()","Rails openssl::buffering#gets()","Rails rubylex#gets()","Rails stringio#gets()","Rails webrick::cgi::socket#gets()","Rails webrick::nullreader::gets()","Rails xmp::stringinputmethod#gets()","Rails zlib::gzipreader#gets()","Rails socket::getservbyname()","Rails socket::getservbyport()","Rails drb::drbtcpsocket::getservername()","Rails webrick::utils::getservername()","Rails basicsocket#getsockname()","Rails basicsocket#getsockopt()","Rails openssl::ssl::socketforwarder#getsockopt()","Rails curses::getstr()","Rails curses::window#getstr()","Rails rss::baselistener::getter()","Rails net::ftp#gettextfile()","Rails process::sys::getuid()","Ruby activesupport::timewithzone#getutc()","Ruby datetime#getutc()","Rails time#getutc()","Rails dir::getwd()","Rails fileutils::getwd()","Rails pathname::getwd()","Rails file::stat#gid()","Rails process::gid()","Rails process::gid=()","Ruby numeric#gigabyte()","Ruby numeric#gigabytes()","Ruby rails::generators::actions#git()","Ruby rails::generators::appbase#git_keep()","Ruby plugin#git_url?()","Ruby ","Ruby ","Ruby rails::appbuilder#gitignore()","Ruby rails::pluginbuilder#gitignore()","Rails dir::glob()","Rails pathname::glob()","Rails shell::commandprocessor#glob()","Ruby rails::plugin::global_plugins()","Rails kernel#global_variables()","Rails time::gm()","Ruby activesupport::timewithzone#gmt?()","Rails time#gmt?()","Ruby activesupport::timewithzone#gmt_offset()","Rails time#gmt_offset()","Ruby activesupport::timewithzone#gmtime()","Rails time#gmtime()","Ruby activesupport::timewithzone#gmtoff()","Rails time#gmtoff()","Rails process::gid::grant_privilege()","Rails process::uid::grant_privilege()","Rails rdoc::stats#great_job()","Rails date#gregorian()","Rails date#gregorian?()","Rails date::gregorian_leap?()","Rails enumerable#grep()","Ruby activerecord::querymethods#group()","Rails etc::group()","Rails openssl::pkey::ec#group()","Rails prettyprint#group()","Rails prettyprint::singleline#group()","Rails thread#group()","Rails openssl::pkey::ec#group=()","Ruby enumerable#group_by()","Rails enumerable#group_by()","Rails prettyprint#group_sub()","Ruby actionview::helpers::formbuilder#grouped_collection_select()","Ruby actionview::helpers::formoptionshelper#grouped_collection_select()","Ruby actionview::helpers::formoptionshelper#grouped_options_for_select()","Ruby rails::groups()","Rails process::groups()","Rails process::groups=()","Rails file::grpowned?()","Rails file::stat#grpowned?()","Rails filetest#grpowned?()","Rails pathname#grpowned?()","Rails kernel#gsub()","Rails string#gsub()","Rails string#gsub!()","Rails pp::ppmethods#guard_inspect_key()","Rails kconv::guess()","Rails nkf::guess()","Rails optionparser::switch::guess()","Rails win32ole_type#guid()","Rails win32ole_typelib#guid()","Ruby railsguides::helpers#guide()","Rails gem::gunzip()","Rails gem::gzip()","Rails gem::indexer#gzip()","Ruby erb::util::h()","Rails erb::util::h()","Rails rss::utils#h()","Ruby actioncontroller::httpauthentication::digest#ha1()","Ruby actioncontroller::logsubscriber#halted_callback()","Rails rdoc::markup::preprocess#handle()","Rails gem::configfile#handle_arguments()","Rails rdoc::parser::c#handle_attr()","Rails rdoc::parser::c#handle_class_module()","Rails rdoc::parser::c#handle_constants()","Rails rdoc::markup::preprocess#handle_directive()","Rails rdoc::parser::c#handle_ifdefs_in()","Rails rdoc::parser::c#handle_method()","Rails gem::command#handle_options()","Rails rake::application#handle_options()","Rails rdoc::rdoc#handle_pipe()","Rails rdoc::parser::c#handle_singleton()","Rails rdoc::markup::tohtmlcrossref#handle_special_crossref()","Rails rdoc::markup::tohtml#handle_special_hyperlink()","Rails rdoc::markup::tohtmlcrossref#handle_special_hyperlink()","Rails rdoc::markup::tordoc#handle_special_suppressed_crossref()","Rails rdoc::markup::tohtml#handle_special_tidylink()","Rails rdoc::parser::c#handle_tab_width()","Ruby actioncontroller::requestforgeryprotection#handle_unverified_request()","Rails dl::importer#handler()","Rails win32ole_event#handler()","Rails win32ole_event#handler=()","Ruby activesupport::rescuable#handler_for_rescue()","Rails dl::compositehandler#handlers()","Rails gem::command#handles?()","Ruby actionview::template::handlers::erb#handles_encoding?()","Rails nqxml::node#haschildnodes()","Ruby activerecord::associations::classmethods#has_and_belongs_to_many()","Rails rexml::element#has_attributes?()","Rails curses::has_colors?()","Rails rexml::element#has_elements?()","Ruby actioncontroller::responder#has_errors?()","Rails rinda::tuplebag#has_expires?()","Ruby rails::generators::generatedattribute#has_index?()","Ruby activemodel::errors#has_key?()","Ruby activesupport::hashwithindifferentaccess#has_key?()","Ruby activesupport::hashwithindifferentaccess#has_key?()","Rails cgi::queryextension#has_key?()","Rails dbm#has_key?()","Rails env::has_key?()","Rails gdbm#has_key?()","Rails hash#has_key?()","Rails sdbm#has_key?()","Ruby activerecord::associations::classmethods#has_many()","Ruby rails::engine#has_migrations?()","Rails rexml::light::node#has_name?()","Rails rexml::namespace#has_name?()","Rails rexml::parsers::baseparser#has_next?()","Ruby activerecord::associations::classmethods#has_one()","Rails gem::specification#has_rdoc()","Rails gem::specification#has_rdoc=()","Rails gem::specification#has_rdoc?()","Ruby activemodel::securepassword::classmethods#has_secure_password()","Rails rexml::element#has_text?()","Ruby rails::generators::generatedattribute#has_uniq_index?()","Rails gem::specification#has_unit_tests?()","Rails dbm#has_value?()","Rails env::has_value?()","Rails gdbm#has_value?()","Rails hash#has_value?()","Rails sdbm#has_value?()","Rails yaml::dbm#has_value?()","Ruby activerecord::base#hash()","Ruby activeresource::base#hash()","Ruby activesupport::timewithzone#hash()","Rails array#hash()","Rails bigdecimal#hash()","Rails bignum#hash()","Rails drb::drbobject#hash()","Rails float#hash()","Rails hash#hash()","Rails ipaddr#hash()","Rails matchdata#hash()","Rails matrix#hash()","Rails method#hash()","Rails object#hash()","Rails openssl::x509::name#hash()","Rails proc#hash()","Rails rdoc::toplevel#hash()","Rails rexml::attribute#hash()","Rails range#hash()","Rails regexp#hash()","Rails string#hash()","Rails struct#hash()","Rails time#hash()","Rails uri::generic#hash()","Rails unboundmethod#hash()","Rails vector#hash()","Rails openssl::x509::name#hash_old()","Rails rss::atom::entry#have_author?()","Rails rss::atom::feed#have_author?()","Rails rss::atom::feed::entry#have_author?()","Rails rss::atom::feed::entry::source#have_author?()","Rails rss::element::have_children_elements()","Rails object#have_const()","Rails rss::element::have_content?()","Rails object#have_framework()","Rails object#have_func()","Rails object#have_header()","Rails object#have_library()","Rails object#have_macro()","Rails rake::application#have_rakefile()","Rails rss::element#have_required_elements?()","Rails rss::maker::atom::feed::channel#have_required_values?()","Rails rss::maker::atom::feed::items::item#have_required_values?()","Rails rss::maker::base#have_required_values?()","Rails rss::maker::ituneschannelmodel::itunescategoriesbase::itunescategorybase#have_required_values?()","Rails rss::maker::imagefaviconmodel::imagefaviconbase#have_required_values?()","Rails rss::maker::imageitemmodel::imageitembase#have_required_values?()","Rails rss::maker::rss10::image#have_required_values?()","Rails rss::maker::rss10::textinput#have_required_values?()","Rails rss::maker::taxonomytopicmodel::taxonomytopicsbase::taxonomytopicbase#have_required_values?()","Rails rss::maker::trackbackmodel::trackbackaboutsbase::trackbackaboutbase#have_required_values?()","Rails object#have_struct_member()","Rails object#have_type()","Rails object#have_var()","Rails rss::atom::feed::entry::content#have_xml_content?()","Rails rss::atom::textconstruct#have_xml_content?()","Rails rss::element#have_xml_content?()","Ruby activerecord::querymethods#having()","Ruby actioncontroller::head#head()","Ruby activeresource::connection#head()","Rails net::http#head()","Rails net::http#head()","Rails net::http#head2()","Rails net::http#head2()","Ruby actiondispatch::request#head?()","Rails cgi#header()","Rails net::popmail#header()","Rails csv::row#header?()","Rails csv#header_convert()","Rails csv#header_converters()","Rails csv#header_row?()","Rails csv::row#header_row?()","Ruby actiondispatch::request#headers()","Ruby actionmailer::base#headers()","Ruby activeresource::base::headers()","Rails csv#headers()","Rails csv::row#headers()","Rails csv::table#headers()","Rails uri::mailto#headers=()","Ruby build#heading()","Rails foo#hello()","Rails net::smtp#helo()","Rails net::smtp#helo()","Ruby rails::generators::help()","Rails net::ftp#help()","Rails object#help()","Rails optionparser#help()","Rails ","Rails ","Rails win32ole_method#helpcontext()","Rails win32ole_type#helpcontext()","Ruby abstractcontroller::helpers::classmethods#helper()","Ruby rails::consolemethods#helper()","Ruby actioncontroller::helpers::classmethods#helper_attr()","Ruby abstractcontroller::helpers::classmethods#helper_method()","Ruby actioncontroller::helpers::classmethods#helpers()","Ruby rails::engine#helpers()","Ruby rails::engine#helpers_paths()","Rails win32ole_method#helpfile()","Rails win32ole_type#helpfile()","Rails win32ole_method#helpstring()","Rails win32ole_type#helpstring()","Rails drb::here?()","Rails drb::drbserver#here?()","Rails matrix#hermitian?()","Rails securerandom::hex()","Rails string#hex()","Rails digest::class::hexdigest()","Rails digest::instance#hexdigest()","Rails openssl::hmac#hexdigest()","Rails openssl::hmac::hexdigest()","Rails digest::instance#hexdigest!()","Rails digest::hexencode()","Rails cgi::htmlextension#hidden()","Ruby abstractcontroller::base::hidden_actions()","Ruby actionview::helpers::formbuilder#hidden_field()","Ruby actionview::helpers::formhelper#hidden_field()","Ruby actionview::helpers::formtaghelper#hidden_field_tag()","Ruby rails::generators::hidden_namespaces()","Ruby actioncontroller::hideactions::classmethods#hide_action()","Ruby rails::generators::hide_namespace()","Ruby rails::generators::hide_namespaces()","Rails uri::generic#hierarchical?()","Rails uri::ldap#hierarchical?()","Ruby actionview::helpers::texthelper#highlight()","Rails irb::context#history_file()","Rails irb::context#history_file=()","Rails dir::home()","Rails irb::context#home_workspace()","Ruby rails::generators::base::hook_for()","Ruby actiondispatch::http::url#host()","Rails gem::host()","Rails webrick::httprequest#host()","Rails gem::host=()","Rails uri::generic#host=()","Ruby actiondispatch::http::url#host_with_port()","Rails uri::generic#hostname()","Rails uri::generic#hostname=()","Ruby numeric#hour()","Rails time#hour()","Rails rss::itunesitemmodel::itunesduration#hour=()","Rails rss::maker::itunesitemmodel::itunesdurationbase#hour=()","Rails xmlrpc::datetime#hour=()","Ruby numeric#hours()","Rails rss::xmlstylesheet#href=()","Rails cgi::htmlextension#html()","Ruby mime::type#html?()","Ruby erb::util::html_escape()","Rails erb::util::html_escape()","Rails rss::utils#html_escape()","Rails rdoc::markup::tohtml#html_list_name()","Rails rdoc::alias#html_name()","Rails rdoc::methodattr#html_name()","Ruby string#html_safe()","Ruby activesupport::safebuffer#html_safe?()","Ruby numeric#html_safe?()","Ruby object#html_safe?()","Rails ipaddr#hton()","Ruby actioncontroller::httpauthentication::basic::controllermethods::classmethods#http_basic_authenticate_with()","Rails net::http::http_default_port()","Rails net::http::http_default_port()","Rails rdoc::context#http_url()","Rails rdoc::toplevel#http_url()","Rails object#httpd()","Ruby activesupport::timewithzone#httpdate()","Rails date#httpdate()","Rails date::httpdate()","Rails datetime::httpdate()","Rails time#httpdate()","Rails time::httpdate()","Rails gem::remotefetcher#https?()","Rails net::http::https_default_port()","Rails net::http::https_default_port()","Ruby activemodel::name#human()","Ruby activesupport::inflector::inflections#human()","Ruby activemodel::translation#human_attribute_name()","Ruby rails::generators::generatedattribute#human_name()","Ruby rails::generators::namedbase#human_name()","Ruby activesupport::inflector#humanize()","Ruby string#humanize()","Rails math::hypot()","Rails numeric#i()","Ruby activemodel::translation#i18n_scope()","Ruby rails::generators::namedbase#i18n_scope()","Rails xmlrpc::ipimethods()","Rails rss::maker::channelbase#icon()","Rails rss::maker::channelbase#icon=()","Rails iconv::iconv()","Rails iconv#iconv()","Rails json::iconv()","Ruby activerecord::attributemethods::primarykey#id()","Ruby activeresource::base#id()","Ruby nilclass#id()","Rails openssl::engine#id()","Rails openssl::ssl::session#id()","Rails rexml::functions::id()","Rails symbol#id2name()","Ruby activerecord::attributemethods::primarykey#id=()","Ruby activeresource::base#id=()","Ruby activerecord::attributemethods::primarykey#id?()","Ruby activeresource::base#id_from_response()","Rails syslog::ident()","Rails file::identical?()","Rails filetest#identical?()","Rails fileutils::identical?()","Ruby activerecord::fixtures::identify()","Rails rubylex#identify_comment()","Rails rubylex#identify_gvar()","Rails rubylex#identify_here_document()","Rails rubylex#identify_identifier()","Rails rubylex#identify_number()","Rails rubylex#identify_quotation()","Rails rubylex#identify_string()","Rails rubylex#identify_string_dvar()","Ruby activerecord::logsubscriber#identity()","Rails matrix::identity()","Ruby build#identity_map?()","Rails net::imap#idle()","Rails net::imap#idle_done()","Rails curses::window#idlok()","Ruby actiondispatch::http::cache::request#if_modified_since()","Ruby actiondispatch::http::cache::request#if_none_match()","Rails io#iflush()","Rails rdoc::codeobject#ignore()","Rails rss::baseparser#ignore_unknown_element()","Rails rss::baseparser#ignore_unknown_element=()","Rails rexml::element#ignore_whitespace_nodes()","Rails rdoc::codeobject#ignored?()","Rails complex#imag()","Rails matrix#imag()","Rails numeric#imag()","Rails rss::rss#image()","Ruby actionview::helpers::assettaghelper#image_alt()","Rails cgi::htmlextension#image_button()","Ruby actionview::helpers::assettaghelper#image_path()","Ruby sprockets::helpers::railshelper#image_path()","Rails rss::imagefaviconmodel::imagefavicon#image_size=()","Ruby actionview::helpers::formtaghelper#image_submit_tag()","Ruby actionview::helpers::assettaghelper#image_tag()","Rails complex#imaginary()","Rails matrix#imaginary()","Rails numeric#imaginary()","Rails cgi::htmlextension#img()","Rails win32ole_type#implemented_ole_types()","Rails dl::importer#import_function()","Rails dl::importer#import_symbol()","Rails dl::importer#import_value()","Ruby date#in()","Ruby datetime#in()","Ruby time#in()","Ruby object#in?()","Ruby activesupport::multibyte::unicode#in_char_class?()","Ruby activerecord::connectionadapters::databaselimits#in_clause_length()","Ruby array#in_groups()","Ruby array#in_groups_of()","Rails rake::taskmanager#in_namespace()","Rails rdoc::ri::driver#in_path?()","Ruby rails::scriptrailsloader::in_rails_application?()","Ruby rails::scriptrailsloader::in_rails_application_subdirectory?()","Rails gserver::in_service?()","Ruby activesupport::timewithzone#in_time_zone()","Ruby datetime#in_time_zone()","Ruby time#in_time_zone()","Rails rdoc::markup::formatter#in_tt?()","Rails shell::processcontroller::inactivate()","Rails optionparser::inc()","Rails optionparser#inc()","Rails curses::inch()","Rails curses::window#inch()","Rails rake::filelist#include()","Ruby activemodel::errors#include?()","Ruby activemodel::massassignmentsecurity::permissionset#include?()","Ruby activesupport::hashwithindifferentaccess#include?()","Ruby activesupport::hashwithindifferentaccess#include?()","Ruby activesupport::multibyte::chars#include?()","Rails array#include?()","Rails cgi::queryextension#include?()","Rails csv::row#include?()","Rails dbm#include?()","Rails drb::timeridconv::timerholder2#include?()","Rails env::include?()","Rails enumerable#include?()","Rails gdbm#include?()","Rails hash#include?()","Rails ipaddr#include?()","Rails module#include?()","Rails rexml::attlistdecl#include?()","Rails range#include?()","Rails sdbm#include?()","Rails set#include?()","Rails string#include?()","Ruby rails::generators::appbase#include_all_railties?()","Ruby i18n::railtie::include_fallbacks_module()","Rails rdoc::markup::preprocess#include_file()","Ruby actionview::helpers::assettaghelper::assetincludetag#include_tag()","Ruby range#include_with_range?()","Ruby activerecord::connectionadapters::querycache::included()","Ruby activesupport::concern#included()","Ruby activesupport::memoizable::instancemethods::included()","Ruby rails::initializable::included()","Rails rss::maker::atomtextconstructbase::ensurexmlcontent::included()","Rails module#included_modules()","Ruby activerecord::querymethods#includes()","Rails optionparser::switch::incompatible_argument_styles()","Rails optionparser::switch::noargument::incompatible_argument_styles()","Rails encoding::invalidbytesequenceerror#incomplete_input?()","Ruby activerecord::persistence#increment()","Ruby activesupport::cache::filestore#increment()","Ruby activesupport::cache::memorystore#increment()","Ruby activesupport::cache::nullstore#increment()","Ruby activesupport::cache::store#increment()","Ruby activerecord::persistence#increment!()","Ruby activerecord::countercache#increment_counter()","Ruby activerecord::connectionadapters::abstractadapter#increment_open_transactions()","Ruby rails::generators::namedbase#indent()","Rails rexml::node#indent()","Rails rexml::text#indent_text()","Rails psych::emitter#indentation()","Rails psych::emitter#indentation=()","Ruby actioncontroller::middleware#index()","Ruby activerecord::connectionadapters::table#index()","Ruby activesupport::multibyte::chars#index()","Ruby homecontroller#index()","Ruby postscontroller#index()","Ruby railsguides::indexer#index()","Rails array#index()","Rails csv::row#index()","Rails env::index()","Rails matrix#index()","Rails rexml::elements#index()","Rails rexml::parent#index()","Rails sdbm#index()","Rails string#index()","Rails yaml::dbm#index()","Ruby enumerable#index_by()","Ruby activerecord::connectionadapters::schemastatements#index_exists?()","Ruby activerecord::connectionadapters::table#index_exists?()","Ruby rails::generators::namedbase#index_helper()","Rails rexml::node#index_in_parent()","Ruby rails::generators::generatedattribute#index_name()","Ruby activerecord::connectionadapters::schemastatements#index_name_exists?()","Ruby activerecord::connectionadapters::schemastatements#index_name_for_remove()","Ruby activerecord::connectionadapters::databaselimits#index_name_length()","Ruby activerecord::connectionadapters::postgresqladapter#index_name_length()","Rails gem::sourceindex#index_signature()","Ruby activerecord::connectionadapters::postgresqladapter#indexes()","Ruby activerecord::connectionadapters::databaselimits#indexes_per_table()","Rails sys#indir()","Rails bigdecimal#infinite?()","Rails float#infinite?()","Rails openssl::pkey::ec::point#infinity?()","Rails gem::inflate()","Rails zlib::inflate()","Rails zlib::inflate::inflate()","Rails zlib::inflate#inflate()","Ruby activesupport::inflector#inflections()","Ruby plugin#info()","Rails logger#info()","Rails webrick::basiclog#info()","Rails win32::registry#info()","Rails logger#info?()","Rails webrick::basiclog#info?()","Rails webrick::httpstatus::info?()","Ruby activesupport::inheritableoptions#inheritable_copy()","Ruby activerecord::modelschema::classmethods#inheritance_column()","Ruby activerecord::modelschema::classmethods#inheritance_column=()","Ruby abstractcontroller::helpers::classmethods#inherited()","Ruby abstractcontroller::layouts::classmethods#inherited()","Ruby actioncontroller::paramswrapper::classmethods#inherited()","Ruby actionview::helpers::assettaghelper::assetincludetag::inherited()","Ruby activemodel::observing::classmethods#inherited()","Ruby activemodel::validations::classmethods#inherited()","Ruby activesupport::descendantstracker#inherited()","Ruby rails::application::inherited()","Ruby rails::engine::inherited()","Ruby rails::plugin::inherited()","Ruby rails::railtie::inherited()","Ruby rails::railtie::configurable::classmethods#inherited()","Rails rss::element::inherited()","Rails rss::maker::base::inherited()","Rails rss::utils::inheritedreader#inherited_array_reader()","Rails rss::element::inherited_base()","Rails rss::maker::base::inherited_base()","Rails rss::utils::inheritedreader#inherited_hash_reader()","Rails rss::utils::inheritedreader#inherited_reader()","Rails gem::packagetask#init()","Rails irb::inspector#init()","Rails rake::application#init()","Rails rake::packagetask#init()","Rails curses::init_color()","Rails irb::init_config()","Rails irb::init_error()","Ruby i18n::railtie::init_fallbacks()","Rails gem::gempathsearcher#init_gemspecs()","Rails curses::init_pair()","Rails irb::context#init_save_history()","Rails curses::init_screen()","Rails rdoc::markup::toansi#init_tags()","Rails rdoc::markup::tobs#init_tags()","Rails rdoc::markup::tohtml#init_tags()","Rails rdoc::markup::tordoc#init_tags()","Ruby activerecord::base#init_with()","Rails process::initgroups()","Rails shell::commandprocessor::initialize()","Ruby rails::initialize!()","Ruby actiondispatch::flash::flashhash#initialize_copy()","Ruby actiondispatch::middlewarestack#initialize_copy()","Ruby activerecord::relation#initialize_copy()","Ruby activesupport::orderedhash#initialize_copy()","Ruby activesupport::safebuffer#initialize_copy()","Rails array#initialize_copy()","Rails gem::specification#initialize_copy()","Rails hash#initialize_copy()","Rails openstruct#initialize_copy()","Rails set#initialize_copy()","Rails string#initialize_copy()","Rails zlib::deflate#initialize_copy()","Ruby activemodel::errors#initialize_dup()","Ruby activerecord::base#initialize_dup()","Ruby activerecord::timestamp#initialize_dup()","Ruby rails::engine#initialize_generators()","Rails net::httpheader#initialize_http_header()","Ruby i18n::railtie::initialize_i18n()","Rails rubylex#initialize_input()","Rails rdoc::context#initialize_methods_etc()","Ruby activerecord::connectionadapters::schemastatements#initialize_schema_migrations_table()","Ruby actiondispatch::session::compatibility#initialize_sid()","Ruby actioncontroller::compatibility#initialize_template_class()","Rails irb::initialize_tracer()","Ruby rails::initialized=()","Ruby rails::initialized?()","Ruby rails::generators::actions#initializer()","Ruby rails::initializable::classmethods#initializer()","Ruby rails::engine#initializers()","Ruby rails::initializable#initializers()","Ruby rails::initializable::classmethods#initializers()","Ruby rails::initializable::classmethods#initializers_chain()","Ruby rails::initializable::classmethods#initializers_for()","Rails enumerable#inject()","Rails rexml::elements#inject()","Ruby rails::generators::generatedattribute#inject_index_options()","Ruby rails::generators::generatedattribute#inject_options()","Rails rss::atom::feed::entry::content#inline_html?()","Rails rss::maker::itemsbase::itembase::contentbase#inline_html?()","Rails rss::atom::feed::entry::content#inline_other?()","Rails rss::maker::itemsbase::itembase::contentbase#inline_other?()","Rails rss::atom::feed::entry::content#inline_other_base64?()","Rails rss::maker::itemsbase::itembase::contentbase#inline_other_base64?()","Rails rss::atom::feed::entry::content#inline_other_text?()","Rails rss::maker::itemsbase::itembase::contentbase#inline_other_text?()","Rails rss::atom::feed::entry::content#inline_other_xml?()","Rails rss::maker::itemsbase::itembase::contentbase#inline_other_xml?()","Rails rss::atom::feed::entry::content#inline_text?()","Rails rss::maker::itemsbase::itembase::contentbase#inline_text?()","Rails rss::atom::feed::entry::content#inline_xhtml?()","Rails rss::maker::itemsbase::itembase::contentbase#inline_xhtml?()","Rails vector#inner_product()","Rails file::stat#ino()","Rails argf#inplace_mode()","Rails argf#inplace_mode=()","Rails gem::mockgemui#input()","Rails readline::input=()","Rails shell::appendfile#input=()","Rails shell::appendio#input=()","Rails shell::filter#input=()","Rails shell::systemcommand#input=()","Rails win32ole_param#input?()","Ruby string#inquiry()","Rails curses::insch()","Rails curses::window#insch()","Ruby activemodel::massassignmentsecurity::strictsanitizer#insensitive_attributes()","Ruby actiondispatch::middlewarestack#insert()","Ruby activerecord::connectionadapters::databasestatements#insert()","Ruby activerecord::relation#insert()","Ruby activesupport::multibyte::chars#insert()","Rails array#insert()","Rails irb::jobmanager#insert()","Rails string#insert()","Ruby actiondispatch::middlewarestack#insert_after()","Rails rexml::parent#insert_after()","Ruby actiondispatch::middlewarestack#insert_before()","Rails rexml::parent#insert_before()","Ruby activerecord::connectionadapters::databasestatements#insert_fixture()","Rails encoding::converter#insert_output()","Ruby activerecord::connectionadapters::databasestatements#insert_sql()","Ruby activerecord::connectionadapters::mysql2adapter#insert_sql()","Ruby activerecord::connectionadapters::postgresqladapter#insert_sql()","Rails curses::insertln()","Rails curses::window#insertln()","Ruby rails::generators::namedbase#inside_template()","Ruby rails::generators::namedbase#inside_template?()","Ruby actiondispatch::middlewarestack::middleware#inspect()","Ruby actionview::template#inspect()","Ruby activerecord::base#inspect()","Ruby activerecord::base::inspect()","Ruby activerecord::relation#inspect()","Ruby activesupport::orderedhash#inspect()","Ruby activesupport::timewithzone#inspect()","Ruby date#inspect()","Ruby datetime#inspect()","Ruby rails::info::inspect()","Rails addrinfo#inspect()","Rails array#inspect()","Rails bigdecimal#inspect()","Rails csv#inspect()","Rails csv::row#inspect()","Rails csv::table#inspect()","Rails complex#inspect()","Rails dl::cfunc#inspect()","Rails dl::cptr#inspect()","Rails dl::cptr#inspect()","Rails date#inspect()","Rails digest::hmac#inspect()","Rails digest::instance#inspect()","Rails dir#inspect()","Rails env::inspect()","Rails encoding#inspect()","Rails encoding::converter#inspect()","Rails enumerator#inspect()","Rails exception#inspect()","Rails file::stat#inspect()","Rails gem::platform#inspect()","Rails hash#inspect()","Rails io#inspect()","Rails ipaddr#inspect()","Rails irb::context#inspect()","Rails irb::history#inspect()","Rails irb::irb#inspect()","Rails irb::jobmanager#inspect()","Rails irb::slex#inspect()","Rails iconv::failure#inspect()","Rails matchdata#inspect()","Rails matrix#inspect()","Rails method#inspect()","Rails net::http#inspect()","Rails net::http#inspect()","Rails net::httpgenericrequest#inspect()","Rails net::httpresponse#inspect()","Rails net::pop3#inspect()","Rails net::pop3#inspect()","Rails net::pop3#inspect()","Rails net::pop3#inspect()","Rails net::popmail#inspect()","Rails net::smtp#inspect()","Rails net::smtp#inspect()","Rails nilclass#inspect()","Rails object#inspect()","Rails openssl::config#inspect()","Rails openssl::engine#inspect()","Rails openssl::hmac#inspect()","Rails openssl::x509::certificate#inspect()","Rails openstruct#inspect()","Rails optionparser::parseerror#inspect()","Rails process::status#inspect()","Rails rexml::attribute#inspect()","Rails rexml::element#inspect()","Rails rexml::instruction#inspect()","Rails rexml::parsers::pullevent#inspect()","Rails rexml::text#inspect()","Rails rexml::validation::choice#inspect()","Rails rexml::validation::event#inspect()","Rails rexml::validation::interleave#inspect()","Rails rexml::validation::ref#inspect()","Rails rexml::validation::state#inspect()","Rails rexml::xmldecl#inspect()","Rails rake::task#inspect()","Rails rake::taskarguments#inspect()","Rails range#inspect()","Rails rational#inspect()","Rails regexp#inspect()","Rails rubyvm::instructionsequence#inspect()","Rails set#inspect()","Rails shell#inspect()","Rails shell::filter#inspect()","Rails socket::ancillarydata#inspect()","Rails socket::option#inspect()","Rails string#inspect()","Rails stringscanner#inspect()","Rails struct#inspect()","Rails symbol#inspect()","Rails syslog::inspect()","Rails thread#inspect()","Rails time#inspect()","Rails uri::generic#inspect()","Rails uri::parser#inspect()","Rails unboundmethod#inspect()","Rails vector#inspect()","Rails win32ole_method#inspect()","Rails win32ole_param#inspect()","Rails win32ole_type#inspect()","Rails win32ole_typelib#inspect()","Rails win32ole_variable#inspect()","Rails win32::registry#inspect()","Rails zlib::gzipfile::error#inspect()","Rails irb::context#inspect?()","Rails irb::context#inspect_last_value()","Rails irb::context#inspect_mode=()","Rails addrinfo#inspect_sockaddr()","Rails irb::inspector#inspect_value()","Ruby plugin#install()","Ruby railsenvironment#install()","Rails fileutils::install()","Rails gem::dependencyinstaller#install()","Rails gem::installer#install()","Rails object#install()","Rails sys#install()","Rails drb::install_acl()","Rails irb::extendcommandbundle#install_alias_method()","Rails irb::extendcommandbundle#install_alias_method()","Rails shell::commandprocessor::install_builtin_commands()","Rails rss::baselistener::install_class_name()","Rails rss::basemodel#install_date_element()","Rails rss::maker::dublincoremodel::install_dublin_core()","Rails gem::commands::setupcommand#install_executables()","Rails irb::contextextender::install_extend_commands()","Rails irb::contextextender::install_extend_commands()","Rails irb::extendcommandbundle::install_extend_commands()","Rails irb::extendcommandbundle::install_extend_commands()","Rails rss::element::install_get_attribute()","Rails rss::baselistener::install_get_text_element()","Rails rss::basemodel#install_have_attribute_element()","Rails rss::basemodel#install_have_child_element()","Rails rss::basemodel#install_have_children_element()","Rails drb::install_id_conv()","Rails rss::maker::imagefaviconmodel::install_image_favicon()","Rails rss::maker::imageitemmodel::install_image_item()","Rails gem::indexer#install_indicies()","Rails gem::commands::setupcommand#install_lib()","Rails acl#install_list()","Rails rss::element::install_model()","Rails rss::element::install_must_call_validator()","Rails rss::element::install_ns()","Rails gem::commands::setupcommand#install_rdoc()","Rails gem::docmanager#install_rdoc()","Rails gem::docmanager#install_ri()","Rails rdoc::generator::ri#install_siginfo_handler()","Rails rdoc::rdoc#install_siginfo_handler()","Rails shell::install_system_commands()","Rails shell::commandprocessor::install_system_commands()","Rails rss::maker::taxonomytopicmodel::install_taxo_topic()","Rails rss::maker::taxonomytopicsmodel::install_taxo_topics()","Rails rss::basemodel#install_text_element()","Rails gem::installupdateoptions#install_update_defaults_str()","Rails gem::specification#installation_path()","Rails gem::installer#installation_satisfies_dependency?()","Ruby plugin#installed?()","Rails gem::sourceindex::installed_spec_directories()","Ruby activesupport::inflector::inflections::instance()","Ruby rails::railtie::configurable::classmethods#instance()","Rails csv::instance()","Rails gem::commandmanager::instance()","Rails prime::instance()","Rails syslog::instance()","Rails rdoc::context#instance_attributes()","Rails forwardable#instance_delegate()","Rails basicobject#instance_eval()","Rails basicobject#instance_exec()","Rails module#instance_method()","Ruby activemodel::attributemethods::classmethods#instance_method_already_implemented?()","Ruby activerecord::attributemethods::classmethods#instance_method_already_implemented?()","Rails rdoc::context#instance_method_list()","Ruby module#instance_method_names()","Rails module#instance_methods()","Rails rdoc::ri::store#instance_methods()","Rails object#instance_of?()","Rails object#instance_variable_defined?()","Rails object#instance_variable_get()","Ruby object#instance_variable_names()","Rails object#instance_variable_set()","Rails object#instance_variables()","Ruby activerecord::inheritance::classmethods#instantiate()","Ruby activerecord::fixtures::instantiate_all_loaded_fixtures()","Ruby activerecord::fixtures::instantiate_fixtures()","Ruby activemodel::observing::classmethods#instantiate_observers()","Ruby activerecord::dynamicfindermatch#instantiator?()","Rails rexml::streamlistener#instruction()","Rails rss::listenermixin#instruction()","Rails rexml::parsers::pullevent#instruction?()","Rails rexml::element#instructions()","Ruby activesupport::cache::store::instrument()","Ruby activesupport::notifications::instrument()","Ruby activesupport::notifications::instrumenter#instrument()","Ruby activesupport::cache::store::instrument=()","Ruby actioncontroller::caching::fragments#instrument_fragment_cache()","Ruby activesupport::notifications::instrumenter()","Rails socket::ancillarydata::int()","Rails socket::ancillarydata#int()","Rails socket::option::int()","Rails socket::option#int()","Rails xmlrpc::convert::int()","Rails prime#int_from_prime_division()","Rails integer#integer?()","Rails numeric#integer?()","Rails rdoc::ri::driver#interactive()","Rails xmlrpc::interface()","Rails rake::taskmanager#intern()","Rails string#intern()","Rails symbol#intern()","Rails argf#internal_encoding()","Rails io#internal_encoding()","Rails stringio#internal_encoding()","Ruby abstractcontroller::base::internal_methods()","Rails debugger__::interrupt()","Rails webrick::utils::timeouthandler#interrupt()","Rails set#intersection()","Rails matrix#inv()","Ruby activemodel::validations#invalid?()","Ruby activerecord::migration::commandrecorder#inverse()","Rails matrix#inverse()","Ruby activesupport::orderedhash#invert()","Rails dbm#invert()","Rails env::invert()","Rails gdbm#invert()","Rails hash#invert()","Rails sdbm#invert()","Rails yaml::dbm#invert()","Rails openssl::pkey::ec::point#invert!()","Rails rake::task#investigation()","Rails win32ole_method#invkind()","Ruby rails::generators::invoke()","Rails gem::command#invoke()","Rails rake::task#invoke()","Rails win32ole#invoke()","Rails win32ole_method#invoke_kind()","Rails rake::application#invoke_task()","Rails io#ioctl()","Rails io#ioflush()","Ruby actiondispatch::request#ip()","Rails addrinfo::ip()","Rails ipaddr#ip6_arpa()","Rails ipaddr#ip6_int()","Rails addrinfo#ip?()","Rails addrinfo#ip_address()","Rails socket::ip_address_list()","Rails socket::ancillarydata::ip_pktinfo()","Rails socket::ancillarydata#ip_pktinfo()","Rails addrinfo#ip_port()","Rails addrinfo#ip_unpack()","Ruby actiondispatch::remoteip::getip#ips_from()","Rails addrinfo#ipv4?()","Rails ipaddr#ipv4?()","Rails ipaddr#ipv4_compat()","Rails ipaddr#ipv4_compat?()","Rails addrinfo#ipv4_loopback?()","Rails ipaddr#ipv4_mapped()","Rails ipaddr#ipv4_mapped?()","Rails addrinfo#ipv4_multicast?()","Rails addrinfo#ipv4_private?()","Rails addrinfo#ipv6?()","Rails ipaddr#ipv6?()","Rails addrinfo#ipv6_linklocal?()","Rails addrinfo#ipv6_loopback?()","Rails addrinfo#ipv6_mc_global?()","Rails addrinfo#ipv6_mc_linklocal?()","Rails addrinfo#ipv6_mc_nodelocal?()","Rails addrinfo#ipv6_mc_orglocal?()","Rails addrinfo#ipv6_mc_sitelocal?()","Rails addrinfo#ipv6_multicast?()","Rails socket::ancillarydata#ipv6_pktinfo()","Rails socket::ancillarydata::ipv6_pktinfo()","Rails socket::ancillarydata#ipv6_pktinfo_addr()","Rails socket::ancillarydata#ipv6_pktinfo_ifindex()","Rails addrinfo#ipv6_sitelocal?()","Rails addrinfo#ipv6_to_ipv4()","Rails addrinfo#ipv6_unspecified?()","Rails addrinfo#ipv6_v4compat?()","Rails addrinfo#ipv6_v4mapped?()","Rails socket#ipv6only!()","Rails irb::irb()","Rails irb::extendcommand::nop#irb()","Rails irb::jobmanager#irb()","Rails irb::irb_abort()","Rails irb::irb_at_exit()","Rails irb::extendcommandbundle#irb_context()","Rails irb::extendcommandbundle#irb_context()","Rails irb::irb_exit()","Rails irb::extendcommandbundle#irb_exit()","Rails irb::extendcommandbundle#irb_exit()","Rails irb::context#irb_level()","Rails irb::extendcommandbundle#irb_load()","Rails irb::extendcommandbundle#irb_load()","Rails irb::irbloader#irb_load()","Rails irb::extendcommandbundle::irb_original_method_name()","Rails irb::extendcommandbundle::irb_original_method_name()","Rails irb::extendcommandbundle#irb_require()","Rails irb::extendcommandbundle#irb_require()","Ruby activesupport::inflector::inflections#irregular()","Rails jacobian#isequal()","Ruby activesupport::timewithzone#is_a?()","Rails object#is_a?()","Rails rake::filelist#is_a?()","Ruby loaderror#is_missing?()","Ruby loaderror#is_missing?()","Ruby string#is_utf8?()","Rails net::http::is_version_1_2?()","Rails net::http::is_version_1_2?()","Rails io#isatty()","Rails stringio#isatty()","Ruby activesupport::timewithzone#isdst()","Rails time#isdst()","Rails kconv::iseuc()","Rails string#iseuc()","Rails kconv::isjis()","Rails string#isjis()","Ruby activesupport::timewithzone#iso8601()","Ruby date#iso8601()","Rails date::iso8601()","Rails date#iso8601()","Rails datetime#iso8601()","Rails datetime::iso8601()","Rails time::iso8601()","Rails time#iso8601()","Ruby rails::engine::isolate_namespace()","Ruby build#isolated?()","Rails process::sys::issetugid()","Rails kconv::issjis()","Rails string#issjis()","Rails openssl::pkcs7::recipientinfo#issuer()","Rails openssl::pkcs7::signerinfo#issuer()","Rails openssl::x509::crl#issuer()","Rails openssl::x509::certificate#issuer()","Rails openssl::x509::crl#issuer=()","Rails openssl::x509::certificate#issuer=()","Rails openssl::x509::extensionfactory#issuer_certificate=()","Rails kconv::isutf8()","Rails string#isutf8()","Rails date#italy()","Rails rss::atom::entry#items()","Rails rss::rss#items()","Rails kernel#iterator?()","Rails openssl::cipher#iv=()","Ruby actionview::helpers::javascripthelper#j()","Ruby erb::util::j()","Rails jacobian#jacobian()","Ruby rails::generators::appbase#javascript_gemfile_entry()","Ruby actionview::helpers::assettaghelper::javascripttaghelpers#javascript_include_tag()","Ruby sprockets::helpers::railshelper#javascript_include_tag()","Ruby actionview::helpers::assettaghelper::javascripttaghelpers#javascript_path()","Ruby sprockets::helpers::railshelper#javascript_path()","Ruby rails::generators::appbase#javascript_runtime_gemfile_entry()","Ruby actionview::helpers::javascripthelper#javascript_tag()","Ruby rails::pluginbuilder#javascripts()","Rails date#jd()","Rails date::jd()","Rails datetime::jd()","Rails date::jisx0301()","Rails date#jisx0301()","Rails datetime::jisx0301()","Rails datetime#jisx0301()","Rails shell#jobs()","Rails shell::processcontroller#jobs()","Rails shell::processcontroller#jobs_exist?()","Rails array#join()","Rails file::join()","Rails gserver#join()","Rails pathname#join()","Rails shellwords::join()","Rails thread#join()","Rails threadswait#join()","Rails threadswait#join()","Rails uri::join()","Rails uri::parser#join()","Rails threadswait#join_nowait()","Rails threadswait#join_nowait()","Ruby postshelper#join_tags()","Ruby activerecord::relation#joined_includes_values()","Ruby activerecord::querymethods#joins()","Ruby activerecord::connectionadapters::databaselimits#joins_per_query()","Rails class#json_creatable?()","Rails complex::json_create()","Rails date::json_create()","Rails datetime::json_create()","Rails exception::json_create()","Rails range::json_create()","Rails rational::json_create()","Rails regexp::json_create()","Rails struct::json_create()","Rails symbol::json_create()","Rails time::json_create()","Ruby erb::util::json_escape()","Ruby actioncontroller::responder#json_resource_errors()","Rails date#julian()","Rails date#julian?()","Rails date::julian_leap?()","Rails kconv::kconv()","Rails string#kconv()","Ruby actiondispatch::flash::flashhash#keep()","Rails webrick::httprequest#keep_alive?()","Rails webrick::httpresponse#keep_alive?()","Rails array#keep_if()","Rails env::keep_if()","Rails hash#keep_if()","Rails set#keep_if()","Ruby build#key()","Rails dbm#key()","Rails env::key()","Rails gdbm#key()","Rails hash#key()","Rails sdbm#key()","Rails openssl::cipher#key=()","Ruby actiondispatch::flash::flashhash#key?()","Ruby actiondispatch::request#key?()","Ruby activerecord::connectionadapters::mysqladapter::statementpool#key?()","Ruby activerecord::connectionadapters::postgresqladapter::statementpool#key?()","Ruby activerecord::connectionadapters::sqliteadapter::statementpool#key?()","Ruby activerecord::connectionadapters::statementpool#key?()","Ruby activesupport::dependencies::classcache#key?()","Ruby activesupport::hashwithindifferentaccess#key?()","Ruby activesupport::hashwithindifferentaccess#key?()","Rails cgi::queryextension#key?()","Rails dbm#key?()","Rails env::key?()","Rails gdbm#key?()","Rails hash#key?()","Rails net::httpheader#key?()","Rails sdbm#key?()","Rails thread#key?()","Rails openssl::cipher#key_len=()","Ruby activesupport::cache::store#key_matcher()","Ruby rails::generators::appbase#key_value()","Ruby rails::generators::namedbase#key_value()","Rails curses::keyname()","Rails curses::window#keypad()","Rails curses::window#keypad=()","Ruby actiondispatch::flash::flashhash#keys()","Ruby activemodel::errors#keys()","Ruby activesupport::orderedhash#keys()","Rails cgi::queryextension#keys()","Rails dbm#keys()","Rails env::keys()","Rails gdbm#keys()","Rails hash#keys()","Rails sdbm#keys()","Rails thread#keys()","Rails win32::registry#keys()","Rails irb::inspectors::keys_with_inspector()","Rails irb::jobmanager#kill()","Rails process::kill()","Rails shell#kill()","Rails shell::systemcommand#kill()","Rails thread#kill()","Rails thread::kill()","Rails shell::processcontroller#kill_job()","Ruby numeric#kilobyte()","Ruby numeric#kilobytes()","Ruby activemodel::validator::kind()","Ruby activemodel::validator#kind()","Ruby activesupport::timewithzone#kind_of?()","Rails object#kind_of?()","Rails rake::filelist#kind_of?()","Ruby actiondispatch::middlewarestack::middleware#klass()","Ruby activerecord::reflection::macroreflection#klass()","Ruby activeresource::base#known_attributes()","Ruby activeresource::base::known_attributes()","Ruby abstractcontroller::translation#l()","Ruby actionview::helpers::translationhelper#l()","Rails matrix::lupdecomposition#l()","Ruby actionview::helpers::formbuilder#label()","Ruby actionview::helpers::formhelper#label()","Ruby actionview::helpers::formtaghelper#label_tag()","Rails kernel#lambda()","Rails proc#lambda?()","Rails rexml::functions::lang()","Ruby actiondispatch::middlewarestack#last()","Ruby activerecord::findermethods#last()","Ruby activeresource::base::last()","Ruby rails::paths::path#last()","Ruby string#last()","Rails array#last()","Rails rdoc::markup::list#last()","Rails rexml::functions::last()","Rails range#last()","Ruby activerecord::findermethods#last!()","Rails rss::maker::channelbase#lastbuilddate=()","Rails dl::cfunc::last_error()","Rails encoding::converter#last_error()","Rails fiddle::last_error()","Rails fiddle::last_error=()","Ruby activerecord::connectionadapters::databasestatements#last_inserted_id()","Ruby activerecord::connectionadapters::mysql2adapter#last_inserted_id()","Ruby activerecord::connectionadapters::mysqladapter#last_inserted_id()","Ruby activerecord::connectionadapters::sqliteadapter#last_inserted_id()","Rails regexp::last_match()","Ruby actiondispatch::http::cache::response#last_modified()","Rails openuri::meta#last_modified()","Rails rdoc::toplevel#last_modified()","Ruby actiondispatch::http::cache::response#last_modified=()","Ruby actiondispatch::http::cache::response#last_modified?()","Rails openssl::x509::crl#last_update()","Rails openssl::x509::crl#last_update=()","Rails gem::latest_load_paths()","Rails gem::latest_rubygems_version()","Rails gem::latest_spec_for()","Rails gem::server#latest_specs()","Rails gem::sourceindex#latest_specs()","Rails gem::specification::latest_specs()","Rails gem::latest_version_for()","Rails gem::server#launch()","Ruby abstractcontroller::layouts::classmethods#layout()","Rails file::lchmod()","Rails pathname#lchmod()","Rails file::lchown()","Rails pathname#lchown()","Rails integer#lcm()","Rails date#ld()","Rails math::ldexp()","Rails date::leap?()","Rails date#leap?()","Ruby activerecord::connectionadapters::abstractadapter#lease()","Ruby activerecord::connectionadapters::mysqladapter::statementpool#length()","Ruby activerecord::connectionadapters::postgresqladapter::statementpool#length()","Ruby activerecord::connectionadapters::sqliteadapter::statementpool#length()","Ruby activerecord::connectionadapters::statementpool#length()","Rails array#length()","Rails dbm#length()","Rails digest::instance#length()","Rails env::length()","Rails gdbm#length()","Rails gem::sourceindex#length()","Rails hash#length()","Rails matchdata#length()","Rails queue#length()","Rails rdoc::markup::listitem#length()","Rails rexml::attributes#length()","Rails rexml::parent#length()","Rails rexml::syncenumerator#length()","Rails sdbm#length()","Rails set#length()","Rails string#length()","Rails stringio#length()","Rails struct#length()","Rails symbol#length()","Rails tempfile#length()","Ruby activesupport::bufferedlogger#level()","Rails socket::ancillarydata#level()","Rails socket::option#level()","Rails zlib::gzipfile#level()","Ruby activesupport::bufferedlogger#level=()","Rails irb::notifier::compositenotifier#level=()","Rails logger::application#level=()","Rails irb::notifier::compositenotifier#level_notifier=()","Rails gem::text#levenshtein_distance()","Rails ripper::lex()","Rails rubylex#lex()","Rails rubylex#lex_init()","Rails rubylex#lex_int2()","Rails math::lgamma()","Ruby rails::appbuilder#lib()","Ruby rails::generators::actions#lib()","Ruby rails::pluginbuilder#lib()","Rails gem::gempathsearcher#lib_dirs_for()","Rails gem::specification#lib_dirs_glob()","Rails gem::specification#lib_files()","Rails win32ole_typelib#library_name()","Rails psych::libyaml_version()","Ruby rails::pluginbuilder#license()","Rails gem::specification#license()","Rails gem::specification#license=()","Rails gem::specification#licenses()","Rails gem::specification#licenses=()","Ruby activerecord::querymethods#limit()","Ruby activesupport::multibyte::chars#limit()","Rails bigdecimal::limit()","Ruby activerecord::connectionadapters::abstractmysqladapter#limited_update_conditions()","Ruby activerecord::connectionadapters::databasestatements#limited_update_conditions()","Rails irb::readlineinputmethod#line()","Rails irb::stdioinputmethod#line()","Rails rexml::parseexception#line()","Rails debugger__#line_at()","Rails readline::line_buffer()","Rails psych::emitter#line_width()","Rails psych::emitter#line_width=()","Rails argf#lineno()","Rails io#lineno()","Rails ripper::filter#lineno()","Rails stringio#lineno()","Rails zlib::gzipreader#lineno()","Rails argf#lineno=()","Rails io#lineno=()","Rails stringio#lineno=()","Rails zlib::gzipreader#lineno=()","Rails argf#lines()","Rails curses::lines()","Rails io#lines()","Rails string#lines()","Rails stringio#lines()","Rails zlib::gzipreader#lines()","Rails socket::option::linger()","Rails socket::option#linger()","Rails file::link()","Rails fileutils::link()","Rails rdoc::markup::tohtmlcrossref#link()","Rails rss::maker::imagebase#link()","Rails sys#link()","Rails sys#link_files()","Ruby actionview::helpers::urlhelper#link_to()","Ruby actionview::helpers::javascripthelper#link_to_function()","Ruby actionview::helpers::urlhelper#link_to_if()","Ruby actionview::helpers::urlhelper#link_to_unless()","Ruby actionview::helpers::urlhelper#link_to_unless_current()","Ruby recursivehttpfetcher#links()","Rails encoding::list()","Rails gem::specfetcher#list()","Rails iconv::list()","Rails net::ftp#list()","Rails net::imap#list()","Rails signal::list()","Rails thread::list()","Rails threadgroup#list()","Rails webrick::httputils::formdata#list()","Rails rdoc::markup::tohtml#list_end_for()","Rails rdoc::rdoc#list_files_in_directory()","Rails rdoc::markup::tohtml#list_item_start()","Rails rdoc::ri::driver#list_known_classes()","Rails rdoc::ri::driver#list_methods_matching()","Rails addrinfo#listen()","Rails gem::server#listen()","Rails openssl::ssl::sslserver#listen()","Rails rexml::parsers::sax2parser#listen()","Rails socket#listen()","Rails tcpserver#listen()","Rails unixserver#listen()","Rails webrick::genericserver#listen()","Rails rss::rexmlparser::listener()","Rails rss::xmlparserparser::listener()","Rails rss::xmlscanparser::listener()","Rails rss::rexmllikexmlparser#listener=()","Ruby activesupport::notifications::fanout#listeners_for()","Ruby activesupport::notifications::fanout#listening?()","Ruby activesupport::multibyte::chars#ljust()","Rails string#ljust()","Rails fileutils::ln()","Rails object#ln()","Rails fileutils::ln_s()","Rails fileutils::ln_sf()","Ruby activeresource::base#load()","Ruby activesupport::multibyte::unicode::unicodedatabase#load()","Rails csv::load()","Rails gem::specification::load()","Rails irb::locale#load()","Rails json#load()","Rails kernel#load()","Rails marshal::load()","Rails openssl::engine::load()","Rails optionparser#load()","Rails psych::load()","Rails rake::defaultloader#load()","Rails rake::makefileloader#load()","Rails rubyvm::instructionsequence::load()","Rails xmlrpc::marshal::load()","Ruby activesupport::load_all!()","Rails gem::configfile#load_api_keys()","Ruby activeresource::base#load_attributes_from_response()","Rails rdoc::ri::store#load_cache()","Rails xmlrpc::marshal#load_call()","Rails xmlrpc::marshal::load_call()","Rails rdoc::ri::store#load_class()","Ruby rails::application#load_console()","Ruby rails::engine#load_console()","Ruby rails::railtie#load_console()","Rails psych::load_documents()","Rails gem::load_env_plugins()","Rails gem::configfile#load_file()","Rails irb::irbloader#load_file()","Rails psych::load_file()","Rails gem::sourceindex#load_gems_in()","Rails gem::commands::buildcommand#load_gemspec()","Ruby rails::engine#load_generators()","Ruby rails::railtie#load_generators()","Rails irb::historysavingability#load_history()","Rails rake::application#load_imports()","Rails rdoc::ri::driver#load_method()","Rails rdoc::ri::store#load_method()","Rails rdoc::ri::driver#load_methods_matching()","Rails webrick::httputils::load_mime_types()","Rails irb::load_modules()","Rails gem::load_path_insert_index()","Ruby rails::paths::root#load_paths()","Rails gem::load_plugin_files()","Rails gem::load_plugins()","Rails openssl::engine#load_private_key()","Rails openssl::engine#load_public_key()","Rails rake::load_rakefile()","Rails rake::application#load_rakefile()","Rails gem::docmanager::load_rdoc()","Rails rdoc::rubygemshook::load_rdoc()","Rails xmlrpc::marshal::load_response()","Rails xmlrpc::marshal#load_response()","Ruby rails::application#load_runner()","Ruby rails::engine#load_runner()","Ruby rails::railtie#load_runner()","Ruby rails::engine#load_seed()","Ruby actiondispatch::session::stalesessioncheck#load_session()","Rails gem::sourceindex::load_specification()","Rails gem::specfetcher#load_specs()","Rails psych::load_stream()","Ruby rails::application#load_tasks()","Ruby rails::engine#load_tasks()","Ruby rails::railtie#load_tasks()","Rails gem::load_yaml()","Ruby activerecord::sessionstore::session#loaded?()","Ruby activerecord::sessionstore::sqlbypass#loaded?()","Rails gem::specification#loaded_from=()","Rails gem::loaded_path?()","Ruby activesupport::timezone#local()","Rails gem::platform::local()","Rails time::local()","Ruby actiondispatch::request#local?()","Rails gem::localremoteoptions#local?()","Rails basicsocket#local_address()","Ruby module#local_constant_names()","Ruby module#local_constants()","Rails rexml::functions::local_name()","Rails rexml::light::node#local_name()","Rails rexml::light::node#local_name=()","Ruby datetime::local_offset()","Ruby time::local_time()","Ruby activesupport::timezone#local_to_utc()","Rails kernel#local_variables()","Rails win32ole::locale()","Rails win32ole::locale=()","Rails encoding::locale_charmap()","Ruby abstractcontroller::translation#localize()","Ruby actionview::helpers::translationhelper#localize()","Ruby activesupport::timewithzone#localtime()","Rails time#localtime()","Ruby actioncontroller::metal#location()","Ruby actiondispatch::response#location()","Ruby actioncontroller::metal#location=()","Ruby actiondispatch::response#location=()","Rails gem::location_of_caller()","Ruby activerecord::querymethods#lock()","Rails mutex#lock()","Rails net::http#lock()","Rails net::http#lock()","Ruby activerecord::locking::pessimistic#lock!()","Rails mutex#locked?()","Ruby activerecord::locking::optimistic::classmethods#locking_column()","Ruby activerecord::locking::optimistic::classmethods#locking_column=()","Ruby activerecord::locking::optimistic::classmethods#locking_enabled?()","Ruby activerecord::connectionadapters::abstractadapter#log()","Ruby rails::appbuilder#log()","Ruby rails::generators::actions#log()","Rails bigmath::log()","Rails cmath::log()","Rails gserver#log()","Rails logger#log()","Rails logger::application#log()","Rails math::log()","Rails sys#log()","Rails syslog::log()","Rails webrick::basiclog#log()","Rails webrick::log#log()","Rails cmath::log!()","Rails cmath::log10()","Rails math::log10()","Rails cmath::log10!()","Rails cmath::log2()","Rails math::log2()","Rails cmath::log2!()","Rails logger::application#log=()","Ruby rails::application::configuration#log_level()","Ruby rails::server#log_path()","Ruby activerecord::railties::controllerruntime::classmethods#log_process_action()","Ruby activesupport::logsubscriber::log_subscribers()","Ruby actioncontroller::logsubscriber#logger()","Ruby actionmailer::logsubscriber#logger()","Ruby actionview::logsubscriber#logger()","Ruby activerecord::base::logger()","Ruby activerecord::logsubscriber#logger()","Ruby activeresource::base::logger()","Ruby activeresource::logsubscriber#logger()","Ruby activesupport::logsubscriber::logger()","Ruby rails::logger()","Rails logger::application#logger()","Ruby rails::logger=()","Rails logger::application#logger=()","Ruby activemodel::massassignmentsecurity::loggersanitizer#logger?()","Rails net::pop3#logging()","Rails net::pop3#logging()","Rails net::pop3#logging()","Rails net::pop3#logging()","Rails net::ftp#login()","Rails net::imap#login()","Rails net::telnet#login()","Rails rss::maker::channelbase#logo()","Rails rss::maker::channelbase#logo=()","Rails net::imap#logout()","Rails rdoc::parser::c#look_for_directives_in()","Rails rdoc::parser::ruby#look_for_directives_in()","Ruby mime::type::lookup()","Rails rake::taskarguments#lookup()","Rails rake::taskmanager#lookup()","Ruby activemodel::translation#lookup_ancestors()","Ruby mime::type::lookup_by_extension()","Ruby abstractcontroller::viewpaths#lookup_context()","Rails rinda::ringfinger#lookup_ring()","Rails rinda::ringfinger#lookup_ring_any()","Rails webrick::httpserver#lookup_server()","Ruby activesupport::cache::lookup_store()","Rails kernel#loop()","Rails win32::sspi::securityhandle#lower()","Rails matrix#lower_triangular?()","Ruby recursivehttpfetcher#ls()","Rails net::ftp#ls()","Rails file#lstat()","Rails file::lstat()","Rails pathname#lstat()","Ruby activesupport::multibyte::chars#lstrip()","Rails string#lstrip()","Rails string#lstrip!()","Rails net::imap#lsub()","Rails lusolve#ludecomp()","Rails matrix#lup()","Rails matrix#lup_decomposition()","Rails lusolve#lusolve()","Rails bignum#magnitude()","Rails complex#magnitude()","Rails fixnum#magnitude()","Rails float#magnitude()","Rails numeric#magnitude()","Rails vector#magnitude()","Ruby actionmailer::base#mail()","Rails net::popmail#mail()","Ruby actionview::helpers::urlhelper#mail_to()","Ruby actionmailer::mailhelper#mailer()","Ruby actionmailer::base::mailer_name()","Ruby actionmailer::base#mailer_name()","Rails net::smtp#mailfrom()","Rails net::smtp#mailfrom()","Rails net::pop3#mails()","Rails net::pop3#mails()","Rails net::pop3#mails()","Rails net::pop3#mails()","Rails irb::context#main()","Rails thread::main()","Rails irb::jobmanager#main_irb()","Rails irb::jobmanager#main_thread()","Rails net::httpheader#main_type()","Rails win32ole_type#major_version()","Rails win32ole_typelib#major_version()","Rails gem::ext::builder::make()","Rails rss::maker::make()","Rails rss::maker::rssbase#make()","Rails rss::maker::rssbase::make()","Rails openssl::pkey::ec::point#make_affine!()","Rails gem::commands::setupcommand#make_destination_dirs()","Rails rinda::tupleentry#make_expires()","Rails pathname#make_link()","Rails rdoc::parser::ruby#make_message()","Rails webrick::httpservlet::defaultfilehandler#make_partial_content()","Rails webrick::httpauth::basicauth::make_passwd()","Rails webrick::httpauth::digestauth::make_passwd()","Rails webrick::httpauth::userdb#make_passwd()","Rails uri::parser#make_regexp()","Rails optionparser#make_switch()","Rails pathname#make_symlink()","Rails gem::indexer#make_temp_directories()","Rails debugger__::make_thread_list()","Rails rinda::tupleentry#make_tuple()","Rails fileutils::makedirs()","Rails rake::ftpuploader#makedirs()","Rails sys#makedirs()","Rails rss::atom::contentmodel#maker_target()","Rails rss::atom::feed::logo#maker_target()","Rails rss::atom::personconstruct#maker_target()","Rails rss::taxonomytopicmodel::taxonomytopic#maker_target()","Rails rss::taxonomytopicsmodel::taxonomytopics#maker_target()","Rails rss::maker::makers()","Rails dl::malloc()","Rails dl::cptr::malloc()","Rails dl::cptr::malloc()","Rails dl::cstructentity::malloc()","Rails dl::cunionentity::malloc()","Rails gc::malloc_allocated_size()","Rails gc::malloc_allocations()","Rails gem::commands::ownercommand#manage_owners()","Ruby activerecord::relation#many?()","Ruby enumerable#many?()","Rails array#map()","Rails enumerable#map()","Rails matrix#map()","Rails psych::coder#map()","Rails vector#map()","Rails array#map!()","Rails set#map!()","Rails vector#map2()","Rails psych::coder#map=()","Rails gem::indexer#map_gems_to_specs()","Rails psych::parser#mark()","Ruby activerecord::autosaveassociation#mark_for_destruction()","Rails gem::specification#mark_version()","Ruby activerecord::autosaveassociation#marked_for_destruction?()","Rails rdoc::text#markup()","Rails rdoc::anymethod#markup_code()","Ruby activesupport::timewithzone#marshal_dump()","Rails delegator#marshal_dump()","Rails gem::version#marshal_dump()","Rails openstruct#marshal_dump()","Rails rdoc::anymethod#marshal_dump()","Rails rdoc::attr#marshal_dump()","Rails time#marshal_dump()","Ruby activesupport::timewithzone#marshal_load()","Rails delegator#marshal_load()","Rails gem::version#marshal_load()","Rails openstruct#marshal_load()","Rails rdoc::anymethod#marshal_load()","Rails rdoc::attr#marshal_load()","Rails time#marshal_load()","Rails gem::marshal_version()","Rails ipaddr#mask()","Rails syslog::mask()","Rails ipaddr#mask!()","Rails syslog::mask=()","Rails rdoc::markup::attributemanager#mask_protected_sequences()","Ruby activemodel::massassignmentsecurity#mass_assignment_authorizer()","Ruby activerecord::attributeassignment#mass_assignment_options()","Ruby activerecord::attributeassignment#mass_assignment_role()","Ruby activemodel::massassignmentsecurity::classmethods#mass_assignment_sanitizer=()","Ruby actiondispatch::routing::mapper::base#match()","Ruby actiondispatch::routing::mapper::resources#match()","Ruby activemodel::attributemethods::classmethods::attributemethodmatcher#match()","Ruby activerecord::dynamicfindermatch::match()","Ruby activerecord::dynamicscopematch::match()","Ruby html::selector#match()","Rails acl::aclentry#match()","Rails acl::acllist#match()","Rails gem::platform::match()","Rails irb::slex#match()","Rails irb::slex::node#match()","Rails optionparser::completinghash#match()","Rails rexml::iosource#match()","Rails rexml::quickpath::match()","Rails rexml::source#match()","Rails rexml::xpath::match()","Rails rexml::xpathparser#match()","Rails regexp#match()","Rails rinda::template#match()","Rails rinda::templateentry#match()","Rails string#match()","Rails symbol#match()","Ruby actiondispatch::filehandler#match?()","Rails gem::dependency#match?()","Rails stringscanner#match?()","Rails irb::slex::node#match_io()","Rails rexml::source#match_to()","Rails rexml::source#match_to_consume()","Rails stringscanner#matched()","Rails stringscanner#matched?()","Rails stringscanner#matched_size()","Rails rexml::entity::matches?()","Rails rexml::validation::choice#matches?()","Rails rexml::validation::event#matches?()","Rails rexml::validation::interleave#matches?()","Rails rexml::validation::oneormore#matches?()","Rails rexml::validation::optional#matches?()","Rails rexml::validation::sequence#matches?()","Rails gem::specification#matches_for_glob()","Rails gem::dependency#matches_spec?()","Rails gem::gempathsearcher#matching_file?()","Rails gem::gempathsearcher#matching_files()","Rails gem::gempathsearcher#matching_paths()","Rails gem::dependency#matching_specs()","Rails irb::context#math_mode=()","Ruby module#mattr_accessor()","Ruby module#mattr_reader()","Ruby module#mattr_writer()","Rails enumerable#max()","Rails range#max()","Rails sizedqueue#max()","Rails sizedqueue#max=()","Rails enumerable#max_by()","Rails net::imap::max_flag_count()","Rails net::imap::max_flag_count=()","Rails process::maxgroups()","Rails process::maxgroups=()","Ruby activerecord::calculations#maximum()","Rails curses::window#maxx()","Rails curses::window#maxy()","Ruby string#mb_chars()","Rails date#mday()","Rails time#mday()","Rails net::ftp#mdtm()","Rails benchmark::measure()","Rails net::imap::bodytypebasic#media_subtype()","Rails net::imap::bodytypemessage#media_subtype()","Rails net::imap::bodytypemultipart#media_subtype()","Rails net::imap::bodytypetext#media_subtype()","Ruby actiondispatch::request#media_type()","Ruby numeric#megabyte()","Ruby numeric#megabytes()","Ruby actiondispatch::routing::mapper::resources#member()","Ruby activesupport::hashwithindifferentaccess#member?()","Ruby activesupport::hashwithindifferentaccess#member?()","Rails dbm#member?()","Rails env::member?()","Rails enumerable#member?()","Rails gdbm#member?()","Rails hash#member?()","Rails rake::invocationchain#member?()","Rails rake::invocationchain::emptyinvocationchain#member?()","Rails range#member?()","Rails sdbm#member?()","Rails set#member?()","Rails struct#members()","Rails webrick::httpauth::htgroup#members()","Rails benchmark::tms#memberwise()","Ruby activesupport::memoizable#memoize()","Ruby activesupport::memoizable::instancemethods#memoize_all()","Ruby activesupport::memoizable::memoized_ivar_for()","Ruby activerecord::spawnmethods#merge()","Ruby activesupport::hashwithindifferentaccess#merge()","Ruby activesupport::hashwithindifferentaccess#merge()","Ruby activesupport::orderedhash#merge()","Rails gem::dependency#merge()","Rails hash#merge()","Rails rdoc::classmodule#merge()","Rails rdoc::markup::document#merge()","Rails rdoc::markup::raw#merge()","Rails set#merge()","Rails uri::generic#merge()","Ruby activesupport::hashwithindifferentaccess#merge!()","Ruby activesupport::hashwithindifferentaccess#merge!()","Ruby activesupport::orderedhash#merge!()","Rails hash#merge!()","Rails uri::generic#merge!()","Rails gem::command#merge_options()","Rails rdoc::markup::document#merged?()","Ruby actiondispatch::response#message()","Ruby actionmailer::mailhelper#message()","Ruby activerecord::staleobjecterror#message()","Ruby activerecord::unknownprimarykey#message()","Rails exception#message()","Rails exception2messagemapper::message()","Rails exception2messagemapper::message()","Rails net::smtp::response#message()","Rails optionparser::parseerror#message()","Rails rake::rulerecursionoverflowerror#message()","Rails win32ole_event::message_loop()","Rails webrick::httprequest#meta_vars()","Ruby actiondispatch::request#method()","Rails object#method()","Rails xmlrpc::create#methodcall()","Rails xmlrpc::create#methodresponse()","Ruby abstractcontroller::base::method_added()","Rails shell::commandprocessor::method_added()","Rails module#method_defined?()","Ruby activerecord::attributemethods::classmethods#method_defined_within?()","Rails rdoc::ri::driver#method_document()","Rails rdoc::ri::store#method_file()","Ruby actioncontroller::compatibility#method_for_action()","Ruby actioncontroller::implicitrender#method_for_action()","Ruby abstractcontroller::collector#method_missing()","Ruby actiondispatch::bodyproxy#method_missing()","Ruby activemodel::attributemethods#method_missing()","Ruby activerecord::delegation#method_missing()","Ruby activerecord::migration#method_missing()","Ruby activesupport::multibyte::chars#method_missing()","Ruby activesupport::orderedoptions#method_missing()","Ruby activesupport::stringinquirer#method_missing()","Ruby activesupport::taggedlogging#method_missing()","Ruby activesupport::timewithzone#method_missing()","Ruby rails::railtie::configurable::classmethods#method_missing()","Rails drb::drbobject#method_missing()","Rails delegator#method_missing()","Rails rexml::functions::method_missing()","Rails rexml::quickpath::method_missing()","Rails rake::taskarguments#method_missing()","Rails webrick::fakeproxyuri::method_missing()","Rails win32ole#method_missing()","Rails xmlrpc::client::proxy#method_missing()","Rails xmlrpc::xmlparser::rexmlstreamparser::streamlistener#method_missing()","Rails xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#method_missing()","Ruby activemodel::attributemethods::classmethods::attributemethodmatcher#method_name()","Ruby module#method_names()","Ruby actiondispatch::request#method_symbol()","Rails rdoc::ri::driver#method_type()","Rails delegator#methods()","Rails object#methods()","Rails rdoc::context#methods_by_type()","Rails rdoc::context#methods_matching()","Ruby actioncontroller::metal::middleware()","Ruby activesupport::cache::strategy::localcache#middleware()","Ruby rails::engine::configuration#middleware()","Ruby rails::server#middleware()","Ruby date#midnight()","Ruby datetime#midnight()","Ruby time#midnight()","Ruby activerecord::migration::migrate()","Ruby activerecord::migration#migrate()","Ruby rails::generators::migration#migration_template()","Ruby activerecord::schema#migrations_paths()","Rails rss::atom::feed::entry::content#mime_split()","Ruby actionview::template#mime_type()","Ruby activeresource::formats::jsonformat#mime_type()","Ruby activeresource::formats::xmlformat#mime_type()","Rails webrick::httputils::mime_type()","Rails enumerable#min()","Rails range#min()","Rails time#min()","Rails xmlrpc::datetime#min=()","Rails enumerable#min_by()","Ruby activerecord::calculations#minimum()","Rails enumerable#minmax()","Rails enumerable#minmax_by()","Rails matrix#minor()","Rails win32ole_type#minor_version()","Rails win32ole_typelib#minor_version()","Ruby time#minus_with_coercion()","Ruby time#minus_without_coercion()","Ruby time#minus_without_duration()","Ruby numeric#minute()","Rails rss::itunesitemmodel::itunesduration#minute=()","Rails rss::maker::itunesitemmodel::itunesdurationbase#minute=()","Ruby numeric#minutes()","Ruby nameerror#missing_name()","Ruby nameerror#missing_name?()","Rails date#mjd()","Rails net::http#mkcol()","Rails net::http#mkcol()","Rails dir::mkdir()","Rails fileutils::mkdir()","Rails gem::package::tarwriter#mkdir()","Rails net::ftp#mkdir()","Rails object#mkdir()","Rails pathname#mkdir()","Rails shell::commandprocessor#mkdir()","Rails fileutils::mkdir_p()","Rails object#mkmf()","Rails fileutils::mkpath()","Rails pathname#mkpath()","Rails time::mktime()","Rails dir::mktmpdir()","Rails bigdecimal::mode()","Rails file::stat#mode()","Rails rake::ftpfile#mode()","Ruby activemodel::naming#model_name()","Rails rss::element::models()","Rails openstruct#modifiable()","Rails rdoc::include#module()","Rails rdoc::classmodule#module?()","Rails rdoc::normalmodule#module?()","Rails module#module_eval()","Rails module#module_exec()","Ruby rails::generators::namedbase#module_namespacing()","Rails rdoc::context#modules()","Rails rdoc::ri::store#modules()","Rails rdoc::toplevel::modules()","Ruby abstractcontroller::helpers::classmethods#modules_for_helpers()","Ruby actioncontroller::helpers::classmethods#modules_for_helpers()","Rails rdoc::context#modules_hash()","Rails rdoc::toplevel::modules_hash()","Rails bigdecimal#modulo()","Rails bignum#modulo()","Rails fixnum#modulo()","Rails float#modulo()","Rails numeric#modulo()","Rails date#mon()","Rails time#mon()","Rails xmlrpc::datetime#mon=()","Rails monitormixin#mon_enter()","Rails monitormixin#mon_exit()","Rails monitormixin#mon_synchronize()","Rails monitormixin#mon_try_enter()","Ruby date#monday()","Ruby time#monday()","Rails date#monday?()","Rails time#monday?()","Ruby integer#month()","Rails date#month()","Rails time#month()","Rails xmlrpc::datetime#month=()","Ruby integer#months()","Ruby date#months_ago()","Ruby time#months_ago()","Ruby date#months_since()","Ruby time#months_since()","Ruby actiondispatch::routing::mapper::base#mount()","Rails webrick::httpserver#mount()","Rails webrick::httpserver#mount_proc()","Ruby rails::generators::pluginnewgenerator#mountable?()","Rails pathname#mountpoint?()","Rails curses::mouseinterval()","Rails curses::mousemask()","Rails curses::window#move()","Rails fileutils::move()","Rails net::http#move()","Rails net::http#move()","Rails rinda::tuplespace#move()","Ruby benchmark::ms()","Rails file#mtime()","Rails file::mtime()","Rails file::stat#mtime()","Rails net::ftp#mtime()","Rails pathname#mtime()","Rails zlib::gzipfile#mtime()","Rails zlib::gzipwriter#mtime=()","Rails mutex_m#mu_extended()","Rails mutex_m#mu_lock()","Rails mutex_m#mu_locked?()","Rails mutex_m#mu_synchronize()","Rails mutex_m#mu_try_lock()","Rails mutex_m#mu_unlock()","Rails bigdecimal#mult()","Rails xmlrpc::client#multicall()","Rails xmlrpc::client#multicall2()","Rails xmlrpc::client#multicall2_async()","Rails xmlrpc::client#multicall_async()","Ruby actionview::helpers::formbuilder#multipart=()","Rails cgi::queryextension#multipart?()","Rails net::imap::bodytypebasic#multipart?()","Rails net::imap::bodytypemessage#multipart?()","Rails net::imap::bodytypemultipart#multipart?()","Rails net::imap::bodytypetext#multipart?()","Rails cgi::htmlextension#multipart_form()","Ruby integer#multiple_of?()","Rails stringscanner::must_c_version()","Rails rss::element::must_call_validators()","Ruby activesupport::cache::store#mute()","Ruby rails::generators::pluginnewgenerator#mute()","Rails drb::mutex()","Rails fileutils::mv()","Rails object#mv()","Ruby activerecord::base::mysql2_connection()","Ruby rails::generators::appgenerator#mysql_socket()","Rails net::pop3#n_bytes()","Rails net::pop3#n_bytes()","Rails net::pop3#n_bytes()","Rails net::pop3#n_bytes()","Rails irb::jobmanager#n_jobs()","Rails net::pop3#n_mails()","Rails net::pop3#n_mails()","Rails net::pop3#n_mails()","Rails net::pop3#n_mails()","Ruby activesupport::timewithzone::name()","Ruby rails::generators::pluginnewgenerator#name()","Rails dl::cfunc#name()","Rails dl::function#name()","Rails encoding#name()","Rails method#name()","Rails module#name()","Rails nameerror#name()","Rails openssl::cipher#name()","Rails openssl::digest#name()","Rails openssl::engine#name()","Rails openssl::pkcs7::signerinfo#name()","Rails rdoc::anymethod#name()","Rails rdoc::toplevel#name()","Rails rexml::document#name()","Rails rexml::functions::name()","Rails rexml::light::node#name()","Rails rexml::notationdecl#name()","Rails rexml::quickpath::name()","Rails rake::task#name()","Rails unboundmethod#name()","Rails win32ole_method#name()","Rails win32ole_param#name()","Rails win32ole_type#name()","Rails win32ole_typelib#name()","Rails win32ole_variable#name()","Rails win32::registry#name()","Rails rdoc::classmodule#name=()","Rails rexml::light::node#name=()","Rails rexml::namespace#name=()","Rails rdoc::classmodule#name_for_path()","Rails rdoc::context#name_for_path()","Rails encoding::name_list()","Rails rdoc::alias#name_prefix()","Rails rdoc::methodattr#name_prefix()","Rails rdoc::ri::driver#name_regexp()","Rails regexp#named_captures()","Ruby qualifiedconstutils::names()","Rails encoding#names()","Rails matchdata#names()","Rails regexp#names()","Ruby actiondispatch::routing::mapper::resources#namespace()","Ruby actiondispatch::routing::mapper::scoping#namespace()","Ruby rails::generators::base::namespace()","Ruby rails::generators::namedbase#namespace()","Rails rexml::attribute#namespace()","Rails rexml::element#namespace()","Rails rexml::light::node#namespace()","Rails rexml::light::node#namespace=()","Rails rexml::functions::namespace_context()","Rails rexml::functions::namespace_context=()","Rails rexml::functions::namespace_uri()","Ruby rails::generators::namedbase#namespaced?()","Ruby rails::generators::namedbase#namespaced_class_path()","Ruby rails::generators::namedbase#namespaced_file_path()","Rails rexml::attributes#namespaces()","Rails rexml::element#namespaces()","Rails rexml::parsers::xpathparser#namespaces=()","Rails rexml::xpathparser#namespaces=()","Rails bigdecimal#nan?()","Rails float#nan?()","Rails ipaddr#native()","Ruby activerecord::connectionadapters::abstractmysqladapter#native_database_types()","Ruby activerecord::connectionadapters::schemastatements#native_database_types()","Ruby actioncontroller::responder#navigation_behavior()","Ruby actioncontroller::responder#navigation_location()","Rails rss::atom::feed::entry::content#need_base64_encode?()","Rails rss::element#need_base64_encode?()","Rails rss::element::need_initialize_variables()","Rails rss::maker::base::need_initialize_variables()","Rails rss::atom::commonmodel::need_parent?()","Rails rss::element::need_parent?()","Rails rake::filecreationtask#needed?()","Rails rake::filetask#needed?()","Rails rake::task#needed?()","Ruby actiondispatch::http::mimenegotiation#negotiate_mime()","Rails prettyprint#nest()","Rails prettyprint::singleline#nest()","Ruby actiondispatch::routing::mapper::resources#nested()","Ruby activesupport::hashwithindifferentaccess#nested_under_indifferent_access()","Ruby activesupport::hashwithindifferentaccess#nested_under_indifferent_access()","Ruby activesupport::orderedhash#nested_under_indifferent_access()","Ruby hash#nested_under_indifferent_access()","Rails module::nesting()","Ruby abstractcontroller::doublerendererror::new()","Ruby abstractcontroller::layouts::new()","Ruby actioncontroller::caching::actions::actioncachepath::new()","Ruby actioncontroller::metal::new()","Ruby actioncontroller::middleware::new()","Ruby actioncontroller::middleware::new()","Ruby actioncontroller::middleware::actionmiddleware::new()","Ruby actioncontroller::responder::new()","Ruby actiondispatch::beststandardssupport::new()","Ruby actiondispatch::bodyproxy::new()","Ruby actiondispatch::callbacks::new()","Ruby actiondispatch::cookies::new()","Ruby actiondispatch::debugexceptions::new()","Ruby actiondispatch::exceptionwrapper::new()","Ruby actiondispatch::filehandler::new()","Ruby actiondispatch::flash::new()","Ruby actiondispatch::head::new()","Ruby actiondispatch::http::headers::new()","Ruby actiondispatch::http::parameterfilter::new()","Ruby actiondispatch::http::uploadedfile::new()","Ruby actiondispatch::middlewarestack::new()","Ruby actiondispatch::middlewarestack::middleware::new()","Ruby actiondispatch::paramsparser::new()","Ruby actiondispatch::publicexceptions::new()","Ruby actiondispatch::railsentitystore::new()","Ruby actiondispatch::railsmetastore::new()","Ruby actiondispatch::reloader::new()","Ruby actiondispatch::remoteip::new()","Ruby actiondispatch::remoteip::getip::new()","Ruby actiondispatch::requestid::new()","Ruby actiondispatch::rescue::new()","Ruby actiondispatch::response::new()","Ruby actiondispatch::routing::mapper::resources#new()","Ruby actiondispatch::routing::urlfor::new()","Ruby actiondispatch::session::cachestore::new()","Ruby actiondispatch::session::compatibility::new()","Ruby actiondispatch::session::memcachestore::new()","Ruby actiondispatch::showexceptions::new()","Ruby actiondispatch::static::new()","Ruby actionmailer::base::new()","Ruby actionmailer::collector::new()","Ruby actionview::filesystemresolver::new()","Ruby actionview::helpers::assettaghelper::assetincludetag::new()","Ruby actionview::helpers::atomfeedhelper::atombuilder::new()","Ruby actionview::helpers::atomfeedhelper::atomfeedbuilder::new()","Ruby actionview::helpers::formbuilder::new()","Ruby actionview::helpers::instancetag::new()","Ruby actionview::helpers::numberhelper::invalidnumbererror::new()","Ruby actionview::partialrenderer::new()","Ruby actionview::renderer::new()","Ruby actionview::resolver::new()","Ruby actionview::resolver::path::new()","Ruby actionview::template::new()","Ruby activemodel::attributemethods::classmethods::attributemethodmatcher::new()","Ruby activemodel::blockvalidator::new()","Ruby activemodel::eachvalidator::new()","Ruby activemodel::errors::new()","Ruby activemodel::massassignmentsecurity::loggersanitizer::new()","Ruby activemodel::massassignmentsecurity::sanitizer::new()","Ruby activemodel::name::new()","Ruby activemodel::observer::new()","Ruby activemodel::observerarray::new()","Ruby activemodel::validations::acceptancevalidator::new()","Ruby activemodel::validations::lengthvalidator::new()","Ruby activemodel::validator::new()","Ruby activerecord::attributeassignmenterror::new()","Ruby activerecord::base::new()","Ruby activerecord::connectionadapters::abstractmysqladapter::new()","Ruby activerecord::connectionadapters::connectionhandler::new()","Ruby activerecord::connectionadapters::connectionmanagement::new()","Ruby activerecord::connectionadapters::connectionpool::new()","Ruby activerecord::connectionadapters::mysql2adapter::new()","Ruby activerecord::connectionadapters::mysqladapter::new()","Ruby activerecord::connectionadapters::mysqladapter::statementpool::new()","Ruby activerecord::connectionadapters::postgresqladapter::new()","Ruby activerecord::connectionadapters::postgresqladapter::statementpool::new()","Ruby activerecord::connectionadapters::sqliteadapter::new()","Ruby activerecord::connectionadapters::sqliteadapter::statementpool::new()","Ruby activerecord::connectionadapters::sqliteadapter::version::new()","Ruby activerecord::connectionadapters::schemacache::new()","Ruby activerecord::connectionadapters::statementpool::new()","Ruby activerecord::connectionadapters::table::new()","Ruby activerecord::connectionadapters::tabledefinition::new()","Ruby activerecord::dynamicfindermatch::new()","Ruby activerecord::dynamicscopematch::new()","Ruby activerecord::fixtures::new()","Ruby activerecord::fixtures::file::new()","Ruby activerecord::identitymap::middleware::new()","Ruby activerecord::logsubscriber::new()","Ruby activerecord::migration::new()","Ruby activerecord::migration::commandrecorder::new()","Ruby activerecord::migrationproxy::new()","Ruby activerecord::multiparameterassignmenterrors::new()","Ruby activerecord::querycache::new()","Ruby activerecord::recordinvalid::new()","Ruby activerecord::reflection::macroreflection::new()","Ruby activerecord::relation::new()","Ruby activerecord::relation#new()","Ruby activerecord::result::new()","Ruby activerecord::sessionstore::session::new()","Ruby activerecord::sessionstore::sqlbypass::new()","Ruby activerecord::staleobjecterror::new()","Ruby activerecord::unknownprimarykey::new()","Ruby activerecord::validations::uniquenessvalidator::new()","Ruby activerecord::wrappeddatabaseexception::new()","Ruby activeresource::base::new()","Ruby activeresource::connection::new()","Ruby activeresource::request::new()","Ruby activeresource::response::new()","Ruby activeresource::sslerror::new()","Ruby activeresource::timeouterror::new()","Ruby activesupport::backtracecleaner::new()","Ruby activesupport::bufferedlogger::new()","Ruby activesupport::cache::entry::new()","Ruby activesupport::cache::filestore::new()","Ruby activesupport::cache::memcachestore::new()","Ruby activesupport::cache::memorystore::new()","Ruby activesupport::cache::nullstore::new()","Ruby activesupport::cache::store::new()","Ruby activesupport::cache::strategy::localcache::localstore::new()","Ruby activesupport::dependencies::classcache::new()","Ruby activesupport::dependencies::watchstack::new()","Ruby activesupport::fileupdatechecker::new()","Ruby activesupport::filewatcher::new()","Ruby activesupport::filewatcher::backend::new()","Ruby activesupport::gzip::stream::new()","Ruby activesupport::hashwithindifferentaccess::new()","Ruby activesupport::hashwithindifferentaccess::new()","Ruby activesupport::inflector::inflections::new()","Ruby activesupport::inheritableoptions::new()","Ruby activesupport::json::encoding::encoder::new()","Ruby activesupport::messageencryptor::new()","Ruby activesupport::messageverifier::new()","Ruby activesupport::multibyte::chars::new()","Ruby activesupport::multibyte::unicode::unicodedatabase::new()","Ruby activesupport::notifications::event::new()","Ruby activesupport::notifications::fanout::new()","Ruby activesupport::notifications::instrumenter::new()","Ruby activesupport::orderedhash::new()","Ruby activesupport::safebuffer::new()","Ruby activesupport::safebuffer::safeconcaterror::new()","Ruby activesupport::taggedlogging::new()","Ruby activesupport::timewithzone::new()","Ruby activesupport::timezone::new()","Ruby activesupport::timezone::new()","Ruby arjdbcmysql::error::new()","Ruby build::new()","Ruby html::selector::new()","Ruby mime::type::new()","Ruby plugin::new()","Ruby postscontroller#new()","Ruby rails::actionmethods::new()","Ruby rails::application::new()","Ruby rails::application::configuration::new()","Ruby rails::application::routesreloader::new()","Ruby rails::backtracecleaner::new()","Ruby rails::commands::info::new()","Ruby rails::commands::install::new()","Ruby rails::commands::plugin::new()","Ruby rails::commands::remove::new()","Ruby rails::console::new()","Ruby rails::dbconsole::new()","Ruby rails::engine::configuration::new()","Ruby rails::engine::railties::new()","Ruby rails::generators::activemodel::new()","Ruby rails::generators::appbase::new()","Ruby rails::generators::appgenerator::new()","Ruby rails::generators::generatedattribute::new()","Ruby rails::generators::pluginnewgenerator::new()","Ruby rails::initializable::initializer::new()","Ruby rails::paths::path::new()","Ruby rails::paths::root::new()","Ruby rails::plugin::new()","Ruby rails::rack::debugger::new()","Ruby rails::rack::logtailer::new()","Ruby rails::rack::logger::new()","Ruby rails::railtie::configuration::new()","Ruby rails::server::new()","Ruby railsenvironment::new()","Ruby railsguides::generator::new()","Ruby railsguides::indexer::new()","Ruby recursivehttpfetcher::new()","Ruby sourceannotationextractor::new()","Ruby sprockets::bootstrap::new()","Ruby sprockets::staticcompiler::new()","Rails acl::new()","Rails acl::aclentry::new()","Rails acl::acllist::new()","Rails addrinfo::new()","Rails array::new()","Rails basicobject::new()","Rails benchmark::tms::new()","Rails bigdecimal::new()","Rails cgi::new()","Rails cgi::cookie::new()","Rails cgi::session::new()","Rails cgi::session::filestore::new()","Rails cgi::session::memorystore::new()","Rails cgi::session::nullstore::new()","Rails cgi::session::pstore::new()","Rails csv::new()","Rails csv::row::new()","Rails csv::table::new()","Rails class::new()","Rails class#new()","Rails compositepublisher::new()","Rails conditionvariable::new()","Rails curses::window::new()","Rails dbm::new()","Rails debugger__::context::new()","Rails dl::cfunc::new()","Rails dl::cptr::new()","Rails dl::cptr::new()","Rails dl::cstructentity::new()","Rails dl::carriedfunction::new()","Rails dl::compositehandler::new()","Rails dl::function::new()","Rails dl::handle::new()","Rails dl::packer::new()","Rails dl::stack::new()","Rails drb::drbarray::new()","Rails drb::drbobject::new()","Rails drb::drbremoteerror::new()","Rails drb::drbsslsocket::new()","Rails drb::drbsslsocket::sslconfig::new()","Rails drb::drbserver::new()","Rails drb::drbtcpsocket::new()","Rails drb::drbunixsocket::new()","Rails drb::drbunknown::new()","Rails drb::drbunknownerror::new()","Rails drb::extserv::new()","Rails drb::extservmanager::new()","Rails drb::gw::new()","Rails drb::timeridconv::new()","Rails drb::timeridconv::timerholder2::new()","Rails date::new()","Rails datetime::new()","Rails delegator::new()","Rails digest::hmac::new()","Rails digest::instance#new()","Rails dir::new()","Rails erb::new()","Rails encoding::converter::new()","Rails enumerator::new()","Rails exception::new()","Rails fiddle::closure::new()","Rails fiddle::closure::blockcaller::new()","Rails fiddle::function::new()","Rails file::new()","Rails file::stat::new()","Rails foo::new()","Rails gdbm::new()","Rails gserver::new()","Rails gem::builder::new()","Rails gem::command::new()","Rails gem::commandmanager::new()","Rails gem::commands::buildcommand::new()","Rails gem::commands::certcommand::new()","Rails gem::commands::checkcommand::new()","Rails gem::commands::cleanupcommand::new()","Rails gem::commands::contentscommand::new()","Rails gem::commands::dependencycommand::new()","Rails gem::commands::environmentcommand::new()","Rails gem::commands::fetchcommand::new()","Rails gem::commands::generateindexcommand::new()","Rails gem::commands::helpcommand::new()","Rails gem::commands::installcommand::new()","Rails gem::commands::listcommand::new()","Rails gem::commands::lockcommand::new()","Rails gem::commands::outdatedcommand::new()","Rails gem::commands::ownercommand::new()","Rails gem::commands::pristinecommand::new()","Rails gem::commands::pushcommand::new()","Rails gem::commands::querycommand::new()","Rails gem::commands::rdoccommand::new()","Rails gem::commands::searchcommand::new()","Rails gem::commands::servercommand::new()","Rails gem::commands::setupcommand::new()","Rails gem::commands::sourcescommand::new()","Rails gem::commands::specificationcommand::new()","Rails gem::commands::stalecommand::new()","Rails gem::commands::uninstallcommand::new()","Rails gem::commands::unpackcommand::new()","Rails gem::commands::updatecommand::new()","Rails gem::commands::whichcommand::new()","Rails gem::configfile::new()","Rails gem::consoleui::new()","Rails gem::dependency::new()","Rails gem::dependencyinstaller::new()","Rails gem::dependencylist::new()","Rails gem::docmanager::new()","Rails gem::filepermissionerror::new()","Rails gem::format::new()","Rails gem::gemnotfoundexception::new()","Rails gem::gempathsearcher::new()","Rails gem::gemrunner::new()","Rails gem::indexer::new()","Rails gem::installer::new()","Rails gem::mockgemui::new()","Rails gem::mockgemui::termerror::new()","Rails gem::oldformat::new()","Rails gem::package::formaterror::new()","Rails gem::package::tarheader::new()","Rails gem::package::taroutput::new()","Rails gem::package::tarreader::new()","Rails gem::package::tarreader::new()","Rails gem::package::tarreader::entry::new()","Rails gem::package::tarwriter::new()","Rails gem::package::tarwriter::new()","Rails gem::package::tarwriter::boundedstream::new()","Rails gem::package::tarwriter::restrictedstream::new()","Rails gem::packagetask::new()","Rails gem::pathsupport::new()","Rails gem::platform::new()","Rails gem::platformmismatch::new()","Rails gem::remotefetcher::new()","Rails gem::remotefetcher::fetcherror::new()","Rails gem::requirement::new()","Rails gem::security::policy::new()","Rails gem::security::signer::new()","Rails gem::server::new()","Rails gem::silentui::new()","Rails gem::sourceindex::new()","Rails gem::specfetcher::new()","Rails gem::specification::new()","Rails gem::streamui::new()","Rails gem::streamui::silentdownloadreporter::new()","Rails gem::streamui::silentprogressreporter::new()","Rails gem::streamui::simpleprogressreporter::new()","Rails gem::streamui::verbosedownloadreporter::new()","Rails gem::streamui::verboseprogressreporter::new()","Rails gem::systemexitexception::new()","Rails gem::uninstaller::new()","Rails gem::validator::new()","Rails gem::version::new()","Rails getoptlong::new()","Rails hash::new()","Rails httpserver::new()","Rails httpserver::request::new()","Rails httpserver::response::new()","Rails httpserver::table::new()","Rails io::new()","Rails ipaddr::new()","Rails irb::context::new()","Rails irb::extendcommand::nop::new()","Rails irb::fileinputmethod::new()","Rails irb::frame::new()","Rails irb::history::new()","Rails irb::inputmethod::new()","Rails irb::inspector::new()","Rails irb::irb::new()","Rails irb::jobmanager::new()","Rails irb::locale::new()","Rails irb::notifier::abstractnotifier::new()","Rails irb::notifier::compositenotifier::new()","Rails irb::notifier::levelednotifier::new()","Rails irb::notifier::nomsgnotifier::new()","Rails irb::readlineinputmethod::new()","Rails irb::slex::new()","Rails irb::slex::node::new()","Rails irb::stdioinputmethod::new()","Rails irb::workspace::new()","Rails iconv::new()","Rails iconv::failure::new()","Rails logger::new()","Rails logger::application::new()","Rails logger::formatter::new()","Rails logger::logdevice::new()","Rails matrix::new()","Rails matrix::eigenvaluedecomposition::new()","Rails matrix::lupdecomposition::new()","Rails module::new()","Rails monitormixin::new()","Rails monitormixin::conditionvariable::new()","Rails mutex::new()","Rails mutex_m::new()","Rails nameerror::new()","Rails net::ftp::new()","Rails net::http::new()","Rails net::http::new()","Rails net::http::new()","Rails net::http::new()","Rails net::httpgenericrequest::new()","Rails net::httprequest::new()","Rails net::imap::new()","Rails net::imap::crammd5authenticator::new()","Rails net::imap::digestmd5authenticator::new()","Rails net::imap::loginauthenticator::new()","Rails net::imap::plainauthenticator::new()","Rails net::imap::responseerror::new()","Rails net::pop3::new()","Rails net::pop3::new()","Rails net::pop3::new()","Rails net::pop3::new()","Rails net::smtp::new()","Rails net::smtp::new()","Rails net::smtp::response::new()","Rails net::telnet::new()","Rails nomethoderror::new()","Rails oleproperty::new()","Rails openssl::asn1::asn1data::new()","Rails openssl::asn1::constructive::new()","Rails openssl::asn1::primitive::new()","Rails openssl::bn::new()","Rails openssl::buffering::new()","Rails openssl::cipher::new()","Rails openssl::config::new()","Rails openssl::digest::new()","Rails openssl::digest::digest::new()","Rails openssl::hmac::new()","Rails openssl::netscape::spki::new()","Rails openssl::ocsp::basicresponse::new()","Rails openssl::ocsp::certificateid::new()","Rails openssl::ocsp::request::new()","Rails openssl::ocsp::response::new()","Rails openssl::pkcs12::new()","Rails openssl::pkcs7::new()","Rails openssl::pkcs7::recipientinfo::new()","Rails openssl::pkcs7::signerinfo::new()","Rails openssl::pkey::dh::new()","Rails openssl::pkey::dsa::new()","Rails openssl::pkey::ec::new()","Rails openssl::pkey::ec::group::new()","Rails openssl::pkey::ec::point::new()","Rails openssl::pkey::pkey::new()","Rails openssl::pkey::rsa::new()","Rails openssl::ssl::nonblock::new()","Rails openssl::ssl::sslcontext::new()","Rails openssl::ssl::sslserver::new()","Rails openssl::ssl::sslsocket::new()","Rails openssl::ssl::session::new()","Rails openssl::x509::attribute::new()","Rails openssl::x509::crl::new()","Rails openssl::x509::certificate::new()","Rails openssl::x509::extension::new()","Rails openssl::x509::extensionfactory::new()","Rails openssl::x509::name::new()","Rails openssl::x509::request::new()","Rails openssl::x509::revoked::new()","Rails openssl::x509::store::new()","Rails openstruct::new()","Rails openuri::httperror::new()","Rails openuri::httpredirect::new()","Rails optionparser#new()","Rails optionparser::new()","Rails optionparser::arguable::new()","Rails optionparser::list::new()","Rails optionparser::parseerror::new()","Rails optionparser::switch::new()","Rails pstore::new()","Rails pathname::new()","Rails prettyprint::new()","Rails prettyprint::breakable::new()","Rails prettyprint::group::new()","Rails prettyprint::groupqueue::new()","Rails prettyprint::singleline::new()","Rails prettyprint::text::new()","Rails prime::new()","Rails prime::eratosthenesgenerator::new()","Rails prime::generator23::new()","Rails prime::pseudoprimegenerator::new()","Rails prime::trialdivisiongenerator::new()","Rails proc::new()","Rails psych::coder::new()","Rails psych::emitter::new()","Rails psych::handler::dumperoptions::new()","Rails psych::nodes::alias::new()","Rails psych::nodes::document::new()","Rails psych::nodes::mapping::new()","Rails psych::nodes::node::new()","Rails psych::nodes::scalar::new()","Rails psych::nodes::sequence::new()","Rails psych::nodes::stream::new()","Rails psych::parser::new()","Rails psych::scalarscanner::new()","Rails psych::streaming::new()","Rails psych::syntaxerror::new()","Rails psych::treebuilder::new()","Rails psych::visitors::depthfirst::new()","Rails psych::visitors::emitter::new()","Rails psych::visitors::jsontree::new()","Rails psych::visitors::toruby::new()","Rails psych::visitors::yamltree::new()","Rails queue::new()","Rails rdoc::alias::new()","Rails rdoc::anymethod::new()","Rails rdoc::attr::new()","Rails rdoc::classmodule::new()","Rails rdoc::codeobject::new()","Rails rdoc::constant::new()","Rails rdoc::context::new()","Rails rdoc::context::section::new()","Rails rdoc::crossreference::new()","Rails rdoc::erbio::new()","Rails rdoc::generator::darkfish::new()","Rails rdoc::generator::ri::new()","Rails rdoc::include::new()","Rails rdoc::markup::new()","Rails rdoc::markup::attrspan::new()","Rails rdoc::markup::attributemanager::new()","Rails rdoc::markup::blankline::new()","Rails rdoc::markup::document::new()","Rails rdoc::markup::formatter::new()","Rails rdoc::markup::indentedparagraph::new()","Rails rdoc::markup::list::new()","Rails rdoc::markup::listitem::new()","Rails rdoc::markup::parser::new()","Rails rdoc::markup::preprocess::new()","Rails rdoc::markup::raw::new()","Rails rdoc::markup::special::new()","Rails rdoc::markup::toansi::new()","Rails rdoc::markup::tobs::new()","Rails rdoc::markup::tohtml::new()","Rails rdoc::markup::tohtmlcrossref::new()","Rails rdoc::markup::tordoc::new()","Rails rdoc::markup::tottonly::new()","Rails rdoc::methodattr::new()","Rails rdoc::parser::new()","Rails rdoc::parser::c::new()","Rails rdoc::parser::ruby::new()","Rails rdoc::parser::simple::new()","Rails rdoc::rdoc::new()","Rails rdoc::ri::driver::new()","Rails rdoc::ri::store::new()","Rails rdoc::require::new()","Rails rdoc::rubygemshook::new()","Rails rdoc::stats::new()","Rails rdoc::stats::quiet::new()","Rails rdoc::task::new()","Rails rdoc::toplevel::new()","Rails rdoc::toplevel::new()","Rails rexml::attlistdecl::new()","Rails rexml::attribute::new()","Rails rexml::attributes::new()","Rails rexml::cdata::new()","Rails rexml::child::new()","Rails rexml::comment::new()","Rails rexml::dtd::elementdecl::new()","Rails rexml::dtd::entitydecl::new()","Rails rexml::dtd::notationdecl::new()","Rails rexml::declaration::new()","Rails rexml::doctype::new()","Rails rexml::document::new()","Rails rexml::element::new()","Rails rexml::elementdecl::new()","Rails rexml::elements::new()","Rails rexml::entity::new()","Rails rexml::externalentity::new()","Rails rexml::formatters::default::new()","Rails rexml::formatters::pretty::new()","Rails rexml::formatters::transitive::new()","Rails rexml::iosource::new()","Rails rexml::instruction::new()","Rails rexml::light::node::new()","Rails rexml::notationdecl::new()","Rails rexml::output::new()","Rails rexml::parent::new()","Rails rexml::parseexception::new()","Rails rexml::parsers::baseparser::new()","Rails rexml::parsers::lightparser::new()","Rails rexml::parsers::pullevent::new()","Rails rexml::parsers::pullparser::new()","Rails rexml::parsers::sax2parser::new()","Rails rexml::parsers::streamparser::new()","Rails rexml::parsers::treeparser::new()","Rails rexml::parsers::ultralightparser::new()","Rails rexml::source::new()","Rails rexml::syncenumerator::new()","Rails rexml::text::new()","Rails rexml::undefinednamespaceexception::new()","Rails rexml::validation::choice::new()","Rails rexml::validation::event::new()","Rails rexml::validation::interleave::new()","Rails rexml::validation::oneormore::new()","Rails rexml::validation::ref::new()","Rails rexml::validation::relaxng::new()","Rails rexml::validation::state::new()","Rails rexml::validation::validationexception::new()","Rails rexml::xmldecl::new()","Rails rexml::xpathparser::new()","Rails rss::atom::entry::new()","Rails rss::atom::feed::new()","Rails rss::baseparser::new()","Rails rss::conversionerror::new()","Rails rss::converter::new()","Rails rss::element::new()","Rails rss::ituneschannelmodel::itunescategory::new()","Rails rss::ituneschannelmodel::itunesimage::new()","Rails rss::ituneschannelmodel::itunesowner::new()","Rails rss::itunesitemmodel::itunesduration::new()","Rails rss::imagefaviconmodel::imagefavicon::new()","Rails rss::imageitemmodel::imageitem::new()","Rails rss::listenermixin::new()","Rails rss::maker::atom::entry::new()","Rails rss::maker::atom::feed::new()","Rails rss::maker::base::new()","Rails rss::maker::itemsbase::new()","Rails rss::maker::rss09::new()","Rails rss::maker::rss091::new()","Rails rss::maker::rss092::new()","Rails rss::maker::rss10::new()","Rails rss::maker::rss20::new()","Rails rss::maker::rssbase::new()","Rails rss::missingattributeerror::new()","Rails rss::missingtagerror::new()","Rails rss::nserror::new()","Rails rss::notavailablevalueerror::new()","Rails rss::notexpectedtagerror::new()","Rails rss::notexpectedtagerror::new()","Rails rss::notseterror::new()","Rails rss::notvalidxmlparser::new()","Rails rss::notwellformederror::new()","Rails rss::overlappedprefixerror::new()","Rails rss::parser::new()","Rails rss::rdf::new()","Rails rss::rdf::bag::new()","Rails rss::rdf::bag::new()","Rails rss::rdf::channel::new()","Rails rss::rdf::channel::image::new()","Rails rss::rdf::channel::items::new()","Rails rss::rdf::channel::textinput::new()","Rails rss::rdf::image::new()","Rails rss::rdf::item::new()","Rails rss::rdf::li::new()","Rails rss::rdf::li::new()","Rails rss::rdf::li::new()","Rails rss::rdf::seq::new()","Rails rss::rdf::seq::new()","Rails rss::rdf::textinput::new()","Rails rss::rootelementmixin::new()","Rails rss::rss::new()","Rails rss::rss::channel::cloud::new()","Rails rss::rss::channel::image::new()","Rails rss::rss::channel::item::category::new()","Rails rss::rss::channel::item::enclosure::new()","Rails rss::rss::channel::item::guid::new()","Rails rss::rss::channel::item::source::new()","Rails rss::rss::channel::skipdays::day::new()","Rails rss::rss::channel::skiphours::hour::new()","Rails rss::rss::channel::textinput::new()","Rails rss::taxonomytopicmodel::taxonomytopic::new()","Rails rss::taxonomytopicsmodel::taxonomytopics::new()","Rails rss::toomuchtagerror::new()","Rails rss::trackbackmodel10::trackbackabout::new()","Rails rss::trackbackmodel10::trackbackping::new()","Rails rss::trackbackmodel20::trackbackabout::new()","Rails rss::trackbackmodel20::trackbackping::new()","Rails rss::unknownconversionmethoderror::new()","Rails rss::unknownconversionmethoderror::new()","Rails rss::unknowntagerror::new()","Rails rss::unsupportedmakerversionerror::new()","Rails rss::xml::element::new()","Rails rss::xmlparsernotfound::new()","Rails rss::xmlstylesheet::new()","Rails rss::xmlstylesheetmixin::new()","Rails rake::application::new()","Rails rake::compositepublisher::new()","Rails rake::filelist::new()","Rails rake::ftpfile::new()","Rails rake::ftpuploader::new()","Rails rake::invocationchain::new()","Rails rake::namespace::new()","Rails rake::packagetask::new()","Rails rake::pseudostatus::new()","Rails rake::rubyforgepublisher::new()","Rails rake::rulerecursionoverflowerror::new()","Rails rake::sshdirpublisher::new()","Rails rake::sshfilepublisher::new()","Rails rake::task::new()","Rails rake::taskarguments::new()","Rails rake::taskmanager::new()","Rails random::new()","Rails range::new()","Rails regexp::new()","Rails resolv::new()","Rails resolv::dns::new()","Rails resolv::dns::resource::domainname::new()","Rails resolv::dns::resource::generic::new()","Rails resolv::dns::resource::hinfo::new()","Rails resolv::dns::resource::in::a::new()","Rails resolv::dns::resource::in::aaaa::new()","Rails resolv::dns::resource::in::srv::new()","Rails resolv::dns::resource::in::wks::new()","Rails resolv::dns::resource::minfo::new()","Rails resolv::dns::resource::mx::new()","Rails resolv::dns::resource::soa::new()","Rails resolv::dns::resource::txt::new()","Rails resolv::hosts::new()","Rails rinda::drbobjecttemplate::new()","Rails rinda::notifytemplateentry::new()","Rails rinda::ringfinger::new()","Rails rinda::ringprovider::new()","Rails rinda::ringserver::new()","Rails rinda::simplerenewer::new()","Rails rinda::tuple::new()","Rails rinda::tuplebag::tuplebin::new()","Rails rinda::tupleentry::new()","Rails rinda::tuplespace::new()","Rails rinda::tuplespaceproxy::new()","Rails rinda::waittemplateentry::new()","Rails ripper::filter::new()","Rails ripper::tokenpattern::matchdata::new()","Rails rubylex::new()","Rails rubytoken::tkid::new()","Rails rubytoken::tknode::new()","Rails rubytoken::tkopasgn::new()","Rails rubytoken::tkunknownchar::new()","Rails rubytoken::tkval::new()","Rails rubytoken::token::new()","Rails rubyvm::instructionsequence::new()","Rails sdbm::new()","Rails sockssocket::new()","Rails sockssocket::new()","Rails set::new()","Rails shell::new()","Rails shell::appendfile::new()","Rails shell::appendio::new()","Rails shell::cat::new()","Rails shell::commandprocessor::new()","Rails shell::concat::new()","Rails shell::echo::new()","Rails shell::filter::new()","Rails shell::glob::new()","Rails shell::processcontroller::new()","Rails shell::systemcommand::new()","Rails shell::tee::new()","Rails shell::void::new()","Rails signalexception::new()","Rails sizedqueue::new()","Rails socket::new()","Rails socket::ancillarydata::new()","Rails socket::option::new()","Rails socket::udpsource::new()","Rails sshdirpublisher::new()","Rails sshfilepublisher::new()","Rails string::new()","Rails stringio::new()","Rails stringscanner::new()","Rails struct::new()","Rails sync_m::new()","Rails sync_m::new()","Rails systemcallerror::new()","Rails systemexit::new()","Rails tcpserver::new()","Rails tcpsocket::new()","Rails tcpsocket::new()","Rails tempfile::new()","Rails thread::new()","Rails threadswait::new()","Rails threadswait::new()","Rails time::new()","Rails udpsocket::new()","Rails unixserver::new()","Rails unixsocket::new()","Rails uri::ftp::new()","Rails uri::generic::new()","Rails uri::http::new()","Rails uri::ldap::new()","Rails uri::mailto::new()","Rails uri::parser::new()","Rails vector::new()","Rails webrick::basiclog::new()","Rails webrick::cgi::new()","Rails webrick::cgi::socket::new()","Rails webrick::cookie::new()","Rails webrick::genericserver::new()","Rails webrick::httpauth::basicauth::new()","Rails webrick::httpauth::digestauth::new()","Rails webrick::httpauth::htdigest::new()","Rails webrick::httpauth::htgroup::new()","Rails webrick::httpauth::htpasswd::new()","Rails webrick::httpproxyserver::new()","Rails webrick::httprequest::new()","Rails webrick::httpresponse::new()","Rails webrick::httpserver::new()","Rails webrick::httpserver::mounttable::new()","Rails webrick::httpservlet::abstractservlet::new()","Rails webrick::httpservlet::cgihandler::new()","Rails webrick::httpservlet::defaultfilehandler::new()","Rails webrick::httpservlet::erbhandler::new()","Rails webrick::httpservlet::filehandler::new()","Rails webrick::httpservlet::prochandler::new()","Rails webrick::httputils::formdata::new()","Rails webrick::httpversion::new()","Rails webrick::log::new()","Rails webrick::utils::timeouthandler::new()","Rails win32ole::new()","Rails win32ole_event::new()","Rails win32ole_method::new()","Rails win32ole_param::new()","Rails win32ole_type::new()","Rails win32ole_typelib::new()","Rails win32ole_variant::new()","Rails weakref::new()","Rails win32::registry::new()","Rails win32::registry::error::new()","Rails win32::registry::predefinedkey::new()","Rails win32::sspi::identity::new()","Rails win32::sspi::negotiateauth::new()","Rails win32::sspi::sspiresult::new()","Rails win32::sspi::securitybuffer::new()","Rails win32api::new()","Rails xmlrpc::base64::new()","Rails xmlrpc::basicserver::new()","Rails xmlrpc::cgiserver::new()","Rails xmlrpc::cgiserver::new()","Rails xmlrpc::client::new()","Rails xmlrpc::client::proxy::new()","Rails xmlrpc::create::new()","Rails xmlrpc::datetime::new()","Rails xmlrpc::faultexception::new()","Rails xmlrpc::marshal::new()","Rails xmlrpc::modrubyserver::new()","Rails xmlrpc::server::new()","Rails xmlrpc::service::basicinterface::new()","Rails xmlrpc::service::interface::new()","Rails xmlrpc::service::publicinstancemethodsinterface::new()","Rails xmlrpc::webrickservlet::new()","Rails xmlrpc::xmlparser::nqxmlstreamparser::new()","Rails xmlrpc::xmlparser::nqxmltreeparser::new()","Rails xmlrpc::xmlparser::nqxmltreeparser::new()","Rails xmlrpc::xmlparser::rexmlstreamparser::new()","Rails xmlrpc::xmlparser::streamparsermixin::new()","Rails xmlrpc::xmlparser::xmlscanstreamparser::new()","Rails xmlrpc::xmlparser::xmlstreamparser::new()","Rails xmlrpc::xmlparser::xmltreeparser::new()","Rails xmlrpc::xmlparser::xmltreeparser::new()","Rails xmlrpc::xmlwriter::xmlparser::new()","Rails xmp::new()","Rails xmp::stringinputmethod::new()","Rails yaml::store::new()","Rails zlib::deflate::new()","Rails zlib::gzipreader::new()","Rails zlib::gzipwriter::new()","Rails zlib::inflate::new()","Rails uri::ftp::new2()","Rails xmlrpc::client::new2()","Rails xmlrpc::client::new3()","Ruby activeresource::base#new?()","Rails irb::methodextender#new_alias_name()","Rails monitormixin#new_cond()","Ruby activesupport::dependencies::watchstack#new_constants()","Ruby activeresource::base#new_element_path()","Ruby activeresource::base::new_element_path()","Rails xmlrpc::client::new_from_hash()","Ruby activesupport::hashwithindifferentaccess::new_from_hash_copying_default()","Ruby activesupport::hashwithindifferentaccess::new_from_hash_copying_default()","Rails xmlrpc::client::new_from_uri()","Rails ipaddr::new_ntoh()","Rails openstruct#new_ostruct_member()","Ruby activerecord::persistence#new_record?()","Ruby activeresource::base#new_record?()","Rails rake::taskarguments#new_scope()","Rails random::new_seed()","Ruby rails::consolemethods#new_session()","Rails date#new_start()","Rails drb::drbobject::new_with()","Rails drb::drbobject::new_with_uri()","Rails rss::utils#new_with_value_if_need()","Rails net::http::newobj()","Rails net::http::newobj()","Rails date#next()","Rails enumerator#next()","Rails integer#next()","Rails prime::eratosthenesgenerator#next()","Rails prime::generator23#next()","Rails prime::oldcompatibility#next()","Rails prime::pseudoprimegenerator#next()","Rails prime::trialdivisiongenerator#next()","Rails rexml::validation::choice#next()","Rails rexml::validation::interleave#next()","Rails rexml::validation::oneormore#next()","Rails rexml::validation::optional#next()","Rails rexml::validation::state#next()","Rails rexml::validation::zeroormore#next()","Rails string#next()","Rails symbol#next()","Rails string#next!()","Rails rexml::validation::interleave#next_current()","Rails date#next_day()","Ruby html::selector#next_element()","Rails rexml::element#next_element()","Ruby activerecord::connectionadapters::postgresqladapter::statementpool#next_key()","Ruby activerecord::migration#next_migration_number()","Ruby date#next_month()","Ruby time#next_month()","Rails date#next_month()","Ruby html::selector#next_selector()","Rails rexml::child#next_sibling=()","Rails rexml::node#next_sibling_node()","Rails prime::eratosthenessieve#next_to()","Rails openssl::x509::crl#next_update()","Rails openssl::x509::crl#next_update=()","Rails enumerator#next_values()","Rails threadswait#next_wait()","Rails threadswait#next_wait()","Ruby date#next_week()","Ruby time#next_week()","Ruby date#next_year()","Ruby time#next_year()","Rails date#next_year()","Rails nilclass#nil?()","Rails object#nil?()","Rails nkf::nkf()","Rails curses::nl()","Rails file::stat#nlink()","Rails newton#nlsolve()","Rails net::ftp#nlst()","Ruby rails::generators::no_color!()","Rails curses::nocbreak()","Rails curses::nocrmode()","Rails nqxml::node#nodename()","Rails nqxml::node#nodetype()","Rails nqxml::node#nodevalue()","Rails rexml::attlistdecl#node_type()","Rails rexml::attribute#node_type()","Rails rexml::comment#node_type()","Rails rexml::doctype#node_type()","Rails rexml::document#node_type()","Rails rexml::element#node_type()","Rails rexml::instruction#node_type()","Rails rexml::light::node#node_type()","Rails rexml::text#node_type()","Rails rexml::xmldecl#node_type()","Rails curses::window#nodelay=()","Rails rdoc::stats::verbose#nodoc()","Rails curses::noecho()","Rails gem::mockgemui::tty#noecho()","Rails io#noecho()","Rails rdoc::classmodule#non_aliases()","Rails gem::specification::non_nil_attributes()","Ruby actioncontroller::httpauthentication::digest#nonce()","Rails enumerable#none?()","Rails gem::requirement#none?()","Rails curses::nonl()","Rails bigdecimal#nonzero?()","Rails numeric#nonzero?()","Rails net::ftp#noop()","Rails net::imap#noop()","Rails curses::noraw()","Rails newton#norm()","Rails vector#norm()","Rails matrix#normal?()","Ruby activesupport::multibyte::chars#normalize()","Ruby activesupport::multibyte::unicode#normalize()","Rails gem::specification#normalize()","Rails rdoc::markup::verbatim#normalize()","Rails rexml::parsers::baseparser#normalize()","Rails rexml::text::normalize()","Rails rss::maker::itemsbase#normalize()","Rails rake::win32::normalize()","Rails uri::generic#normalize()","Rails vector#normalize()","Rails uri::generic#normalize!()","Rails rdoc::text#normalize_comment()","Ruby actiondispatch::routing::mapper::normalize_name()","Ruby actiondispatch::routing::mapper::normalize_path()","Rails webrick::httputils::normalize_path()","Rails rexml::functions::normalize_space()","Rails gem::remotefetcher#normalize_uri()","Rails gem::specification::normalize_yaml_input()","Rails rexml::entity#normalized()","Rails rdoc::rdoc#normalized_file_list()","Rails rexml::functions::not()","Rails openssl::x509::certificate#not_after()","Rails openssl::x509::certificate#not_after=()","Rails openssl::x509::certificate#not_before()","Rails openssl::x509::certificate#not_before=()","Ruby actiondispatch::http::cache::request#not_modified?()","Rails webrick::httpservlet::defaultfilehandler#not_modified?()","Rails rss::maker::atom::entry::channel::generator::not_set_name()","Rails rss::maker::atom::feed::channel::categories::category::not_set_name()","Rails rss::maker::atom::feed::channel::generator::not_set_name()","Rails rss::maker::atom::feed::channel::links::link::not_set_name()","Rails rss::maker::atom::feed::items::item::categories::category::not_set_name()","Rails rss::maker::atom::feed::items::item::links::link::not_set_name()","Rails rss::maker::atom::feed::items::item::source::categories::category::not_set_name()","Rails rss::maker::atom::feed::items::item::source::generator::not_set_name()","Rails rss::maker::atom::feed::items::item::source::links::link::not_set_name()","Rails rss::maker::atom::feed::items::item::source::logo::not_set_name()","Rails rexml::doctype#notation()","Rails rexml::sax2listener#notationdecl()","Rails rexml::streamlistener#notationdecl()","Rails rexml::parsers::pullevent#notationdecl?()","Rails rexml::doctype#notations()","Ruby railsguides::textileextensions#notestuff()","Ruby actiondispatch::flash::flashhash#notice()","Ruby actiondispatch::flash::flashhash#notice=()","Rails rinda::notifytemplateentry#notify()","Rails rinda::tuplespace#notify()","Rails rinda::tuplespaceproxy#notify()","Rails shell::notify()","Rails shell::commandprocessor#notify()","Rails shell::systemcommand#notify()","Rails irb::notifier::abstractnotifier#notify?()","Rails irb::notifier::levelednotifier#notify?()","Rails irb::notifier::nomsgnotifier#notify?()","Ruby activemodel::observing::classmethods#notify_observers()","Rails drb::drbobservable#notify_observers()","Rails observable#notify_observers()","Rails curses::window#noutrefresh()","Ruby actiondispatch::flash::flashhash#now()","Ruby activesupport::timezone#now()","Rails datetime::now()","Rails time::now()","Ruby actiondispatch::flash::flashhash#now_is_loaded?()","Rails rexml::xmldecl#nowrite()","Rails rake::fileutilsext#nowrite()","Rails io#nread()","Rails time#nsec()","Ruby html::selector#nth_child()","Rails ipaddr::ntop()","Rails dl::cptr#null?()","Rails dl::cptr#null?()","Rails queue#num_waiting()","Rails sizedqueue#num_waiting()","Rails rexml::functions::number()","Ruby actionview::helpers::formhelper#number_field()","Ruby actionview::helpers::formtaghelper#number_field_tag()","Ruby actionview::helpers::numberhelper#number_to_currency()","Ruby actionview::helpers::numberhelper#number_to_human()","Ruby actionview::helpers::numberhelper#number_to_human_size()","Ruby actionview::helpers::numberhelper#number_to_percentage()","Ruby actionview::helpers::numberhelper#number_to_phone()","Ruby actionview::helpers::numberhelper#number_with_delimiter()","Ruby actionview::helpers::numberhelper#number_with_precision()","Rails complex#numerator()","Rails float#numerator()","Rails integer#numerator()","Rails numeric#numerator()","Rails rational#numerator()","Ruby actionview::helpers::activemodelinstancetag#object()","Rails pp::ppmethods#object_address_group()","Rails rdoc::toplevel#object_class()","Rails pp::ppmethods#object_group()","Rails object#object_id()","Rails psych::object_maker()","Ruby activemodel::observer::observe()","Ruby activemodel::observer::observed_class()","Ruby activemodel::observer::observed_classes()","Ruby activerecord::observer#observed_classes()","Ruby activemodel::observerarray#observer_class_for()","Ruby activemodel::observing::classmethods#observer_instances()","Ruby activemodel::observing::classmethods#observers()","Ruby activemodel::observing::classmethods#observers=()","Rails string#oct()","Ruby activerecord::logsubscriber#odd?()","Rails bignum#odd?()","Rails fixnum#odd?()","Rails integer#odd?()","Rails tracer::off()","Rails win32ole_event#off_event()","Rails rdoc::markup::formatter#off_tags()","Ruby activerecord::querymethods#offset()","Rails matchdata#offset()","Rails win32ole_method#offset_vtbl()","Rails io#oflush()","Rails openssl::x509::attribute#oid()","Rails openssl::x509::extension#oid()","Rails openssl::x509::attribute#oid=()","Rails openssl::x509::extension#oid=()","Rails gem::dependencylist#ok?()","Rails win32::sspi::sspiresult#ok?()","Rails gem::dependencylist#ok_to_remove?()","Rails irb::irbloader#old()","Rails rexml::xmldecl#old_enc=()","Rails win32ole#ole_activex_initialize()","Rails win32ole_type::ole_classes()","Rails win32ole_typelib#ole_classes()","Rails win32ole#ole_free()","Rails win32ole::ole_free()","Rails win32ole#ole_func_methods()","Rails win32ole#ole_get_methods()","Rails win32ole::ole_initialize()","Rails win32ole#ole_method()","Rails win32ole#ole_method_help()","Rails win32ole#ole_methods()","Rails win32ole_type#ole_methods()","Rails win32ole#ole_obj_help()","Rails win32ole#ole_put_methods()","Rails win32ole#ole_query_interface()","Rails win32ole::ole_reference_count()","Rails win32ole#ole_respond_to?()","Rails win32ole::ole_show_help()","Rails win32ole#ole_type()","Rails win32ole_param#ole_type()","Rails win32ole_type#ole_type()","Rails win32ole_variable#ole_type()","Rails win32ole_param#ole_type_detail()","Rails win32ole_variable#ole_type_detail()","Rails win32ole#ole_typelib()","Rails win32ole_type#ole_typelib()","Rails win32ole_typelib#ole_types()","Rails win32ole::ole_uninitialize()","Rails optionparser#on()","Rails tracer::on()","Rails rss::xmlscanlistener#on_attr_charref()","Rails rss::xmlscanlistener#on_attr_charref_hex()","Rails rss::xmlscanlistener#on_attr_entityref()","Rails rss::xmlscanlistener#on_attr_value()","Rails rss::xmlscanlistener#on_attribute()","Rails xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_cdata()","Ruby activesupport::xmlmini_libxmlsax::hashbuilder#on_cdata_block()","Ruby activesupport::xmlmini_libxmlsax::hashbuilder#on_characters()","Rails xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_chardata()","Rails rss::xmlscanlistener#on_charref()","Rails xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_charref()","Rails rss::xmlscanlistener#on_charref_hex()","Rails xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_charref_hex()","Rails openssl::pkey::ec::point#on_curve?()","Ruby activesupport::xmlmini_libxmlsax::hashbuilder#on_end_document()","Ruby activesupport::xmlmini_libxmlsax::hashbuilder#on_end_element()","Rails rss::xmlscanlistener#on_entityref()","Rails xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_entityref()","Rails rss::xmlscanlistener#on_etag()","Rails win32ole_event#on_event()","Rails win32ole_event#on_event_with_outargs()","Rails optionparser#on_head()","Ruby activesupport::on_load()","Ruby activesupport::on_load_all()","Rails rss::xmlscanlistener#on_stag()","Rails rss::xmlscanlistener#on_stag_end()","Rails xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_stag_end()","Rails rss::xmlscanlistener#on_stag_end_empty()","Rails xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_stag_end_empty()","Ruby activesupport::xmlmini_libxmlsax::hashbuilder#on_start_document()","Ruby activesupport::xmlmini_libxmlsax::hashbuilder#on_start_element()","Rails rdoc::markup::formatter#on_tags()","Rails optionparser#on_tail()","Rails rss::xmlscanlistener#on_xmldecl_encoding()","Rails rss::xmlscanlistener#on_xmldecl_end()","Rails rss::xmlscanlistener#on_xmldecl_standalone()","Rails rss::xmlscanlistener#on_xmldecl_version()","Rails enumerable#one?()","Rails rdoc::context#ongoing_visibility=()","Ruby activerecord::spawnmethods#only()","Ruby html::selector#only_child()","Ruby actioncontroller::httpauthentication::digest#opaque()","Rails uri::generic#opaque=()","Ruby actiondispatch::railsentitystore#open()","Ruby activerecord::fixtures::file::open()","Rails csv::open()","Rails dbm::open()","Rails drb::drbprotocol::open()","Rails drb::drbsslsocket::open()","Rails drb::drbtcpsocket::open()","Rails drb::drbunixsocket::open()","Rails dir::open()","Rails file::open()","Rails gdbm::open()","Rails gem::package::open()","Rails gem::package::taroutput::open()","Rails io::open()","Rails iconv::open()","Rails kernel::open()","Rails net::ftp::open()","Rails openuri::openread#open()","Rails pty::open()","Rails pathname#open()","Rails resolv::dns::open()","Rails sdbm::open()","Rails shell::commandprocessor#open()","Rails stringio::open()","Rails syslog::open()","Rails tempfile::open()","Rails tempfile#open()","Rails win32::registry::open()","Rails win32::registry#open()","Rails zlib::gzipreader::open()","Rails zlib::gzipwriter::open()","Rails syslog::open!()","Rails win32::registry#open?()","Ruby activesupport::bufferedlogger#open_log()","Rails net::smtp#open_message_stream()","Rails net::smtp#open_message_stream()","Rails drb::drbprotocol::open_server()","Rails drb::drbsslsocket::open_server()","Rails drb::drbtcpsocket::open_server()","Rails drb::drbunixsocket::open_server()","Rails drb::drbtcpsocket::open_server_inaddr_any()","Rails gem::remotefetcher#open_uri_or_path()","Rails pathname#opendir()","Rails syslog::opened?()","Ruby rails::server#opt_parser()","Ruby actionview::helpers::formoptionshelper#option_groups_from_collection_for_select()","Rails rdoc::task#option_list()","Rails win32ole_param#optional?()","Ruby actiondispatch::http::url#optional_port()","Ruby object#options()","Ruby rails::commands::info#options()","Ruby rails::commands::install#options()","Ruby rails::commands::plugin#options()","Ruby rails::commands::remove#options()","Rails net::http#options()","Rails net::http#options()","Rails optionparser::arguable#options()","Rails rake::application#options()","Rails regexp#options()","Rails syslog::options()","Rails optionparser::arguable#options=()","Ruby activesupport::json::encoding::encoder#options_for()","Ruby actionview::helpers::formoptionshelper#options_for_select()","Ruby actionview::helpers::formoptionshelper#options_from_collection_for_select()","Ruby activerecord::connectionadapters::schemastatements#options_include_default?()","Rails socket::option#optname()","Ruby activesupport::multibyte::chars#ord()","Ruby string#ord()","Rails integer#ord()","Rails string#ord()","Ruby activerecord::querymethods#order()","Rails openssl::pkey::ec::group#order()","Rails optionparser#order()","Rails optionparser#order!()","Rails optionparser::arguable#order!()","Ruby rails::engine#ordered_railties()","Rails getoptlong#ordering=()","Rails date::ordinal()","Rails datetime::ordinal()","Ruby activesupport::inflector#ordinalize()","Ruby integer#ordinalize()","Rails thread#org_initialize()","Ruby activeresource::custommethods::orig_delete()","Rails webrick::httprequest#orig_meta_vars()","Rails zlib::gzipfile#orig_name()","Rails zlib::gzipwriter#orig_name=()","Rails webrick::httprequest#orig_parse()","Rails webrick::httprequest#orig_parse_uri()","Ruby activesupport::safebuffer#original_concat()","Rails rake::original_dir()","Ruby actiondispatch::request#original_fullpath()","Ruby rails::generators::pluginnewgenerator#original_name()","Ruby actiondispatch::request#original_url()","Ruby rails::generators::resourcehelpers#orm_class()","Ruby rails::generators::resourcehelpers#orm_instance()","Rails matrix#orthogonal?()","Rails zlib::gzipfile#os_code()","Rails rss::maker::base::other_elements()","Rails cgi#out()","Rails shell::commandprocessor#out()","Rails rss::atom::feed::entry::content#out_of_line?()","Rails rss::maker::itemsbase::itembase::contentbase#out_of_line?()","Rails gem::sourceindex#outdated()","Rails gem::specification::outdated()","Rails gem::mockgemui#output()","Rails prettyprint::breakable#output()","Rails prettyprint::text#output()","Rails readline::output=()","Rails win32ole_param#output?()","Rails rss::rootelementmixin#output_encoding=()","Rails rdoc::rdoc#output_flag_file()","Rails irb::irb#output_value()","Ruby activerecord::connectionadapters::databasestatements#outside_transaction?()","Ruby activerecord::connectionadapters::postgresqladapter#outside_transaction?()","Ruby range#overlaps?()","Rails file::owned?()","Rails file::stat#owned?()","Rails filetest#owned?()","Rails pathname#owned?()","Rails method#owner()","Rails unboundmethod#owner()","Rails kernel#p()","Rails matrix::lupdecomposition#p()","Rails array#pack()","Rails dl::packer#pack()","Rails dl::stack#pack()","Rails gem::package::pack()","Rails socket::pack_sockaddr_in()","Rails socket::pack_sockaddr_un()","Rails rake::packagetask#package_dir_path()","Rails rake::packagetask#package_name()","Rails win32::registry::api#packdw()","Rails win32::registry::api#packqw()","Rails openssl::cipher#padding=()","Rails rdoc::ri::driver#page()","Rails rdoc::ri::driver#paging?()","Rails socket::pair()","Rails unixsocket::pair()","Rails curses::pair_content()","Rails curses::pair_number()","Ruby activemodel::naming::param_key()","Rails rdoc::anymethod#param_list()","Rails rdoc::anymethod#param_seq()","Ruby actiondispatch::http::filterparameters#parameter_filter()","Ruby actiondispatch::http::filterparameters#parameter_filter_for()","Ruby activesupport::inflector#parameterize()","Ruby string#parameterize()","Ruby actiondispatch::http::parameters#parameters()","Rails method#parameters()","Rails proc#parameters()","Rails unboundmethod#parameters()","Ruby actioncontroller::metal#params()","Ruby actiondispatch::http::parameters#params()","Rails openssl::pkey::dh#params()","Rails openssl::pkey::dsa#params()","Rails openssl::pkey::rsa#params()","Rails win32ole_method#params()","Rails zlib::deflate#params()","Ruby actioncontroller::metal#params=()","Rails cgi::queryextension#params=()","Rails openssl::pkey::dh#params_ok?()","Rails gem::indexer#paranoid()","Ruby module#parent()","Rails pathname#parent()","Rails rexml::light::node#parent()","Rails rexml::child#parent=()","Rails rexml::light::node#parent=()","Rails rexml::text#parent=()","Rails rexml::node#parent?()","Rails rexml::parent#parent?()","Ruby activerecord::generators::modelgenerator#parent_class_name()","Rails rdoc::codeobject#parent_file_name()","Ruby module#parent_name()","Rails rdoc::codeobject#parent_name()","Rails rdoc::methodattr#parent_name()","Ruby activesupport::notifications::event#parent_of?()","Ruby abstractcontroller::viewpaths::classmethods#parent_prefixes()","Ruby module#parents()","Ruby activesupport::timezone#parse()","Ruby activesupport::xmlmini_libxmlsax#parse()","Ruby activesupport::xmlmini_nokogirisax#parse()","Ruby mime::type::parse()","Ruby rails::generators::generatedattribute::parse()","Rails cgi::parse()","Rails cgi::cookie::parse()","Rails csv::parse()","Rails date::parse()","Rails datetime::parse()","Rails gem::requirement::parse()","Rails json#parse()","Rails net::smtp::response::parse()","Rails openssl::config::parse()","Rails openssl::x509::name::parse()","Rails optionparser#parse()","Rails optionparser::switch::noargument#parse()","Rails optionparser::switch::optionalargument#parse()","Rails optionparser::switch::placedargument#parse()","Rails optionparser::switch::requiredargument#parse()","Rails psych::parse()","Rails psych::parser#parse()","Rails rdoc::classmodule#parse()","Rails rdoc::markup::parser::parse()","Rails rdoc::markup::parser#parse()","Rails rdoc::options#parse()","Rails rdoc::text#parse()","Rails rexml::dtd::parser::parse()","Rails rexml::parsers::lightparser#parse()","Rails rexml::parsers::sax2parser#parse()","Rails rexml::parsers::streamparser#parse()","Rails rexml::parsers::treeparser#parse()","Rails rexml::parsers::ultralightparser#parse()","Rails rexml::parsers::xpathparser#parse()","Rails rexml::xpathparser#parse()","Rails rss::baseparser#parse()","Rails rss::itunesitemmodel::itunesduration::parse()","Rails rss::parser::parse()","Rails rss::utils::csv#parse()","Rails rss::utils::yescleanother#parse()","Rails rss::utils::yesother#parse()","Rails ripper::parse()","Rails ripper::filter#parse()","Rails time::parse()","Rails uri::parse()","Rails uri::parser#parse()","Rails webrick::cookie::parse()","Rails webrick::httprequest#parse()","Rails xmlrpc::xmlparser::nqxmlstreamparser::xmlrpcparser#parse()","Rails xmlrpc::xmlparser::rexmlstreamparser::streamlistener#parse()","Rails xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#parse()","Ruby rails::commands::info#parse!()","Ruby rails::commands::install#parse!()","Ruby rails::commands::plugin#parse!()","Ruby rails::commands::plugin::parse!()","Ruby rails::commands::remove#parse!()","Ruby rails::server::options#parse!()","Rails json#parse!()","Rails optionparser#parse!()","Rails optionparser::arguable#parse!()","Rails xmlrpc::xmlparser::abstractstreamparser#parsemethodcall()","Rails xmlrpc::xmlparser::abstracttreeparser#parsemethodcall()","Rails xmlrpc::xmlparser::abstractstreamparser#parsemethodresponse()","Rails xmlrpc::xmlparser::abstracttreeparser#parsemethodresponse()","Rails rdoc::parser::ruby#parse_alias()","Rails rexml::quickpath::parse_args()","Rails rdoc::parser::ruby#parse_attr()","Rails rdoc::parser::ruby#parse_attr_accessor()","Rails rdoc::parser::ruby#parse_call_parameters()","Rails rdoc::parser::ruby#parse_class()","Rails rdoc::parser::ruby#parse_comment()","Rails openssl::config::parse_config()","Rails rdoc::parser::ruby#parse_constant()","Rails xmlrpc::parsecontenttype#parse_content_type()","Rails string#parse_csv()","Rails dl::cparser#parse_ctype()","Ruby mime::type::parse_data_with_trailing_star()","Rails rdoc::rdoc#parse_dot_doc_file()","Ruby activesupport::json::parse_error()","Rails psych::parse_file()","Rails rdoc::rdoc#parse_file()","Rails rdoc::rdoc#parse_files()","Rails rdoc::parser::parse_files_matching()","Rails webrick::httputils::parse_form_data()","Rails webrick::httputils::parse_header()","Rails rexml::dtd::parser::parse_helper()","Rails rdoc::parser::ruby#parse_include()","Rails csv::parse_line()","Rails rdoc::parser::ruby#parse_meta_attr()","Rails rdoc::parser::ruby#parse_meta_method()","Rails rdoc::parser::ruby#parse_method()","Rails rdoc::parser::ruby#parse_method_or_yield_parameters()","Rails rdoc::parser::ruby#parse_method_parameters()","Rails rdoc::parser::ruby#parse_module()","Rails rdoc::ri::driver#parse_name()","Rails openssl::x509::name::parse_openssl()","Rails irb::parse_opts()","Rails irb::outputmethod#parse_printf_format()","Ruby actiondispatch::request#parse_query()","Rails webrick::httputils::parse_query()","Rails webrick::httputils::parse_qvalues()","Rails webrick::httputils::parse_range_header()","Ruby activemodel::validations::numericalityvalidator#parse_raw_value_as_a_number()","Ruby activemodel::validations::numericalityvalidator#parse_raw_value_as_an_integer()","Rails rdoc::parser::ruby#parse_require()","Rails openssl::x509::name::parse_rfc2253()","Rails webrick::cookie::parse_set_cookie()","Rails webrick::cookie::parse_set_cookies()","Rails dl::cparser#parse_signature()","Rails rexml::dtd::entitydecl::parse_source()","Rails rexml::dtd::notationdecl::parse_source()","Rails rdoc::parser::ruby#parse_statements()","Rails psych::parse_stream()","Rails rexml::document::parse_stream()","Rails dl::cparser#parse_struct_signature()","Rails rdoc::parser::ruby#parse_symbol_arg()","Rails rdoc::parser::ruby#parse_symbol_in_arg()","Rails rake::application#parse_task_string()","Rails psych::scalarscanner#parse_time()","Rails rdoc::parser::ruby#parse_top_level_statements()","Rails drb::drbsslsocket::parse_uri()","Rails drb::drbunixsocket::parse_uri()","Rails rdoc::parser::ruby#parse_visibility()","Rails rdoc::parser::ruby#parse_yield()","Ruby uri::parser()","Rails psych::parser()","Rails uri::generic#parser()","Rails enumerable#partition()","Rails string#partition()","Rails thread::pass()","Rails etc::passwd()","Ruby activeresource::base::password()","Rails uri::generic#password()","Ruby activemodel::securepassword::instancemethodsonactivation#password=()","Ruby activeresource::base::password=()","Ruby activeresource::connection#password=()","Rails uri::generic#password=()","Rails xmlrpc::client#password=()","Ruby actionview::helpers::formhelper#password_field()","Rails cgi::htmlextension#password_field()","Ruby actionview::helpers::formtaghelper#password_field_tag()","Ruby activesupport::timewithzone#past?()","Ruby date#past?()","Ruby datetime#past?()","Ruby time#past?()","Rails net::http#patch()","Rails net::http#patch()","Ruby loaderror#path()","Ruby loaderror#path()","Rails argf#path()","Rails dir#path()","Rails file#path()","Rails file::path()","Rails gem::path()","Rails pstore#path()","Rails rdoc::classmodule#path()","Rails rdoc::constant#path()","Rails rdoc::methodattr#path()","Rails rdoc::ri::paths::path()","Rails rdoc::toplevel#path()","Rails rake::ftpfile#path()","Rails tempfile#path()","Rails unixsocket#path()","Rails uri::ftp#path()","Rails win32ole_typelib#path()","Rails uri::generic#path=()","Ruby sprockets::staticcompiler#path_for()","Rails gem::uninstaller#path_ok?()","Ruby actiondispatch::http::parameters#path_parameters()","Ruby sprockets::helpers::railshelper#path_to_asset()","Ruby actionview::helpers::assettaghelper#path_to_audio()","Ruby actionview::helpers::assettaghelper#path_to_font()","Ruby sprockets::helpers::railshelper#path_to_font()","Ruby actionview::helpers::assettaghelper#path_to_image()","Ruby sprockets::helpers::railshelper#path_to_image()","Ruby actionview::helpers::assettaghelper::javascripttaghelpers#path_to_javascript()","Ruby sprockets::helpers::railshelper#path_to_javascript()","Ruby actionview::helpers::assettaghelper::stylesheettaghelpers#path_to_stylesheet()","Ruby sprockets::helpers::railshelper#path_to_stylesheet()","Ruby actionview::helpers::assettaghelper#path_to_video()","Rails string#pathmap()","Rails string#pathmap_explode()","Rails string#pathmap_partial()","Rails string#pathmap_replace()","Ruby rails::application::configuration#paths()","Ruby rails::engine::configuration#paths()","Rails gem::paths()","Rails gem::paths=()","Rails optionparser::switch::pattern()","Rails optionparser::switch::noargument::pattern()","Rails openssl::pkcs5::pbkdf2_hmac()","Rails openssl::pkcs5::pbkdf2_hmac_sha1()","Rails drb::timeridconv::timerholder2#peek()","Rails enumerator#peek()","Rails rexml::parsers::baseparser#peek()","Rails rexml::parsers::pullparser#peek()","Rails rubylex#peek()","Rails stringscanner#peek()","Rails rubylex#peek_equal?()","Rails rubylex#peek_match?()","Rails rdoc::parser::rubytools#peek_read()","Rails rdoc::parser::rubytools#peek_tk()","Rails rdoc::markup::parser#peek_token()","Rails enumerator#peek_values()","Rails stringscanner#peep()","Rails net::http#peer_cert()","Rails net::http#peer_cert()","Rails openssl::ssl::sslsocket#peer_cert()","Rails webrick::cgi::socket#peer_cert()","Rails openssl::ssl::sslsocket#peer_cert_chain()","Rails webrick::cgi::socket#peer_cert_chain()","Rails drb::drbtcpsocket#peeraddr()","Rails ipsocket#peeraddr()","Rails openssl::ssl::socketforwarder#peeraddr()","Rails unixsocket#peeraddr()","Rails webrick::cgi::socket#peeraddr()","Rails openssl::ssl::sslsocket#pending()","Rails rdoc::stats#percent_doc()","Ruby activerecord::validations#perform_validations()","Rails drb::drbserver::invokemethod18mixin#perform_with_block()","Ruby actioncontroller::metal#performed?()","Ruby activesupport::timewithzone#period()","Ruby activesupport::timezone#period_for_local()","Ruby activesupport::timezone#period_for_utc()","Rails rss::maker::itemsbase::itembase::guidbase#permanent_link=()","Rails rss::maker::itemsbase::itembase::guidbase#permanent_link?()","Rails array#permutation()","Rails matrix#permutation?()","Rails optionparser#permute()","Rails optionparser#permute!()","Rails optionparser::arguable#permute!()","Ruby activerecord::persistence#persisted?()","Ruby activeresource::base#persisted?()","Ruby numeric#petabyte()","Ruby numeric#petabytes()","Rails addrinfo#pfamily()","Rails complex#phase()","Rails float#phase()","Rails numeric#phase()","Ruby actionview::helpers::formhelper#phone_field()","Ruby actionview::helpers::formtaghelper#phone_field_tag()","Rails xmlrpc::xmlwriter::simple#pi()","Rails xmlrpc::xmlwriter::xmlparser#pi()","Rails io#pid()","Rails process::pid()","Rails process::status#pid()","Rails stringio#pid()","Rails io::pipe()","Rails file::pipe?()","Rails file::stat#pipe?()","Rails filetest#pipe?()","Rails pathname#pipe?()","Rails open3::pipeline()","Rails open3::pipeline_r()","Rails open3::pipeline_rw()","Rails open3::pipeline_start()","Rails open3::pipeline_w()","Ruby activerecord::connectionadapters::abstractmysqladapter#pk_and_sequence_for()","Rails openssl::cipher#pkcs5_keyivgen()","Ruby activemodel::attributemethods::classmethods::attributemethodmatcher#plain?()","Rails gem::specification#platform()","Rails gem::specification#platform=()","Rails gem::platforms()","Rails gem::platforms=()","Ruby activerecord::calculations#pluck()","Ruby rails::generators::actions#plugin()","Ruby rails::engine::railties#plugins()","Ruby activemodel::naming::plural()","Ruby activesupport::inflector::inflections#plural()","Ruby rails::generators::namedbase#plural_file_name()","Rails rss::element::plural_forms()","Ruby rails::generators::namedbase#plural_name()","Ruby rails::generators::namedbase#plural_table_name()","Ruby actionview::helpers::texthelper#pluralize()","Ruby activesupport::inflector#pluralize()","Ruby string#pluralize()","Ruby rails::generators::namedbase#pluralize_table_names?()","Ruby railsguides::textileextensions#plusplus()","Rails readline::point()","Rails openssl::pkey::ec::group#point_conversion_form()","Rails openssl::pkey::ec::group#point_conversion_form=()","Rails stringscanner#pointer()","Rails stringscanner#pointer=()","Rails complex::polar()","Rails complex#polar()","Rails numeric#polar()","Ruby actiondispatch::routing::polymorphicroutes#polymorphic_path()","Ruby actiondispatch::routing::polymorphicroutes#polymorphic_url()","Rails array#pop()","Rails net::popmail#pop()","Rails queue#pop()","Rails rinda::notifytemplateentry#pop()","Rails sizedqueue#pop()","Ruby recursivehttpfetcher#pop_d()","Rails pp::ppmethods#pop_inspect_key()","Ruby activesupport::taggedlogging#pop_tags()","Rails rdoc::tokenstream#pop_token()","Rails irb::context#pop_workspace()","Rails shell#popd()","Rails shell#popdir()","Rails io::popen()","Rails open3::popen2()","Rails open3::popen2e()","Rails open3::popen3()","Ruby activerecord::scoping#populate_with_current_scope_attributes()","Rails cgi::htmlextension#popup_menu()","Ruby actiondispatch::http::url#port()","Rails net::pop3#port()","Rails net::pop3#port()","Rails net::pop3#port()","Rails net::pop3#port()","Rails webrick::httprequest#port()","Rails uri::generic#port=()","Ruby actiondispatch::http::url#port_string()","Rails argf#pos()","Rails dir#pos()","Rails gem::package::tarreader::entry#pos()","Rails io#pos()","Rails stringio#pos()","Rails stringscanner#pos()","Rails zlib::gzipreader#pos()","Rails zlib::gzipwriter#pos()","Rails argf#pos=()","Rails dir#pos=()","Rails io#pos=()","Rails stringio#pos=()","Rails stringscanner#pos=()","Rails rexml::functions::position()","Rails rexml::iosource#position()","Rails rexml::parseexception#position()","Rails rexml::parsers::baseparser#position()","Rails rexml::source#position()","Ruby actiondispatch::routing::mapper::httphelpers#post()","Ruby activeresource::connection#post()","Ruby activeresource::custommethods#post()","Ruby activeresource::custommethods::post()","Rails net::http#post()","Rails net::http#post()","Rails net::http#post2()","Rails net::http#post2()","Ruby actiondispatch::request#post?()","Rails gem::post_build()","Rails openssl::ssl::sslsocket#post_connection_check()","Rails net::http::post_form()","Rails net::http::post_form()","Rails gem::post_install()","Rails matchdata#post_match()","Rails stringscanner#post_match()","Rails gem::post_reset()","Rails gem::post_uninstall()","Ruby activerecord::connectionadapters::postgresqladapter#postgresql_version()","Rails irb::slex#postproc()","Rails bigdecimal#power()","Rails bignum#power!()","Rails fixnum#power!()","Rails float#power!()","Rails irb::notifier::abstractnotifier#pp()","Rails irb::outputmethod#pp()","Rails kernel::pp()","Rails kernel#pp()","Rails pp::pp()","Rails pp::ppmethods#pp()","Rails pp::ppmethods#pp_hash()","Rails pp::ppmethods#pp_object()","Rails process::ppid()","Rails irb::notifier::abstractnotifier#ppx()","Rails irb::outputmethod#ppx()","Rails gem::pre_install()","Rails matchdata#pre_match()","Rails stringscanner#pre_match()","Rails gem::pre_reset()","Rails gem::pre_uninstall()","Ruby float#precisionless_round()","Rails bigdecimal#precs()","Rails integer#pred()","Rails rexml::parsers::xpathparser#predicate()","Rails rexml::quickpath::predicate()","Rails rexml::xpathparser#predicate()","Rails rexml::parsers::xpathparser#predicate_to_string()","Ruby activerecord::connectionadapters::abstractadapter#prefetch_primary_key?()","Ruby activeresource::base::prefix()","Rails gem::prefix()","Rails rexml::attribute#prefix()","Rails rexml::light::node#prefix()","Ruby activeresource::base::prefix=()","Ruby activeresource::base::prefix_source()","Rails rexml::attributes#prefixes()","Rails rexml::element#prefixes()","Ruby activerecord::querymethods#preload()","Ruby actiondispatch::reloader::prepare!()","Ruby actiondispatch::response#prepare!()","Rails drb::drbobject::prepare_backtrace()","Rails webrick::httpservlet::defaultfilehandler#prepare_range()","Rails optionparser::list#prepend()","Rails string#prepend()","Ruby abstractcontroller::callbacks::classmethods#prepend_after_filter()","Ruby abstractcontroller::callbacks::classmethods#prepend_around_filter()","Ruby abstractcontroller::callbacks::classmethods#prepend_before_filter()","Ruby abstractcontroller::viewpaths#prepend_view_path()","Ruby abstractcontroller::viewpaths::classmethods#prepend_view_path()","Rails irb::slex#preproc()","Rails net::telnet#preprocess()","Rails gem::dependency#prerelease?()","Rails gem::requirement#prerelease?()","Rails gem::version#prerelease?()","Rails gem::sourceindex#prerelease_gems()","Rails gem::sourceindex#prerelease_specs()","Rails rake::task#prerequisite_tasks()","Ruby object#presence()","Ruby object#present?()","Rails cgi::pretty()","Rails json#pretty_generate()","Rails kernel#pretty_inspect()","Rails rdoc::alias#pretty_name()","Rails rdoc::methodattr#pretty_name()","Rails rdoc::alias#pretty_new_name()","Rails rdoc::alias#pretty_old_name()","Rails array#pretty_print()","Rails env::pretty_print()","Rails file::stat#pretty_print()","Rails hash#pretty_print()","Rails matchdata#pretty_print()","Rails object#pretty_print()","Rails pp::objectmixin#pretty_print()","Rails range#pretty_print()","Rails struct#pretty_print()","Rails array#pretty_print_cycle()","Rails hash#pretty_print_cycle()","Rails object#pretty_print_cycle()","Rails pp::objectmixin#pretty_print_cycle()","Rails struct#pretty_print_cycle()","Rails pp::objectmixin#pretty_print_inspect()","Rails pp::objectmixin#pretty_print_instance_variables()","Rails date#prev_day()","Ruby date#prev_month()","Ruby time#prev_month()","Rails date#prev_month()","Ruby date#prev_week()","Ruby time#prev_week()","Ruby date#prev_year()","Ruby time#prev_year()","Rails date#prev_year()","Rails rexml::validation::state#previous=()","Ruby activemodel::dirty#previous_changes()","Rails rexml::element#previous_element()","Rails rexml::child#previous_sibling=()","Rails rexml::node#previous_sibling_node()","Rails rinda::ringfinger::primary()","Ruby activerecord::attributemethods::primarykey::classmethods#primary_key()","Ruby activerecord::connectionadapters::abstractmysqladapter#primary_key()","Ruby activerecord::connectionadapters::postgresqladapter#primary_key()","Ruby activerecord::connectionadapters::tabledefinition#primary_key()","Ruby activeresource::base::primary_key()","Ruby activerecord::attributemethods::primarykey::classmethods#primary_key=()","Ruby activerecord::connectionadapters::connectionpool#primary_keys()","Rails integer#prime?()","Rails openssl::bn#prime?()","Rails prime#prime?()","Ruby activesupport::memoizable::instancemethods#prime_cache()","Rails integer#prime_division()","Rails prime#prime_division()","Rails openssl::bn#prime_fasttest?()","Rails prime::trialdivision#primes()","Rails prime::trialdivision#primes_so_far()","Rails encoding::converter#primitive_convert()","Rails encoding::converter#primitive_errinfo()","Rails argf#print()","Rails cgi#print()","Rails io#print()","Rails io::writable#print()","Rails irb::locale#print()","Rails irb::notifier::abstractnotifier#print()","Rails irb::outputmethod#print()","Rails irb::stdiooutputmethod#print()","Rails kernel#print()","Rails net::telnet#print()","Rails openssl::buffering#print()","Rails zlib::gzipwriter#print()","Rails rdoc::stats::quiet#print_alias()","Rails rdoc::stats::quiet#print_attribute()","Rails rdoc::stats::quiet#print_class()","Rails rdoc::stats::quiet#print_constant()","Rails gem::commands::dependencycommand#print_dependencies()","Rails rdoc::stats::normal#print_file()","Rails rdoc::stats::quiet#print_file()","Rails rdoc::stats::quiet#print_method()","Rails rdoc::stats::quiet#print_module()","Rails profiler__#print_profile()","Rails rake::application#print_rakefile_directory()","Rails irb::print_usage()","Rails argf#printf()","Rails io#printf()","Rails io::writable#printf()","Rails irb::locale#printf()","Rails irb::notifier::abstractnotifier#printf()","Rails irb::outputmethod#printf()","Rails kernel#printf()","Rails openssl::buffering#printf()","Rails zlib::gzipwriter#printf()","Rails irb::notifier::abstractnotifier#printn()","Rails irb::outputmethod#printn()","Rails thread#priority()","Rails thread#priority=()","Rails openssl::pkey::dh#private?()","Rails openssl::pkey::dsa#private?()","Rails openssl::pkey::rsa#private?()","Rails module#private_class_method()","Rails openssl::pkey::rsa#private_decrypt()","Rails openssl::pkey::rsa#private_encrypt()","Rails module#private_instance_methods()","Rails openssl::pkey::ec#private_key()","Rails openssl::pkey::ec#private_key=()","Rails openssl::pkey::ec#private_key?()","Rails module#private_method_defined?()","Rails object#private_methods()","Rails kernel#proc()","Ruby abstractcontroller::base#process()","Ruby actioncontroller::middleware#process()","Rails net::imap::crammd5authenticator#process()","Rails net::imap::digestmd5authenticator#process()","Rails net::imap::loginauthenticator#process()","Rails net::imap::plainauthenticator#process()","Rails xmlrpc::basicserver#process()","Ruby abstractcontroller::callbacks#process_action()","Ruby actioncontroller::instrumentation#process_action()","Ruby actioncontroller::logsubscriber#process_action()","Ruby actioncontroller::paramswrapper#process_action()","Rails gem::commandmanager#process_args()","Rails rdoc::ri::driver::process_args()","Ruby html::whitelistsanitizer#process_attributes_for()","Rails rdoc::parser::process_directive()","Ruby html::fullsanitizer#process_node()","Ruby html::linksanitizer#process_node()","Ruby html::sanitizer#process_node()","Ruby html::whitelistsanitizer#process_node()","Rails gem::installer#process_options()","Ruby activemodel::massassignmentsecurity::loggersanitizer#process_removed_attributes()","Ruby activemodel::massassignmentsecurity::sanitizer#process_removed_attributes()","Ruby activemodel::massassignmentsecurity::strictsanitizer#process_removed_attributes()","Ruby actionview::base::process_view_paths()","Rails rss::rexmllikexmlparser#processinginstruction()","Rails rexml::functions::processing_instruction()","Rails rexml::sax2listener#processing_instruction()","Rails array#product()","Rails win32ole_type#progid()","Rails win32ole_type::progids()","Rails optionparser#program_name()","Rails rexml::sax2listener#progress()","Rails gem::silentui#progress_reporter()","Rails gem::streamui#progress_reporter()","Rails gem::promote_load_path()","Rails irb::irb#prompt()","Rails rubylex#prompt()","Rails irb::context#prompt_mode=()","Rails irb::context#prompting?()","Rails set#proper_subset?()","Rails set#proper_superset?()","Ruby rails::infocontroller#properties()","Ruby rails::info::property()","Rails net::http#propfind()","Rails net::http#propfind()","Rails net::http#proppatch()","Rails net::http#proppatch()","Ruby actioncontroller::requestforgeryprotection#protect_against_forgery?()","Ruby actioncontroller::requestforgeryprotection::classmethods#protect_from_forgery()","Ruby activemodel::massassignmentsecurity::classmethods#protected_attributes()","Rails module#protected_instance_methods()","Rails module#protected_method_defined?()","Rails delegator#protected_methods()","Rails object#protected_methods()","Ruby actiondispatch::http::url#protocol()","Rails addrinfo#protocol()","Ruby actionview::helpers::capturehelper#provide()","Rails rinda::ringprovider#provide()","Ruby activeresource::base::proxy()","Rails xmlrpc::client#proxy()","Rails xmlrpc::client#proxy2()","Rails xmlrpc::client#proxy2_async()","Ruby activeresource::base::proxy=()","Ruby activeresource::connection#proxy=()","Rails net::http#proxy?()","Rails net::http#proxy?()","Rails net::http#proxy_address()","Rails net::http#proxy_address()","Rails xmlrpc::client#proxy_async()","Rails webrick::httpproxyserver#proxy_auth()","Rails win32::sspi::negotiateauth::proxy_auth_get()","Rails net::httpheader#proxy_basic_auth()","Rails webrick::httpauth#proxy_basic_auth()","Ruby activesupport::multibyte::proxy_class()","Ruby activesupport::multibyte::proxy_class=()","Rails net::http::proxy_class?()","Rails net::http::proxy_class?()","Rails net::http#proxy_pass()","Rails net::http#proxy_pass()","Rails net::http#proxy_port()","Rails net::http#proxy_port()","Rails webrick::httpproxyserver#proxy_service()","Rails webrick::httpproxyserver#proxy_uri()","Rails net::http#proxy_user()","Rails net::http#proxy_user()","Rails net::http#proxyaddr()","Rails net::http#proxyaddr()","Rails net::http#proxyport()","Rails net::http#proxyport()","Ruby activesupport::cache::memorystore#prune()","Rails find::prune()","Ruby activesupport::cache::memorystore#pruning?()","Rails object#psych_to_yaml()","Rails kernel#psych_y()","Rails module#psych_yaml_as()","Rails dl::cfunc#ptr()","Rails dl::cptr#ptr()","Rails dl::cptr#ptr()","Rails dl::cfunc#ptr=()","Rails rss::maker::channelbase#pubdate()","Rails rss::maker::itemsbase::itembase#pubdate()","Rails rss::maker::channelbase#pubdate=()","Rails rss::maker::itemsbase::itembase#pubdate=()","Rails rexml::doctype#public()","Rails openssl::pkey::dh#public?()","Rails openssl::pkey::dsa#public?()","Rails openssl::pkey::rsa#public?()","Rails module#public_class_method()","Rails openssl::pkey::rsa#public_decrypt()","Ruby rails::appbuilder#public_directory()","Rails openssl::pkey::rsa#public_encrypt()","Rails module#public_instance_method()","Rails module#public_instance_methods()","Rails openssl::netscape::spki#public_key()","Rails openssl::pkey::dh#public_key()","Rails openssl::pkey::dsa#public_key()","Rails openssl::pkey::ec#public_key()","Rails openssl::pkey::rsa#public_key()","Rails openssl::x509::certificate#public_key()","Rails openssl::x509::request#public_key()","Rails openssl::netscape::spki#public_key=()","Rails openssl::pkey::ec#public_key=()","Rails openssl::x509::certificate#public_key=()","Rails openssl::x509::request#public_key=()","Rails openssl::pkey::ec#public_key?()","Rails object#public_method()","Rails module#public_method_defined?()","Rails delegator#public_methods()","Rails object#public_methods()","Ruby rails::public_path()","Rails object#public_send()","Ruby activesupport::notifications::publish()","Ruby activesupport::notifications::fanout#publish()","Rails rexml::parsers::baseparser#pull()","Rails rexml::parsers::pullparser#pull()","Rails openssl::x509::store#purpose=()","Rails array#push()","Rails csv::row#push()","Rails csv::table#push()","Rails irb::history#push()","Rails psych::visitors::yamltree#push()","Rails queue#push()","Rails rdoc::markup::document#push()","Rails rdoc::markup::list#push()","Rails rdoc::markup::listitem#push()","Rails rdoc::markup::raw#push()","Rails rexml::parent#push()","Rails rinda::tuplebag#push()","Rails sizedqueue#push()","Ruby recursivehttpfetcher#push_d()","Rails pp::ppmethods#push_inspect_key()","Ruby activesupport::taggedlogging#push_tags()","Rails irb::context#push_workspace()","Rails shell#pushd()","Rails shell#pushdir()","Ruby actiondispatch::routing::mapper::httphelpers#put()","Ruby activeresource::connection#put()","Ruby activeresource::custommethods#put()","Ruby activeresource::custommethods::put()","Rails net::ftp#put()","Ruby actiondispatch::request#put?()","Rails encoding::converter#putback()","Rails net::ftp#putbinaryfile()","Rails argf#putc()","Rails io#putc()","Rails kernel#putc()","Rails stringio#putc()","Rails zlib::gzipwriter#putc()","Rails argf#puts()","Rails csv#puts()","Rails io#puts()","Rails io::writable#puts()","Rails irb::locale#puts()","Rails irb::notifier::abstractnotifier#puts()","Rails irb::outputmethod#puts()","Rails kernel#puts()","Rails net::telnet#puts()","Rails openssl::buffering#puts()","Rails xmp#puts()","Rails xmp::stringinputmethod#puts()","Rails zlib::gzipwriter#puts()","Rails net::ftp#puttextfile()","Rails dir::pwd()","Rails fileutils::pwd()","Rails net::ftp#pwd()","Rails pathname::pwd()","Ruby module#qualified_const_defined?()","Ruby module#qualified_const_get()","Ruby module#qualified_const_set()","Rails webrick::httprequest#query()","Rails uri::generic#query=()","Ruby activerecord::attributemethods::query#query_attribute()","Ruby actiondispatch::request#query_parameters()","Rails gem::server#quick()","Rails psych::quick_emit()","Rails rdoc::options#quiet()","Rails sys#quiet()","Rails rdoc::options#quiet=()","Ruby kernel#quietly()","Rails net::ftp#quit()","Rails net::smtp#quit()","Rails net::smtp#quit()","Rails bigdecimal#quo()","Rails complex#quo()","Rails float#quo()","Rails numeric#quo()","Rails rational#quo()","Ruby activerecord::connectionadapters::abstractmysqladapter#quote()","Ruby activerecord::connectionadapters::quoting#quote()","Rails regexp::quote()","Rails webrick::httputils::quote()","Ruby activerecord::connectionadapters::quoting#quote_column_name()","Ruby activerecord::connectionadapters::mysql2adapter#quote_string()","Ruby activerecord::connectionadapters::quoting#quote_string()","Ruby activerecord::connectionadapters::abstractadapter#quote_table_name()","Ruby activerecord::connectionadapters::postgresqladapter#quote_table_name()","Ruby activerecord::connectionadapters::quoting#quote_table_name()","Ruby activerecord::connectionadapters::abstractmysqladapter#quoted_columns_for_index()","Ruby activerecord::connectionadapters::schemastatements#quoted_columns_for_index()","Ruby activerecord::connectionadapters::quoting#quoted_date()","Ruby activerecord::connectionadapters::abstractmysqladapter#quoted_false()","Ruby activerecord::connectionadapters::quoting#quoted_false()","Ruby activerecord::locking::optimistic::classmethods#quoted_locking_column()","Ruby activerecord::attributemethods::primarykey::classmethods#quoted_primary_key()","Ruby activerecord::modelschema::classmethods#quoted_table_name()","Ruby activerecord::connectionadapters::abstractmysqladapter#quoted_true()","Ruby activerecord::connectionadapters::quoting#quoted_true()","Rails vector#r()","Rails racc::parser::racc_runtime_type()","Ruby actionview::helpers::formbuilder#radio_button()","Ruby actionview::helpers::formhelper#radio_button()","Rails cgi::htmlextension#radio_button()","Ruby actionview::helpers::instancetag::radio_button_checked?()","Ruby actionview::helpers::formtaghelper#radio_button_tag()","Rails cgi::htmlextension#radio_group()","Ruby ","Ruby rails::generators::appbase#rails_gemfile_entry()","Ruby rails::plugin#railtie_name()","Ruby rails::railtie::railtie_name()","Ruby rails::railtie#railtie_namespace()","Ruby rails::engine#railties()","Ruby rails::engine::railties::railties()","Ruby activesupport::basicobject#raise()","Rails kernel#raise()","Rails thread#raise()","Rails rss::baselistener::raise_for_undefined_entity?()","Rails rss::baseparser::raise_for_undefined_entity?()","Rails rss::rexmllistener::raise_for_undefined_entity?()","Ruby qualifiedconstutils::raise_if_absolute()","Rails gem::specification#raise_if_conflicts()","Ruby build#rake()","Ruby rails::generators::actions#rake()","Rails rake::fileutilsext#rake_check_options()","Rails module#rake_extension()","Rails rake::fileutilsext#rake_merge_option()","Rails module#rake_original_const_missing()","Rails time#rake_original_time_compare()","Rails rake::fileutilsext#rake_output_message()","Rails rake::application#rake_require()","Rails rake::win32::rake_system()","Ruby rails::railtie::rake_tasks()","Ruby rails::appbuilder#rakefile()","Ruby rails::generators::actions#rakefile()","Ruby rails::pluginbuilder#rakefile()","Rails rake::application#rakefile_location()","Ruby rails::generators::pluginnewgenerator#rakefile_test_tasks()","Rails kernel#rand()","Rails random::rand()","Rails random#rand()","Rails securerandom::random_bytes()","Rails openssl::cipher#random_iv()","Rails openssl::cipher#random_key()","Rails securerandom::random_number()","Rails webrick::utils::random_string()","Rails net::httpheader#range()","Rails net::httpheader#range=()","Ruby actionview::helpers::formhelper#range_field()","Ruby actionview::helpers::formtaghelper#range_field_tag()","Rails net::httpheader#range_length()","Rails matrix#rank()","Rails matrix#rank_e()","Rails array#rassoc()","Rails env::rassoc()","Rails hash#rassoc()","Rails complex#rationalize()","Rails float#rationalize()","Rails integer#rationalize()","Rails nilclass#rationalize()","Rails rational#rationalize()","Ruby actionview::helpers::outputsafetyhelper#raw()","Rails curses::raw()","Rails io#raw()","Rails rexml::element#raw()","Rails io#raw!()","Ruby activerecord::connectionadapters::abstractadapter#raw_connection()","Rails cgi::queryextension#raw_cookie()","Rails cgi::queryextension#raw_cookie2()","Ruby actiondispatch::http::url#raw_host_with_port()","Rails rdoc::ri::paths::raw_path()","Ruby actiondispatch::request#raw_post()","Ruby activesupport::cache::entry#raw_value()","Ruby activerecord::attributemethods::write#raw_write_attribute()","Rails rdoc::parser::c#rb_scan_args()","Rails irb::rc_file()","Rails irb::rc_file_generators()","Rails net::smtp#rcptto()","Rails net::smtp#rcptto()","Rails net::smtp#rcptto_list()","Rails net::smtp#rcptto_list()","Rails file::stat#rdev()","Rails file::stat#rdev_major()","Rails file::stat#rdev_minor()","Rails gem::server#rdoc()","Rails gem::docmanager#rdoc_installed?()","Rails rdoc::rubygemshook#rdoc_installed?()","Rails gem::specification#rdoc_options()","Rails gem::specification#rdoc_options=()","Rails rdoc::task#rdoc_task_description()","Rails gem::docmanager::rdoc_version()","Rails ","Rails process::gid::re_exchange()","Rails process::uid::re_exchange()","Rails process::gid::re_exchangeable?()","Rails process::uid::re_exchangeable?()","Ruby actiondispatch::http::uploadedfile#read()","Ruby actiondispatch::railsentitystore#read()","Ruby actiondispatch::railsmetastore#read()","Ruby activesupport::cache::store#read()","Rails argf#read()","Rails csv::read()","Rails csv#read()","Rails dir#read()","Rails gem::package::tarreader::entry#read()","Rails io#read()","Rails io::read()","Rails openssl::buffering#read()","Rails openssl::pkey::read()","Rails openuri::openread#read()","Rails pathname#read()","Rails rexml::iosource#read()","Rails rexml::source#read()","Rails rinda::tuplespace#read()","Rails rinda::tuplespaceproxy#read()","Rails rinda::waittemplateentry#read()","Rails stringio#read()","Rails webrick::cgi::socket#read()","Rails webrick::nullreader::read()","Rails win32::registry#read()","Rails zlib::gzipreader#read()","Rails rinda::tuplespace#read_all()","Rails rinda::tuplespaceproxy#read_all()","Ruby activerecord::attributemethods::read#read_attribute()","Ruby activerecord::attributemethods::beforetypecast#read_attribute_before_type_cast()","Ruby activerecord::attributemethods::serialization#read_attribute_before_type_cast()","Rails win32::registry#read_bin()","Rails gem::read_binary()","Rails net::httpresponse#read_body()","Rails rdoc::parser::ruby#read_directive()","Rails rdoc::parser::ruby#read_documentation_modifiers()","Ruby activesupport::cache::filestore#read_entry()","Ruby activesupport::cache::strategy::localcache::localstore#read_entry()","Rails rubylex#read_escape()","Rails rdoc::encoding::read_file()","Ruby actioncontroller::caching::fragments#read_fragment()","Rails win32::registry#read_i()","Ruby activesupport::cache::memcachestore#read_multi()","Ruby activesupport::cache::store#read_multi()","Rails argf#read_nonblock()","Rails io#read_nonblock()","Rails io::readable#read_nonblock()","Rails openssl::buffering#read_nonblock()","Rails win32::registry#read_s()","Rails win32::registry#read_s_expand()","Rails openssl::pkcs7::read_smime()","Rails net::http#read_timeout=()","Rails net::http#read_timeout=()","Rails net::pop3#read_timeout=()","Rails net::pop3#read_timeout=()","Rails net::pop3#read_timeout=()","Rails net::pop3#read_timeout=()","Rails net::smtp#read_timeout=()","Rails net::smtp#read_timeout=()","Rails psych::read_type_class()","Rails rexml::text::read_with_substitution()","Rails file::readable?()","Rails file::stat#readable?()","Rails filetest#readable?()","Rails pathname#readable?()","Rails irb::inputmethod#readable_atfer_eof?()","Rails irb::readlineinputmethod#readable_atfer_eof?()","Rails irb::stdioinputmethod#readable_atfer_eof?()","Ruby date#readable_inspect()","Ruby datetime#readable_inspect()","Rails file::readable_real?()","Rails file::stat#readable_real?()","Rails filetest#readable_real?()","Rails pathname#readable_real?()","Rails encoding::invalidbytesequenceerror#readagain_bytes()","Rails argf#readbyte()","Rails io#readbyte()","Rails io::readable#readbyte()","Rails zlib::gzipreader#readbyte()","Rails argf#readchar()","Rails io#readchar()","Rails io::readable#readchar()","Rails openssl::buffering#readchar()","Rails zlib::gzipreader#readchar()","Rails argf#readline()","Rails csv#readline()","Rails debugger__::context#readline()","Rails io#readline()","Rails io::readable#readline()","Rails irb::locale#readline()","Rails kernel#readline()","Rails openssl::buffering#readline()","Rails readline::readline()","Rails zlib::gzipreader#readline()","Rails argf#readlines()","Rails csv#readlines()","Rails csv::readlines()","Rails io::readlines()","Rails io#readlines()","Rails kernel#readlines()","Rails openssl::buffering#readlines()","Rails pathname#readlines()","Rails stringio#readlines()","Rails zlib::gzipreader#readlines()","Rails file::readlink()","Rails pathname#readlink()","Ruby rails::appbuilder#readme()","Ruby rails::generators::actions#readme()","Ruby rails::pluginbuilder#readme()","Ruby activerecord::querymethods#readonly()","Ruby activerecord::base#readonly!()","Ruby activerecord::base#readonly?()","Ruby activerecord::readonlyattributes::classmethods#readonly_attributes()","Rails argf#readpartial()","Rails io#readpartial()","Rails io::readable#readpartial()","Rails openssl::buffering#readpartial()","Rails zlib::gzipreader#readpartial()","Rails net::smtp#ready()","Rails net::smtp#ready()","Rails io#ready?()","Rails complex#real()","Rails matrix#real()","Rails numeric#real()","Rails complex#real?()","Rails matrix#real?()","Rails numeric#real?()","Rails irb::history#real_inspect()","Rails file::realdirpath()","Rails pathname#realdirpath()","Rails dl::realloc()","Rails gem::configfile#really_verbose()","Rails file::realpath()","Rails pathname#realpath()","Rails benchmark::realtime()","Rails localjumperror#reason()","Rails optionparser::parseerror#reason()","Rails webrick::httpstatus::reason_phrase()","Rails webrick::httpstatus::status#reason_phrase()","Ruby actionmailer::base::receive()","Ruby actionmailer::logsubscriber#receive()","Rails rexml::validation::relaxng#receive()","Rails method#receiver()","Rails openssl::pkcs7#recipients()","Ruby activerecord::connectionadapters::abstractadapter#reconnect!()","Ruby activerecord::connectionadapters::mysql2adapter#reconnect!()","Ruby activerecord::connectionadapters::mysqladapter#reconnect!()","Ruby activerecord::connectionadapters::postgresqladapter#reconnect!()","Ruby activerecord::migration::commandrecorder#record()","Rails rexml::document#record_entity_expansion()","Ruby actioncontroller::recordidentifier#record_key_for_dom_id()","Rails rdoc::codeobject#record_location()","Rails rdoc::context#record_location()","Rails optionparser::parseerror#recover()","Ruby activerecord::connectionadapters::abstractmysqladapter#recreate_database()","Rails complex#rect()","Rails complex::rect()","Rails matrix#rect()","Rails numeric#rect()","Rails complex::rectangular()","Rails complex#rectangular()","Rails matrix#rectangular()","Rails numeric#rectangular()","Rails json#recurse_proc()","Rails basicsocket#recv()","Rails unixsocket#recv_io()","Rails basicsocket#recv_nonblock()","Rails drb::drbtcpsocket#recv_reply()","Rails drb::drbtcpsocket#recv_request()","Rails ipsocket#recvfrom()","Rails socket#recvfrom()","Rails unixsocket#recvfrom()","Rails socket#recvfrom_nonblock()","Rails udpsocket#recvfrom_nonblock()","Rails basicsocket#recvmsg()","Rails basicsocket#recvmsg_nonblock()","Ruby module#redefine_method()","Ruby actiondispatch::routing::redirection#redirect()","Rails webrick::httpstatus::redirect?()","Ruby actioncontroller::flash#redirect_to()","Ruby actioncontroller::instrumentation#redirect_to()","Ruby actioncontroller::logsubscriber#redirect_to()","Ruby actioncontroller::redirecting#redirect_to()","Ruby actiondispatch::response#redirect_url()","Rails gem::ext::builder::redirector()","Rails enumerable#reduce()","Rails rake::task#reenable()","Ruby mime::type#ref()","Rails dl::cptr#ref()","Rails dl::cptr#ref()","Ruby rails::generators::generatedattribute#reference?()","Ruby activerecord::connectionadapters::table#references()","Ruby activerecord::connectionadapters::tabledefinition#references()","Ruby activerecord::reflection::classmethods#reflect_on_aggregation()","Ruby activerecord::reflection::classmethods#reflect_on_all_aggregations()","Ruby activerecord::reflection::classmethods#reflect_on_all_associations()","Ruby activerecord::reflection::classmethods#reflect_on_all_autosave_associations()","Ruby activerecord::reflection::classmethods#reflect_on_association()","Ruby actionview::template#refresh()","Rails curses::refresh()","Rails curses::window#refresh()","Rails gem::refresh()","Rails gem::sourceindex#refresh!()","Rails readline::refresh_line()","Rails matchdata#regexp()","Rails optionparser::completion::regexp()","Rails uri::regexp()","Rails drb::extservmanager#regist()","Rails drb::regist_server()","Ruby mime::type::register()","Rails gem::noaliasyamltree#register()","Rails rdoc::markup::preprocess::register()","Rails webrick::utils::timeouthandler#register()","Rails webrick::utils::timeouthandler::register()","Ruby mime::type::register_alias()","Rails gem::commandmanager#register_command()","Ruby sprockets::compressors::register_css_compressor()","Ruby actionmailer::base::register_interceptor()","Ruby actionmailer::base::register_interceptors()","Ruby actionview::helpers::assettaghelper::javascripttaghelpers::classmethods#register_javascript_expansion()","Ruby sprockets::compressors::register_js_compressor()","Ruby railsguides::generator#register_kindle_mime_types()","Ruby actionmailer::base::register_observer()","Ruby actionmailer::base::register_observers()","Ruby actionview::helpers::assettaghelper::stylesheettaghelpers::classmethods#register_stylesheet_expansion()","Rails rss::baselistener::register_uri()","Rails rdoc::markup::preprocess::registered()","Ruby sprockets::compressors::registered_css_compressor()","Ruby sprockets::compressors::registered_js_compressor()","Rails uri::generic#registry=()","Rails matrix#regular?()","Ruby rails::generators::namedbase#regular_class_path()","Ruby activesupport::hashwithindifferentaccess#regular_update()","Ruby activesupport::hashwithindifferentaccess#regular_update()","Ruby activesupport::hashwithindifferentaccess#regular_writer()","Ruby activesupport::hashwithindifferentaccess#regular_writer()","Rails env::rehash()","Rails hash#rehash()","Rails shell::commandprocessor#rehash()","Ruby activerecord::identitymap#reinit_with()","Ruby activesupport::orderedhash#reject()","Rails array#reject()","Rails dbm#reject()","Rails env::reject()","Rails enumerable#reject()","Rails gdbm#reject()","Rails hash#reject()","Rails optionparser#reject()","Rails optionparser::reject()","Rails optionparser::list#reject()","Rails sdbm#reject()","Rails yaml::dbm#reject()","Ruby activesupport::orderedhash#reject!()","Rails array#reject!()","Rails dbm#reject!()","Rails env::reject!()","Rails gdbm#reject!()","Rails hash#reject!()","Rails sdbm#reject!()","Rails set#reject!()","Rails pathname#relative?()","Rails uri::generic#relative?()","Rails pathname#relative_path_from()","Rails gem::version#release()","Rails optionparser#release()","Ruby activerecord::connectionadapters::connectionpool#release_connection()","Ruby activerecord::connectionadapters::abstractadapter#release_savepoint()","Ruby activerecord::connectionadapters::abstractmysqladapter#release_savepoint()","Ruby activerecord::connectionadapters::postgresqladapter#release_savepoint()","Ruby activerecord::connectionadapters::sqliteadapter#release_savepoint()","Rails gem::sourceindex#released_gems()","Rails gem::sourceindex#released_specs()","Ruby activerecord::autosaveassociation#reload()","Ruby activerecord::persistence#reload()","Ruby activerecord::relation#reload()","Ruby activeresource::base#reload()","Rails drb::drbunknown#reload()","Rails webrick::httpauth::htdigest#reload()","Rails webrick::httpauth::htgroup#reload()","Rails webrick::httpauth::htpasswd#reload()","Ruby rails::application::routesreloader#reload!()","Ruby rails::consolemethods#reload!()","Ruby rails::application#reload_dependencies?()","Ruby rails::application#reload_routes!()","Ruby i18n::railtie::reloader()","Ruby i18n::railtie::reloader_paths()","Rails bigdecimal#remainder()","Rails bignum#remainder()","Rails numeric#remainder()","Rails gem::localremoteoptions#remote?()","Rails basicsocket#remote_address()","Ruby actiondispatch::request#remote_ip()","Rails webrick::httprequest#remote_ip()","Ruby activerecord::connectionadapters::table#remove()","Ruby activerecord::identitymap::remove()","Rails fileutils::remove()","Rails gem::uninstaller#remove()","Rails optionparser#remove()","Rails rdoc::rubygemshook#remove()","Rails rexml::attribute#remove()","Rails rexml::child#remove()","Rails nqxml::node#removechild()","Rails gem::uninstaller#remove_all()","Ruby activerecord::connectionadapters::table#remove_belongs_to()","Ruby activerecord::identitymap::remove_by_id()","Rails gem::dependencylist#remove_by_name()","Rails dl#remove_callback()","Rails dl#remove_callback_internal()","Rails dl#remove_cdecl_callback()","Rails module#remove_class_variable()","Rails rdoc::parser::simple#remove_coding_comment()","Ruby activerecord::connectionadapters::schemastatements#remove_column()","Ruby activerecord::connectionadapters::abstractmysqladapter#remove_column_sql()","Ruby activerecord::connectionadapters::schemastatements#remove_columns()","Rails rdoc::parser::c#remove_commented_out_lines()","Ruby activerecord::base::remove_connection()","Ruby activerecord::connectionadapters::connectionhandler#remove_connection()","Rails fileutils::remove_dir()","Rails fileutils::remove_entry()","Rails fileutils::remove_entry_secure()","Rails gem::uninstaller#remove_executables()","Rails fileutils::remove_file()","Ruby activesupport::backtracecleaner#remove_filters!()","Rails rdoc::context#remove_from_documentation?()","Rails webrick::httpservlet::filehandler::remove_handler()","Ruby rails::generators::base::remove_hook_for()","Ruby activerecord::connectionadapters::schemastatements#remove_index()","Ruby activerecord::connectionadapters::table#remove_index()","Ruby activerecord::connectionadapters::abstractmysqladapter#remove_index_sql()","Rails rdoc::context#remove_invisible()","Rails gem::validator#remove_leading_dot_dir()","Ruby activemodel::massassignmentsecurity::permissionset#remove_multiparameter_id()","Rails rdoc::toplevel::remove_nodoc()","Rails rdoc::classmodule#remove_nodoc_children()","Rails gem::commands::setupcommand#remove_old_bin_files()","Rails gem::command#remove_option()","Rails gem::commands::ownercommand#remove_owners()","Ruby module#remove_possible_method()","Rails rdoc::parser::c#remove_private_comments()","Rails rdoc::parser::ruby#remove_private_comments()","Rails rdoc::parser::simple#remove_private_comments()","Ruby activerecord::connectionadapters::table#remove_references()","Rails net::imap#remove_response_handler()","Ruby activeresource::formats::remove_root()","Rails drb::remove_server()","Rails rdoc::generator::ri#remove_siginfo_handler()","Rails rdoc::rdoc#remove_siginfo_handler()","Ruby activesupport::backtracecleaner#remove_silencers!()","Rails gem::sourceindex#remove_spec()","Rails gem::specification::remove_spec()","Rails gem::dependencylist#remove_specs_unsatisfied_by()","Rails dl#remove_stdcall_callback()","Ruby activerecord::connectionadapters::schemastatements#remove_timestamps()","Ruby activerecord::connectionadapters::table#remove_timestamps()","Ruby activerecord::connectionadapters::abstractmysqladapter#remove_timestamps_sql()","Rails rdoc::parser::rubytools#remove_token_listener()","Rails rdoc::rdoc#remove_unparseable()","Ruby activerecord::connectionadapters::table#rename()","Rails file::rename()","Rails net::ftp#rename()","Rails net::imap#rename()","Rails pathname#rename()","Ruby activerecord::connectionadapters::postgresqladapter#rename_column()","Ruby activerecord::connectionadapters::schemastatements#rename_column()","Ruby activerecord::connectionadapters::abstractmysqladapter#rename_column_sql()","Ruby activerecord::connectionadapters::postgresqladapter#rename_index()","Ruby activerecord::connectionadapters::schemastatements#rename_index()","Ruby activesupport::xmlmini#rename_key()","Ruby activerecord::connectionadapters::abstractmysqladapter#rename_table()","Ruby activerecord::connectionadapters::postgresqladapter#rename_table()","Ruby activerecord::connectionadapters::sqliteadapter#rename_table()","Ruby activerecord::connectionadapters::schemastatements#rename_table()","Ruby abstractcontroller::rendering#render()","Ruby actioncontroller::instrumentation#render()","Ruby actionview::helpers::renderinghelper#render()","Ruby actionview::partialrenderer#render()","Ruby actionview::renderer#render()","Ruby actionview::template#render()","Ruby actionview::renderer#render_body()","Ruby actionview::logsubscriber#render_collection()","Ruby actionview::partialrenderer#render_collection()","Ruby actionview::logsubscriber#render_partial()","Ruby actionview::partialrenderer#render_partial()","Ruby actionview::logsubscriber#render_template()","Rails rdoc::generator::darkfish#render_template()","Ruby abstractcontroller::rendering#render_to_body()","Ruby actioncontroller::compatibility#render_to_body()","Ruby actioncontroller::renderers#render_to_body()","Ruby abstractcontroller::rendering#render_to_string()","Ruby actioncontroller::rendering#render_to_string()","Rails rinda::simplerenewer#renew()","Rails rinda::tupleentry#renew()","Rails io#reopen()","Rails stringio#reopen()","Rails syslog::reopen()","Ruby activerecord::querymethods#reorder()","Ruby activesupport::multibyte::unicode#reorder_characters()","Rails gdbm#reorganize()","Rails rake::altsystem#repair_command()","Rails array#repeated_combination()","Rails array#repeated_permutation()","Ruby activesupport::orderedhash#replace()","Rails array#replace()","Rails dbm#replace()","Rails env::replace()","Rails gdbm#replace()","Rails hash#replace()","Rails sdbm#replace()","Rails set#replace()","Rails string#replace()","Rails yaml::dbm#replace()","Rails rexml::parent#replace_child()","Rails rexml::child#replace_with()","Rails encoding::converter#replacement()","Rails encoding::converter#replacement=()","Rails encoding#replicate()","Rails socket::udpsource#reply()","Rails rinda::ringserver#reply_service()","Rails gc::profiler::report()","Rails rdoc::stats#report()","Rails rdoc::stats#report_attributes()","Rails rdoc::stats#report_class_module()","Rails rdoc::stats#report_constants()","Rails rdoc::stats#report_methods()","Ruby activerecord::identitymap::repository()","Rails psych::coder#represent_map()","Rails psych::coder#represent_object()","Rails psych::coder#represent_scalar()","Rails psych::coder#represent_seq()","Ruby activeresource::logsubscriber#request()","Rails gem::remotefetcher#request()","Rails net::http#request()","Rails net::http#request()","Rails net::httpgenericrequest#request_body_permitted?()","Rails net::http#request_get()","Rails net::http#request_get()","Rails net::http#request_head()","Rails net::http#request_head()","Ruby actioncontroller::httpauthentication::basic::controllermethods#request_http_basic_authentication()","Ruby actioncontroller::httpauthentication::digest::controllermethods#request_http_digest_authentication()","Ruby actioncontroller::httpauthentication::token::controllermethods#request_http_token_authentication()","Ruby actiondispatch::request#request_method()","Ruby actiondispatch::request#request_method_symbol()","Ruby actiondispatch::request#request_parameters()","Rails net::http#request_post()","Rails net::http#request_post()","Rails uri::http#request_uri()","Ruby activeresource::connection::requests()","Ruby activeresource::httpmock::requests()","Rails irb::locale#require()","Ruby actionview::template::handlers::builder#require_engine()","Ruby activerecord::testfixtures::classmethods#require_fixture_classes()","Rails gem::specification#require_path()","Rails gem::specification#require_path=()","Rails xmlrpc::webrickservlet#require_path_info?()","Rails kernel#require_relative()","Ruby activesupport::timezone::require_tzinfo()","Rails gem::specification::required_attribute?()","Rails gem::specification::required_attributes()","Rails gem::required_location()","Rails rss::element::required_prefix()","Rails rss::ituneschannelmodel::itunescategory::required_prefix()","Rails rss::ituneschannelmodel::itunesimage::required_prefix()","Rails rss::ituneschannelmodel::itunesowner::required_prefix()","Rails rss::itunesitemmodel::itunesduration::required_prefix()","Rails rss::imagefaviconmodel::imagefavicon::required_prefix()","Rails rss::imageitemmodel::imageitem::required_prefix()","Rails rss::taxonomytopicmodel::taxonomytopic::required_prefix()","Rails rss::taxonomytopicsmodel::taxonomytopics::required_prefix()","Rails rss::trackbackmodel10::trackbackabout::required_prefix()","Rails rss::trackbackmodel10::trackbackping::required_prefix()","Rails rss::trackbackmodel20::trackbackabout::required_prefix()","Rails rss::trackbackmodel20::trackbackping::required_prefix()","Rails gem::specification#required_ruby_version=()","Rails gem::specification#required_rubygems_version=()","Rails rss::atom::commonmodel::required_uri()","Rails rss::element::required_uri()","Rails rss::ituneschannelmodel::itunescategory::required_uri()","Rails rss::ituneschannelmodel::itunesimage::required_uri()","Rails rss::ituneschannelmodel::itunesowner::required_uri()","Rails rss::itunesitemmodel::itunesduration::required_uri()","Rails rss::imagefaviconmodel::imagefavicon::required_uri()","Rails rss::imageitemmodel::imageitem::required_uri()","Rails rss::rdf::required_uri()","Rails rss::rdf::bag::required_uri()","Rails rss::rdf::bag::required_uri()","Rails rss::rdf::channel::required_uri()","Rails rss::rdf::channel::image::required_uri()","Rails rss::rdf::channel::items::required_uri()","Rails rss::rdf::channel::textinput::required_uri()","Rails rss::rdf::image::required_uri()","Rails rss::rdf::item::required_uri()","Rails rss::rdf::li::required_uri()","Rails rss::rdf::li::required_uri()","Rails rss::rdf::li::required_uri()","Rails rss::rdf::seq::required_uri()","Rails rss::rdf::seq::required_uri()","Rails rss::rdf::textinput::required_uri()","Rails rss::taxonomytopicmodel::taxonomytopic::required_uri()","Rails rss::taxonomytopicsmodel::taxonomytopics::required_uri()","Rails rss::trackbackmodel10::trackbackabout::required_uri()","Rails rss::trackbackmodel10::trackbackping::required_uri()","Rails rss::trackbackmodel20::trackbackabout::required_uri()","Rails rss::trackbackmodel20::trackbackping::required_uri()","Rails gem::dependency#requirement()","Rails gem::specification#requirements()","Rails gem::specification#requirements=()","Rails gem::dependency#requirements_list()","Ruby activerecord::connectionadapters::abstractadapter#requires_reloading?()","Ruby activerecord::connectionadapters::sqliteadapter#requires_reloading?()","Rails rdoc::task#rerdoc_task_description()","Ruby actioncontroller::compatibility#rescue_action()","Ruby actiondispatch::rescue#rescue_from()","Ruby activesupport::rescuable::classmethods#rescue_from()","Ruby actiondispatch::showexceptions::rescue_responses()","Ruby actiondispatch::exceptionwrapper#rescue_template()","Ruby actiondispatch::showexceptions::rescue_templates()","Ruby actioncontroller::rescue#rescue_with_handler()","Ruby activesupport::rescuable#rescue_with_handler()","Ruby activerecord::relation#reset()","Rails cgi::htmlextension#reset()","Rails digest::hmac#reset()","Rails digest::instance#reset()","Rails gem::commandmanager::reset()","Rails gem::remotefetcher#reset()","Rails gem::specification::reset()","Rails net::pop3#reset()","Rails net::pop3#reset()","Rails net::pop3#reset()","Rails net::pop3#reset()","Rails openssl::cipher#reset()","Rails openssl::digest#reset()","Rails openssl::hmac#reset()","Rails rdoc::parser::c::reset()","Rails rdoc::parser::rubytools#reset()","Rails rdoc::rdoc::reset()","Rails rdoc::toplevel::reset()","Rails rexml::validation::choice#reset()","Rails rexml::validation::interleave#reset()","Rails rexml::validation::oneormore#reset()","Rails rexml::validation::state#reset()","Rails rexml::validation::validator#reset()","Rails stringscanner#reset()","Rails zlib::zstream#reset()","Ruby activerecord::connectionadapters::abstractadapter#reset!()","Ruby activerecord::connectionadapters::mysql2adapter#reset!()","Ruby activerecord::connectionadapters::mysqladapter#reset!()","Ruby activerecord::connectionadapters::postgresqladapter#reset!()","Ruby activeresource::httpmock::reset!()","Ruby activerecord::fixtures::reset_cache()","Ruby activesupport::callbacks::classmethods#reset_callbacks()","Ruby activerecord::modelschema::classmethods#reset_column_information()","Ruby activerecord::countercache#reset_counters()","Ruby actionview::helpers::texthelper#reset_cycle()","Ruby activerecord::locking::optimistic::classmethods#reset_locking_column()","Rails curses::reset_prog_mode()","Ruby activerecord::logsubscriber::reset_runtime()","Ruby activerecord::connectionadapters::databasestatements#reset_sequence!()","Ruby actioncontroller::rackdelegation#reset_session()","Ruby actiondispatch::request#reset_session()","Rails curses::resize()","Rails curses::window#resize()","Rails curses::resizeterm()","Ruby actiondispatch::railsentitystore::resolve()","Ruby actiondispatch::railsmetastore::resolve()","Rails rdoc::crossreference#resolve()","Rails rake::filelist#resolve()","Rails rake::filelist#resolve_add()","Rails rdoc::context#resolve_aliases()","Rails rake::taskmanager#resolve_args()","Ruby actiondispatch::routing::mapper::resources#resource()","Ruby actioncontroller::responder#resource_errors()","Ruby actioncontroller::responder#resource_location()","Ruby actioncontroller::responder#resourceful?()","Ruby actiondispatch::routing::mapper::resources#resources()","Rails rss::rdf::channel::items#resources()","Rails rss::taxonomytopicsmodel::taxonomytopics#resources()","Ruby actiondispatch::routing::mapper::resources#resources_path_names()","Ruby actioncontroller::responder#respond()","Ruby actioncontroller::mimeresponds#respond_to()","Ruby actioncontroller::mimeresponds::classmethods#respond_to()","Ruby activeresource::httpmock::respond_to()","Ruby actiondispatch::bodyproxy#respond_to?()","Ruby actiondispatch::response#respond_to?()","Ruby activemodel::attributemethods#respond_to?()","Ruby activerecord::delegation#respond_to?()","Ruby activerecord::dynamicmatchers#respond_to?()","Ruby activeresource::base#respond_to?()","Ruby activesupport::bufferedlogger#respond_to?()","Ruby activesupport::multibyte::chars#respond_to?()","Ruby activesupport::orderedoptions#respond_to?()","Ruby activesupport::taggedlogging#respond_to?()","Ruby activesupport::timewithzone#respond_to?()","Ruby rails::railtie::configurable::classmethods#respond_to?()","Ruby rails::railtie::configuration#respond_to?()","Rails drb::drbobject#respond_to?()","Rails object#respond_to?()","Ruby activesupport::taggedlogging#respond_to_missing?()","Rails delegator#respond_to_missing?()","Rails object#respond_to_missing?()","Ruby activemodel::attributemethods#respond_to_without_attributes?()","Ruby activeresource::base#respond_to_without_attributes?()","Ruby actioncontroller::mimeresponds#respond_with()","Ruby actioncontroller::metal#response_body=()","Ruby actioncontroller::rackdelegation#response_body=()","Rails net::httpgenericrequest#response_body_permitted?()","Ruby actiondispatch::response#response_code()","Ruby actioncontroller::responder#response_overridden?()","Ruby activeresource::httpmock::responses()","Rails stringscanner#rest()","Rails stringscanner#rest?()","Rails stringscanner#rest_size()","Rails cgi::session::filestore#restore()","Rails cgi::session::memorystore#restore()","Rails cgi::session::nullstore#restore()","Rails cgi::session::pstore#restore()","Rails json::restore()","Rails marshal::restore()","Rails stringscanner#restsize()","Rails coverage::result()","Rails erb#result()","Rails gc::profiler::result()","Rails stopiteration#result()","Rails debugger__::resume()","Rails fiber#resume()","Rails debugger__::context#resume_all()","Rails net::ftp#retrbinary()","Ruby actionview::helpers::instancetag#retrieve_autoindex()","Ruby activerecord::base::retrieve_connection()","Ruby activerecord::connectionadapters::connectionhandler#retrieve_connection_pool()","Ruby actionview::helpers::instancetag#retrieve_object()","Rails net::ftp#retrlines()","Rails csv#return_headers?()","Rails win32ole_method#return_type()","Rails win32ole_method#return_type_detail()","Rails win32ole_method#return_vtype()","Rails win32ole_param#retval?()","Ruby activesupport::multibyte::chars#reverse()","Rails array#reverse()","Rails ipaddr#reverse()","Rails string#reverse()","Rails array#reverse!()","Rails string#reverse!()","Rails array#reverse_each()","Rails enumerable#reverse_each()","Ruby activesupport::hashwithindifferentaccess#reverse_merge()","Ruby activesupport::hashwithindifferentaccess#reverse_merge()","Ruby hash#reverse_merge()","Ruby activesupport::hashwithindifferentaccess#reverse_merge!()","Ruby activesupport::hashwithindifferentaccess#reverse_merge!()","Ruby hash#reverse_merge!()","Ruby activerecord::querymethods#reverse_order()","Ruby hash#reverse_update()","Ruby activerecord::migration#revert()","Ruby activerecord::migration#reverting?()","Rails openssl::x509::crl#revoked()","Rails openssl::x509::crl#revoked=()","Rails argf#rewind()","Rails csv#rewind()","Rails dir#rewind()","Rails enumerator#rewind()","Rails gem::package::tarreader#rewind()","Rails gem::package::tarreader::entry#rewind()","Rails io#rewind()","Rails prime::eratosthenesgenerator#rewind()","Rails prime::generator23#rewind()","Rails prime::pseudoprimegenerator#rewind()","Rails prime::trialdivisiongenerator#rewind()","Rails rexml::parsers::lightparser#rewind()","Rails rexml::parsers::ultralightparser#rewind()","Rails stringio#rewind()","Rails zlib::gzipreader#rewind()","Rails cgi::rfc1123_date()","Ruby activesupport::timewithzone#rfc2822()","Rails date#rfc2822()","Rails date::rfc2822()","Rails datetime::rfc2822()","Rails time#rfc2822()","Rails time::rfc2822()","Ruby date#rfc3339()","Rails date::rfc3339()","Rails date#rfc3339()","Rails datetime#rfc3339()","Rails datetime::rfc3339()","Ruby activesupport::timewithzone#rfc822()","Rails date#rfc822()","Rails date::rfc822()","Rails datetime::rfc822()","Rails time#rfc822()","Rails time::rfc822()","Rails gem::specification#ri_dir()","Rails gem::docmanager#ri_installed?()","Rails rdoc::rubygemshook#ri_installed?()","Rails process::gid::rid()","Rails process::uid::rid()","Ruby activesupport::multibyte::chars#rindex()","Rails array#rindex()","Rails string#rindex()","Ruby activesupport::multibyte::chars#rjust()","Rails string#rjust()","Rails fileutils::rm()","Rails object#rm()","Rails fileutils::rm_f()","Rails fileutils::rm_r()","Rails fileutils::rm_rf()","Rails dir::rmdir()","Rails fileutils::rmdir()","Rails net::ftp#rmdir()","Rails object#rmdir()","Rails pathname#rmdir()","Rails shell::commandprocessor#rmdir()","Rails fileutils::rmtree()","Rails pathname#rmtree()","Ruby ","Ruby ","Ruby activerecord::transactions#rollback_active_record_state!()","Ruby activerecord::connectionadapters::databasestatements#rollback_db_transaction()","Ruby activerecord::connectionadapters::postgresqladapter#rollback_db_transaction()","Ruby activerecord::connectionadapters::abstractadapter#rollback_to_savepoint()","Ruby activerecord::connectionadapters::abstractmysqladapter#rollback_to_savepoint()","Ruby activerecord::connectionadapters::postgresqladapter#rollback_to_savepoint()","Ruby activerecord::connectionadapters::sqliteadapter#rollback_to_savepoint()","Ruby activerecord::connectionadapters::databasestatements#rollback_transaction_records()","Ruby actiondispatch::routing::mapper::base#root()","Ruby actiondispatch::routing::mapper::resources#root()","Ruby rails::root()","Rails gem::server#root()","Rails psych::nodes::document#root()","Rails rexml::document#root()","Rails rexml::element#root()","Rails rexml::light::node#root()","Ruby rails::engine::configuration#root=()","Rails pstore#root?()","Rails pathname#root?()","Rails rexml::element#root_node()","Rails pstore#roots()","Rails array#rotate()","Rails array#rotate!()","Ruby float#round()","Rails bigdecimal#round()","Rails float#round()","Rails integer#round()","Rails matrix#round()","Rails numeric#round()","Rails rexml::functions::round()","Rails rational#round()","Rails time#round()","Ruby rails::generators::actions#route()","Rails uri::generic#route_from()","Ruby activemodel::naming::route_key()","Rails uri::generic#route_to()","Ruby rails::generators::namedbase#route_url()","Ruby rails::engine#routes()","Ruby rails::engine#routes?()","Ruby rails::engine#routes_url_helpers()","Rails matrix#row()","Rails matrix#row_size()","Rails matrix::row_vector()","Rails matrix#row_vectors()","Rails matrix::rows()","Rails string#rpartition()","Rails math::rsqrt()","Rails rss::baseparser#rss()","Ruby activesupport::multibyte::chars#rstrip()","Rails string#rstrip()","Rails string#rstrip!()","Rails fileutils#ruby()","Rails gem::ruby()","Rails sys#ruby()","Ruby rails::generators::appbase#ruby_debugger_gemfile_entry()","Rails gem::ruby_engine()","Rails gem::ruby_version()","Rails gem::configfile#rubygems_api_key=()","Rails gem::gemcutterutilities#rubygems_api_request()","Ruby rails::initializable::initializer#run()","Ruby sprockets::bootstrap#run()","Rails erb#run()","Rails gem::commandmanager#run()","Rails gem::ext::builder::run()","Rails gem::gemrunner#run()","Rails gem::server#run()","Rails gem::server::run()","Rails rdoc::ri::driver::run()","Rails rdoc::ri::driver#run()","Rails rake::application#run()","Rails sys#run()","Rails thread#run()","Rails webrick::genericserver#run()","Rails webrick::httpserver#run()","Ruby build#run!()","Ruby rails::generators::appbase#run_bundle()","Ruby activesupport::callbacks#run_callbacks()","Rails irb::run_config()","Rails shell::commandprocessor::run_config()","Ruby activerecord::testfixtures#run_in_transaction?()","Ruby rails::initializable#run_initializers()","Ruby activesupport::run_load_hooks()","Rails gem::commands::setupcommand#run_rdoc()","Rails gem::docmanager#run_rdoc()","Ruby activemodel::validations#run_validations!()","Ruby activemodel::validations::callbacks#run_validations!()","Ruby rails::railtie::runner()","Ruby activerecord::logsubscriber::runtime()","Ruby activerecord::logsubscriber::runtime=()","Rails gem::specification#runtime_dependencies()","Ruby actionview::helpers::texthelper#safe_concat()","Ruby activesupport::safebuffer#safe_concat()","Ruby activesupport::inflector#safe_constantize()","Ruby string#safe_constantize()","Ruby activesupport::dependencies::classcache#safe_get()","Ruby actionview::helpers::outputsafetyhelper#safe_join()","Rails thread#safe_level()","Rails fileutils#safe_ln()","Rails fileutils::safe_unlink()","Ruby array#sample()","Rails array#sample()","Ruby actionview::helpers::sanitizehelper#sanitize()","Ruby activemodel::massassignmentsecurity::sanitizer#sanitize()","Ruby html::fullsanitizer#sanitize()","Ruby html::sanitizer#sanitize()","Rails gem::indexer#sanitize()","Ruby activerecord::sanitization::classmethods#sanitize_conditions()","Ruby actionview::helpers::sanitizehelper#sanitize_css()","Ruby html::whitelistsanitizer#sanitize_css()","Ruby actioncontroller::recordidentifier#sanitize_dom_id()","Ruby activemodel::massassignmentsecurity#sanitize_for_mass_assignment()","Ruby activerecord::connectionadapters::databasestatements#sanitize_limit()","Ruby activerecord::sanitization::classmethods#sanitize_sql()","Ruby activerecord::sanitization::classmethods#sanitize_sql_array()","Ruby activerecord::sanitization::classmethods#sanitize_sql_for_assignment()","Ruby activerecord::sanitization::classmethods#sanitize_sql_for_conditions()","Ruby activerecord::sanitization::classmethods#sanitize_sql_hash()","Ruby activerecord::sanitization::classmethods#sanitize_sql_hash_for_assignment()","Ruby activerecord::sanitization::classmethods#sanitize_sql_hash_for_conditions()","Rails gem::indexer#sanitize_string()","Ruby html::linksanitizer#sanitizeable?()","Ruby html::sanitizer#sanitizeable?()","Rails gem::requirement#satisfied_by?()","Rails gem::specification#satisfies_requirement?()","Rails date#saturday?()","Rails time#saturday?()","Ruby activerecord::persistence#save()","Ruby activerecord::sessionstore::sqlbypass#save()","Ruby activerecord::validations#save()","Ruby activeresource::base#save()","Ruby rails::generators::activemodel#save()","Ruby activerecord::persistence#save!()","Ruby activerecord::validations#save!()","Ruby activeresource::base#save!()","Rails rdoc::ri::store#save_cache()","Rails rdoc::ri::store#save_class()","Rails bigdecimal::save_exception_mode()","Rails irb::context#save_history()","Rails irb::historysavingability#save_history()","Rails irb::context#save_history=()","Rails bigdecimal::save_limit()","Ruby activerecord::dynamicfindermatch#save_method()","Rails rdoc::ri::store#save_method()","Ruby activerecord::dynamicfindermatch#save_record?()","Rails bigdecimal::save_rounding_mode()","Ruby activeresource::validations#save_with_validation()","Ruby activerecord::migration#say()","Rails gem::streamui#say()","Rails gem::userinteraction#say()","Ruby activerecord::migration#say_with_time()","Rails matrix::scalar()","Rails psych::coder#scalar()","Rails psych::emitter#scalar()","Rails psych::handler#scalar()","Rails psych::treebuilder#scalar()","Rails psych::coder#scalar=()","Rails openssl::x509::name::rfc2253dn#scan()","Rails rdoc::parser::c#scan()","Rails rdoc::parser::ruby#scan()","Rails rdoc::parser::simple#scan()","Rails rexml::iosource#scan()","Rails rexml::source#scan()","Rails string#scan()","Rails stringscanner#scan()","Rails webrick::httpserver::mounttable#scan()","Rails stringscanner#scan_full()","Rails stringscanner#scan_until()","Rails io#scanf()","Rails kernel#scanf()","Rails string#scanf()","Ruby activeresource::base::schema()","Ruby activeresource::base#schema()","Ruby activeresource::base::schema=()","Ruby activerecord::connectionadapters::postgresqladapter#schema_exists?()","Ruby activerecord::base::schema_format()","Ruby activerecord::connectionadapters::postgresqladapter#schema_search_path()","Ruby activerecord::connectionadapters::postgresqladapter#schema_search_path=()","Rails uri::generic#scheme=()","Rails uri::scheme_list()","Ruby actiondispatch::routing::mapper::scoping#scope()","Ruby activerecord::scoping::named::classmethods#scope()","Rails uri::ldap#scope()","Rails uri::ldap#scope=()","Ruby activerecord::relation#scope_for_create()","Rails rake::task::scope_name()","Ruby activerecord::scoping::named::classmethods#scoped()","Ruby activerecord::relation#scoping()","Ruby rails::appbuilder#script()","Ruby rails::pluginbuilder#script()","Rails curses::scrl()","Rails curses::window#scrl()","Rails curses::window#scroll()","Rails cgi::htmlextension#scrolling_list()","Rails curses::window#scrollok()","Rails gem::sourceindex#search()","Rails irb::jobmanager#search()","Rails irb::slex#search()","Rails irb::slex::node#search()","Rails net::imap#search()","Rails optionparser::list#search()","Rails optionparser::search_const()","Rails encoding::converter::search_convpath()","Ruby actionview::helpers::formhelper#search_field()","Ruby actionview::helpers::formtaghelper#search_field_tag()","Rails irb::irbloader#search_file_from_ruby_path()","Rails stringscanner#search_full()","Rails webrick::httpserver#search_servlet()","Rails gem::searcher()","Rails time#sec()","Rails xmlrpc::datetime#sec=()","Ruby array#second()","Ruby numeric#second()","Rails rss::itunesitemmodel::itunesduration#second=()","Rails rss::maker::itunesitemmodel::itunesdurationbase#second=()","Ruby numeric#seconds()","Ruby datetime#seconds_since_midnight()","Ruby time#seconds_since_midnight()","Ruby activesupport::timezone::seconds_to_utc_offset()","Ruby actioncontroller::httpauthentication::digest#secret_token()","Rails openssl::config#section()","Rails openssl::config#sections()","Rails rdoc::context#sections()","Rails cgi::cookie#secure=()","Rails rdoc::methodattr#see()","Rails openssl::pkey::ec::group#seed()","Rails random#seed()","Rails openssl::pkey::ec::group#seed=()","Rails argf#seek()","Rails dir#seek()","Rails io#seek()","Rails stringio#seek()","Ruby actionview::helpers::formbuilder#select()","Ruby actionview::helpers::formoptionshelper#select()","Ruby activerecord::connectionadapters::databasestatements#select()","Ruby activerecord::connectionadapters::mysql2adapter#select()","Ruby activerecord::querymethods#select()","Ruby html::selector#select()","Ruby html::tag#select()","Rails array#select()","Rails dbm#select()","Rails env::select()","Rails enumerable#select()","Rails gdbm#select()","Rails hash#select()","Rails io::select()","Rails kernel#select()","Rails net::imap#select()","Rails sdbm#select()","Rails struct#select()","Rails uri::generic#select()","Rails yaml::dbm#select()","Rails array#select!()","Rails env::select!()","Rails hash#select!()","Rails set#select!()","Ruby activerecord::connectionadapters::databasestatements#select_all()","Ruby activerecord::connectionadapters::querycache#select_all()","Ruby actionview::helpers::datehelper#select_date()","Ruby actionview::helpers::datehelper#select_datetime()","Ruby actionview::helpers::datehelper#select_day()","Ruby html::selector#select_first()","Ruby actionview::helpers::datehelper#select_hour()","Rails irb::inputcompletor::select_message()","Ruby actionview::helpers::datehelper#select_minute()","Ruby actionview::helpers::datehelper#select_month()","Ruby activerecord::connectionadapters::databasestatements#select_one()","Ruby activerecord::connectionadapters::databasestatements#select_rows()","Ruby activerecord::connectionadapters::mysql2adapter#select_rows()","Ruby activerecord::connectionadapters::mysqladapter#select_rows()","Ruby activerecord::connectionadapters::postgresqladapter#select_rows()","Ruby activerecord::connectionadapters::sqliteadapter#select_rows()","Ruby actionview::helpers::datehelper#select_second()","Ruby actionview::helpers::formtaghelper#select_tag()","Ruby actionview::helpers::datehelper#select_time()","Ruby activerecord::connectionadapters::databasestatements#select_value()","Ruby activerecord::connectionadapters::databasestatements#select_values()","Ruby actionview::helpers::datehelper#select_year()","Ruby html::selector()","Rails basicsocket#send()","Rails object#send()","Rails udpsocket#send()","Ruby actioncontroller::implicitrender#send_action()","Rails webrick::httpresponse#send_body()","Ruby actioncontroller::datastreaming#send_data()","Ruby actioncontroller::instrumentation#send_data()","Ruby actioncontroller::logsubscriber#send_data()","Ruby actioncontroller::datastreaming#send_file()","Ruby actioncontroller::instrumentation#send_file()","Ruby actioncontroller::logsubscriber#send_file()","Rails gem::commands::pushcommand#send_gem()","Rails webrick::httpresponse#send_header()","Rails unixsocket#send_io()","Rails net::smtp#send_mail()","Rails net::smtp#send_mail()","Rails net::smtp#send_message()","Rails net::smtp#send_message()","Rails drb::drbtcpsocket#send_reply()","Rails drb::drbtcpsocket#send_request()","Rails net::http#send_request()","Rails net::http#send_request()","Rails webrick::httpresponse#send_response()","Rails net::ftp#sendcmd()","Rails irb::frame::sender()","Rails net::smtp#sendmail()","Rails net::smtp#sendmail()","Rails basicsocket#sendmsg()","Rails basicsocket#sendmsg_nonblock()","Rails optionparser#separator()","Rails pp::ppmethods#seplist()","Rails psych::coder#seq=()","Rails rdoc::context::section#sequence()","Ruby activerecord::modelschema::classmethods#sequence_name()","Ruby activerecord::modelschema::classmethods#sequence_name=()","Rails openssl::ocsp::certificateid#serial()","Rails openssl::pkcs7::recipientinfo#serial()","Rails openssl::pkcs7::signerinfo#serial()","Rails openssl::x509::certificate#serial()","Rails openssl::x509::revoked#serial()","Rails openssl::x509::certificate#serial=()","Rails openssl::x509::revoked#serial=()","Ruby activerecord::connectionadapters::postgresqladapter#serial_sequence()","Ruby activemodel::serialization#serializable_hash()","Ruby activerecord::serialization#serializable_hash()","Ruby activerecord::attributemethods::serialization::attribute#serialize()","Ruby activerecord::attributemethods::serialization::classmethods#serialize()","Ruby activerecord::attributemethods::serialization::attribute#serialized_value()","Rails gserver#serve()","Rails xmlrpc::cgiserver#serve()","Rails xmlrpc::modrubyserver#serve()","Rails xmlrpc::server#serve()","Rails webrick::httpstatus::server_error?()","Rails webrick::httprequest#server_name()","Ruby actiondispatch::http::url#server_port()","Ruby actiondispatch::request#server_software()","Rails drb::extservmanager#service()","Rails webrick::cgi#service()","Rails webrick::httpproxyserver#service()","Rails webrick::httpserver#service()","Rails webrick::httpservlet::abstractservlet#service()","Rails webrick::httpservlet::filehandler#service()","Rails xmlrpc::webrickservlet#service()","Rails openssl::ssl::sslsocket#session()","Rails openssl::ssl::sslsocket#session=()","Rails openssl::ssl::sslcontext#session_add()","Ruby activerecord::connectionadapters::postgresqladapter#session_auth=()","Rails openssl::ssl::sslcontext#session_cache_mode()","Rails openssl::ssl::sslcontext#session_cache_mode=()","Rails openssl::ssl::sslcontext#session_cache_size()","Rails openssl::ssl::sslcontext#session_cache_size=()","Rails openssl::ssl::sslcontext#session_cache_stats()","Ruby activerecord::sessionstore::sqlbypass::session_id_column()","Ruby actiondispatch::request#session_options=()","Rails openssl::ssl::sslcontext#session_remove()","Rails openssl::ssl::sslsocket#session_reused?()","Ruby rails::application::configuration#session_store()","Ruby activerecord::generators::sessionmigrationgenerator#session_table_name()","Ruby activemodel::errors#set()","Rails ipaddr#set()","Rails rake::task#set_arg_names()","Rails uri::ldap#set_attributes()","Rails rdoc::markup::attrspan#set_attrs()","Rails exception#set_backtrace()","Rails optionparser::parseerror#set_backtrace()","Ruby activesupport::callbacks::classmethods#set_callback()","Rails dl#set_callback()","Rails dl#set_callback_internal()","Rails dl#set_cdecl_callback()","Rails webrick::utils::set_close_on_exec()","Ruby actionmailer::base#set_content_type()","Rails net::httpheader#set_content_type()","Ruby actiondispatch::response#set_cookie()","Rails dl::cstructentity#set_ctypes()","Rails dl::cunionentity#set_ctypes()","Rails rdoc::context#set_current_section()","Rails net::http#set_debug_output()","Rails net::http#set_debug_output()","Rails net::pop3#set_debug_output()","Rails net::pop3#set_debug_output()","Rails net::pop3#set_debug_output()","Rails net::pop3#set_debug_output()","Rails net::smtp#set_debug_output()","Rails net::smtp#set_debug_output()","Rails openssl::engine#set_default()","Ruby rails::generators::appbase#set_default_accessors!()","Rails xmlrpc::basicserver#set_default_handler()","Rails openssl::x509::store#set_default_paths()","Rails zlib::deflate#set_dictionary()","Rails zlib::inflate#set_dictionary()","Rails uri::ldap#set_dn()","Ruby activemodel::observerarray#set_enablement()","Rails argf#set_encoding()","Rails io#set_encoding()","Rails rdoc::encoding::set_encoding()","Rails stringio#set_encoding()","Ruby rails::server#set_environment()","Rails erb#set_eoutvar()","Rails rdoc::erbio#set_eoutvar()","Rails getoptlong#set_error()","Rails webrick::httpresponse#set_error()","Rails uri::ldap#set_extensions()","Rails uri::ldap#set_filter()","Ruby activerecord::testfixtures::classmethods#set_fixture_class()","Ruby railsguides::generator#set_flags_from_environment()","Rails net::httpheader#set_form()","Rails net::httpheader#set_form_data()","Rails uri::generic#set_fragment()","Rails openssl::pkey::ec::group#set_generator()","Rails tracer::set_get_line_procs()","Rails uri::mailto#set_headers()","Rails uri::generic#set_host()","Rails rubylex#set_input()","Rails debugger__::set_last_thread()","Rails debugger__#set_last_thread()","Rails irb::context#set_last_value()","Ruby activerecord::generators::migrationgenerator#set_local_assigns!()","Ruby activerecord::locking::optimistic::classmethods#set_locking_column()","Rails logger::application#set_log()","Rails rss::element#set_next_element()","Rails webrick::utils::set_non_blocking()","Rails uri::generic#set_opaque()","Rails optionparser::parseerror#set_option()","Rails getoptlong#set_options()","Rails openssl::ssl::sslcontext#set_params()","Rails xmlrpc::parserwriterchoosemixin#set_parser()","Rails webrick::httpauth::htdigest#set_passwd()","Rails webrick::httpauth::htpasswd#set_passwd()","Rails webrick::httpauth::userdb#set_passwd()","Rails uri::generic#set_password()","Rails uri::ftp#set_path()","Rails uri::generic#set_path()","Rails uri::generic#set_port()","Ruby activeresource::base::set_prefix()","Rails rubylex#set_prompt()","Rails uri::generic#set_query()","Rails net::httpheader#set_range()","Rails webrick::httpresponse#set_redirect()","Rails uri::generic#set_registry()","Rails uri::generic#set_scheme()","Rails uri::ldap#set_scope()","Rails readline::set_screen_size()","Rails xmlrpc::basicserver#set_service_hook()","Ruby actiondispatch::session::cachestore#set_session()","Rails rss::imagefaviconmodel::imagefavicon#set_size()","Rails net::ftp#set_socket()","Rails drb::drbunixsocket#set_sockopt()","Ruby activerecord::connectionadapters::postgresqladapter#set_standard_conforming_strings()","Rails dl#set_stdcall_callback()","Rails debugger__::context#set_suspend()","Rails uri::mailto#set_to()","Rails openssl::pkey::ec::point#set_to_infinity!()","Rails debugger__#set_trace()","Rails debugger__::set_trace()","Rails debugger__#set_trace_all()","Rails kernel#set_trace_func()","Rails thread#set_trace_func()","Rails uri::ftp#set_typecode()","Rails uri::generic#set_user()","Rails uri::generic#set_userinfo()","Rails xmlrpc::webrickservlet#set_valid_ip()","Rails rdoc::context#set_visibility_for()","Rails xmlrpc::parserwriterchoosemixin#set_writer()","Rails net::imap#setacl()","Rails string#setbyte()","Rails process::sys::setegid()","Rails process::sys::seteuid()","Rails process::sys::setgid()","Rails file::setgid?()","Rails file::stat#setgid?()","Rails filetest#setgid?()","Rails pathname#setgid?()","Rails etc::setgrent()","Rails process::setpgid()","Rails process::setpgrp()","Rails curses::setpos()","Rails curses::window#setpos()","Rails process::setpriority()","Rails win32ole#setproperty()","Rails etc::setpwent()","Rails net::imap#setquota()","Rails process::sys::setregid()","Rails process::sys::setresgid()","Rails process::sys::setresuid()","Rails process::sys::setreuid()","Rails process::sys::setrgid()","Rails process::setrlimit()","Rails process::sys::setruid()","Rails curses::setscrreg()","Rails curses::window#setscrreg()","Rails process::setsid()","Rails basicsocket#setsockopt()","Rails openssl::ssl::socketforwarder#setsockopt()","Rails rss::baselistener::setter()","Rails process::sys::setuid()","Rails file::setuid?()","Rails file::stat#setuid?()","Rails filetest#setuid?()","Rails pathname#setuid?()","Ruby activemodel::validations::acceptancevalidator#setup()","Ruby activemodel::validations::confirmationvalidator#setup()","Ruby activerecord::validations::uniquenessvalidator#setup()","Rails irb::setup()","Rails object#setup()","Rails openssl::ssl::sslcontext#setup()","Rails rdoc::rubygemshook#setup()","Rails drb::drbsslsocket::sslconfig#setup_certificate()","Ruby activerecord::testfixtures::classmethods#setup_fixture_accessors()","Ruby activerecord::testfixtures#setup_fixtures()","Rails rdoc::options#setup_generator()","Rails webrick::httpresponse#setup_header()","Rails rss::atom::entry#setup_maker()","Rails rss::rdf::bag#setup_maker()","Rails rss::rdf::bag#setup_maker()","Rails rss::rdf::seq#setup_maker()","Rails rss::rdf::seq#setup_maker()","Rails rss::rootelementmixin#setup_maker()","Rails rss::setupmaker#setup_maker()","Rails rss::xmlstylesheet#setup_maker()","Rails rss::rss#setup_maker_elements()","Rails rdoc::rdoc#setup_output_dir()","Rails rdoc::ri::driver#setup_pager()","Rails webrick::accesslog#setup_params()","Rails gem::docmanager#setup_rdoc()","Rails drb::drbsslsocket::sslconfig#setup_ssl_context()","Rails webrick::genericserver#setup_ssl_context()","Rails ripper::sexp()","Rails ripper::sexp_raw()","Rails shell::processcontroller#sfork()","Rails fileutils#sh()","Ruby actiondispatch::routing::mapper::resources#shallow()","Ruby actiondispatch::routing::mapper::resources#shallow?()","Rails gem::installer#shebang()","Rails shellwords::shellescape()","Rails string#shellescape()","Rails array#shelljoin()","Rails shellwords::shelljoin()","Rails shellwords::shellsplit()","Rails string#shellsplit()","Rails shellwords::shellwords()","Ruby activesupport::orderedhash#shift()","Rails array#shift()","Rails csv#shift()","Rails dbm#shift()","Rails env::shift()","Rails gdbm#shift()","Rails hash#shift()","Rails queue#shift()","Rails sdbm#shift()","Rails sizedqueue#shift()","Rails yaml::dbm#shift()","Ruby postscontroller#show()","Ruby actioncontroller::rescue#show_detailed_exceptions?()","Rails gem::command#show_help()","Rails gem::command#show_lookup_failure()","Rails gem::commands::ownercommand#show_owners()","Rails gem::server#show_rdoc_for_pattern()","Ruby activerecord::connectionadapters::abstractmysqladapter#show_variable()","Rails optionparser::show_version()","Rails array#shuffle()","Rails array#shuffle!()","Rails basicsocket#shutdown()","Rails gserver#shutdown()","Rails openssl::ssl::sslserver#shutdown()","Rails webrick::genericserver#shutdown()","Rails xmlrpc::server#shutdown()","Rails process::gid::sid_available?()","Rails process::uid::sid_available?()","Rails bigdecimal#sign()","Rails gem::security::signer#sign()","Rails openssl::netscape::spki#sign()","Rails openssl::ocsp::basicresponse#sign()","Rails openssl::ocsp::request#sign()","Rails openssl::pkcs7::sign()","Rails openssl::pkey::pkey#sign()","Rails openssl::x509::crl#sign()","Rails openssl::x509::certificate#sign()","Rails openssl::x509::request#sign()","Rails gem::security::sign_cert()","Rails gem::gemcutterutilities#sign_in()","Rails conditionvariable#signal()","Rails monitormixin::conditionvariable#signal()","Rails rinda::waittemplateentry#signal()","Rails irb::irb#signal_handle()","Rails irb::irb#signal_status()","Rails process::status#signaled?()","Rails openssl::x509::crl#signature_algorithm()","Rails openssl::x509::certificate#signature_algorithm()","Rails openssl::x509::request#signature_algorithm()","Rails openssl::pkcs7::signerinfo#signed_time()","Rails dl::valueutil#signed_value()","Rails openssl::pkcs7#signers()","Rails signalexception#signo()","Ruby activesupport::benchmarkable#silence()","Ruby activesupport::bufferedlogger#silence()","Ruby activesupport::deprecation::silence()","Ruby activesupport::taggedlogging#silence()","Ruby kernel#silence()","Ruby activesupport::cache::store#silence!()","Ruby activerecord::explain#silence_auto_explain()","Ruby kernel#silence_stream()","Ruby kernel#silence_warnings()","Ruby activesupport::bufferedlogger::silencer()","Ruby actionview::helpers::texthelper#simple_format()","Ruby html::selector#simple_selector()","Rails bigmath#sin()","Rails cmath::sin()","Rails math::sin()","Rails cmath::sin!()","Ruby activesupport::duration#since()","Ruby activesupport::timewithzone#since()","Ruby date#since()","Ruby datetime#since()","Ruby numeric#since()","Ruby time#since()","Rails rexml::validation::event#single?()","Rails singleforwardable#single_delegate()","Rails prettyprint::singleline_format()","Rails pp::singleline_pp()","Ruby kernel#singleton_class()","Rails object#singleton_class()","Rails numeric#singleton_method_added()","Rails object#singleton_methods()","Ruby activemodel::naming::singular()","Ruby activesupport::inflector::inflections#singular()","Rails matrix#singular?()","Rails matrix::lupdecomposition#singular?()","Ruby activemodel::naming::singular_route_key()","Ruby rails::generators::namedbase#singular_table_name()","Ruby activesupport::inflector#singularize()","Ruby string#singularize()","Rails cmath::sinh()","Rails math::sinh()","Rails cmath::sinh!()","Ruby activeresource::base::site()","Rails net::ftp#site()","Ruby activeresource::base::site=()","Ruby activeresource::connection#site=()","Ruby actiondispatch::middlewarestack#size()","Ruby activemodel::errors#size()","Ruby activerecord::fixtures#size()","Ruby activerecord::relation#size()","Ruby activesupport::cache::entry#size()","Ruby activesupport::multibyte::chars#size()","Rails array#size()","Rails bignum#size()","Rails dbm#size()","Rails dl::cptr#size()","Rails dl::cptr#size()","Rails dl::cstructentity::size()","Rails dl::cunionentity::size()","Rails dl::packer#size()","Rails dl::stack#size()","Rails digest::instance#size()","Rails env::size()","Rails file#size()","Rails file::size()","Rails file::stat#size()","Rails filetest#size()","Rails fixnum#size()","Rails gdbm#size()","Rails gem::sourceindex#size()","Rails hash#size()","Rails irb::history#size()","Rails matchdata#size()","Rails net::ftp#size()","Rails pathname#size()","Rails queue#size()","Rails rexml::attributes#size()","Rails rexml::elements#size()","Rails rexml::light::node#size()","Rails rexml::parent#size()","Rails rexml::syncenumerator#size()","Rails rinda::tuple#size()","Rails rinda::tupleentry#size()","Rails sdbm#size()","Rails set#size()","Rails string#size()","Rails stringio#size()","Rails struct#size()","Rails symbol#size()","Rails tempfile#size()","Rails vector#size()","Rails dl::cptr#size=()","Rails dl::cptr#size=()","Rails rss::imagefaviconmodel::imagefavicon#size=()","Rails file::size?()","Rails file::stat#size?()","Rails filetest#size?()","Rails pathname#size?()","Rails win32ole_method#size_opt_params()","Rails win32ole_method#size_params()","Rails dl::importer#sizeof()","Rails argf#skip()","Rails rdoc::markup::parser#skip()","Rails stringscanner#skip()","Ruby abstractcontroller::callbacks::classmethods#skip_after_filter()","Ruby abstractcontroller::callbacks::classmethods#skip_around_filter()","Ruby abstractcontroller::callbacks::classmethods#skip_before_filter()","Rails csv#skip_blanks?()","Ruby activesupport::callbacks::classmethods#skip_callback()","Rails gem::deprecate::skip_during()","Ruby abstractcontroller::callbacks::classmethods#skip_filter()","Rails rdoc::parser::ruby#skip_for_variable()","Rails rdoc::parser::ruby#skip_method()","Rails rdoc::parser::ruby#skip_optional_do_after_expression()","Rails rdoc::parser::rubytools#skip_tkspace()","Rails rdoc::parser::ruby#skip_tkspace_comment()","Rails stringscanner#skip_until()","Rails kernel#sleep()","Rails mutex#sleep()","Rails mutex_m#sleep()","Ruby activesupport::multibyte::chars#slice()","Ruby hash#slice()","Rails array#slice()","Rails ripper::slice()","Rails string#slice()","Rails symbol#slice()","Ruby hash#slice!()","Rails array#slice!()","Rails string#slice!()","Rails enumerable#slice_before()","Rails socket::sockaddr_in()","Rails socket::sockaddr_un()","Rails file::socket?()","Rails file::stat#socket?()","Rails filetest#socket?()","Rails pathname#socket?()","Rails socket::socketpair()","Rails unixsocket::socketpair()","Rails addrinfo#socktype()","Rails matrix::lupdecomposition#solve()","Rails array#sort()","Rails enumerable#sort()","Rails net::imap#sort()","Rails array#sort!()","Rails enumerable#sort_by()","Rails array#sort_by!()","Rails gem::specification#sort_obj()","Rails rexml::parsers::sax2parser#source()","Rails rake::task#source()","Rails regexp#source()","Rails encoding::converter#source_encoding()","Rails encoding::invalidbytesequenceerror#source_encoding()","Rails encoding::undefinedconversionerror#source_encoding()","Rails encoding::invalidbytesequenceerror#source_encoding_name()","Rails encoding::undefinedconversionerror#source_encoding_name()","Rails irb::irbloader#source_file()","Rails gem::source_index()","Rails method#source_location()","Rails proc#source_location()","Rails unboundmethod#source_location()","Rails win32ole_type#source_ole_types()","Ruby rails::generators::base::source_root()","Rails gem::sources()","Rails rake::task#sources()","Rails gem::sources=()","Rails kernel#spawn()","Rails pty::spawn()","Rails process::spawn()","Rails gem::installer#spec()","Rails gem::specification#spec_dir()","Rails gem::specification#spec_file()","Rails gem::specification#spec_name()","Rails gem::commands::lockcommand#spec_path()","Rails gem::dependencylist#spec_predecessors()","Rails gem::dependency#specific?()","Rails gem::requirement#specific?()","Rails gem::command::specific_extra_args()","Rails gem::command::specific_extra_args_hash()","Rails gem::sourceindex#specification()","Rails gem::server#specs()","Rails gem::version#spermy_recommendation()","Ruby activesupport::multibyte::chars#split()","Ruby array#split()","Rails bigdecimal#split()","Rails file::split()","Rails pathname#split()","Rails shellwords::split()","Rails string#split()","Rails uri::split()","Rails uri::parser#split()","Rails fileutils#split_all()","Rails sys#split_all()","Ruby rails::commands::plugin#split_args()","Rails webrick::httputils::split_header_value()","Rails rdoc::markup::attributemanager#split_into_flow()","Rails kernel#sprintf()","Ruby activerecord::logsubscriber#sql()","Ruby activerecord::connectionadapters::databasestatements#sql_for_insert()","Ruby activerecord::connectionadapters::postgresqladapter#sql_for_insert()","Ruby activerecord::connectionadapters::databaselimits#sql_query_length()","Ruby activerecord::connectionadapters::sqliteadapter#sqlite_version()","Rails bigdecimal#sqrt()","Rails bigmath#sqrt()","Rails cmath::sqrt()","Rails math::sqrt()","Rails cmath::sqrt!()","Rails matrix#square?()","Rails string#squeeze()","Rails string#squeeze!()","Ruby string#squish()","Ruby string#squish!()","Rails kernel#srand()","Rails random::srand()","Rails win32ole_type#src_type()","Rails net::smtp#ssl?()","Rails net::smtp#ssl?()","Rails webrick::httprequest#ssl?()","Rails gem::ssl_available?()","Rails webrick::genericserver#ssl_context()","Ruby activeresource::base::ssl_options()","Ruby activeresource::base::ssl_options=()","Ruby activeresource::connection#ssl_options=()","Rails net::pop3::ssl_params()","Rails net::pop3::ssl_params()","Rails net::pop3::ssl_params()","Rails net::pop3::ssl_params()","Rails openssl::ssl::sslcontext#ssl_version=()","Ruby actioncontroller::conditionalget#stale?()","Ruby actiondispatch::session::stalesessioncheck#stale_session_check!()","Rails rexml::document#stand_alone?()","Rails rake::application#standard_exception_handling()","Ruby actiondispatch::http::url#standard_port()","Ruby actiondispatch::http::url#standard_port?()","Rails rake::application#standard_rake_options()","Rails curses::standend()","Rails curses::window#standend()","Rails curses::standout()","Rails curses::window#standout()","Ruby rails::console#start()","Ruby rails::console::start()","Ruby rails::dbconsole::start()","Ruby rails::dbconsole#start()","Ruby rails::server#start()","Rails coverage::start()","Rails date#start()","Rails gc::start()","Rails gserver#start()","Rails irb::start()","Rails logger::application#start()","Rails net::http::start()","Rails net::http#start()","Rails net::http::start()","Rails net::http#start()","Rails net::pop3::start()","Rails net::pop3#start()","Rails net::pop3::start()","Rails net::pop3#start()","Rails net::pop3::start()","Rails net::pop3#start()","Rails net::pop3#start()","Rails net::pop3::start()","Rails net::smtp::start()","Rails net::smtp#start()","Rails net::smtp#start()","Rails net::smtp::start()","Rails psych::streaming#start()","Rails psych::visitors::yamltree#start()","Rails shell::systemcommand#start()","Rails thread::start()","Rails webrick::cgi#start()","Rails webrick::daemon::start()","Rails webrick::genericserver#start()","Rails webrick::simpleserver::start()","Rails rss::rexmllikexmlparser#startelement()","Rails xmlrpc::xmlparser::streamparsermixin#startelement()","Rails rdoc::markup::toansi#start_accepting()","Rails rdoc::markup::tohtml#start_accepting()","Rails rdoc::markup::tordoc#start_accepting()","Rails rdoc::markup::tottonly#start_accepting()","Rails rdoc::tokenstream#start_collecting_tokens()","Rails curses::start_color()","Rails rdoc::codeobject#start_doc()","Ruby activesupport::xmlmini_nokogirisax::hashbuilder#start_document()","Rails psych::emitter#start_document()","Rails psych::handler#start_document()","Rails psych::treebuilder#start_document()","Rails rexml::sax2listener#start_document()","Ruby activesupport::xmlmini_nokogirisax::hashbuilder#start_element()","Rails rexml::sax2listener#start_element()","Rails rexml::parsers::pullevent#start_element?()","Rails shell::systemcommand#start_export()","Rails shell::systemcommand#start_import()","Rails shell::processcontroller#start_job()","Rails psych::emitter#start_mapping()","Rails psych::handler#start_mapping()","Rails rexml::sax2listener#start_prefix_mapping()","Ruby actioncontroller::logsubscriber#start_processing()","Rails profiler__#start_profile()","Rails psych::emitter#start_sequence()","Rails psych::handler#start_sequence()","Rails drb::start_service()","Rails psych::emitter#start_stream()","Rails psych::handler#start_stream()","Rails psych::treebuilder#start_stream()","Ruby activemodel::observerarray#start_transaction()","Rails string#start_with?()","Rails net::http#started?()","Rails net::http#started?()","Rails net::pop3#started?()","Rails net::pop3#started?()","Rails net::pop3#started?()","Rails net::pop3#started?()","Rails net::smtp#started?()","Rails net::smtp#started?()","Ruby rails::rack::logger#started_request_message()","Rails gserver#starting()","Rails rexml::functions::starts_with()","Rails net::imap#starttls()","Rails net::smtp#starttls()","Rails net::smtp#starttls()","Rails net::smtp#starttls?()","Rails net::smtp#starttls?()","Rails net::smtp#starttls_always?()","Rails net::smtp#starttls_always?()","Rails net::smtp#starttls_auto?()","Rails net::smtp#starttls_auto?()","Rails file::stat()","Rails gc::stat()","Rails io#stat()","Rails pathname#stat()","Rails openssl::ssl::sslsocket#state()","Ruby activesupport::cache::memcachestore#stats()","Ruby actioncontroller::metal#status()","Rails net::ftp#status()","Rails net::imap#status()","Rails openssl::ocsp::basicresponse#status()","Rails openssl::ocsp::response#status()","Rails pty::childexited#status()","Rails systemexit#status()","Rails thread#status()","Ruby actioncontroller::metal#status=()","Ruby actiondispatch::response#status=()","Rails webrick::httpresponse#status=()","Ruby actiondispatch::exceptionwrapper#status_code()","Ruby actiondispatch::exceptionwrapper::status_code_for_exception()","Rails webrick::httpresponse#status_line()","Ruby actiondispatch::response#status_message()","Rails openssl::ocsp::response#status_string()","Rails net::smtp::response#status_type_char()","Rails debugger__#stdout()","Rails debugger__::stdout()","Rails debugger__::stdout=()","Rails curses::stdscr()","Rails date#step()","Rails numeric#step()","Rails range#step()","Ruby range#step_with_blockless()","Ruby activerecord::inheritance::classmethods#sti_name()","Rails file::sticky?()","Rails file::stat#sticky?()","Rails filetest#sticky?()","Rails pathname#sticky?()","Rails gserver#stop()","Rails gserver::stop()","Rails thread::stop()","Rails webrick::genericserver#stop()","Rails thread#stop?()","Rails rdoc::codeobject#stop_doc()","Rails debugger__::context#stop_next()","Rails profiler__#stop_profile()","Rails drb::stop_service()","Rails drb::drbserver#stop_service()","Rails drb::extserv#stop_service()","Rails gserver#stopped?()","Rails process::status#stopped?()","Rails rake::pseudostatus#stopped?()","Rails gserver#stopping()","Rails process::status#stopsig()","Rails net::ftp#storbinary()","Ruby activerecord::store::classmethods#store()","Ruby activesupport::dependencies::classcache#store()","Ruby activesupport::hashwithindifferentaccess#store()","Ruby activesupport::hashwithindifferentaccess#store()","Rails dbm#store()","Rails env::store()","Rails gdbm#store()","Rails hash#store()","Rails net::imap#store()","Rails sdbm#store()","Rails yaml::dbm#store()","Ruby activerecord::store::classmethods#store_accessor()","Ruby rails::generators::pluginnewgenerator#store_application_definition!()","Rails net::ftp#storlines()","Rails drb::drbsslsocket#stream()","Rails drb::drbtcpsocket#stream()","Rails rexml::parsers::baseparser#stream=()","Rails zlib::zstream#stream_end?()","Rails psych::handler#streaming?()","Rails gc::stress()","Rails gc::stress=()","Ruby activesupport::timewithzone#strftime()","Rails date#strftime()","Rails datetime#strftime()","Rails time#strftime()","Rails base64#strict_decode64()","Ruby base64::strict_encode64()","Rails base64#strict_encode64()","Rails matchdata#string()","Rails rexml::functions::string()","Rails ripper::tokenpattern::matchdata#string()","Rails stringio#string()","Rails stringscanner#string()","Rails stringio#string=()","Rails stringscanner#string=()","Rails rexml::functions::string_length()","Rails rexml::functions::string_value()","Ruby activesupport::hashwithindifferentaccess#stringify_keys()","Ruby activesupport::hashwithindifferentaccess#stringify_keys()","Ruby hash#stringify_keys()","Ruby activesupport::hashwithindifferentaccess#stringify_keys!()","Ruby activesupport::hashwithindifferentaccess#stringify_keys!()","Ruby hash#stringify_keys!()","Ruby activesupport::multibyte::chars#strip()","Rails string#strip()","Rails string#strip!()","Rails rdoc::text#strip_hashes()","Ruby string#strip_heredoc()","Ruby actionview::helpers::sanitizehelper#strip_links()","Rails rdoc::text#strip_newlines()","Rails rdoc::text#strip_stars()","Ruby actionview::helpers::sanitizehelper#strip_tags()","Rails tsort#strongly_connected_components()","Rails date::strptime()","Rails datetime::strptime()","Rails time::strptime()","Rails dl::importer#struct()","Rails xmlrpc::convert::struct()","Ruby activerecord::connectionadapters::schemastatements#structure_dump()","Ruby actionview::helpers::assettaghelper::stylesheettaghelpers#stylesheet_link_tag()","Ruby sprockets::helpers::railshelper#stylesheet_link_tag()","Ruby actionview::helpers::assettaghelper::stylesheettaghelpers#stylesheet_path()","Ruby sprockets::helpers::railshelper#stylesheet_path()","Ruby rails::pluginbuilder#stylesheets()","Rails webrick::utils::su()","Rails bigdecimal#sub()","Rails kernel#sub()","Rails pathname#sub()","Rails string#sub()","Rails string#sub!()","Rails pathname#sub_ext()","Rails net::httpheader#sub_type()","Ruby rails::generators::subclasses()","Ruby rails::railtie::subclasses()","Ruby actiondispatch::http::url#subdomain()","Rails resolv::dns::name#subdomain_of?()","Ruby actiondispatch::http::url#subdomains()","Rails openssl::x509::certificate#subject()","Rails openssl::x509::request#subject()","Rails openssl::x509::certificate#subject=()","Rails openssl::x509::request#subject=()","Rails openssl::x509::extensionfactory#subject_certificate=()","Rails openssl::x509::extensionfactory#subject_request=()","Ruby actionview::helpers::formbuilder#submit()","Rails cgi::htmlextension#submit()","Ruby actionview::helpers::formtaghelper#submit_tag()","Ruby activesupport::notifications::subscribe()","Ruby activesupport::notifications::fanout#subscribe()","Rails net::imap#subscribe()","Ruby activesupport::notifications::subscribed()","Rails time#subsec()","Rails set#subset?()","Ruby activerecord::connectionadapters::abstractadapter#substitute_at()","Ruby activerecord::connectionadapters::postgresqladapter#substitute_at()","Rails rexml::functions::substring()","Rails rexml::functions::substring_after()","Rails rexml::functions::substring_before()","Rails set#subtract()","Rails curses::window#subwin()","Rails date#succ()","Rails fixnum#succ()","Rails ipaddr#succ()","Rails integer#succ()","Rails prime::eratosthenesgenerator#succ()","Rails prime::generator23#succ()","Rails prime::oldcompatibility#succ()","Rails prime::pseudoprimegenerator#succ()","Rails prime::trialdivisiongenerator#succ()","Rails string#succ()","Rails symbol#succ()","Rails time#succ()","Rails string#succ!()","Rails gem::builder#success()","Rails iconv::failure#success()","Ruby activeresource::response#success?()","Rails net::smtp::response#success?()","Rails process::status#success?()","Rails systemexit#success?()","Rails webrick::httpstatus::success?()","Rails gem::suffix_pattern()","Rails gem::suffixes()","Rails gem::specfetcher#suggest_gems_from_name()","Ruby activerecord::calculations#sum()","Ruby enumerable#sum()","Rails rexml::functions::sum()","Rails string#sum()","Rails optionparser#summarize()","Rails optionparser::list#summarize()","Rails optionparser::switch#summarize()","Rails rdoc::stats#summary()","Rails gem::specification#summary=()","Ruby date#sunday()","Ruby time#sunday()","Rails date#sunday?()","Rails time#sunday?()","Rails shell::systemcommand#super_each()","Rails class#superclass()","Rails rdoc::classmodule#superclass()","Rails rdoc::normalmodule#superclass()","Rails rdoc::classmodule#superclass=()","Ruby class#superclass_delegating_accessor()","Rails set#superset?()","Rails rss::maker::supported?()","Ruby activerecord::connectionadapters::sqliteadapter#supports_add_column?()","Ruby activerecord::connectionadapters::abstractadapter#supports_bulk_alter?()","Ruby activerecord::connectionadapters::abstractadapter#supports_count_distinct?()","Ruby activerecord::connectionadapters::abstractadapter#supports_ddl_transactions?()","Ruby activerecord::connectionadapters::postgresqladapter#supports_ddl_transactions?()","Ruby activerecord::connectionadapters::sqliteadapter#supports_ddl_transactions?()","Ruby activerecord::connectionadapters::abstractadapter#supports_explain?()","Ruby activerecord::connectionadapters::mysql2adapter#supports_explain?()","Ruby activerecord::connectionadapters::postgresqladapter#supports_explain?()","Ruby activerecord::connectionadapters::sqliteadapter#supports_explain?()","Ruby activerecord::connectionadapters::abstractadapter#supports_index_sort_order?()","Ruby activerecord::connectionadapters::abstractmysqladapter#supports_index_sort_order?()","Ruby activerecord::connectionadapters::postgresqladapter#supports_index_sort_order?()","Ruby activerecord::connectionadapters::sqliteadapter#supports_index_sort_order?()","Ruby activerecord::connectionadapters::postgresqladapter#supports_insert_with_returning?()","Ruby activerecord::connectionadapters::abstractadapter#supports_migrations?()","Ruby activerecord::connectionadapters::abstractmysqladapter#supports_migrations?()","Ruby activerecord::connectionadapters::postgresqladapter#supports_migrations?()","Ruby activerecord::connectionadapters::abstractadapter#supports_primary_key?()","Ruby activerecord::connectionadapters::abstractmysqladapter#supports_primary_key?()","Ruby activerecord::connectionadapters::abstractadapter#supports_savepoints?()","Ruby activerecord::connectionadapters::abstractmysqladapter#supports_savepoints?()","Ruby activerecord::connectionadapters::postgresqladapter#supports_savepoints?()","Ruby activerecord::connectionadapters::sqliteadapter#supports_savepoints?()","Ruby activerecord::connectionadapters::databasestatements#supports_statement_cache?()","Ruby activerecord::connectionadapters::mysqladapter#supports_statement_cache?()","Ruby activerecord::connectionadapters::postgresqladapter#supports_statement_cache?()","Ruby activerecord::connectionadapters::sqliteadapter#supports_statement_cache?()","Ruby actionview::template#supports_streaming?()","Ruby actionview::template::handlers::erb#supports_streaming?()","Ruby kernel#suppress()","Ruby activerecord::migration#suppress_messages()","Rails debugger__::suspend()","Rails debugger__::context#suspend_all()","Rails irb::irb#suspend_context()","Rails irb::irb#suspend_input_method()","Rails irb::irb#suspend_name()","Rails irb::irb#suspend_workspace()","Ruby plugin#svn_url?()","Ruby actiondispatch::middlewarestack#swap()","Rails string#swapcase()","Rails symbol#swapcase()","Rails string#swapcase!()","Rails irb::jobmanager#switch()","Rails process::gid::switch()","Rails process::uid::switch()","Rails optionparser::switch#switch_name()","Rails dl::compositehandler#sym()","Rails dl::handle::sym()","Rails dl::handle#sym()","Ruby activesupport::hashwithindifferentaccess#symbolize_keys()","Ruby activesupport::hashwithindifferentaccess#symbolize_keys()","Ruby hash#symbolize_keys()","Ruby hash#symbolize_keys!()","Ruby activerecord::inheritance::classmethods#symbolized_base_class()","Ruby actiondispatch::http::parameters#symbolized_path_parameters()","Ruby activerecord::inheritance::classmethods#symbolized_sti_name()","Ruby mime::mimes#symbols()","Rails file::symlink()","Rails fileutils::symlink()","Rails sys#symlink()","Rails file::symlink?()","Rails file::stat#symlink?()","Rails filetest#symlink?()","Rails pathname#symlink?()","Rails rake::ftpfile#symlink?()","Rails sys#symlink_files()","Rails matrix#symmetric?()","Rails gdbm#sync()","Rails io#sync()","Rails stringio#sync()","Rails zlib::gzipfile#sync()","Rails zlib::inflate#sync()","Rails io#sync=()","Rails stringio#sync=()","Rails zlib::gzipfile#sync=()","Rails sync_m#sync_exclusive?()","Rails sync_m#sync_exclusive?()","Rails sync_m#sync_extend()","Rails sync_m#sync_extend()","Rails sync_m#sync_inspect()","Rails sync_m#sync_inspect()","Ruby activesupport::orderedhash#sync_keys!()","Rails sync_m#sync_lock()","Rails sync_m#sync_lock()","Rails sync_m#sync_locked?()","Rails sync_m#sync_locked?()","Rails zlib::inflate#sync_point?()","Rails sync_m#sync_shared?()","Rails sync_m#sync_shared?()","Rails sync_m#sync_synchronize()","Rails sync_m#sync_synchronize()","Rails sync_m#sync_try_lock()","Rails sync_m#sync_try_lock()","Rails sync_m#sync_unlock()","Rails sync_m#sync_unlock()","Ruby module#synchronize()","Rails monitormixin#synchronize()","Rails mutex#synchronize()","Rails gdbm#syncmode=()","Rails rake::taskmanager#synthesize_file_task()","Rails socket#sysaccept()","Rails tcpserver#sysaccept()","Rails unixserver#sysaccept()","Rails kernel#syscall()","Rails openssl::ssl::sslsocket#sysclose()","Rails etc::sysconfdir()","Rails io::sysopen()","Rails pathname#sysopen()","Rails io#sysread()","Rails io::readable#sysread()","Rails object#sysread()","Rails openssl::ssl::sslsocket#sysread()","Rails io#sysseek()","Rails openssl::pkey::dsa#syssign()","Rails kernel#system()","Rails net::ftp#system()","Rails rexml::doctype#system()","Rails rake::altsystem#system()","Rails shell::commandprocessor#system()","Rails rake::application#system_dir()","Rails shell#system_path=()","Rails etc::systmpdir()","Rails openssl::pkey::dsa#sysverify()","Rails io#syswrite()","Rails openssl::ssl::sslsocket#syswrite()","Ruby abstractcontroller::translation#t()","Ruby actionview::helpers::translationhelper#t()","Rails matrix#t()","Rails csv::table()","Ruby activerecord::connectionadapters::schemastatements#table_alias_for()","Ruby activerecord::connectionadapters::databaselimits#table_alias_length()","Ruby activerecord::connectionadapters::postgresqladapter#table_alias_length()","Ruby activerecord::connectionadapters::abstractmysqladapter#table_exists?()","Ruby activerecord::connectionadapters::postgresqladapter#table_exists?()","Ruby activerecord::connectionadapters::sqliteadapter#table_exists?()","Ruby activerecord::connectionadapters::schemacache#table_exists?()","Ruby activerecord::connectionadapters::schemastatements#table_exists?()","Ruby activerecord::modelschema::classmethods#table_exists?()","Ruby activerecord::modelschema::classmethods#table_name()","Ruby activerecord::sessionstore::sqlbypass::table_name()","Ruby rails::generators::namedbase#table_name()","Ruby activerecord::modelschema::classmethods#table_name=()","Ruby activerecord::connectionadapters::databaselimits#table_name_length()","Ruby activerecord::fixtures#table_rows()","Ruby activerecord::connectionadapters::sqliteadapter#table_structure()","Ruby activesupport::inflector#tableize()","Ruby string#tableize()","Ruby activerecord::connectionadapters::postgresqladapter#tables()","Ruby actionview::helpers::activemodelinstancetag#tag()","Ruby actionview::helpers::taghelper#tag()","Rails xmlrpc::xmlwriter::abstract#tag()","Rails rexml::streamlistener#tag_end()","Rails rss::listenermixin#tag_end()","Rails rss::element::tag_name()","Rails rss::element#tag_name()","Rails rexml::streamlistener#tag_start()","Rails rss::listenermixin#tag_start()","Ruby activesupport::taggedlogging#tagged()","Rails psych::tagurize()","Ruby rails::rack::logtailer#tail!()","Rails delegator#taint()","Rails object#taint()","Rails pathname#taint()","Rails object#tainted?()","Rails array#take()","Rails enumerable#take()","Rails rinda::tuplespace#take()","Rails rinda::tuplespaceproxy#take()","Rails array#take_while()","Rails enumerable#take_while()","Rails cmath::tan()","Rails math::tan()","Rails cmath::tan!()","Rails cmath::tanh()","Rails math::tanh()","Rails cmath::tanh!()","Rails object#tap()","Rails rake::packagetask#tar_bz2_file()","Rails rake::packagetask#tar_gz_file()","Rails rake::task::task_defined?()","Ruby build#tasks()","Rails rake::namespace#tasks()","Rails rake::task::tasks()","Rails rake::taskmanager#tasks()","Rails rake::taskmanager#tasks_in_scope()","Rails addrinfo::tcp()","Rails socket::tcp()","Rails socket::tcp_server_loop()","Rails socket::tcp_server_sockets()","Ruby activerecord::testfixtures#teardown_fixtures()","Rails shell::commandprocessor#tee()","Ruby actionview::helpers::formhelper#telephone_field()","Ruby actionview::helpers::formtaghelper#telephone_field_tag()","Rails argf#tell()","Rails dir#tell()","Rails io#tell()","Rails stringio#tell()","Rails zlib::gzipreader#tell()","Rails zlib::gzipwriter#tell()","Rails net::telnet#telnetmode()","Rails net::telnet#telnetmode=()","Ruby rails::generators::namedbase#template()","Rails rdoc::options#template_dir_for()","Ruby actionview::lookupcontext::viewpaths#template_exists?()","Rails rdoc::generator::darkfish#template_for()","Rails rdoc::generator::darkfish#template_result()","Ruby rails::generators::templates_path()","Ruby numeric#terabyte()","Ruby numeric#terabytes()","Rails rake::application#terminal_width()","Rails getoptlong#terminate()","Rails optionparser::terminate()","Rails optionparser#terminate()","Rails shell::systemcommand#terminate()","Rails stringscanner#terminate()","Rails thread#terminate()","Rails gem::mockgemui#terminate_interaction()","Rails gem::streamui#terminate_interaction()","Rails gem::userinteraction#terminate_interaction()","Rails shell::processcontroller#terminate_job()","Rails gem::mockgemui#terminated?()","Rails getoptlong#terminated?()","Rails process::status#termsig()","Ruby rails::appbuilder#test()","Ruby rails::pluginbuilder#test()","Rails kernel#test()","Rails shell::commandprocessor#test()","Ruby rails::pluginbuilder#test_dummy_clean()","Ruby rails::pluginbuilder#test_dummy_config()","Ruby activemodel::lint::tests#test_errors_aref()","Ruby activemodel::lint::tests#test_errors_full_messages()","Rails gem::specification#test_file()","Rails gem::specification#test_file=()","Rails gem::specification#test_files()","Rails gem::specification#test_files=()","Ruby activemodel::lint::tests#test_model_naming()","Ruby activemodel::lint::tests#test_persisted?()","Ruby activemodel::lint::tests#test_to_key()","Ruby activemodel::lint::tests#test_to_param()","Ruby activemodel::lint::tests#test_to_partial_path()","Ruby activemodel::lint::tests#test_valid?()","Rails prettyprint#text()","Rails prettyprint::singleline#text()","Rails rdoc::markup::raw#text()","Rails rdoc::markup::verbatim#text()","Rails rexml::element#text()","Rails rexml::functions::text()","Rails rexml::streamlistener#text()","Rails rss::listenermixin#text()","Rails xmlrpc::xmlwriter::simple#text()","Rails xmlrpc::xmlwriter::xmlparser#text()","Rails rexml::element#text=()","Rails rexml::light::node#text=()","Rails rexml::parsers::pullevent#text?()","Ruby actionview::helpers::formhelper#text_area()","Ruby actionview::helpers::formtaghelper#text_area_tag()","Ruby actionview::helpers::formhelper#text_field()","Rails cgi::htmlextension#text_field()","Ruby actionview::helpers::formtaghelper#text_field_tag()","Rails cgi::htmlextension#textarea()","Rails rss::rss#textinput()","Rails rexml::element#texts()","Rails rake::packagetask#tgz_file()","Ruby array#third()","Rails debugger__#thnum()","Rails drb::thread()","Rails irb::jobmanager#thread()","Rails net::imap#thread()","Rails debugger__::thread_list()","Rails debugger__::thread_list_all()","Ruby rails::application::configuration#threadsafe!()","Rails kernel#throw()","Rails date#thursday?()","Rails time#thursday?()","Ruby activesupport::multibyte::chars#tidy_bytes()","Ruby activesupport::multibyte::unicode#tidy_bytes()","Ruby activesupport::timewithzone#time()","Rails gem::time()","Rails openssl::ssl::session#time()","Rails openssl::x509::revoked#time()","Rails rake::ftpfile::time()","Rails win32::registry::time2wtime()","Rails openssl::ssl::session#time=()","Rails openssl::x509::revoked#time=()","Rails openssl::x509::store#time=()","Ruby actionview::helpers::datehelper#time_ago_in_words()","Rails rdoc::generator::darkfish#time_delta_string()","Ruby actionview::helpers::datehelper#time_select()","Ruby actionview::helpers::formbuilder#time_select()","Ruby actionview::helpers::datehelper#time_tag()","Ruby time::time_with_datetime_fallback()","Ruby actionview::helpers::formoptionshelper#time_zone_options_for_select()","Ruby actionview::helpers::formbuilder#time_zone_select()","Ruby actionview::helpers::formoptionshelper#time_zone_select()","Ruby activeresource::base::timeout()","Rails object#timeout()","Rails openssl::ssl::session#timeout()","Rails timeout::timeout()","Rails webrick::utils::timeout()","Ruby activeresource::base::timeout=()","Ruby activeresource::connection#timeout=()","Rails curses::timeout=()","Rails curses::window#timeout=()","Rails openssl::ssl::session#timeout=()","Rails xmlrpc::client#timeout=()","Rails integer#times()","Rails process::times()","Rails rake::filecreationtask#timestamp()","Rails rake::filetask#timestamp()","Rails rake::task#timestamp()","Rails socket::ancillarydata#timestamp()","Ruby activerecord::base::timestamped_migrations()","Ruby activerecord::connectionadapters::table#timestamps()","Ruby activerecord::connectionadapters::tabledefinition#timestamps()","Ruby activesupport::multibyte::chars#titlecase()","Ruby string#titlecase()","Ruby activesupport::inflector#titleize()","Ruby activesupport::multibyte::chars#titleize()","Ruby string#titleize()","Rails net::smtp#tls?()","Rails net::smtp#tls?()","Ruby rails::appbuilder#tmp()","Rails dir::tmpdir()","Ruby array#to()","Ruby string#to()","Rails uri::mailto#to=()","Ruby actiondispatch::response#to_a()","Ruby activemodel::errors#to_a()","Ruby activerecord::relation#to_a()","Ruby activesupport::orderedhash#to_a()","Ruby activesupport::timewithzone#to_a()","Ruby rails::paths::path#to_a()","Rails argf#to_a()","Rails array#to_a()","Rails benchmark::tms#to_a()","Rails csv::table#to_a()","Rails dbm#to_a()","Rails env::to_a()","Rails enumerable#to_a()","Rails gdbm#to_a()","Rails gem::platform#to_a()","Rails hash#to_a()","Rails matchdata#to_a()","Rails matrix#to_a()","Rails matrix::eigenvaluedecomposition#to_a()","Rails matrix::lupdecomposition#to_a()","Rails nilclass#to_a()","Rails openssl::x509::extension#to_a()","Rails openssl::x509::name#to_a()","Rails optionparser#to_a()","Rails rexml::attributes#to_a()","Rails rexml::elements#to_a()","Rails rexml::parent#to_a()","Rails rake::filelist#to_a()","Rails rinda::ringfinger::to_a()","Rails rinda::ringfinger#to_a()","Rails rubyvm::instructionsequence#to_a()","Rails sdbm#to_a()","Rails set#to_a()","Rails shell::filter#to_a()","Rails struct#to_a()","Rails time#to_a()","Rails vector#to_a()","Rails xmlrpc::datetime#to_a()","Rails yaml::dbm#to_a()","Ruby rails::application#to_app()","Ruby actiondispatch::response#to_ary()","Rails array#to_ary()","Rails matrix::eigenvaluedecomposition#to_ary()","Rails matrix::lupdecomposition#to_ary()","Rails rake::filelist#to_ary()","Rails webrick::httputils::formdata#to_ary()","Rails rss::rootelementmixin#to_atom()","Rails integer#to_bn()","Rails openssl::bn#to_bn()","Rails openssl::pkey::ec::point#to_bn()","Ruby actionview::helpers::instancetag#to_boolean_select_tag()","Rails nilclass#to_c()","Rails numeric#to_c()","Rails string#to_c()","Ruby actionview::helpers::instancetag#to_check_box_tag()","Rails rss::utils#to_class_name()","Ruby actiondispatch::reloader::to_cleanup()","Ruby actionview::helpers::instancetag#to_content_tag()","Rails array#to_csv()","Rails csv::row#to_csv()","Rails csv::table#to_csv()","Ruby bigdecimal#to_d()","Rails bigdecimal#to_d()","Rails float#to_d()","Rails integer#to_d()","Rails rational#to_d()","Rails string#to_d()","Ruby date#to_date()","Ruby datetime#to_date()","Ruby mysql::time#to_date()","Ruby string#to_date()","Ruby time#to_date()","Rails date#to_date()","Rails datetime#to_date()","Rails time#to_date()","Rails xmlrpc::datetime#to_date()","Ruby actionview::helpers::datehelperinstancetag#to_date_select_tag()","Ruby activesupport::timewithzone#to_datetime()","Ruby date#to_datetime()","Ruby datetime#to_datetime()","Ruby string#to_datetime()","Ruby time#to_datetime()","Rails date#to_datetime()","Rails datetime#to_datetime()","Rails time#to_datetime()","Ruby actionview::helpers::datehelperinstancetag#to_datetime_select_tag()","Ruby array#to_default_s()","Ruby date#to_default_s()","Ruby datetime#to_default_s()","Ruby range#to_default_s()","Ruby time#to_default_s()","Rails openssl::asn1::asn1data#to_der()","Rails openssl::asn1::constructive#to_der()","Rails openssl::asn1::primitive#to_der()","Rails openssl::netscape::spki#to_der()","Rails openssl::ocsp::request#to_der()","Rails openssl::ocsp::response#to_der()","Rails openssl::pkcs12#to_der()","Rails openssl::pkcs7#to_der()","Rails openssl::pkey::dh#to_der()","Rails openssl::pkey::dsa#to_der()","Rails openssl::pkey::ec#to_der()","Rails openssl::pkey::ec::group#to_der()","Rails openssl::pkey::rsa#to_der()","Rails openssl::ssl::session#to_der()","Rails openssl::x509::attribute#to_der()","Rails openssl::x509::crl#to_der()","Rails openssl::x509::certificate#to_der()","Rails openssl::x509::extension#to_der()","Rails openssl::x509::name#to_der()","Rails openssl::x509::request#to_der()","Rails bigdecimal#to_digits()","Rails rss::element::to_element_methods()","Rails object#to_enum()","Ruby activesupport::timewithzone#to_f()","Ruby datetime#to_f()","Rails bigdecimal#to_f()","Rails bignum#to_f()","Rails complex#to_f()","Rails fixnum#to_f()","Rails float#to_f()","Rails nilclass#to_f()","Rails rational#to_f()","Rails string#to_f()","Rails time#to_f()","Rails rss::maker::atom::entry::items#to_feed()","Rails rss::maker::atom::entry::items::item#to_feed()","Rails rss::maker::atom::feed::channel#to_feed()","Rails rss::maker::atom::feed::channel::cloud#to_feed()","Rails rss::maker::atom::feed::channel::skipdays#to_feed()","Rails rss::maker::atom::feed::channel::skiphours#to_feed()","Rails rss::maker::atom::feed::image#to_feed()","Rails rss::maker::atom::feed::items#to_feed()","Rails rss::maker::atom::feed::items::item#to_feed()","Rails rss::maker::atom::feed::items::item::content#to_feed()","Rails rss::maker::atom::feed::items::item::enclosure#to_feed()","Rails rss::maker::atom::feed::items::item::guid#to_feed()","Rails rss::maker::atom::feed::items::item::source#to_feed()","Rails rss::maker::atom::feed::items::item::source::icon#to_feed()","Rails rss::maker::atomcategory#to_feed()","Rails rss::maker::atomgenerator#to_feed()","Rails rss::maker::atomlink#to_feed()","Rails rss::maker::atomlogo#to_feed()","Rails rss::maker::ituneschannelmodel::itunescategoriesbase::itunescategorybase#to_feed()","Rails rss::maker::ituneschannelmodel::itunesimagebase#to_feed()","Rails rss::maker::ituneschannelmodel::itunesownerbase#to_feed()","Rails rss::maker::itunesitemmodel::itunesdurationbase#to_feed()","Rails rss::maker::imagefaviconmodel::imagefaviconbase#to_feed()","Rails rss::maker::imageitemmodel::imageitembase#to_feed()","Rails rss::maker::rss09::channel#to_feed()","Rails rss::maker::rss09::channel::authors#to_feed()","Rails rss::maker::rss09::channel::authors::author#to_feed()","Rails rss::maker::rss09::channel::categories#to_feed()","Rails rss::maker::rss09::channel::cloud#to_feed()","Rails rss::maker::rss09::channel::contributors#to_feed()","Rails rss::maker::rss09::channel::copyright#to_feed()","Rails rss::maker::rss09::channel::description#to_feed()","Rails rss::maker::rss09::channel::generator#to_feed()","Rails rss::maker::rss09::channel::links#to_feed()","Rails rss::maker::rss09::channel::links::link#to_feed()","Rails rss::maker::rss09::channel::skipdays#to_feed()","Rails rss::maker::rss09::channel::skipdays::day#to_feed()","Rails rss::maker::rss09::channel::skiphours#to_feed()","Rails rss::maker::rss09::channel::skiphours::hour#to_feed()","Rails rss::maker::rss09::channel::title#to_feed()","Rails rss::maker::rss09::image#to_feed()","Rails rss::maker::rss09::items#to_feed()","Rails rss::maker::rss09::items::item#to_feed()","Rails rss::maker::rss09::items::item::authors#to_feed()","Rails rss::maker::rss09::items::item::categories#to_feed()","Rails rss::maker::rss09::items::item::content#to_feed()","Rails rss::maker::rss09::items::item::contributors#to_feed()","Rails rss::maker::rss09::items::item::description#to_feed()","Rails rss::maker::rss09::items::item::enclosure#to_feed()","Rails rss::maker::rss09::items::item::guid#to_feed()","Rails rss::maker::rss09::items::item::links#to_feed()","Rails rss::maker::rss09::items::item::links::link#to_feed()","Rails rss::maker::rss09::items::item::rights#to_feed()","Rails rss::maker::rss09::items::item::source#to_feed()","Rails rss::maker::rss09::items::item::source::authors#to_feed()","Rails rss::maker::rss09::items::item::source::categories#to_feed()","Rails rss::maker::rss09::items::item::source::contributors#to_feed()","Rails rss::maker::rss09::items::item::source::generator#to_feed()","Rails rss::maker::rss09::items::item::source::icon#to_feed()","Rails rss::maker::rss09::items::item::source::links#to_feed()","Rails rss::maker::rss09::items::item::source::logo#to_feed()","Rails rss::maker::rss09::items::item::source::rights#to_feed()","Rails rss::maker::rss09::items::item::source::subtitle#to_feed()","Rails rss::maker::rss09::items::item::source::title#to_feed()","Rails rss::maker::rss09::items::item::title#to_feed()","Rails rss::maker::rss09::textinput#to_feed()","Rails rss::maker::rss10::channel#to_feed()","Rails rss::maker::rss10::channel::authors#to_feed()","Rails rss::maker::rss10::channel::authors::author#to_feed()","Rails rss::maker::rss10::channel::categories#to_feed()","Rails rss::maker::rss10::channel::cloud#to_feed()","Rails rss::maker::rss10::channel::contributors#to_feed()","Rails rss::maker::rss10::channel::copyright#to_feed()","Rails rss::maker::rss10::channel::description#to_feed()","Rails rss::maker::rss10::channel::generator#to_feed()","Rails rss::maker::rss10::channel::links#to_feed()","Rails rss::maker::rss10::channel::links::link#to_feed()","Rails rss::maker::rss10::channel::skipdays#to_feed()","Rails rss::maker::rss10::channel::skiphours#to_feed()","Rails rss::maker::rss10::channel::title#to_feed()","Rails rss::maker::rss10::image#to_feed()","Rails rss::maker::rss10::items#to_feed()","Rails rss::maker::rss10::items::item#to_feed()","Rails rss::maker::rss10::items::item::authors#to_feed()","Rails rss::maker::rss10::items::item::categories#to_feed()","Rails rss::maker::rss10::items::item::content#to_feed()","Rails rss::maker::rss10::items::item::contributors#to_feed()","Rails rss::maker::rss10::items::item::description#to_feed()","Rails rss::maker::rss10::items::item::enclosure#to_feed()","Rails rss::maker::rss10::items::item::guid#to_feed()","Rails rss::maker::rss10::items::item::links#to_feed()","Rails rss::maker::rss10::items::item::rights#to_feed()","Rails rss::maker::rss10::items::item::source#to_feed()","Rails rss::maker::rss10::items::item::source::authors#to_feed()","Rails rss::maker::rss10::items::item::source::categories#to_feed()","Rails rss::maker::rss10::items::item::source::contributors#to_feed()","Rails rss::maker::rss10::items::item::source::generator#to_feed()","Rails rss::maker::rss10::items::item::source::icon#to_feed()","Rails rss::maker::rss10::items::item::source::links#to_feed()","Rails rss::maker::rss10::items::item::source::logo#to_feed()","Rails rss::maker::rss10::items::item::source::rights#to_feed()","Rails rss::maker::rss10::items::item::source::subtitle#to_feed()","Rails rss::maker::rss10::items::item::source::title#to_feed()","Rails rss::maker::rss10::items::item::title#to_feed()","Rails rss::maker::rss10::textinput#to_feed()","Rails rss::maker::rss20::channel::categories#to_feed()","Rails rss::maker::rss20::channel::categories::category#to_feed()","Rails rss::maker::rss20::channel::cloud#to_feed()","Rails rss::maker::rss20::channel::generator#to_feed()","Rails rss::maker::rss20::items::item::authors#to_feed()","Rails rss::maker::rss20::items::item::authors::author#to_feed()","Rails rss::maker::rss20::items::item::categories#to_feed()","Rails rss::maker::rss20::items::item::categories::category#to_feed()","Rails rss::maker::rss20::items::item::enclosure#to_feed()","Rails rss::maker::rss20::items::item::guid#to_feed()","Rails rss::maker::rss20::items::item::source#to_feed()","Rails rss::maker::rss20::items::item::source::links#to_feed()","Rails rss::maker::rss20::items::item::source::links::link#to_feed()","Rails rss::maker::rssbase#to_feed()","Rails rss::maker::trackbackmodel::trackbackaboutsbase::trackbackaboutbase#to_feed()","Rails rss::maker::xmlstylesheets::xmlstylesheet#to_feed()","Rails rss::rootelementmixin#to_feed()","Rails rss::maker::ituneschannelmodel::itunescategoriesbase::itunescategorybase#to_feed_for_categories()","Ruby actioncontroller::responder#to_format()","Ruby activesupport::timewithzone#to_formatted_s()","Ruby array#to_formatted_s()","Ruby bigdecimal#to_formatted_s()","Ruby date#to_formatted_s()","Ruby datetime#to_formatted_s()","Ruby range#to_formatted_s()","Ruby time#to_formatted_s()","Rails openssl::x509::extension#to_h()","Rails xmlrpc::faultexception#to_h()","Ruby actiondispatch::flash::flashhash#to_hash()","Ruby activemodel::errors#to_hash()","Ruby activerecord::result#to_hash()","Ruby activesupport::hashwithindifferentaccess#to_hash()","Ruby activesupport::hashwithindifferentaccess#to_hash()","Ruby activesupport::orderedhash#to_hash()","Rails csv::row#to_hash()","Rails dbm#to_hash()","Rails env::to_hash()","Rails gdbm#to_hash()","Rails hash#to_hash()","Rails net::httpheader#to_hash()","Rails rake::taskarguments#to_hash()","Rails sdbm#to_hash()","Rails yaml::dbm#to_hash()","Ruby actioncontroller::responder#to_html()","Ruby rails::info::to_html()","Rails rdoc::markup::tohtml#to_html()","Rails rdoc::text#to_html()","Ruby activesupport::timewithzone#to_i()","Ruby datetime#to_i()","Rails argf#to_i()","Rails bigdecimal#to_i()","Rails complex#to_i()","Rails dl::cfunc#to_i()","Rails dl::cptr#to_i()","Rails dl::cptr#to_i()","Rails dl::function#to_i()","Rails dl::handle#to_i()","Rails fiddle::closure#to_i()","Rails float#to_i()","Rails io#to_i()","Rails ipaddr#to_i()","Rails integer#to_i()","Rails nilclass#to_i()","Rails openssl::bn#to_i()","Rails process::status#to_i()","Rails rake::pseudostatus#to_i()","Rails rational#to_i()","Rails string#to_i()","Rails time#to_i()","Rails webrick::httpstatus::status#to_i()","Rails drb::to_id()","Rails drb::drbidconv#to_id()","Rails drb::drbserver#to_id()","Rails drb::timeridconv#to_id()","Ruby actionview::helpers::instancetag#to_input_field_tag()","Rails bigdecimal#to_int()","Rails dl::cptr#to_int()","Rails dl::cptr#to_int()","Rails float#to_int()","Rails integer#to_int()","Rails numeric#to_int()","Rails openssl::bn#to_int()","Rails argf#to_io()","Rails io#to_io()","Rails openssl::ssl::sslserver#to_io()","Rails zlib::gzipfile#to_io()","Ruby actioncontroller::responder#to_js()","Ruby activeresource::base#to_json()","Ruby object#to_json()","Rails complex#to_json()","Rails date#to_json()","Rails datetime#to_json()","Rails exception#to_json()","Rails psych::to_json()","Rails range#to_json()","Rails rational#to_json()","Rails regexp#to_json()","Rails struct#to_json()","Rails symbol#to_json()","Rails time#to_json()","Ruby activemodel::conversion#to_key()","Ruby activerecord::attributemethods::primarykey#to_key()","Ruby actionview::helpers::instancetag#to_label_tag()","Rails uri::mailto#to_mailtext()","Ruby actionview::helpers::formbuilder#to_model()","Ruby activemodel::conversion#to_model()","Rails resolv::ipv4#to_name()","Rails resolv::ipv6#to_name()","Ruby actionview::helpers::instancetag#to_number_field_tag()","Rails drb::to_obj()","Rails drb::drbidconv#to_obj()","Rails drb::drbserver#to_obj()","Rails drb::gwidconv#to_obj()","Rails drb::timeridconv#to_obj()","Ruby hash#to_options()","Ruby activesupport::hashwithindifferentaccess#to_options!()","Ruby activesupport::hashwithindifferentaccess#to_options!()","Ruby hash#to_options!()","Rails win32::sspi::identity#to_p()","Rails win32::sspi::securitybuffer#to_p()","Rails win32::sspi::securityhandle#to_p()","Rails win32::sspi::timestamp#to_p()","Ruby activemodel::conversion#to_param()","Ruby activerecord::integration#to_param()","Ruby activesupport::safebuffer#to_param()","Ruby array#to_param()","Ruby falseclass#to_param()","Ruby hash#to_param()","Ruby nilclass#to_param()","Ruby object#to_param()","Ruby trueclass#to_param()","Ruby actionview::helpers::formbuilder#to_partial_path()","Ruby activemodel::conversion#to_partial_path()","Ruby actiondispatch::response#to_path()","Ruby actionview::filesystemresolver#to_path()","Rails dir#to_path()","Rails file#to_path()","Rails pathname#to_path()","Rails openssl::netscape::spki#to_pem()","Rails openssl::pkcs7#to_pem()","Rails openssl::pkey::dh#to_pem()","Rails openssl::pkey::dsa#to_pem()","Rails openssl::pkey::ec#to_pem()","Rails openssl::pkey::ec::group#to_pem()","Rails openssl::pkey::rsa#to_pem()","Rails openssl::ssl::session#to_pem()","Rails openssl::x509::crl#to_pem()","Rails openssl::x509::certificate#to_pem()","Rails openssl::x509::request#to_pem()","Ruby actiondispatch::reloader::to_prepare()","Ruby rails::railtie::configuration#to_prepare()","Ruby rails::railtie::configuration#to_prepare_blocks()","Rails method#to_proc()","Rails proc#to_proc()","Rails symbol#to_proc()","Rails dl::cptr::to_ptr()","Rails dl::cptr::to_ptr()","Ruby array#to_query()","Ruby hash#to_query()","Ruby object#to_query()","Rails bigdecimal#to_r()","Rails complex#to_r()","Rails float#to_r()","Rails integer#to_r()","Rails nilclass#to_r()","Rails rational#to_r()","Rails string#to_r()","Rails time#to_r()","Ruby actionview::helpers::instancetag#to_radio_button_tag()","Rails ipaddr#to_range()","Rails uri::mailto#to_rfc822text()","Rails rss::rootelementmixin#to_rss()","Rails gem::specification#to_ruby()","Rails psych::nodes::node#to_ruby()","Rails gem::specification#to_ruby_for_cache()","Ruby actiondispatch::remoteip::getip#to_s()","Ruby actionview::filesystemresolver#to_s()","Ruby activeresource::request#to_s()","Ruby activeresource::sslerror#to_s()","Ruby activeresource::timeouterror#to_s()","Ruby activesupport::safebuffer#to_s()","Ruby activesupport::timewithzone#to_s()","Ruby activesupport::timezone#to_s()","Ruby array#to_s()","Ruby bigdecimal#to_s()","Ruby date#to_s()","Ruby datetime#to_s()","Ruby mime::type#to_s()","Ruby plugin#to_s()","Ruby rails::info::to_s()","Ruby range#to_s()","Ruby sourceannotationextractor::annotation#to_s()","Ruby time#to_s()","Rails argf#to_s()","Rails addrinfo#to_s()","Rails array#to_s()","Rails benchmark::tms#to_s()","Rails bigdecimal#to_s()","Rails bignum#to_s()","Rails cgi::cookie#to_s()","Rails csv::row#to_s()","Rails csv::table#to_s()","Rails complex#to_s()","Rails dl::cfunc#to_s()","Rails dl::cptr#to_s()","Rails dl::cptr#to_s()","Rails dl::cstructentity#to_s()","Rails date#to_s()","Rails datetime#to_s()","Rails digest::instance#to_s()","Rails env::to_s()","Rails encoding#to_s()","Rails exception#to_s()","Rails falseclass#to_s()","Rails fixnum#to_s()","Rails float#to_s()","Rails foo#to_s()","Rails gem::platform#to_s()","Rails hash#to_s()","Rails ipaddr#to_s()","Rails irb::context#to_s()","Rails matchdata#to_s()","Rails matrix#to_s()","Rails method#to_s()","Rails module#to_s()","Rails nameerror#to_s()","Rails nilclass#to_s()","Rails object#to_s()","Rails openssl::bn#to_s()","Rails openssl::config#to_s()","Rails openssl::hmac#to_s()","Rails openssl::netscape::spki#to_s()","Rails openssl::pkcs7#to_s()","Rails openssl::pkey::dh#to_s()","Rails openssl::pkey::dsa#to_s()","Rails openssl::pkey::rsa#to_s()","Rails openssl::x509::crl#to_s()","Rails openssl::x509::certificate#to_s()","Rails openssl::x509::extension#to_s()","Rails openssl::x509::name#to_s()","Rails openssl::x509::request#to_s()","Rails openstruct#to_s()","Rails optionparser#to_s()","Rails optionparser::parseerror#to_s()","Rails pathname#to_s()","Rails proc#to_s()","Rails process::status#to_s()","Rails rexml::attribute#to_s()","Rails rexml::cdata#to_s()","Rails rexml::dtd::entitydecl#to_s()","Rails rexml::dtd::notationdecl#to_s()","Rails rexml::declaration#to_s()","Rails rexml::entity#to_s()","Rails rexml::externalentity#to_s()","Rails rexml::light::node#to_s()","Rails rexml::node#to_s()","Rails rexml::notationdecl#to_s()","Rails rexml::output#to_s()","Rails rexml::parseexception#to_s()","Rails rexml::text#to_s()","Rails rexml::validation::event#to_s()","Rails rexml::validation::ref#to_s()","Rails rexml::validation::state#to_s()","Rails rss::element#to_s()","Rails rss::xml::element#to_s()","Rails rss::xmlstylesheet#to_s()","Rails rake::earlytime#to_s()","Rails rake::invocationchain#to_s()","Rails rake::invocationchain::emptyinvocationchain#to_s()","Rails rake::task#to_s()","Rails rake::taskarguments#to_s()","Rails range#to_s()","Rails rational#to_s()","Rails regexp#to_s()","Rails resolv::dns::name#to_s()","Rails shell::filter#to_s()","Rails socket::option#to_s()","Rails string#to_s()","Rails struct#to_s()","Rails symbol#to_s()","Rails time#to_s()","Rails trueclass#to_s()","Rails uri::ftp#to_s()","Rails uri::generic#to_s()","Rails uri::mailto#to_s()","Rails unboundmethod#to_s()","Rails vector#to_s()","Rails webrick::cookie#to_s()","Rails webrick::httputils::formdata#to_s()","Rails webrick::httpversion#to_s()","Rails win32ole_method#to_s()","Rails win32ole_param#to_s()","Rails win32ole_type#to_s()","Rails win32ole_typelib#to_s()","Rails win32ole_variable#to_s()","Rails win32::sspi::sspiresult#to_s()","Ruby array#to_sentence()","Rails enumerable#to_set()","Rails addrinfo#to_sockaddr()","Rails gem::dependency#to_spec()","Rails gem::dependency#to_specs()","Ruby activerecord::connectionadapters::databasestatements#to_sql()","Ruby activerecord::connectionadapters::tabledefinition#to_sql()","Ruby activerecord::relation#to_sql()","Ruby mime::type#to_str()","Rails dl::cptr#to_str()","Rails dl::cptr#to_str()","Rails string#to_str()","Rails ipaddr#to_string()","Rails rexml::attribute#to_string()","Ruby mime::type#to_sym()","Rails string#to_sym()","Rails symbol#to_sym()","Ruby activesupport::xmlmini#to_tag()","Rails openssl::netscape::spki#to_text()","Rails openssl::pkey::dh#to_text()","Rails openssl::pkey::dsa#to_text()","Rails openssl::pkey::ec#to_text()","Rails openssl::pkey::ec::group#to_text()","Rails openssl::pkey::rsa#to_text()","Rails openssl::ssl::session#to_text()","Rails openssl::x509::crl#to_text()","Rails openssl::x509::certificate#to_text()","Rails openssl::x509::request#to_text()","Ruby actionview::helpers::instancetag#to_text_area_tag()","Ruby activesupport::timewithzone#to_time()","Ruby date#to_time()","Ruby datetime#to_time()","Ruby string#to_time()","Ruby time#to_time()","Rails date#to_time()","Rails datetime#to_time()","Rails time#to_time()","Rails xmlrpc::datetime#to_time()","Ruby date#to_time_in_current_zone()","Ruby actionview::helpers::datehelperinstancetag#to_time_select_tag()","Rails dl::cptr#to_value()","Rails dl::cptr#to_value()","Rails argf#to_write_io()","Ruby activemodel::errors#to_xml()","Ruby activemodel::serializers::xml#to_xml()","Ruby activerecord::serialization#to_xml()","Ruby activeresource::base#to_xml()","Ruby array#to_xml()","Ruby hash#to_xml()","Rails rss::rootelementmixin#to_xml()","Ruby activesupport::orderedhash#to_yaml()","Ruby activesupport::safebuffer#to_yaml()","Ruby activesupport::timewithzone#to_yaml()","Ruby bigdecimal#to_yaml()","Rails object#to_yaml()","Rails psych::nodes::node#to_yaml()","Ruby activesupport::orderedhash#to_yaml_type()","Ruby activesupport::timezone#today()","Rails date::today()","Ruby activesupport::timewithzone#today?()","Ruby date#today?()","Ruby time#today?()","Rails kconv::toeuc()","Rails string#toeuc()","Ruby activerecord::persistence#toggle()","Ruby activerecord::persistence#toggle!()","Rails kconv::tojis()","Rails string#tojis()","Rails rubylex#token()","Rails win32::sspi::securitybuffer#token()","Ruby actioncontroller::httpauthentication::token#token_and_options()","Rails rdoc::parser::rubytools#token_listener()","Rails rdoc::markup::parser#token_pos()","Rails rdoc::tokenstream#token_stream()","Ruby html::sanitizer#tokenize()","Ruby html::whitelistsanitizer#tokenize()","Rails psych::scalarscanner#tokenize()","Rails rdoc::markup::parser#tokenize()","Rails rdoc::markup::parser::tokenize()","Rails ripper::tokenize()","Rails rdoc::tokenstream#tokens_to_s()","Rails kconv::tolocale()","Rails string#tolocale()","Ruby date::tomorrow()","Ruby date#tomorrow()","Ruby time#tomorrow()","Rails irb::frame#top()","Rails irb::frame::top()","Rails net::popmail#top()","Rails optionparser#top()","Rails optionparser::top()","Rails rdoc::context#top_level()","Rails rdoc::require#top_level()","Rails rake::application#top_level()","Rails shell::commandprocessor#top_level_test()","Rails irb::locale#toplevel_load()","Rails kconv::tosjis()","Rails string#tosjis()","Rails zlib::zstream#total_in()","Rails zlib::zstream#total_out()","Rails gc::profiler::total_time()","Ruby activerecord::persistence#touch()","Rails fileutils::touch()","Rails object#touch()","Rails kconv::toutf16()","Rails string#toutf16()","Rails kconv::toutf32()","Rails string#toutf32()","Rails kconv::toutf8()","Rails string#toutf8()","Rails matrix#tr()","Rails string#tr()","Rails string#tr!()","Rails string#tr_s()","Rails string#tr_s!()","Rails matrix#trace()","Rails net::http#trace()","Rails net::http#trace()","Rails debugger__#trace?()","Rails debugger__#trace_func()","Rails irb::frame#trace_func()","Rails tracer::trace_func()","Rails kernel#trace_var()","Rails shell::commandprocessor#transact()","Ruby activemodel::observerarray#transaction()","Ruby activerecord::connectionadapters::databasestatements#transaction()","Ruby activerecord::transactions#transaction()","Ruby activerecord::transactions::classmethods#transaction()","Rails pstore#transaction()","Ruby activerecord::connectionadapters::abstractadapter#transaction_joinable=()","Rails fiber#transfer()","Rails psych::nodes::node#transform()","Ruby abstractcontroller::translation#translate()","Ruby actionview::helpers::translationhelper#translate()","Rails rexml::functions::translate()","Ruby activerecord::connectionadapters::abstractadapter#translate_exception()","Ruby activerecord::connectionadapters::abstractmysqladapter#translate_exception()","Ruby activerecord::connectionadapters::postgresqladapter#translate_exception()","Ruby activerecord::connectionadapters::sqliteadapter#translate_exception()","Ruby activesupport::inflector#transliterate()","Rails iconv#transliterate=()","Rails iconv#transliterate?()","Rails array#transpose()","Rails matrix#transpose()","Rails kernel#trap()","Rails signal::trap()","Rails gem::specification#traverse()","Rails openssl::asn1::traverse()","Rails psych::visitors::yamltree#tree()","Ruby activesupport::filewatcher#trigger()","Ruby activesupport::filewatcher::backend#trigger()","Rails iconv#trivial?()","Rails rexml::functions::true()","Ruby actionview::helpers::texthelper#truncate()","Ruby string#truncate()","Rails bigdecimal#truncate()","Rails file::truncate()","Rails file#truncate()","Rails float#truncate()","Rails integer#truncate()","Rails numeric#truncate()","Rails pathname#truncate()","Rails rake::application#truncate()","Rails rational#truncate()","Rails stringio#truncate()","Rails rake::application#truncate_output?()","Rails delegator#trust()","Rails object#trust()","Rails openssl::x509::store#trust=()","Rails gem::security::policy::trusted_cert_path()","Ruby nilclass#try()","Ruby object#try()","Rails gem::try_activate()","Rails object#try_const()","Rails array::try_convert()","Rails hash::try_convert()","Rails io::try_convert()","Rails regexp::try_convert()","Rails string::try_convert()","Rails mutex#try_lock()","Rails monitormixin#try_mon_enter()","Ruby activerecord::testfixtures::classmethods#try_to_load_dependency()","Rails object#try_type()","Rails tsort#tsort()","Rails tsort#tsort_each()","Ruby rails::initializable::collection#tsort_each_child()","Rails gem::dependencylist#tsort_each_child()","Rails tsort#tsort_each_child()","Rails gem::dependencylist#tsort_each_node()","Rails tsort#tsort_each_node()","Ruby activerecord::connectionadapters::postgresqladapter::tabledefinition#tsvector()","Rails rdoc::markup::formatter#tt?()","Rails rdoc::markup::tottonly#tt_sections()","Rails gem::mockgemui::tty#tty?()","Rails gem::streamui#tty?()","Rails io#tty?()","Rails stringio#tty?()","Rails rake::application#tty_output=()","Rails rake::application#tty_output?()","Rails date#tuesday?()","Rails time#tuesday?()","Rails time#tv_nsec()","Ruby activesupport::timewithzone#tv_sec()","Rails time#tv_sec()","Rails time#tv_usec()","Rails gem::dependency#type()","Rails openssl::pkcs7#type()","Rails rdoc::classmodule#type()","Rails rdoc::methodattr#type()","Rails socket::ancillarydata#type()","Rails win32::registry::type2name()","Rails openssl::pkcs7#type=()","Ruby activerecord::connectionadapters::mysqladapter#type_cast()","Ruby activerecord::connectionadapters::postgresqladapter#type_cast()","Ruby activerecord::connectionadapters::quoting#type_cast()","Ruby activerecord::attributemethods::serialization#type_cast_attribute_for_write()","Rails net::httpheader#type_params()","Ruby activerecord::connectionadapters::abstractmysqladapter#type_to_sql()","Ruby activerecord::connectionadapters::postgresqladapter#type_to_sql()","Rails dl::importer#typealias()","Rails uri::ftp#typecode=()","Rails win32ole_type#typekind()","Rails win32ole_type::typelibs()","Rails win32ole_typelib::typelibs()","Rails dl::stack#types()","Rails erb::util::u()","Rails matrix::lupdecomposition#u()","Ruby activesupport::multibyte::unicode#u_unpack()","Rails addrinfo::udp()","Rails socket::udp_server_loop()","Rails socket::udp_server_loop_on()","Rails socket::udp_server_recv()","Rails socket::udp_server_sockets()","Rails gem::ui()","Rails gem::defaultuserinteraction::ui()","Rails gem::defaultuserinteraction#ui()","Rails gem::defaultuserinteraction#ui=()","Rails gem::defaultuserinteraction::ui=()","Rails file::stat#uid()","Rails process::uid()","Rails process::uid=()","Rails net::imap#uid_copy()","Rails net::imap#uid_fetch()","Rails net::imap#uid_search()","Rails net::imap#uid_sort()","Rails net::imap#uid_store()","Rails net::imap#uid_thread()","Rails net::popmail#uidl()","Rails file::umask()","Rails webrick::httpserver#umount()","Rails win32ole_event#unadvise()","Rails shell::unalias_command()","Rails shell::commandprocessor::unalias_command()","Rails dl::function#unbind()","Rails method#unbind()","Rails dl::function#unbind_at_call()","Rails dl::tempfunction#unbind_at_call()","Ruby activerecord::connectionadapters::querycache#uncached()","Ruby activerecord::querycache::classmethods#uncached()","Rails csv#unconverted_fields?()","Ruby activesupport::inflector::inflections#uncountable()","Ruby activemodel::naming::uncountable?()","Ruby rails::generators::namedbase#uncountable?()","Rails shell::undef_system_command()","Rails shell::commandprocessor::undef_system_command()","Ruby activemodel::attributemethods::classmethods#undefine_attribute_methods()","Ruby activerecord::attributemethods::classmethods#undefine_attribute_methods()","Ruby activerecord::attributemethods::read::classmethods#undefine_attribute_methods()","Rails objectspace::undefine_finalizer()","Ruby activesupport::inflector#underscore()","Ruby string#underscore()","Rails rdoc::stats#undoc_params()","Ruby object#unescape()","Rails cgi::unescape()","Rails gem::remotefetcher#unescape()","Rails uri::escape#unescape()","Rails uri::parser#unescape()","Rails webrick::httputils#unescape()","Rails cgi::unescapeelement()","Rails cgi::unescapehtml()","Ruby activerecord::connectionadapters::postgresqladapter#unescape_bytea()","Rails cgi::unescape_element()","Rails webrick::httputils#unescape_form()","Rails cgi::unescape_html()","Ruby actiondispatch::filehandler#unescape_path()","Rails rdoc::markup::parser#unget()","Rails rdoc::parser::rubytools#unget_tk()","Rails io#ungetbyte()","Rails stringio#ungetbyte()","Rails zlib::gzipreader#ungetbyte()","Rails io#ungetc()","Rails openssl::buffering#ungetc()","Rails rubylex#ungetc()","Rails stringio#ungetc()","Rails zlib::gzipreader#ungetc()","Rails curses::ungetch()","Rails curses::ungetmouse()","Ruby plugin#uninstall()","Rails gem::uninstaller#uninstall()","Rails gem::docmanager#uninstall_doc()","Rails gem::uninstaller#uninstall_gem()","Rails gem::commands::setupcommand#uninstall_old_gemcutter()","Rails dl::importer#union()","Rails regexp::union()","Rails set#union()","Ruby activerecord::querymethods#uniq()","Rails array#uniq()","Rails array#uniq!()","Ruby array#uniq_by()","Ruby array#uniq_by!()","Rails rdoc::toplevel::unique_classes()","Rails rdoc::toplevel::unique_classes_and_modules()","Rails net::popmail#unique_id()","Rails rdoc::toplevel::unique_modules()","Rails matrix::unit()","Rails matrix#unitary?()","Rails addrinfo::unix()","Rails socket::unix()","Rails addrinfo#unix?()","Rails rake::application#unix?()","Rails addrinfo#unix_path()","Rails socket::ancillarydata::unix_rights()","Rails socket::ancillarydata#unix_rights()","Rails socket::unix_server_loop()","Rails socket::unix_server_socket()","Rails logger#unknown()","Rails dir::unlink()","Rails file::unlink()","Rails pathname#unlink()","Rails shell::commandprocessor#unlink()","Rails tempfile#unlink()","Rails mutex#unlock()","Rails net::http#unlock()","Rails net::http#unlock()","Rails rdoc::markup::attributemanager#unmask_protected_sequences()","Ruby activesupport::memoizable::instancemethods#unmemoize_all()","Rails webrick::httpserver#unmount()","Rails rexml::parsers::baseparser#unnormalize()","Rails rexml::text::unnormalize()","Rails rexml::entity#unnormalized()","Rails dl::packer#unpack()","Rails dl::stack#unpack()","Rails gem::installer#unpack()","Rails socket::option#unpack()","Rails string#unpack()","Rails socket::unpack_sockaddr_in()","Rails socket::unpack_sockaddr_un()","Rails win32::registry::api#unpackdw()","Rails win32::registry::api#unpackqw()","Rails drb::extservmanager#unregist()","Ruby mime::type::unregister()","Rails gem::commandmanager#unregister_command()","Rails gem::unresolved_deps()","Rails stringscanner#unscan()","Ruby activerecord::attributemethods::serialization::attribute#unserialize()","Ruby activerecord::attributemethods::serialization::attribute#unserialized_value()","Rails array#unshift()","Rails rexml::parent#unshift()","Rails rexml::parsers::baseparser#unshift()","Rails rexml::parsers::pullparser#unshift()","Rails dl::valueutil#unsigned_value()","Ruby activesupport::notifications::unsubscribe()","Ruby activesupport::notifications::fanout#unsubscribe()","Rails net::imap#unsubscribe()","Rails delegator#untaint()","Rails object#untaint()","Rails pathname#untaint()","Ruby activesupport::duration#until()","Ruby numeric#until()","Rails kernel#untrace_var()","Rails delegator#untrust()","Rails object#untrust()","Rails object#untrusted?()","Rails zlib::gzipreader#unused()","Ruby activerecord::migration#up()","Ruby activesupport::multibyte::chars#upcase()","Rails string#upcase()","Rails symbol#upcase()","Rails string#upcase!()","Ruby activerecord::connectionadapters::databasestatements#update()","Ruby activerecord::relation#update()","Ruby activeresource::base#update()","Ruby activesupport::hashwithindifferentaccess#update()","Ruby activesupport::hashwithindifferentaccess#update()","Ruby postscontroller#update()","Rails cgi::session#update()","Rails cgi::session::filestore#update()","Rails cgi::session::memorystore#update()","Rails cgi::session::nullstore#update()","Rails cgi::session::pstore#update()","Rails dbm#update()","Rails digest::hmac#update()","Rails digest::instance#update()","Rails env::update()","Rails gdbm#update()","Rails gem::streamui::silentdownloadreporter#update()","Rails gem::streamui::verbosedownloadreporter#update()","Rails hash#update()","Rails httpserver::table#update()","Rails openssl::cipher#update()","Rails openssl::digest#update()","Rails openssl::hmac#update()","Rails sdbm#update()","Rails yaml::dbm#update()","Rails rdoc::classmodule#update_aliases()","Ruby activerecord::relation#update_all()","Ruby activerecord::persistence#update_attribute()","Ruby activeresource::base#update_attribute()","Ruby activerecord::persistence#update_attributes()","Ruby activeresource::base#update_attributes()","Ruby rails::generators::activemodel#update_attributes()","Ruby activerecord::persistence#update_attributes!()","Rails gem::package::tarheader#update_checksum()","Ruby activerecord::persistence#update_column()","Ruby activerecord::countercache#update_counters()","Ruby activerecord::locking::optimistic::classmethods#update_counters()","Rails gem::commands::updatecommand#update_gem()","Rails gem::commands::updatecommand#update_gems()","Rails rdoc::classmodule#update_includes()","Rails gem::indexer#update_index()","Rails rdoc::rdoc#update_output_dir()","Rails gem::docmanager::update_ri_cache()","Rails gem::commands::updatecommand#update_rubygems()","Rails gem::indexer#update_specs_index()","Ruby activerecord::connectionadapters::databasestatements#update_sql()","Ruby activerecord::connectionadapters::postgresqladapter#update_sql()","Ruby actionview::helpers::atomfeedhelper::atomfeedbuilder#updated()","Rails gem::streamui::silentprogressreporter#updated()","Rails gem::streamui::simpleprogressreporter#updated()","Rails gem::streamui::verboseprogressreporter#updated()","Rails rss::maker::channelbase#updated()","Rails rss::maker::itemsbase::itembase#updated()","Rails rss::maker::itemsbase::itembase::sourcebase#updated()","Rails rss::maker::channelbase#updated=()","Rails rss::maker::itemsbase::itembase#updated=()","Rails rss::maker::itemsbase::itembase::sourcebase#updated=()","Ruby activesupport::fileupdatechecker#updated?()","Rails rdoc::context#upgrade_to_class()","Rails compositepublisher#upload()","Rails rake::compositepublisher#upload()","Rails rake::sshdirpublisher#upload()","Rails rake::sshfilepublisher#upload()","Rails rake::sshfreshdirpublisher#upload()","Rails sshdirpublisher#upload()","Rails sshfilepublisher#upload()","Rails sshfreshdirpublisher#upload()","Rails rake::ftpuploader#upload_files()","Rails win32::sspi::securityhandle#upper()","Rails prime::pseudoprimegenerator#upper_bound()","Rails prime::pseudoprimegenerator#upper_bound=()","Rails matrix#upper_triangular?()","Rails date#upto()","Rails integer#upto()","Rails string#upto()","Rails fileutils::uptodate?()","Rails drb::uri()","Rails gem::remotefetcher#uri_escaper()","Rails drb::drbprotocol::uri_option()","Rails drb::drbsslsocket::uri_option()","Rails drb::drbtcpsocket::uri_option()","Rails drb::drbunixsocket::uri_option()","Rails rss::baselistener::uri_registered?()","Ruby actiondispatch::http::url#url()","Rails erb::util::url_encode()","Ruby actionview::helpers::formhelper#url_field()","Ruby actionview::helpers::formtaghelper#url_field_tag()","Ruby actioncontroller::metal#url_for()","Ruby actiondispatch::http::url::url_for()","Ruby actiondispatch::routing::urlfor#url_for()","Ruby actionview::helpers::urlhelper#url_for()","Ruby actioncontroller::urlfor#url_options()","Ruby actiondispatch::routing::urlfor#url_options()","Ruby actionview::helpers::urlhelper#url_options()","Rails securerandom::urlsafe_base64()","Rails base64#urlsafe_decode64()","Rails base64#urlsafe_encode64()","Ruby activesupport::timezone::us_zones()","Rails gem::command#usage()","Ruby rails::generators::base::usage_path()","Ruby actioncontroller::metal::use()","Ruby actiondispatch::flash::flashhash#use()","Ruby actiondispatch::middlewarestack#use()","Ruby activerecord::identitymap::use()","Ruby actiondispatch::http::mimenegotiation#use_accept_header()","Ruby railsenvironment#use_checkout?()","Rails curses::use_default_colors()","Ruby railsenvironment#use_externals?()","Rails irb::context#use_loader()","Rails irb::context#use_loader=()","Rails irb::context#use_loader?()","Rails gem::use_paths()","Rails rdoc::markup::tordoc#use_prefix()","Rails irb::context#use_readline=()","Rails uri::generic::use_registry()","Ruby actioncontroller::renderers::classmethods#use_renderer()","Ruby actioncontroller::renderers::classmethods#use_renderers()","Rails net::http#use_ssl=()","Rails net::http#use_ssl=()","Rails net::http#use_ssl?()","Rails net::http#use_ssl?()","Rails net::pop3#use_ssl?()","Rails net::pop3::use_ssl?()","Rails net::pop3::use_ssl?()","Rails net::pop3::use_ssl?()","Rails net::pop3#use_ssl?()","Rails net::pop3#use_ssl?()","Rails net::pop3::use_ssl?()","Rails net::pop3#use_ssl?()","Ruby railsenvironment#use_svn?()","Rails irb::context#use_tracer=()","Rails gem::defaultuserinteraction#use_ui()","Rails gem::defaultuserinteraction::use_ui()","Ruby time::use_zone()","Ruby activesupport::timewithzone#usec()","Rails time#usec()","Ruby activeresource::base::user()","Rails uri::generic#user()","Ruby activeresource::base::user=()","Ruby activeresource::connection#user=()","Rails uri::generic#user=()","Rails xmlrpc::client#user=()","Rails gem::remotefetcher#user_agent()","Rails gem::user_dir()","Rails gem::user_home()","Ruby actioncontroller::httpauthentication::basic#user_name_and_password()","Rails uri::generic#userinfo()","Rails uri::generic#userinfo=()","Ruby activerecord::testfixtures::classmethods#uses_transaction()","Ruby activerecord::testfixtures::classmethods#uses_transaction?()","Ruby activerecord::findermethods#using_limitable_reflections?()","Ruby actiondispatch::routing::mapper::resources#using_match_shorthand?()","Ruby activesupport::timewithzone#utc()","Ruby datetime#utc()","Rails time::utc()","Rails time#utc()","Ruby activesupport::timewithzone#utc?()","Ruby datetime#utc?()","Rails time#utc?()","Ruby activesupport::timewithzone#utc_offset()","Ruby activesupport::timezone#utc_offset()","Ruby datetime#utc_offset()","Rails time#utc_offset()","Ruby time::utc_time()","Ruby activesupport::timezone#utc_to_local()","Ruby actionview::helpers::formtaghelper#utf8_enforcer_tag()","Rails file::utime()","Rails pathname#utime()","Ruby actiondispatch::request#uuid()","Rails securerandom::uuid()","Rails matrix::eigenvaluedecomposition#v()","Rails matrix::eigenvaluedecomposition#v_inv()","Ruby activemodel::validations#valid?()","Ruby activerecord::validations#valid?()","Ruby activeresource::validations#valid?()","Rails rss::element#valid?()","Ruby actiondispatch::http::mimenegotiation#valid_accept_header()","Ruby activerecord::connectionadapters::sqliteadapter#valid_alter_table_options()","Rails date::valid_civil?()","Rails date::valid_commercial?()","Ruby rails::generators::appgenerator#valid_const?()","Ruby rails::generators::pluginnewgenerator#valid_const?()","Rails date::valid_date?()","Rails string#valid_encoding?()","Rails date::valid_jd?()","Rails date::valid_ordinal?()","Ruby activerecord::scoping::named::classmethods#valid_scope_name?()","Ruby activemodel::eachvalidator#validate()","Ruby activemodel::validations::classmethods#validate()","Ruby activemodel::validations::presencevalidator#validate()","Ruby activemodel::validator#validate()","Ruby railsguides::validator#validate()","Rails gem::specification#validate()","Rails rexml::validation::validator#validate()","Rails rss::element#validate()","Ruby actioncontroller::httpauthentication::digest#validate_digest_response()","Rails rss::atom::duplicatelinkchecker#validate_duplicate_links()","Ruby activemodel::eachvalidator#validate_each()","Ruby activemodel::validations::acceptancevalidator#validate_each()","Ruby activemodel::validations::confirmationvalidator#validate_each()","Ruby activemodel::validations::exclusionvalidator#validate_each()","Ruby activemodel::validations::formatvalidator#validate_each()","Ruby activemodel::validations::inclusionvalidator#validate_each()","Ruby activemodel::validations::lengthvalidator#validate_each()","Ruby activemodel::validations::numericalityvalidator#validate_each()","Ruby activemodel::validations::withvalidator#validate_each()","Ruby activerecord::validations::associatedvalidator#validate_each()","Ruby activerecord::validations::uniquenessvalidator#validate_each()","Ruby i18n::railtie::validate_fallbacks()","Rails rss::element#validate_for_stream()","Ruby actioncontroller::httpauthentication::digest#validate_nonce()","Rails rss::imagemodelutils#validate_one_tag_name()","Ruby activemodel::validations::classmethods#validates()","Ruby activemodel::validations::classmethods#validates!()","Ruby activemodel::validations::helpermethods#validates_acceptance_of()","Ruby activerecord::validations::classmethods#validates_associated()","Ruby activemodel::validations::helpermethods#validates_confirmation_of()","Ruby activemodel::validations::classmethods#validates_each()","Ruby activemodel::validations::helpermethods#validates_exclusion_of()","Ruby activemodel::validations::helpermethods#validates_format_of()","Ruby activemodel::validations::helpermethods#validates_inclusion_of()","Ruby activemodel::validations::helpermethods#validates_length_of()","Ruby activemodel::validations::helpermethods#validates_numericality_of()","Ruby activemodel::validations::helpermethods#validates_presence_of()","Ruby activemodel::validations::helpermethods#validates_size_of()","Ruby activerecord::validations::classmethods#validates_uniqueness_of()","Ruby activemodel::validations#validates_with()","Ruby activemodel::validations::classmethods#validates_with()","Ruby activemodel::validations::classmethods#validators()","Ruby activemodel::validations::classmethods#validators_on()","Ruby actionview::helpers::instancetag#value()","Ruby actionview::helpers::instancetag::value()","Ruby activesupport::cache::entry#value()","Rails cgi::cookie#value()","Rails dl::importer#value()","Rails net::httpresponse#value()","Rails openssl::config#value()","Rails openssl::x509::attribute#value()","Rails openssl::x509::extension#value()","Rails rexml::attribute#value()","Rails rexml::cdata#value()","Rails rexml::entity#value()","Rails rexml::text#value()","Rails rinda::tuple#value()","Rails rinda::tupleentry#value()","Rails thread#value()","Rails win32ole_variable#value()","Rails win32ole_variant#value()","Rails cgi::cookie#value=()","Rails openssl::x509::attribute#value=()","Rails openssl::x509::extension#value=()","Rails rexml::text#value=()","Rails rss::itunesitemmodel::itunesduration#value=()","Rails win32ole_variant#value=()","Rails dbm#value?()","Rails env::value?()","Rails gdbm#value?()","Rails hash#value?()","Rails sdbm#value?()","Ruby actionview::helpers::instancetag#value_before_type_cast()","Ruby actionview::helpers::instancetag::value_before_type_cast()","Ruby activemodel::errors#values()","Ruby activesupport::orderedhash#values()","Rails dbm#values()","Rails env::values()","Rails gdbm#values()","Rails hash#values()","Rails sdbm#values()","Rails struct#values()","Rails yaml::dbm#values()","Ruby activesupport::hashwithindifferentaccess#values_at()","Ruby activesupport::hashwithindifferentaccess#values_at()","Rails array#values_at()","Rails csv::row#values_at()","Rails csv::table#values_at()","Rails dbm#values_at()","Rails env::values_at()","Rails gdbm#values_at()","Rails hash#values_at()","Rails matchdata#values_at()","Rails rake::taskarguments#values_at()","Rails sdbm#values_at()","Rails struct#values_at()","Rails yaml::dbm#values_at()","Rails debugger__#var_list()","Rails rss::maker::base#variable_is_set?()","Rails win32ole_variable#variable_kind()","Rails rexml::functions::variables()","Rails win32ole_type#variables()","Rails rexml::functions::variables=()","Rails rexml::xpathparser#variables=()","Rails win32ole_variable#varkind()","Rails win32ole_variant#vartype()","Ruby rails::appbuilder#vendor()","Ruby rails::generators::actions#vendor()","Ruby rails::appbuilder#vendor_javascripts()","Ruby rails::appbuilder#vendor_plugins()","Ruby rails::appbuilder#vendor_stylesheets()","Rails bigdecimal::ver()","Rails optionparser#ver()","Rails drb::drbserver#verbose()","Rails drb::drbserver::verbose()","Rails rake::fileutilsext#verbose()","Rails sys#verbose()","Rails drb::drbserver#verbose=()","Rails drb::drbserver::verbose=()","Rails irb::context#verbose?()","Ruby actioncontroller::requestforgeryprotection#verified_request?()","Ruby activesupport::messageverifier#verify()","Rails net::pop3::verify()","Rails net::pop3::verify()","Rails net::pop3::verify()","Rails net::pop3::verify()","Rails openssl::netscape::spki#verify()","Rails openssl::ocsp::basicresponse#verify()","Rails openssl::ocsp::request#verify()","Rails openssl::pkcs7#verify()","Rails openssl::pkey::pkey#verify()","Rails openssl::x509::crl#verify()","Rails openssl::x509::certificate#verify()","Rails openssl::x509::request#verify()","Rails openssl::x509::store#verify()","Ruby activerecord::connectionadapters::abstractadapter#verify!()","Rails gem::gemcutterutilities#verify_api_key()","Ruby actioncontroller::requestforgeryprotection#verify_authenticity_token()","Rails openssl::x509::store#verify_callback=()","Rails openssl::ssl::verify_certificate_identity()","Rails gem::security::policy#verify_gem()","Rails gem::validator#verify_gem()","Rails gem::validator#verify_gem_file()","Rails gem::installer#verify_gem_home()","Ruby mime::type#verify_request?()","Rails openssl::ssl::sslsocket#verify_result()","Rails gem::security::verify_trust_dir()","Ruby rails::version()","Rails erb::version()","Rails irb::version()","Rails openssl::x509::crl#version()","Rails openssl::x509::certificate#version()","Rails openssl::x509::request#version()","Rails optionparser#version()","Rails rexml::document#version()","Rails win32ole_typelib#version()","Rails gem::specification#version=()","Rails openssl::x509::crl#version=()","Rails openssl::x509::certificate#version=()","Rails openssl::x509::request#version=()","Rails net::http::version_1_2()","Rails net::http::version_1_2()","Rails net::http::version_1_2?()","Rails net::http::version_1_2?()","Rails rss::maker::versions()","Rails readline::vi_editing_mode()","Rails readline::vi_editing_mode?()","Ruby actionview::helpers::assettaghelper#video_path()","Ruby actionview::helpers::assettaghelper#video_tag()","Ruby abstractcontroller::rendering#view_assigns()","Ruby abstractcontroller::rendering#view_context()","Ruby abstractcontroller::rendering#view_context_class()","Ruby abstractcontroller::rendering::classmethods#view_context_class()","Ruby abstractcontroller::viewpaths::classmethods#view_paths()","Ruby abstractcontroller::viewpaths::classmethods#view_paths=()","Ruby actionview::lookupcontext::viewpaths#view_paths=()","Ruby abstractcontroller::rendering#view_renderer()","Rails webrick::httpserver#virtual_host()","Rails win32ole_method#visible?()","Rails win32ole_type#visible?()","Rails win32ole_typelib#visible?()","Rails win32ole_variable#visible?()","Ruby actioncontroller::hideactions::classmethods#visible_action?()","Rails psych::visitors::yamltree#visit_array()","Rails psych::visitors::yamltree#visit_bigdecimal()","Rails psych::visitors::yamltree#visit_class()","Rails psych::visitors::yamltree#visit_complex()","Rails psych::visitors::yamltree#visit_date()","Rails psych::visitors::yamltree#visit_datetime()","Rails psych::visitors::yamltree#visit_exception()","Rails psych::visitors::yamltree#visit_falseclass()","Rails psych::visitors::yamltree#visit_float()","Rails psych::visitors::yamltree#visit_hash()","Rails psych::visitors::yamltree#visit_integer()","Rails psych::visitors::yamltree#visit_module()","Rails psych::visitors::yamltree#visit_nilclass()","Rails psych::visitors::yamltree#visit_object()","Rails psych::visitors::emitter#visit_psych_nodes_alias()","Rails psych::visitors::toruby#visit_psych_nodes_alias()","Rails psych::visitors::emitter#visit_psych_nodes_document()","Rails psych::visitors::toruby#visit_psych_nodes_document()","Rails psych::visitors::emitter#visit_psych_nodes_mapping()","Rails psych::visitors::toruby#visit_psych_nodes_mapping()","Rails psych::visitors::emitter#visit_psych_nodes_scalar()","Rails psych::visitors::toruby#visit_psych_nodes_scalar()","Rails psych::visitors::emitter#visit_psych_nodes_sequence()","Rails psych::visitors::toruby#visit_psych_nodes_sequence()","Rails psych::visitors::emitter#visit_psych_nodes_stream()","Rails psych::visitors::toruby#visit_psych_nodes_stream()","Rails psych::visitors::yamltree#visit_psych_omap()","Rails psych::visitors::yamltree#visit_psych_set()","Rails psych::visitors::yamltree#visit_range()","Rails psych::visitors::yamltree#visit_rational()","Rails psych::visitors::yamltree#visit_regexp()","Rails gem::noaliasyamltree#visit_string()","Rails psych::visitors::yamltree#visit_string()","Rails psych::visitors::yamltree#visit_struct()","Rails psych::visitors::yamltree#visit_symbol()","Rails psych::visitors::yamltree#visit_time()","Rails psych::visitors::yamltree#visit_trueclass()","Rails net::ftp#voidcmd()","Rails time::w3cdtf()","Rails time#w3cdtf()","Ruby activesupport::notifications::fanout#wait()","Rails conditionvariable#wait()","Rails io#wait()","Rails monitormixin::conditionvariable#wait()","Rails process::wait()","Rails rinda::waittemplateentry#wait()","Rails process::wait2()","Rails shell::builtincommand#wait?()","Rails shell::systemcommand#wait?()","Rails shell::processcontroller#wait_all_jobs_execution()","Rails shell::processcontroller::wait_to_finish_all_process_controllers()","Rails monitormixin::conditionvariable#wait_until()","Rails monitormixin::conditionvariable#wait_while()","Rails object#wait_writable()","Rails process::waitall()","Rails net::telnet#waitfor()","Rails debugger__::waiting()","Rails shell::processcontroller#waiting_job?()","Rails shell::processcontroller#waiting_jobs()","Rails shell::processcontroller#waiting_jobs_exist?()","Rails process::waitpid()","Rails process::waitpid2()","Rails thread#wakeup()","Ruby activesupport::multibyte::chars::wants?()","Ruby activesupport::deprecation::warn()","Rails kernel#warn()","Rails logger#warn()","Rails optionparser#warn()","Rails rdoc::parser::ruby#warn()","Rails webrick::basiclog#warn()","Rails logger#warn?()","Rails webrick::basiclog#warn?()","Ruby activesupport::filewatcher#watch()","Ruby activesupport::dependencies::watchstack#watch_namespaces()","Ruby rails::application#watchable_args()","Ruby rails::railtie::configuration#watchable_dirs()","Ruby rails::railtie::configuration#watchable_files()","Ruby activesupport::dependencies::watchstack#watching?()","Rails date#wday()","Rails time#wday()","Rails weakref#weakref_alive?()","Rails date#wednesday?()","Rails time#wednesday?()","Ruby numeric#week()","Ruby numeric#weeks()","Ruby date#weeks_ago()","Ruby time#weeks_ago()","Rails gem::command#when_invoked()","Rails rake::fileutilsext#when_writing()","Ruby activerecord::querymethods#where()","Ruby activerecord::relation#where_values_hash()","Rails gem::commands::updatecommand#which_to_update()","Rails rexml::element#whitespace()","Rails gem::dependencylist#why_not_ok?()","Rails dl::cfunc::win32_last_error()","Rails fiddle::win32_last_error()","Rails fiddle::win32_last_error=()","Rails gem::win_platform?()","Rails rake::application#windows?()","Rails rake::win32::windows?()","Rails gem::installer#windows_stub_script()","Rails io#winsize()","Rails io#winsize=()","Ruby abstractcontroller::railties::routeshelpers::with()","Ruby actioncontroller::railties::paths::with()","Rails optionparser::with()","Ruby activesupport::json::with_backend()","Ruby activesupport::xmlmini#with_backend()","Rails object#with_config()","Ruby activerecord::connectionadapters::connectionpool#with_connection()","Ruby actiondispatch::routing::mapper::base#with_default_scope()","Rails rake::taskarguments#with_defaults()","Ruby rails::generators::pluginnewgenerator#with_dummy_app?()","Ruby actiondispatch::routing::mapper::resources#with_exclusive_scope()","Ruby activerecord::scoping::classmethods#with_exclusive_scope()","Ruby actionview::lookupcontext::viewpaths#with_fallbacks()","Rails drb::drbobject::with_friend()","Rails enumerator#with_index()","Ruby activesupport::hashwithindifferentaccess#with_indifferent_access()","Ruby activesupport::hashwithindifferentaccess#with_indifferent_access()","Ruby hash#with_indifferent_access()","Ruby activesupport::cache::strategy::localcache#with_local_cache()","Ruby activerecord::locking::pessimistic#with_lock()","Rails enumerator#with_object()","Rails prime::pseudoprimegenerator#with_object()","Ruby object#with_options()","Rails gem::gemcutterutilities#with_response()","Ruby activerecord::scoping::classmethods#with_scope()","Ruby actiondispatch::routing::mapper::resources#with_scope_level()","Ruby activerecord::transactions#with_transaction_returning_status()","Ruby kernel#with_warnings()","Ruby activerecord::identitymap::without()","Ruby actioncontroller::base::without_modules()","Ruby actionview::helpers::texthelper#word_wrap()","Rails gem::platformmismatch#wordy()","Rails irb::context#workspaces()","Rails file::world_readable?()","Rails file::stat#world_readable?()","Rails filetest#world_readable?()","Rails pathname#world_readable?()","Rails file::world_writable?()","Rails file::stat#world_writable?()","Rails filetest#world_writable?()","Rails pathname#world_writable?()","Ruby array::wrap()","Rails gem::command#wrap()","Rails rdoc::markup::tordoc#wrap()","Rails rdoc::text#wrap()","Rails rexml::text#wrap()","Rails zlib::gzipfile::wrap()","Rails dl::valueutil#wrap_arg()","Rails dl::valueutil#wrap_args()","Ruby actioncontroller::paramswrapper::classmethods#wrap_parameters()","Rails dl::function#wrap_result()","Ruby rails::generators::namedbase#wrap_with_namespace()","Rails file::writable?()","Rails file::stat#writable?()","Rails filetest#writable?()","Rails pathname#writable?()","Rails file::writable_real?()","Rails file::stat#writable_real?()","Rails filetest#writable_real?()","Rails pathname#writable_real?()","Ruby actiondispatch::railsentitystore#write()","Ruby actiondispatch::railsmetastore#write()","Ruby activerecord::migration#write()","Ruby activesupport::cache::store#write()","Rails argf#write()","Rails gem::configfile#write()","Rails gem::package::tarwriter::boundedstream#write()","Rails gem::package::tarwriter::restrictedstream#write()","Rails io::write()","Rails io#write()","Rails logger::logdevice#write()","Rails net::telnet#write()","Rails openssl::buffering#write()","Rails rexml::attlistdecl#write()","Rails rexml::attribute#write()","Rails rexml::cdata#write()","Rails rexml::comment#write()","Rails rexml::dtd::entitydecl#write()","Rails rexml::dtd::notationdecl#write()","Rails rexml::declaration#write()","Rails rexml::doctype#write()","Rails rexml::document#write()","Rails rexml::element#write()","Rails rexml::entity#write()","Rails rexml::externalentity#write()","Rails rexml::formatters::default#write()","Rails rexml::instruction#write()","Rails rexml::notationdecl#write()","Rails rexml::text#write()","Rails rexml::xmldecl#write()","Rails rinda::tuplespace#write()","Rails rinda::tuplespaceproxy#write()","Rails stringio#write()","Rails win32::registry#write()","Rails zlib::gzipwriter#write()","Rails httpserver::table#writeto()","Ruby sprockets::staticcompiler#write_asset()","Ruby activerecord::attributemethods::write#write_attribute()","Rails win32::registry#write_bin()","Rails rexml::formatters::default#write_cdata()","Rails rexml::formatters::pretty#write_cdata()","Rails rexml::formatters::default#write_comment()","Rails rexml::formatters::pretty#write_comment()","Rails rexml::formatters::default#write_document()","Rails rexml::formatters::pretty#write_document()","Rails rexml::formatters::default#write_element()","Rails rexml::formatters::pretty#write_element()","Rails rexml::formatters::transitive#write_element()","Ruby activesupport::cache::filestore#write_entry()","Ruby activesupport::cache::strategy::localcache::localstore#write_entry()","Ruby actioncontroller::caching::fragments#write_fragment()","Rails csv#write_headers?()","Rails win32::registry#write_i()","Rails rexml::formatters::default#write_instruction()","Ruby sprockets::staticcompiler#write_manifest()","Rails io#write_nonblock()","Rails openssl::buffering#write_nonblock()","Rails gem::requirepathsbuilder#write_require_paths_file_if_needed()","Rails win32::registry#write_s()","Rails rinda::ringserver#write_service()","Rails openssl::pkcs7::write_smime()","Rails gem::installer#write_spec()","Rails rdoc::generator::darkfish#write_style_sheet()","Rails rexml::formatters::default#write_text()","Rails rexml::formatters::pretty#write_text()","Rails rexml::formatters::transitive#write_text()","Rails rexml::text#write_with_substitution()","Rails win32::registry::wtime2time()","Ruby actiondispatch::request#xhr?()","Rails rss::atom::feed::entry::content#xhtml()","Rails rss::atom::textconstruct#xhtml()","Rails rss::maker::atomtextconstructbase::ensurexmlcontent#xhtml=()","Rails net::imap#xlist()","Ruby activerecord::connectionadapters::postgresqladapter::tabledefinition#xml()","Ruby activerecord::connectionadapters::tabledefinition#xml()","Rails rss::atom::feed::entry::content#xml()","Rails rss::maker::itemsbase::itembase::contentbase#xml=()","Rails rss::rexmllikexmlparser#xmldecl()","Rails rss::maker::atomtextconstructbase::ensurexmlcontent#xml_content=()","Rails rss::maker::itemsbase::itembase::contentbase#xml_content=()","Rails rexml::document#xml_decl()","Rails rss::atom::feed::entry::content::xml_getter()","Rails rss::atom::textconstruct::xml_getter()","Ruby actiondispatch::request#xml_http_request?()","Rails rss::atom::feed::entry::content::xml_setter()","Rails rss::atom::textconstruct::xml_setter()","Rails rexml::sax2listener#xmldecl()","Rails rexml::streamlistener#xmldecl()","Rails rexml::xmldecl#xmldecl()","Rails rss::listenermixin#xmldecl()","Rails rss::rexmllistener#xmldecl()","Rails rss::xmlparserlistener#xmldecl()","Rails rexml::parsers::pullevent#xmldecl?()","Ruby activesupport::timewithzone#xmlschema()","Ruby date#xmlschema()","Ruby datetime#xmlschema()","Rails date#xmlschema()","Rails date::xmlschema()","Rails datetime#xmlschema()","Rails datetime::xmlschema()","Rails time#xmlschema()","Rails time::xmlschema()","Rails object#xmp()","Rails rexml::attribute#xpath()","Rails rexml::element#xpath()","Rails rexml::text#xpath()","Rails psych::nodes::node#yaml()","Rails gem::commands::buildcommand#yaml?()","Rails module#yaml_as()","Rails gem::version#yaml_initialize()","Rails object::yaml_tag()","Rails date#yday()","Rails time#yday()","Ruby integer#year()","Rails date#year()","Rails time#year()","Rails xmlrpc::datetime#year=()","Ruby integer#years()","Ruby date#years_ago()","Ruby time#years_ago()","Ruby date#years_since()","Ruby time#years_since()","Ruby date#yesterday()","Ruby date::yesterday()","Ruby time#yesterday()","Rails fiber::yield()","Rails proc#yield()","Rails matrix::zero()","Rails bigdecimal#zero?()","Rails file::zero?()","Rails file::stat#zero?()","Rails filetest#zero?()","Rails fixnum#zero?()","Rails float#zero?()","Rails matrix#zero?()","Rails numeric#zero?()","Rails pathname#zero?()","Rails array#zip()","Rails enumerable#zip()","Rails rdoc::parser::zip?()","Rails rake::packagetask#zip_file()","Rails zlib::zlib_version()","Ruby activesupport::timewithzone#zone()","Ruby time::zone()","Rails time#zone()","Ruby time::zone=()","Rails time::zone_offset()","Ruby activesupport::timezone::zones_map()","Rails array#|()","Rails bignum#|()","Rails falseclass#|()","Rails fixnum#|()","Rails ipaddr#|()","Rails nilclass#|()","Rails set#|()","Rails shell::filter#|()","Rails trueclass#|()","Rails bignum#~()","Rails complex#~()","Rails fixnum#~()","Rails ipaddr#~()","Rails regexp#~()"],"info":[["!","BasicObject","Rails/classes/BasicObject.html#method-i-21","()","<p>Boolean negate.\n",null,1],["!","Delegator","Rails/classes/Delegator.html#method-i-21","()","",null,1],["!=","BasicObject","Rails/classes/BasicObject.html#method-i-21-3D","(p1)","<p>Returns true if two objects are not-equal, otherwise false.\n",null,1],["!=","Delegator","Rails/classes/Delegator.html#method-i-21-3D","(obj)","<p>Returns true if two objects are not considered of equal value.\n",null,1],["!~","Object","Rails/classes/Object.html#method-i-21-7E","(p1)","<p>Returns true if two objects do not match (using the <em>=~</em> method),\notherwise false.\n",null,1],["%","BigDecimal","Rails/classes/BigDecimal.html#method-i-25","(p1)","<p>Returns the modulus from dividing by b. See divmod.\n",null,1],["%","Bignum","Rails/classes/Bignum.html#method-i-25","(p1)","<p>Returns big modulo other. See Numeric.divmod for more information.\n",null,1],["%","Fixnum","Rails/classes/Fixnum.html#method-i-25","(p1)","<p>Returns <code>fix</code> modulo <code>other</code>. See\n<code>numeric.divmod</code> for more information.\n",null,1],["%","Float","Rails/classes/Float.html#method-i-25","(p1)","<p>Return the modulo after division of <code>flt</code> by <code>other</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">6543.21</span>.<span class=\"ruby-identifier\">modulo</span>(<span class=\"ruby-value\">137</span>)      <span class=\"ruby-comment\">#=&gt; 104.21</span>\n<span class=\"ruby-value\">6543.21</span>.<span class=\"ruby-identifier\">modulo</span>(<span class=\"ruby-value\">137.24</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["%","Numeric","Rails/classes/Numeric.html#method-i-25","(p1)","\n<pre>x.modulo(y) means x-y*(x/y).floor</pre>\n<p>Equivalent to <em>num.divmod(aNumeric)</em>.\n<p>See <code>Numeric#divmod</code>.\n",null,1],["%","STRING_OR_FAILED_FORMAT","Rails/classes/STRING_OR_FAILED_FORMAT.html#method-c-25","(x)","",null,1],["%","String","Rails/classes/String.html#method-i-25","(p1)","<p>Format—Uses <em>str</em> as a format specification, and returns the result\nof applying it to <em>arg</em>. If the format …\n",null,1],["&","Array","Rails/classes/Array.html#method-i-26","(p1)","<p>Set Intersection—Returns a new array containing elements common to the two\narrays, with no duplicates. …\n",null,1],["&","Bignum","Rails/classes/Bignum.html#method-i-26","(p1)","<p>Performs bitwise <code>and</code> between <em>big</em> and\n<em>numeric</em>.\n",null,1],["&","FalseClass","Rails/classes/FalseClass.html#method-i-26","(p1)","<p>And—Returns <code>false</code>. <em>obj</em> is always evaluated as it is\nthe argument to a method call—there is no short-circuit …\n",null,1],["&","Fixnum","Rails/classes/Fixnum.html#method-i-26","(p1)","<p>Bitwise AND.\n",null,1],["&","IPAddr","Rails/classes/IPAddr.html#method-i-26","(other)","<p>Returns a new ipaddr built by bitwise AND.\n",null,1],["&","NilClass","Rails/classes/NilClass.html#method-i-26","(p1)","<p>And—Returns <code>false</code>. <em>obj</em> is always evaluated as it is\nthe argument to a method call—there is no short-circuit …\n",null,1],["&","Process::Status","Rails/classes/Process/Status.html#method-i-26","(p1)","<p>Logical AND of the bits in <em>stat</em> with <em>num</em>.\n\n<pre>fork { exit 0x37 }\nProcess.wait\nsprintf('%04x', $?.to_i)    ...</pre>\n",null,1],["&","Set","Rails/classes/Set.html#method-i-26","(enum)","<p>Returns a new set containing elements common to the set and the given\nenumerable object.\n",null,1],["&","TrueClass","Rails/classes/TrueClass.html#method-i-26","(p1)","<p>And—Returns <code>false</code> if <em>obj</em> is <code>nil</code> or\n<code>false</code>, <code>true</code> otherwise.\n",null,1],["*","Array","Rails/classes/Array.html#method-i-2A","(p1)","<p>Repetition—With a String argument, equivalent to self.join(str). Otherwise,\nreturns a new array built …\n",null,1],["*","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-i-2A","(x)","<p>Returns a new Tms object obtained by memberwise multiplication of the\nindividual times for this Tms object …\n",null,1],["*","BigDecimal","Rails/classes/BigDecimal.html#method-i-2A","(p1)","<p>Multiply by the specified value.\n<p>e.g.\n\n<pre>c = a.mult(b,n)\nc = a * b</pre>\n",null,1],["*","Bignum","Rails/classes/Bignum.html#method-i-2A","(p1)","<p>Multiplies big and other, returning the result.\n",null,1],["*","Complex","Rails/classes/Complex.html#method-i-2A","(p1)","<p>Performs multiplication.\n",null,1],["*","Fixnum","Rails/classes/Fixnum.html#method-i-2A","(p1)","<p>Performs multiplication: the class of the resulting object depends on the\nclass of <code>numeric</code> and on the …\n",null,1],["*","Float","Rails/classes/Float.html#method-i-2A","(p1)","<p>Returns a new float which is the product of <code>float</code> and\n<code>other</code>.\n",null,1],["*","Matrix","Rails/classes/Matrix.html#method-i-2A","(m)","<p>Matrix multiplication.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">4</span>], [<span class=\"ruby-value\">6</span>,<span class=\"ruby-value\">8</span>]] * <span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">identity</span>(<span class=\"ruby-value\">2</span>)\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span> <span class=\"ruby-value\">4</span>\n     <span class=\"ruby-value\">6</span> <span class=\"ruby-value\">8</span>\n</pre>\n",null,1],["*","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-2A","(other)","<p>Redefine * to return either a string or a new file list.\n",null,1],["*","Rational","Rails/classes/Rational.html#method-i-2A","(p1)","<p>Performs multiplication.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  * <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; (4/9)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">900</span>)   * <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["*","String","Rails/classes/String.html#method-i-2A","(p1)","<p>Copy—Returns a new <code>String</code> containing <em>integer</em> copies\nof the receiver.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;Ho! &quot;</span> * <span class=\"ruby-value\">3</span>   <span class=\"ruby-comment\">#=&gt; &quot;Ho! Ho! Ho! &quot;</span>\n</pre>\n",null,1],["*","Vector","Rails/classes/Vector.html#method-i-2A","(x)","<p>Multiplies the vector by <code>x</code>, where <code>x</code> is a number\nor another vector.\n",null,1],["**","BigDecimal","Rails/classes/BigDecimal.html#method-i-2A-2A","(p1)","<p>It is a synonym of big_decimal.power(exp).\n",null,1],["**","Bignum","Rails/classes/Bignum.html#method-i-2A-2A","(p1)","<p>Raises <em>big</em> to the <em>exponent</em> power (which may be an\ninteger, float, or anything that will coerce to a number). …\n",null,1],["**","Complex","Rails/classes/Complex.html#method-i-2A-2A","(p1)","<p>Performs exponentiation.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-string\">'i'</span>) <span class=\"ruby-operator\">**</span> <span class=\"ruby-value\">2</span>             <span class=\"ruby-comment\">#=&gt; (-1+0i)</span>\n<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">-8</span>) <span class=\"ruby-operator\">**</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">3</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["**","Fixnum","Rails/classes/Fixnum.html#method-i-2A-2A","(p1)","<p>Raises <code>fix</code> to the <code>numeric</code> power, which may be\nnegative or fractional.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">2</span> <span class=\"ruby-operator\">**</span> <span class=\"ruby-value\">3</span>      <span class=\"ruby-comment\">#=&gt; 8</span>\n<span class=\"ruby-value\">2</span> <span class=\"ruby-operator\">**</span> <span class=\"ruby-value\">-1</span>     <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["**","Float","Rails/classes/Float.html#method-i-2A-2A","(p1)","<p>Raises <code>float</code> the <code>other</code> power.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">2.0</span><span class=\"ruby-operator\">**</span><span class=\"ruby-value\">3</span>      <span class=\"ruby-comment\">#=&gt; 8.0</span>\n</pre>\n",null,1],["**","Matrix","Rails/classes/Matrix.html#method-i-2A-2A","(other)","<p>Matrix exponentiation. Equivalent to multiplying the matrix by itself N\ntimes. Non integer exponents …\n",null,1],["**","Rational","Rails/classes/Rational.html#method-i-2A-2A","(p1)","<p>Performs exponentiation.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>)    <span class=\"ruby-operator\">**</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">3</span>)    <span class=\"ruby-comment\">#=&gt; (8/1)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">10</span>)   <span class=\"ruby-operator\">**</span> <span class=\"ruby-value\">-2</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["+","ActiveModel::MassAssignmentSecurity::PermissionSet","Ruby/classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#method-i-2B","(values)","",null,0],["+","ActiveSupport::Duration","Ruby/classes/ActiveSupport/Duration.html#method-i-2B","(other)","<p>Adds another Duration or a Numeric to this Duration. Numeric values are\ntreated as seconds.\n",null,0],["+","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-2B","(other)","<p>Returns a new Chars object containing the <em>other</em> object\nconcatenated to the string.\n<p>Example:\n\n<pre>('Café'.mb_chars ...</pre>\n",null,0],["+","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-2B","(other)","",null,0],["+","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-2B","(other)","",null,0],["+","Rails::Initializable::Collection","Ruby/classes/Rails/Initializable/Collection.html#method-i-2B","(other)","",null,0],["+","Array","Rails/classes/Array.html#method-i-2B","(p1)","<p>Concatenation—Returns a new array built by concatenating the two arrays\ntogether to produce a third …\n",null,1],["+","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-i-2B","(other)","<p>Returns a new Tms object obtained by memberwise summation of the individual\ntimes for this Tms object …\n",null,1],["+","BigDecimal","Rails/classes/BigDecimal.html#method-i-2B","(p1)","<p>Add the specified value.\n<p>e.g.\n\n<pre>c = a.add(b,n)\nc = a + b</pre>\n",null,1],["+","Bignum","Rails/classes/Bignum.html#method-i-2B","(p1)","<p>Adds big and other, returning the result.\n",null,1],["+","Complex","Rails/classes/Complex.html#method-i-2B","(p1)","<p>Performs addition.\n",null,1],["+","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-2B","(p1)","<p>Returns a new DL::CPtr that has been advanced <code>n</code> bytes.\n",null,1],["+","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-2B","(p1)","<p>Returns a new DL::CPtr that has been advanced <code>n</code> bytes.\n",null,1],["+","Date","Rails/classes/Date.html#method-i-2B","(p1)","<p>Returns a date object pointing other days after self.  The other should be\na numeric value.  If the other …\n",null,1],["+","Fixnum","Rails/classes/Fixnum.html#method-i-2B","(p1)","<p>Performs addition: the class of the resulting object depends on the class\nof <code>numeric</code> and on the magnitude …\n",null,1],["+","Float","Rails/classes/Float.html#method-i-2B","(p1)","<p>Returns a new float which is the sum of <code>float</code> and\n<code>other</code>.\n",null,1],["+","Matrix","Rails/classes/Matrix.html#method-i-2B","(m)","<p>Matrix addition.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">scalar</span>(<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">5</span>) <span class=\"ruby-operator\">+</span> <span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">0</span>], [<span class=\"ruby-value\">-4</span>,<span class=\"ruby-value\">7</span>]]\n  =<span class=\"ruby-operator\">&gt;</span>  <span class=\"ruby-value\">6</span>  <span class=\"ruby-value\">0</span>\n     <span class=\"ruby-value\">-4</span> <span class=\"ruby-value\">12</span>\n</pre>\n",null,1],["+","Pathname","Rails/classes/Pathname.html#method-i-2B","(other)","<p>Pathname#+ appends a pathname fragment to this one to produce a new\nPathname object.\n\n<pre>p1 = Pathname.new(&quot;/usr&quot;) ...</pre>\n",null,1],["+","Rational","Rails/classes/Rational.html#method-i-2B","(p1)","<p>Performs addition.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">+</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; (4/3)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">900</span>)   <span class=\"ruby-operator\">+</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["+","Set","Rails/classes/Set.html#method-i-2B","(enum)","",null,1],["+","Shell::Filter","Rails/classes/Shell/Filter.html#method-i-2B","(filter)","",null,1],["+","String","Rails/classes/String.html#method-i-2B","(p1)","<p>Concatenation—Returns a new <code>String</code> containing\n<em>other_str</em> concatenated to <em>str</em>.\n\n<pre>&quot;Hello from &quot; + self.to_s ...</pre>\n",null,1],["+","Time","Rails/classes/Time.html#method-i-2B","(p1)","<p>Addition—Adds some number of seconds (possibly fractional) to <em>time</em>\nand returns that value as a new …\n",null,1],["+","URI::Generic","Rails/classes/URI/Generic.html#method-i-2B","(oth)","",null,1],["+","Vector","Rails/classes/Vector.html#method-i-2B","(v)","<p>Vector addition.\n",null,1],["+@","BigDecimal","Rails/classes/BigDecimal.html#method-i-2B-40","()","",null,1],["+@","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-2B-40","()","<p>Returns a DL::CPtr that is a dereferenced pointer for this DL::CPtr.\nAnalogous to the star operator in …\n",null,1],["+@","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-2B-40","()","<p>Returns a DL::CPtr that is a dereferenced pointer for this DL::CPtr.\nAnalogous to the star operator in …\n",null,1],["+@","Numeric","Rails/classes/Numeric.html#method-i-2B-40","()","<p>Unary Plus—Returns the receiver’s value.\n",null,1],["-","ActiveSupport::Duration","Ruby/classes/ActiveSupport/Duration.html#method-i-2D","(other)","<p>Subtracts another Duration or a Numeric from this Duration. Numeric values\nare treated as seconds.\n",null,0],["-","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-2D","(other)","",null,0],["-","Time","Ruby/classes/Time.html#method-i-2D","(other)","",null,0],["-","Array","Rails/classes/Array.html#method-i-2D","(p1)","<p>Array Difference—Returns a new array that is a copy of the original array,\nremoving any items that …\n",null,1],["-","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-i-2D","(other)","<p>Returns a new Tms object obtained by memberwise subtraction of the\nindividual times for the other Tms …\n",null,1],["-","BigDecimal","Rails/classes/BigDecimal.html#method-i-2D","(p1)","<p>Subtract the specified value.\n<p>e.g.\n\n<pre>c = a.sub(b,n)\nc = a - b</pre>\n",null,1],["-","Bignum","Rails/classes/Bignum.html#method-i-2D","(p1)","<p>Subtracts other from big, returning the result.\n",null,1],["-","Complex","Rails/classes/Complex.html#method-i-2D","(p1)","<p>Performs subtraction.\n",null,1],["-","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-2D","(p1)","<p>Returns a new DL::CPtr that has been moved back <code>n</code> bytes.\n",null,1],["-","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-2D","(p1)","<p>Returns a new DL::CPtr that has been moved back <code>n</code> bytes.\n",null,1],["-","Date","Rails/classes/Date.html#method-i-2D","(p1)","<p>Returns the difference between the two dates if the other is a date object.\nIf the other is a numeric …\n",null,1],["-","Fixnum","Rails/classes/Fixnum.html#method-i-2D","(p1)","<p>Performs subtraction: the class of the resulting object depends on the\nclass of <code>numeric</code> and on the magnitude …\n",null,1],["-","Float","Rails/classes/Float.html#method-i-2D","(p1)","<p>Returns a new float which is the difference of <code>float</code> and\n<code>other</code>.\n",null,1],["-","Matrix","Rails/classes/Matrix.html#method-i-2D","(m)","<p>Matrix subtraction.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">5</span>], [<span class=\"ruby-value\">4</span>,<span class=\"ruby-value\">2</span>]] <span class=\"ruby-operator\">-</span> <span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">9</span>,<span class=\"ruby-value\">3</span>], [<span class=\"ruby-value\">-4</span>,<span class=\"ruby-value\">1</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">-8</span>  <span class=\"ruby-value\">2</span>\n      <span class=\"ruby-value\">8</span>  <span class=\"ruby-value\">1</span>\n</pre>\n",null,1],["-","Rational","Rails/classes/Rational.html#method-i-2D","(p1)","<p>Performs subtraction.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">-</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; (0/1)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">900</span>)   <span class=\"ruby-operator\">-</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["-","Set","Rails/classes/Set.html#method-i-2D","(enum)","<p>Returns a new set built by duplicating the set, removing every element that\nappears in the given enumerable …\n",null,1],["-","Time","Rails/classes/Time.html#method-i-2D","(p1)","<p>Difference—Returns a new time that represents the difference between two\ntimes, or subtracts the given …\n",null,1],["-","URI::Generic","Rails/classes/URI/Generic.html#method-i-2D","(oth)","",null,1],["-","Vector","Rails/classes/Vector.html#method-i-2D","(v)","<p>Vector subtraction.\n",null,1],["-@","BigDecimal","Rails/classes/BigDecimal.html#method-i-2D-40","()","",null,1],["-@","Bignum","Rails/classes/Bignum.html#method-i-2D-40","()","<p>Unary minus (returns an integer whose value is 0-big)\n",null,1],["-@","Complex","Rails/classes/Complex.html#method-i-2D-40","()","<p>Returns negation of the value.\n",null,1],["-@","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-2D-40","()","<p>Returns a DL::CPtr that is a reference pointer for this DL::CPtr. Analogous\nto the ampersand operator …\n",null,1],["-@","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-2D-40","()","<p>Returns a DL::CPtr that is a reference pointer for this DL::CPtr. Analogous\nto the ampersand operator …\n",null,1],["-@","Fixnum","Rails/classes/Fixnum.html#method-i-2D-40","()","<p>Negates <code>fix</code> (which might return a Bignum).\n",null,1],["-@","Float","Rails/classes/Float.html#method-i-2D-40","()","<p>Returns float, negated.\n",null,1],["-@","Numeric","Rails/classes/Numeric.html#method-i-2D-40","()","<p>Unary Minus—Returns the receiver’s value, negated.\n",null,1],["/","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-i-2F","(x)","<p>Returns a new Tms object obtained by memberwise division of the individual\ntimes for this Tms object …\n",null,1],["/","BigDecimal","Rails/classes/BigDecimal.html#method-i-2F","(p1)","<p>Divide by the specified value.\n<p>e.g.\n\n<pre>c = a.div(b,n)</pre>\n",null,1],["/","Bignum","Rails/classes/Bignum.html#method-i-2F","(p1)","<p>Performs division: the class of the resulting object depends on the class\nof <code>numeric</code> and on the magnitude …\n",null,1],["/","Complex","Rails/classes/Complex.html#method-i-2F","(p1)","<p>Performs division.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">10.0</span>) <span class=\"ruby-operator\">/</span> <span class=\"ruby-value\">3</span>  <span class=\"ruby-comment\">#=&gt; (3.3333333333333335+(0/1)*i)</span>\n<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">10</span>)   <span class=\"ruby-operator\">/</span> <span class=\"ruby-value\">3</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["/","Fixnum","Rails/classes/Fixnum.html#method-i-2F","(p1)","<p>Performs division: the class of the resulting object depends on the class\nof <code>numeric</code> and on the magnitude …\n",null,1],["/","Float","Rails/classes/Float.html#method-i-2F","(p1)","<p>Returns a new float which is the result of dividing <code>float</code> by\n<code>other</code>.\n",null,1],["/","Matrix","Rails/classes/Matrix.html#method-i-2F","(other)","<p>Matrix division (multiplication by the inverse).\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">7</span>,<span class=\"ruby-value\">6</span>], [<span class=\"ruby-value\">3</span>,<span class=\"ruby-value\">9</span>]] <span class=\"ruby-operator\">/</span> <span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">9</span>], [<span class=\"ruby-value\">3</span>,<span class=\"ruby-value\">1</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">-7</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["/","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-2F","(p1)","",null,1],["/","Rational","Rails/classes/Rational.html#method-i-2F","(p1)","<p>Performs division.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">/</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; (1/1)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">900</span>)   <span class=\"ruby-operator\">/</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["/","Vector","Rails/classes/Vector.html#method-i-2F","(x)","<p>Vector division.\n",null,1],["<","BigDecimal","Rails/classes/BigDecimal.html#method-i-3C","(p1)","<p>Returns true if a is less than b. Values may be coerced to perform the\ncomparison (see ==, coerce).\n",null,1],["<","Bignum","Rails/classes/Bignum.html#method-i-3C","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is less than\nthat of <code>real</code>.\n",null,1],["<","Comparable","Rails/classes/Comparable.html#method-i-3C","(p1)","<p>Compares two objects based on the receiver’s <code>&lt;=&gt;</code> method,\nreturning true if it returns -1.\n",null,1],["<","Fixnum","Rails/classes/Fixnum.html#method-i-3C","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is less than\nthat of <code>real</code>.\n",null,1],["<","Float","Rails/classes/Float.html#method-i-3C","(p1)","<p><code>true</code> if <code>flt</code> is less than <code>real</code>.\n",null,1],["<","Module","Rails/classes/Module.html#method-i-3C","(p1)","<p>Returns true if <em>mod</em> is a subclass of <em>other</em>. Returns\n<code>nil</code> if there’s no relationship between the two. ( …\n",null,1],["<","Shell::Filter","Rails/classes/Shell/Filter.html#method-i-3C","(src)","",null,1],["<<","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-3C-3C","(value)","",null,0],["<<","Array","Rails/classes/Array.html#method-i-3C-3C","(p1)","<p>Append—Pushes the given object on to the end of this array. This expression\nreturns the array itself, …\n",null,1],["<<","Bignum","Rails/classes/Bignum.html#method-i-3C-3C","(p1)","<p>Shifts big left <em>numeric</em> positions (right if <em>numeric</em> is\nnegative).\n",null,1],["<<","CSV","Rails/classes/CSV.html#method-i-3C-3C","(row)","<p>The primary write method for wrapped Strings and IOs, <code>row</code> (an\nArray or CSV::Row) is converted to CSV …\n",null,1],["<<","CSV::Row","Rails/classes/CSV/Row.html#method-i-3C-3C","(arg)","<p>If a two-element Array is provided, it is assumed to be a header and field\nand the pair is appended. …\n",null,1],["<<","CSV::Table","Rails/classes/CSV/Table.html#method-i-3C-3C","(row_or_array)","<p>Adds a new row to the bottom end of this table.  You can provide an Array,\nwhich will be converted to …\n",null,1],["<<","Curses::Window","Rails/classes/Curses/Window.html#method-i-3C-3C","(p1)","<p>&lt;&lt;\n<p>Add String <code>str</code> to the current string.\n<p>See also Curses::Window.addstr\n",null,1],["<<","Date","Rails/classes/Date.html#method-i-3C-3C","(p1)","<p>Returns a date object pointing n months before self.  The n should be a\nnumeric value.\n<p>For example:\n\n<pre>Date.new(2001,2,3) ...</pre>\n",null,1],["<<","Digest::HMAC","Rails/classes/Digest/HMAC.html#method-i-3C-3C","(text)","",null,1],["<<","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-3C-3C","(p1)","<p>Updates the digest using a given <em>string</em> and returns self.\n<p>The update() method and the left-shift operator …\n",null,1],["<<","Fixnum","Rails/classes/Fixnum.html#method-i-3C-3C","(p1)","<p>Shifts <em>fix</em> left <em>count</em> positions (right if <em>count</em>\nis negative).\n",null,1],["<<","IO","Rails/classes/IO.html#method-i-3C-3C","(p1)","<p>String Output—Writes <em>obj</em> to <em>ios</em>. <em>obj</em> will be\nconverted to a string using <code>to_s</code>.\n\n<pre>$stdout &lt;&lt; &quot;Hello &quot; &lt;&lt; ...</pre>\n",null,1],["<<","IO::writable","Rails/classes/IO/writable.html#method-i-3C-3C","(p1)","<p>See IO#&lt;&lt;.\n",null,1],["<<","IPAddr","Rails/classes/IPAddr.html#method-i-3C-3C","(num)","<p>Returns a new ipaddr built by bitwise left shift.\n",null,1],["<<","Logger","Rails/classes/Logger.html#method-i-3C-3C","(msg)","<p>Dump given message to the log device without any formatting.  If no log\ndevice exists, return <code>nil</code>.\n",null,1],["<<","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-3C-3C","(s)","<p>Writes <code>s</code> to the stream.  <code>s</code> will be converted to a\nString using String#to_s.\n",null,1],["<<","OpenSSL::Digest","Rails/classes/OpenSSL/Digest.html#method-i-3C-3C","(p1)","",null,1],["<<","OpenSSL::HMAC","Rails/classes/OpenSSL/HMAC.html#method-i-3C-3C","(p1)","",null,1],["<<","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-3C-3C","(object)","",null,1],["<<","Queue","Rails/classes/Queue.html#method-i-3C-3C","(obj)","<p>Alias of push\n",null,1],["<<","RDoc::Markup::Document","Rails/classes/RDoc/Markup/Document.html#method-i-3C-3C","(part)","<p>Appends <code>part</code> to the document\n",null,1],["<<","RDoc::Markup::List","Rails/classes/RDoc/Markup/List.html#method-i-3C-3C","(item)","<p>Appends <code>item</code> to the list\n",null,1],["<<","RDoc::Markup::ListItem","Rails/classes/RDoc/Markup/ListItem.html#method-i-3C-3C","(part)","<p>Appends <code>part</code> to the ListItem\n",null,1],["<<","RDoc::Markup::Raw","Rails/classes/RDoc/Markup/Raw.html#method-i-3C-3C","(text)","<p>Appends <code>text</code>\n",null,1],["<<","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-3C-3C","( attribute )","",null,1],["<<","REXML::Document","Rails/classes/REXML/Document.html#method-i-3C-3C","( child )","",null,1],["<<","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-3C-3C","(element=nil)","",null,1],["<<","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-3C-3C","(element)","<p>Append a child to this element, optionally under a provided namespace. The\nnamespace argument is ignored …\n",null,1],["<<","REXML::Output","Rails/classes/REXML/Output.html#method-i-3C-3C","( content )","",null,1],["<<","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-3C-3C","( object )","",null,1],["<<","REXML::Text","Rails/classes/REXML/Text.html#method-i-3C-3C","( to_append )","<p>Appends text to this text node.  The text is appended in the\n<code>raw</code> mode of this text node.\n",null,1],["<<","REXML::Validation::Choice","Rails/classes/REXML/Validation/Choice.html#method-i-3C-3C","( event )","",null,1],["<<","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-i-3C-3C","( event )","",null,1],["<<","RSS::XML::Element","Rails/classes/RSS/XML/Element.html#method-i-3C-3C","(child)","",null,1],["<<","Set","Rails/classes/Set.html#method-i-3C-3C","(o)","",null,1],["<<","SizedQueue","Rails/classes/SizedQueue.html#method-i-3C-3C","(obj)","<p>Alias of push\n",null,1],["<<","String","Rails/classes/String.html#method-i-3C-3C","(p1)","<p>Append—Concatenates the given object to <em>str</em>. If the object is a\n<code>Integer</code>, it is considered as a codepoint, …\n",null,1],["<<","StringScanner","Rails/classes/StringScanner.html#method-i-3C-3C","(p1)","<p>Appends <code>str</code> to the string being scanned. This method does not\naffect scan pointer.\n\n<pre>s = StringScanner.new(&quot;Fri ...</pre>\n",null,1],["<<","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-3C-3C","(obj)","<p>Synonym for log(INFO, obj.to_s)\n",null,1],["<<","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-3C-3C","(data)","",null,1],["<<","WEBrick::HTTPUtils::FormData","Rails/classes/WEBrick/HTTPUtils/FormData.html#method-i-3C-3C","(str)","",null,1],["<<","Zlib::Deflate","Rails/classes/Zlib/Deflate.html#method-i-3C-3C","(p1)","<p>Same as IO.\n",null,1],["<<","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-3C-3C","(p1)","<p>Document-method: &lt;&lt; Same as IO.\n",null,1],["<<","Zlib::Inflate","Rails/classes/Zlib/Inflate.html#method-i-3C-3C","(p1)","<p>Same as IO.\n",null,1],["<=","BigDecimal","Rails/classes/BigDecimal.html#method-i-3C-3D","(p1)","<p>Returns true if a is less than or equal to b. Values may be coerced to\nperform the comparison (see ==, …\n",null,1],["<=","Bignum","Rails/classes/Bignum.html#method-i-3C-3D","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is less than or\nequal to that of <code>real</code>.\n",null,1],["<=","Comparable","Rails/classes/Comparable.html#method-i-3C-3D","(p1)","<p>Compares two objects based on the receiver’s <code>&lt;=&gt;</code> method,\nreturning true if it returns -1 or 0. …\n",null,1],["<=","Fixnum","Rails/classes/Fixnum.html#method-i-3C-3D","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is less than or\nequal to that of <code>real</code>.\n",null,1],["<=","Float","Rails/classes/Float.html#method-i-3C-3D","(p1)","<p><code>true</code> if <code>flt</code> is less than or equal to\n<code>real</code>.\n",null,1],["<=","Module","Rails/classes/Module.html#method-i-3C-3D","(p1)","<p>Returns true if <em>mod</em> is a subclass of <em>other</em> or is the same\nas <em>other</em>. Returns <code>nil</code> if there’s no relationship …\n",null,1],["<=>","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-3C-3D-3E","(other_object)","<p>Allows sort on objects\n",null,0],["<=>","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html#method-i-3C-3D-3E","(version_string)","",null,0],["<=>","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-3C-3D-3E","(other)","<p>Returns -1, 0, or 1, depending on whether the Chars object is to be sorted\nbefore, equal or after the …\n",null,0],["<=>","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-3C-3D-3E","(other)","<p>Use the time in UTC for comparisons.\n",null,0],["<=>","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-3C-3D-3E","(zone)","<p>Compare this time zone to the parameter. The two are compared first on\ntheir offsets, and then by name. …\n",null,0],["<=>","DateTime","Ruby/classes/DateTime.html#method-i-3C-3D-3E","(other)","<p>Layers additional behavior on DateTime#&lt;=&gt; so that Time and\nActiveSupport::TimeWithZone instances …\n",null,0],["<=>","Time","Ruby/classes/Time.html#method-i-3C-3D-3E","(other)","",null,0],["<=>","Array","Rails/classes/Array.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns an integer (-1, 0, or +1) if this array is less than,\nequal to, or greater than …\n",null,1],["<=>","BigDecimal","Rails/classes/BigDecimal.html#method-i-3C-3D-3E","(p1)","<p>The comparison operator. a &lt;=&gt; b is 0 if a == b, 1 if a &gt; b, -1 if\na &lt; b.\n",null,1],["<=>","Bignum","Rails/classes/Bignum.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1, 0, or +1 depending on whether <em>big</em> is less\nthan, equal to, or greater than <em>numeric</em> …\n",null,1],["<=>","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-3C-3D-3E","(p1)","<p>Returns -1 if less than, 0 if equal to, 1 if greater than\n<code>other</code>.  Returns nil if <code>ptr</code> cannot be compared …\n",null,1],["<=>","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-3C-3D-3E","(p1)","<p>Returns -1 if less than, 0 if equal to, 1 if greater than\n<code>other</code>.  Returns nil if <code>ptr</code> cannot be compared …\n",null,1],["<=>","Date","Rails/classes/Date.html#method-i-3C-3D-3E","(p1)","<p>Compares the two dates and returns -1, zero, 1 or nil.  The other should be\na date object or a numeric …\n",null,1],["<=>","File::Stat","Rails/classes/File/Stat.html#method-i-3C-3D-3E","(p1)","<p>Compares <code>File::Stat</code> objects by comparing their respective\nmodification times.\n\n<pre>f1 = File.new(&quot;f1&quot;, &quot;w&quot;) ...</pre>\n",null,1],["<=>","Fixnum","Rails/classes/Fixnum.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1, 0, +1 or nil depending on whether <em>fix</em> is\nless than, equal to, or greater than …\n",null,1],["<=>","Float","Rails/classes/Float.html#method-i-3C-3D-3E","(p1)","<p>Returns -1, 0, +1 or nil depending on whether <em>flt</em> is less than,\nequal to, or greater than <em>real</em>. This …\n",null,1],["<=>","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-3C-3D-3E","(other)","<p>Dependencies are ordered by name.\n",null,1],["<=>","Gem::Version","Rails/classes/Gem/Version.html#method-i-3C-3D-3E","(other)","<p>Compares this version with <code>other</code> returning -1, 0, or 1 if the\nother version is larger, the same, or smaller …\n",null,1],["<=>","IPAddr","Rails/classes/IPAddr.html#method-i-3C-3D-3E","(other)","<p>Compares the ipaddr with another.\n",null,1],["<=>","IRB::Notifier::LeveledNotifier","Rails/classes/IRB/Notifier/LeveledNotifier.html#method-i-3C-3D-3E","(other)","",null,1],["<=>","Module","Rails/classes/Module.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1 if <em>mod</em> includes <em>other_mod</em>, 0 if\n<em>mod</em> is the same as <em>other_mod</em>, and +1 if <em>mod</em> is …\n",null,1],["<=>","Numeric","Rails/classes/Numeric.html#method-i-3C-3D-3E","(p1)","<p>Returns zero if <em>num</em> equals <em>other</em>, <code>nil</code>\notherwise.\n",null,1],["<=>","Object","Rails/classes/Object.html#method-i-3C-3D-3E","(p1)","<p>Returns 0 if obj === other, otherwise nil.\n",null,1],["<=>","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-i-3C-3D-3E","(p1)","",null,1],["<=>","Pathname","Rails/classes/Pathname.html#method-i-3C-3D-3E","(p1)","<p>Provides for comparing pathnames, case-sensitively.\n",null,1],["<=>","RDoc::Alias","Rails/classes/RDoc/Alias.html#method-i-3C-3D-3E","(other)","<p>Order by #singleton then #new_name\n",null,1],["<=>","RDoc::Constant","Rails/classes/RDoc/Constant.html#method-i-3C-3D-3E","(other)","<p>Constants are ordered by name\n",null,1],["<=>","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-3C-3D-3E","(other)","<p>Contexts are sorted by full_name\n",null,1],["<=>","RDoc::Include","Rails/classes/RDoc/Include.html#method-i-3C-3D-3E","(other)","<p>Includes are sorted by name\n",null,1],["<=>","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-3C-3D-3E","(other)","<p>Order by #singleton then #name\n",null,1],["<=>","REXML::Comment","Rails/classes/REXML/Comment.html#method-i-3C-3D-3E","(other)","<p>Compares this Comment to another; the contents of the comment are used in\nthe comparison.\n",null,1],["<=>","REXML::Text","Rails/classes/REXML/Text.html#method-i-3C-3D-3E","( other )","<p><code>other</code> a String or a Text <code>returns</code> the result of\n(to_s &lt;=&gt; arg.to_s)\n",null,1],["<=>","RSS::Maker::ItemsBase::ItemBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-3C-3D-3E","(other)","",null,1],["<=>","Rake::EarlyTime","Rails/classes/Rake/EarlyTime.html#method-i-3C-3D-3E","(other)","",null,1],["<=>","Rational","Rails/classes/Rational.html#method-i-3C-3D-3E","(p1)","<p>Performs comparison and returns -1, 0, or +1.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">&lt;=&gt;</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">5</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["<=>","String","Rails/classes/String.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1 if <em>other_str</em> is greater than, 0 if\n<em>other_str</em> is equal to, and +1 if <em>other_str</em> …\n",null,1],["<=>","Symbol","Rails/classes/Symbol.html#method-i-3C-3D-3E","(p1)","<p>Compares <em>sym</em> with <em>other</em> in string form.\n",null,1],["<=>","Time","Rails/classes/Time.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Compares <em>time</em> with <em>other_time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>       <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:12:12 -0600</span>\n<span class=\"ruby-identifier\">t2</span> = <span class=\"ruby-identifier\">t</span> <span class=\"ruby-operator\">+</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["<=>","WEBrick::HTTPVersion","Rails/classes/WEBrick/HTTPVersion.html#method-i-3C-3D-3E","(other)","",null,1],["==","ActionDispatch::MiddlewareStack::Middleware","Ruby/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-3D-3D","(middleware)","",null,0],["==","ActionView::FileSystemResolver","Ruby/classes/ActionView/FileSystemResolver.html#method-i-3D-3D","(resolver)","",null,0],["==","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-3D-3D","(comparison_object)","<p>Returns true if <code>comparison_object</code> is the same exact object, or\n<code>comparison_object</code> is of the same type …\n",null,0],["==","ActiveRecord::Reflection::MacroReflection","Ruby/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-3D-3D","(other_aggregation)","<p>Returns <code>true</code> if <code>self</code> and\n<code>other_aggregation</code> have the same <code>name</code> attribute,\n<code>active_record</code> attribute, and …\n",null,0],["==","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-3D-3D","(other)","",null,0],["==","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-3D-3D","(other)","<p>Test for equality.  Resource are equal if and only if <code>other</code> is\nthe same object or is an instance of the …\n",null,0],["==","ActiveResource::Request","Ruby/classes/ActiveResource/Request.html#method-i-3D-3D","(req)","",null,0],["==","ActiveResource::Response","Ruby/classes/ActiveResource/Response.html#method-i-3D-3D","(other)","<p>Returns true if the other is a Response with an equal body, equal message\nand equal headers. Otherwise …\n",null,0],["==","ActiveSupport::Duration","Ruby/classes/ActiveSupport/Duration.html#method-i-3D-3D","(other)","<p>Returns true if <code>other</code> is also a Duration instance with the\nsame <code>value</code>, or if <code>other == value</code>.\n",null,0],["==","Mime::Type","Ruby/classes/Mime/Type.html#method-i-3D-3D","(mime_type)","",null,0],["==","Array","Rails/classes/Array.html#method-i-3D-3D","(p1)","<p>Equality—Two arrays are equal if they contain the same number of elements\nand if each element is equal …\n",null,1],["==","BasicObject","Rails/classes/BasicObject.html#method-i-3D-3D","(p1)","<p>Equality—At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <em>obj</em> and <em>other</em> are the same\nobject. Typically …\n",null,1],["==","BigDecimal","Rails/classes/BigDecimal.html#method-i-3D-3D","(p1)","<p>Tests for value equality; returns true if the values are equal.\n<p>The == and === operators and the eql? …\n",null,1],["==","Bignum","Rails/classes/Bignum.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>big</em>. Contrast this with <code>Bignum#eql?</code>, which requires\n<em>obj</em> …\n",null,1],["==","CSV::Row","Rails/classes/CSV/Row.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if this row contains the same headers and fields\nin the same order as <code>other</code>.\n",null,1],["==","CSV::Table","Rails/classes/CSV/Table.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if all rows of this table ==()\n<code>other</code>‘s rows.\n",null,1],["==","Comparable","Rails/classes/Comparable.html#method-i-3D-3D","(p1)","<p>Compares two objects based on the receiver’s <code>&lt;=&gt;</code> method,\nreturning true if it returns 0. Also returns …\n",null,1],["==","Complex","Rails/classes/Complex.html#method-i-3D-3D","(p1)","<p>Returns true if cmp equals object numerically.\n",null,1],["==","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-3D-3D","(p1)","<p>Returns true if <code>other</code> wraps the same pointer, otherwise\nreturns false.\n",null,1],["==","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-3D-3D","(p1)","<p>Returns true if <code>other</code> wraps the same pointer, otherwise\nreturns false.\n",null,1],["==","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-i-3D-3D","(other)","",null,1],["==","Delegator","Rails/classes/Delegator.html#method-i-3D-3D","(obj)","<p>Returns true if two objects are considered of equal value.\n",null,1],["==","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-3D-3D","(p1)","<p>If a string is given, checks whether it is equal to the hex-encoded hash\nvalue of the digest object. …\n",null,1],["==","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-3D-3D","(p1)","",null,1],["==","Exception","Rails/classes/Exception.html#method-i-3D-3D","(p1)","<p>Equality—If <em>obj</em> is not an <code>Exception</code>, returns\n<code>false</code>. Otherwise, returns <code>true</code> if <em>exc</em>\nand <em>obj</em> share same …\n",null,1],["==","Fixnum","Rails/classes/Fixnum.html#method-i-3D-3D","(p1)","<p>Return <code>true</code> if <code>fix</code> equals <code>other</code>\nnumerically.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-value\">2</span>      <span class=\"ruby-comment\">#=&gt; false</span>\n<span class=\"ruby-value\">1</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-value\">1.0</span>    <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n",null,1],["==","Float","Rails/classes/Float.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>flt</em>. Contrast this with <code>Float#eql?</code>, which requires\n<em>obj</em> …\n",null,1],["==","Gem::Platform","Rails/classes/Gem/Platform.html#method-i-3D-3D","(other)","<p>Is <code>other</code> equal to this platform?  Two platforms are equal if\nthey have the same CPU, OS and version. …\n",null,1],["==","Hash","Rails/classes/Hash.html#method-i-3D-3D","(p1)","<p>Equality—Two hashes are equal if they each contain the same number of keys\nand if each key-value pair …\n",null,1],["==","IPAddr","Rails/classes/IPAddr.html#method-i-3D-3D","(other)","<p>Returns true if two ipaddrs are equal.\n",null,1],["==","MatchData","Rails/classes/MatchData.html#method-i-3D-3D","(p1)","<p>Equality—Two matchdata are equal if their target strings, patterns, and\nmatched positions are identical. …\n",null,1],["==","Matrix","Rails/classes/Matrix.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if and only if the two matrices contain equal\nelements.\n",null,1],["==","Method","Rails/classes/Method.html#method-i-3D-3D","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition. …\n",null,1],["==","Module","Rails/classes/Module.html#method-i-3D-3D","(p1)","<p>Equality—At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <em>obj</em> and <em>other</em> are the same\nobject. Typically …\n",null,1],["==","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-3D-3D","(p1)","",null,1],["==","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-3D-3D","(p1)","",null,1],["==","OpenSSL::PKey::EC::Point","Rails/classes/OpenSSL/PKey/EC/Point.html#method-i-3D-3D","(p1)","",null,1],["==","OpenSSL::SSL::Session","Rails/classes/OpenSSL/SSL/Session.html#method-i-3D-3D","(p1)","",null,1],["==","OpenStruct","Rails/classes/OpenStruct.html#method-i-3D-3D","(other)","<p>Compares this object and <code>other</code> for equality.  An OpenStruct is\nequal to <code>other</code> when <code>other</code> is an OpenStruct …\n",null,1],["==","Pathname","Rails/classes/Pathname.html#method-i-3D-3D","(p1)","<p>Compare this pathname with <code>other</code>.  The comparison is\nstring-based. Be aware that two different paths …\n",null,1],["==","Proc","Rails/classes/Proc.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <em>prc</em> is the same object as\n<em>other_proc</em>, or if they are both procs with the same body.\n",null,1],["==","Process::Status","Rails/classes/Process/Status.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if the integer value of <em>stat</em> equals\n<em>other</em>.\n",null,1],["==","RDoc::Attr","Rails/classes/RDoc/Attr.html#method-i-3D-3D","(other)","<p>Attributes are equal when their names, singleton and rw are identical\n",null,1],["==","RDoc::Constant","Rails/classes/RDoc/Constant.html#method-i-3D-3D","(other)","<p>Constants are equal when their #parent and #name is the same\n",null,1],["==","RDoc::Context::Section","Rails/classes/RDoc/Context/Section.html#method-i-3D-3D","(other)","<p>Sections are equal when they have the same #title\n",null,1],["==","RDoc::Markup::Special","Rails/classes/RDoc/Markup/Special.html#method-i-3D-3D","(o)","<p>Specials are equal when the have the same text and type\n",null,1],["==","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-3D-3D","(other)","<p>An RDoc::TopLevel is equal to another with the same absolute_name\n",null,1],["==","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-3D-3D","( other )","<p>Returns true if other is an Attribute and has the same name and value,\nfalse otherwise.\n",null,1],["==","REXML::Comment","Rails/classes/REXML/Comment.html#method-i-3D-3D","( other )","<p>Compares this Comment to another; the contents of the comment are used in\nthe comparison.\n",null,1],["==","REXML::Instruction","Rails/classes/REXML/Instruction.html#method-i-3D-3D","( other )","<p>@return true if other is an Instruction, and the content and target of the\nother matches the target and …\n",null,1],["==","REXML::Validation::Event","Rails/classes/REXML/Validation/Event.html#method-i-3D-3D","( other )","",null,1],["==","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-i-3D-3D","( other )","",null,1],["==","RSS::XML::Element","Rails/classes/RSS/XML/Element.html#method-i-3D-3D","(other)","",null,1],["==","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-3D-3D","(array)","<p>Define equality.\n",null,1],["==","Random","Rails/classes/Random.html#method-i-3D-3D","(p1)","<p>Returns true if the generators’ states equal.\n",null,1],["==","Range","Rails/classes/Range.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a Range, has equivalent\nbeginning and end items (by comparing them with  …\n",null,1],["==","Rational","Rails/classes/Rational.html#method-i-3D-3D","(p1)","<p>Returns true if rat equals object numerically.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">==</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; true ...</span>\n</pre>\n",null,1],["==","Regexp","Rails/classes/Regexp.html#method-i-3D-3D","(p1)","<p>Equality—Two regexps are equal if their patterns are identical, they have\nthe same character set code, …\n",null,1],["==","Set","Rails/classes/Set.html#method-i-3D-3D","(other)","<p>Returns true if two sets are equal.  The equality of each couple of\nelements is defined according to …\n",null,1],["==","String","Rails/classes/String.html#method-i-3D-3D","(p1)","<p>Equality—If <em>obj</em> is not a <code>String</code>, returns\n<code>false</code>. Otherwise, returns <code>true</code> if <em>str</em>\n<code>&lt;=&gt;</code> <em>obj</em> returns …\n",null,1],["==","Struct","Rails/classes/Struct.html#method-i-3D-3D","(p1)","<p>Equality—Returns <code>true</code> if <em>other_struct</em> is equal to\nthis one: they must be of the same class as generated …\n",null,1],["==","Symbol","Rails/classes/Symbol.html#method-i-3D-3D","(p1)","<p>Equality—If <em>sym</em> and <em>obj</em> are exactly the same symbol,\nreturns <code>true</code>.\n",null,1],["==","URI::Generic","Rails/classes/URI/Generic.html#method-i-3D-3D","(oth)","<p>Compares to URI’s\n",null,1],["==","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-3D-3D","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition. …\n",null,1],["==","Vector","Rails/classes/Vector.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> iff the two vectors have the same elements in the\nsame order.\n",null,1],["==","Win32::SSPI::SSPIResult","Rails/classes/Win32/SSPI/SSPIResult.html#method-i-3D-3D","(other)","",null,1],["==","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-3D-3D","(o)","",null,1],["===","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-3D-3D-3D","(object)","<p>Overwrite the default class equality method to provide support for\nassociation proxies.\n",null,0],["===","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Ruby/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-i-3D-3D-3D","(other)","",null,0],["===","Mime::Type","Ruby/classes/Mime/Type.html#method-i-3D-3D-3D","(list)","",null,0],["===","Time","Ruby/classes/Time.html#method-c-3D-3D-3D","(other)","<p>Overriding case equality method so that it returns true for\nActiveSupport::TimeWithZone instances\n",null,0],["===","BigDecimal","Rails/classes/BigDecimal.html#method-i-3D-3D-3D","(p1)","<p>Tests for value equality; returns true if the values are equal.\n<p>The == and === operators and the eql? …\n",null,1],["===","Bignum","Rails/classes/Bignum.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>big</em>. Contrast this with <code>Bignum#eql?</code>, which requires\n<em>obj</em> …\n",null,1],["===","Date","Rails/classes/Date.html#method-i-3D-3D-3D","(p1)","<p>Returns true if they are the same day.\n<p>For example:\n\n<pre>Date.new(2001,2,3) === Date.new(2001,2,3)\n         ...</pre>\n",null,1],["===","Fixnum","Rails/classes/Fixnum.html#method-i-3D-3D-3D","(p1)","<p>Return <code>true</code> if <code>fix</code> equals <code>other</code>\nnumerically.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-value\">2</span>      <span class=\"ruby-comment\">#=&gt; false</span>\n<span class=\"ruby-value\">1</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-value\">1.0</span>    <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n",null,1],["===","Float","Rails/classes/Float.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>flt</em>. Contrast this with <code>Float#eql?</code>, which requires\n<em>obj</em> …\n",null,1],["===","Gem::Platform","Rails/classes/Gem/Platform.html#method-i-3D-3D-3D","(other)","<p>Does <code>other</code> match this platform?  Two platforms match if they\nhave the same CPU, or either has a CPU of …\n",null,1],["===","Gem::Requirement","Rails/classes/Gem/Requirement.html#method-i-3D-3D-3D","(version)","",null,1],["===","IPAddr","Rails/classes/IPAddr.html#method-i-3D-3D-3D","(other)","",null,1],["===","Module","Rails/classes/Module.html#method-i-3D-3D-3D","(p1)","<p>Case Equality—Returns <code>true</code> if <em>anObject</em> is an instance\nof <em>mod</em> or one of <em>mod</em>’s descendants. Of limited …\n",null,1],["===","Object","Rails/classes/Object.html#method-i-3D-3D-3D","(p1)","<p>Case Equality—For class <code>Object</code>, effectively the same as\ncalling  <code>#==</code>, but typically overridden by descendants …\n",null,1],["===","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-3D-3D-3D","(p1)","",null,1],["===","Pathname","Rails/classes/Pathname.html#method-i-3D-3D-3D","(p1)","<p>Compare this pathname with <code>other</code>.  The comparison is\nstring-based. Be aware that two different paths …\n",null,1],["===","Proc","Rails/classes/Proc.html#method-i-3D-3D-3D","(*args)","<p>Invokes the block with <code>obj</code> as the proc's parameter like\nProc#call.  It is to allow a proc object to be ...\n",null,1],["===","Range","Rails/classes/Range.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> if <em>obj</em> is an element of <em>rng</em>,\n<code>false</code> otherwise. Conveniently, <code>===</code> is the\ncomparison operator …\n",null,1],["===","Regexp","Rails/classes/Regexp.html#method-i-3D-3D-3D","(p1)","<p>Case Equality—Synonym for <code>Regexp#=~</code> used in case statements.\n\n<pre>a = &quot;HELLO&quot;\ncase a\nwhen /^[a-z]*$/; print ...</pre>\n",null,1],["===","Rinda::DRbObjectTemplate","Rails/classes/Rinda/DRbObjectTemplate.html#method-i-3D-3D-3D","(ro)","<p>This DRbObjectTemplate matches <code>ro</code> if the remote object’s\ndrburi and drbref are the same.  <code>nil</code> is used …\n",null,1],["===","Rinda::Template","Rails/classes/Rinda/Template.html#method-i-3D-3D-3D","(tuple)","<p>Alias for #match.\n",null,1],["===","Rinda::TemplateEntry","Rails/classes/Rinda/TemplateEntry.html#method-i-3D-3D-3D","(tuple)","",null,1],["===","String","Rails/classes/String.html#method-i-3D-3D-3D","(p1)","<p>Equality—If <em>obj</em> is not a <code>String</code>, returns\n<code>false</code>. Otherwise, returns <code>true</code> if <em>str</em>\n<code>&lt;=&gt;</code> <em>obj</em> returns …\n",null,1],["===","Symbol","Rails/classes/Symbol.html#method-i-3D-3D-3D","(p1)","<p>Equality—If <em>sym</em> and <em>obj</em> are exactly the same symbol,\nreturns <code>true</code>.\n",null,1],["===","SystemCallError","Rails/classes/SystemCallError.html#method-c-3D-3D-3D","(p1)","<p>Return <code>true</code> if the receiver is a generic\n<code>SystemCallError</code>, or if the error numbers <code>self</code> and\n<em>other</em> are …\n",null,1],["=~","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-3D-7E","(other)","<p>Like <code>String#=~</code> only it returns the character offset (in\ncodepoints) instead of the byte offset.\n<p>Example: …\n",null,0],["=~","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-3D-7E","(re)","<p>Compare #name and TZInfo identifier to a supplied regexp, returning true if\na match is found.\n",null,0],["=~","Mime::Type","Ruby/classes/Mime/Type.html#method-i-3D-7E","(mime_type)","",null,0],["=~","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-3D-7E","(other)","<p>Uses this dependency as a pattern to compare to <code>other</code>. This\ndependency will match if the name matches …\n",null,1],["=~","Gem::Platform","Rails/classes/Gem/Platform.html#method-i-3D-7E","(other)","<p>Does <code>other</code> match this platform?  If <code>other</code> is a\nString it will be converted to a Gem::Platform first. …\n",null,1],["=~","Gem::Requirement","Rails/classes/Gem/Requirement.html#method-i-3D-7E","(version)","",null,1],["=~","Object","Rails/classes/Object.html#method-i-3D-7E","(p1)","<p>Pattern Match—Overridden by descendants (notably <code>Regexp</code> and\n<code>String</code>) to provide meaningful pattern-match …\n",null,1],["=~","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-3D-7E","( path )","",null,1],["=~","Regexp","Rails/classes/Regexp.html#method-i-3D-7E","(p1)","<p>Match—Matches <em>rxp</em> against <em>str</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-regexp\">/at/</span> <span class=\"ruby-operator\">=~</span> <span class=\"ruby-string\">&quot;input data&quot;</span>   <span class=\"ruby-comment\">#=&gt; 7</span>\n<span class=\"ruby-regexp\">/ax/</span> <span class=\"ruby-operator\">=~</span> <span class=\"ruby-string\">&quot;input data&quot;</span>   <span class=\"ruby-comment\">#=&gt; nil</span>\n</pre>\n<p>If <code>=~</code> is used …\n",null,1],["=~","String","Rails/classes/String.html#method-i-3D-7E","(p1)","<p>Match—If <em>obj</em> is a <code>Regexp</code>, use it as a pattern to\nmatch against <em>str</em>,and returns the position the match …\n",null,1],["=~","Symbol","Rails/classes/Symbol.html#method-i-3D-7E","(p1)","<p>Returns <code>sym.to_s =~ obj</code>.\n",null,1],[">","BigDecimal","Rails/classes/BigDecimal.html#method-i-3E","(p1)","<p>Returns true if a is greater than b.  Values may be coerced to perform the\ncomparison (see ==, coerce). …\n",null,1],[">","Bignum","Rails/classes/Bignum.html#method-i-3E","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is greater than\nthat of <code>real</code>.\n",null,1],[">","Comparable","Rails/classes/Comparable.html#method-i-3E","(p1)","<p>Compares two objects based on the receiver’s <code>&lt;=&gt;</code> method,\nreturning true if it returns 1.\n",null,1],[">","Fixnum","Rails/classes/Fixnum.html#method-i-3E","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is greater than\nthat of <code>real</code>.\n",null,1],[">","Float","Rails/classes/Float.html#method-i-3E","(p1)","<p><code>true</code> if <code>flt</code> is greater than <code>real</code>.\n",null,1],[">","Module","Rails/classes/Module.html#method-i-3E","(p1)","<p>Returns true if <em>mod</em> is an ancestor of <em>other</em>. Returns\n<code>nil</code> if there’s no relationship between the two. …\n",null,1],[">","Shell::Filter","Rails/classes/Shell/Filter.html#method-i-3E","(to)","",null,1],[">=","BigDecimal","Rails/classes/BigDecimal.html#method-i-3E-3D","(p1)","<p>Returns true if a is greater than or equal to b. Values may be coerced to\nperform the comparison (see …\n",null,1],[">=","Bignum","Rails/classes/Bignum.html#method-i-3E-3D","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is greater than\nor equal to that of <code>real</code>.\n",null,1],[">=","Comparable","Rails/classes/Comparable.html#method-i-3E-3D","(p1)","<p>Compares two objects based on the receiver’s <code>&lt;=&gt;</code> method,\nreturning true if it returns 0 or 1.\n",null,1],[">=","Fixnum","Rails/classes/Fixnum.html#method-i-3E-3D","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is greater than\nor equal to that of <code>real</code>.\n",null,1],[">=","Float","Rails/classes/Float.html#method-i-3E-3D","(p1)","<p><code>true</code> if <code>flt</code> is greater than or equal to\n<code>real</code>.\n",null,1],[">=","Module","Rails/classes/Module.html#method-i-3E-3D","(p1)","<p>Returns true if <em>mod</em> is an ancestor of <em>other</em>, or the two\nmodules are the same. Returns <code>nil</code> if there’s …\n",null,1],[">>","Date","Ruby/classes/Date.html#method-i-3E-3E","(n)","<p>Backported from 1.9. The one in 1.8 leads to incorrect next_month and\nfriends for dates where the calendar …\n",null,0],[">>","Bignum","Rails/classes/Bignum.html#method-i-3E-3E","(p1)","<p>Shifts big right <em>numeric</em> positions (left if <em>numeric</em> is\nnegative).\n",null,1],[">>","Date","Rails/classes/Date.html#method-i-3E-3E","(p1)","<p>Returns a date object pointing n months after self.  The n should be a\nnumeric value.\n<p>For example:\n\n<pre>Date.new(2001,2,3) ...</pre>\n",null,1],[">>","Fixnum","Rails/classes/Fixnum.html#method-i-3E-3E","(p1)","<p>Shifts <em>fix</em> right <em>count</em> positions (left if <em>count</em>\nis negative).\n",null,1],[">>","IPAddr","Rails/classes/IPAddr.html#method-i-3E-3E","(num)","<p>Returns a new ipaddr built by bitwise right-shift.\n",null,1],[">>","Process::Status","Rails/classes/Process/Status.html#method-i-3E-3E","(p1)","<p>Shift the bits in <em>stat</em> right <em>num</em> places.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">fork</span> { <span class=\"ruby-identifier\">exit</span> <span class=\"ruby-value\">99</span> }   <span class=\"ruby-comment\">#=&gt; 26563</span>\n<span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">wait</span>       <span class=\"ruby-comment\">#=&gt; 26563</span>\n<span class=\"ruby-identifier\">$?</span>.<span class=\"ruby-identifier\">to_i</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],[">>","Rake::PseudoStatus","Rails/classes/Rake/PseudoStatus.html#method-i-3E-3E","(n)","",null,1],[">>","Shell::Filter","Rails/classes/Shell/Filter.html#method-i-3E-3E","(to)","",null,1],["ACL","","Rails/classes/ACL.html","","<p>Simple Access Control Lists.\n<p>Access control lists are composed of “allow” and “deny” …\n",null,1],["ACL::ACLEntry","","Rails/classes/ACL/ACLEntry.html","","<p>An entry in an ACL\n",null,1],["ACL::ACLList","","Rails/classes/ACL/ACLList.html","","<p>A list of ACLEntry objects.  Used to implement the allow and deny halves of\nan ACL\n",null,1],["APOP","Net::POP3","Rails/classes/Net/POP3.html#method-c-APOP","(isapop)","<p>Returns the APOP class if <code>isapop</code> is true; otherwise, returns\nthe POP class.  For example:\n\n<pre># Example 1 ...</pre>\n",null,1],["APOP","Net::POP3","Rails/classes/Net/POP3.html#method-c-APOP","(isapop)","<p>Returns the APOP class if <code>isapop</code> is true; otherwise, returns\nthe POP class.  For example:\n\n<pre># Example 1 ...</pre>\n",null,1],["APOP","Net::POP3","Rails/classes/Net/POP3.html#method-c-APOP","(isapop)","<p>Returns the APOP class if <code>isapop</code> is true; otherwise, returns\nthe POP class.  For example:\n\n<pre># Example 1 ...</pre>\n",null,1],["APOP","Net::POP3","Rails/classes/Net/POP3.html#method-c-APOP","(isapop)","<p>Returns the APOP class if <code>isapop</code> is true; otherwise, returns\nthe POP class.  For example:\n\n<pre># Example 1 ...</pre>\n",null,1],["ARGF","","Rails/classes/ARGF.html","","<p><code>ARGF</code> is a stream designed for use in scripts that process\nfiles given as command-line arguments or passed ...\n",null,1],["Abbrev","","Rails/classes/Abbrev.html","","<p>Calculate the set of unique abbreviations for a given set of strings.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'abbrev'</span>\n<span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'pp'</span>\n\n<span class=\"ruby-identifier\">pp</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["AbstractController","","Ruby/classes/AbstractController.html","","<p>Includes <code>url_for</code> into the host class (e.g. an abstract\ncontroller or mailer). The class has to provide …\n",null,0],["AbstractController::ActionNotFound","","Ruby/classes/AbstractController/ActionNotFound.html","","",null,0],["AbstractController::AssetPaths","","Ruby/classes/AbstractController/AssetPaths.html","","",null,0],["AbstractController::Base","","Ruby/classes/AbstractController/Base.html","","<p><code>AbstractController::Base</code> is a low-level API. Nobody should be\nusing it directly, and subclasses (like ...\n",null,0],["AbstractController::Callbacks","","Ruby/classes/AbstractController/Callbacks.html","","",null,0],["AbstractController::Callbacks::ClassMethods","","Ruby/classes/AbstractController/Callbacks/ClassMethods.html","","",null,0],["AbstractController::Collector","","Ruby/classes/AbstractController/Collector.html","","",null,0],["AbstractController::DoubleRenderError","","Ruby/classes/AbstractController/DoubleRenderError.html","","",null,0],["AbstractController::Error","","Ruby/classes/AbstractController/Error.html","","",null,0],["AbstractController::Helpers","","Ruby/classes/AbstractController/Helpers.html","","",null,0],["AbstractController::Helpers::ClassMethods","","Ruby/classes/AbstractController/Helpers/ClassMethods.html","","",null,0],["AbstractController::Layouts","","Ruby/classes/AbstractController/Layouts.html","","<p>Layouts reverse the common pattern of including shared headers and footers\nin many templates to isolate …\n",null,0],["AbstractController::Layouts::ClassMethods","","Ruby/classes/AbstractController/Layouts/ClassMethods.html","","",null,0],["AbstractController::Layouts::ClassMethods::LayoutConditions","","Ruby/classes/AbstractController/Layouts/ClassMethods/LayoutConditions.html","","<p>This module is mixed in if layout conditions are provided. This means that\nif no layout conditions are …\n",null,0],["AbstractController::Logger","","Ruby/classes/AbstractController/Logger.html","","",null,0],["AbstractController::Railties","","Ruby/classes/AbstractController/Railties.html","","",null,0],["AbstractController::Railties::RoutesHelpers","","Ruby/classes/AbstractController/Railties/RoutesHelpers.html","","",null,0],["AbstractController::Rendering","","Ruby/classes/AbstractController/Rendering.html","","",null,0],["AbstractController::Rendering::ClassMethods","","Ruby/classes/AbstractController/Rendering/ClassMethods.html","","",null,0],["AbstractController::Translation","","Ruby/classes/AbstractController/Translation.html","","",null,0],["AbstractController::UrlFor","","Ruby/classes/AbstractController/UrlFor.html","","",null,0],["AbstractController::UrlFor::ClassMethods","","Ruby/classes/AbstractController/UrlFor/ClassMethods.html","","",null,0],["AbstractController::ViewPaths","","Ruby/classes/AbstractController/ViewPaths.html","","",null,0],["AbstractController::ViewPaths::ClassMethods","","Ruby/classes/AbstractController/ViewPaths/ClassMethods.html","","",null,0],["ActionController","","Ruby/classes/ActionController.html","","<p>Includes <code>url_for</code> into the host class. The class has to provide\na <code>RouteSet</code> by implementing  the <code>_routes</code> …\n",null,0],["ActionController::Base","","Ruby/classes/ActionController/Base.html","","<p>Action Controllers are the core of a web request in Rails. They are made up\nof one or more actions that …\n",null,0],["ActionController::Caching","","Ruby/classes/ActionController/Caching.html","","<p>Caching is a cheap way of speeding up slow applications by keeping the\nresult of calculations, renderings, …\n",null,0],["ActionController::Caching::Actions","","Ruby/classes/ActionController/Caching/Actions.html","","<p>Action caching is similar to page caching by the fact that the entire\noutput of the response is cached, …\n",null,0],["ActionController::Caching::Actions::ActionCachePath","","Ruby/classes/ActionController/Caching/Actions/ActionCachePath.html","","",null,0],["ActionController::Caching::Actions::ClassMethods","","Ruby/classes/ActionController/Caching/Actions/ClassMethods.html","","",null,0],["ActionController::Caching::ConfigMethods","","Ruby/classes/ActionController/Caching/ConfigMethods.html","","",null,0],["ActionController::Caching::Fragments","","Ruby/classes/ActionController/Caching/Fragments.html","","<p>Fragment caching is used for caching various blocks within  views without\ncaching the entire action as …\n",null,0],["ActionController::Caching::Pages","","Ruby/classes/ActionController/Caching/Pages.html","","<p>Page caching is an approach to caching where the entire action output of is\nstored as a HTML file that …\n",null,0],["ActionController::Caching::Pages::ClassMethods","","Ruby/classes/ActionController/Caching/Pages/ClassMethods.html","","",null,0],["ActionController::Caching::Sweeping","","Ruby/classes/ActionController/Caching/Sweeping.html","","<p>Sweepers are the terminators of the caching world and responsible for\nexpiring caches when model objects …\n",null,0],["ActionController::Compatibility","","Ruby/classes/ActionController/Compatibility.html","","",null,0],["ActionController::ConditionalGet","","Ruby/classes/ActionController/ConditionalGet.html","","",null,0],["ActionController::Cookies","","Ruby/classes/ActionController/Cookies.html","","",null,0],["ActionController::DataStreaming","","Ruby/classes/ActionController/DataStreaming.html","","<p>Methods for sending arbitrary data and for streaming files to the browser,\ninstead of rendering.\n",null,0],["ActionController::Flash","","Ruby/classes/ActionController/Flash.html","","",null,0],["ActionController::ForceSSL","","Ruby/classes/ActionController/ForceSSL.html","","<p>This module provides a method which will redirect browser to use HTTPS\nprotocol. This will ensure that …\n",null,0],["ActionController::ForceSSL::ClassMethods","","Ruby/classes/ActionController/ForceSSL/ClassMethods.html","","",null,0],["ActionController::Head","","Ruby/classes/ActionController/Head.html","","",null,0],["ActionController::Helpers","","Ruby/classes/ActionController/Helpers.html","","<p>The Rails framework provides a large number of helpers for working with\nassets, dates, forms, numbers …\n",null,0],["ActionController::Helpers::ClassMethods","","Ruby/classes/ActionController/Helpers/ClassMethods.html","","",null,0],["ActionController::HideActions","","Ruby/classes/ActionController/HideActions.html","","<p>Adds the ability to prevent public methods on a controller to be called as\nactions.\n",null,0],["ActionController::HideActions::ClassMethods","","Ruby/classes/ActionController/HideActions/ClassMethods.html","","",null,0],["ActionController::HttpAuthentication","","Ruby/classes/ActionController/HttpAuthentication.html","","",null,0],["ActionController::HttpAuthentication::Basic","","Ruby/classes/ActionController/HttpAuthentication/Basic.html","","<p>Makes it dead easy to do HTTP Basic and Digest authentication.\n<p>Simple Basic example\n\n<pre class=\"ruby\"> <span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">PostsController</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["ActionController::HttpAuthentication::Basic::ControllerMethods","","Ruby/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html","","",null,0],["ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods","","Ruby/classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html","","",null,0],["ActionController::HttpAuthentication::Digest","","Ruby/classes/ActionController/HttpAuthentication/Digest.html","","",null,0],["ActionController::HttpAuthentication::Digest::ControllerMethods","","Ruby/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html","","",null,0],["ActionController::HttpAuthentication::Token","","Ruby/classes/ActionController/HttpAuthentication/Token.html","","<p>Makes it dead easy to do HTTP Token authentication.\n<p>Simple Token example:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">PostsController</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ApplicationController</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["ActionController::HttpAuthentication::Token::ControllerMethods","","Ruby/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html","","",null,0],["ActionController::ImplicitRender","","Ruby/classes/ActionController/ImplicitRender.html","","",null,0],["ActionController::Instrumentation","","Ruby/classes/ActionController/Instrumentation.html","","<p>Adds instrumentation to several ends in ActionController::Base. It also\nprovides some hooks related with …\n",null,0],["ActionController::Instrumentation::ClassMethods","","Ruby/classes/ActionController/Instrumentation/ClassMethods.html","","",null,0],["ActionController::LogSubscriber","","Ruby/classes/ActionController/LogSubscriber.html","","",null,0],["ActionController::Metal","","Ruby/classes/ActionController/Metal.html","","<p><code>ActionController::Metal</code> is the simplest possible controller,\nproviding a valid Rack interface without ...\n",null,0],["ActionController::Middleware","","Ruby/classes/ActionController/Middleware.html","","",null,0],["ActionController::Middleware::ActionMiddleware","","Ruby/classes/ActionController/Middleware/ActionMiddleware.html","","",null,0],["ActionController::MimeResponds","","Ruby/classes/ActionController/MimeResponds.html","","",null,0],["ActionController::MimeResponds::ClassMethods","","Ruby/classes/ActionController/MimeResponds/ClassMethods.html","","",null,0],["ActionController::ParamsWrapper","","Ruby/classes/ActionController/ParamsWrapper.html","","<p>Wraps the parameters hash into a nested hash. This will allow clients to\nsubmit POST requests without …\n",null,0],["ActionController::ParamsWrapper::ClassMethods","","Ruby/classes/ActionController/ParamsWrapper/ClassMethods.html","","",null,0],["ActionController::RackDelegation","","Ruby/classes/ActionController/RackDelegation.html","","",null,0],["ActionController::Railtie","","Ruby/classes/ActionController/Railtie.html","","",null,0],["ActionController::Railties","","Ruby/classes/ActionController/Railties.html","","",null,0],["ActionController::Railties::Paths","","Ruby/classes/ActionController/Railties/Paths.html","","",null,0],["ActionController::RecordIdentifier","","Ruby/classes/ActionController/RecordIdentifier.html","","<p>The record identifier encapsulates a number of naming conventions for\ndealing with records, like Active …\n",null,0],["ActionController::Redirecting","","Ruby/classes/ActionController/Redirecting.html","","",null,0],["ActionController::Renderers","","Ruby/classes/ActionController/Renderers.html","","",null,0],["ActionController::Renderers::All","","Ruby/classes/ActionController/Renderers/All.html","","",null,0],["ActionController::Renderers::ClassMethods","","Ruby/classes/ActionController/Renderers/ClassMethods.html","","",null,0],["ActionController::Rendering","","Ruby/classes/ActionController/Rendering.html","","",null,0],["ActionController::RequestForgeryProtection","","Ruby/classes/ActionController/RequestForgeryProtection.html","","<p>Controller actions are protected from Cross-Site Request Forgery (CSRF)\nattacks by including a token …\n",null,0],["ActionController::RequestForgeryProtection::ClassMethods","","Ruby/classes/ActionController/RequestForgeryProtection/ClassMethods.html","","",null,0],["ActionController::Rescue","","Ruby/classes/ActionController/Rescue.html","","<p>This module is responsible to provide `rescue_from` helpers to controllers\nand configure when detailed …\n",null,0],["ActionController::Responder","","Ruby/classes/ActionController/Responder.html","","<p>Responsible for exposing a resource to different mime requests, usually\ndepending on the HTTP verb.  …\n",null,0],["ActionController::SessionManagement","","Ruby/classes/ActionController/SessionManagement.html","","",null,0],["ActionController::SessionManagement::ClassMethods","","Ruby/classes/ActionController/SessionManagement/ClassMethods.html","","",null,0],["ActionController::Streaming","","Ruby/classes/ActionController/Streaming.html","","<p>Allows views to be streamed back to the client as they are rendered.\n<p>The default way Rails renders views …\n",null,0],["ActionController::UrlFor","","Ruby/classes/ActionController/UrlFor.html","","",null,0],["ActionDispatch","","Ruby/classes/ActionDispatch.html","","<p>Keep this file meanwhile github.com/rack/rack/pull/313 is not released\n",null,0],["ActionDispatch::BestStandardsSupport","","Ruby/classes/ActionDispatch/BestStandardsSupport.html","","",null,0],["ActionDispatch::BodyProxy","","Ruby/classes/ActionDispatch/BodyProxy.html","","",null,0],["ActionDispatch::Callbacks","","Ruby/classes/ActionDispatch/Callbacks.html","","<p>Provide callbacks to be executed before and after the request dispatch.\n",null,0],["ActionDispatch::Cookies","","Ruby/classes/ActionDispatch/Cookies.html","","<p>Cookies are read and written through ActionController#cookies.\n<p>The cookies being read are the ones received …\n",null,0],["ActionDispatch::Cookies::CookieOverflow","","Ruby/classes/ActionDispatch/Cookies/CookieOverflow.html","","<p>Raised when storing more than 4K of session data.\n",null,0],["ActionDispatch::DebugExceptions","","Ruby/classes/ActionDispatch/DebugExceptions.html","","<p>This middleware is responsible for logging exceptions and showing a\ndebugging page in case the request …\n",null,0],["ActionDispatch::ExceptionWrapper","","Ruby/classes/ActionDispatch/ExceptionWrapper.html","","",null,0],["ActionDispatch::FileHandler","","Ruby/classes/ActionDispatch/FileHandler.html","","",null,0],["ActionDispatch::Flash","","Ruby/classes/ActionDispatch/Flash.html","","<p>The flash provides a way to pass temporary objects between actions.\nAnything you place in the flash will …\n",null,0],["ActionDispatch::Flash::FlashHash","","Ruby/classes/ActionDispatch/Flash/FlashHash.html","","<p>Implementation detail: please do not change the signature of the FlashHash\nclass. Doing that will likely …\n",null,0],["ActionDispatch::Head","","Ruby/classes/ActionDispatch/Head.html","","",null,0],["ActionDispatch::Http","","Ruby/classes/ActionDispatch/Http.html","","",null,0],["ActionDispatch::Http::Cache","","Ruby/classes/ActionDispatch/Http/Cache.html","","",null,0],["ActionDispatch::Http::Cache::Request","","Ruby/classes/ActionDispatch/Http/Cache/Request.html","","",null,0],["ActionDispatch::Http::Cache::Response","","Ruby/classes/ActionDispatch/Http/Cache/Response.html","","",null,0],["ActionDispatch::Http::FilterParameters","","Ruby/classes/ActionDispatch/Http/FilterParameters.html","","<p>Allows you to specify sensitive parameters which will be replaced from the\nrequest log by looking in …\n",null,0],["ActionDispatch::Http::Headers","","Ruby/classes/ActionDispatch/Http/Headers.html","","",null,0],["ActionDispatch::Http::MimeNegotiation","","Ruby/classes/ActionDispatch/Http/MimeNegotiation.html","","",null,0],["ActionDispatch::Http::ParameterFilter","","Ruby/classes/ActionDispatch/Http/ParameterFilter.html","","",null,0],["ActionDispatch::Http::Parameters","","Ruby/classes/ActionDispatch/Http/Parameters.html","","",null,0],["ActionDispatch::Http::URL","","Ruby/classes/ActionDispatch/Http/URL.html","","",null,0],["ActionDispatch::Http::Upload","","Ruby/classes/ActionDispatch/Http/Upload.html","","",null,0],["ActionDispatch::Http::UploadedFile","","Ruby/classes/ActionDispatch/Http/UploadedFile.html","","",null,0],["ActionDispatch::MiddlewareStack","","Ruby/classes/ActionDispatch/MiddlewareStack.html","","",null,0],["ActionDispatch::MiddlewareStack::Middleware","","Ruby/classes/ActionDispatch/MiddlewareStack/Middleware.html","","",null,0],["ActionDispatch::ParamsParser","","Ruby/classes/ActionDispatch/ParamsParser.html","","",null,0],["ActionDispatch::PublicExceptions","","Ruby/classes/ActionDispatch/PublicExceptions.html","","<p>A simple Rack application that renders exceptions in the given public path.\n",null,0],["ActionDispatch::RailsEntityStore","","Ruby/classes/ActionDispatch/RailsEntityStore.html","","",null,0],["ActionDispatch::RailsMetaStore","","Ruby/classes/ActionDispatch/RailsMetaStore.html","","",null,0],["ActionDispatch::Railtie","","Ruby/classes/ActionDispatch/Railtie.html","","",null,0],["ActionDispatch::Reloader","","Ruby/classes/ActionDispatch/Reloader.html","","<p>ActionDispatch::Reloader provides prepare and cleanup callbacks, intended\nto assist with code reloading …\n",null,0],["ActionDispatch::RemoteIp","","Ruby/classes/ActionDispatch/RemoteIp.html","","",null,0],["ActionDispatch::RemoteIp::GetIp","","Ruby/classes/ActionDispatch/RemoteIp/GetIp.html","","",null,0],["ActionDispatch::RemoteIp::IpSpoofAttackError","","Ruby/classes/ActionDispatch/RemoteIp/IpSpoofAttackError.html","","",null,0],["ActionDispatch::Request","","Ruby/classes/ActionDispatch/Request.html","","",null,0],["ActionDispatch::RequestId","","Ruby/classes/ActionDispatch/RequestId.html","","<p>Makes a unique request id available to the action_dispatch.request_id env\nvariable (which is then accessible …\n",null,0],["ActionDispatch::Rescue","","Ruby/classes/ActionDispatch/Rescue.html","","",null,0],["ActionDispatch::Response","","Ruby/classes/ActionDispatch/Response.html","","<p>Represents an HTTP response generated by a controller action. Use it to\nretrieve the current state of …\n",null,0],["ActionDispatch::Routing","","Ruby/classes/ActionDispatch/Routing.html","","<p>The routing module provides URL rewriting in native Ruby. It’s a way to\nredirect incoming requests to …\n",null,0],["ActionDispatch::Routing::Mapper","","Ruby/classes/ActionDispatch/Routing/Mapper.html","","",null,0],["ActionDispatch::Routing::Mapper::Base","","Ruby/classes/ActionDispatch/Routing/Mapper/Base.html","","",null,0],["ActionDispatch::Routing::Mapper::HttpHelpers","","Ruby/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html","","",null,0],["ActionDispatch::Routing::Mapper::Resources","","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html","","<p>Resource routing allows you to quickly declare all of the common routes for\na given resourceful controller. …\n",null,0],["ActionDispatch::Routing::Mapper::Scoping","","Ruby/classes/ActionDispatch/Routing/Mapper/Scoping.html","","<p>You may wish to organize groups of controllers under a namespace. Most\ncommonly, you might group a number …\n",null,0],["ActionDispatch::Routing::PolymorphicRoutes","","Ruby/classes/ActionDispatch/Routing/PolymorphicRoutes.html","","<p>Polymorphic URL helpers are methods for smart resolution to a named route\ncall when given an Active  …\n",null,0],["ActionDispatch::Routing::Redirection","","Ruby/classes/ActionDispatch/Routing/Redirection.html","","",null,0],["ActionDispatch::Routing::RouteSet","","Ruby/classes/ActionDispatch/Routing/RouteSet.html","","",null,0],["ActionDispatch::Routing::RouteSet::MountedHelpers","","Ruby/classes/ActionDispatch/Routing/RouteSet/MountedHelpers.html","","",null,0],["ActionDispatch::Routing::UrlFor","","Ruby/classes/ActionDispatch/Routing/UrlFor.html","","<p>In <code>config/routes.rb</code> you define URL-to-controller mappings, but\nthe reverse is also possible: an URL can …\n",null,0],["ActionDispatch::Session","","Ruby/classes/ActionDispatch/Session.html","","",null,0],["ActionDispatch::Session::AbstractStore","","Ruby/classes/ActionDispatch/Session/AbstractStore.html","","",null,0],["ActionDispatch::Session::CacheStore","","Ruby/classes/ActionDispatch/Session/CacheStore.html","","<p>Session store that uses an ActiveSupport::Cache::Store to store the\nsessions. This store is most useful …\n",null,0],["ActionDispatch::Session::Compatibility","","Ruby/classes/ActionDispatch/Session/Compatibility.html","","",null,0],["ActionDispatch::Session::CookieStore","","Ruby/classes/ActionDispatch/Session/CookieStore.html","","<p>This cookie-based session store is the Rails default. Sessions typically\ncontain at most a user_id and …\n",null,0],["ActionDispatch::Session::DestroyableSession","","Ruby/classes/ActionDispatch/Session/DestroyableSession.html","","",null,0],["ActionDispatch::Session::MemCacheStore","","Ruby/classes/ActionDispatch/Session/MemCacheStore.html","","",null,0],["ActionDispatch::Session::StaleSessionCheck","","Ruby/classes/ActionDispatch/Session/StaleSessionCheck.html","","",null,0],["ActionDispatch::ShowExceptions","","Ruby/classes/ActionDispatch/ShowExceptions.html","","<p>This middleware rescues any exception returned by the application and calls\nan exceptions app that will …\n",null,0],["ActionDispatch::Static","","Ruby/classes/ActionDispatch/Static.html","","",null,0],["ActionMailer","","Ruby/classes/ActionMailer.html","","",null,0],["ActionMailer::Base","","Ruby/classes/ActionMailer/Base.html","","<p>Action Mailer allows you to send email from your application using a mailer\nmodel and views.\n<p>Mailer Models …\n",null,0],["ActionMailer::Collector","","Ruby/classes/ActionMailer/Collector.html","","",null,0],["ActionMailer::DeliveryMethods","","Ruby/classes/ActionMailer/DeliveryMethods.html","","<p>This module handles everything related to mail delivery, from registering\nnew delivery methods to configuring …\n",null,0],["ActionMailer::DeliveryMethods::ClassMethods","","Ruby/classes/ActionMailer/DeliveryMethods/ClassMethods.html","","",null,0],["ActionMailer::LogSubscriber","","Ruby/classes/ActionMailer/LogSubscriber.html","","",null,0],["ActionMailer::MailHelper","","Ruby/classes/ActionMailer/MailHelper.html","","",null,0],["ActionMailer::Railtie","","Ruby/classes/ActionMailer/Railtie.html","","",null,0],["ActionPack","","Ruby/classes/ActionPack.html","","",null,0],["ActionView","","Ruby/classes/ActionView.html","","",null,0],["ActionView::Base","","Ruby/classes/ActionView/Base.html","","<p>Action View Base\n<p>Action View templates can be written in several ways. If the template file\nhas a <code>.erb</code> …\n",null,0],["ActionView::Context","","Ruby/classes/ActionView/Context.html","","<p>Action View Context\n<p>Action View contexts are supplied to Action Controller to render template.\nThe default …\n",null,0],["ActionView::FileSystemResolver","","Ruby/classes/ActionView/FileSystemResolver.html","","<p>A resolver that loads files from the filesystem. It allows to set your own\nresolving pattern. Such pattern …\n",null,0],["ActionView::Helpers","","Ruby/classes/ActionView/Helpers.html","","<p>Active Model Helpers\n<p>Action View Cache Helper\n<p>Action View Capture Helper\n",null,0],["ActionView::Helpers::ActiveModelHelper","","Ruby/classes/ActionView/Helpers/ActiveModelHelper.html","","",null,0],["ActionView::Helpers::ActiveModelInstanceTag","","Ruby/classes/ActionView/Helpers/ActiveModelInstanceTag.html","","",null,0],["ActionView::Helpers::AssetPaths","","Ruby/classes/ActionView/AssetPaths.html","","",null,0],["ActionView::Helpers::AssetTagHelper","","Ruby/classes/ActionView/Helpers/AssetTagHelper.html","","<p>This module provides methods for generating HTML that links views to assets\nsuch as images, javascripts, …\n",null,0],["ActionView::Helpers::AssetTagHelper::AssetIncludeTag","","Ruby/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html","","",null,0],["ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html","","",null,0],["ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html","","",null,0],["ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers::ClassMethods","","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers/ClassMethods.html","","",null,0],["ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html","","",null,0],["ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html","","",null,0],["ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers::ClassMethods","","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers/ClassMethods.html","","",null,0],["ActionView::Helpers::AtomFeedHelper","","Ruby/classes/ActionView/Helpers/AtomFeedHelper.html","","",null,0],["ActionView::Helpers::AtomFeedHelper::AtomBuilder","","Ruby/classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html","","",null,0],["ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","","Ruby/classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html","","",null,0],["ActionView::Helpers::CacheHelper","","Ruby/classes/ActionView/Helpers/CacheHelper.html","","",null,0],["ActionView::Helpers::CaptureHelper","","Ruby/classes/ActionView/Helpers/CaptureHelper.html","","<p>CaptureHelper exposes methods to let you extract generated markup which can\nbe used in other parts of …\n",null,0],["ActionView::Helpers::CsrfHelper","","Ruby/classes/ActionView/Helpers/CsrfHelper.html","","",null,0],["ActionView::Helpers::DateHelper","","Ruby/classes/ActionView/Helpers/DateHelper.html","","<p>Action View Date Helpers\n<p>The Date Helper primarily creates select/option tags for different kinds of\ndates …\n",null,0],["ActionView::Helpers::DateHelperInstanceTag","","Ruby/classes/ActionView/Helpers/DateHelperInstanceTag.html","","",null,0],["ActionView::Helpers::DebugHelper","","Ruby/classes/ActionView/Helpers/DebugHelper.html","","",null,0],["ActionView::Helpers::FormBuilder","","Ruby/classes/ActionView/Helpers/FormBuilder.html","","",null,0],["ActionView::Helpers::FormHelper","","Ruby/classes/ActionView/Helpers/FormHelper.html","","<p>Form helpers are designed to make working with resources much easier\ncompared to using vanilla HTML. …\n",null,0],["ActionView::Helpers::FormOptionsHelper","","Ruby/classes/ActionView/Helpers/FormOptionsHelper.html","","<p>Provides a number of methods for turning different kinds of containers into\na set of option tags.\n<p>Options …\n",null,0],["ActionView::Helpers::FormTagHelper","","Ruby/classes/ActionView/Helpers/FormTagHelper.html","","<p>Provides a number of methods for creating form tags that doesn’t rely on an\nActive Record object assigned …\n",null,0],["ActionView::Helpers::InstanceTag","","Ruby/classes/ActionView/Helpers/InstanceTag.html","","",null,0],["ActionView::Helpers::JavaScriptHelper","","Ruby/classes/ActionView/Helpers/JavaScriptHelper.html","","",null,0],["ActionView::Helpers::NumberHelper","","Ruby/classes/ActionView/Helpers/NumberHelper.html","","<p>Provides methods for converting numbers into formatted strings. Methods are\nprovided for phone numbers, …\n",null,0],["ActionView::Helpers::NumberHelper::InvalidNumberError","","Ruby/classes/ActionView/Helpers/NumberHelper/InvalidNumberError.html","","<p>Raised when argument <code>number</code> param given to the helpers is\ninvalid and the option :raise is set to  <code>true</code> …\n",null,0],["ActionView::Helpers::OutputSafetyHelper","","Ruby/classes/ActionView/Helpers/OutputSafetyHelper.html","","",null,0],["ActionView::Helpers::RecordTagHelper","","Ruby/classes/ActionView/Helpers/RecordTagHelper.html","","",null,0],["ActionView::Helpers::RenderingHelper","","Ruby/classes/ActionView/Helpers/RenderingHelper.html","","<p>Action View Rendering\n<p>Implements methods that allow rendering from a view context. In order to\nuse this …\n",null,0],["ActionView::Helpers::SanitizeHelper","","Ruby/classes/ActionView/Helpers/SanitizeHelper.html","","<p>The SanitizeHelper module provides a set of methods for scrubbing text of\nundesired HTML elements. These …\n",null,0],["ActionView::Helpers::TagHelper","","Ruby/classes/ActionView/Helpers/TagHelper.html","","<p>Provides methods to generate HTML tags programmatically when you can’t use\na Builder. By default, they …\n",null,0],["ActionView::Helpers::TextHelper","","Ruby/classes/ActionView/Helpers/TextHelper.html","","<p>The TextHelper module provides a set of methods for filtering, formatting\nand transforming strings, which …\n",null,0],["ActionView::Helpers::TranslationHelper","","Ruby/classes/ActionView/Helpers/TranslationHelper.html","","",null,0],["ActionView::Helpers::UrlHelper","","Ruby/classes/ActionView/Helpers/UrlHelper.html","","<p>Provides a set of methods for making links and getting URLs that depend on\nthe routing subsystem (see …\n",null,0],["ActionView::LogSubscriber","","Ruby/classes/ActionView/LogSubscriber.html","","<p>Action View Log Subscriber\n<p>Provides functionality so that Rails can output logs from Action View.\n",null,0],["ActionView::LookupContext","","Ruby/classes/ActionView/LookupContext.html","","",null,0],["ActionView::LookupContext::DetailsCache","","Ruby/classes/ActionView/LookupContext/DetailsCache.html","","<p>Add caching behavior on top of Details.\n",null,0],["ActionView::LookupContext::ViewPaths","","Ruby/classes/ActionView/LookupContext/ViewPaths.html","","<p>Helpers related to template lookup using the lookup context information.\n",null,0],["ActionView::PartialRenderer","","Ruby/classes/ActionView/PartialRenderer.html","","<p>Action View Partials\n<p>There’s also a convenience method for rendering sub templates within the\ncurrent …\n",null,0],["ActionView::Railtie","","Ruby/classes/ActionView/Railtie.html","","<p>Action View Railtie\n",null,0],["ActionView::Renderer","","Ruby/classes/ActionView/Renderer.html","","<p>This is the main entry point for rendering. It basically delegates to other\nobjects like TemplateRenderer …\n",null,0],["ActionView::Resolver","","Ruby/classes/ActionView/Resolver.html","","<p>Action View Resolver\n",null,0],["ActionView::Resolver::Path","","Ruby/classes/ActionView/Resolver/Path.html","","<p>Keeps all information about view path and builds virtual path.\n",null,0],["ActionView::Template","","Ruby/classes/ActionView/Template.html","","<p>Action View Template Handlers\n<p>Action View Text Template\n<p>Action View Template\n",null,0],["ActionView::Template::Handlers","","Ruby/classes/ActionView/Template/Handlers.html","","",null,0],["ActionView::Template::Handlers::Builder","","Ruby/classes/ActionView/Template/Handlers/Builder.html","","",null,0],["ActionView::Template::Handlers::ERB","","Ruby/classes/ActionView/Template/Handlers/ERB.html","","",null,0],["ActionView::Template::Handlers::Erubis","","Ruby/classes/ActionView/Template/Handlers/Erubis.html","","",null,0],["ActiveModel","","Ruby/classes/ActiveModel.html","","",null,0],["ActiveModel::AttributeMethods","","Ruby/classes/ActiveModel/AttributeMethods.html","","<p>Active Model Attribute Methods\n<p><code>ActiveModel::AttributeMethods</code> provides a way to add prefixes\nand suffixes ...\n",null,0],["ActiveModel::AttributeMethods::ClassMethods","","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods.html","","",null,0],["ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html","","",null,0],["ActiveModel::BlockValidator","","Ruby/classes/ActiveModel/BlockValidator.html","","<p><code>BlockValidator</code> is a special <code>EachValidator</code> which\nreceives a block on initialization and call this block ...\n",null,0],["ActiveModel::Callbacks","","Ruby/classes/ActiveModel/Callbacks.html","","<p>Active Model Callbacks\n<p>Provides an interface for any class to have Active Record like callbacks.\n<p>Like the …\n",null,0],["ActiveModel::Conversion","","Ruby/classes/ActiveModel/Conversion.html","","<p>Active Model Conversions\n<p>Handles default conversions: to_model, to_key, to_param, and\nto_partial_path. …\n",null,0],["ActiveModel::Dirty","","Ruby/classes/ActiveModel/Dirty.html","","<p>Active Model Dirty\n<p>Provides a way to track changes in your object in the same way as Active\nRecord does. …\n",null,0],["ActiveModel::EachValidator","","Ruby/classes/ActiveModel/EachValidator.html","","<p><code>EachValidator</code> is a validator which iterates through the\nattributes given in the options hash invoking ...\n",null,0],["ActiveModel::Errors","","Ruby/classes/ActiveModel/Errors.html","","<p>Active Model Errors\n<p>Provides a modified <code>OrderedHash</code> that you can include in your\nobject for handling error …\n",null,0],["ActiveModel::Lint","","Ruby/classes/ActiveModel/Lint.html","","",null,0],["ActiveModel::Lint::Tests","","Ruby/classes/ActiveModel/Lint/Tests.html","","<p>Active Model Lint Tests\n<p>You can test whether an object is compliant with the Active Model API by\nincluding …\n",null,0],["ActiveModel::MassAssignmentSecurity","","Ruby/classes/ActiveModel/MassAssignmentSecurity.html","","<p>Active Model Mass-Assignment Security\n",null,0],["ActiveModel::MassAssignmentSecurity::BlackList","","Ruby/classes/ActiveModel/MassAssignmentSecurity/BlackList.html","","",null,0],["ActiveModel::MassAssignmentSecurity::ClassMethods","","Ruby/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html","","<p>Mass assignment security provides an interface for protecting attributes\nfrom end-user assignment. For …\n",null,0],["ActiveModel::MassAssignmentSecurity::Error","","Ruby/classes/ActiveModel/MassAssignmentSecurity/Error.html","","",null,0],["ActiveModel::MassAssignmentSecurity::LoggerSanitizer","","Ruby/classes/ActiveModel/MassAssignmentSecurity/LoggerSanitizer.html","","",null,0],["ActiveModel::MassAssignmentSecurity::PermissionSet","","Ruby/classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html","","",null,0],["ActiveModel::MassAssignmentSecurity::Sanitizer","","Ruby/classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html","","",null,0],["ActiveModel::MassAssignmentSecurity::StrictSanitizer","","Ruby/classes/ActiveModel/MassAssignmentSecurity/StrictSanitizer.html","","",null,0],["ActiveModel::MassAssignmentSecurity::WhiteList","","Ruby/classes/ActiveModel/MassAssignmentSecurity/WhiteList.html","","",null,0],["ActiveModel::MissingAttributeError","","Ruby/classes/ActiveModel/MissingAttributeError.html","","",null,0],["ActiveModel::Name","","Ruby/classes/ActiveModel/Name.html","","",null,0],["ActiveModel::Naming","","Ruby/classes/ActiveModel/Naming.html","","<p>Active Model Naming\n<p>Creates a <code>model_name</code> method on your object.\n<p>To implement, just extend ActiveModel::Naming …\n",null,0],["ActiveModel::Observer","","Ruby/classes/ActiveModel/Observer.html","","<p>Active Model Observers\n<p>Observer classes respond to life cycle callbacks to implement trigger-like\nbehavior …\n",null,0],["ActiveModel::ObserverArray","","Ruby/classes/ActiveModel/ObserverArray.html","","<p>Stores the enabled/disabled state of individual observers for a particular\nmodel class.\n",null,0],["ActiveModel::Observing","","Ruby/classes/ActiveModel/Observing.html","","",null,0],["ActiveModel::Observing::ClassMethods","","Ruby/classes/ActiveModel/Observing/ClassMethods.html","","",null,0],["ActiveModel::SecurePassword","","Ruby/classes/ActiveModel/SecurePassword.html","","",null,0],["ActiveModel::SecurePassword::ClassMethods","","Ruby/classes/ActiveModel/SecurePassword/ClassMethods.html","","",null,0],["ActiveModel::SecurePassword::InstanceMethodsOnActivation","","Ruby/classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html","","",null,0],["ActiveModel::Serialization","","Ruby/classes/ActiveModel/Serialization.html","","<p>Active Model Serialization\n<p>Provides a basic serialization to a serializable_hash for your object.\n<p>A minimal …\n",null,0],["ActiveModel::Serializers","","Ruby/classes/ActiveModel/Serializers.html","","",null,0],["ActiveModel::Serializers::JSON","","Ruby/classes/ActiveModel/Serializers/JSON.html","","<p>Active Model JSON Serializer\n",null,0],["ActiveModel::Serializers::Xml","","Ruby/classes/ActiveModel/Serializers/Xml.html","","<p>Active Model XML Serializer\n",null,0],["ActiveModel::StrictValidationFailed","","Ruby/classes/ActiveModel/StrictValidationFailed.html","","",null,0],["ActiveModel::Translation","","Ruby/classes/ActiveModel/Translation.html","","<p>Active Model Translation\n<p>Provides integration between your object and the Rails internationalization\n(i18n) …\n",null,0],["ActiveModel::Validations","","Ruby/classes/ActiveModel/Validations.html","","<p>Active Model Acceptance Validator\n<p>Active Model Confirmation Validator\n<p>Active Model Exclusion Validator …\n",null,0],["ActiveModel::Validations::AcceptanceValidator","","Ruby/classes/ActiveModel/Validations/AcceptanceValidator.html","","",null,0],["ActiveModel::Validations::Callbacks","","Ruby/classes/ActiveModel/Validations/Callbacks.html","","",null,0],["ActiveModel::Validations::Callbacks::ClassMethods","","Ruby/classes/ActiveModel/Validations/Callbacks/ClassMethods.html","","",null,0],["ActiveModel::Validations::ClassMethods","","Ruby/classes/ActiveModel/Validations/ClassMethods.html","","",null,0],["ActiveModel::Validations::ConfirmationValidator","","Ruby/classes/ActiveModel/Validations/ConfirmationValidator.html","","",null,0],["ActiveModel::Validations::ExclusionValidator","","Ruby/classes/ActiveModel/Validations/ExclusionValidator.html","","",null,0],["ActiveModel::Validations::FormatValidator","","Ruby/classes/ActiveModel/Validations/FormatValidator.html","","",null,0],["ActiveModel::Validations::HelperMethods","","Ruby/classes/ActiveModel/Validations/HelperMethods.html","","",null,0],["ActiveModel::Validations::InclusionValidator","","Ruby/classes/ActiveModel/Validations/InclusionValidator.html","","",null,0],["ActiveModel::Validations::LengthValidator","","Ruby/classes/ActiveModel/Validations/LengthValidator.html","","",null,0],["ActiveModel::Validations::NumericalityValidator","","Ruby/classes/ActiveModel/Validations/NumericalityValidator.html","","",null,0],["ActiveModel::Validations::PresenceValidator","","Ruby/classes/ActiveModel/Validations/PresenceValidator.html","","",null,0],["ActiveModel::Validations::WithValidator","","Ruby/classes/ActiveModel/Validations/WithValidator.html","","",null,0],["ActiveModel::Validator","","Ruby/classes/ActiveModel/Validator.html","","<p>Active Model Validator\n<p>A simple base class that can be used along with\nActiveModel::Validations::ClassMethods.validates_with …\n",null,0],["ActiveRecord","","Ruby/classes/ActiveRecord.html","","",null,0],["ActiveRecord::ActiveRecordError","","Ruby/classes/ActiveRecord/ActiveRecordError.html","","<p>Active Record Errors\n<p>Generic Active Record exception class.\n",null,0],["ActiveRecord::AdapterNotFound","","Ruby/classes/ActiveRecord/AdapterNotFound.html","","<p>Raised when Active Record cannot find database adapter specified in\n<code>config/database.yml</code> or programmatically. …\n",null,0],["ActiveRecord::AdapterNotSpecified","","Ruby/classes/ActiveRecord/AdapterNotSpecified.html","","<p>Raised when adapter not specified on connection (or configuration file\n<code>config/database.yml</code> misses adapter …\n",null,0],["ActiveRecord::Aggregations","","Ruby/classes/ActiveRecord/Aggregations.html","","",null,0],["ActiveRecord::Aggregations::ClassMethods","","Ruby/classes/ActiveRecord/Aggregations/ClassMethods.html","","<p>Active Record implements aggregation through a macro-like class method\ncalled <code>composed_of</code> for representing …\n",null,0],["ActiveRecord::AssociationTypeMismatch","","Ruby/classes/ActiveRecord/AssociationTypeMismatch.html","","<p>Raised when an object assigned to an association has an incorrect type.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Ticket</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["ActiveRecord::Associations","","Ruby/classes/ActiveRecord/Associations.html","","<p>Active Record Belongs To Associations\n<p>Active Record Belongs To Polymorphic Association\n<p>Active Record Has …\n",null,0],["ActiveRecord::Associations::ClassMethods","","Ruby/classes/ActiveRecord/Associations/ClassMethods.html","","<p>Associations are a set of macro-like class methods for tying objects\ntogether through foreign keys.  …\n",null,0],["ActiveRecord::AttributeAssignment","","Ruby/classes/ActiveRecord/AttributeAssignment.html","","",null,0],["ActiveRecord::AttributeAssignment::ClassMethods","","Ruby/classes/ActiveRecord/AttributeAssignment/ClassMethods.html","","",null,0],["ActiveRecord::AttributeAssignmentError","","Ruby/classes/ActiveRecord/AttributeAssignmentError.html","","<p>Raised when an error occurred while doing a mass assignment to an attribute\nthrough the <code>attributes=</code> method. …\n",null,0],["ActiveRecord::AttributeMethods","","Ruby/classes/ActiveRecord/AttributeMethods.html","","",null,0],["ActiveRecord::AttributeMethods::BeforeTypeCast","","Ruby/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html","","",null,0],["ActiveRecord::AttributeMethods::ClassMethods","","Ruby/classes/ActiveRecord/AttributeMethods/ClassMethods.html","","",null,0],["ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead","","Ruby/classes/ActiveRecord/AttributeMethods/DeprecatedUnderscoreRead.html","","",null,0],["ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead::ClassMethods","","Ruby/classes/ActiveRecord/AttributeMethods/DeprecatedUnderscoreRead/ClassMethods.html","","",null,0],["ActiveRecord::AttributeMethods::Dirty","","Ruby/classes/ActiveRecord/AttributeMethods/Dirty.html","","",null,0],["ActiveRecord::AttributeMethods::PrimaryKey","","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey.html","","",null,0],["ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html","","",null,0],["ActiveRecord::AttributeMethods::Query","","Ruby/classes/ActiveRecord/AttributeMethods/Query.html","","",null,0],["ActiveRecord::AttributeMethods::Read","","Ruby/classes/ActiveRecord/AttributeMethods/Read.html","","",null,0],["ActiveRecord::AttributeMethods::Read::ClassMethods","","Ruby/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html","","",null,0],["ActiveRecord::AttributeMethods::Serialization","","Ruby/classes/ActiveRecord/AttributeMethods/Serialization.html","","",null,0],["ActiveRecord::AttributeMethods::Serialization::Attribute","","Ruby/classes/ActiveRecord/AttributeMethods/Serialization/Attribute.html","","",null,0],["ActiveRecord::AttributeMethods::Serialization::ClassMethods","","Ruby/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html","","",null,0],["ActiveRecord::AttributeMethods::TimeZoneConversion","","Ruby/classes/ActiveRecord/AttributeMethods/TimeZoneConversion.html","","",null,0],["ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","","Ruby/classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html","","",null,0],["ActiveRecord::AttributeMethods::Write","","Ruby/classes/ActiveRecord/AttributeMethods/Write.html","","",null,0],["ActiveRecord::AttributeMethods::Write::ClassMethods","","Ruby/classes/ActiveRecord/AttributeMethods/Write/ClassMethods.html","","",null,0],["ActiveRecord::AutosaveAssociation","","Ruby/classes/ActiveRecord/AutosaveAssociation.html","","<p>Active Record Autosave Association\n<p><code>AutosaveAssociation</code> is a module that takes care of\nautomatically saving ...\n",null,0],["ActiveRecord::AutosaveAssociation::ClassMethods","","Ruby/classes/ActiveRecord/AutosaveAssociation/ClassMethods.html","","",null,0],["ActiveRecord::Base","","Ruby/classes/ActiveRecord/Base.html","","<p>Active Record\n<p>Active Record objects don’t specify their attributes directly, but rather\ninfer them from …\n",null,0],["ActiveRecord::Batches","","Ruby/classes/ActiveRecord/Batches.html","","",null,0],["ActiveRecord::Calculations","","Ruby/classes/ActiveRecord/Calculations.html","","",null,0],["ActiveRecord::Callbacks","","Ruby/classes/ActiveRecord/Callbacks.html","","<p>Active Record Callbacks\n<p>Callbacks are hooks into the life cycle of an Active Record object that\nallow …\n",null,0],["ActiveRecord::Coders","","Ruby/classes/ActiveRecord/Coders.html","","",null,0],["ActiveRecord::Coders::YAMLColumn","","Ruby/classes/ActiveRecord/Coders/YAMLColumn.html","","",null,0],["ActiveRecord::ConfigurationError","","Ruby/classes/ActiveRecord/ConfigurationError.html","","<p>Raised when association is being configured improperly or user tries to use\noffset and limit together …\n",null,0],["ActiveRecord::ConnectionAdapters","","Ruby/classes/ActiveRecord/ConnectionAdapters.html","","",null,0],["ActiveRecord::ConnectionAdapters::AbstractAdapter","","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html","","<p>Active Record supports multiple database systems. AbstractAdapter and\nrelated classes form the abstraction …\n",null,0],["ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html","","",null,0],["ActiveRecord::ConnectionAdapters::Column","","Ruby/classes/ActiveRecord/ConnectionAdapters/Column.html","","",null,0],["ActiveRecord::ConnectionAdapters::Column::Format","","Ruby/classes/ActiveRecord/ConnectionAdapters/Column/Format.html","","",null,0],["ActiveRecord::ConnectionAdapters::ConnectionHandler","","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html","","<p>ConnectionHandler is a collection of ConnectionPool objects. It is used for\nkeeping separate connection …\n",null,0],["ActiveRecord::ConnectionAdapters::ConnectionManagement","","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html","","",null,0],["ActiveRecord::ConnectionAdapters::ConnectionPool","","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html","","<p>Connection pool base class for managing Active Record database connections.\n<p>Introduction\n<p>A connection pool …\n",null,0],["ActiveRecord::ConnectionAdapters::DatabaseLimits","","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html","","",null,0],["ActiveRecord::ConnectionAdapters::DatabaseStatements","","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html","","",null,0],["ActiveRecord::ConnectionAdapters::Mysql2Adapter","","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html","","",null,0],["ActiveRecord::ConnectionAdapters::MysqlAdapter","","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html","","<p>The MySQL adapter will work with both Ruby/MySQL, which is a Ruby-based\nMySQL adapter that comes bundled …\n",null,0],["ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html","","<p>The PostgreSQL adapter works both with the native C\n(ruby.scripting.ca/postgres/) and the pure Ruby (available …\n",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Utils","","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Utils.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQLColumn","","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html","","",null,0],["ActiveRecord::ConnectionAdapters::QueryCache","","Ruby/classes/ActiveRecord/ConnectionAdapters/QueryCache.html","","",null,0],["ActiveRecord::ConnectionAdapters::Quoting","","Ruby/classes/ActiveRecord/ConnectionAdapters/Quoting.html","","",null,0],["ActiveRecord::ConnectionAdapters::SQLiteAdapter","","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html","","<p>The SQLite adapter works with both the 2.x and 3.x series of SQLite with\nthe sqlite-ruby drivers (available …\n",null,0],["ActiveRecord::ConnectionAdapters::SQLiteAdapter::ExplainPrettyPrinter","","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/ExplainPrettyPrinter.html","","",null,0],["ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html","","",null,0],["ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html","","",null,0],["ActiveRecord::ConnectionAdapters::SchemaCache","","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html","","",null,0],["ActiveRecord::ConnectionAdapters::SchemaStatements","","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html","","",null,0],["ActiveRecord::ConnectionAdapters::StatementPool","","Ruby/classes/ActiveRecord/ConnectionAdapters/StatementPool.html","","",null,0],["ActiveRecord::ConnectionAdapters::Table","","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html","","<p>Represents an SQL table in an abstract way for updating a table. Also see\nTableDefinition and SchemaStatements#create_table …\n",null,0],["ActiveRecord::ConnectionAdapters::TableDefinition","","Ruby/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html","","<p>Represents the schema of an SQL table in an abstract way. This class\nprovides methods for manipulating …\n",null,0],["ActiveRecord::ConnectionNotEstablished","","Ruby/classes/ActiveRecord/ConnectionNotEstablished.html","","<p>Raised when connection to the database could not been established (for\nexample when <code>connection=</code> is given …\n",null,0],["ActiveRecord::ConnectionTimeoutError","","Ruby/classes/ActiveRecord/ConnectionTimeoutError.html","","<p>Raised when a connection could not be obtained within the connection\nacquisition timeout period.\n",null,0],["ActiveRecord::CounterCache","","Ruby/classes/ActiveRecord/CounterCache.html","","<p>Active Record Counter Cache\n",null,0],["ActiveRecord::DangerousAttributeError","","Ruby/classes/ActiveRecord/DangerousAttributeError.html","","<p>Raised when attribute has a name reserved by Active Record (when attribute\nhas name of one of Active …\n",null,0],["ActiveRecord::Delegation","","Ruby/classes/ActiveRecord/Delegation.html","","",null,0],["ActiveRecord::DynamicFinderMatch","","Ruby/classes/ActiveRecord/DynamicFinderMatch.html","","<p>Active Record Dynamic Finder Match\n<p>Refer to ActiveRecord::Base documentation for Dynamic attribute-based …\n",null,0],["ActiveRecord::DynamicMatchers","","Ruby/classes/ActiveRecord/DynamicMatchers.html","","",null,0],["ActiveRecord::DynamicScopeMatch","","Ruby/classes/ActiveRecord/DynamicScopeMatch.html","","<p>Active Record Dynamic Scope Match\n<p>Provides dynamic attribute-based scopes such as\n<code>scoped_by_price(4.99</code> …\n",null,0],["ActiveRecord::Explain","","Ruby/classes/ActiveRecord/Explain.html","","",null,0],["ActiveRecord::FinderMethods","","Ruby/classes/ActiveRecord/FinderMethods.html","","",null,0],["ActiveRecord::Fixtures","","Ruby/classes/ActiveRecord/Fixtures.html","","<p>Fixtures are a way of organizing data that you want to test against; in\nshort, sample data.\n<p>They are stored …\n",null,0],["ActiveRecord::Fixtures::File","","Ruby/classes/ActiveRecord/Fixtures/File.html","","",null,0],["ActiveRecord::Generators","","Ruby/classes/ActiveRecord/Generators.html","","",null,0],["ActiveRecord::Generators::Migration","","Ruby/classes/ActiveRecord/Generators/Migration.html","","",null,0],["ActiveRecord::Generators::MigrationGenerator","","Ruby/classes/ActiveRecord/Generators/MigrationGenerator.html","","",null,0],["ActiveRecord::Generators::ModelGenerator","","Ruby/classes/ActiveRecord/Generators/ModelGenerator.html","","",null,0],["ActiveRecord::Generators::ObserverGenerator","","Ruby/classes/ActiveRecord/Generators/ObserverGenerator.html","","",null,0],["ActiveRecord::Generators::SessionMigrationGenerator","","Ruby/classes/ActiveRecord/Generators/SessionMigrationGenerator.html","","",null,0],["ActiveRecord::IdentityMap","","Ruby/classes/ActiveRecord/IdentityMap.html","","<p>Active Record Identity Map\n<p>Ensures that each object gets loaded only once by keeping every loaded\nobject …\n",null,0],["ActiveRecord::IdentityMap::Middleware","","Ruby/classes/ActiveRecord/IdentityMap/Middleware.html","","",null,0],["ActiveRecord::Inheritance","","Ruby/classes/ActiveRecord/Inheritance.html","","",null,0],["ActiveRecord::Inheritance::ClassMethods","","Ruby/classes/ActiveRecord/Inheritance/ClassMethods.html","","",null,0],["ActiveRecord::Integration","","Ruby/classes/ActiveRecord/Integration.html","","",null,0],["ActiveRecord::InvalidForeignKey","","Ruby/classes/ActiveRecord/InvalidForeignKey.html","","<p>Raised when a record cannot be inserted or updated because it references a\nnon-existent record.\n",null,0],["ActiveRecord::IrreversibleMigration","","Ruby/classes/ActiveRecord/IrreversibleMigration.html","","<p>Exception that can be raised to stop migrations from going backwards.\n",null,0],["ActiveRecord::Locking","","Ruby/classes/ActiveRecord/Locking.html","","",null,0],["ActiveRecord::Locking::Optimistic","","Ruby/classes/ActiveRecord/Locking/Optimistic.html","","<p>What is Optimistic Locking\n<p>Optimistic locking allows multiple users to access the same record for\nedits, …\n",null,0],["ActiveRecord::Locking::Optimistic::ClassMethods","","Ruby/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html","","",null,0],["ActiveRecord::Locking::Pessimistic","","Ruby/classes/ActiveRecord/Locking/Pessimistic.html","","<p>Locking::Pessimistic provides support for row-level locking using SELECT …\nFOR UPDATE and other lock …\n",null,0],["ActiveRecord::LogSubscriber","","Ruby/classes/ActiveRecord/LogSubscriber.html","","",null,0],["ActiveRecord::Migration","","Ruby/classes/ActiveRecord/Migration.html","","<p>Active Record Migrations\n<p>Migrations can manage the evolution of a schema used by several physical\ndatabases. …\n",null,0],["ActiveRecord::Migration::CommandRecorder","","Ruby/classes/ActiveRecord/Migration/CommandRecorder.html","","<p><code>ActiveRecord::Migration::CommandRecorder</code> records commands done\nduring a migration and knows how to reverse ...\n",null,0],["ActiveRecord::MigrationProxy","","Ruby/classes/ActiveRecord/MigrationProxy.html","","<p>MigrationProxy is used to defer loading of the actual migration classes\nuntil they are needed\n",null,0],["ActiveRecord::ModelSchema","","Ruby/classes/ActiveRecord/ModelSchema.html","","",null,0],["ActiveRecord::ModelSchema::ClassMethods","","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html","","",null,0],["ActiveRecord::MultiparameterAssignmentErrors","","Ruby/classes/ActiveRecord/MultiparameterAssignmentErrors.html","","<p>Raised when there are multiple errors while doing a mass assignment through\nthe <code>attributes</code> method. The …\n",null,0],["ActiveRecord::NestedAttributes","","Ruby/classes/ActiveRecord/NestedAttributes.html","","",null,0],["ActiveRecord::NestedAttributes::ClassMethods","","Ruby/classes/ActiveRecord/NestedAttributes/ClassMethods.html","","<p>Active Record Nested Attributes\n<p>Nested attributes allow you to save attributes on associated records\nthrough …\n",null,0],["ActiveRecord::NestedAttributes::TooManyRecords","","Ruby/classes/ActiveRecord/NestedAttributes/TooManyRecords.html","","",null,0],["ActiveRecord::Observer","","Ruby/classes/ActiveRecord/Observer.html","","<p>Active Record Observer\n<p>Observer classes respond to life cycle callbacks to implement trigger-like\nbehavior …\n",null,0],["ActiveRecord::Persistence","","Ruby/classes/ActiveRecord/Persistence.html","","<p>Active Record Persistence\n",null,0],["ActiveRecord::Persistence::ClassMethods","","Ruby/classes/ActiveRecord/Persistence/ClassMethods.html","","",null,0],["ActiveRecord::PreparedStatementInvalid","","Ruby/classes/ActiveRecord/PreparedStatementInvalid.html","","<p>Raised when number of bind variables in statement given to\n<code>:condition</code> key (for example, when using <code>find</code> …\n",null,0],["ActiveRecord::QueryCache","","Ruby/classes/ActiveRecord/QueryCache.html","","<p>Active Record Query Cache\n",null,0],["ActiveRecord::QueryCache::ClassMethods","","Ruby/classes/ActiveRecord/QueryCache/ClassMethods.html","","",null,0],["ActiveRecord::QueryMethods","","Ruby/classes/ActiveRecord/QueryMethods.html","","",null,0],["ActiveRecord::Querying","","Ruby/classes/ActiveRecord/Querying.html","","",null,0],["ActiveRecord::Railtie","","Ruby/classes/ActiveRecord/Railtie.html","","<p>Active Record Railtie\n",null,0],["ActiveRecord::Railties","","Ruby/classes/ActiveRecord/Railties.html","","",null,0],["ActiveRecord::Railties::ControllerRuntime","","Ruby/classes/ActiveRecord/Railties/ControllerRuntime.html","","",null,0],["ActiveRecord::Railties::ControllerRuntime::ClassMethods","","Ruby/classes/ActiveRecord/Railties/ControllerRuntime/ClassMethods.html","","",null,0],["ActiveRecord::ReadOnlyRecord","","Ruby/classes/ActiveRecord/ReadOnlyRecord.html","","<p>Raised on attempt to update record that is instantiated as read only.\n",null,0],["ActiveRecord::ReadonlyAttributes","","Ruby/classes/ActiveRecord/ReadonlyAttributes.html","","",null,0],["ActiveRecord::ReadonlyAttributes::ClassMethods","","Ruby/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html","","",null,0],["ActiveRecord::RecordInvalid","","Ruby/classes/ActiveRecord/RecordInvalid.html","","<p>Active Record RecordInvalid\n<p>Raised by <code>save!</code> and <code>create!</code> when the record is\ninvalid. Use the <code>record</code> method …\n",null,0],["ActiveRecord::RecordNotFound","","Ruby/classes/ActiveRecord/RecordNotFound.html","","<p>Raised when Active Record cannot find record by given id or set of ids.\n",null,0],["ActiveRecord::RecordNotSaved","","Ruby/classes/ActiveRecord/RecordNotSaved.html","","<p>Raised by ActiveRecord::Base.save! and ActiveRecord::Base.create! methods\nwhen record cannot be saved …\n",null,0],["ActiveRecord::RecordNotUnique","","Ruby/classes/ActiveRecord/RecordNotUnique.html","","<p>Raised when a record cannot be inserted because it would violate a\nuniqueness constraint.\n",null,0],["ActiveRecord::Reflection","","Ruby/classes/ActiveRecord/Reflection.html","","",null,0],["ActiveRecord::Reflection::ClassMethods","","Ruby/classes/ActiveRecord/Reflection/ClassMethods.html","","<p>Reflection enables to interrogate Active Record classes and objects about\ntheir associations and aggregations. …\n",null,0],["ActiveRecord::Reflection::MacroReflection","","Ruby/classes/ActiveRecord/Reflection/MacroReflection.html","","<p>Abstract base class for AggregateReflection and AssociationReflection.\nObjects of AggregateReflection …\n",null,0],["ActiveRecord::Relation","","Ruby/classes/ActiveRecord/Relation.html","","<p>Active Record Relation\n",null,0],["ActiveRecord::Result","","Ruby/classes/ActiveRecord/Result.html","","<p>This class encapsulates a Result returned from calling\n<code>exec_query</code> on any database connection adapter. …\n",null,0],["ActiveRecord::Rollback","","Ruby/classes/ActiveRecord/Rollback.html","","<p>ActiveRecord::Transactions::ClassMethods.transaction uses this exception to\ndistinguish a deliberate …\n",null,0],["ActiveRecord::Sanitization","","Ruby/classes/ActiveRecord/Sanitization.html","","",null,0],["ActiveRecord::Sanitization::ClassMethods","","Ruby/classes/ActiveRecord/Sanitization/ClassMethods.html","","",null,0],["ActiveRecord::Schema","","Ruby/classes/ActiveRecord/Schema.html","","<p>Active Record Schema\n<p>Allows programmers to programmatically define a schema in a portable DSL.\nThis means …\n",null,0],["ActiveRecord::Scoping","","Ruby/classes/ActiveRecord/Scoping.html","","<p>Active Record Named Scopes\n",null,0],["ActiveRecord::Scoping::ClassMethods","","Ruby/classes/ActiveRecord/Scoping/ClassMethods.html","","",null,0],["ActiveRecord::Scoping::Default","","Ruby/classes/ActiveRecord/Scoping/Default.html","","",null,0],["ActiveRecord::Scoping::Default::ClassMethods","","Ruby/classes/ActiveRecord/Scoping/Default/ClassMethods.html","","",null,0],["ActiveRecord::Scoping::Named","","Ruby/classes/ActiveRecord/Scoping/Named.html","","",null,0],["ActiveRecord::Scoping::Named::ClassMethods","","Ruby/classes/ActiveRecord/Scoping/Named/ClassMethods.html","","",null,0],["ActiveRecord::Serialization","","Ruby/classes/ActiveRecord/Serialization.html","","<p>Active Record Serialization\n",null,0],["ActiveRecord::SerializationTypeMismatch","","Ruby/classes/ActiveRecord/SerializationTypeMismatch.html","","<p>Raised when unserialized object’s type mismatches one specified for\nserializable field.\n",null,0],["ActiveRecord::SessionStore","","Ruby/classes/ActiveRecord/SessionStore.html","","<p>Active Record Session Store\n<p>A session store backed by an Active Record class. A default class is\nprovided, …\n",null,0],["ActiveRecord::SessionStore::Session","","Ruby/classes/ActiveRecord/SessionStore/Session.html","","<p>The default Active Record class.\n",null,0],["ActiveRecord::SessionStore::SqlBypass","","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html","","<p>A barebones session store which duck-types with the default session store\nbut bypasses Active Record …\n",null,0],["ActiveRecord::SpawnMethods","","Ruby/classes/ActiveRecord/SpawnMethods.html","","",null,0],["ActiveRecord::StaleObjectError","","Ruby/classes/ActiveRecord/StaleObjectError.html","","<p>Raised on attempt to save stale record. Record is stale when it’s being\nsaved in another query after …\n",null,0],["ActiveRecord::StatementInvalid","","Ruby/classes/ActiveRecord/StatementInvalid.html","","<p>Raised when SQL statement cannot be executed by the database (for example,\nit’s often the case for MySQL …\n",null,0],["ActiveRecord::Store","","Ruby/classes/ActiveRecord/Store.html","","<p>Store gives you a thin wrapper around serialize for the purpose of storing\nhashes in a single column. …\n",null,0],["ActiveRecord::Store::ClassMethods","","Ruby/classes/ActiveRecord/Store/ClassMethods.html","","",null,0],["ActiveRecord::TestFixtures","","Ruby/classes/ActiveRecord/TestFixtures.html","","",null,0],["ActiveRecord::TestFixtures::ClassMethods","","Ruby/classes/ActiveRecord/TestFixtures/ClassMethods.html","","",null,0],["ActiveRecord::ThrowResult","","Ruby/classes/ActiveRecord/ThrowResult.html","","<p>Raised when SQL statement is invalid and the application gets a blank\nresult.\n",null,0],["ActiveRecord::Timestamp","","Ruby/classes/ActiveRecord/Timestamp.html","","<p>Active Record Timestamp\n<p>Active Record automatically timestamps create and update operations if the\ntable …\n",null,0],["ActiveRecord::Transactions","","Ruby/classes/ActiveRecord/Transactions.html","","<p>See ActiveRecord::Transactions::ClassMethods for documentation.\n",null,0],["ActiveRecord::Transactions::ClassMethods","","Ruby/classes/ActiveRecord/Transactions/ClassMethods.html","","<p>Active Record Transactions\n<p>Transactions are protective blocks where SQL statements are only permanent\n…\n",null,0],["ActiveRecord::Translation","","Ruby/classes/ActiveRecord/Translation.html","","",null,0],["ActiveRecord::UnknownAttributeError","","Ruby/classes/ActiveRecord/UnknownAttributeError.html","","<p>Raised when unknown attributes are supplied via mass assignment.\n",null,0],["ActiveRecord::UnknownPrimaryKey","","Ruby/classes/ActiveRecord/UnknownPrimaryKey.html","","<p>Raised when a primary key is needed, but there is not one specified in the\nschema or model.\n",null,0],["ActiveRecord::Validations","","Ruby/classes/ActiveRecord/Validations.html","","<p>Active Record Validations\n<p>Active Record includes the majority of its validations from\n<code>ActiveModel::Validations</code> …\n",null,0],["ActiveRecord::Validations::AssociatedValidator","","Ruby/classes/ActiveRecord/Validations/AssociatedValidator.html","","",null,0],["ActiveRecord::Validations::ClassMethods","","Ruby/classes/ActiveRecord/Validations/ClassMethods.html","","",null,0],["ActiveRecord::Validations::UniquenessValidator","","Ruby/classes/ActiveRecord/Validations/UniquenessValidator.html","","",null,0],["ActiveRecord::WrappedDatabaseException","","Ruby/classes/ActiveRecord/WrappedDatabaseException.html","","<p>Parent class for all specific exceptions which wrap database driver\nexceptions provides access to the …\n",null,0],["ActiveResource","","Ruby/classes/ActiveResource.html","","",null,0],["ActiveResource::Base","","Ruby/classes/ActiveResource/Base.html","","<p>ActiveResource::Base is the main class for mapping RESTful resources as\nmodels in a Rails application. …\n",null,0],["ActiveResource::Connection","","Ruby/classes/ActiveResource/Connection.html","","<p>Class to handle connections to remote web services. This class is used by\nActiveResource::Base to interface …\n",null,0],["ActiveResource::CustomMethods","","Ruby/classes/ActiveResource/CustomMethods.html","","<p>A module to support custom REST methods and sub-resources, allowing you to\nbreak out of the “default” …\n",null,0],["ActiveResource::CustomMethods::ClassMethods","","Ruby/classes/ActiveResource/CustomMethods/ClassMethods.html","","",null,0],["ActiveResource::Errors","","Ruby/classes/ActiveResource/Errors.html","","<p>Active Resource validation is reported to and from this object, which is\nused by Base#save to determine …\n",null,0],["ActiveResource::Formats","","Ruby/classes/ActiveResource/Formats.html","","",null,0],["ActiveResource::Formats::JsonFormat","","Ruby/classes/ActiveResource/Formats/JsonFormat.html","","",null,0],["ActiveResource::Formats::XmlFormat","","Ruby/classes/ActiveResource/Formats/XmlFormat.html","","",null,0],["ActiveResource::HttpMock","","Ruby/classes/ActiveResource/HttpMock.html","","<p>One thing that has always been a pain with remote web services is testing. \nThe HttpMock class makes …\n",null,0],["ActiveResource::InvalidRequestError","","Ruby/classes/ActiveResource/InvalidRequestError.html","","",null,0],["ActiveResource::LogSubscriber","","Ruby/classes/ActiveResource/LogSubscriber.html","","",null,0],["ActiveResource::Observing","","Ruby/classes/ActiveResource/Observing.html","","",null,0],["ActiveResource::Railtie","","Ruby/classes/ActiveResource/Railtie.html","","",null,0],["ActiveResource::Request","","Ruby/classes/ActiveResource/Request.html","","",null,0],["ActiveResource::Response","","Ruby/classes/ActiveResource/Response.html","","",null,0],["ActiveResource::SSLError","","Ruby/classes/ActiveResource/SSLError.html","","<p>Raised when a OpenSSL::SSL::SSLError occurs.\n",null,0],["ActiveResource::TimeoutError","","Ruby/classes/ActiveResource/TimeoutError.html","","<p>Raised when a Timeout::Error occurs.\n",null,0],["ActiveResource::Validations","","Ruby/classes/ActiveResource/Validations.html","","<p>Module to support validation and errors with Active Resource objects. The\nmodule overrides Base#save …\n",null,0],["ActiveSupport","","Ruby/classes/ActiveSupport.html","","<p>This class has dubious semantics and we only have it so that people can\nwrite <code>params[:key]</code> instead of …\n",null,0],["ActiveSupport::Autoload","","Ruby/classes/ActiveSupport/Autoload.html","","",null,0],["ActiveSupport::BacktraceCleaner","","Ruby/classes/ActiveSupport/BacktraceCleaner.html","","<p>Backtraces often include many lines that are not relevant for the context\nunder review. This makes it …\n",null,0],["ActiveSupport::Base64","","Ruby/classes/ActiveSupport/Base64.html","","",null,0],["ActiveSupport::BasicObject","","Ruby/classes/ActiveSupport/BasicObject.html","","<p>A class with no predefined methods that behaves similarly to Builder’s\nBlankSlate. Used for proxy classes. …\n",null,0],["ActiveSupport::Benchmarkable","","Ruby/classes/ActiveSupport/Benchmarkable.html","","",null,0],["ActiveSupport::BufferedLogger","","Ruby/classes/ActiveSupport/BufferedLogger.html","","<p>Inspired by the buffered logger idea by Ezra\n",null,0],["ActiveSupport::BufferedLogger::Severity","","Ruby/classes/ActiveSupport/BufferedLogger/Severity.html","","",null,0],["ActiveSupport::Cache","","Ruby/classes/ActiveSupport/Cache.html","","<p>See ActiveSupport::Cache::Store for documentation.\n",null,0],["ActiveSupport::Cache::Entry","","Ruby/classes/ActiveSupport/Cache/Entry.html","","<p>Entry that is put into caches. It supports expiration time on entries and\ncan compress values to save …\n",null,0],["ActiveSupport::Cache::FileStore","","Ruby/classes/ActiveSupport/Cache/FileStore.html","","<p>A cache store implementation which stores everything on the filesystem.\n<p>FileStore implements the Strategy::LocalCache …\n",null,0],["ActiveSupport::Cache::MemCacheStore","","Ruby/classes/ActiveSupport/Cache/MemCacheStore.html","","<p>A cache store implementation which stores data in Memcached: memcached.org/\n<p>This is currently the most …\n",null,0],["ActiveSupport::Cache::MemoryStore","","Ruby/classes/ActiveSupport/Cache/MemoryStore.html","","<p>A cache store implementation which stores everything into memory in the\nsame process. If you’re running …\n",null,0],["ActiveSupport::Cache::NullStore","","Ruby/classes/ActiveSupport/Cache/NullStore.html","","<p>A cache store implementation which doesn’t actually store anything. Useful\nin development and test environments …\n",null,0],["ActiveSupport::Cache::Store","","Ruby/classes/ActiveSupport/Cache/Store.html","","<p>An abstract cache store class. There are multiple cache store\nimplementations, each having its own additional …\n",null,0],["ActiveSupport::Cache::Strategy","","Ruby/classes/ActiveSupport/Cache/Strategy.html","","",null,0],["ActiveSupport::Cache::Strategy::LocalCache","","Ruby/classes/ActiveSupport/Cache/Strategy/LocalCache.html","","<p>Caches that implement LocalCache will be backed by an in-memory cache for\nthe duration of a block. Repeated …\n",null,0],["ActiveSupport::Cache::Strategy::LocalCache::LocalStore","","Ruby/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html","","<p>Simple memory backed cache. This cache is not thread safe and is intended\nonly for serving as a temporary …\n",null,0],["ActiveSupport::Callbacks","","Ruby/classes/ActiveSupport/Callbacks.html","","<p>Callbacks are code hooks that are run at key points in an object’s\nlifecycle. The typical use case is …\n",null,0],["ActiveSupport::Callbacks::ClassMethods","","Ruby/classes/ActiveSupport/Callbacks/ClassMethods.html","","",null,0],["ActiveSupport::Concern","","Ruby/classes/ActiveSupport/Concern.html","","<p>A typical module looks like this:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">included</span>(<span class=\"ruby-identifier\">base</span>)\n    <span class=\"ruby-identifier\">base</span>.<span class=\"ruby-identifier\">extend</span> <span class=\"ruby-constant\">ClassMethods</span>\n    <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["ActiveSupport::Configurable","","Ruby/classes/ActiveSupport/Configurable.html","","<p>Configurable provides a <code>config</code> method to store and retrieve\nconfiguration options as an <code>OrderedHash</code>. …\n",null,0],["ActiveSupport::Configurable::ClassMethods","","Ruby/classes/ActiveSupport/Configurable/ClassMethods.html","","",null,0],["ActiveSupport::Configurable::Configuration","","Ruby/classes/ActiveSupport/Configurable/Configuration.html","","",null,0],["ActiveSupport::Dependencies","","Ruby/classes/ActiveSupport/Dependencies.html","","",null,0],["ActiveSupport::Dependencies::ClassCache","","Ruby/classes/ActiveSupport/Dependencies/ClassCache.html","","",null,0],["ActiveSupport::Dependencies::WatchStack","","Ruby/classes/ActiveSupport/Dependencies/WatchStack.html","","<p>The WatchStack keeps a stack of the modules being watched as files are\nloaded. If a file in the process …\n",null,0],["ActiveSupport::Deprecation","","Ruby/classes/ActiveSupport/Deprecation.html","","",null,0],["ActiveSupport::DescendantsTracker","","Ruby/classes/ActiveSupport/DescendantsTracker.html","","<p>This module provides an internal implementation to track descendants which\nis faster than iterating through …\n",null,0],["ActiveSupport::Duration","","Ruby/classes/ActiveSupport/Duration.html","","<p>Provides accurate date and time measurements using Date#advance and\nTime#advance, respectively. It mainly …\n",null,0],["ActiveSupport::FileUpdateChecker","","Ruby/classes/ActiveSupport/FileUpdateChecker.html","","<p>FileUpdateChecker specifies the API used by Rails to watch files and\ncontrol reloading. The API depends …\n",null,0],["ActiveSupport::FileWatcher","","Ruby/classes/ActiveSupport/FileWatcher.html","","",null,0],["ActiveSupport::FileWatcher::Backend","","Ruby/classes/ActiveSupport/FileWatcher/Backend.html","","",null,0],["ActiveSupport::Gzip","","Ruby/classes/ActiveSupport/Gzip.html","","<p>A convenient wrapper for the zlib standard library that allows\ncompression/decompression of strings with …\n",null,0],["ActiveSupport::Gzip::Stream","","Ruby/classes/ActiveSupport/Gzip/Stream.html","","",null,0],["ActiveSupport::HashWithIndifferentAccess","","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html","","",null,0],["ActiveSupport::Inflector","","Ruby/classes/ActiveSupport/Inflector.html","","<p>The Inflector transforms words from singular to plural, class names to\ntable names, modularized class …\n",null,0],["ActiveSupport::Inflector::Inflections","","Ruby/classes/ActiveSupport/Inflector/Inflections.html","","<p>A singleton instance of this class is yielded by Inflector.inflections,\nwhich can then be used to specify …\n",null,0],["ActiveSupport::InheritableOptions","","Ruby/classes/ActiveSupport/InheritableOptions.html","","",null,0],["ActiveSupport::JSON","","Ruby/classes/ActiveSupport/JSON.html","","",null,0],["ActiveSupport::JSON::Encoding","","Ruby/classes/ActiveSupport/JSON/Encoding.html","","",null,0],["ActiveSupport::JSON::Encoding::CircularReferenceError","","Ruby/classes/ActiveSupport/JSON/Encoding/CircularReferenceError.html","","",null,0],["ActiveSupport::JSON::Encoding::Encoder","","Ruby/classes/ActiveSupport/JSON/Encoding/Encoder.html","","",null,0],["ActiveSupport::JSON::Variable","","Ruby/classes/ActiveSupport/JSON/Variable.html","","<p>A string that returns itself as its JSON-encoded form.\n",null,0],["ActiveSupport::LogSubscriber","","Ruby/classes/ActiveSupport/LogSubscriber.html","","<p>ActiveSupport::LogSubscriber is an object set to consume\nActiveSupport::Notifications with the sole purpose …\n",null,0],["ActiveSupport::Memoizable","","Ruby/classes/ActiveSupport/Memoizable.html","","",null,0],["ActiveSupport::Memoizable::InstanceMethods","","Ruby/classes/ActiveSupport/Memoizable/InstanceMethods.html","","",null,0],["ActiveSupport::MessageEncryptor","","Ruby/classes/ActiveSupport/MessageEncryptor.html","","<p>MessageEncryptor is a simple way to encrypt values which get stored\nsomewhere you don’t trust.\n<p>The cipher …\n",null,0],["ActiveSupport::MessageEncryptor::InvalidMessage","","Ruby/classes/ActiveSupport/MessageEncryptor/InvalidMessage.html","","",null,0],["ActiveSupport::MessageVerifier","","Ruby/classes/ActiveSupport/MessageVerifier.html","","<p><code>MessageVerifier</code> makes it easy to generate and verify messages\nwhich are signed to prevent tampering. ...\n",null,0],["ActiveSupport::MessageVerifier::InvalidSignature","","Ruby/classes/ActiveSupport/MessageVerifier/InvalidSignature.html","","",null,0],["ActiveSupport::Multibyte","","Ruby/classes/ActiveSupport/Multibyte.html","","",null,0],["ActiveSupport::Multibyte::Chars","","Ruby/classes/ActiveSupport/Multibyte/Chars.html","","<p>Chars enables you to work transparently with UTF-8 encoding in the Ruby\nString class without having extensive …\n",null,0],["ActiveSupport::Multibyte::EncodingError","","Ruby/classes/ActiveSupport/Multibyte/EncodingError.html","","<p>Raised when a problem with the encoding was found.\n",null,0],["ActiveSupport::Multibyte::Unicode","","Ruby/classes/ActiveSupport/Multibyte/Unicode.html","","",null,0],["ActiveSupport::Multibyte::Unicode::Codepoint","","Ruby/classes/ActiveSupport/Multibyte/Unicode/Codepoint.html","","<p>Holds data about a codepoint in the Unicode database\n",null,0],["ActiveSupport::Multibyte::Unicode::UnicodeDatabase","","Ruby/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html","","<p>Holds static data from the Unicode database\n",null,0],["ActiveSupport::Notifications","","Ruby/classes/ActiveSupport/Notifications.html","","<p>Notifications\n<p>+ActiveSupport::Notifications+ provides an instrumentation API for Ruby.\n<p>Instrumenters\n",null,0],["ActiveSupport::Notifications::Event","","Ruby/classes/ActiveSupport/Notifications/Event.html","","",null,0],["ActiveSupport::Notifications::Fanout","","Ruby/classes/ActiveSupport/Notifications/Fanout.html","","<p>This is a default queue implementation that ships with Notifications. It\njust pushes events to all registered …\n",null,0],["ActiveSupport::Notifications::Instrumenter","","Ruby/classes/ActiveSupport/Notifications/Instrumenter.html","","",null,0],["ActiveSupport::OrderedHash","","Ruby/classes/ActiveSupport/OrderedHash.html","","<p>The order of iteration over hashes in Ruby 1.8 is undefined. For example,\nyou do not know the order in …\n",null,0],["ActiveSupport::OrderedOptions","","Ruby/classes/ActiveSupport/OrderedOptions.html","","",null,0],["ActiveSupport::Railtie","","Ruby/classes/ActiveSupport/Railtie.html","","",null,0],["ActiveSupport::Rescuable","","Ruby/classes/ActiveSupport/Rescuable.html","","<p>Rescuable module adds support for easier exception handling.\n",null,0],["ActiveSupport::Rescuable::ClassMethods","","Ruby/classes/ActiveSupport/Rescuable/ClassMethods.html","","",null,0],["ActiveSupport::SafeBuffer","","Ruby/classes/ActiveSupport/SafeBuffer.html","","",null,0],["ActiveSupport::SafeBuffer::SafeConcatError","","Ruby/classes/ActiveSupport/SafeBuffer/SafeConcatError.html","","",null,0],["ActiveSupport::StringInquirer","","Ruby/classes/ActiveSupport/StringInquirer.html","","<p>Wrapping a string in this class gives you a prettier way to test for\nequality. The value returned by …\n",null,0],["ActiveSupport::TaggedLogging","","Ruby/classes/ActiveSupport/TaggedLogging.html","","<p>Wraps any standard Logger class to provide tagging capabilities. Examples:\n\n<pre>Logger = ActiveSupport::TaggedLogging.new(Logger.new(STDOUT)) ...</pre>\n",null,0],["ActiveSupport::TimeWithZone","","Ruby/classes/ActiveSupport/TimeWithZone.html","","<p>A Time-like class that can represent a time in any time zone. Necessary\nbecause standard Ruby Time instances …\n",null,0],["ActiveSupport::TimeZone","","Ruby/classes/ActiveSupport/TimeZone.html","","",null,0],["ActiveSupport::XmlMini","","Ruby/classes/ActiveSupport/XmlMini.html","","<p>XmlMini\n<p>To use the much faster libxml parser:\n\n<pre>gem 'libxml-ruby', '=0.9.7'\nXmlMini.backend = 'LibXML'</pre>\n",null,0],["ActiveSupport::XmlMini_LibXMLSAX","","Ruby/classes/ActiveSupport/XmlMini_LibXMLSAX.html","","",null,0],["ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","","Ruby/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html","","<p>Class that will build the hash while the XML document is being parsed using\nSAX events.\n",null,0],["ActiveSupport::XmlMini_NokogiriSAX","","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX.html","","",null,0],["ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html","","<p>Class that will build the hash while the XML document is being parsed using\nSAX events.\n",null,0],["Addrinfo","","Rails/classes/Addrinfo.html","","<p>The Addrinfo class maps <code>struct addrinfo</code> to ruby.  This\nstructure identifies an Internet host and a service. …\n",null,1],["ApplicationController","","Ruby/classes/ApplicationController.html","","",null,0],["ApplicationHelper","","Ruby/classes/ApplicationHelper.html","","",null,0],["ArJdbcMySQL","","Ruby/classes/ArJdbcMySQL.html","","",null,0],["ArJdbcMySQL::Error","","Ruby/classes/ArJdbcMySQL/Error.html","","",null,0],["ArgumentError","","Rails/classes/ArgumentError.html","","<p>Raised when the arguments are wrong and there isn't a more specific\nException class.\n<p>Ex: passing the wrong ...\n",null,1],["Array","","Ruby/classes/Array.html","","",null,0],["Array","","Rails/classes/Array.html","","<p>Arrays are ordered, integer-indexed collections of any object. Array\nindexing starts at 0, as in C or …\n",null,1],["Array","Kernel","Rails/classes/Kernel.html#method-i-Array","(p1)","<p>Returns <em>arg</em> as an <code>Array</code>. First tries to call\n<em>arg</em><code>.to_ary</code>, then <em>arg</em><code>.to_a</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Array</span>(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>)   <span class=\"ruby-comment\">#=&gt; [1, 2, 3, 4, ...</span>\n</pre>\n",null,1],["Base64","","Ruby/classes/Base64.html","","<p>The Base64 module isn’t available in earlier versions of Ruby 1.9.\n",null,0],["Base64","","Rails/classes/Base64.html","","<p>The Base64 module provides for the encoding (#encode64, #strict_encode64,\n#urlsafe_encode64) and decoding …\n",null,1],["BasicObject","","Rails/classes/BasicObject.html","","<p>BasicObject is the parent class of all classes in Ruby.  It's an explicit\nblank class.\n<p>BasicObject can ...\n",null,1],["BasicSocket","","Rails/classes/BasicSocket.html","","<p>BasicSocket is the super class for all the Socket classes.\n",null,1],["Benchmark","","Ruby/classes/Benchmark.html","","",null,0],["Benchmark","","Rails/classes/Benchmark.html","","<p>The Benchmark module provides methods to measure and report the time used\nto execute Ruby code.\n<p>Measure …\n",null,1],["Benchmark::Tms","","Rails/classes/Benchmark/Tms.html","","<p>A data object, representing the times associated with a benchmark\nmeasurement.\n",null,1],["BigDecimal","","Ruby/classes/BigDecimal.html","","",null,0],["BigDecimal","","Rails/classes/BigDecimal.html","","<p>BigDecimal provides arbitrary-precision floating point decimal arithmetic.\n<p>Copyright (C) 2002 by Shigeo …\n",null,1],["BigDecimal","Kernel","Rails/classes/Kernel.html#method-i-BigDecimal","(*args)","",null,1],["BigMath","","Rails/classes/BigMath.html","","<p>Class and method registration\n<p>Provides mathematical functions.\n<p>Example:\n",null,1],["Bignum","","Rails/classes/Bignum.html","","<p>Bignum objects hold integers outside the range of Fixnum. Bignum objects\nare created automatically when …\n",null,1],["Binding","","Rails/classes/Binding.html","","<p>Objects of class <code>Binding</code> encapsulate the execution context at\nsome particular place in the code and retain …\n",null,1],["Blog","","Ruby/classes/Blog.html","","",null,0],["Blog::Application","","Ruby/classes/Blog/Application.html","","",null,0],["Build","","Ruby/classes/Build.html","","",null,0],["CGI","","Rails/classes/CGI.html","","<p>Overview\n<p>The Common Gateway Interface (CGI) is a simple protocol for passing an HTTP\nrequest from a web …\n",null,1],["CGI::Cookie","","Rails/classes/CGI/Cookie.html","","<p>Class representing an HTTP cookie.\n<p>In addition to its specific fields and methods, a Cookie instance is …\n",null,1],["CGI::HtmlExtension","","Rails/classes/CGI/HtmlExtension.html","","<p>Mixin module providing HTML generation methods.\n<p>For example,\n\n<pre>cgi.a(&quot;http://www.example.com&quot;) { &quot;Example&quot; ...</pre>\n",null,1],["CGI::InvalidEncoding","","Rails/classes/CGI/InvalidEncoding.html","","<p>Exception raised when there is an invalid encoding detected\n",null,1],["CGI::QueryExtension","","Rails/classes/CGI/QueryExtension.html","","<p>Mixin module that provides the following:\n<p>Access to the CGI environment variables as methods.  See documentation …\n",null,1],["CGI::Session","","Rails/classes/CGI/Session.html","","<p>Overview\n<p>This file provides the CGI::Session class, which provides session support\nfor CGI scripts.   …\n",null,1],["CGI::Session::FileStore","","Rails/classes/CGI/Session/FileStore.html","","<p>File-based session storage class.\n<p>Implements session storage as a flat file of ‘key=value’ values. This …\n",null,1],["CGI::Session::MemoryStore","","Rails/classes/CGI/Session/MemoryStore.html","","<p>In-memory session storage class.\n<p>Implements session storage as a global in-memory hash.  Session data …\n",null,1],["CGI::Session::NullStore","","Rails/classes/CGI/Session/NullStore.html","","<p>Dummy session storage class.\n<p>Implements session storage place holder.  No actual storage will be done. …\n",null,1],["CGI::Session::PStore","","Rails/classes/CGI/Session/PStore.html","","<p>PStore-based session storage class.\n<p>This builds upon the top-level PStore class provided by the library …\n",null,1],["CMath","","Rails/classes/CMath.html","","<p>CMath\n<p>CMath is a library that provides trigonometric and transcendental functions\nfor complex numbers. …\n",null,1],["CSV","","Rails/classes/CSV.html","","<p>This class provides a complete interface to CSV files and data.  It offers\ntools to enable you to read …\n",null,1],["CSV","Object","Rails/classes/Object.html#method-i-CSV","(*args, &block)","<p>Another name for CSV::instance().\n",null,1],["CSV::MalformedCSVError","","Rails/classes/CSV/MalformedCSVError.html","","<p>The error thrown when the parser encounters illegal CSV formatting.\n",null,1],["CSV::Row","","Rails/classes/CSV/Row.html","","<p>A CSV::Row is part Array and part Hash.  It retains an order for the fields\nand allows duplicates just …\n",null,1],["CSV::Table","","Rails/classes/CSV/Table.html","","<p>A CSV::Table is a two-dimensional data structure for representing CSV\ndocuments.  Tables allow you to …\n",null,1],["Call","Win32API","Rails/classes/Win32API.html#method-i-Call","(*args)","",null,1],["Class","","Ruby/classes/Class.html","","<p>Extends the class object with class and instance accessors for class\nattributes, just like the native …\n",null,0],["Class","","Rails/classes/Class.html","","<p>Classes in Ruby are first-class objects---each is an instance of class\n<code>Class</code>.\n<p>When a new class is created ...\n",null,1],["CloseKey","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-CloseKey","(hkey)","",null,1],["Comment","","Ruby/classes/Comment.html","","",null,0],["CommentsController","","Ruby/classes/CommentsController.html","","",null,0],["CommentsHelper","","Ruby/classes/CommentsHelper.html","","",null,0],["Comparable","","Rails/classes/Comparable.html","","<p>The <code>Comparable</code> mixin is used by classes whose objects may be\nordered. The class must define the <code>&lt;=&gt;</code> …\n",null,1],["Complex","","Rails/classes/Complex.html","","<p>A complex number can be represented as a paired real number with imaginary\nunit; a+bi.  Where a is real …\n",null,1],["Complex","Kernel","Rails/classes/Kernel.html#method-i-Complex","(*args)","<p>Returns x+i*y;\n",null,1],["CompositePublisher","","Rails/classes/CompositePublisher.html","","<p>Manage several publishers as a single entity.\n",null,1],["ConditionVariable","","Rails/classes/ConditionVariable.html","","<p>ConditionVariable objects augment class Mutex. Using condition variables,\nit is possible to suspend while …\n",null,1],["Continuation","","Rails/classes/Continuation.html","","<p>Continuation objects are generated by <code>Kernel#callcc</code>, after\nhaving <code>require</code>d <em>continuation</em>. They hold a ...\n",null,1],["Coverage","","Rails/classes/Coverage.html","","<p>Coverage provides coverage measurement feature for Ruby. This feature is\nexperimental, so these APIs …\n",null,1],["CreateComments","","Ruby/classes/CreateComments.html","","",null,0],["CreateKey","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-CreateKey","(hkey, name, opt, desired)","",null,1],["CreatePosts","","Ruby/classes/CreatePosts.html","","",null,0],["CreateTags","","Ruby/classes/CreateTags.html","","",null,0],["Css","","Ruby/classes/Css.html","","",null,0],["Css::Generators","","Ruby/classes/Css/Generators.html","","",null,0],["Css::Generators::AssetsGenerator","","Ruby/classes/Css/Generators/AssetsGenerator.html","","",null,0],["Css::Generators::ScaffoldGenerator","","Ruby/classes/Css/Generators/ScaffoldGenerator.html","","",null,0],["CurrentContext","IRB","Rails/classes/IRB.html#method-c-CurrentContext","()","",null,1],["Curses","","Rails/classes/Curses.html","","<p>Description\n<p>An implementation of the CRT screen handling and optimization library.\n<p>Structures and such …\n",null,1],["Curses::Key","","Rails/classes/Curses/Key.html","","<p>a container for the KEY_* values.\n<p>See also system manual for getch(3)\n",null,1],["Curses::MouseEvent","","Rails/classes/Curses/MouseEvent.html","","<p>Description\n<p>Curses::MouseEvent\n<p>Example\n",null,1],["Curses::Window","","Rails/classes/Curses/Window.html","","<p>Description\n<p>The means by which to create and manage frames or windows. While there may\nbe more than one ...\n",null,1],["DBM","","Rails/classes/DBM.html","","<p>Documented by mathew meta@pobox.com.\n<p>Introduction\n<p>The DBM class provides a wrapper to a Unix-style dbm …\n",null,1],["DBMError","","Rails/classes/DBMError.html","","<p>Exception class used to return errors from the dbm library.\n",null,1],["DEBUG","Thread","Rails/classes/Thread.html#method-c-DEBUG","()","<p>Returns the thread debug level.  Available only if compiled with\nTHREAD_DEBUG=-1.\n",null,1],["DEBUG=","Thread","Rails/classes/Thread.html#method-c-DEBUG-3D","(p1)","<p>Sets the thread debug level.  Available only if compiled with\nTHREAD_DEBUG=-1.\n",null,1],["DEBUGGER__","","Rails/classes/DEBUGGER__.html","","",null,1],["DEBUGGER__::Context","","Rails/classes/DEBUGGER__/Context.html","","",null,1],["DL","","Rails/classes/DL.html","","<p>A bridge to the dlopen() or dynamic library linker function.\n<p>Example\n\n<pre>bash $&gt; cat &gt; sum.c &lt;&lt;EOF\ndouble sum(double ...</pre>\n",null,1],["DL::BasicTypes","","Rails/classes/DL/BasicTypes.html","","<p>Adds basic type aliases to the including class for use with DL::Importer.\n<p>The aliases added are <code>uint</code> and …\n",null,1],["DL::CFunc","","Rails/classes/DL/CFunc.html","","<p>A direct accessor to a function in a C library\n<p>Example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">libc_so</span> = <span class=\"ruby-string\">&quot;/lib64/libc.so.6&quot;</span>\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;/lib64/libc.so.6&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["DL::CParser","","Rails/classes/DL/CParser.html","","",null,1],["DL::CPtr","","Rails/classes/DL/CPtr.html","","<p>CPtr is a class to handle C pointers\n",null,1],["DL::CStruct","","Rails/classes/DL/CStruct.html","","",null,1],["DL::CStructBuilder","","Rails/classes/DL/CStructBuilder.html","","",null,1],["DL::CStructEntity","","Rails/classes/DL/CStructEntity.html","","",null,1],["DL::CUnion","","Rails/classes/DL/CUnion.html","","",null,1],["DL::CUnionEntity","","Rails/classes/DL/CUnionEntity.html","","",null,1],["DL::CarriedFunction","","Rails/classes/DL/CarriedFunction.html","","",null,1],["DL::CompositeHandler","","Rails/classes/DL/CompositeHandler.html","","",null,1],["DL::DLError","","Rails/classes/DL/DLError.html","","<p>standard dynamic load exception\n",null,1],["DL::DLTypeError","","Rails/classes/DL/DLTypeError.html","","<p>dynamic load incorrect type exception\n",null,1],["DL::Function","","Rails/classes/DL/Function.html","","",null,1],["DL::Handle","","Rails/classes/DL/Handle.html","","<p>The DL::Handle is the manner to access the dynamic library\n<p>Example\n<p>Setup\n",null,1],["DL::Importer","","Rails/classes/DL/Importer.html","","<p>DL::Importer includes the means to dynamically load libraries and build\nmodules around them including …\n",null,1],["DL::PackInfo","","Rails/classes/DL/PackInfo.html","","",null,1],["DL::Packer","","Rails/classes/DL/Packer.html","","",null,1],["DL::Stack","","Rails/classes/DL/Stack.html","","",null,1],["DL::TempFunction","","Rails/classes/DL/TempFunction.html","","",null,1],["DL::ValueUtil","","Rails/classes/DL/ValueUtil.html","","",null,1],["DL::Win32Types","","Rails/classes/DL/Win32Types.html","","<p>Adds Windows type aliases to the including class for use with DL::Importer.\n<p>The aliases added are:\n<p>ATOM …\n",null,1],["DRb","","Rails/classes/DRb.html","","<p>Overview\n<p>dRuby is a distributed object system for Ruby.  It is written in pure Ruby\nand uses its own protocol. …\n",null,1],["DRb::DRbArray","","Rails/classes/DRb/DRbArray.html","","",null,1],["DRb::DRbBadScheme","","Rails/classes/DRb/DRbBadScheme.html","","<p>Error raised by a dRuby protocol when it doesn’t support the scheme\nspecified in a URI.  See DRb::DRbProtocol …\n",null,1],["DRb::DRbBadURI","","Rails/classes/DRb/DRbBadURI.html","","<p>Error raised by the DRbProtocol module when it cannot find any protocol\nimplementation support the scheme …\n",null,1],["DRb::DRbConn","","Rails/classes/DRb/DRbConn.html","","<p>Class handling the connection between a DRbObject and the server the real\nobject lives on.\n<p>This class …\n",null,1],["DRb::DRbConnError","","Rails/classes/DRb/DRbConnError.html","","<p>Error raised when an error occurs on the underlying communication protocol.\n",null,1],["DRb::DRbError","","Rails/classes/DRb/DRbError.html","","<p>Superclass of all errors raised in the DRb module.\n",null,1],["DRb::DRbIdConv","","Rails/classes/DRb/DRbIdConv.html","","<p>Class responsible for converting between an object and its id.\n<p>This, the default implementation, uses …\n",null,1],["DRb::DRbMessage","","Rails/classes/DRb/DRbMessage.html","","<p>Handler for sending and receiving drb messages.\n<p>This takes care of the low-level marshalling and unmarshalling …\n",null,1],["DRb::DRbObject","","Rails/classes/DRb/DRbObject.html","","<p>Object wrapping a reference to a remote drb object.\n<p>Method calls on this object are relayed to the remote …\n",null,1],["DRb::DRbObservable","","Rails/classes/DRb/DRbObservable.html","","",null,1],["DRb::DRbProtocol","","Rails/classes/DRb/DRbProtocol.html","","<p>Module managing the underlying network protocol(s) used by drb.\n<p>By default, drb uses the DRbTCPSocket …\n",null,1],["DRb::DRbRemoteError","","Rails/classes/DRb/DRbRemoteError.html","","<p>An exception wrapping an error object\n",null,1],["DRb::DRbSSLSocket","","Rails/classes/DRb/DRbSSLSocket.html","","",null,1],["DRb::DRbSSLSocket::SSLConfig","","Rails/classes/DRb/DRbSSLSocket/SSLConfig.html","","",null,1],["DRb::DRbServer","","Rails/classes/DRb/DRbServer.html","","<p>Class representing a drb server instance.\n<p>A DRbServer must be running in the local process before any …\n",null,1],["DRb::DRbServer::InvokeMethod18Mixin","","Rails/classes/DRb/DRbServer/InvokeMethod18Mixin.html","","",null,1],["DRb::DRbServerNotFound","","Rails/classes/DRb/DRbServerNotFound.html","","<p>Error raised by the DRb module when an attempt is made to refer to the\ncontext’s current drb server but …\n",null,1],["DRb::DRbTCPSocket","","Rails/classes/DRb/DRbTCPSocket.html","","<p>The default drb protocol.\n<p>Communicates over a TCP socket.\n",null,1],["DRb::DRbUNIXSocket","","Rails/classes/DRb/DRbUNIXSocket.html","","",null,1],["DRb::DRbUndumped","","Rails/classes/DRb/DRbUndumped.html","","<p>Mixin module making an object undumpable or unmarshallable.\n<p>If an object which includes this module is …\n",null,1],["DRb::DRbUnknown","","Rails/classes/DRb/DRbUnknown.html","","<p>Class wrapping a marshalled object whose type is unknown locally.\n<p>If an object is returned by a method …\n",null,1],["DRb::DRbUnknownError","","Rails/classes/DRb/DRbUnknownError.html","","<p>An exception wrapping a DRb::DRbUnknown object\n",null,1],["DRb::ExtServ","","Rails/classes/DRb/ExtServ.html","","",null,1],["DRb::ExtServManager","","Rails/classes/DRb/ExtServManager.html","","",null,1],["DRb::GW","","Rails/classes/DRb/GW.html","","",null,1],["DRb::GWIdConv","","Rails/classes/DRb/GWIdConv.html","","",null,1],["DRb::TimerIdConv","","Rails/classes/DRb/TimerIdConv.html","","",null,1],["DRb::TimerIdConv::TimerHolder2","","Rails/classes/DRb/TimerIdConv/TimerHolder2.html","","",null,1],["DRb::TimerIdConv::TimerHolder2::InvalidIndexError","","Rails/classes/DRb/TimerIdConv/TimerHolder2/InvalidIndexError.html","","",null,1],["Data","","Rails/classes/Data.html","","",null,1],["Date","","Ruby/classes/Date.html","","",null,0],["Date","","Rails/classes/Date.html","","<p>date and datetime class - Tadayoshi Funaba 1998-2011\n<p>‘date’ provides two classes Date and DateTime.\n<p>Terms …\n",null,1],["DateTime","","Ruby/classes/DateTime.html","","",null,0],["DateTime","","Rails/classes/DateTime.html","","<p>date and datetime class - Tadayoshi Funaba 1998-2011\n<p>‘date’ provides two classes Date and DateTime.\n<p>Terms …\n",null,1],["DelegateClass","Object","Rails/classes/Object.html#method-i-DelegateClass","(superclass)","<p>The primary interface to this library.  Use to setup delegation when\ndefining your class.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">MyClass</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["Delegator","","Rails/classes/Delegator.html","","<p>This library provides three different ways to delegate method calls to an\nobject.  The easiest to use …\n",null,1],["DeleteKey","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-DeleteKey","(hkey, name)","",null,1],["DeleteValue","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-DeleteValue","(hkey, name)","",null,1],["Digest","","Rails/classes/Digest.html","","<p>This module provides a framework for message digest libraries.\n<p>You may want to look at OpenSSL::Digest ...\n",null,1],["Digest","Object","Rails/classes/Object.html#method-i-Digest","(name)","<p>Returns a Digest subclass by <code>name</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'digest'</span>\n\n<span class=\"ruby-constant\">Digest</span>(<span class=\"ruby-string\">&quot;MD5&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; Digest::MD5</span>\n\n<span class=\"ruby-constant\">Digest</span>(<span class=\"ruby-string\">&quot;Foo&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["Digest::Base","","Rails/classes/Digest/Base.html","","<p>This abstract class provides a common interface to message digest\nimplementation classes written in  ...\n",null,1],["Digest::Class","","Rails/classes/Digest/Class.html","","<p>This module stands as a base class for digest implementation classes.\n",null,1],["Digest::HMAC","","Rails/classes/Digest/HMAC.html","","<p>digest/hmac.rb\n<p>An experimental implementation of HMAC keyed-hashing algorithm\n<p>Overview\n",null,1],["Digest::Instance","","Rails/classes/Digest/Instance.html","","<p>This module provides instance methods for a digest implementation object to\ncalculate message digest ...\n",null,1],["Dir","","Rails/classes/Dir.html","","<p>Objects of class <code>Dir</code> are directory streams representing\ndirectories in the underlying file system. They …\n",null,1],["E","BigMath","Rails/classes/BigMath.html#method-i-E","(prec)","<p>Computes e (the base of natural logarithms) to the specified number of\ndigits of precision.\n",null,1],["ENV","","Rails/classes/ENV.html","","<p>ENV is a hash-like accessor for environment variables.\n",null,1],["EOFError","","Rails/classes/EOFError.html","","<p>Raised by some IO operations when reaching the end of file. Many IO methods\nexist in two forms,\n<p>one that ...\n",null,1],["ERB","","Ruby/classes/ERB.html","","",null,0],["ERB","","Rails/classes/ERB.html","","<p>ERB – Ruby Templating\n<p>Introduction\n<p>ERB provides an easy to use but powerful templating system for Ruby …\n",null,1],["ERB::DefMethod","","Rails/classes/ERB/DefMethod.html","","<p>Utility module to define eRuby script as instance method.\n<p>Example\n<p>example.rhtml:\n",null,1],["ERB::Util","","Ruby/classes/ERB/Util.html","","",null,0],["ERB::Util","","Rails/classes/ERB/Util.html","","<p>A utility module for conversion routines, often handy in HTML generation.\n",null,1],["ESCDELAY","Curses","Rails/classes/Curses.html#method-c-ESCDELAY","()","<p>Returns the total time, in milliseconds, for which curses will await a\ncharacter sequence, e.g., a function …\n",null,1],["ESCDELAY=","Curses","Rails/classes/Curses.html#method-c-ESCDELAY-3D","(p1)","<p>Sets the ESCDELAY to Integer <code>value</code>\n",null,1],["Encoding","","Rails/classes/Encoding.html","","",null,1],["Encoding::CompatibilityError","","Rails/classes/Encoding/CompatibilityError.html","","<p>Raised by Encoding and String methods when the source encoding is\nincompatible with the target encoding. ...\n",null,1],["Encoding::Converter","","Rails/classes/Encoding/Converter.html","","",null,1],["Encoding::ConverterNotFoundError","","Rails/classes/Encoding/ConverterNotFoundError.html","","<p>Raised by transcoding methods when a named encoding does not correspond\nwith a known converter.\n",null,1],["Encoding::InvalidByteSequenceError","","Rails/classes/Encoding/InvalidByteSequenceError.html","","<p>Raised by Encoding and String methods when the string being transcoded\ncontains a byte invalid for the ...\n",null,1],["Encoding::UndefinedConversionError","","Rails/classes/Encoding/UndefinedConversionError.html","","<p>Raised by Encoding and String methods when a transcoding operation fails.\n",null,1],["EncodingError","","Rails/classes/EncodingError.html","","<p>EncodingError is the base class for encoding errors.\n",null,1],["EnumKey","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-EnumKey","(hkey, index)","",null,1],["EnumValue","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-EnumValue","(hkey, index)","",null,1],["Enumerable","","Ruby/classes/Enumerable.html","","",null,0],["Enumerable","","Rails/classes/Enumerable.html","","<p>The <code>Enumerable</code> mixin provides collection classes with several\ntraversal and searching methods, and with …\n",null,1],["Enumerator","","Rails/classes/Enumerator.html","","<p>A class which allows both internal and external iteration.\n<p>An Enumerator can be created by the following ...\n",null,1],["Enumerator::Generator","","Rails/classes/Enumerator/Generator.html","","<p>Generator\n",null,1],["Enumerator::Yielder","","Rails/classes/Enumerator/Yielder.html","","<p>Generator\n",null,1],["Erb","","Ruby/classes/Erb.html","","",null,0],["Erb::Generators","","Ruby/classes/Erb/Generators.html","","",null,0],["Erb::Generators::ControllerGenerator","","Ruby/classes/Erb/Generators/ControllerGenerator.html","","",null,0],["Erb::Generators::MailerGenerator","","Ruby/classes/Erb/Generators/MailerGenerator.html","","",null,0],["Erb::Generators::ScaffoldGenerator","","Ruby/classes/Erb/Generators/ScaffoldGenerator.html","","",null,0],["Errno","","Rails/classes/Errno.html","","<p>Ruby exception objects are subclasses of <code>Exception</code>. However,\noperating systems typically report errors ...\n",null,1],["Errno::ECONNABORTED","","Rails/classes/Errno/ECONNABORTED.html","","<p>Client sent TCP reset (RST) before server has accepted the connection\nrequested by client.\n",null,1],["Errno::ECONNRESET","","Rails/classes/Errno/ECONNRESET.html","","<p>Remote host reset the connection request.\n",null,1],["Errno::EPROTO","","Rails/classes/Errno/EPROTO.html","","<p>Protocol error.\n",null,1],["Etc","","Rails/classes/Etc.html","","<p>The etc module provides access to information from the running OS.\n<p>Documented by mathew &lt;meta@pobox.com …\n",null,1],["Exception","","Rails/classes/Exception.html","","<p>Descendants of class <code>Exception</code> are used to communicate between\n<code>raise</code> methods and <code>rescue</code> statements in …\n",null,1],["Exception2MessageMapper","","Rails/classes/Exception2MessageMapper.html","","\n<pre>e2mmap.rb - for ruby 1.1\n    $Release Version: 2.0$\n    $Revision: 1.10 $\n    by Keiju ISHITSUKA</pre>\n<p>–\n\n<pre>Usage:</pre>\n",null,1],["Exception2MessageMapper::E2MM","","Rails/classes/Exception2MessageMapper.html","","\n<pre>e2mmap.rb - for ruby 1.1\n    $Release Version: 2.0$\n    $Revision: 1.10 $\n    by Keiju ISHITSUKA</pre>\n<p>–\n\n<pre>Usage:</pre>\n",null,1],["Fail","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-Fail","(klass = E2MM, err = nil, *rest)","",null,1],["Fail","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-Fail","(klass = E2MM, err = nil, *rest)","",null,1],["Fail","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-Fail","(err = nil, *rest)","",null,1],["Fail","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-Fail","(err = nil, *rest)","",null,1],["Fail","Sync_m::Err","Rails/classes/Sync_m/Err.html#method-c-Fail","(*opt)","",null,1],["Fail","Sync_m::Err::LockModeFailer","Rails/classes/Sync_m/Err/LockModeFailer.html#method-c-Fail","(mode)","",null,1],["Fail","Sync_m::Err::UnknownLocker","Rails/classes/Sync_m/Err/UnknownLocker.html#method-c-Fail","(th)","",null,1],["FalseClass","","Ruby/classes/FalseClass.html","","",null,0],["FalseClass","","Rails/classes/FalseClass.html","","<p>The global value <code>false</code> is the only instance of class\n<code>FalseClass</code> and represents a logically false value ...\n",null,1],["Fcntl","","Rails/classes/Fcntl.html","","<p>Fcntl loads the constants defined in the system’s &lt;fcntl.h&gt; C header\nfile, and used with both the …\n",null,1],["Fiber","","Rails/classes/Fiber.html","","<p>Fibers are primitives for implementing light weight cooperative concurrency\nin Ruby. Basically they are ...\n",null,1],["FiberError","","Rails/classes/FiberError.html","","<p>Raised when an invalid operation is attempted on a Fiber, in particular\nwhen attempting to call/resume ...\n",null,1],["Fiddle","","Rails/classes/Fiddle.html","","<p>Description\n<p>A libffi wrapper.\n",null,1],["Fiddle::Closure","","Rails/classes/Fiddle/Closure.html","","<p>Description\n<p>An FFI closure wrapper, for handling callbacks.\n<p>Example\n",null,1],["Fiddle::Closure::BlockCaller","","Rails/classes/Fiddle/Closure/BlockCaller.html","","<p>Extends Fiddle::Closure to allow for building the closure in a block\n",null,1],["Fiddle::Function","","Rails/classes/Fiddle/Function.html","","<p>Description\n<p>A representation of a C function\n<p>Examples\n",null,1],["Fiddle::Pointer","","Rails/classes/DL/CPtr.html","","<p>CPtr is a class to handle C pointers\n",null,1],["File","","Ruby/classes/File.html","","",null,0],["File","","Rails/classes/File.html","","<p>A <code>File</code> is an abstraction of any file object accessible by the\nprogram and is closely associated with …\n",null,1],["File::Constants","","Rails/classes/File/Constants.html","","",null,1],["File::Stat","","Rails/classes/File/Stat.html","","<p>Objects of class <code>File::Stat</code> encapsulate common status\ninformation for <code>File</code> objects. The information is ...\n",null,1],["FileTest","","Rails/classes/FileTest.html","","<p><code>FileTest</code> implements file test operations similar to those used\nin <code>File::Stat</code>. It exists as a standalone ...\n",null,1],["FileUtils","","Rails/classes/FileUtils.html","","<p>fileutils.rb\n<p>Copyright © 2000-2007 Minero Aoki\n<p>This program is free software. You can distribute/modify …\n",null,1],["FileUtils::DryRun","","Rails/classes/FileUtils/DryRun.html","","<p>This module has all methods of FileUtils module, but never changes\nfiles/directories, with printing message …\n",null,1],["FileUtils::LowMethods","","Rails/classes/FileUtils/LowMethods.html","","",null,1],["FileUtils::NoWrite","","Rails/classes/FileUtils/NoWrite.html","","<p>This module has all methods of FileUtils module, but never changes\nfiles/directories.  This equates to …\n",null,1],["FileUtils::StreamUtils_","","Rails/classes/FileUtils/StreamUtils_.html","","",null,1],["FileUtils::Verbose","","Rails/classes/FileUtils/Verbose.html","","<p>This module has all methods of FileUtils module, but it outputs messages\nbefore acting.  This equates …\n",null,1],["Find","","Rails/classes/Find.html","","<p>The <code>Find</code> module supports the top-down traversal of a set of\nfile paths.\n<p>For example, to total the size …\n",null,1],["Fixnum","","Rails/classes/Fixnum.html","","<p>A <code>Fixnum</code> holds <code>Integer</code> values that can be\nrepresented in a native machine word (minus 1 bit). If any ...\n",null,1],["Float","","Ruby/classes/Float.html","","",null,0],["Float","","Rails/classes/Float.html","","<p><code>Float</code> objects represent inexact real numbers using the native\narchitecture's double-precision floating ...\n",null,1],["Float","Kernel","Rails/classes/Kernel.html#method-i-Float","(p1)","<p>Returns <em>arg</em> converted to a float. Numeric types are converted\ndirectly, the rest are converted using …\n",null,1],["FloatDomainError","","Rails/classes/FloatDomainError.html","","<p>Raised when attempting to convert special float values (in particular\ninfinite or NaN) to numerical classes ...\n",null,1],["FlushKey","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-FlushKey","(hkey)","",null,1],["Foo","","Rails/classes/Foo.html","","",null,1],["Forwardable","","Rails/classes/Forwardable.html","","<p>The Forwardable module provides delegation of specified methods to a\ndesignated object, using the methods …\n",null,1],["GC","","Rails/classes/GC.html","","<p>The <code>GC</code> module provides an interface to Ruby’s mark and sweep\ngarbage collection mechanism. Some of the …\n",null,1],["GC::Profiler","","Rails/classes/GC/Profiler.html","","<p>The GC profiler provides access to information on GC runs including time,\nlength and object space size. ...\n",null,1],["GDBM","","Rails/classes/GDBM.html","","<p>Summary\n<p>Ruby extension for GNU dbm (gdbm) -- a simple database engine for storing\nkey-value pairs on disk. ...\n",null,1],["GDBMError","","Rails/classes/GDBMError.html","","",null,1],["GDBMFatalError","","Rails/classes/GDBMFatalError.html","","",null,1],["GET","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-GET","()","<p>Override Rack’s GET method to support indifferent access\n",null,0],["GServer","","Rails/classes/GServer.html","","<p>GServer implements a generic server, featuring thread pool management,\nsimple logging, and multi-server …\n",null,1],["Gem","","Rails/classes/Gem.html","","<p>Provides a single method <code>deprecate</code> to be used to declare when\nsomething is going away.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Legacy</span>\n  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["Gem::Builder","","Rails/classes/Gem/Builder.html","","<p>The Builder class processes RubyGem specification files to produce a .gem\nfile.\n",null,1],["Gem::Command","","Rails/classes/Gem/Command.html","","<p>Base class for all Gem commands.  When creating a new gem command, define\n#new, #execute, #arguments …\n",null,1],["Gem::CommandLineError","","Rails/classes/Gem/CommandLineError.html","","",null,1],["Gem::CommandManager","","Rails/classes/Gem/CommandManager.html","","<p>The command manager registers and installs all the individual sub-commands\nsupported by the gem command. …\n",null,1],["Gem::Commands","","Rails/classes/Gem/Commands.html","","<p>This is where Commands will be placed in the namespace\n",null,1],["Gem::Commands::BuildCommand","","Rails/classes/Gem/Commands/BuildCommand.html","","",null,1],["Gem::Commands::CertCommand","","Rails/classes/Gem/Commands/CertCommand.html","","",null,1],["Gem::Commands::CheckCommand","","Rails/classes/Gem/Commands/CheckCommand.html","","",null,1],["Gem::Commands::CleanupCommand","","Rails/classes/Gem/Commands/CleanupCommand.html","","",null,1],["Gem::Commands::ContentsCommand","","Rails/classes/Gem/Commands/ContentsCommand.html","","",null,1],["Gem::Commands::DependencyCommand","","Rails/classes/Gem/Commands/DependencyCommand.html","","",null,1],["Gem::Commands::EnvironmentCommand","","Rails/classes/Gem/Commands/EnvironmentCommand.html","","",null,1],["Gem::Commands::FetchCommand","","Rails/classes/Gem/Commands/FetchCommand.html","","",null,1],["Gem::Commands::GenerateIndexCommand","","Rails/classes/Gem/Commands/GenerateIndexCommand.html","","<p>Generates a index files for use as a gem server.\n<p>See `gem help generate_index`\n",null,1],["Gem::Commands::HelpCommand","","Rails/classes/Gem/Commands/HelpCommand.html","","",null,1],["Gem::Commands::InstallCommand","","Rails/classes/Gem/Commands/InstallCommand.html","","<p>Gem installer command line tool\n<p>See `gem help install`\n",null,1],["Gem::Commands::ListCommand","","Rails/classes/Gem/Commands/ListCommand.html","","<p>An alternate to Gem::Commands::QueryCommand that searches for gems starting\nwith the the supplied argument. …\n",null,1],["Gem::Commands::LockCommand","","Rails/classes/Gem/Commands/LockCommand.html","","",null,1],["Gem::Commands::OutdatedCommand","","Rails/classes/Gem/Commands/OutdatedCommand.html","","",null,1],["Gem::Commands::OwnerCommand","","Rails/classes/Gem/Commands/OwnerCommand.html","","",null,1],["Gem::Commands::PristineCommand","","Rails/classes/Gem/Commands/PristineCommand.html","","",null,1],["Gem::Commands::PushCommand","","Rails/classes/Gem/Commands/PushCommand.html","","",null,1],["Gem::Commands::QueryCommand","","Rails/classes/Gem/Commands/QueryCommand.html","","",null,1],["Gem::Commands::RdocCommand","","Rails/classes/Gem/Commands/RdocCommand.html","","",null,1],["Gem::Commands::SearchCommand","","Rails/classes/Gem/Commands/SearchCommand.html","","",null,1],["Gem::Commands::ServerCommand","","Rails/classes/Gem/Commands/ServerCommand.html","","",null,1],["Gem::Commands::SetupCommand","","Rails/classes/Gem/Commands/SetupCommand.html","","<p>Installs RubyGems itself.  This command is ordinarily only available from a\nRubyGems checkout or tarball. …\n",null,1],["Gem::Commands::SourcesCommand","","Rails/classes/Gem/Commands/SourcesCommand.html","","",null,1],["Gem::Commands::SpecificationCommand","","Rails/classes/Gem/Commands/SpecificationCommand.html","","",null,1],["Gem::Commands::StaleCommand","","Rails/classes/Gem/Commands/StaleCommand.html","","",null,1],["Gem::Commands::UninstallCommand","","Rails/classes/Gem/Commands/UninstallCommand.html","","<p>Gem uninstaller command line tool\n<p>See `gem help uninstall`\n",null,1],["Gem::Commands::UnpackCommand","","Rails/classes/Gem/Commands/UnpackCommand.html","","",null,1],["Gem::Commands::UpdateCommand","","Rails/classes/Gem/Commands/UpdateCommand.html","","",null,1],["Gem::Commands::WhichCommand","","Rails/classes/Gem/Commands/WhichCommand.html","","",null,1],["Gem::ConfigFile","","Rails/classes/Gem/ConfigFile.html","","",null,1],["Gem::ConsoleUI","","Rails/classes/Gem/ConsoleUI.html","","<p>Subclass of StreamUI that instantiates the user interaction using STDIN,\nSTDOUT, and STDERR.\n",null,1],["Gem::DefaultUserInteraction","","Rails/classes/Gem/DefaultUserInteraction.html","","<p>Module that defines the default UserInteraction.  Any class including this\nmodule will have access to …\n",null,1],["Gem::Dependency","","Rails/classes/Gem/Dependency.html","","<p>The Dependency class holds a Gem name and a Gem::Requirement.\n",null,1],["Gem::DependencyError","","Rails/classes/Gem/DependencyError.html","","",null,1],["Gem::DependencyInstaller","","Rails/classes/Gem/DependencyInstaller.html","","<p>Installs a gem along with all its dependencies from local and remote gems.\n",null,1],["Gem::DependencyList","","Rails/classes/Gem/DependencyList.html","","<p>Gem::DependencyList is used for installing and uninstalling gems in the\ncorrect order to avoid conflicts. …\n",null,1],["Gem::DependencyRemovalException","","Rails/classes/Gem/DependencyRemovalException.html","","",null,1],["Gem::Deprecate","","Rails/classes/Gem/Deprecate.html","","",null,1],["Gem::DocManager","","Rails/classes/Gem/DocManager.html","","<p>The documentation manager generates RDoc and RI for RubyGems.\n",null,1],["Gem::DocumentError","","Rails/classes/Gem/DocumentError.html","","",null,1],["Gem::EndOfYAMLException","","Rails/classes/Gem/EndOfYAMLException.html","","<p>Potentially raised when a specification is validated.\n",null,1],["Gem::ErrorReason","","Rails/classes/Gem/ErrorReason.html","","",null,1],["Gem::Exception","","Rails/classes/Gem/Exception.html","","<p>Base exception class for RubyGems.  All exception raised by RubyGems are a\nsubclass of this one.\n",null,1],["Gem::Ext","","Rails/classes/Gem/Ext.html","","<p>Classes for building C extensions live here.\n",null,1],["Gem::Ext::Builder","","Rails/classes/Gem/Ext/Builder.html","","",null,1],["Gem::Ext::ConfigureBuilder","","Rails/classes/Gem/Ext/ConfigureBuilder.html","","",null,1],["Gem::Ext::ExtConfBuilder","","Rails/classes/Gem/Ext/ExtConfBuilder.html","","",null,1],["Gem::Ext::RakeBuilder","","Rails/classes/Gem/Ext/RakeBuilder.html","","",null,1],["Gem::FilePermissionError","","Rails/classes/Gem/FilePermissionError.html","","<p>Signals that a file permission error is preventing the user from installing\nin the requested directories. …\n",null,1],["Gem::Format","","Rails/classes/Gem/Format.html","","<p>Gem::Format knows the guts of the RubyGem .gem file format and provides the\ncapability to read gem files …\n",null,1],["Gem::FormatException","","Rails/classes/Gem/FormatException.html","","<p>Used to raise parsing and loading errors\n",null,1],["Gem::GemNotFoundException","","Rails/classes/Gem/GemNotFoundException.html","","",null,1],["Gem::GemNotInHomeException","","Rails/classes/Gem/GemNotInHomeException.html","","<p>Raised when attempting to uninstall a gem that isn’t in GEM_HOME.\n",null,1],["Gem::GemPathSearcher","","Rails/classes/Gem/GemPathSearcher.html","","<p>GemPathSearcher has the capability to find loadable files inside gems.  It\ngenerates data up front to …\n",null,1],["Gem::GemRunner","","Rails/classes/Gem/GemRunner.html","","<p>Run an instance of the gem program.\n<p>Gem::GemRunner is only intended for internal use by RubyGems itself. …\n",null,1],["Gem::GemcutterUtilities","","Rails/classes/Gem/GemcutterUtilities.html","","",null,1],["Gem::Indexer","","Rails/classes/Gem/Indexer.html","","<p>Top level class for building the gem repository index.\n",null,1],["Gem::InstallError","","Rails/classes/Gem/InstallError.html","","",null,1],["Gem::InstallUpdateOptions","","Rails/classes/Gem/InstallUpdateOptions.html","","<p>Mixin methods for install and update options for Gem::Commands\n",null,1],["Gem::Installer","","Rails/classes/Gem/Installer.html","","<p>The installer class processes RubyGem .gem files and installs the files\ncontained in the .gem into the …\n",null,1],["Gem::Installer::ExtensionBuildError","","Rails/classes/Gem/Installer/ExtensionBuildError.html","","<p>Raised when there is an error while building extensions.\n",null,1],["Gem::InvalidSpecificationException","","Rails/classes/Gem/InvalidSpecificationException.html","","<p>Potentially raised when a specification is validated.\n",null,1],["Gem::LoadError","","Rails/classes/Gem/LoadError.html","","<p>Raised when RubyGems is unable to load or activate a gem.  Contains the\nname and version requirements …\n",null,1],["Gem::LocalRemoteOptions","","Rails/classes/Gem/LocalRemoteOptions.html","","<p>Mixin methods for local and remote Gem::Command options.\n",null,1],["Gem::MockGemUi","","Rails/classes/Gem/MockGemUi.html","","<p>This Gem::StreamUI subclass records input and output to StringIO for\nretrieval during tests.\n",null,1],["Gem::MockGemUi::SystemExitException","","Rails/classes/Gem/MockGemUi/SystemExitException.html","","",null,1],["Gem::MockGemUi::TTY","","Rails/classes/Gem/MockGemUi/TTY.html","","",null,1],["Gem::MockGemUi::TermError","","Rails/classes/Gem/MockGemUi/TermError.html","","",null,1],["Gem::NoAliasYAMLTree","","Rails/classes/Gem/NoAliasYAMLTree.html","","",null,1],["Gem::OldFormat","","Rails/classes/Gem/OldFormat.html","","<p>The format class knows the guts of the RubyGem .gem file format and\nprovides the capability to read gem …\n",null,1],["Gem::OperationNotSupportedError","","Rails/classes/Gem/OperationNotSupportedError.html","","",null,1],["Gem::Package","","Rails/classes/Gem/Package.html","","",null,1],["Gem::Package::BadCheckSum","","Rails/classes/Gem/Package/BadCheckSum.html","","",null,1],["Gem::Package::ClosedIO","","Rails/classes/Gem/Package/ClosedIO.html","","",null,1],["Gem::Package::Error","","Rails/classes/Gem/Package/Error.html","","",null,1],["Gem::Package::FSyncDir","","Rails/classes/Gem/Package/FSyncDir.html","","",null,1],["Gem::Package::FormatError","","Rails/classes/Gem/Package/FormatError.html","","",null,1],["Gem::Package::NonSeekableIO","","Rails/classes/Gem/Package/NonSeekableIO.html","","",null,1],["Gem::Package::TarHeader","","Rails/classes/Gem/Package/TarHeader.html","","<p>A header for a tar file\n",null,1],["Gem::Package::TarInvalidError","","Rails/classes/Gem/Package/TarInvalidError.html","","<p>Raised when a tar file is corrupt\n",null,1],["Gem::Package::TarOutput","","Rails/classes/Gem/Package/TarOutput.html","","<p>TarOutput is a wrapper to TarWriter that builds gem-format tar file.\n<p>Gem-format tar files contain the …\n",null,1],["Gem::Package::TarReader","","Rails/classes/Gem/Package/TarReader.html","","<p>TarReader reads tar files and allows iteration over their items\n",null,1],["Gem::Package::TarReader::Entry","","Rails/classes/Gem/Package/TarReader/Entry.html","","<p>Class for reading entries out of a tar file\n",null,1],["Gem::Package::TarReader::UnexpectedEOF","","Rails/classes/Gem/Package/TarReader/UnexpectedEOF.html","","<p>Raised if the tar IO is not seekable\n",null,1],["Gem::Package::TarWriter","","Rails/classes/Gem/Package/TarWriter.html","","<p>Allows writing of tar files\n",null,1],["Gem::Package::TarWriter::BoundedStream","","Rails/classes/Gem/Package/TarWriter/BoundedStream.html","","<p>IO wrapper that allows writing a limited amount of data\n",null,1],["Gem::Package::TarWriter::FileOverflow","","Rails/classes/Gem/Package/TarWriter/FileOverflow.html","","",null,1],["Gem::Package::TarWriter::RestrictedStream","","Rails/classes/Gem/Package/TarWriter/RestrictedStream.html","","<p>IO wrapper that provides only #write\n",null,1],["Gem::Package::TooLongFileName","","Rails/classes/Gem/Package/TooLongFileName.html","","",null,1],["Gem::PackageTask","","Rails/classes/Gem/PackageTask.html","","<p>Create a package based upon a Gem::Specification.  Gem packages, as well as\nzip files and tar/gzipped …\n",null,1],["Gem::PathSupport","","Rails/classes/Gem/PathSupport.html","","<p>Gem::PathSupport facilitates the GEM_HOME and GEM_PATH environment settings\nto the rest of RubyGems. …\n",null,1],["Gem::Platform","","Rails/classes/Gem/Platform.html","","<p>Available list of platforms for targeting Gem installations.\n",null,1],["Gem::PlatformMismatch","","Rails/classes/Gem/PlatformMismatch.html","","<p>Generated when trying to lookup a gem to indicate that the gem was found,\nbut that it isn’t usable on …\n",null,1],["Gem::RemoteError","","Rails/classes/Gem/RemoteError.html","","<p>Signals that a remote operation cannot be conducted, probably due to not\nbeing connected (or just not …\n",null,1],["Gem::RemoteFetcher","","Rails/classes/Gem/RemoteFetcher.html","","<p>RemoteFetcher handles the details of fetching gems and gem information from\na remote source.\n",null,1],["Gem::RemoteFetcher::FetchError","","Rails/classes/Gem/RemoteFetcher/FetchError.html","","<p>A FetchError exception wraps up the various possible IO and HTTP failures\nthat could happen while downloading …\n",null,1],["Gem::RemoteInstallationCancelled","","Rails/classes/Gem/RemoteInstallationCancelled.html","","",null,1],["Gem::RemoteInstallationSkipped","","Rails/classes/Gem/RemoteInstallationSkipped.html","","",null,1],["Gem::RemoteSourceException","","Rails/classes/Gem/RemoteSourceException.html","","<p>Represents an error communicating via HTTP.\n",null,1],["Gem::RequirePathsBuilder","","Rails/classes/Gem/RequirePathsBuilder.html","","<p>TODO: remove after 1.9.1 dropped\n",null,1],["Gem::Requirement","","Rails/classes/Gem/Requirement.html","","",null,1],["Gem::SSL","","Rails/classes/Gem/SSL.html","","",null,1],["Gem::Security","","Rails/classes/Gem/Security.html","","<p>Signed Gems README\n<p>Table of Contents\n<p>Overview\n",null,1],["Gem::Security::Exception","","Rails/classes/Gem/Security/Exception.html","","<p>Gem::Security default exception type\n",null,1],["Gem::Security::Policy","","Rails/classes/Gem/Security/Policy.html","","<p>A Gem::Security::Policy object encapsulates the settings for verifying\nsigned gem files.  This is the …\n",null,1],["Gem::Security::Signer","","Rails/classes/Gem/Security/Signer.html","","<p>Basic OpenSSL-based package signing class.\n",null,1],["Gem::Server","","Rails/classes/Gem/Server.html","","<p>Gem::Server and allows users to serve gems for consumption by `gem\n–remote-install`.\n<p>gem_server starts …\n",null,1],["Gem::SilentUI","","Rails/classes/Gem/SilentUI.html","","<p>SilentUI is a UI choice that is absolutely silent.\n",null,1],["Gem::SourceIndex","","Rails/classes/Gem/SourceIndex.html","","<p>The SourceIndex object indexes all the gems available from a particular\nsource (e.g. a list of gem directories, …\n",null,1],["Gem::SpecFetcher","","Rails/classes/Gem/SpecFetcher.html","","<p>SpecFetcher handles metadata updates from remote gem repositories.\n",null,1],["Gem::Specification","","Rails/classes/Gem/Specification.html","","<p>The Specification class contains the metadata for a Gem.  Typically defined\nin a .gemspec file or a  …\n",null,1],["Gem::StreamUI","","Rails/classes/Gem/StreamUI.html","","<p>Gem::StreamUI implements a simple stream based user interface.\n",null,1],["Gem::StreamUI::SilentDownloadReporter","","Rails/classes/Gem/StreamUI/SilentDownloadReporter.html","","<p>An absolutely silent download reporter.\n",null,1],["Gem::StreamUI::SilentProgressReporter","","Rails/classes/Gem/StreamUI/SilentProgressReporter.html","","<p>An absolutely silent progress reporter.\n",null,1],["Gem::StreamUI::SimpleProgressReporter","","Rails/classes/Gem/StreamUI/SimpleProgressReporter.html","","<p>A basic dotted progress reporter.\n",null,1],["Gem::StreamUI::VerboseDownloadReporter","","Rails/classes/Gem/StreamUI/VerboseDownloadReporter.html","","<p>A progress reporter that prints out messages about the current progress.\n",null,1],["Gem::StreamUI::VerboseProgressReporter","","Rails/classes/Gem/StreamUI/VerboseProgressReporter.html","","<p>A progress reporter that prints out messages about the current progress.\n",null,1],["Gem::SystemExitException","","Rails/classes/Gem/SystemExitException.html","","<p>Raised to indicate that a system exit should occur with the specified\nexit_code\n",null,1],["Gem::Text","","Rails/classes/Gem/Text.html","","<p>A collection of text-wrangling methods\n",null,1],["Gem::Uninstaller","","Rails/classes/Gem/Uninstaller.html","","<p>An Uninstaller.\n<p>The uninstaller fires pre and post uninstall hooks.  Hooks can be added\neither through …\n",null,1],["Gem::UserInteraction","","Rails/classes/Gem/UserInteraction.html","","<p>Make the default UI accessible without the “ui.” prefix.  Classes including\nthis module may …\n",null,1],["Gem::Validator","","Rails/classes/Gem/Validator.html","","<p>Validator performs various gem file and gem database validation\n",null,1],["Gem::VerificationError","","Rails/classes/Gem/VerificationError.html","","",null,1],["Gem::Version","","Rails/classes/Gem/Version.html","","<p>The Version class processes string versions into comparable values. A\nversion string should normally …\n",null,1],["Gem::VersionOption","","Rails/classes/Gem/VersionOption.html","","<p>Mixin methods for –version and –platform Gem::Command options.\n",null,1],["Gemfile","","Ruby/files/rails/railties/lib/rails/generators/rails/app/templates/Gemfile.html","","<p>source ‘rubygems.org’\n<p>&lt;%= rails_gemfile_entry -%&gt;\n<p>&lt;%= database_gemfile_entry -%&gt;\n",null,0],["Gemfile","","Ruby/files/rails/railties/guides/code/getting_started/Gemfile.html","","<p>source ‘rubygems.org’\n<p>gem ‘rails’, ‘3.2.0’\n<p># Bundle edge Rails instead: # gem ‘rails’, :git =&gt; ‘git: …\n",null,0],["Gemfile","","Ruby/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/Gemfile.html","","<p>source “rubygems.org”\n<p># Declare your gem’s dependencies in &lt;%= name %&gt;.gemspec. # Bundler …\n",null,0],["Gemfile","","Ruby/files/rails/Gemfile.html","","<p>source ‘rubygems.org’\n<p>gemspec\n<p>if ENV\n",null,0],["GetoptLong","","Rails/classes/GetoptLong.html","","<p>The GetoptLong class allows you to parse command line options similarly to\nthe GNU getopt_long() C library …\n",null,1],["GetoptLong::AmbiguousOption","","Rails/classes/GetoptLong/AmbiguousOption.html","","",null,1],["GetoptLong::Error","","Rails/classes/GetoptLong/Error.html","","<p>Error types.\n",null,1],["GetoptLong::InvalidOption","","Rails/classes/GetoptLong/InvalidOption.html","","",null,1],["GetoptLong::MissingArgument","","Rails/classes/GetoptLong/MissingArgument.html","","",null,1],["GetoptLong::NeedlessArgument","","Rails/classes/GetoptLong/NeedlessArgument.html","","",null,1],["HTML","","Ruby/classes/HTML.html","","",null,0],["HTML::FullSanitizer","","Ruby/classes/HTML/FullSanitizer.html","","",null,0],["HTML::LinkSanitizer","","Ruby/classes/HTML/LinkSanitizer.html","","",null,0],["HTML::Sanitizer","","Ruby/classes/HTML/Sanitizer.html","","",null,0],["HTML::Selector","","Ruby/classes/HTML/Selector.html","","<p>Selects HTML elements using CSS 2 selectors.\n<p>The <code>Selector</code> class uses CSS selector expressions to match …\n",null,0],["HTML::Tag","","Ruby/classes/HTML/Tag.html","","",null,0],["HTML::WhiteListSanitizer","","Ruby/classes/HTML/WhiteListSanitizer.html","","",null,0],["Hash","","Ruby/classes/Hash.html","","",null,0],["Hash","","Rails/classes/Hash.html","","<p>A <code>Hash</code> is a collection of key-value pairs. It is similar to an\n<code>Array</code>, except that indexing is done via …\n",null,1],["HomeController","","Ruby/classes/HomeController.html","","",null,0],["HomeHelper","","Ruby/classes/HomeHelper.html","","",null,0],["HttpServer","","Rails/classes/HttpServer.html","","",null,1],["HttpServer::Request","","Rails/classes/HttpServer/Request.html","","<p>Classes ————————————————-\n",null,1],["HttpServer::Response","","Rails/classes/HttpServer/Response.html","","",null,1],["HttpServer::Table","","Rails/classes/HttpServer/Table.html","","<p>a case-insensitive Hash class for HTTP header\n",null,1],["I","Matrix","Rails/classes/Matrix.html#method-c-I","(n)","",null,1],["I18n","","Ruby/classes/I18n.html","","",null,0],["I18n::ExceptionHandler","","Ruby/classes/I18n/ExceptionHandler.html","","",null,0],["I18n::Railtie","","Ruby/classes/I18n/Railtie.html","","",null,0],["IO","","Ruby/classes/IO.html","","",null,0],["IO","","Rails/classes/IO.html","","<p>Class <code>IO</code> is the basis for all input and output in Ruby. An I/O\nstream may be <em>duplexed</em> (that is, bidirectional), …\n",null,1],["IO::WaitReadable","","Rails/classes/IO/WaitReadable.html","","",null,1],["IO::WaitWritable","","Rails/classes/IO/WaitWritable.html","","",null,1],["IO::readable","","Rails/classes/IO/readable.html","","",null,1],["IO::writable","","Rails/classes/IO/writable.html","","",null,1],["IOError","","Rails/classes/IOError.html","","<p>Raised when an IO operation fails.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;/etc/hosts&quot;</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">f</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">f</span> <span class=\"ruby-operator\">&lt;&lt;</span> <span class=\"ruby-string\">&quot;example&quot;</span>}\n  <span class=\"ruby-comment\">#=&gt; IOError: not opened ...</span>\n</pre>\n",null,1],["IPAddr","","Rails/classes/IPAddr.html","","<p>IPAddr provides a set of methods to manipulate an IP address.  Both IPv4\nand IPv6 are supported.\n<p>Example …\n",null,1],["IPSocket","","Rails/classes/IPSocket.html","","<p>IPSocket is the super class of TCPSocket and UDPSocket.\n",null,1],["IRB","","Rails/classes/IRB.html","","\n<pre>nop.rb -\n    $Release Version: 0.9.6$\n    $Revision$\n    by Keiju ISHITSUKA(keiju@ruby-lang.org)</pre>\n<p>–\n\n<pre>irb/ext/cb.rb ...</pre>\n",null,1],["IRB::Abort","","Rails/classes/IRB/Abort.html","","",null,1],["IRB::Context","","Rails/classes/IRB/Context.html","","",null,1],["IRB::ContextExtender","","Rails/classes/IRB/ContextExtender.html","","<p>extension support for Context\n",null,1],["IRB::ContextExtender::CE","","Rails/classes/IRB/ContextExtender.html","","<p>extension support for Context\n",null,1],["IRB::ExtendCommand","","Rails/classes/IRB/ExtendCommand.html","","",null,1],["IRB::ExtendCommand::ChangeWorkspace","","Rails/classes/IRB/ExtendCommand/ChangeWorkspace.html","","",null,1],["IRB::ExtendCommand::CurrentWorkingWorkspace","","Rails/classes/IRB/ExtendCommand/CurrentWorkingWorkspace.html","","",null,1],["IRB::ExtendCommand::Foreground","","Rails/classes/IRB/ExtendCommand/Foreground.html","","",null,1],["IRB::ExtendCommand::Fork","","Rails/classes/IRB/ExtendCommand/Fork.html","","",null,1],["IRB::ExtendCommand::Help","","Rails/classes/IRB/ExtendCommand/Help.html","","",null,1],["IRB::ExtendCommand::IrbCommand","","Rails/classes/IRB/ExtendCommand/IrbCommand.html","","",null,1],["IRB::ExtendCommand::Jobs","","Rails/classes/IRB/ExtendCommand/Jobs.html","","",null,1],["IRB::ExtendCommand::Kill","","Rails/classes/IRB/ExtendCommand/Kill.html","","",null,1],["IRB::ExtendCommand::Load","","Rails/classes/IRB/ExtendCommand/Load.html","","",null,1],["IRB::ExtendCommand::Nop","","Rails/classes/IRB/ExtendCommand/Nop.html","","",null,1],["IRB::ExtendCommand::PopWorkspace","","Rails/classes/IRB/ExtendCommand/PopWorkspace.html","","",null,1],["IRB::ExtendCommand::PushWorkspace","","Rails/classes/IRB/ExtendCommand/PushWorkspace.html","","",null,1],["IRB::ExtendCommand::Require","","Rails/classes/IRB/ExtendCommand/Require.html","","",null,1],["IRB::ExtendCommand::Source","","Rails/classes/IRB/ExtendCommand/Source.html","","",null,1],["IRB::ExtendCommand::Workspaces","","Rails/classes/IRB/ExtendCommand/Workspaces.html","","",null,1],["IRB::ExtendCommandBundle","","Rails/classes/IRB/ExtendCommandBundle.html","","<p>IRB extended command\n",null,1],["IRB::ExtendCommandBundle::EXCB","","Rails/classes/IRB/ExtendCommandBundle.html","","<p>IRB extended command\n",null,1],["IRB::FileInputMethod","","Rails/classes/IRB/FileInputMethod.html","","",null,1],["IRB::Frame","","Rails/classes/IRB/Frame.html","","",null,1],["IRB::History","","Rails/classes/IRB/History.html","","",null,1],["IRB::HistorySavingAbility","","Rails/classes/IRB/HistorySavingAbility.html","","",null,1],["IRB::INSPECTORS","","Rails/classes/IRB/INSPECTORS.html","","",null,1],["IRB::InputCompletor","","Rails/classes/IRB/InputCompletor.html","","",null,1],["IRB::InputMethod","","Rails/classes/IRB/InputMethod.html","","",null,1],["IRB::Inspector","","Rails/classes/IRB/Inspector.html","","",null,1],["IRB::Irb","","Rails/classes/IRB/Irb.html","","<p>irb interpreter main routine\n",null,1],["IRB::IrbLoader","","Rails/classes/IRB/IrbLoader.html","","",null,1],["IRB::JobManager","","Rails/classes/IRB/JobManager.html","","<p>job management class\n",null,1],["IRB::LoadAbort","","Rails/classes/IRB/LoadAbort.html","","",null,1],["IRB::Locale","","Rails/classes/IRB/Locale.html","","",null,1],["IRB::MethodExtender","","Rails/classes/IRB/MethodExtender.html","","",null,1],["IRB::Notifier","","Rails/classes/IRB/Notifier.html","","",null,1],["IRB::Notifier::AbstractNotifier","","Rails/classes/IRB/Notifier/AbstractNotifier.html","","",null,1],["IRB::Notifier::CompositeNotifier","","Rails/classes/IRB/Notifier/CompositeNotifier.html","","",null,1],["IRB::Notifier::LeveledNotifier","","Rails/classes/IRB/Notifier/LeveledNotifier.html","","",null,1],["IRB::Notifier::NoMsgNotifier","","Rails/classes/IRB/Notifier/NoMsgNotifier.html","","",null,1],["IRB::OutputMethod","","Rails/classes/IRB/OutputMethod.html","","<p>OutputMethod\n\n<pre>StdioOutputMethod</pre>\n",null,1],["IRB::ReadlineInputMethod","","Rails/classes/IRB/ReadlineInputMethod.html","","",null,1],["IRB::SLex","","Rails/classes/IRB/SLex.html","","",null,1],["IRB::SLex::Node","","Rails/classes/IRB/SLex/Node.html","","",null,1],["IRB::StdioInputMethod","","Rails/classes/IRB/StdioInputMethod.html","","",null,1],["IRB::StdioOutputMethod","","Rails/classes/IRB/StdioOutputMethod.html","","",null,1],["IRB::WorkSpace","","Rails/classes/IRB/WorkSpace.html","","",null,1],["Iconv","","Rails/classes/Iconv.html","","<p>Summary\n<p>Ruby extension for charset conversion.\n<p>Abstract\n",null,1],["Iconv::BrokenLibrary","","Rails/classes/Iconv/BrokenLibrary.html","","<p>Detected a bug of underlying iconv(3) libray.\n<p>returns an error without setting errno properly\n\n",null,1],["Iconv::Failure","","Rails/classes/Iconv/Failure.html","","<p>Base attributes for Iconv exceptions.\n",null,1],["Iconv::IllegalSequence","","Rails/classes/Iconv/IllegalSequence.html","","<p>Input conversion stopped due to an input byte that does not belong to the\ninput codeset, or the output ...\n",null,1],["Iconv::InvalidCharacter","","Rails/classes/Iconv/InvalidCharacter.html","","<p>Input conversion stopped due to an incomplete character or shift sequence\nat the end of the input buffer. ...\n",null,1],["Iconv::InvalidEncoding","","Rails/classes/Iconv/InvalidEncoding.html","","<p>Requested coding-system is not available on this system.\n",null,1],["Iconv::OutOfRange","","Rails/classes/Iconv/OutOfRange.html","","<p>Iconv library internal error.  Must not occur.\n",null,1],["IndexError","","Rails/classes/IndexError.html","","<p>Raised when the given index is invalid.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [:<span class=\"ruby-identifier\">foo</span>, :<span class=\"ruby-identifier\">bar</span>]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">fetch</span>(<span class=\"ruby-value\">0</span>)   <span class=\"ruby-comment\">#=&gt; :foo</span>\n<span class=\"ruby-identifier\">a</span>[<span class=\"ruby-value\">4</span>]         <span class=\"ruby-comment\">#=&gt; nil</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">fetch</span>(<span class=\"ruby-value\">4</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["Inspector","IRB","Rails/classes/IRB.html#method-c-Inspector","(inspect, init = nil)","",null,1],["Integer","","Ruby/classes/Integer.html","","",null,0],["Integer","","Rails/classes/Integer.html","","<p><code>Integer</code> is the basis for the two concrete classes that hold\nwhole numbers, <code>Bignum</code> and <code>Fixnum</code>.\n<p>Add double …\n",null,1],["Integer","Kernel","Rails/classes/Kernel.html#method-i-Integer","(p1, p2 = v2)","<p>Converts <em>arg</em> to a <code>Fixnum</code> or <code>Bignum</code>.\nNumeric types are converted directly (with floating point numbers …\n",null,1],["Interrupt","","Rails/classes/Interrupt.html","","<p>Raised with the interrupt signal is received, typically because the user\npressed on Control-C (on most ...\n",null,1],["JSON","","Rails/classes/JSON.html","","",null,1],["JSON::CircularDatastructure","","Rails/classes/JSON/CircularDatastructure.html","","",null,1],["JSON::Ext","","Rails/classes/JSON/Ext.html","","<p>This module holds all the modules/classes that implement JSON’s\nfunctionality as C extensions.\n",null,1],["JSON::GeneratorError","","Rails/classes/JSON/GeneratorError.html","","<p>This exception is raised if a generator or unparser error occurs.\n",null,1],["JSON::JSONError","","Rails/classes/JSON/JSONError.html","","<p>The base exception for JSON errors.\n",null,1],["JSON::MissingUnicodeSupport","","Rails/classes/JSON/MissingUnicodeSupport.html","","<p>This exception is raised if the required unicode support is missing on the\nsystem. Usually this means …\n",null,1],["JSON::NestingError","","Rails/classes/JSON/NestingError.html","","<p>This exception is raised if the nesting of parsed data structures is too\ndeep.\n",null,1],["JSON::ParserError","","Rails/classes/JSON/ParserError.html","","<p>This exception is raised if a parser error occurs.\n",null,1],["JSON::UnparserError","","Rails/classes/JSON/GeneratorError.html","","<p>This exception is raised if a generator or unparser error occurs.\n",null,1],["Jacobian","","Rails/classes/Jacobian.html","","<p>require ‘bigdecimal/jacobian’\n<p>Provides methods to compute the Jacobian matrix of a set of equations at …\n",null,1],["JobManager","IRB","Rails/classes/IRB.html#method-c-JobManager","()","",null,1],["Js","","Ruby/classes/Js.html","","",null,0],["Js::Generators","","Ruby/classes/Js/Generators.html","","",null,0],["Js::Generators::AssetsGenerator","","Ruby/classes/Js/Generators/AssetsGenerator.html","","",null,0],["Kconv","","Rails/classes/Kconv.html","","<p>Kanji Converter for Ruby.\n",null,1],["Kernel","","Ruby/classes/Kernel.html","","",null,0],["Kernel","","Rails/classes/Kernel.html","","",null,1],["KeyError","","Rails/classes/KeyError.html","","<p>Raised when the specified key is not found. It is a subclass of IndexError.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = {<span class=\"ruby-string\">&quot;foo&quot;</span> =<span class=\"ruby-operator\">&gt;</span> :<span class=\"ruby-identifier\">bar</span>}\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">fetch</span>(<span class=\"ruby-string\">&quot;foo&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["LOG_MASK","Syslog","Rails/classes/Syslog.html#method-c-LOG_MASK","(p1)","<p>Generates a mask bit for a priority level. See #mask=\n",null,1],["LOG_MASK","Syslog::Constants","Rails/classes/Syslog/Constants.html#method-c-LOG_MASK","(p1)","<p>Generates a mask bit for a priority level. See #mask=\n",null,1],["LOG_UPTO","Syslog","Rails/classes/Syslog.html#method-c-LOG_UPTO","(p1)","<p>Generates a mask value for priority levels at or below the level specified.\nSee #mask=\n",null,1],["LOG_UPTO","Syslog::Constants","Rails/classes/Syslog/Constants.html#method-c-LOG_UPTO","(p1)","<p>Generates a mask value for priority levels at or below the level specified.\nSee #mask=\n",null,1],["LUSolve","","Rails/classes/LUSolve.html","","<p>Solves a*x = b for x, using LU decomposition.\n",null,1],["LoadError","","Ruby/classes/LoadError.html","","",null,0],["LoadError","","Rails/classes/LoadError.html","","<p>Raised when a file required (a Ruby script, extension library, ...) fails\nto load.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'this/file/does/not/exist'</span>\n</pre>\n",null,1],["LocalJumpError","","Rails/classes/LocalJumpError.html","","<p>Raised when Ruby can't yield as requested.\n<p>A typical scenario is attempting to yield when no block is ...\n",null,1],["Logger","","Ruby/classes/Logger.html","","",null,0],["Logger","","Rails/classes/Logger.html","","<p>Description\n<p>The Logger class provides a simple but sophisticated logging utility that\nyou can use to output …\n",null,1],["Logger::Application","","Rails/classes/Logger/Application.html","","<p>Description\n<p>Application – Add logging support to your application.\n<p>Usage\n",null,1],["Logger::Formatter","","Rails/classes/Logger/Formatter.html","","<p>Default formatter for log messages\n",null,1],["Logger::LogDevice","","Rails/classes/Logger/LogDevice.html","","<p>Device used for logging messages.\n",null,1],["Logger::LogDevice::LogDeviceMutex","","Rails/classes/Logger/LogDevice/LogDeviceMutex.html","","",null,1],["Logger::Severity","","Rails/classes/Logger/Severity.html","","<p>Logging severity.\n",null,1],["Logger::SimpleFormatter","","Ruby/classes/Logger/SimpleFormatter.html","","<p>Simple formatter which only displays the message.\n",null,0],["Logging","","Rails/classes/Logging.html","","",null,1],["MIT-LICENSE","","Ruby/files/rails/actionmailer/MIT-LICENSE.html","","<p>Copyright © 2004-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","Ruby/files/rails/activesupport/MIT-LICENSE.html","","<p>Copyright © 2005-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","Ruby/files/rails/activeresource/MIT-LICENSE.html","","<p>Copyright © 2006-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","Ruby/files/rails/actionpack/MIT-LICENSE.html","","<p>Copyright © 2004-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","Ruby/files/rails/activemodel/MIT-LICENSE.html","","<p>Copyright © 2004-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","Ruby/files/rails/railties/MIT-LICENSE.html","","<p>Copyright © 2004-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","Ruby/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/MIT-LICENSE.html","","<p>Copyright &lt;%= Date.today.year %&gt; YOURNAME\n<p>Permission is hereby granted, free of charge, to any person …\n",null,0],["MIT-LICENSE","","Ruby/files/rails/activerecord/MIT-LICENSE.html","","<p>Copyright © 2004-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["Marshal","","Rails/classes/Marshal.html","","<p>The marshaling library converts collections of Ruby objects into a byte\nstream, allowing them to be stored …\n",null,1],["Marshal","Gem::Server","Rails/classes/Gem/Server.html#method-i-Marshal","(req, res)","",null,1],["MatchData","","Rails/classes/MatchData.html","","<p><code>MatchData</code> is the type of the special variable <code>$~</code>,\nand is the type of the object returned by <code>Regexp#match</code> ...\n",null,1],["Math","","Rails/classes/Math.html","","<p>The <code>Math</code> module contains module functions for basic\ntrigonometric and transcendental functions. See class …\n",null,1],["Math::DomainError","","Rails/classes/Math/DomainError.html","","<p>Raised when a mathematical function is evaluated outside of its domain of\ndefinition.\n<p>For example, since ...\n",null,1],["Matrix","","Rails/classes/Matrix.html","","<p>The <code>Matrix</code> class represents a mathematical matrix. It provides\nmethods for creating matrices, operating …\n",null,1],["Matrix::EigenvalueDecomposition","","Rails/classes/Matrix/EigenvalueDecomposition.html","","<p>Eigenvalues and eigenvectors of a real matrix.\n<p>Computes the eigenvalues and eigenvectors of a matrix  …\n",null,1],["Matrix::LUPDecomposition","","Rails/classes/Matrix/LUPDecomposition.html","","<p>For an m-by-n matrix A with m &gt;= n, the LU decomposition is an m-by-n\nunit lower triangular matrix …\n",null,1],["Method","","Rails/classes/Method.html","","<p>Proc\n",null,1],["Mime","","Ruby/classes/Mime.html","","",null,0],["Mime::Mimes","","Ruby/classes/Mime/Mimes.html","","",null,0],["Mime::Type","","Ruby/classes/Mime/Type.html","","<p>Encapsulates the notion of a mime type. Can be used at render time, for\nexample, with:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">PostsController</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["Module","","Ruby/classes/Module.html","","<p>Extends the API for constants to be able to deal with qualified names.\nArguments are assumed to be relative …\n",null,0],["Module","","Rails/classes/Module.html","","<p>A <code>Module</code> is a collection of methods and constants. The methods\nin a module may be instance methods or ...\n",null,1],["Monitor","","Rails/classes/Monitor.html","","<p>Use the Monitor class when you want to have a lock object for blocks with\nmutual exclusion.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'monitor'</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["MonitorMixin","","Rails/classes/MonitorMixin.html","","<p>In concurrent programming, a monitor is an object or module intended to be\nused safely by more than one …\n",null,1],["MonitorMixin::ConditionVariable","","Rails/classes/MonitorMixin/ConditionVariable.html","","<p>FIXME: This isn’t documented in Nutshell.\n<p>Since MonitorMixin.new_cond returns a ConditionVariable, and …\n",null,1],["MonitorMixin::ConditionVariable::Timeout","","Rails/classes/MonitorMixin/ConditionVariable/Timeout.html","","",null,1],["Mutex","","Rails/classes/Mutex.html","","<p>Mutex implements a simple semaphore that can be used to coordinate access\nto shared data from multiple ...\n",null,1],["Mutex_m","","Rails/classes/Mutex_m.html","","",null,1],["Mysql","","Ruby/classes/Mysql.html","","",null,0],["Mysql::Result","","Ruby/classes/Mysql/Result.html","","",null,0],["Mysql::Stmt","","Ruby/classes/Mysql/Stmt.html","","",null,0],["Mysql::Time","","Ruby/classes/Mysql/Time.html","","",null,0],["NKF","","Rails/classes/NKF.html","","<p>NKF - Ruby extension for Network Kanji Filter\n<p>Description\n<p>This is a Ruby Extension version of nkf (Network …\n",null,1],["NQXML","","Rails/classes/NQXML.html","","<p>add some methods to NQXML::Node\n",null,1],["NQXML::Node","","Rails/classes/NQXML/Node.html","","",null,1],["NameError","","Ruby/classes/NameError.html","","",null,0],["NameError","","Rails/classes/NameError.html","","<p>Raised when a given name is invalid or undefined.\n\n<pre>puts foo</pre>\n<p><em>raises the exception:</em>\n",null,1],["Net","","Rails/classes/Net.html","","",null,1],["Net::APOP","","Rails/classes/Net/APOP.html","","<p>This class is equivalent to POP3, except that it uses APOP authentication.\n",null,1],["Net::APOPSession","","Rails/classes/Net/APOP.html","","<p>This class is equivalent to POP3, except that it uses APOP authentication.\n",null,1],["Net::FTP","","Rails/classes/Net/FTP.html","","<p>This class implements the File Transfer Protocol.  If you have used a\ncommand-line FTP program, and are …\n",null,1],["Net::FTP::NullSocket","","Rails/classes/Net/FTP/NullSocket.html","","",null,1],["Net::FTPConnectionError","","Rails/classes/Net/FTPConnectionError.html","","",null,1],["Net::FTPError","","Rails/classes/Net/FTPError.html","","",null,1],["Net::FTPPermError","","Rails/classes/Net/FTPPermError.html","","",null,1],["Net::FTPProtoError","","Rails/classes/Net/FTPProtoError.html","","",null,1],["Net::FTPReplyError","","Rails/classes/Net/FTPReplyError.html","","",null,1],["Net::FTPTempError","","Rails/classes/Net/FTPTempError.html","","",null,1],["Net::HTTP","","Rails/classes/Net/HTTP.html","","<p>An HTTP client API for Ruby.\n<p>Net::HTTP provides a rich library which can be used to build HTTP\nuser-agents. …\n",null,1],["Net::HTTP::Copy","","Rails/classes/Net/HTTP/Copy.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,1],["Net::HTTP::Delete","","Rails/classes/Net/HTTP/Delete.html","","<p>See Net::HTTPGenericRequest for attributes and methods. See Net::HTTP for\nusage examples.\n",null,1],["Net::HTTP::Get","","Rails/classes/Net/HTTP/Get.html","","<p>See Net::HTTPGenericRequest for attributes and methods. See Net::HTTP for\nusage examples.\n",null,1],["Net::HTTP::Head","","Rails/classes/Net/HTTP/Head.html","","<p>See Net::HTTPGenericRequest for attributes and methods. See Net::HTTP for\nusage examples.\n",null,1],["Net::HTTP::Lock","","Rails/classes/Net/HTTP/Lock.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,1],["Net::HTTP::Mkcol","","Rails/classes/Net/HTTP/Mkcol.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,1],["Net::HTTP::Move","","Rails/classes/Net/HTTP/Move.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,1],["Net::HTTP::Options","","Rails/classes/Net/HTTP/Options.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,1],["Net::HTTP::Patch","","Rails/classes/Net/HTTP/Patch.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,1],["Net::HTTP::Post","","Rails/classes/Net/HTTP/Post.html","","<p>See Net::HTTPGenericRequest for attributes and methods. See Net::HTTP for\nusage examples.\n",null,1],["Net::HTTP::Propfind","","Rails/classes/Net/HTTP/Propfind.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,1],["Net::HTTP::Proppatch","","Rails/classes/Net/HTTP/Proppatch.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,1],["Net::HTTP::Put","","Rails/classes/Net/HTTP/Put.html","","<p>See Net::HTTPGenericRequest for attributes and methods. See Net::HTTP for\nusage examples.\n",null,1],["Net::HTTP::Trace","","Rails/classes/Net/HTTP/Trace.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,1],["Net::HTTP::Unlock","","Rails/classes/Net/HTTP/Unlock.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,1],["Net::HTTPAccepted","","Rails/classes/Net/HTTPAccepted.html","","",null,1],["Net::HTTPBadGateway","","Rails/classes/Net/HTTPBadGateway.html","","",null,1],["Net::HTTPBadRequest","","Rails/classes/Net/HTTPBadRequest.html","","",null,1],["Net::HTTPBadResponse","","Rails/classes/Net/HTTPBadResponse.html","","",null,1],["Net::HTTPClientError","","Rails/classes/Net/HTTPClientError.html","","",null,1],["Net::HTTPConflict","","Rails/classes/Net/HTTPConflict.html","","",null,1],["Net::HTTPContinue","","Rails/classes/Net/HTTPContinue.html","","",null,1],["Net::HTTPCreated","","Rails/classes/Net/HTTPCreated.html","","",null,1],["Net::HTTPError","","Rails/classes/Net/HTTPError.html","","",null,1],["Net::HTTPExceptions","","Rails/classes/Net/HTTPExceptions.html","","<p>HTTP exception class. You cannot use HTTPExceptions directly; instead, you\nmust use its subclasses.\n",null,1],["Net::HTTPExpectationFailed","","Rails/classes/Net/HTTPExpectationFailed.html","","",null,1],["Net::HTTPFatalError","","Rails/classes/Net/HTTPFatalError.html","","",null,1],["Net::HTTPForbidden","","Rails/classes/Net/HTTPForbidden.html","","",null,1],["Net::HTTPFound","","Rails/classes/Net/HTTPFound.html","","",null,1],["Net::HTTPGatewayTimeOut","","Rails/classes/Net/HTTPGatewayTimeOut.html","","",null,1],["Net::HTTPGenericRequest","","Rails/classes/Net/HTTPGenericRequest.html","","<p>HTTPGenericRequest is the parent of the HTTPRequest class. Do not use this\ndirectly; use a subclass of …\n",null,1],["Net::HTTPGone","","Rails/classes/Net/HTTPGone.html","","",null,1],["Net::HTTPHeader","","Rails/classes/Net/HTTPHeader.html","","<p>The HTTPHeader module defines methods for reading and writing HTTP headers.\n<p>It is used as a mixin by other …\n",null,1],["Net::HTTPHeaderSyntaxError","","Rails/classes/Net/HTTPHeaderSyntaxError.html","","",null,1],["Net::HTTPInformation","","Rails/classes/Net/HTTPInformation.html","","",null,1],["Net::HTTPInternalServerError","","Rails/classes/Net/HTTPInternalServerError.html","","",null,1],["Net::HTTPLengthRequired","","Rails/classes/Net/HTTPLengthRequired.html","","",null,1],["Net::HTTPMethodNotAllowed","","Rails/classes/Net/HTTPMethodNotAllowed.html","","",null,1],["Net::HTTPMovedPermanently","","Rails/classes/Net/HTTPMovedPermanently.html","","",null,1],["Net::HTTPMultipleChoice","","Rails/classes/Net/HTTPMultipleChoice.html","","",null,1],["Net::HTTPNoContent","","Rails/classes/Net/HTTPNoContent.html","","",null,1],["Net::HTTPNonAuthoritativeInformation","","Rails/classes/Net/HTTPNonAuthoritativeInformation.html","","",null,1],["Net::HTTPNotAcceptable","","Rails/classes/Net/HTTPNotAcceptable.html","","",null,1],["Net::HTTPNotFound","","Rails/classes/Net/HTTPNotFound.html","","",null,1],["Net::HTTPNotImplemented","","Rails/classes/Net/HTTPNotImplemented.html","","",null,1],["Net::HTTPNotModified","","Rails/classes/Net/HTTPNotModified.html","","",null,1],["Net::HTTPOK","","Rails/classes/Net/HTTPOK.html","","",null,1],["Net::HTTPPartialContent","","Rails/classes/Net/HTTPPartialContent.html","","",null,1],["Net::HTTPPaymentRequired","","Rails/classes/Net/HTTPPaymentRequired.html","","",null,1],["Net::HTTPPreconditionFailed","","Rails/classes/Net/HTTPPreconditionFailed.html","","",null,1],["Net::HTTPProxyAuthenticationRequired","","Rails/classes/Net/HTTPProxyAuthenticationRequired.html","","",null,1],["Net::HTTPRedirection","","Rails/classes/Net/HTTPRedirection.html","","",null,1],["Net::HTTPRequest","","Rails/classes/Net/HTTPRequest.html","","<p>HTTP request class. This class wraps together the request header and the\nrequest path. You cannot use …\n",null,1],["Net::HTTPRequestEntityTooLarge","","Rails/classes/Net/HTTPRequestEntityTooLarge.html","","",null,1],["Net::HTTPRequestTimeOut","","Rails/classes/Net/HTTPRequestTimeOut.html","","",null,1],["Net::HTTPRequestURITooLong","","Rails/classes/Net/HTTPRequestURITooLong.html","","",null,1],["Net::HTTPRequestedRangeNotSatisfiable","","Rails/classes/Net/HTTPRequestedRangeNotSatisfiable.html","","",null,1],["Net::HTTPResetContent","","Rails/classes/Net/HTTPResetContent.html","","",null,1],["Net::HTTPResponse","","Rails/classes/Net/HTTPResponse.html","","<p>HTTP response class.\n<p>This class wraps together the response header and the response body (the\nentity requested). …\n",null,1],["Net::HTTPRetriableError","","Rails/classes/Net/HTTPRetriableError.html","","",null,1],["Net::HTTPSeeOther","","Rails/classes/Net/HTTPSeeOther.html","","",null,1],["Net::HTTPServerError","","Rails/classes/Net/HTTPServerError.html","","",null,1],["Net::HTTPServerException","","Rails/classes/Net/HTTPServerException.html","","",null,1],["Net::HTTPServiceUnavailable","","Rails/classes/Net/HTTPServiceUnavailable.html","","",null,1],["Net::HTTPSession","","Rails/classes/Net/HTTP.html","","<p>An HTTP client API for Ruby.\n<p>Net::HTTP provides a rich library which can be used to build HTTP\nuser-agents. …\n",null,1],["Net::HTTPSuccess","","Rails/classes/Net/HTTPSuccess.html","","",null,1],["Net::HTTPSwitchProtocol","","Rails/classes/Net/HTTPSwitchProtocol.html","","",null,1],["Net::HTTPTemporaryRedirect","","Rails/classes/Net/HTTPTemporaryRedirect.html","","",null,1],["Net::HTTPUnauthorized","","Rails/classes/Net/HTTPUnauthorized.html","","",null,1],["Net::HTTPUnknownResponse","","Rails/classes/Net/HTTPUnknownResponse.html","","",null,1],["Net::HTTPUnsupportedMediaType","","Rails/classes/Net/HTTPUnsupportedMediaType.html","","",null,1],["Net::HTTPUseProxy","","Rails/classes/Net/HTTPUseProxy.html","","",null,1],["Net::HTTPVersionNotSupported","","Rails/classes/Net/HTTPVersionNotSupported.html","","",null,1],["Net::IMAP","","Rails/classes/Net/IMAP.html","","<p>Net::IMAP implements Internet Message Access Protocol (IMAP) client\nfunctionality.  The protocol is described …\n",null,1],["Net::IMAP::BadResponseError","","Rails/classes/Net/IMAP/BadResponseError.html","","<p>Error raised upon a “BAD” response from the server, indicating that the\nclient command violated …\n",null,1],["Net::IMAP::BodyTypeBasic","","Rails/classes/Net/IMAP/BodyTypeBasic.html","","<p>Net::IMAP::BodyTypeBasic represents basic body structures of messages.\n<p>Fields:\n<p>media_type &mdash; Returns the content …\n",null,1],["Net::IMAP::BodyTypeMessage","","Rails/classes/Net/IMAP/BodyTypeMessage.html","","<p>Net::IMAP::BodyTypeMessage represents MESSAGE/RFC822 body structures of\nmessages.\n<p>Fields:\n<p>envelope &mdash; Returns …\n",null,1],["Net::IMAP::BodyTypeMultipart","","Rails/classes/Net/IMAP/BodyTypeMultipart.html","","<p>Net::IMAP::BodyTypeMultipart represents multipart body structures of\nmessages.\n<p>Fields:\n<p>media_type &mdash; Returns …\n",null,1],["Net::IMAP::BodyTypeText","","Rails/classes/Net/IMAP/BodyTypeText.html","","<p>Net::IMAP::BodyTypeText represents TEXT body structures of messages.\n<p>Fields:\n<p>lines &mdash; Returns the size of …\n",null,1],["Net::IMAP::ByeResponseError","","Rails/classes/Net/IMAP/ByeResponseError.html","","<p>Error raised upon a “BYE” response from the server, indicating that the\nclient is not being …\n",null,1],["Net::IMAP::CramMD5Authenticator","","Rails/classes/Net/IMAP/CramMD5Authenticator.html","","<p>Authenticator for the “CRAM-MD5” authentication type.  See #authenticate().\n",null,1],["Net::IMAP::DataFormatError","","Rails/classes/Net/IMAP/DataFormatError.html","","<p>Error raised when data is in the incorrect format.\n",null,1],["Net::IMAP::DigestMD5Authenticator","","Rails/classes/Net/IMAP/DigestMD5Authenticator.html","","<p>Authenticator for the “DIGEST-MD5” authentication type.  See\n#authenticate().\n",null,1],["Net::IMAP::Error","","Rails/classes/Net/IMAP/Error.html","","<p>Superclass of IMAP errors.\n",null,1],["Net::IMAP::FlagCountError","","Rails/classes/Net/IMAP/FlagCountError.html","","<p>Error raised when too many flags are interned to symbols.\n",null,1],["Net::IMAP::LoginAuthenticator","","Rails/classes/Net/IMAP/LoginAuthenticator.html","","<p>Authenticator for the “LOGIN” authentication type.  See #authenticate().\n",null,1],["Net::IMAP::NoResponseError","","Rails/classes/Net/IMAP/NoResponseError.html","","<p>Error raised upon a “NO” response from the server, indicating that the\nclient command could …\n",null,1],["Net::IMAP::PlainAuthenticator","","Rails/classes/Net/IMAP/PlainAuthenticator.html","","<p>Authenticator for the “PLAIN” authentication type.  See #authenticate().\n",null,1],["Net::IMAP::ResponseError","","Rails/classes/Net/IMAP/ResponseError.html","","<p>Superclass of all errors used to encapsulate “fail” responses from the\nserver.\n",null,1],["Net::IMAP::ResponseParseError","","Rails/classes/Net/IMAP/ResponseParseError.html","","<p>Error raised when a response from the server is non-parseable.\n",null,1],["Net::POP","","Rails/classes/Net/POP3.html","","<p>Net::POP3\n<p>What is This Library?\n<p>This library provides functionality for retrieving email via POP3, the …\n",null,1],["Net::POP3","","Rails/classes/Net/POP3.html","","<p>Net::POP3\n<p>What is This Library?\n<p>This library provides functionality for retrieving email via POP3, the …\n",null,1],["Net::POP3Session","","Rails/classes/Net/POP3.html","","<p>Net::POP3\n<p>What is This Library?\n<p>This library provides functionality for retrieving email via POP3, the …\n",null,1],["Net::POPAuthenticationError","","Rails/classes/Net/POPAuthenticationError.html","","<p>POP3 authentication error.\n",null,1],["Net::POPBadResponse","","Rails/classes/Net/POPBadResponse.html","","<p>Unexpected response from the server.\n",null,1],["Net::POPError","","Rails/classes/Net/POPError.html","","<p>Non-authentication POP3 protocol error (reply code “-ERR”, except\nauthentication).\n",null,1],["Net::POPMail","","Rails/classes/Net/POPMail.html","","<p>This class represents a message which exists on the POP server. Instances\nof this class are created by …\n",null,1],["Net::POPSession","","Rails/classes/Net/POP3.html","","<p>Net::POP3\n<p>What is This Library?\n<p>This library provides functionality for retrieving email via POP3, the …\n",null,1],["Net::SMTP","","Rails/classes/Net/SMTP.html","","<p>Net::SMTP\n<p>What is This Library?\n<p>This library provides functionality to send internet mail via SMTP, the …\n",null,1],["Net::SMTP::Response","","Rails/classes/Net/SMTP/Response.html","","<p>This class represents a response received by the SMTP server. Instances of\nthis class are created by …\n",null,1],["Net::SMTPAuthenticationError","","Rails/classes/Net/SMTPAuthenticationError.html","","<p>Represents an SMTP authentication error.\n",null,1],["Net::SMTPError","","Rails/classes/Net/SMTPError.html","","<p>Module mixed in to all SMTP error classes\n",null,1],["Net::SMTPFatalError","","Rails/classes/Net/SMTPFatalError.html","","<p>Represents a fatal SMTP error (error code 5xx, except for 500)\n",null,1],["Net::SMTPServerBusy","","Rails/classes/Net/SMTPServerBusy.html","","<p>Represents SMTP error code 420 or 450, a temporary error.\n",null,1],["Net::SMTPSession","","Rails/classes/Net/SMTP.html","","<p>Net::SMTP\n<p>What is This Library?\n<p>This library provides functionality to send internet mail via SMTP, the …\n",null,1],["Net::SMTPSyntaxError","","Rails/classes/Net/SMTPSyntaxError.html","","<p>Represents an SMTP command syntax error (error code 500)\n",null,1],["Net::SMTPUnknownError","","Rails/classes/Net/SMTPUnknownError.html","","<p>Unexpected reply code returned from server.\n",null,1],["Net::SMTPUnsupportedCommand","","Rails/classes/Net/SMTPUnsupportedCommand.html","","<p>Command is not supported on server.\n",null,1],["Net::Telnet","","Rails/classes/Net/Telnet.html","","<p>Net::Telnet\n<p>Provides telnet client functionality.\n<p>This class also has, through delegation, all the methods …\n",null,1],["Newton","","Rails/classes/Newton.html","","<p>newton.rb\n<p>Solves the nonlinear algebraic equation system f = 0 by Newton’s method.\nThis program is not …\n",null,1],["NilClass","","Ruby/classes/NilClass.html","","<p>Extensions to <code>nil</code> which allow for more helpful error messages\nfor people who are new to Rails.\n<p>NilClass#id …\n",null,0],["NilClass","","Rails/classes/NilClass.html","","<p>The class of the singleton object <code>nil</code>.\n",null,1],["NoMemoryError","","Rails/classes/NoMemoryError.html","","<p>Raised when memory allocation fails.\n",null,1],["NoMethodError","","Rails/classes/NoMethodError.html","","<p>Raised when a method is called on a receiver which doesn't have it defined\nand also fails to respond ...\n",null,1],["NotImplementedError","","Rails/classes/NotImplementedError.html","","<p>Raised when a feature is not implemented on the current platform. For\nexample, methods depending on the ...\n",null,1],["Numeric","","Ruby/classes/Numeric.html","","",null,0],["Numeric","","Rails/classes/Numeric.html","","<p>Document-class: FloatDomainError\n<p>Raised when attempting to convert special float values (in particular …\n",null,1],["OLEProperty","","Rails/classes/OLEProperty.html","","<p>OLEProperty helper class of Property with arguments.\n",null,1],["Object","","Ruby/classes/Object.html","","",null,0],["Object","","Rails/classes/Object.html","","<p>Object is the root of Ruby’s class hierarchy.  Its methods are available to\nall classes unless explicitly …\n",null,1],["Object::HashWithIndifferentAccess","","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html","","",null,0],["Object::MissingSourceFile","","Ruby/classes/LoadError.html","","",null,0],["Object::ParseError","","Rails/classes/Racc/ParseError.html","","",null,1],["Object::Synchronizer","","Rails/classes/Sync.html","","<p>A class that providesa two-phase lock with a counter.  See Sync_m for\ndetails.\n",null,1],["Object::Synchronizer_m","","Rails/classes/Sync_m.html","","<p>A module that provides a two-phase lock with a counter.\n",null,1],["Object::ThWait","","Rails/classes/ThreadsWait.html","","<p>This class watches for termination of multiple threads.  Basic\nfunctionality (wait until specified threads …\n",null,1],["Object::TimeoutError","","Rails/classes/Timeout/Error.html","","<p>Raised by Timeout#timeout when the block times out.\n",null,1],["ObjectSpace","","Rails/classes/ObjectSpace.html","","<p>The <code>ObjectSpace</code> module contains a number of routines that\ninteract with the garbage collection facility ...\n",null,1],["Observable","","Rails/classes/Observable.html","","<p>The Observer pattern (also known as publish/subscribe) provides a simple\nmechanism for one object to …\n",null,1],["Open3","","Rails/classes/Open3.html","","<p>Open3 grants you access to stdin, stdout, stderr and a thread to wait the\nchild process when running …\n",null,1],["OpenKey","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-OpenKey","(hkey, name, opt, desired)","",null,1],["OpenSSL","","Rails/classes/OpenSSL.html","","<p>$RCSfile$ – Ruby-space definitions that completes C-space funcs for X509 and subclasses\n<p>Info\n\n<pre>'OpenSSL ...</pre>\n",null,1],["OpenSSL::ASN1","","Rails/classes/OpenSSL/ASN1.html","","<p>Abstract Syntax Notation One (or ASN.1) is a notation syntax to describe\ndata structures and is defined ...\n",null,1],["OpenSSL::ASN1::ASN1Data","","Rails/classes/OpenSSL/ASN1/ASN1Data.html","","<p>The top-level class representing any ASN.1 object. When parsed by\nASN1.decode, tagged values are always ...\n",null,1],["OpenSSL::ASN1::ASN1Error","","Rails/classes/OpenSSL/ASN1/ASN1Error.html","","<p>Generic error class for all errors raised in ASN1 and any of the classes\ndefined in it.\n",null,1],["OpenSSL::ASN1::Constructive","","Rails/classes/OpenSSL/ASN1/Constructive.html","","<p>The parent class for all constructed encodings. The <code>value</code>\nattribute of a Constructive is always an <code>Array</code> ...\n",null,1],["OpenSSL::ASN1::Primitive","","Rails/classes/OpenSSL/ASN1/Primitive.html","","<p>The parent class for all primitive encodings. Attributes are the same as\nfor ASN1Data, with the addition ...\n",null,1],["OpenSSL::BN","","Rails/classes/OpenSSL/BN.html","","",null,1],["OpenSSL::BNError","","Rails/classes/OpenSSL/BNError.html","","",null,1],["OpenSSL::Buffering","","Rails/classes/OpenSSL/Buffering.html","","<p>$RCSfile$ – Buffering mix-in module.\n<p>Info\n\n<pre>'OpenSSL for Ruby 2' project\nCopyright (C) 2001 GOTOU YUUZOU ...</pre>\n",null,1],["OpenSSL::Cipher","","Rails/classes/OpenSSL/Cipher.html","","<p>Provides symmetric algorithms for encryption and decryption. The algorithms\nthat are available depend ...\n",null,1],["OpenSSL::Cipher::Cipher","","Rails/classes/OpenSSL/Cipher/Cipher.html","","<p>This class is only provided for backwards compatibility.  Use\nOpenSSL::Cipher in the future.\n",null,1],["OpenSSL::Cipher::CipherError","","Rails/classes/OpenSSL/Cipher/CipherError.html","","<p>Document-class: OpenSSL::Cipher\n\n<pre>Provides symmetric algorithms for encryption and decryption. The\nalgorithms ...</pre>\n",null,1],["OpenSSL::Config","","Rails/classes/OpenSSL/Config.html","","",null,1],["OpenSSL::ConfigError","","Rails/classes/OpenSSL/ConfigError.html","","",null,1],["OpenSSL::Digest","","Rails/classes/OpenSSL/Digest.html","","<p>OpenSSL::Digest allows you to compute message digests (sometimes\ninterchangeably called \"hashes\") ...\n",null,1],["OpenSSL::Digest::Digest","","Rails/classes/OpenSSL/Digest/Digest.html","","<p>This class is only provided for backwards compatibility.  Use\nOpenSSL::Digest in the future.\n",null,1],["OpenSSL::Digest::DigestError","","Rails/classes/OpenSSL/Digest/DigestError.html","","<p>Generic Exception class that is raised if an error occurs during a Digest\noperation.\n",null,1],["OpenSSL::Engine","","Rails/classes/OpenSSL/Engine.html","","",null,1],["OpenSSL::Engine::EngineError","","Rails/classes/OpenSSL/Engine/EngineError.html","","",null,1],["OpenSSL::HMAC","","Rails/classes/OpenSSL/HMAC.html","","",null,1],["OpenSSL::HMACError","","Rails/classes/OpenSSL/HMACError.html","","",null,1],["OpenSSL::Netscape","","Rails/classes/OpenSSL/Netscape.html","","",null,1],["OpenSSL::Netscape::SPKI","","Rails/classes/OpenSSL/Netscape/SPKI.html","","",null,1],["OpenSSL::Netscape::SPKIError","","Rails/classes/OpenSSL/Netscape/SPKIError.html","","",null,1],["OpenSSL::OCSP","","Rails/classes/OpenSSL/OCSP.html","","",null,1],["OpenSSL::OCSP::BasicResponse","","Rails/classes/OpenSSL/OCSP/BasicResponse.html","","",null,1],["OpenSSL::OCSP::CertificateId","","Rails/classes/OpenSSL/OCSP/CertificateId.html","","",null,1],["OpenSSL::OCSP::OCSPError","","Rails/classes/OpenSSL/OCSP/OCSPError.html","","",null,1],["OpenSSL::OCSP::Request","","Rails/classes/OpenSSL/OCSP/Request.html","","",null,1],["OpenSSL::OCSP::Response","","Rails/classes/OpenSSL/OCSP/Response.html","","",null,1],["OpenSSL::OpenSSLError","","Rails/classes/OpenSSL/OpenSSLError.html","","<p>Generic error, common for all classes under OpenSSL module\n",null,1],["OpenSSL::PKCS12","","Rails/classes/OpenSSL/PKCS12.html","","<p>Defines a file format commonly used to store private keys with accompanying\npublic key certificates, …\n",null,1],["OpenSSL::PKCS12::PKCS12Error","","Rails/classes/OpenSSL/PKCS12/PKCS12Error.html","","<p>Defines a file format commonly used to store private keys with accompanying\npublic key certificates, …\n",null,1],["OpenSSL::PKCS5","","Rails/classes/OpenSSL/PKCS5.html","","<p>Password-based Encryption\n",null,1],["OpenSSL::PKCS5::PKCS5Error","","Rails/classes/OpenSSL/PKCS5/PKCS5Error.html","","<p>Password-based Encryption\n",null,1],["OpenSSL::PKCS7","","Rails/classes/OpenSSL/PKCS7.html","","",null,1],["OpenSSL::PKCS7::PKCS7Error","","Rails/classes/OpenSSL/PKCS7/PKCS7Error.html","","",null,1],["OpenSSL::PKCS7::RecipientInfo","","Rails/classes/OpenSSL/PKCS7/RecipientInfo.html","","",null,1],["OpenSSL::PKCS7::SignerInfo","","Rails/classes/OpenSSL/PKCS7/SignerInfo.html","","",null,1],["OpenSSL::PKey","","Rails/classes/OpenSSL/PKey.html","","<p>Asymmetric Public Key Algorithms\n<p>Asymmetric public key algorithms solve the problem of establishing and ...\n",null,1],["OpenSSL::PKey::DH","","Rails/classes/OpenSSL/PKey/DH.html","","<p>An implementation of the Diffie-Hellman key exchange protocol based on\ndiscrete logarithms in finite ...\n",null,1],["OpenSSL::PKey::DHError","","Rails/classes/OpenSSL/PKey/DHError.html","","<p>Generic exception that is raised if an operation on a DH PKey fails\nunexpectedly or in case an instantiation ...\n",null,1],["OpenSSL::PKey::DSA","","Rails/classes/OpenSSL/PKey/DSA.html","","<p>DSA, the Digital Signature Algorithm, is specified in NIST's FIPS 186-3. It\nis an asymmetric public key ...\n",null,1],["OpenSSL::PKey::DSAError","","Rails/classes/OpenSSL/PKey/DSAError.html","","<p>Generic exception that is raised if an operation on a DSA PKey fails\nunexpectedly or in case an instantiation ...\n",null,1],["OpenSSL::PKey::EC","","Rails/classes/OpenSSL/PKey/EC.html","","",null,1],["OpenSSL::PKey::EC::Group","","Rails/classes/OpenSSL/PKey/EC/Group.html","","",null,1],["OpenSSL::PKey::EC::Group::Error","","Rails/classes/OpenSSL/PKey/EC/Group/Error.html","","",null,1],["OpenSSL::PKey::EC::Point","","Rails/classes/OpenSSL/PKey/EC/Point.html","","",null,1],["OpenSSL::PKey::EC::Point::Error","","Rails/classes/OpenSSL/PKey/EC/Point/Error.html","","",null,1],["OpenSSL::PKey::ECError","","Rails/classes/OpenSSL/PKey/ECError.html","","",null,1],["OpenSSL::PKey::PKey","","Rails/classes/OpenSSL/PKey/PKey.html","","<p>An abstract class that bundles signature creation (PKey#sign) and\nvalidation (PKey#verify) that is common ...\n",null,1],["OpenSSL::PKey::PKeyError","","Rails/classes/OpenSSL/PKey/PKeyError.html","","<p>Raised when errors occur during PKey#sign or PKey#verify.\n",null,1],["OpenSSL::PKey::RSA","","Rails/classes/OpenSSL/PKey/RSA.html","","<p>RSA is an asymmetric public key algorithm that has been formalized in RFC\n3447. It is in widespread use ...\n",null,1],["OpenSSL::PKey::RSAError","","Rails/classes/OpenSSL/PKey/RSAError.html","","<p>Generic exception that is raised if an operation on an RSA PKey fails\nunexpectedly or in case an instantiation ...\n",null,1],["OpenSSL::Random","","Rails/classes/OpenSSL/Random.html","","",null,1],["OpenSSL::Random::RandomError","","Rails/classes/OpenSSL/Random/RandomError.html","","",null,1],["OpenSSL::SSL","","Rails/classes/OpenSSL/SSL.html","","<p>let rdoc know about mOSSL\n",null,1],["OpenSSL::SSL::Nonblock","","Rails/classes/OpenSSL/SSL/Nonblock.html","","",null,1],["OpenSSL::SSL::SSLContext","","Rails/classes/OpenSSL/SSL/SSLContext.html","","<p>An SSLContext is used to set various options regarding certificates,\nalgorithms, verification, session ...\n",null,1],["OpenSSL::SSL::SSLError","","Rails/classes/OpenSSL/SSL/SSLError.html","","",null,1],["OpenSSL::SSL::SSLServer","","Rails/classes/OpenSSL/SSL/SSLServer.html","","",null,1],["OpenSSL::SSL::SSLSocket","","Rails/classes/OpenSSL/SSL/SSLSocket.html","","<p>The following attributes are available but don't show up in rdoc.\n<p>io, context, sync_close\n\n",null,1],["OpenSSL::SSL::Session","","Rails/classes/OpenSSL/SSL/Session.html","","<p>let rdoc know about mOSSL\n",null,1],["OpenSSL::SSL::Session::SessionError","","Rails/classes/OpenSSL/SSL/Session/SessionError.html","","<p>let rdoc know about mOSSL\n",null,1],["OpenSSL::SSL::SocketForwarder","","Rails/classes/OpenSSL/SSL/SocketForwarder.html","","",null,1],["OpenSSL::X509","","Rails/classes/OpenSSL/X509.html","","<p>let rdoc know about mOSSL\n",null,1],["OpenSSL::X509::Attribute","","Rails/classes/OpenSSL/X509/Attribute.html","","",null,1],["OpenSSL::X509::AttributeError","","Rails/classes/OpenSSL/X509/AttributeError.html","","",null,1],["OpenSSL::X509::CRL","","Rails/classes/OpenSSL/X509/CRL.html","","",null,1],["OpenSSL::X509::CRLError","","Rails/classes/OpenSSL/X509/CRLError.html","","",null,1],["OpenSSL::X509::Certificate","","Rails/classes/OpenSSL/X509/Certificate.html","","<p>Implementation of an X.509 certificate as specified in RFC 5280. Provides\naccess to a certificate's attributes ...\n",null,1],["OpenSSL::X509::CertificateError","","Rails/classes/OpenSSL/X509/CertificateError.html","","<p>let rdoc know about mOSSL\n<p>let rdoc know about mOSSL\n",null,1],["OpenSSL::X509::Extension","","Rails/classes/OpenSSL/X509/Extension.html","","",null,1],["OpenSSL::X509::ExtensionError","","Rails/classes/OpenSSL/X509/ExtensionError.html","","",null,1],["OpenSSL::X509::ExtensionFactory","","Rails/classes/OpenSSL/X509/ExtensionFactory.html","","",null,1],["OpenSSL::X509::Name","","Rails/classes/OpenSSL/X509/Name.html","","",null,1],["OpenSSL::X509::Name::RFC2253DN","","Rails/classes/OpenSSL/X509/Name/RFC2253DN.html","","",null,1],["OpenSSL::X509::NameError","","Rails/classes/OpenSSL/X509/NameError.html","","",null,1],["OpenSSL::X509::Request","","Rails/classes/OpenSSL/X509/Request.html","","",null,1],["OpenSSL::X509::RequestError","","Rails/classes/OpenSSL/X509/RequestError.html","","",null,1],["OpenSSL::X509::Revoked","","Rails/classes/OpenSSL/X509/Revoked.html","","",null,1],["OpenSSL::X509::RevokedError","","Rails/classes/OpenSSL/X509/RevokedError.html","","",null,1],["OpenSSL::X509::Store","","Rails/classes/OpenSSL/X509/Store.html","","",null,1],["OpenSSL::X509::StoreContext","","Rails/classes/OpenSSL/X509/StoreContext.html","","",null,1],["OpenSSL::X509::StoreError","","Rails/classes/OpenSSL/X509/StoreError.html","","",null,1],["OpenStruct","","Rails/classes/OpenStruct.html","","<p>An OpenStruct is a data structure, similar to a Hash, that allows the\ndefinition of arbitrary attributes …\n",null,1],["OpenURI","","Rails/classes/OpenURI.html","","\n<pre>OpenURI is an easy-to-use wrapper for net/http, net/https and net/ftp.</pre>\n<p>Example\n\n<pre>It is possible to open an ...</pre>\n",null,1],["OpenURI::HTTPError","","Rails/classes/OpenURI/HTTPError.html","","",null,1],["OpenURI::HTTPRedirect","","Rails/classes/OpenURI/HTTPRedirect.html","","",null,1],["OpenURI::Meta","","Rails/classes/OpenURI/Meta.html","","<p>Mixin for holding meta-information.\n",null,1],["OpenURI::OpenRead","","Rails/classes/OpenURI/OpenRead.html","","<p>Mixin for HTTP and FTP URIs.\n",null,1],["OptionParser","","Rails/classes/OptionParser.html","","<p>OptionParser internal utility\n<p>Developer Documentation (not for RDoc output)\n<p>Class tree\n",null,1],["OptionParser::Acceptables","","Rails/classes/OptionParser/Acceptables.html","","<p>Acceptable argument classes. Now contains DecimalInteger, OctalInteger and\nDecimalNumeric. See Acceptable …\n",null,1],["OptionParser::AmbiguousArgument","","Rails/classes/OptionParser/AmbiguousArgument.html","","<p>Raises when the given argument word can’t be completed uniquely.\n",null,1],["OptionParser::AmbiguousOption","","Rails/classes/OptionParser/AmbiguousOption.html","","<p>Raises when ambiguously completable string is encountered.\n",null,1],["OptionParser::Arguable","","Rails/classes/OptionParser/Arguable.html","","<p>Extends command line arguments array (ARGV) to parse itself.\n",null,1],["OptionParser::CompletingHash","","Rails/classes/OptionParser/CompletingHash.html","","<p>Hash with completion search feature. See OptionParser::Completion.\n",null,1],["OptionParser::Completion","","Rails/classes/OptionParser/Completion.html","","<p>Keyword completion module.  This allows partial arguments to be specified\nand resolved against a list …\n",null,1],["OptionParser::InvalidArgument","","Rails/classes/OptionParser/InvalidArgument.html","","<p>Raises when the given argument does not match required format.\n",null,1],["OptionParser::InvalidOption","","Rails/classes/OptionParser/InvalidOption.html","","<p>Raises when switch is undefined.\n",null,1],["OptionParser::List","","Rails/classes/OptionParser/List.html","","<p>Simple option list providing mapping from short and/or long option string\nto OptionParser::Switch and …\n",null,1],["OptionParser::MissingArgument","","Rails/classes/OptionParser/MissingArgument.html","","<p>Raises when a switch with mandatory argument has no argument.\n",null,1],["OptionParser::NeedlessArgument","","Rails/classes/OptionParser/NeedlessArgument.html","","<p>Raises when there is an argument for a switch which takes no argument.\n",null,1],["OptionParser::OptionMap","","Rails/classes/OptionParser/OptionMap.html","","<p>Map from option/keyword string to object with completion.\n",null,1],["OptionParser::ParseError","","Rails/classes/OptionParser/ParseError.html","","<p>Base class of exceptions from OptionParser.\n",null,1],["OptionParser::Switch","","Rails/classes/OptionParser/Switch.html","","<p>Individual switch class.  Not important to the user.\n<p>Defined within Switch are several Switch-derived …\n",null,1],["OptionParser::Switch::NoArgument","","Rails/classes/OptionParser/Switch/NoArgument.html","","<p>Switch that takes no arguments.\n",null,1],["OptionParser::Switch::OptionalArgument","","Rails/classes/OptionParser/Switch/OptionalArgument.html","","<p>Switch that can omit argument.\n",null,1],["OptionParser::Switch::PlacedArgument","","Rails/classes/OptionParser/Switch/PlacedArgument.html","","<p>Switch that takes an argument, which does not begin with ‘-’.\n",null,1],["OptionParser::Switch::RequiredArgument","","Rails/classes/OptionParser/Switch/RequiredArgument.html","","<p>Switch that takes an argument.\n",null,1],["PI","BigMath","Rails/classes/BigMath.html#method-i-PI","(prec)","<p>Computes the value of pi to the specified number of digits of precision.\n",null,1],["POST","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-POST","()","<p>Override Rack’s POST method to support indifferent access\n",null,0],["PP","","Rails/classes/PP.html","","",null,1],["PP::ObjectMixin","","Rails/classes/PP/ObjectMixin.html","","",null,1],["PP::PPMethods","","Rails/classes/PP/PPMethods.html","","",null,1],["PP::SingleLine","","Rails/classes/PP/SingleLine.html","","",null,1],["PStore","","Rails/classes/PStore.html","","<p>PStore implements a file based persistence mechanism based on a Hash.  User\ncode can store hierarchies …\n",null,1],["PStore::Error","","Rails/classes/PStore/Error.html","","<p>The error type thrown by all PStore methods.\n",null,1],["PTY","","Rails/classes/PTY.html","","<p>Creates and managed pseudo terminals (PTYs).  See also\nen.wikipedia.org/wiki/Pseudo_terminal\n",null,1],["PTY::ChildExited","","Rails/classes/PTY/ChildExited.html","","<p>Thrown when PTY#check is called for a pid that represents a process that\nhas exited.\n",null,1],["Pathname","","Rails/classes/Pathname.html","","<p>Pathname\n<p>Pathname represents a pathname which locates a file in a filesystem. The\npathname depends on …\n",null,1],["Pathname","Kernel","Rails/classes/Kernel.html#method-i-Pathname","(p1)","<p>create a pathname object.\n<p>This method is available since 1.8.5.\n",null,1],["PermaLink?","RSS::Rss::Channel::Item::Guid","Rails/classes/RSS/Rss/Channel/Item/Guid.html#method-i-PermaLink-3F","()","",null,1],["Plugin","","Ruby/classes/Plugin.html","","",null,0],["Post","","Ruby/classes/Post.html","","",null,0],["PostsController","","Ruby/classes/PostsController.html","","",null,0],["PostsHelper","","Ruby/classes/PostsHelper.html","","",null,0],["PrettyPrint","","Rails/classes/PrettyPrint.html","","<p>This class implements a pretty printing algorithm. It finds line breaks and\nnice indentations for grouped …\n",null,1],["PrettyPrint::Breakable","","Rails/classes/PrettyPrint/Breakable.html","","",null,1],["PrettyPrint::Group","","Rails/classes/PrettyPrint/Group.html","","",null,1],["PrettyPrint::GroupQueue","","Rails/classes/PrettyPrint/GroupQueue.html","","",null,1],["PrettyPrint::SingleLine","","Rails/classes/PrettyPrint/SingleLine.html","","",null,1],["PrettyPrint::Text","","Rails/classes/PrettyPrint/Text.html","","",null,1],["Prime","","Rails/classes/Prime.html","","<p>The set of all prime numbers.\n<p>Example\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Prime</span>.<span class=\"ruby-identifier\">each</span>(<span class=\"ruby-value\">100</span>) <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">prime</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">p</span> <span class=\"ruby-identifier\">prime</span>  <span class=\"ruby-comment\">#=&gt; 2, 3, 5, 7, 11, ...., 97 ...</span>\n</pre>\n",null,1],["Prime::EratosthenesGenerator","","Rails/classes/Prime/EratosthenesGenerator.html","","<p>An implementation of <code>PseudoPrimeGenerator</code>.\n<p>Uses <code>EratosthenesSieve</code>.\n",null,1],["Prime::EratosthenesSieve","","Rails/classes/Prime/EratosthenesSieve.html","","<p>Internal use. An implementation of eratosthenes’s sieve\n",null,1],["Prime::Generator23","","Rails/classes/Prime/Generator23.html","","<p>Generates all integer which are greater than 2 and are not divided by 2 nor\n3.\n<p>This is a pseudo-prime …\n",null,1],["Prime::OldCompatibility","","Rails/classes/Prime/OldCompatibility.html","","<p>Provides a <code>Prime</code> object with compatibility to Ruby 1.8 when\ninstantiated via <code>Prime</code>.<code>new</code>.\n",null,1],["Prime::PseudoPrimeGenerator","","Rails/classes/Prime/PseudoPrimeGenerator.html","","<p>An abstract class for enumerating pseudo-prime numbers.\n<p>Concrete subclasses should override succ, next, …\n",null,1],["Prime::TrialDivision","","Rails/classes/Prime/TrialDivision.html","","<p>Internal use. An implementation of prime table by trial division method.\n",null,1],["Prime::TrialDivisionGenerator","","Rails/classes/Prime/TrialDivisionGenerator.html","","<p>An implementation of <code>PseudoPrimeGenerator</code> which uses a prime\ntable generated by trial division.\n",null,1],["Proc","","Rails/classes/Proc.html","","<p><code>Proc</code> objects are blocks of code that have been bound to a set\nof local variables. Once bound, the code ...\n",null,1],["Process","","Ruby/classes/Process.html","","",null,0],["Process","","Rails/classes/Process.html","","<p>The <code>Process</code> module is a collection of methods used to\nmanipulate processes.\n",null,1],["Process::GID","","Rails/classes/Process/GID.html","","<p>The <code>Process::GID</code> module contains a collection of module\nfunctions which can be used to portably get, ...\n",null,1],["Process::Status","","Rails/classes/Process/Status.html","","<p><code>Process::Status</code> encapsulates the information on the status of\na running or terminated system process. ...\n",null,1],["Process::Sys","","Rails/classes/Process/Sys.html","","<p>The <code>Process::Sys</code> module contains UID and GID functions which\nprovide direct bindings to the system calls ...\n",null,1],["Process::UID","","Rails/classes/Process/UID.html","","<p>The <code>Process::UID</code> module contains a collection of module\nfunctions which can be used to portably get, ...\n",null,1],["Profiler__","","Rails/classes/Profiler__.html","","",null,1],["Proxy","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-Proxy","(p_addr, p_port = nil, p_user = nil, p_pass = nil)","<p>Creates an HTTP proxy class which behaves like Net::HTTP, but performs all\naccess via the specified proxy. …\n",null,1],["Proxy","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-Proxy","(p_addr, p_port = nil, p_user = nil, p_pass = nil)","<p>Creates an HTTP proxy class which behaves like Net::HTTP, but performs all\naccess via the specified proxy. …\n",null,1],["Psych","","Rails/classes/Psych.html","","<p>This exists just to satify bugs in marshal’d gemspecs that contain a\nreference to YAML::PrivateType. …\n",null,1],["Psych::BadAlias","","Rails/classes/Psych/BadAlias.html","","",null,1],["Psych::Coder","","Rails/classes/Psych/Coder.html","","<p>If an object defines <code>encode_with</code>, then an instance of\nPsych::Coder will be passed to the method when …\n",null,1],["Psych::Emitter","","Rails/classes/Psych/Emitter.html","","",null,1],["Psych::Exception","","Rails/classes/Psych/Exception.html","","",null,1],["Psych::Handler","","Rails/classes/Psych/Handler.html","","<p>Psych::Handler is an abstract base class that defines the events used when\ndealing with Psych::Parser …\n",null,1],["Psych::Handler::DumperOptions","","Rails/classes/Psych/Handler/DumperOptions.html","","<p>Configuration options for dumping YAML.\n",null,1],["Psych::Handlers","","Rails/classes/Psych/Handlers.html","","",null,1],["Psych::JSON","","Rails/classes/Psych/JSON.html","","",null,1],["Psych::JSON::Stream","","Rails/classes/Psych/JSON/Stream.html","","",null,1],["Psych::JSON::TreeBuilder","","Rails/classes/Psych/JSON/TreeBuilder.html","","<p>Psych::JSON::TreeBuilder is an event based AST builder.  Events are sent to\nan instance of Psych::JSON::TreeBuilder …\n",null,1],["Psych::Nodes","","Rails/classes/Psych/Nodes.html","","<p>Overview\n<p>When using Psych.load to deserialize a YAML document, the document is\ntranslated to an intermediary …\n",null,1],["Psych::Nodes::Alias","","Rails/classes/Psych/Nodes/Alias.html","","<p>This class represents a YAML Alias. It points to an <code>anchor</code>.\n<p>A Psych::Nodes::Alias is a terminal node and …\n",null,1],["Psych::Nodes::Document","","Rails/classes/Psych/Nodes/Document.html","","<p>This represents a YAML Document.  This node must be a child of\nPsych::Nodes::Stream.  A Psych::Nodes::Document …\n",null,1],["Psych::Nodes::Mapping","","Rails/classes/Psych/Nodes/Mapping.html","","<p>This class represents a YAML Mapping.\n<p>A Psych::Nodes::Mapping node may have 0 or more children, but must …\n",null,1],["Psych::Nodes::Node","","Rails/classes/Psych/Nodes/Node.html","","<p>The base class for any Node in a YAML parse tree.  This class should never\nbe instantiated.\n",null,1],["Psych::Nodes::Scalar","","Rails/classes/Psych/Nodes/Scalar.html","","<p>This class represents a YAML Scalar.\n<p>This node type is a terminal node and should not have any children. …\n",null,1],["Psych::Nodes::Sequence","","Rails/classes/Psych/Nodes/Sequence.html","","<p>This class represents a YAML sequence.\n<p>A YAML sequence is basically a list, and looks like this:\n\n<pre>%YAML ...</pre>\n",null,1],["Psych::Nodes::Stream","","Rails/classes/Psych/Nodes/Stream.html","","<p>Represents a YAML stream.  This is the root node for any YAML parse tree. \nThis node must have one or …\n",null,1],["Psych::Omap","","Rails/classes/Psych/Omap.html","","",null,1],["Psych::Parser","","Rails/classes/Psych/Parser.html","","<p>YAML event parser class.  This class parses a YAML document and calls\nevents on the handler that is passed …\n",null,1],["Psych::Parser::Mark","","Rails/classes/Psych/Parser/Mark.html","","",null,1],["Psych::PrivateType","","Rails/classes/Psych/PrivateType.html","","",null,1],["Psych::ScalarScanner","","Rails/classes/Psych/ScalarScanner.html","","<p>Scan scalars for built in types\n",null,1],["Psych::Set","","Rails/classes/Psych/Set.html","","",null,1],["Psych::Stream","","Rails/classes/Psych/Stream.html","","<p>Psych::Stream is a streaming YAML emitter.  It will not buffer your YAML,\nbut send it straight to an …\n",null,1],["Psych::Streaming","","Rails/classes/Psych/Streaming.html","","",null,1],["Psych::SyntaxError","","Rails/classes/Psych/SyntaxError.html","","",null,1],["Psych::TreeBuilder","","Rails/classes/Psych/TreeBuilder.html","","<p>This class works in conjunction with Psych::Parser to build an in-memory\nparse tree that represents a …\n",null,1],["Psych::Visitors","","Rails/classes/Psych/Visitors.html","","",null,1],["Psych::Visitors::DepthFirst","","Rails/classes/Psych/Visitors/DepthFirst.html","","",null,1],["Psych::Visitors::Emitter","","Rails/classes/Psych/Visitors/Emitter.html","","",null,1],["Psych::Visitors::JSONTree","","Rails/classes/Psych/Visitors/JSONTree.html","","",null,1],["Psych::Visitors::ToRuby","","Rails/classes/Psych/Visitors/ToRuby.html","","<p>This class walks a YAML AST, converting each node to ruby\n",null,1],["Psych::Visitors::Visitor","","Rails/classes/Psych/Visitors/Visitor.html","","",null,1],["Psych::Visitors::YAMLTree","","Rails/classes/Psych/Visitors/YAMLTree.html","","<p>YAMLTree builds a YAML ast given a ruby object.  For example:\n\n<pre>builder = Psych::Visitors::YAMLTree.new ...</pre>\n",null,1],["QualifiedConstUtils","","Ruby/classes/QualifiedConstUtils.html","","",null,0],["QueryInfoKey","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-QueryInfoKey","(hkey)","",null,1],["QueryValue","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-QueryValue","(hkey, name)","",null,1],["Queue","","Rails/classes/Queue.html","","<p>This class provides a way to synchronize communication between threads.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'thread'</span>\n\n<span class=\"ruby-identifier\">queue</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["RAILS_VERSION","","Ruby/files/rails/RAILS_VERSION.html","","<p>3.2.15\n",null,0],["RDoc","","Rails/classes/RDoc.html","","<p>RDoc is a Ruby documentation system which contains RDoc::RDoc for\ngenerating documentation, RDoc::RI …\n",null,1],["RDoc::Alias","","Rails/classes/RDoc/Alias.html","","<p>Represent an alias, which is an old_name/new_name pair associated with a\nparticular context\n",null,1],["RDoc::AnonClass","","Rails/classes/RDoc/AnonClass.html","","<p>An anonymous class like:\n\n<pre>c = Class.new do end</pre>\n<p>AnonClass is currently not used.\n",null,1],["RDoc::AnyMethod","","Rails/classes/RDoc/AnyMethod.html","","<p>AnyMethod is the base class for objects representing methods\n",null,1],["RDoc::Attr","","Rails/classes/RDoc/Attr.html","","<p>An attribute created by #attr, #attr_reader, #attr_writer or #attr_accessor\n",null,1],["RDoc::ClassModule","","Rails/classes/RDoc/ClassModule.html","","<p>ClassModule is the base class for objects representing either a class or a\nmodule.\n",null,1],["RDoc::CodeObject","","Rails/classes/RDoc/CodeObject.html","","<p>Base class for the RDoc code tree.\n<p>We contain the common stuff for contexts (which are containers) and …\n",null,1],["RDoc::Constant","","Rails/classes/RDoc/Constant.html","","<p>A constant\n",null,1],["RDoc::Context","","Rails/classes/RDoc/Context.html","","<p>A Context is something that can hold modules, classes, methods, attributes,\naliases, requires, and includes. …\n",null,1],["RDoc::Context::Section","","Rails/classes/RDoc/Context/Section.html","","<p>A section of documentation like:\n\n<pre># :section: The title\n# The body</pre>\n<p>Sections can be referenced multiple times …\n",null,1],["RDoc::CrossReference","","Rails/classes/RDoc/CrossReference.html","","<p>RDoc::CrossReference is a reusable way to create cross references for\nnames.\n",null,1],["RDoc::ERBIO","","Rails/classes/RDoc/ERBIO.html","","<p>A subclass of ERB that writes directly to an IO.  Credit to Aaron Patterson\nand Masatoshi SEKI.\n<p>To use: …\n",null,1],["RDoc::Encoding","","Rails/classes/RDoc/Encoding.html","","<p>This class is a wrapper around File IO and Encoding that helps RDoc load\nfiles and convert them to the …\n",null,1],["RDoc::Error","","Rails/classes/RDoc/Error.html","","<p>Exception thrown by any rdoc error.\n",null,1],["RDoc::Generator","","Rails/classes/RDoc/Generator.html","","<p>RDoc uses generators to turn parsed source code in the form of an\nRDoc::CodeObject tree into some form …\n",null,1],["RDoc::Generator::Darkfish","","Rails/classes/RDoc/Generator/Darkfish.html","","<p>Darkfish RDoc HTML Generator\n<p>$Id: darkfish.rb 52 2009-01-07 02:08:11Z deveiant $\n<p>Author/s\n",null,1],["RDoc::Generator::Markup","","Rails/classes/RDoc/Generator/Markup.html","","<p>Handle common RDoc::Markup tasks for various CodeObjects\n",null,1],["RDoc::Generator::RI","","Rails/classes/RDoc/Generator/RI.html","","<p>Generates ri data files\n",null,1],["RDoc::GhostMethod","","Rails/classes/RDoc/GhostMethod.html","","<p>GhostMethod represents a method referenced only by a comment\n",null,1],["RDoc::Include","","Rails/classes/RDoc/Include.html","","<p>A Module include in a class with #include\n",null,1],["RDoc::Markup","","Rails/classes/RDoc/Markup.html","","<p>RDoc::Markup parses plain text documents and attempts to decompose them\ninto their constituent parts. …\n",null,1],["RDoc::Markup::AttrChanger","","Rails/classes/RDoc/Markup/AttrChanger.html","","<p>An AttrChanger records a change in attributes. It contains a bitmap of the\nattributes to turn on, and …\n",null,1],["RDoc::Markup::AttrSpan","","Rails/classes/RDoc/Markup/AttrSpan.html","","<p>An array of attributes which parallels the characters in a string.\n",null,1],["RDoc::Markup::Attribute","","Rails/classes/RDoc/Markup/Attribute.html","","<p>We manage a set of attributes. Each attribute has a symbol name and a bit\nvalue.\n",null,1],["RDoc::Markup::AttributeManager","","Rails/classes/RDoc/Markup/AttributeManager.html","","<p>Manages changes of attributes in a block of text\n",null,1],["RDoc::Markup::BlankLine","","Rails/classes/RDoc/Markup/BlankLine.html","","<p>An empty line.  This class is a singleton.\n",null,1],["RDoc::Markup::Document","","Rails/classes/RDoc/Markup/Document.html","","<p>A Document containing lists, headings, paragraphs, etc.\n",null,1],["RDoc::Markup::Formatter","","Rails/classes/RDoc/Markup/Formatter.html","","<p>Base class for RDoc markup formatters\n<p>Formatters use a visitor pattern to convert content into output. …\n",null,1],["RDoc::Markup::Heading","","Rails/classes/RDoc/Markup/Heading.html","","<p>A heading with a level (1-6) and text\n",null,1],["RDoc::Markup::IndentedParagraph","","Rails/classes/RDoc/Markup/IndentedParagraph.html","","<p>An Indented Paragraph of text\n",null,1],["RDoc::Markup::List","","Rails/classes/RDoc/Markup/List.html","","<p>A List of ListItems\n",null,1],["RDoc::Markup::ListItem","","Rails/classes/RDoc/Markup/ListItem.html","","<p>An item within a List that contains paragraphs, headings, etc.\n",null,1],["RDoc::Markup::Paragraph","","Rails/classes/RDoc/Markup/Paragraph.html","","<p>A Paragraph of text\n",null,1],["RDoc::Markup::Parser","","Rails/classes/RDoc/Markup/Parser.html","","<p>A recursive-descent parser for RDoc markup.\n<p>The parser tokenizes an input string then parses the tokens …\n",null,1],["RDoc::Markup::Parser::Error","","Rails/classes/RDoc/Markup/Parser/Error.html","","<p>Parser error subclass\n",null,1],["RDoc::Markup::Parser::ParseError","","Rails/classes/RDoc/Markup/Parser/ParseError.html","","<p>Raised when the parser is unable to handle the given markup\n",null,1],["RDoc::Markup::PreProcess","","Rails/classes/RDoc/Markup/PreProcess.html","","<p>Handle common directives that can occur in a block of text:\n\n<pre>:include: filename</pre>\n<p>Directives can be escaped …\n",null,1],["RDoc::Markup::Raw","","Rails/classes/RDoc/Markup/Raw.html","","<p>A section of text that is added to the output document as-is\n",null,1],["RDoc::Markup::Rule","","Rails/classes/RDoc/Markup/Rule.html","","<p>A horizontal rule with a weight\n",null,1],["RDoc::Markup::Special","","Rails/classes/RDoc/Markup/Special.html","","<p>Hold details of a special sequence\n",null,1],["RDoc::Markup::ToAnsi","","Rails/classes/RDoc/Markup/ToAnsi.html","","<p>Outputs RDoc markup with vibrant ANSI color!\n",null,1],["RDoc::Markup::ToBs","","Rails/classes/RDoc/Markup/ToBs.html","","<p>Outputs RDoc markup with hot backspace action!  You will probably need a\npager to use this output format. …\n",null,1],["RDoc::Markup::ToHtml","","Rails/classes/RDoc/Markup/ToHtml.html","","<p>Outputs RDoc markup as HTML\n",null,1],["RDoc::Markup::ToHtmlCrossref","","Rails/classes/RDoc/Markup/ToHtmlCrossref.html","","<p>Subclass of the RDoc::Markup::ToHtml class that supports looking up method\nnames, classes, etc to create …\n",null,1],["RDoc::Markup::ToRdoc","","Rails/classes/RDoc/Markup/ToRdoc.html","","<p>Outputs RDoc markup as RDoc markup! (mostly)\n",null,1],["RDoc::Markup::ToTtOnly","","Rails/classes/RDoc/Markup/ToTtOnly.html","","<p>Extracts sections of text enclosed in plus, tt or code.  Used to discover\nundocumented parameters.\n",null,1],["RDoc::Markup::Verbatim","","Rails/classes/RDoc/Markup/Verbatim.html","","<p>A section of verbatim text\n",null,1],["RDoc::MetaMethod","","Rails/classes/RDoc/MetaMethod.html","","<p>MetaMethod represents a meta-programmed method\n",null,1],["RDoc::MethodAttr","","Rails/classes/RDoc/MethodAttr.html","","<p>Abstract class representing either a method or an attribute.\n",null,1],["RDoc::NormalClass","","Rails/classes/RDoc/NormalClass.html","","<p>A normal class, neither singleton nor anonymous\n",null,1],["RDoc::NormalModule","","Rails/classes/RDoc/NormalModule.html","","<p>A normal module, like NormalClass\n",null,1],["RDoc::Options","","Rails/classes/RDoc/Options.html","","<p>RDoc::Options handles the parsing and storage of options\n",null,1],["RDoc::Parser","","Rails/classes/RDoc/Parser.html","","<p>A parser is a class that subclasses RDoc::Parser and implements\n\n<pre>#initialize top_level, file_name, body, ...</pre>\n",null,1],["RDoc::Parser::C","","Rails/classes/RDoc/Parser/C.html","","<p>RDoc::Parser::C attempts to parse C extension files.  It looks for the\nstandard patterns that you find …\n",null,1],["RDoc::Parser::Ruby","","Rails/classes/RDoc/Parser/Ruby.html","","<p>Extracts code elements from a source file returning a TopLevel object\ncontaining the constituent file …\n",null,1],["RDoc::Parser::RubyTools","","Rails/classes/RDoc/Parser/RubyTools.html","","<p>Collection of methods for writing parsers against RDoc::RubyLex and\nRDoc::RubyToken\n",null,1],["RDoc::Parser::Simple","","Rails/classes/RDoc/Parser/Simple.html","","<p>Parse a non-source file. We basically take the whole thing as one big\ncomment.\n",null,1],["RDoc::RDoc","","Rails/classes/RDoc/RDoc.html","","<p>Encapsulate the production of rdoc documentation. Basically you can use\nthis as you would invoke rdoc …\n",null,1],["RDoc::RI","","Rails/classes/RDoc/RI.html","","<p>Namespace for the ri command line tool’s implementation.\n<p>See <code>ri --help</code> for details.\n",null,1],["RDoc::RI::Driver","","Rails/classes/RDoc/RI/Driver.html","","<p>The RI driver implements the command-line ri tool.\n<p>The driver supports:\n<p>loading RI data from:\n",null,1],["RDoc::RI::Driver::Error","","Rails/classes/RDoc/RI/Driver/Error.html","","<p>Base Driver error class\n",null,1],["RDoc::RI::Driver::NotFoundError","","Rails/classes/RDoc/RI/Driver/NotFoundError.html","","<p>Raised when a name isn’t found in the ri data stores\n",null,1],["RDoc::RI::Error","","Rails/classes/RDoc/RI/Error.html","","<p>Base RI error class\n",null,1],["RDoc::RI::Paths","","Rails/classes/RDoc/RI/Paths.html","","<p>The directories where ri data lives.\n",null,1],["RDoc::RI::Store","","Rails/classes/RDoc/RI/Store.html","","<p>A set of ri data.\n<p>The store manages reading and writing ri data for a project (gem, path,\netc.) and maintains …\n",null,1],["RDoc::Require","","Rails/classes/RDoc/Require.html","","<p>A file loaded by #require\n",null,1],["RDoc::RubyLex","","Rails/classes/RDoc/RubyLex.html","","<p>Ruby lexer adapted from irb.\n<p>The internals are not documented because they are scary.\n",null,1],["RDoc::RubyToken","","Rails/classes/RDoc/RubyToken.html","","<p>Definitions of all tokens involved in the lexical analysis.\n<p>This class is not documented because it is …\n",null,1],["RDoc::RubyToken::TkError","","Rails/classes/RDoc/RubyToken/TkError.html","","",null,1],["RDoc::RubyToken::TkId","","Rails/classes/RDoc/RubyToken/TkId.html","","",null,1],["RDoc::RubyToken::TkKW","","Rails/classes/RDoc/RubyToken/TkKW.html","","",null,1],["RDoc::RubyToken::TkNode","","Rails/classes/RDoc/RubyToken/TkNode.html","","",null,1],["RDoc::RubyToken::TkOPASGN","","Rails/classes/RDoc/RubyToken/TkOPASGN.html","","",null,1],["RDoc::RubyToken::TkOp","","Rails/classes/RDoc/RubyToken/TkOp.html","","",null,1],["RDoc::RubyToken::TkSYMBOL","","Rails/classes/RDoc/RubyToken/TkSYMBOL.html","","",null,1],["RDoc::RubyToken::TkUnknownChar","","Rails/classes/RDoc/RubyToken/TkUnknownChar.html","","",null,1],["RDoc::RubyToken::TkVal","","Rails/classes/RDoc/RubyToken/TkVal.html","","",null,1],["RDoc::RubyToken::Token","","Rails/classes/RDoc/RubyToken/Token.html","","",null,1],["RDoc::RubygemsHook","","Rails/classes/RDoc/RubygemsHook.html","","<p>Gem::RDoc provides methods to generate RDoc and ri data for installed gems\nupon gem installation.\n<p>This …\n",null,1],["RDoc::SingleClass","","Rails/classes/RDoc/SingleClass.html","","<p>A singleton class\n",null,1],["RDoc::Stats","","Rails/classes/RDoc/Stats.html","","<p>RDoc statistics collector which prints a summary and report of a project’s\ndocumentation totals.\n",null,1],["RDoc::Stats::Normal","","Rails/classes/RDoc/Stats/Normal.html","","<p>Stats printer that prints just the files being documented with a progress\nbar\n",null,1],["RDoc::Stats::Quiet","","Rails/classes/RDoc/Stats/Quiet.html","","<p>Stats printer that prints nothing\n",null,1],["RDoc::Stats::Verbose","","Rails/classes/RDoc/Stats/Verbose.html","","<p>Stats printer that prints everything documented, including the documented\nstatus\n",null,1],["RDoc::Task","","Rails/classes/RDoc/Task.html","","<p>RDoc::Task creates the following rake tasks to generate and clean up RDoc\noutput:\n<p>rdoc &mdash; Main task for this …\n",null,1],["RDoc::Text","","Rails/classes/RDoc/Text.html","","<p>Methods for manipulating comment text\n",null,1],["RDoc::TokenStream","","Rails/classes/RDoc/TokenStream.html","","<p>A TokenStream is a list of tokens, gathered during the parse of some entity\n(say a method). Entities …\n",null,1],["RDoc::TopLevel","","Rails/classes/RDoc/TopLevel.html","","<p>A TopLevel context is a representation of the contents of a single file\n",null,1],["README","","Ruby/files/rails/activesupport/README_rdoc.html","","<p>Active Support – Utility classes and Ruby extensions from Rails\n<p>Active Support is a collection of utility …\n",null,0],["README","","Ruby/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/README_rdoc.html","","<p>&lt;%= camelized %&gt;\n<p>This project rocks and uses MIT-LICENSE.\n",null,0],["README","","Ruby/files/rails/activeresource/README_rdoc.html","","<p>Active Resource\n<p>Active Resource (ARes) connects business objects and Representational State\nTransfer ( …\n",null,0],["README","","Ruby/files/rails/README_rdoc.html","","<p>Welcome to Rails\n<p>Rails is a web-application framework that includes everything needed to\ncreate database-backed …\n",null,0],["README","","Ruby/files/rails/activerecord/README_rdoc.html","","<p>Active Record – Object-relational mapping put on rails\n<p>Active Record connects classes to relational database …\n",null,0],["README","","Ruby/files/rails/railties/README_rdoc.html","","<p>Railties – Gluing the Engine to the Rails\n<p>Railties is responsible for gluing all frameworks together. …\n",null,0],["README","","Ruby/files/rails/activemodel/README_rdoc.html","","<p>Active Model – model interfaces for Rails\n<p>Active Model provides a known set of interfaces for usage in …\n",null,0],["README","","Ruby/files/rails/railties/lib/rails/generators/rails/app/templates/README.html","","<p>Welcome to Rails\n<p>Rails is a web-application framework that includes everything needed to\ncreate database-backed …\n",null,0],["README","","Ruby/files/rails/actionpack/README_rdoc.html","","<p>Action Pack – From request to response\n<p>Action Pack is a framework for handling and responding to web …\n",null,0],["README","","Ruby/files/rails/railties/guides/code/getting_started/README_rdoc.html","","<p>Welcome to Rails\n<p>Rails is a web-application framework that includes everything needed to\ncreate database-backed …\n",null,0],["README","","Ruby/files/rails/actionmailer/README_rdoc.html","","<p>Action Mailer – Easy email delivery and testing\n<p>Action Mailer is a framework for designing email-service …\n",null,0],["README","","Ruby/files/rails/railties/guides/assets/images/icons/README.html","","<p>Replaced the plain DocBook XSL admonition icons with Jimmac’s DocBook icons\n(jimmac.musichall.cz/ikony.php3 …\n",null,0],["README","","Rails/files/ruby/README.html","","<p>What’s Ruby\n\n<p>Ruby is the interpreted scripting language for quick and easy\nobject-oriented programming. …\n",null,1],["README","","Rails/files/ruby/lib/README.html","","<p>English.rb      lets Perl’ish global variables have English names README   \nthis file abbrev.rb …\n",null,1],["README","","Rails/files/ruby/lib/xmlrpc/README_rdoc.html","","<p>XMLRPC for Ruby\n<p>Author and Copyright\n<p>Copyright (C) 2001-2004 by Michael Neumann (mneumann@ntecs.de)\n",null,1],["README","","Rails/files/ruby/lib/xmlrpc/README_txt.html","","<p>XMLRPC for Ruby, Standard Library Documentation\n<p>Overview\n<p>XMLRPC is a lightweight protocol that enables …\n",null,1],["README_FOR_APP","","Ruby/files/rails/railties/guides/code/getting_started/doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n",null,0],["README_FOR_APP","","Ruby/files/rails/railties/lib/rails/generators/rails/app/templates/doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n",null,0],["RELEASING_RAILS","","Ruby/files/rails/RELEASING_RAILS_rdoc.html","","<p>Releasing Rails\n<p>In this document, we’ll cover the steps necessary to release Rails.  Each\nsection contains …\n",null,0],["REXML","","Rails/classes/REXML.html","","<p> :element, parent, name, attributes, children*  &mdash; a = Node.new a &lt;&lt; “B”            # =&gt; …\n\n",null,1],["REXML::AttlistDecl","","Rails/classes/REXML/AttlistDecl.html","","<p>This class needs:\n<p>Documentation\n<p>Work!  Not all types of attlists are intelligently parsed, so we just\n",null,1],["REXML::Attribute","","Rails/classes/REXML/Attribute.html","","<p>Defines an Element Attribute; IE, a attribute=value pair, as in:\n&lt;element attribute=“value”/&gt;. …\n",null,1],["REXML::Attributes","","Rails/classes/REXML/Attributes.html","","<p>A class that defines the set of Attributes of an Element and provides\noperations for accessing elements …\n",null,1],["REXML::CData","","Rails/classes/REXML/CData.html","","",null,1],["REXML::Child","","Rails/classes/REXML/Child.html","","<p>A Child object is something contained by a parent, and this class contains\nmethods to support that.  …\n",null,1],["REXML::Comment","","Rails/classes/REXML/Comment.html","","<p>Represents an XML comment; that is, text between &lt;!– … –&gt;\n",null,1],["REXML::DTD","","Rails/classes/REXML/DTD.html","","",null,1],["REXML::DTD::AttlistDecl","","Rails/classes/REXML/DTD/AttlistDecl.html","","",null,1],["REXML::DTD::ElementDecl","","Rails/classes/REXML/DTD/ElementDecl.html","","",null,1],["REXML::DTD::EntityDecl","","Rails/classes/REXML/DTD/EntityDecl.html","","",null,1],["REXML::DTD::NotationDecl","","Rails/classes/REXML/DTD/NotationDecl.html","","",null,1],["REXML::DTD::Parser","","Rails/classes/REXML/DTD/Parser.html","","",null,1],["REXML::Declaration","","Rails/classes/REXML/Declaration.html","","<p>This is an abstract class.  You never use this directly; it serves as a\nparent class for the specific …\n",null,1],["REXML::DocType","","Rails/classes/REXML/DocType.html","","<p>Represents an XML DOCTYPE declaration; that is, the contents of\n&lt;!DOCTYPE … &gt;.  DOCTYPES can …\n",null,1],["REXML::Document","","Rails/classes/REXML/Document.html","","<p>Represents a full XML document, including PIs, a doctype, etc.  A Document\nhas a single child that can …\n",null,1],["REXML::Element","","Rails/classes/REXML/Element.html","","<p>Represents a tagged XML element.  Elements are characterized by having\nchildren, attributes, and names, …\n",null,1],["REXML::ElementDecl","","Rails/classes/REXML/ElementDecl.html","","",null,1],["REXML::Elements","","Rails/classes/REXML/Elements.html","","<p>A class which provides filtering of children for Elements, and XPath search\nsupport.  You are expected …\n",null,1],["REXML::Encoding","","Rails/classes/REXML/Encoding.html","","",null,1],["REXML::Entity","","Rails/classes/REXML/Entity.html","","<p>God, I hate DTDs.  I really do.  Why this idiot standard still plagues us\nis beyond me.\n",null,1],["REXML::EntityConst","","Rails/classes/REXML/EntityConst.html","","<p>This is a set of entity constants – the ones defined in the XML\nspecification.  These are <code>gt</code>, <code>lt</code>,\n<code>amp</code> …\n",null,1],["REXML::ExternalEntity","","Rails/classes/REXML/ExternalEntity.html","","",null,1],["REXML::Formatters","","Rails/classes/REXML/Formatters.html","","",null,1],["REXML::Formatters::Default","","Rails/classes/REXML/Formatters/Default.html","","",null,1],["REXML::Formatters::Pretty","","Rails/classes/REXML/Formatters/Pretty.html","","<p>Pretty-prints an XML document.  This destroys whitespace in text nodes and\nwill insert carriage returns …\n",null,1],["REXML::Formatters::Transitive","","Rails/classes/REXML/Formatters/Transitive.html","","<p>The Transitive formatter writes an XML document that parses to an identical\ndocument as the source document. …\n",null,1],["REXML::Functions","","Rails/classes/REXML/Functions.html","","<p>If you add a method, keep in mind two things: (1) the first argument will\nalways be a list of nodes from …\n",null,1],["REXML::IOSource","","Rails/classes/REXML/IOSource.html","","<p>A Source that wraps an IO.  See the Source class for method documentation\n",null,1],["REXML::Instruction","","Rails/classes/REXML/Instruction.html","","<p>Represents an XML Instruction; IE, &lt;? … ?&gt; TODO: Add parent arg (3rd\narg) to constructor\n",null,1],["REXML::Light","","Rails/classes/REXML/Light.html","","",null,1],["REXML::Light::Node","","Rails/classes/REXML/Light/Node.html","","<p>Represents a tagged XML element.  Elements are characterized by having\nchildren, attributes, and names, …\n",null,1],["REXML::Namespace","","Rails/classes/REXML/Namespace.html","","<p>Adds named attributes to an object.\n",null,1],["REXML::Node","","Rails/classes/REXML/Node.html","","<p>Represents a node in the tree.  Nodes are never encountered except as\nsuperclasses of other objects. …\n",null,1],["REXML::NotationDecl","","Rails/classes/REXML/NotationDecl.html","","",null,1],["REXML::Output","","Rails/classes/REXML/Output.html","","",null,1],["REXML::Parent","","Rails/classes/REXML/Parent.html","","<p>A parent has children, and has methods for accessing them.  The Parent\nclass is never encountered except …\n",null,1],["REXML::ParseException","","Rails/classes/REXML/ParseException.html","","",null,1],["REXML::Parsers","","Rails/classes/REXML/Parsers.html","","",null,1],["REXML::Parsers::BaseParser","","Rails/classes/REXML/Parsers/BaseParser.html","","<p>Using the Pull Parser\n<p><em>This API is experimental, and subject to change.</em>\n\n<pre>parser = PullParser.new( &quot;&lt;a&gt;text&lt;b ...</pre>\n",null,1],["REXML::Parsers::LightParser","","Rails/classes/REXML/Parsers/LightParser.html","","",null,1],["REXML::Parsers::PullEvent","","Rails/classes/REXML/Parsers/PullEvent.html","","<p>A parsing event.  The contents of the event are accessed as an +Array?, and\nthe type is given either …\n",null,1],["REXML::Parsers::PullParser","","Rails/classes/REXML/Parsers/PullParser.html","","<p>Using the Pull Parser\n<p><em>This API is experimental, and subject to change.</em>\n\n<pre>parser = PullParser.new( &quot;&lt;a&gt;text&lt;b ...</pre>\n",null,1],["REXML::Parsers::SAX2Parser","","Rails/classes/REXML/Parsers/SAX2Parser.html","","<p>SAX2Parser\n",null,1],["REXML::Parsers::StreamParser","","Rails/classes/REXML/Parsers/StreamParser.html","","",null,1],["REXML::Parsers::TreeParser","","Rails/classes/REXML/Parsers/TreeParser.html","","",null,1],["REXML::Parsers::UltraLightParser","","Rails/classes/REXML/Parsers/UltraLightParser.html","","",null,1],["REXML::Parsers::XPathParser","","Rails/classes/REXML/Parsers/XPathParser.html","","<p>You don’t want to use this class.  Really.  Use XPath, which is a wrapper\nfor this class.  Believe me. …\n",null,1],["REXML::QuickPath","","Rails/classes/REXML/QuickPath.html","","",null,1],["REXML::SAX2Listener","","Rails/classes/REXML/SAX2Listener.html","","<p>A template for stream parser listeners. Note that the declarations\n(attlistdecl, elementdecl, etc) are …\n",null,1],["REXML::Source","","Rails/classes/REXML/Source.html","","<p>A Source can be searched for patterns, and wraps buffers and other objects\nand provides consumption of …\n",null,1],["REXML::SourceFactory","","Rails/classes/REXML/SourceFactory.html","","<p>Generates Source-s.  USE THIS CLASS.\n",null,1],["REXML::StreamListener","","Rails/classes/REXML/StreamListener.html","","<p>A template for stream parser listeners. Note that the declarations\n(attlistdecl, elementdecl, etc) are …\n",null,1],["REXML::SyncEnumerator","","Rails/classes/REXML/SyncEnumerator.html","","",null,1],["REXML::Text","","Rails/classes/REXML/Text.html","","<p>Represents text nodes in an XML document\n",null,1],["REXML::UndefinedNamespaceException","","Rails/classes/REXML/UndefinedNamespaceException.html","","",null,1],["REXML::Validation","","Rails/classes/REXML/Validation.html","","",null,1],["REXML::Validation::Choice","","Rails/classes/REXML/Validation/Choice.html","","",null,1],["REXML::Validation::Event","","Rails/classes/REXML/Validation/Event.html","","",null,1],["REXML::Validation::Interleave","","Rails/classes/REXML/Validation/Interleave.html","","",null,1],["REXML::Validation::OneOrMore","","Rails/classes/REXML/Validation/OneOrMore.html","","",null,1],["REXML::Validation::Optional","","Rails/classes/REXML/Validation/Optional.html","","",null,1],["REXML::Validation::Ref","","Rails/classes/REXML/Validation/Ref.html","","",null,1],["REXML::Validation::RelaxNG","","Rails/classes/REXML/Validation/RelaxNG.html","","<p>Implemented:\n<p>empty\n<p>element\n",null,1],["REXML::Validation::Sequence","","Rails/classes/REXML/Validation/Sequence.html","","",null,1],["REXML::Validation::State","","Rails/classes/REXML/Validation/State.html","","",null,1],["REXML::Validation::ValidationException","","Rails/classes/REXML/Validation/ValidationException.html","","",null,1],["REXML::Validation::Validator","","Rails/classes/REXML/Validation/Validator.html","","",null,1],["REXML::Validation::ZeroOrMore","","Rails/classes/REXML/Validation/ZeroOrMore.html","","",null,1],["REXML::XMLDecl","","Rails/classes/REXML/XMLDecl.html","","<p>NEEDS DOCUMENTATION\n",null,1],["REXML::XMLTokens","","Rails/classes/REXML/XMLTokens.html","","<p>Defines a number of tokens used for parsing XML.  Not for general\nconsumption.\n",null,1],["REXML::XPath","","Rails/classes/REXML/XPath.html","","<p>Wrapper class.  Use this class to access the XPath functions.\n",null,1],["REXML::XPathParser","","Rails/classes/REXML/XPathParser.html","","<p>You don’t want to use this class.  Really.  Use XPath, which is a wrapper\nfor this class.  Believe me. …\n",null,1],["RSS","","Rails/classes/RSS.html","","<p>RSS reading and writing\n<p>Really Simple Syndication (RSS) is a family of formats that describe\n‘feeds,’ …\n",null,1],["RSS::Atom","","Rails/classes/RSS/Atom.html","","",null,1],["RSS::Atom::CommonModel","","Rails/classes/RSS/Atom/CommonModel.html","","",null,1],["RSS::Atom::ContentModel","","Rails/classes/RSS/Atom/ContentModel.html","","",null,1],["RSS::Atom::ContentModel::ClassMethods","","Rails/classes/RSS/Atom/ContentModel/ClassMethods.html","","",null,1],["RSS::Atom::DateConstruct","","Rails/classes/RSS/Atom/DateConstruct.html","","",null,1],["RSS::Atom::DuplicateLinkChecker","","Rails/classes/RSS/Atom/DuplicateLinkChecker.html","","",null,1],["RSS::Atom::Entry","","Rails/classes/RSS/Atom/Entry.html","","",null,1],["RSS::Atom::Feed","","Rails/classes/RSS/Atom/Feed.html","","",null,1],["RSS::Atom::Feed::Author","","Rails/classes/RSS/Atom/Feed/Author.html","","",null,1],["RSS::Atom::Feed::Category","","Rails/classes/RSS/Atom/Feed/Category.html","","",null,1],["RSS::Atom::Feed::Contributor","","Rails/classes/RSS/Atom/Feed/Contributor.html","","",null,1],["RSS::Atom::Feed::Entry","","Rails/classes/RSS/Atom/Feed/Entry.html","","",null,1],["RSS::Atom::Feed::Entry::Content","","Rails/classes/RSS/Atom/Feed/Entry/Content.html","","",null,1],["RSS::Atom::Feed::Entry::Published","","Rails/classes/RSS/Atom/Feed/Entry/Published.html","","",null,1],["RSS::Atom::Feed::Entry::Source","","Rails/classes/RSS/Atom/Feed/Entry/Source.html","","",null,1],["RSS::Atom::Feed::Entry::Summary","","Rails/classes/RSS/Atom/Feed/Entry/Summary.html","","",null,1],["RSS::Atom::Feed::Generator","","Rails/classes/RSS/Atom/Feed/Generator.html","","",null,1],["RSS::Atom::Feed::Icon","","Rails/classes/RSS/Atom/Feed/Icon.html","","",null,1],["RSS::Atom::Feed::Id","","Rails/classes/RSS/Atom/Feed/Id.html","","",null,1],["RSS::Atom::Feed::Link","","Rails/classes/RSS/Atom/Feed/Link.html","","",null,1],["RSS::Atom::Feed::Logo","","Rails/classes/RSS/Atom/Feed/Logo.html","","",null,1],["RSS::Atom::Feed::Rights","","Rails/classes/RSS/Atom/Feed/Rights.html","","",null,1],["RSS::Atom::Feed::Subtitle","","Rails/classes/RSS/Atom/Feed/Subtitle.html","","",null,1],["RSS::Atom::Feed::Title","","Rails/classes/RSS/Atom/Feed/Title.html","","",null,1],["RSS::Atom::Feed::Updated","","Rails/classes/RSS/Atom/Feed/Updated.html","","",null,1],["RSS::Atom::PersonConstruct","","Rails/classes/RSS/Atom/PersonConstruct.html","","",null,1],["RSS::Atom::PersonConstruct::Email","","Rails/classes/RSS/Atom/PersonConstruct/Email.html","","",null,1],["RSS::Atom::PersonConstruct::Name","","Rails/classes/RSS/Atom/PersonConstruct/Name.html","","",null,1],["RSS::Atom::PersonConstruct::Uri","","Rails/classes/RSS/Atom/PersonConstruct/Uri.html","","",null,1],["RSS::Atom::TextConstruct","","Rails/classes/RSS/Atom/TextConstruct.html","","",null,1],["RSS::Atom::URIContentModel","","Rails/classes/RSS/Atom/URIContentModel.html","","",null,1],["RSS::BaseDublinCoreModel","","Rails/classes/RSS/BaseDublinCoreModel.html","","",null,1],["RSS::BaseListener","","Rails/classes/RSS/BaseListener.html","","",null,1],["RSS::BaseModel","","Rails/classes/RSS/BaseModel.html","","",null,1],["RSS::BaseParser","","Rails/classes/RSS/BaseParser.html","","",null,1],["RSS::BaseTrackBackModel","","Rails/classes/RSS/BaseTrackBackModel.html","","",null,1],["RSS::ContentModel","","Rails/classes/RSS/ContentModel.html","","",null,1],["RSS::ConversionError","","Rails/classes/RSS/ConversionError.html","","<p>Raised when a conversion failure occurs.\n",null,1],["RSS::Converter","","Rails/classes/RSS/Converter.html","","",null,1],["RSS::DublinCoreModel","","Rails/classes/RSS/DublinCoreModel.html","","",null,1],["RSS::DublincoreModel","","Rails/classes/RSS/DublinCoreModel.html","","",null,1],["RSS::Element","","Rails/classes/RSS/Element.html","","",null,1],["RSS::Error","","Rails/classes/RSS/Error.html","","",null,1],["RSS::ITunesBaseModel","","Rails/classes/RSS/ITunesBaseModel.html","","",null,1],["RSS::ITunesChannelModel","","Rails/classes/RSS/ITunesChannelModel.html","","",null,1],["RSS::ITunesChannelModel::ITunesCategory","","Rails/classes/RSS/ITunesChannelModel/ITunesCategory.html","","",null,1],["RSS::ITunesChannelModel::ITunesImage","","Rails/classes/RSS/ITunesChannelModel/ITunesImage.html","","",null,1],["RSS::ITunesChannelModel::ITunesOwner","","Rails/classes/RSS/ITunesChannelModel/ITunesOwner.html","","",null,1],["RSS::ITunesItemModel","","Rails/classes/RSS/ITunesItemModel.html","","",null,1],["RSS::ITunesItemModel::ITunesDuration","","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html","","",null,1],["RSS::ITunesModelUtils","","Rails/classes/RSS/ITunesModelUtils.html","","",null,1],["RSS::ImageFaviconModel","","Rails/classes/RSS/ImageFaviconModel.html","","",null,1],["RSS::ImageFaviconModel::ImageFavicon","","Rails/classes/RSS/ImageFaviconModel/ImageFavicon.html","","",null,1],["RSS::ImageItemModel","","Rails/classes/RSS/ImageItemModel.html","","",null,1],["RSS::ImageItemModel::ImageItem","","Rails/classes/RSS/ImageItemModel/ImageItem.html","","",null,1],["RSS::ImageModelUtils","","Rails/classes/RSS/ImageModelUtils.html","","",null,1],["RSS::InvalidRSSError","","Rails/classes/RSS/InvalidRSSError.html","","",null,1],["RSS::ListenerMixin","","Rails/classes/RSS/ListenerMixin.html","","",null,1],["RSS::Maker","","Rails/classes/RSS/Maker.html","","",null,1],["RSS::Maker::Atom","","Rails/classes/RSS/Maker/Atom.html","","",null,1],["RSS::Maker::Atom::Entry","","Rails/classes/RSS/Maker/Atom/Entry.html","","",null,1],["RSS::Maker::Atom::Entry::Channel","","Rails/classes/RSS/Maker/Atom/Entry/Channel.html","","",null,1],["RSS::Maker::Atom::Entry::Channel::Cloud","","Rails/classes/RSS/Maker/Atom/Entry/Channel/Cloud.html","","",null,1],["RSS::Maker::Atom::Entry::Channel::Description","","Rails/classes/RSS/Maker/Atom/Entry/Channel/Description.html","","",null,1],["RSS::Maker::Atom::Entry::Channel::Generator","","Rails/classes/RSS/Maker/Atom/Entry/Channel/Generator.html","","",null,1],["RSS::Maker::Atom::Entry::Channel::SkipDays","","Rails/classes/RSS/Maker/Atom/Entry/Channel/SkipDays.html","","",null,1],["RSS::Maker::Atom::Entry::Channel::SkipDays::Day","","Rails/classes/RSS/Maker/Atom/Entry/Channel/SkipDays/Day.html","","",null,1],["RSS::Maker::Atom::Entry::Channel::SkipHours","","Rails/classes/RSS/Maker/Atom/Entry/Channel/SkipHours.html","","",null,1],["RSS::Maker::Atom::Entry::Channel::SkipHours::Hour","","Rails/classes/RSS/Maker/Atom/Entry/Channel/SkipHours/Hour.html","","",null,1],["RSS::Maker::Atom::Entry::Image","","Rails/classes/RSS/Maker/Atom/Entry/Image.html","","",null,1],["RSS::Maker::Atom::Entry::Items","","Rails/classes/RSS/Maker/Atom/Entry/Items.html","","",null,1],["RSS::Maker::Atom::Entry::Items::Item","","Rails/classes/RSS/Maker/Atom/Entry/Items/Item.html","","",null,1],["RSS::Maker::Atom::Entry::Textinput","","Rails/classes/RSS/Maker/Atom/Entry/Textinput.html","","",null,1],["RSS::Maker::Atom::Feed","","Rails/classes/RSS/Maker/Atom/Feed.html","","",null,1],["RSS::Maker::Atom::Feed::Channel","","Rails/classes/RSS/Maker/Atom/Feed/Channel.html","","",null,1],["RSS::Maker::Atom::Feed::Channel::Categories","","Rails/classes/RSS/Maker/Atom/Feed/Channel/Categories.html","","",null,1],["RSS::Maker::Atom::Feed::Channel::Categories::Category","","Rails/classes/RSS/Maker/Atom/Feed/Channel/Categories/Category.html","","",null,1],["RSS::Maker::Atom::Feed::Channel::Cloud","","Rails/classes/RSS/Maker/Atom/Feed/Channel/Cloud.html","","",null,1],["RSS::Maker::Atom::Feed::Channel::Generator","","Rails/classes/RSS/Maker/Atom/Feed/Channel/Generator.html","","",null,1],["RSS::Maker::Atom::Feed::Channel::Links","","Rails/classes/RSS/Maker/Atom/Feed/Channel/Links.html","","",null,1],["RSS::Maker::Atom::Feed::Channel::Links::Link","","Rails/classes/RSS/Maker/Atom/Feed/Channel/Links/Link.html","","",null,1],["RSS::Maker::Atom::Feed::Channel::SkipDays","","Rails/classes/RSS/Maker/Atom/Feed/Channel/SkipDays.html","","",null,1],["RSS::Maker::Atom::Feed::Channel::SkipDays::Day","","Rails/classes/RSS/Maker/Atom/Feed/Channel/SkipDays/Day.html","","",null,1],["RSS::Maker::Atom::Feed::Channel::SkipHours","","Rails/classes/RSS/Maker/Atom/Feed/Channel/SkipHours.html","","",null,1],["RSS::Maker::Atom::Feed::Channel::SkipHours::Hour","","Rails/classes/RSS/Maker/Atom/Feed/Channel/SkipHours/Hour.html","","",null,1],["RSS::Maker::Atom::Feed::Image","","Rails/classes/RSS/Maker/Atom/Feed/Image.html","","",null,1],["RSS::Maker::Atom::Feed::Items","","Rails/classes/RSS/Maker/Atom/Feed/Items.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Categories","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Categories.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Categories::Category","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Categories/Category.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Content","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Content.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Enclosure","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Enclosure.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Guid","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Guid.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Links","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Links.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Links::Link","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Links/Link.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Source","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Source::Categories","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Categories.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Source::Categories::Category","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Categories/Category.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Source::Generator","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Generator.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Source::Icon","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Icon.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Source::Links","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Links.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Source::Links::Link","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Links/Link.html","","",null,1],["RSS::Maker::Atom::Feed::Items::Item::Source::Logo","","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Logo.html","","",null,1],["RSS::Maker::Atom::Feed::Textinput","","Rails/classes/RSS/Maker/Atom/Feed/Textinput.html","","",null,1],["RSS::Maker::AtomCategory","","Rails/classes/RSS/Maker/AtomCategory.html","","",null,1],["RSS::Maker::AtomGenerator","","Rails/classes/RSS/Maker/AtomGenerator.html","","",null,1],["RSS::Maker::AtomLink","","Rails/classes/RSS/Maker/AtomLink.html","","",null,1],["RSS::Maker::AtomLogo","","Rails/classes/RSS/Maker/AtomLogo.html","","",null,1],["RSS::Maker::AtomPersonConstructBase","","Rails/classes/RSS/Maker/AtomPersonConstructBase.html","","",null,1],["RSS::Maker::AtomPersons","","Rails/classes/RSS/Maker/AtomPersons.html","","",null,1],["RSS::Maker::AtomTextConstruct","","Rails/classes/RSS/Maker/AtomTextConstruct.html","","",null,1],["RSS::Maker::AtomTextConstructBase","","Rails/classes/RSS/Maker/AtomTextConstructBase.html","","",null,1],["RSS::Maker::AtomTextConstructBase::EnsureXMLContent","","Rails/classes/RSS/Maker/AtomTextConstructBase/EnsureXMLContent.html","","",null,1],["RSS::Maker::Base","","Rails/classes/RSS/Maker/Base.html","","",null,1],["RSS::Maker::ChannelBase","","Rails/classes/RSS/Maker/ChannelBase.html","","",null,1],["RSS::Maker::ChannelBase::AuthorsBase","","Rails/classes/RSS/Maker/ChannelBase/AuthorsBase.html","","",null,1],["RSS::Maker::ChannelBase::AuthorsBase::AuthorBase","","Rails/classes/RSS/Maker/ChannelBase/AuthorsBase/AuthorBase.html","","",null,1],["RSS::Maker::ChannelBase::CategoriesBase","","Rails/classes/RSS/Maker/ChannelBase/CategoriesBase.html","","",null,1],["RSS::Maker::ChannelBase::CategoriesBase::CategoryBase","","Rails/classes/RSS/Maker/ChannelBase/CategoriesBase/CategoryBase.html","","",null,1],["RSS::Maker::ChannelBase::CloudBase","","Rails/classes/RSS/Maker/ChannelBase/CloudBase.html","","",null,1],["RSS::Maker::ChannelBase::ContributorsBase","","Rails/classes/RSS/Maker/ChannelBase/ContributorsBase.html","","",null,1],["RSS::Maker::ChannelBase::ContributorsBase::ContributorBase","","Rails/classes/RSS/Maker/ChannelBase/ContributorsBase/ContributorBase.html","","",null,1],["RSS::Maker::ChannelBase::CopyrightBase","","Rails/classes/RSS/Maker/ChannelBase/CopyrightBase.html","","",null,1],["RSS::Maker::ChannelBase::DescriptionBase","","Rails/classes/RSS/Maker/ChannelBase/DescriptionBase.html","","",null,1],["RSS::Maker::ChannelBase::GeneratorBase","","Rails/classes/RSS/Maker/ChannelBase/GeneratorBase.html","","",null,1],["RSS::Maker::ChannelBase::ITunesCategories","","Rails/classes/RSS/Maker/ChannelBase/ITunesCategories.html","","",null,1],["RSS::Maker::ChannelBase::ITunesCategories::ITunesCategory","","Rails/classes/RSS/Maker/ChannelBase/ITunesCategories/ITunesCategory.html","","",null,1],["RSS::Maker::ChannelBase::ITunesImage","","Rails/classes/RSS/Maker/ChannelBase/ITunesImage.html","","",null,1],["RSS::Maker::ChannelBase::ITunesOwner","","Rails/classes/RSS/Maker/ChannelBase/ITunesOwner.html","","",null,1],["RSS::Maker::ChannelBase::LinksBase","","Rails/classes/RSS/Maker/ChannelBase/LinksBase.html","","",null,1],["RSS::Maker::ChannelBase::LinksBase::LinkBase","","Rails/classes/RSS/Maker/ChannelBase/LinksBase/LinkBase.html","","",null,1],["RSS::Maker::ChannelBase::SkipDaysBase","","Rails/classes/RSS/Maker/ChannelBase/SkipDaysBase.html","","",null,1],["RSS::Maker::ChannelBase::SkipDaysBase::DayBase","","Rails/classes/RSS/Maker/ChannelBase/SkipDaysBase/DayBase.html","","",null,1],["RSS::Maker::ChannelBase::SkipHoursBase","","Rails/classes/RSS/Maker/ChannelBase/SkipHoursBase.html","","",null,1],["RSS::Maker::ChannelBase::SkipHoursBase::HourBase","","Rails/classes/RSS/Maker/ChannelBase/SkipHoursBase/HourBase.html","","",null,1],["RSS::Maker::ChannelBase::TitleBase","","Rails/classes/RSS/Maker/ChannelBase/TitleBase.html","","",null,1],["RSS::Maker::ContentModel","","Rails/classes/RSS/Maker/ContentModel.html","","",null,1],["RSS::Maker::DublinCoreModel","","Rails/classes/RSS/Maker/DublinCoreModel.html","","",null,1],["RSS::Maker::ITunesBaseModel","","Rails/classes/RSS/Maker/ITunesBaseModel.html","","",null,1],["RSS::Maker::ITunesChannelModel","","Rails/classes/RSS/Maker/ITunesChannelModel.html","","",null,1],["RSS::Maker::ITunesChannelModel::ITunesCategoriesBase","","Rails/classes/RSS/Maker/ITunesChannelModel/ITunesCategoriesBase.html","","",null,1],["RSS::Maker::ITunesChannelModel::ITunesCategoriesBase::ITunesCategoryBase","","Rails/classes/RSS/Maker/ITunesChannelModel/ITunesCategoriesBase/ITunesCategoryBase.html","","",null,1],["RSS::Maker::ITunesChannelModel::ITunesImageBase","","Rails/classes/RSS/Maker/ITunesChannelModel/ITunesImageBase.html","","",null,1],["RSS::Maker::ITunesChannelModel::ITunesOwnerBase","","Rails/classes/RSS/Maker/ITunesChannelModel/ITunesOwnerBase.html","","",null,1],["RSS::Maker::ITunesItemModel","","Rails/classes/RSS/Maker/ITunesItemModel.html","","",null,1],["RSS::Maker::ITunesItemModel::ITunesDurationBase","","Rails/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html","","",null,1],["RSS::Maker::ImageBase","","Rails/classes/RSS/Maker/ImageBase.html","","",null,1],["RSS::Maker::ImageFaviconModel","","Rails/classes/RSS/Maker/ImageFaviconModel.html","","",null,1],["RSS::Maker::ImageFaviconModel::ImageFaviconBase","","Rails/classes/RSS/Maker/ImageFaviconModel/ImageFaviconBase.html","","",null,1],["RSS::Maker::ImageItemModel","","Rails/classes/RSS/Maker/ImageItemModel.html","","",null,1],["RSS::Maker::ImageItemModel::ImageItemBase","","Rails/classes/RSS/Maker/ImageItemModel/ImageItemBase.html","","",null,1],["RSS::Maker::ItemsBase","","Rails/classes/RSS/Maker/ItemsBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::ContentBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::DescriptionBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/DescriptionBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::EnclosureBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/EnclosureBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::GuidBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/GuidBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::ITunesDuration","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ITunesDuration.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::RightsBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/RightsBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::SourceBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::SourceBase::IconBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase/IconBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::SourceBase::LogoBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase/LogoBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::SourceBase::RightsBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase/RightsBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::SourceBase::SubtitleBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase/SubtitleBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::SourceBase::TitleBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase/TitleBase.html","","",null,1],["RSS::Maker::ItemsBase::ItemBase::TitleBase","","Rails/classes/RSS/Maker/ItemsBase/ItemBase/TitleBase.html","","",null,1],["RSS::Maker::RSS09","","Rails/classes/RSS/Maker/RSS09.html","","",null,1],["RSS::Maker::RSS091","","Rails/classes/RSS/Maker/RSS091.html","","",null,1],["RSS::Maker::RSS091::Channel","","Rails/classes/RSS/Maker/RSS091/Channel.html","","",null,1],["RSS::Maker::RSS091::Image","","Rails/classes/RSS/Maker/RSS091/Image.html","","",null,1],["RSS::Maker::RSS091::Items","","Rails/classes/RSS/Maker/RSS091/Items.html","","",null,1],["RSS::Maker::RSS091::Items::Item","","Rails/classes/RSS/Maker/RSS091/Items/Item.html","","",null,1],["RSS::Maker::RSS091::Textinput","","Rails/classes/RSS/Maker/RSS091/Textinput.html","","",null,1],["RSS::Maker::RSS092","","Rails/classes/RSS/Maker/RSS092.html","","",null,1],["RSS::Maker::RSS092::Channel","","Rails/classes/RSS/Maker/RSS092/Channel.html","","",null,1],["RSS::Maker::RSS092::Image","","Rails/classes/RSS/Maker/RSS092/Image.html","","",null,1],["RSS::Maker::RSS092::Items","","Rails/classes/RSS/Maker/RSS092/Items.html","","",null,1],["RSS::Maker::RSS092::Items::Item","","Rails/classes/RSS/Maker/RSS092/Items/Item.html","","",null,1],["RSS::Maker::RSS092::Textinput","","Rails/classes/RSS/Maker/RSS092/Textinput.html","","",null,1],["RSS::Maker::RSS09::Channel","","Rails/classes/RSS/Maker/RSS09/Channel.html","","",null,1],["RSS::Maker::RSS09::Channel::Authors","","Rails/classes/RSS/Maker/RSS09/Channel/Authors.html","","",null,1],["RSS::Maker::RSS09::Channel::Authors::Author","","Rails/classes/RSS/Maker/RSS09/Channel/Authors/Author.html","","",null,1],["RSS::Maker::RSS09::Channel::Categories","","Rails/classes/RSS/Maker/RSS09/Channel/Categories.html","","",null,1],["RSS::Maker::RSS09::Channel::Categories::Category","","Rails/classes/RSS/Maker/RSS09/Channel/Categories/Category.html","","",null,1],["RSS::Maker::RSS09::Channel::Cloud","","Rails/classes/RSS/Maker/RSS09/Channel/Cloud.html","","",null,1],["RSS::Maker::RSS09::Channel::Contributors","","Rails/classes/RSS/Maker/RSS09/Channel/Contributors.html","","",null,1],["RSS::Maker::RSS09::Channel::Contributors::Contributor","","Rails/classes/RSS/Maker/RSS09/Channel/Contributors/Contributor.html","","",null,1],["RSS::Maker::RSS09::Channel::Copyright","","Rails/classes/RSS/Maker/RSS09/Channel/Copyright.html","","",null,1],["RSS::Maker::RSS09::Channel::Description","","Rails/classes/RSS/Maker/RSS09/Channel/Description.html","","",null,1],["RSS::Maker::RSS09::Channel::Generator","","Rails/classes/RSS/Maker/RSS09/Channel/Generator.html","","",null,1],["RSS::Maker::RSS09::Channel::Links","","Rails/classes/RSS/Maker/RSS09/Channel/Links.html","","",null,1],["RSS::Maker::RSS09::Channel::Links::Link","","Rails/classes/RSS/Maker/RSS09/Channel/Links/Link.html","","",null,1],["RSS::Maker::RSS09::Channel::SkipDays","","Rails/classes/RSS/Maker/RSS09/Channel/SkipDays.html","","",null,1],["RSS::Maker::RSS09::Channel::SkipDays::Day","","Rails/classes/RSS/Maker/RSS09/Channel/SkipDays/Day.html","","",null,1],["RSS::Maker::RSS09::Channel::SkipHours","","Rails/classes/RSS/Maker/RSS09/Channel/SkipHours.html","","",null,1],["RSS::Maker::RSS09::Channel::SkipHours::Hour","","Rails/classes/RSS/Maker/RSS09/Channel/SkipHours/Hour.html","","",null,1],["RSS::Maker::RSS09::Channel::Title","","Rails/classes/RSS/Maker/RSS09/Channel/Title.html","","",null,1],["RSS::Maker::RSS09::Image","","Rails/classes/RSS/Maker/RSS09/Image.html","","",null,1],["RSS::Maker::RSS09::Items","","Rails/classes/RSS/Maker/RSS09/Items.html","","",null,1],["RSS::Maker::RSS09::Items::Item","","Rails/classes/RSS/Maker/RSS09/Items/Item.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Authors","","Rails/classes/RSS/Maker/RSS09/Items/Item/Authors.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Authors::Author","","Rails/classes/RSS/Maker/RSS09/Items/Item/Authors/Author.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Categories","","Rails/classes/RSS/Maker/RSS09/Items/Item/Categories.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Categories::Category","","Rails/classes/RSS/Maker/RSS09/Items/Item/Categories/Category.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Content","","Rails/classes/RSS/Maker/RSS09/Items/Item/Content.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Contributors","","Rails/classes/RSS/Maker/RSS09/Items/Item/Contributors.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Contributors::Contributor","","Rails/classes/RSS/Maker/RSS09/Items/Item/Contributors/Contributor.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Description","","Rails/classes/RSS/Maker/RSS09/Items/Item/Description.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Enclosure","","Rails/classes/RSS/Maker/RSS09/Items/Item/Enclosure.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Guid","","Rails/classes/RSS/Maker/RSS09/Items/Item/Guid.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Links","","Rails/classes/RSS/Maker/RSS09/Items/Item/Links.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Links::Link","","Rails/classes/RSS/Maker/RSS09/Items/Item/Links/Link.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Rights","","Rails/classes/RSS/Maker/RSS09/Items/Item/Rights.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Authors","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Authors.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Authors::Author","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Authors/Author.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Categories","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Categories.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Categories::Category","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Categories/Category.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Contributors","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Contributors.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Contributors::Contributor","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Contributors/Contributor.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Generator","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Generator.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Icon","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Icon.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Links","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Links.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Links::Link","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Links/Link.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Logo","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Logo.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Rights","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Rights.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Subtitle","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Subtitle.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Source::Title","","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Title.html","","",null,1],["RSS::Maker::RSS09::Items::Item::Title","","Rails/classes/RSS/Maker/RSS09/Items/Item/Title.html","","",null,1],["RSS::Maker::RSS09::Textinput","","Rails/classes/RSS/Maker/RSS09/Textinput.html","","",null,1],["RSS::Maker::RSS10","","Rails/classes/RSS/Maker/RSS10.html","","",null,1],["RSS::Maker::RSS10::Channel","","Rails/classes/RSS/Maker/RSS10/Channel.html","","",null,1],["RSS::Maker::RSS10::Channel::Authors","","Rails/classes/RSS/Maker/RSS10/Channel/Authors.html","","",null,1],["RSS::Maker::RSS10::Channel::Authors::Author","","Rails/classes/RSS/Maker/RSS10/Channel/Authors/Author.html","","",null,1],["RSS::Maker::RSS10::Channel::Categories","","Rails/classes/RSS/Maker/RSS10/Channel/Categories.html","","",null,1],["RSS::Maker::RSS10::Channel::Categories::Category","","Rails/classes/RSS/Maker/RSS10/Channel/Categories/Category.html","","",null,1],["RSS::Maker::RSS10::Channel::Cloud","","Rails/classes/RSS/Maker/RSS10/Channel/Cloud.html","","",null,1],["RSS::Maker::RSS10::Channel::Contributors","","Rails/classes/RSS/Maker/RSS10/Channel/Contributors.html","","",null,1],["RSS::Maker::RSS10::Channel::Contributors::Contributor","","Rails/classes/RSS/Maker/RSS10/Channel/Contributors/Contributor.html","","",null,1],["RSS::Maker::RSS10::Channel::Copyright","","Rails/classes/RSS/Maker/RSS10/Channel/Copyright.html","","",null,1],["RSS::Maker::RSS10::Channel::Description","","Rails/classes/RSS/Maker/RSS10/Channel/Description.html","","",null,1],["RSS::Maker::RSS10::Channel::Generator","","Rails/classes/RSS/Maker/RSS10/Channel/Generator.html","","",null,1],["RSS::Maker::RSS10::Channel::Links","","Rails/classes/RSS/Maker/RSS10/Channel/Links.html","","",null,1],["RSS::Maker::RSS10::Channel::Links::Link","","Rails/classes/RSS/Maker/RSS10/Channel/Links/Link.html","","",null,1],["RSS::Maker::RSS10::Channel::SkipDays","","Rails/classes/RSS/Maker/RSS10/Channel/SkipDays.html","","",null,1],["RSS::Maker::RSS10::Channel::SkipDays::Day","","Rails/classes/RSS/Maker/RSS10/Channel/SkipDays/Day.html","","",null,1],["RSS::Maker::RSS10::Channel::SkipHours","","Rails/classes/RSS/Maker/RSS10/Channel/SkipHours.html","","",null,1],["RSS::Maker::RSS10::Channel::SkipHours::Hour","","Rails/classes/RSS/Maker/RSS10/Channel/SkipHours/Hour.html","","",null,1],["RSS::Maker::RSS10::Channel::Title","","Rails/classes/RSS/Maker/RSS10/Channel/Title.html","","",null,1],["RSS::Maker::RSS10::Image","","Rails/classes/RSS/Maker/RSS10/Image.html","","",null,1],["RSS::Maker::RSS10::Items","","Rails/classes/RSS/Maker/RSS10/Items.html","","",null,1],["RSS::Maker::RSS10::Items::Item","","Rails/classes/RSS/Maker/RSS10/Items/Item.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Authors","","Rails/classes/RSS/Maker/RSS10/Items/Item/Authors.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Authors::Author","","Rails/classes/RSS/Maker/RSS10/Items/Item/Authors/Author.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Categories","","Rails/classes/RSS/Maker/RSS10/Items/Item/Categories.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Categories::Category","","Rails/classes/RSS/Maker/RSS10/Items/Item/Categories/Category.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Content","","Rails/classes/RSS/Maker/RSS10/Items/Item/Content.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Contributors","","Rails/classes/RSS/Maker/RSS10/Items/Item/Contributors.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Contributors::Contributor","","Rails/classes/RSS/Maker/RSS10/Items/Item/Contributors/Contributor.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Description","","Rails/classes/RSS/Maker/RSS10/Items/Item/Description.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Enclosure","","Rails/classes/RSS/Maker/RSS10/Items/Item/Enclosure.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Guid","","Rails/classes/RSS/Maker/RSS10/Items/Item/Guid.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Links","","Rails/classes/RSS/Maker/RSS10/Items/Item/Links.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Links::Link","","Rails/classes/RSS/Maker/RSS10/Items/Item/Links/Link.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Rights","","Rails/classes/RSS/Maker/RSS10/Items/Item/Rights.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Authors","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Authors.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Authors::Author","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Authors/Author.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Categories","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Categories.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Categories::Category","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Categories/Category.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Contributors","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Contributors.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Contributors::Contributor","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Contributors/Contributor.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Generator","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Generator.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Icon","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Icon.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Links","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Links.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Links::Link","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Links/Link.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Logo","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Logo.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Rights","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Rights.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Subtitle","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Subtitle.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Source::Title","","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Title.html","","",null,1],["RSS::Maker::RSS10::Items::Item::Title","","Rails/classes/RSS/Maker/RSS10/Items/Item/Title.html","","",null,1],["RSS::Maker::RSS10::Textinput","","Rails/classes/RSS/Maker/RSS10/Textinput.html","","",null,1],["RSS::Maker::RSS20","","Rails/classes/RSS/Maker/RSS20.html","","",null,1],["RSS::Maker::RSS20::Channel","","Rails/classes/RSS/Maker/RSS20/Channel.html","","",null,1],["RSS::Maker::RSS20::Channel::Categories","","Rails/classes/RSS/Maker/RSS20/Channel/Categories.html","","",null,1],["RSS::Maker::RSS20::Channel::Categories::Category","","Rails/classes/RSS/Maker/RSS20/Channel/Categories/Category.html","","",null,1],["RSS::Maker::RSS20::Channel::Cloud","","Rails/classes/RSS/Maker/RSS20/Channel/Cloud.html","","",null,1],["RSS::Maker::RSS20::Channel::Generator","","Rails/classes/RSS/Maker/RSS20/Channel/Generator.html","","",null,1],["RSS::Maker::RSS20::Channel::SkipDays","","Rails/classes/RSS/Maker/RSS20/Channel/SkipDays.html","","",null,1],["RSS::Maker::RSS20::Channel::SkipDays::Day","","Rails/classes/RSS/Maker/RSS20/Channel/SkipDays/Day.html","","",null,1],["RSS::Maker::RSS20::Channel::SkipHours","","Rails/classes/RSS/Maker/RSS20/Channel/SkipHours.html","","",null,1],["RSS::Maker::RSS20::Channel::SkipHours::Hour","","Rails/classes/RSS/Maker/RSS20/Channel/SkipHours/Hour.html","","",null,1],["RSS::Maker::RSS20::Image","","Rails/classes/RSS/Maker/RSS20/Image.html","","",null,1],["RSS::Maker::RSS20::Items","","Rails/classes/RSS/Maker/RSS20/Items.html","","",null,1],["RSS::Maker::RSS20::Items::Item","","Rails/classes/RSS/Maker/RSS20/Items/Item.html","","",null,1],["RSS::Maker::RSS20::Items::Item::Authors","","Rails/classes/RSS/Maker/RSS20/Items/Item/Authors.html","","",null,1],["RSS::Maker::RSS20::Items::Item::Authors::Author","","Rails/classes/RSS/Maker/RSS20/Items/Item/Authors/Author.html","","",null,1],["RSS::Maker::RSS20::Items::Item::Categories","","Rails/classes/RSS/Maker/RSS20/Items/Item/Categories.html","","",null,1],["RSS::Maker::RSS20::Items::Item::Categories::Category","","Rails/classes/RSS/Maker/RSS20/Items/Item/Categories/Category.html","","",null,1],["RSS::Maker::RSS20::Items::Item::Enclosure","","Rails/classes/RSS/Maker/RSS20/Items/Item/Enclosure.html","","",null,1],["RSS::Maker::RSS20::Items::Item::Guid","","Rails/classes/RSS/Maker/RSS20/Items/Item/Guid.html","","",null,1],["RSS::Maker::RSS20::Items::Item::Source","","Rails/classes/RSS/Maker/RSS20/Items/Item/Source.html","","",null,1],["RSS::Maker::RSS20::Items::Item::Source::Links","","Rails/classes/RSS/Maker/RSS20/Items/Item/Source/Links.html","","",null,1],["RSS::Maker::RSS20::Items::Item::Source::Links::Link","","Rails/classes/RSS/Maker/RSS20/Items/Item/Source/Links/Link.html","","",null,1],["RSS::Maker::RSS20::Textinput","","Rails/classes/RSS/Maker/RSS20/Textinput.html","","",null,1],["RSS::Maker::RSSBase","","Rails/classes/RSS/Maker/RSSBase.html","","",null,1],["RSS::Maker::SetupDefaultDate","","Rails/classes/RSS/Maker/SetupDefaultDate.html","","",null,1],["RSS::Maker::SetupDefaultLanguage","","Rails/classes/RSS/Maker/SetupDefaultLanguage.html","","",null,1],["RSS::Maker::SlashModel","","Rails/classes/RSS/Maker/SlashModel.html","","",null,1],["RSS::Maker::SyndicationModel","","Rails/classes/RSS/Maker/SyndicationModel.html","","",null,1],["RSS::Maker::TaxonomyTopicModel","","Rails/classes/RSS/Maker/TaxonomyTopicModel.html","","",null,1],["RSS::Maker::TaxonomyTopicModel::TaxonomyTopicsBase","","Rails/classes/RSS/Maker/TaxonomyTopicModel/TaxonomyTopicsBase.html","","",null,1],["RSS::Maker::TaxonomyTopicModel::TaxonomyTopicsBase::TaxonomyTopicBase","","Rails/classes/RSS/Maker/TaxonomyTopicModel/TaxonomyTopicsBase/TaxonomyTopicBase.html","","",null,1],["RSS::Maker::TaxonomyTopicsModel","","Rails/classes/RSS/Maker/TaxonomyTopicsModel.html","","",null,1],["RSS::Maker::TaxonomyTopicsModel::TaxonomyTopicsBase","","Rails/classes/RSS/Maker/TaxonomyTopicsModel/TaxonomyTopicsBase.html","","",null,1],["RSS::Maker::TextinputBase","","Rails/classes/RSS/Maker/TextinputBase.html","","",null,1],["RSS::Maker::TrackBackModel","","Rails/classes/RSS/Maker/TrackBackModel.html","","",null,1],["RSS::Maker::TrackBackModel::TrackBackAboutsBase","","Rails/classes/RSS/Maker/TrackBackModel/TrackBackAboutsBase.html","","",null,1],["RSS::Maker::TrackBackModel::TrackBackAboutsBase::TrackBackAboutBase","","Rails/classes/RSS/Maker/TrackBackModel/TrackBackAboutsBase/TrackBackAboutBase.html","","",null,1],["RSS::Maker::XMLStyleSheets","","Rails/classes/RSS/Maker/XMLStyleSheets.html","","",null,1],["RSS::Maker::XMLStyleSheets::XMLStyleSheet","","Rails/classes/RSS/Maker/XMLStyleSheets/XMLStyleSheet.html","","",null,1],["RSS::MissingAttributeError","","Rails/classes/RSS/MissingAttributeError.html","","<p>Raised if a required attribute is missing.\n",null,1],["RSS::MissingTagError","","Rails/classes/RSS/MissingTagError.html","","<p>Raised if no matching tag is found.\n",null,1],["RSS::NSError","","Rails/classes/RSS/NSError.html","","",null,1],["RSS::NotAvailableValueError","","Rails/classes/RSS/NotAvailableValueError.html","","<p>Raised when an incorrect value is used.\n",null,1],["RSS::NotExceptedTagError","","Rails/classes/RSS/NotExpectedTagError.html","","<p>Raised when an unexpected tag is encountered.\n",null,1],["RSS::NotExpectedTagError","","Rails/classes/RSS/NotExpectedTagError.html","","<p>Raised when an unexpected tag is encountered.\n",null,1],["RSS::NotSetError","","Rails/classes/RSS/NotSetError.html","","<p>Raised when a required variable is not set.\n",null,1],["RSS::NotValidXMLParser","","Rails/classes/RSS/NotValidXMLParser.html","","",null,1],["RSS::NotWellFormedError","","Rails/classes/RSS/NotWellFormedError.html","","",null,1],["RSS::OverlappedPrefixError","","Rails/classes/RSS/OverlappedPrefixError.html","","",null,1],["RSS::Parser","","Rails/classes/RSS/Parser.html","","",null,1],["RSS::RDF","","Rails/classes/RSS/RDF.html","","",null,1],["RSS::RDF::Bag","","Rails/classes/RSS/RDF/Bag.html","","",null,1],["RSS::RDF::Bag::Li","","Rails/classes/RSS/RDF/Li.html","","",null,1],["RSS::RDF::Channel","","Rails/classes/RSS/RDF/Channel.html","","",null,1],["RSS::RDF::Channel::Image","","Rails/classes/RSS/RDF/Channel/Image.html","","",null,1],["RSS::RDF::Channel::Items","","Rails/classes/RSS/RDF/Channel/Items.html","","",null,1],["RSS::RDF::Channel::Items::Seq","","Rails/classes/RSS/RDF/Seq.html","","",null,1],["RSS::RDF::Channel::Textinput","","Rails/classes/RSS/RDF/Channel/Textinput.html","","",null,1],["RSS::RDF::Image","","Rails/classes/RSS/RDF/Image.html","","",null,1],["RSS::RDF::Item","","Rails/classes/RSS/RDF/Item.html","","",null,1],["RSS::RDF::Li","","Rails/classes/RSS/RDF/Li.html","","",null,1],["RSS::RDF::Seq","","Rails/classes/RSS/RDF/Seq.html","","",null,1],["RSS::RDF::Seq::Li","","Rails/classes/RSS/RDF/Li.html","","",null,1],["RSS::RDF::Textinput","","Rails/classes/RSS/RDF/Textinput.html","","",null,1],["RSS::REXMLLikeXMLParser","","Rails/classes/RSS/REXMLLikeXMLParser.html","","",null,1],["RSS::REXMLListener","","Rails/classes/RSS/REXMLListener.html","","",null,1],["RSS::REXMLParser","","Rails/classes/RSS/REXMLParser.html","","",null,1],["RSS::RSS09","","Rails/classes/RSS/RSS09.html","","",null,1],["RSS::RSS10","","Rails/classes/RSS/RSS10.html","","",null,1],["RSS::RootElementMixin","","Rails/classes/RSS/RootElementMixin.html","","",null,1],["RSS::Rss","","Rails/classes/RSS/Rss.html","","",null,1],["RSS::Rss::Channel","","Rails/classes/RSS/Rss/Channel.html","","",null,1],["RSS::Rss::Channel::Cloud","","Rails/classes/RSS/Rss/Channel/Cloud.html","","",null,1],["RSS::Rss::Channel::Image","","Rails/classes/RSS/Rss/Channel/Image.html","","",null,1],["RSS::Rss::Channel::Item","","Rails/classes/RSS/Rss/Channel/Item.html","","",null,1],["RSS::Rss::Channel::Item::Category","","Rails/classes/RSS/Rss/Channel/Item/Category.html","","",null,1],["RSS::Rss::Channel::Item::Enclosure","","Rails/classes/RSS/Rss/Channel/Item/Enclosure.html","","",null,1],["RSS::Rss::Channel::Item::Guid","","Rails/classes/RSS/Rss/Channel/Item/Guid.html","","",null,1],["RSS::Rss::Channel::Item::Source","","Rails/classes/RSS/Rss/Channel/Item/Source.html","","",null,1],["RSS::Rss::Channel::SkipDays","","Rails/classes/RSS/Rss/Channel/SkipDays.html","","",null,1],["RSS::Rss::Channel::SkipDays::Day","","Rails/classes/RSS/Rss/Channel/SkipDays/Day.html","","",null,1],["RSS::Rss::Channel::SkipHours","","Rails/classes/RSS/Rss/Channel/SkipHours.html","","",null,1],["RSS::Rss::Channel::SkipHours::Hour","","Rails/classes/RSS/Rss/Channel/SkipHours/Hour.html","","",null,1],["RSS::Rss::Channel::TextInput","","Rails/classes/RSS/Rss/Channel/TextInput.html","","",null,1],["RSS::SetupMaker","","Rails/classes/RSS/SetupMaker.html","","",null,1],["RSS::SlashModel","","Rails/classes/RSS/SlashModel.html","","",null,1],["RSS::SyndicationModel","","Rails/classes/RSS/SyndicationModel.html","","",null,1],["RSS::TaxonomyTopicModel","","Rails/classes/RSS/TaxonomyTopicModel.html","","",null,1],["RSS::TaxonomyTopicModel::TaxonomyTopic","","Rails/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html","","",null,1],["RSS::TaxonomyTopicsModel","","Rails/classes/RSS/TaxonomyTopicsModel.html","","",null,1],["RSS::TaxonomyTopicsModel::TaxonomyTopics","","Rails/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html","","",null,1],["RSS::TaxonomyTopicsModel::TaxonomyTopics::Bag","","Rails/classes/RSS/RDF/Bag.html","","",null,1],["RSS::TooMuchTagError","","Rails/classes/RSS/TooMuchTagError.html","","<p>Raised if there are more occurrences of the tag than expected.\n",null,1],["RSS::TrackBackModel10","","Rails/classes/RSS/TrackBackModel10.html","","",null,1],["RSS::TrackBackModel10::TrackBackAbout","","Rails/classes/RSS/TrackBackModel10/TrackBackAbout.html","","",null,1],["RSS::TrackBackModel10::TrackBackPing","","Rails/classes/RSS/TrackBackModel10/TrackBackPing.html","","",null,1],["RSS::TrackBackModel20","","Rails/classes/RSS/TrackBackModel20.html","","",null,1],["RSS::TrackBackModel20::TrackBackAbout","","Rails/classes/RSS/TrackBackModel20/TrackBackAbout.html","","",null,1],["RSS::TrackBackModel20::TrackBackPing","","Rails/classes/RSS/TrackBackModel20/TrackBackPing.html","","",null,1],["RSS::TrackBackUtils","","Rails/classes/RSS/TrackBackUtils.html","","",null,1],["RSS::UnknownConversionMethodError","","Rails/classes/RSS/UnknownConversionMethodError.html","","<p>Raised when an unknown conversion error occurs.\n",null,1],["RSS::UnknownConvertMethod","","Rails/classes/RSS/UnknownConversionMethodError.html","","<p>Raised when an unknown conversion error occurs.\n",null,1],["RSS::UnknownTagError","","Rails/classes/RSS/UnknownTagError.html","","<p>Raised when an unknown tag is found.\n",null,1],["RSS::UnsupportedMakerVersionError","","Rails/classes/RSS/UnsupportedMakerVersionError.html","","<p>Raised when a RSS::Maker attempts to use an unknown maker.\n",null,1],["RSS::Utils","","Rails/classes/RSS/Utils.html","","",null,1],["RSS::Utils::CSV","","Rails/classes/RSS/Utils/CSV.html","","",null,1],["RSS::Utils::InheritedReader","","Rails/classes/RSS/Utils/InheritedReader.html","","",null,1],["RSS::Utils::YesCleanOther","","Rails/classes/RSS/Utils/YesCleanOther.html","","",null,1],["RSS::Utils::YesOther","","Rails/classes/RSS/Utils/YesOther.html","","",null,1],["RSS::XML","","Rails/classes/RSS/XML.html","","",null,1],["RSS::XML::Element","","Rails/classes/RSS/XML/Element.html","","",null,1],["RSS::XMLParserListener","","Rails/classes/RSS/XMLParserListener.html","","",null,1],["RSS::XMLParserNotFound","","Rails/classes/RSS/XMLParserNotFound.html","","",null,1],["RSS::XMLParserParser","","Rails/classes/RSS/XMLParserParser.html","","",null,1],["RSS::XMLScanListener","","Rails/classes/RSS/XMLScanListener.html","","",null,1],["RSS::XMLScanParser","","Rails/classes/RSS/XMLScanParser.html","","",null,1],["RSS::XMLStyleSheet","","Rails/classes/RSS/XMLStyleSheet.html","","",null,1],["RSS::XMLStyleSheetMixin","","Rails/classes/RSS/XMLStyleSheetMixin.html","","",null,1],["RUNNING_UNIT_TESTS","","Ruby/files/rails/actionpack/RUNNING_UNIT_TESTS.html","","<p>Running with Rake\n<p>The easiest way to run the unit tests is through Rake. The default task\nruns the entire …\n",null,0],["RUNNING_UNIT_TESTS","","Ruby/files/rails/activerecord/RUNNING_UNIT_TESTS.html","","<p>Configure databases\n<p>Copy test/config.example.yml to test/config.yml and edit as needed. Or just\nrun the …\n",null,0],["Racc","","Rails/classes/Racc.html","","",null,1],["Racc::ParseError","","Rails/classes/Racc/ParseError.html","","",null,1],["Racc::Parser","","Rails/classes/Racc/Parser.html","","",null,1],["Rack","","Ruby/classes/Rack.html","","",null,0],["Rails","","Ruby/classes/Rails.html","","",null,0],["Rails::ActionMethods","","Ruby/classes/Rails/ActionMethods.html","","",null,0],["Rails::AppBuilder","","Ruby/classes/Rails/AppBuilder.html","","<p>The application builder allows you to override elements of the application\ngenerator without being forced …\n",null,0],["Rails::Application","","Ruby/classes/Rails/Application.html","","<p>In Rails 3.0, a Rails::Application object was introduced which is nothing\nmore than an Engine but with …\n",null,0],["Rails::Application::Bootstrap","","Ruby/classes/Rails/Application/Bootstrap.html","","",null,0],["Rails::Application::Configuration","","Ruby/classes/Rails/Application/Configuration.html","","",null,0],["Rails::Application::Finisher","","Ruby/classes/Rails/Application/Finisher.html","","",null,0],["Rails::Application::Railties","","Ruby/classes/Rails/Application/Railties.html","","",null,0],["Rails::Application::RoutesReloader","","Ruby/classes/Rails/Application/RoutesReloader.html","","",null,0],["Rails::BacktraceCleaner","","Ruby/classes/Rails/BacktraceCleaner.html","","",null,0],["Rails::Commands","","Ruby/classes/Rails/Commands.html","","",null,0],["Rails::Commands::Info","","Ruby/classes/Rails/Commands/Info.html","","",null,0],["Rails::Commands::Install","","Ruby/classes/Rails/Commands/Install.html","","",null,0],["Rails::Commands::Plugin","","Ruby/classes/Rails/Commands/Plugin.html","","",null,0],["Rails::Commands::Remove","","Ruby/classes/Rails/Commands/Remove.html","","",null,0],["Rails::Configuration","","Ruby/classes/Rails/Configuration.html","","",null,0],["Rails::Console","","Ruby/classes/Rails/Console.html","","",null,0],["Rails::ConsoleMethods","","Ruby/classes/Rails/ConsoleMethods.html","","",null,0],["Rails::DBConsole","","Ruby/classes/Rails/DBConsole.html","","",null,0],["Rails::Engine","","Ruby/classes/Rails/Engine.html","","<p><code>Rails::Engine</code> allows you to wrap a specific Rails application\nor subset of functionality and share it ...\n",null,0],["Rails::Engine::Configuration","","Ruby/classes/Rails/Engine/Configuration.html","","",null,0],["Rails::Engine::Railties","","Ruby/classes/Rails/Engine/Railties.html","","",null,0],["Rails::Generators","","Ruby/classes/Rails/Generators.html","","",null,0],["Rails::Generators::Actions","","Ruby/classes/Rails/Generators/Actions.html","","",null,0],["Rails::Generators::ActiveModel","","Ruby/classes/Rails/Generators/ActiveModel.html","","<p>ActiveModel is a class to be implemented by each ORM to allow Rails to\ngenerate customized controller …\n",null,0],["Rails::Generators::AppBase","","Ruby/classes/Rails/Generators/AppBase.html","","",null,0],["Rails::Generators::AppGenerator","","Ruby/classes/Rails/Generators/AppGenerator.html","","",null,0],["Rails::Generators::AssetsGenerator","","Ruby/classes/Rails/Generators/AssetsGenerator.html","","",null,0],["Rails::Generators::Base","","Ruby/classes/Rails/Generators/Base.html","","",null,0],["Rails::Generators::ControllerGenerator","","Ruby/classes/Rails/Generators/ControllerGenerator.html","","",null,0],["Rails::Generators::Error","","Ruby/classes/Rails/Generators/Error.html","","",null,0],["Rails::Generators::GeneratedAttribute","","Ruby/classes/Rails/Generators/GeneratedAttribute.html","","",null,0],["Rails::Generators::GeneratorGenerator","","Ruby/classes/Rails/Generators/GeneratorGenerator.html","","",null,0],["Rails::Generators::HelperGenerator","","Ruby/classes/Rails/Generators/HelperGenerator.html","","",null,0],["Rails::Generators::MailerGenerator","","Ruby/classes/Rails/Generators/MailerGenerator.html","","",null,0],["Rails::Generators::Migration","","Ruby/classes/Rails/Generators/Migration.html","","<p>Holds common methods for migrations. It assumes that migrations has the\n[0-9]*_name format and can be …\n",null,0],["Rails::Generators::Migration::ClassMethods","","Ruby/classes/Rails/Generators/Migration/ClassMethods.html","","",null,0],["Rails::Generators::MigrationGenerator","","Ruby/classes/Rails/Generators/MigrationGenerator.html","","",null,0],["Rails::Generators::ModelGenerator","","Ruby/classes/Rails/Generators/ModelGenerator.html","","",null,0],["Rails::Generators::NamedBase","","Ruby/classes/Rails/Generators/NamedBase.html","","",null,0],["Rails::Generators::ObserverGenerator","","Ruby/classes/Rails/Generators/ObserverGenerator.html","","",null,0],["Rails::Generators::PluginNewGenerator","","Ruby/classes/Rails/Generators/PluginNewGenerator.html","","",null,0],["Rails::Generators::ResourceGenerator","","Ruby/classes/Rails/Generators/ResourceGenerator.html","","",null,0],["Rails::Generators::ResourceHelpers","","Ruby/classes/Rails/Generators/ResourceHelpers.html","","<p>Deal with controller names on scaffold and add some helpers to deal with\nActiveModel.\n",null,0],["Rails::Generators::ResourceRouteGenerator","","Ruby/classes/Rails/Generators/ResourceRouteGenerator.html","","",null,0],["Rails::Generators::ScaffoldControllerGenerator","","Ruby/classes/Rails/Generators/ScaffoldControllerGenerator.html","","",null,0],["Rails::Generators::ScaffoldGenerator","","Ruby/classes/Rails/Generators/ScaffoldGenerator.html","","",null,0],["Rails::Generators::SessionMigrationGenerator","","Ruby/classes/Rails/Generators/SessionMigrationGenerator.html","","",null,0],["Rails::Generators::TaskGenerator","","Ruby/classes/Rails/Generators/TaskGenerator.html","","",null,0],["Rails::Info","","Ruby/classes/Rails/Info.html","","",null,0],["Rails::InfoController","","Ruby/classes/Rails/InfoController.html","","",null,0],["Rails::Initializable","","Ruby/classes/Rails/Initializable.html","","",null,0],["Rails::Initializable::ClassMethods","","Ruby/classes/Rails/Initializable/ClassMethods.html","","",null,0],["Rails::Initializable::Collection","","Ruby/classes/Rails/Initializable/Collection.html","","",null,0],["Rails::Initializable::Initializer","","Ruby/classes/Rails/Initializable/Initializer.html","","",null,0],["Rails::Paths","","Ruby/classes/Rails/Paths.html","","",null,0],["Rails::Paths::Path","","Ruby/classes/Rails/Paths/Path.html","","",null,0],["Rails::Paths::Root","","Ruby/classes/Rails/Paths/Root.html","","<p>This object is an extended hash that behaves as root of the\n<code>Rails::Paths</code> system. It allows you to collect …\n",null,0],["Rails::Plugin","","Ruby/classes/Rails/Plugin.html","","<p>Rails::Plugin is nothing more than a Rails::Engine, but since it’s loaded\ntoo late in the boot process, …\n",null,0],["Rails::PluginBuilder","","Ruby/classes/Rails/PluginBuilder.html","","",null,0],["Rails::Rack","","Ruby/classes/Rails/Rack.html","","",null,0],["Rails::Rack::Debugger","","Ruby/classes/Rails/Rack/Debugger.html","","",null,0],["Rails::Rack::LogTailer","","Ruby/classes/Rails/Rack/LogTailer.html","","",null,0],["Rails::Rack::Logger","","Ruby/classes/Rails/Rack/Logger.html","","<p>Sets log tags, logs the request, calls the app, and flushes the logs.\n",null,0],["Rails::Railtie","","Ruby/classes/Rails/Railtie.html","","<p>Railtie is the core of the Rails framework and provides several hooks to\nextend Rails and/or modify the …\n",null,0],["Rails::Railtie::Configurable","","Ruby/classes/Rails/Railtie/Configurable.html","","",null,0],["Rails::Railtie::Configurable::ClassMethods","","Ruby/classes/Rails/Railtie/Configurable/ClassMethods.html","","",null,0],["Rails::Railtie::Configuration","","Ruby/classes/Rails/Railtie/Configuration.html","","",null,0],["Rails::ScriptRailsLoader","","Ruby/classes/Rails/ScriptRailsLoader.html","","",null,0],["Rails::Server","","Ruby/classes/Rails/Server.html","","",null,0],["Rails::Server::Options","","Ruby/classes/Rails/Server/Options.html","","",null,0],["RailsEnvironment","","Ruby/classes/RailsEnvironment.html","","",null,0],["RailsGuides","","Ruby/classes/RailsGuides.html","","",null,0],["RailsGuides::Generator","","Ruby/classes/RailsGuides/Generator.html","","",null,0],["RailsGuides::Helpers","","Ruby/classes/RailsGuides/Helpers.html","","",null,0],["RailsGuides::Indexer","","Ruby/classes/RailsGuides/Indexer.html","","",null,0],["RailsGuides::Levenshtein","","Ruby/classes/RailsGuides/Levenshtein.html","","",null,0],["RailsGuides::TextileExtensions","","Ruby/classes/RailsGuides/TextileExtensions.html","","",null,0],["RailsGuides::Validator","","Ruby/classes/RailsGuides/Validator.html","","",null,0],["Raise","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-Raise","(err = nil, *rest)","<p>Fail(err, *rest)\n\n<pre>err:    exception\nrest:   message arguments</pre>\n",null,1],["Raise","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-Raise","(klass = E2MM, err = nil, *rest)","<p>Fail(klass, err, *rest)\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">klass</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n<span class=\"ruby-identifier\">err</span><span class=\"ruby-operator\">:</span>    <span class=\"ruby-identifier\">exception</span>\n<span class=\"ruby-identifier\">rest</span><span class=\"ruby-operator\">:</span>   <span class=\"ruby-identifier\">message</span> <span class=\"ruby-identifier\">arguments</span>\n</pre>\n",null,1],["Raise","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-Raise","(klass = E2MM, err = nil, *rest)","<p>Fail(klass, err, *rest)\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">klass</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n<span class=\"ruby-identifier\">err</span><span class=\"ruby-operator\">:</span>    <span class=\"ruby-identifier\">exception</span>\n<span class=\"ruby-identifier\">rest</span><span class=\"ruby-operator\">:</span>   <span class=\"ruby-identifier\">message</span> <span class=\"ruby-identifier\">arguments</span>\n</pre>\n",null,1],["Raise","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-Raise","(err = nil, *rest)","<p>Fail(err, *rest)\n\n<pre>err:    exception\nrest:   message arguments</pre>\n",null,1],["Rake","","Rails/classes/Rake.html","","",null,1],["Rake::AltSystem","","Rails/classes/Rake/AltSystem.html","","<p>Alternate implementations of system() and backticks “ on Windows for\nruby-1.8 and earlier.\n",null,1],["Rake::Application","","Rails/classes/Rake/Application.html","","<p>Rake main application object.  When invoking <code>rake</code> from the\ncommand line, a Rake::Application object is …\n",null,1],["Rake::Cloneable","","Rails/classes/Rake/Cloneable.html","","<p>##########################################################################\nMixin for creating easily …\n",null,1],["Rake::CompositePublisher","","Rails/classes/Rake/CompositePublisher.html","","<p>Manage several publishers as a single entity.\n",null,1],["Rake::DSL","","Rails/classes/Rake/DSL.html","","<p>DSL is a module that provides #task, #desc, #namespace, etc.  Use this when\nyou’d like to use rake outside …\n",null,1],["Rake::DefaultLoader","","Rails/classes/Rake/DefaultLoader.html","","<p>Default Rakefile loader used by <code>import</code>.\n",null,1],["Rake::EarlyTime","","Rails/classes/Rake/EarlyTime.html","","<p>EarlyTime is a fake timestamp that occurs <em>before</em> any other time\nvalue.\n",null,1],["Rake::FileCreationTask","","Rails/classes/Rake/FileCreationTask.html","","<p>A FileCreationTask is a file task that when used as a dependency will be\nneeded if and only if the file …\n",null,1],["Rake::FileList","","Rails/classes/Rake/FileList.html","","<p>######################################################################### A\nFileList is essentially an …\n",null,1],["Rake::FileTask","","Rails/classes/Rake/FileTask.html","","<p>######################################################################### A\nFileTask is a task that includes …\n",null,1],["Rake::FileUtilsExt","","Rails/classes/Rake/FileUtilsExt.html","","<p>FileUtilsExt provides a custom version of the FileUtils methods that\nrespond to the <code>verbose</code> and <code>nowrite</code> …\n",null,1],["Rake::FtpFile","","Rails/classes/Rake/FtpFile.html","","<p><strong>Note:</strong> <em> Not released for general use.</em>\n",null,1],["Rake::FtpUploader","","Rails/classes/Rake/FtpUploader.html","","<p>Manage the uploading of files to an FTP account.\n",null,1],["Rake::InvocationChain","","Rails/classes/Rake/InvocationChain.html","","<p>InvocationChain tracks the chain of task invocations to detect circular\ndependencies.\n",null,1],["Rake::InvocationChain::EmptyInvocationChain","","Rails/classes/Rake/InvocationChain/EmptyInvocationChain.html","","",null,1],["Rake::InvocationExceptionMixin","","Rails/classes/Rake/InvocationExceptionMixin.html","","",null,1],["Rake::MakefileLoader","","Rails/classes/Rake/MakefileLoader.html","","<p>Makefile loader to be used with the import file loader.\n",null,1],["Rake::MultiTask","","Rails/classes/Rake/MultiTask.html","","<p>Same as a regular task, but the immediate prerequisites are done in\nparallel using Ruby threads.\n",null,1],["Rake::NameSpace","","Rails/classes/Rake/NameSpace.html","","<p>The NameSpace class will lookup task names in the the scope defined by a\n<code>namespace</code> command.\n",null,1],["Rake::PackageTask","","Rails/classes/Rake/PackageTask.html","","<p>Create a packaging task that will package the project into distributable\nfiles (e.g zip archive or tar …\n",null,1],["Rake::PseudoStatus","","Rails/classes/Rake/PseudoStatus.html","","<p>Exit status class for times the system just gives us a nil.\n",null,1],["Rake::RDocTask","","Rails/classes/Rake/RDocTask.html","","",null,1],["Rake::RubyForgePublisher","","Rails/classes/Rake/RubyForgePublisher.html","","",null,1],["Rake::RuleRecursionOverflowError","","Rails/classes/Rake/RuleRecursionOverflowError.html","","<p>Error indicating a recursion overflow error in task selection.\n",null,1],["Rake::SshDirPublisher","","Rails/classes/Rake/SshDirPublisher.html","","<p>Publish an entire directory to an existing remote directory using SSH.\n",null,1],["Rake::SshFilePublisher","","Rails/classes/Rake/SshFilePublisher.html","","<p>Publish a list of files to an existing remote directory.\n",null,1],["Rake::SshFreshDirPublisher","","Rails/classes/Rake/SshFreshDirPublisher.html","","<p>Publish an entire directory to a fresh remote directory using SSH.\n",null,1],["Rake::Task","","Rails/classes/Rake/Task.html","","<p>######################################################################### A\nTask is the basic unit of …\n",null,1],["Rake::TaskArgumentError","","Rails/classes/Rake/TaskArgumentError.html","","<p>Error indicating an ill-formed task declaration.\n",null,1],["Rake::TaskArguments","","Rails/classes/Rake/TaskArguments.html","","<p>TaskArguments manage the arguments passed to a task.\n",null,1],["Rake::TaskLib","","Rails/classes/Rake/TaskLib.html","","<p>Base class for Task Libraries.\n",null,1],["Rake::TaskManager","","Rails/classes/Rake/TaskManager.html","","<p>The TaskManager module is a mixin for managing tasks.\n",null,1],["Rake::Win32","","Rails/classes/Rake/Win32.html","","<p>Win 32 interface methods for Rake. Windows specific functionality will be\nplaced here to collect that …\n",null,1],["Rake::Win32::Win32HomeError","","Rails/classes/Rake/Win32/Win32HomeError.html","","<p>Error indicating a problem in locating the home directory on a Win32\nsystem.\n",null,1],["Rakefile","","Ruby/files/rails/Rakefile.html","","<p>#!/usr/bin/env rake\n<p>require ‘rdoc/task’ require ‘sdoc’ require ‘net/http’\n<p>$:.unshift File.expand_path(‘..’, …\n",null,0],["Rakefile","","Ruby/files/rails/railties/guides/code/getting_started/Rakefile.html","","<p>#!/usr/bin/env rake # Add your own tasks in files placed in lib/tasks\nending in .rake, # for example …\n",null,0],["Rakefile","","Ruby/files/rails/railties/Rakefile.html","","<p>#!/usr/bin/env rake require ‘rake/testtask’ require ‘rubygems/package_task’\n<p>require ‘date’ require ‘rbconfig’ …\n",null,0],["Rakefile","","Ruby/files/rails/activesupport/Rakefile.html","","<p>require ‘rake/testtask’ require ‘rubygems/package_task’\n<p>task :default =&gt; :test Rake::TestTask.new do …\n",null,0],["Rakefile","","Ruby/files/rails/activeresource/Rakefile.html","","<p>#!/usr/bin/env rake require ‘rake/testtask’ require ‘rake/packagetask’\nrequire ‘rubygems/package_task …\n",null,0],["Rakefile","","Ruby/files/rails/activerecord/Rakefile.html","","<p>#!/usr/bin/env rake require ‘rake/testtask’ require ‘rake/packagetask’\nrequire ‘rubygems/package_task …\n",null,0],["Rakefile","","Ruby/files/rails/activemodel/Rakefile.html","","<p>dir = File.dirname(__FILE__)\n<p>require ‘rake/testtask’\n<p>task :default =&gt; :test\n",null,0],["Rakefile","","Ruby/files/rails/actionpack/Rakefile.html","","<p>#!/usr/bin/env rake require ‘rake/testtask’ require ‘rake/packagetask’\nrequire ‘rubygems/package_task …\n",null,0],["Rakefile","","Ruby/files/rails/actionmailer/Rakefile.html","","<p>#!/usr/bin/env rake require ‘rake/testtask’ require ‘rake/packagetask’\nrequire ‘rubygems/package_task …\n",null,0],["Rakefile","","Ruby/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/Rakefile.html","","<p>#!/usr/bin/env rake begin\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'bundler/setup'</span>\n</pre>\n<p>rescue LoadError\n",null,0],["Rakefile","","Ruby/files/rails/railties/lib/rails/generators/rails/app/templates/Rakefile.html","","<p>#!/usr/bin/env rake # Add your own tasks in files placed in lib/tasks\nending in .rake, # for example …\n",null,0],["Random","","Rails/classes/Random.html","","",null,1],["Range","","Ruby/classes/Range.html","","",null,0],["Range","","Rails/classes/Range.html","","<p>A <code>Range</code> represents an interval—a set of values with a start\nand an end. Ranges may be constructed using …\n",null,1],["RangeError","","Rails/classes/RangeError.html","","<p>Raised when a given numerical value is out of range.\n\n<pre>[1, 2, 3].drop(1 &lt;&lt; 100)</pre>\n<p><em>raises the exception:</em>\n",null,1],["Rational","","Rails/classes/Rational.html","","<p>A rational number can be represented as a paired integer number; a/b\n(b&gt;0).  Where a is numerator …\n",null,1],["Rational","Kernel","Rails/classes/Kernel.html#method-i-Rational","(*args)","<p>Returns x/y;\n",null,1],["Readline","","Rails/classes/Readline.html","","<p>The Readline module provides interface for GNU Readline. This module\ndefines a number of methods to facilitate ...\n",null,1],["RecursiveHTTPFetcher","","Ruby/classes/RecursiveHTTPFetcher.html","","",null,0],["Regexp","","Ruby/classes/Regexp.html","","",null,0],["Regexp","","Rails/classes/Regexp.html","","<p>A <code>Regexp</code> holds a regular expression, used to match a pattern\nagainst strings. Regexps are created using …\n",null,1],["RegexpError","","Rails/classes/RegexpError.html","","<p>Raised when given an invalid regexp expression.\n\n<pre>Regexp.new(&quot;?&quot;)</pre>\n<p><em>raises the exception:</em>\n",null,1],["RequireProfiler","","Ruby/classes/RequireProfiler.html","","",null,0],["Resolv","","Rails/classes/Resolv.html","","<p>Resolv is a thread-aware DNS resolver library written in Ruby.  Resolv can\nhandle multiple DNS requests …\n",null,1],["Resolv::DNS","","Rails/classes/Resolv/DNS.html","","<p>Resolv::DNS is a DNS stub resolver.\n<p>Information taken from the following places:\n<p>STD0013\n",null,1],["Resolv::DNS::Config","","Rails/classes/Resolv/DNS/Config.html","","",null,1],["Resolv::DNS::Config::NXDomain","","Rails/classes/Resolv/DNS/Config/NXDomain.html","","<p>Indicates no such domain was found.\n",null,1],["Resolv::DNS::Config::OtherResolvError","","Rails/classes/Resolv/DNS/Config/OtherResolvError.html","","<p>Indicates some other unhandled resolver error was encountered.\n",null,1],["Resolv::DNS::DecodeError","","Rails/classes/Resolv/DNS/DecodeError.html","","<p>Indicates that the DNS response was unable to be decoded.\n",null,1],["Resolv::DNS::EncodeError","","Rails/classes/Resolv/DNS/EncodeError.html","","<p>Indicates that the DNS request was unable to be encoded.\n",null,1],["Resolv::DNS::Name","","Rails/classes/Resolv/DNS/Name.html","","<p>A representation of a DNS name.\n",null,1],["Resolv::DNS::Query","","Rails/classes/Resolv/DNS/Query.html","","<p>A DNS query abstract class.\n",null,1],["Resolv::DNS::Requester","","Rails/classes/Resolv/DNS/Requester.html","","",null,1],["Resolv::DNS::Requester::RequestError","","Rails/classes/Resolv/DNS/Requester/RequestError.html","","<p>Indicates a problem with the DNS request.\n",null,1],["Resolv::DNS::Resource","","Rails/classes/Resolv/DNS/Resource.html","","<p>A DNS resource abstract class.\n",null,1],["Resolv::DNS::Resource::ANY","","Rails/classes/Resolv/DNS/Resource/ANY.html","","<p>A Query type requesting any RR.\n",null,1],["Resolv::DNS::Resource::CNAME","","Rails/classes/Resolv/DNS/Resource/CNAME.html","","<p>The canonical name for an alias.\n",null,1],["Resolv::DNS::Resource::DomainName","","Rails/classes/Resolv/DNS/Resource/DomainName.html","","<p>Domain Name resource abstract class.\n",null,1],["Resolv::DNS::Resource::Generic","","Rails/classes/Resolv/DNS/Resource/Generic.html","","<p>A generic resource abstract class.\n",null,1],["Resolv::DNS::Resource::HINFO","","Rails/classes/Resolv/DNS/Resource/HINFO.html","","<p>Host Information resource.\n",null,1],["Resolv::DNS::Resource::IN","","Rails/classes/Resolv/DNS/Resource/IN.html","","<p>module IN contains ARPA Internet specific RRs.\n",null,1],["Resolv::DNS::Resource::IN::A","","Rails/classes/Resolv/DNS/Resource/IN/A.html","","<p>IPv4 Address resource\n",null,1],["Resolv::DNS::Resource::IN::AAAA","","Rails/classes/Resolv/DNS/Resource/IN/AAAA.html","","<p>An IPv6 address record.\n",null,1],["Resolv::DNS::Resource::IN::SRV","","Rails/classes/Resolv/DNS/Resource/IN/SRV.html","","<p>SRV resource record defined in RFC 2782\n<p>These records identify the hostname and port that a service is …\n",null,1],["Resolv::DNS::Resource::IN::WKS","","Rails/classes/Resolv/DNS/Resource/IN/WKS.html","","<p>Well Known Service resource.\n",null,1],["Resolv::DNS::Resource::MINFO","","Rails/classes/Resolv/DNS/Resource/MINFO.html","","<p>Mailing list or mailbox information.\n",null,1],["Resolv::DNS::Resource::MX","","Rails/classes/Resolv/DNS/Resource/MX.html","","<p>Mail Exchanger resource.\n",null,1],["Resolv::DNS::Resource::NS","","Rails/classes/Resolv/DNS/Resource/NS.html","","<p>An authoritative name server.\n",null,1],["Resolv::DNS::Resource::PTR","","Rails/classes/Resolv/DNS/Resource/PTR.html","","<p>A Pointer to another DNS name.\n",null,1],["Resolv::DNS::Resource::SOA","","Rails/classes/Resolv/DNS/Resource/SOA.html","","<p>Start Of Authority resource.\n",null,1],["Resolv::DNS::Resource::TXT","","Rails/classes/Resolv/DNS/Resource/TXT.html","","<p>Unstructured text resource.\n",null,1],["Resolv::Hosts","","Rails/classes/Resolv/Hosts.html","","<p>Resolv::Hosts is a hostname resolver that uses the system hosts file.\n",null,1],["Resolv::IPv4","","Rails/classes/Resolv/IPv4.html","","<p>A Resolv::DNS IPv4 address.\n",null,1],["Resolv::IPv6","","Rails/classes/Resolv/IPv6.html","","<p>A Resolv::DNS IPv6 address.\n",null,1],["Resolv::ResolvError","","Rails/classes/Resolv/ResolvError.html","","<p>Indicates a failure to resolve a name or address.\n",null,1],["Resolv::ResolvTimeout","","Rails/classes/Resolv/ResolvTimeout.html","","<p>Indicates a timeout resolving a name or address.\n",null,1],["Rinda","","Rails/classes/Rinda.html","","<p>A module to implement the Linda distributed computing paradigm in Ruby.\n<p>Rinda is part of DRb (dRuby). …\n",null,1],["Rinda::DRbObjectTemplate","","Rails/classes/Rinda/DRbObjectTemplate.html","","<p><em>Documentation?</em>\n",null,1],["Rinda::InvalidHashTupleKey","","Rails/classes/Rinda/InvalidHashTupleKey.html","","<p>Raised when a hash-based tuple has an invalid key.\n",null,1],["Rinda::NotifyTemplateEntry","","Rails/classes/Rinda/NotifyTemplateEntry.html","","<p>A NotifyTemplateEntry is returned by TupleSpace#notify and is notified of\nTupleSpace changes.  You may …\n",null,1],["Rinda::RequestCanceledError","","Rails/classes/Rinda/RequestCanceledError.html","","<p>Raised when trying to use a canceled tuple.\n",null,1],["Rinda::RequestExpiredError","","Rails/classes/Rinda/RequestExpiredError.html","","<p>Raised when trying to use an expired tuple.\n",null,1],["Rinda::RindaError","","Rails/classes/Rinda/RindaError.html","","<p>Rinda error base class\n",null,1],["Rinda::RingFinger","","Rails/classes/Rinda/RingFinger.html","","<p>RingFinger is used by RingServer clients to discover the RingServer’s\nTupleSpace.  Typically, all a client …\n",null,1],["Rinda::RingProvider","","Rails/classes/Rinda/RingProvider.html","","<p>RingProvider uses a RingServer advertised TupleSpace as a name service.\nTupleSpace clients can register …\n",null,1],["Rinda::RingServer","","Rails/classes/Rinda/RingServer.html","","<p>A RingServer allows a Rinda::TupleSpace to be located via UDP broadcasts.\nService location uses the following …\n",null,1],["Rinda::SimpleRenewer","","Rails/classes/Rinda/SimpleRenewer.html","","<p>An SimpleRenewer allows a TupleSpace to check if a TupleEntry is still\nalive.\n",null,1],["Rinda::Template","","Rails/classes/Rinda/Template.html","","<p>Templates are used to match tuples in Rinda.\n",null,1],["Rinda::TemplateEntry","","Rails/classes/Rinda/TemplateEntry.html","","<p>A TemplateEntry is a Template together with expiry and cancellation data.\n",null,1],["Rinda::Tuple","","Rails/classes/Rinda/Tuple.html","","<p>A tuple is the elementary object in Rinda programming. Tuples may be\nmatched against templates if the …\n",null,1],["Rinda::TupleBag","","Rails/classes/Rinda/TupleBag.html","","<p>TupleBag is an unordered collection of tuples. It is the basis of\nTuplespace.\n",null,1],["Rinda::TupleBag::TupleBin","","Rails/classes/Rinda/TupleBag/TupleBin.html","","",null,1],["Rinda::TupleEntry","","Rails/classes/Rinda/TupleEntry.html","","<p>A TupleEntry is a Tuple (i.e. a possible entry in some Tuplespace) together\nwith expiry and cancellation …\n",null,1],["Rinda::TupleSpace","","Rails/classes/Rinda/TupleSpace.html","","<p>The Tuplespace manages access to the tuples it contains, ensuring mutual\nexclusion requirements are met. …\n",null,1],["Rinda::TupleSpaceProxy","","Rails/classes/Rinda/TupleSpaceProxy.html","","<p>TupleSpaceProxy allows a remote Tuplespace to appear as local.\n",null,1],["Rinda::WaitTemplateEntry","","Rails/classes/Rinda/WaitTemplateEntry.html","","<p><em>Documentation?</em>\n",null,1],["Ripper","","Rails/classes/Ripper.html","","",null,1],["Ripper::Filter","","Rails/classes/Ripper/Filter.html","","<p>This class handles only scanner events, and they are dispatched in the\n`right’ order (same with input). …\n",null,1],["Ripper::TokenPattern","","Rails/classes/Ripper/TokenPattern.html","","",null,1],["Ripper::TokenPattern::CompileError","","Rails/classes/Ripper/TokenPattern/CompileError.html","","",null,1],["Ripper::TokenPattern::Error","","Rails/classes/Ripper/TokenPattern/Error.html","","",null,1],["Ripper::TokenPattern::MatchData","","Rails/classes/Ripper/TokenPattern/MatchData.html","","",null,1],["Ripper::TokenPattern::MatchError","","Rails/classes/Ripper/TokenPattern/MatchError.html","","",null,1],["RubyLex","","Rails/classes/RubyLex.html","","",null,1],["RubyToken","","Rails/classes/RubyToken.html","","\n<pre>irb/ruby-token.rb - ruby tokens\n    $Release Version: 0.9.6$\n    $Revision$\n    by Keiju ISHITSUKA(keiju@ruby-lang.org)</pre>\n",null,1],["RubyToken::TkError","","Rails/classes/RubyToken/TkError.html","","",null,1],["RubyToken::TkId","","Rails/classes/RubyToken/TkId.html","","",null,1],["RubyToken::TkNode","","Rails/classes/RubyToken/TkNode.html","","",null,1],["RubyToken::TkOPASGN","","Rails/classes/RubyToken/TkOPASGN.html","","",null,1],["RubyToken::TkOp","","Rails/classes/RubyToken/TkOp.html","","",null,1],["RubyToken::TkUnknownChar","","Rails/classes/RubyToken/TkUnknownChar.html","","",null,1],["RubyToken::TkVal","","Rails/classes/RubyToken/TkVal.html","","",null,1],["RubyToken::Token","","Rails/classes/RubyToken/Token.html","","",null,1],["RubyVM","","Rails/classes/RubyVM.html","","<p>::VM\n",null,1],["RubyVM::Env","","Rails/classes/RubyVM/Env.html","","<p>::VM::Env\n",null,1],["RubyVM::InstructionSequence","","Rails/classes/RubyVM/InstructionSequence.html","","<p>declare ::RubyVM::InstructionSequence\n",null,1],["RuntimeError","","Rails/classes/RuntimeError.html","","<p>A generic error class raised when an invalid operation is attempted.\n\n<pre>[1, 2, 3].freeze &lt;&lt; 4</pre>\n<p><em>raises the exception:</em> ...\n",null,1],["SDBM","","Rails/classes/SDBM.html","","",null,1],["SDBMError","","Rails/classes/SDBMError.html","","",null,1],["SOCKSSocket","","Rails/classes/SOCKSSocket.html","","<p>SOCKS is an Internet protocol that routes packets between a client and a\nserver through a proxy server. ...\n",null,1],["STRING_OR_FAILED_FORMAT","","Rails/classes/STRING_OR_FAILED_FORMAT.html","","",null,1],["Scanf","","Rails/classes/Scanf.html","","<p>scanf for Ruby\n<p>Description\n<p>scanf is an implementation of the C function scanf(3), modified as\nnecessary …\n",null,1],["Scanf::FormatSpecifier","","Rails/classes/Scanf/FormatSpecifier.html","","",null,1],["Scanf::FormatString","","Rails/classes/Scanf/FormatString.html","","",null,1],["ScriptError","","Rails/classes/ScriptError.html","","<p>ScriptError is the superclass for errors raised when a script can not be\nexecuted because of a <code>LoadError</code> ...\n",null,1],["SecureRandom","","Rails/classes/SecureRandom.html","","",null,1],["SecurityError","","Rails/classes/SecurityError.html","","<p>Raised when attempting a potential unsafe operation, typically when the\n$SAFE level is raised above 0. ...\n",null,1],["Set","","Rails/classes/Set.html","","<p>Set implements a collection of unordered values with no duplicates. This is\na hybrid of Array’s intuitive …\n",null,1],["SetValue","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-SetValue","(hkey, name, type, data, size)","",null,1],["Shell","","Rails/classes/Shell.html","","\n<pre>shell/filter.rb -\n    $Release Version: 0.7 $\n    $Revision$\n    by Keiju ISHITSUKA(keiju@ruby-lang.org)</pre>\n",null,1],["Shell::AppendFile","","Rails/classes/Shell/AppendFile.html","","",null,1],["Shell::AppendIO","","Rails/classes/Shell/AppendIO.html","","<p>class Sort &lt; Cat\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">initialize</span>(<span class=\"ruby-identifier\">sh</span>, *<span class=\"ruby-identifier\">filenames</span>)\n  <span class=\"ruby-keyword\">super</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">each</span>(<span class=\"ruby-identifier\">rs</span> = <span class=\"ruby-keyword\">nil</span>)\n  <span class=\"ruby-identifier\">ary</span> = []\n  <span class=\"ruby-keyword\">super</span>{<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">l</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["Shell::BuiltInCommand","","Rails/classes/Shell/BuiltInCommand.html","","",null,1],["Shell::Cat","","Rails/classes/Shell/Cat.html","","",null,1],["Shell::CommandProcessor","","Rails/classes/Shell/CommandProcessor.html","","",null,1],["Shell::Concat","","Rails/classes/Shell/Concat.html","","",null,1],["Shell::Echo","","Rails/classes/Shell/Echo.html","","",null,1],["Shell::Error","","Rails/classes/Shell/Error.html","","",null,1],["Shell::Filter","","Rails/classes/Shell/Filter.html","","<p>Filter A method to require\n\n<pre>each()</pre>\n",null,1],["Shell::Glob","","Rails/classes/Shell/Glob.html","","",null,1],["Shell::ProcessController","","Rails/classes/Shell/ProcessController.html","","",null,1],["Shell::SystemCommand","","Rails/classes/Shell/SystemCommand.html","","",null,1],["Shell::Tee","","Rails/classes/Shell/Tee.html","","",null,1],["Shell::Void","","Rails/classes/Shell/Void.html","","",null,1],["Shellwords","","Rails/classes/Shellwords.html","","<p>This module manipulates strings according to the word parsing rules of the\nUNIX Bourne shell.\n<p>The shellwords() …\n",null,1],["Signal","","Rails/classes/Signal.html","","<p>Many operating systems allow signals to be sent to running processes. Some\nsignals have a defined effect …\n",null,1],["SignalException","","Rails/classes/SignalException.html","","<p>Raised when a signal is received.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">begin</span>\n  <span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">kill</span>(<span class=\"ruby-string\">'HUP'</span>,<span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">pid</span>)\n<span class=\"ruby-keyword\">rescue</span> <span class=\"ruby-constant\">SignalException</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">e</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["SimpleDelegator","","Rails/classes/SimpleDelegator.html","","<p>A concrete implementation of Delegator, this class provides the means to\ndelegate all supported method …\n",null,1],["SingleForwardable","","Rails/classes/SingleForwardable.html","","<p>Usage of The SingleForwardable is like Fowadable module.\n",null,1],["Singleton","","Rails/classes/Singleton.html","","<p>The Singleton module implements the Singleton pattern.\n<p>Usage\n<p>To use Singleton, include the module in your …\n",null,1],["SizedQueue","","Rails/classes/SizedQueue.html","","<p>This class represents queues of specified size capacity.  The push\noperation may be blocked if the capacity …\n",null,1],["Socket","","Rails/classes/Socket.html","","<p>Class <code>Socket</code> provides access to the underlying operating\nsystem socket implementations.  It can be used ...\n",null,1],["Socket::AncillaryData","","Rails/classes/Socket/AncillaryData.html","","<p>Socket::AncillaryData represents the ancillary data (control information)\nused by sendmsg and recvmsg ...\n",null,1],["Socket::Option","","Rails/classes/Socket/Option.html","","<p>Socket::Option represents a socket option used by BasicSocket#getsockopt\nand BasicSocket#setsockopt. ...\n",null,1],["Socket::UDPSource","","Rails/classes/Socket/UDPSource.html","","<p>UDP/IP address information used by Socket.udp_server_loop.\n",null,1],["SocketError","","Rails/classes/SocketError.html","","<p>SocketError is the error class for socket.\n",null,1],["SortedSet","","Rails/classes/SortedSet.html","","<p>SortedSet implements a Set that guarantees that it’s element are yielded in\nsorted order (according to …\n",null,1],["SourceAnnotationExtractor","","Ruby/classes/SourceAnnotationExtractor.html","","<p>Implements the logic behind the rake tasks for annotations like\n\n<pre>rake notes\nrake notes:optimize</pre>\n<p>and friends. …\n",null,0],["SourceAnnotationExtractor::Annotation","","Ruby/classes/SourceAnnotationExtractor/Annotation.html","","",null,0],["Sprockets","","Ruby/classes/Sprockets.html","","",null,0],["Sprockets::Bootstrap","","Ruby/classes/Sprockets/Bootstrap.html","","",null,0],["Sprockets::Compressors","","Ruby/classes/Sprockets/Compressors.html","","",null,0],["Sprockets::Helpers","","Ruby/classes/Sprockets/Helpers.html","","",null,0],["Sprockets::Helpers::IsolatedHelper","","Ruby/classes/Sprockets/Helpers/IsolatedHelper.html","","",null,0],["Sprockets::Helpers::RailsHelper","","Ruby/classes/Sprockets/Helpers/RailsHelper.html","","",null,0],["Sprockets::Helpers::RailsHelper::AssetPaths","","Ruby/classes/Sprockets/Helpers/RailsHelper/AssetPaths.html","","",null,0],["Sprockets::Helpers::RailsHelper::AssetPaths::AssetNotPrecompiledError","","Ruby/classes/Sprockets/Helpers/RailsHelper/AssetPaths/AssetNotPrecompiledError.html","","",null,0],["Sprockets::Railtie","","Ruby/classes/Sprockets/Railtie.html","","<p>TODO: Get rid of config.assets.enabled\n",null,0],["Sprockets::StaticCompiler","","Ruby/classes/Sprockets/StaticCompiler.html","","",null,0],["SshDirPublisher","","Rails/classes/SshDirPublisher.html","","<p>Publish an entire directory to an existing remote directory using SSH.\n",null,1],["SshFilePublisher","","Rails/classes/SshFilePublisher.html","","<p>Publish a list of files to an existing remote directory.\n",null,1],["SshFreshDirPublisher","","Rails/classes/SshFreshDirPublisher.html","","<p>Publish an entire directory to a fresh remote directory using SSH.\n",null,1],["StandardError","","Rails/classes/StandardError.html","","<p>The most standard error types are subclasses of StandardError. A rescue\nclause without an explicit Exception ...\n",null,1],["StopIteration","","Rails/classes/StopIteration.html","","<p>Raised to stop the iteration, in particular by Enumerator#next. It is\nrescued by Kernel#loop.\n\n<pre>loop do ...</pre>\n",null,1],["String","","Ruby/classes/String.html","","<p>String inflections define new methods on the String class to transform\nnames for different purposes. …\n",null,0],["String","","Rails/classes/String.html","","<p>A <code>String</code> object holds and manipulates an arbitrary sequence of\nbytes, typically representing characters. …\n",null,1],["String","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-String","(mes)","",null,1],["String","Kernel","Rails/classes/Kernel.html#method-i-String","(p1)","<p>Converts <em>arg</em> to a <code>String</code> by calling its\n<code>to_s</code> method.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">String</span>(<span class=\"ruby-keyword\">self</span>)        <span class=\"ruby-comment\">#=&gt; &quot;main&quot;</span>\n<span class=\"ruby-constant\">String</span>(<span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">class</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["StringIO","","Rails/classes/StringIO.html","","<p>Pseudo I/O on String object.\n",null,1],["StringScanner","","Rails/classes/StringScanner.html","","<p>StringScanner provides for lexical scanning operations on a String.  Here\nis an example of its usage: ...\n",null,1],["StringScanner::Error","","Rails/classes/StringScanner/Error.html","","",null,1],["Struct","","Rails/classes/Struct.html","","<p>A <code>Struct</code> is a convenient way to bundle a number of attributes\ntogether, using accessor methods, without …\n",null,1],["Symbol","","Ruby/classes/Symbol.html","","",null,0],["Symbol","","Rails/classes/Symbol.html","","<p><code>Symbol</code> objects represent names and some strings inside the\nRuby interpreter. They are generated using ...\n",null,1],["Sync","","Rails/classes/Sync.html","","<p>A class that providesa two-phase lock with a counter.  See Sync_m for\ndetails.\n",null,1],["Sync_m","","Rails/classes/Sync_m.html","","<p>A module that provides a two-phase lock with a counter.\n",null,1],["Sync_m::Err","","Rails/classes/Sync_m/Err.html","","<p>exceptions\n",null,1],["Sync_m::Err::LockModeFailer","","Rails/classes/Sync_m/Err/LockModeFailer.html","","",null,1],["Sync_m::Err::UnknownLocker","","Rails/classes/Sync_m/Err/UnknownLocker.html","","",null,1],["SyntaxError","","Rails/classes/SyntaxError.html","","<p>Raised when encountering Ruby code with an invalid syntax.\n\n<pre>eval(&quot;1+1=2&quot;)</pre>\n<p><em>raises the exception:</em>\n",null,1],["Sys","","Rails/classes/Sys.html","","<p>Sys provides a number of file manipulation tools for the convenience of\nwriting Rakefiles.  All commands …\n",null,1],["Syslog","","Rails/classes/Syslog.html","","<p>The syslog package provides a Ruby interface to the POSIX system logging\nfacility.\n<p>Syslog messages are …\n",null,1],["Syslog::Constants","","Rails/classes/Syslog/Constants.html","","<p>Module holding Syslog constants.  See Syslog::log and Syslog::open for\nconstant descriptions.\n",null,1],["SystemCallError","","Rails/classes/SystemCallError.html","","<p>SystemCallError is the base class for all low-level platform-dependent\nerrors.\n<p>The errors available on ...\n",null,1],["SystemExit","","Rails/classes/SystemExit.html","","<p>Raised by <code>exit</code> to initiate the termination of the script.\n",null,1],["SystemStackError","","Rails/classes/SystemStackError.html","","<p>Raised in case of a stack overflow.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">me_myself_and_i</span>\n  <span class=\"ruby-identifier\">me_myself_and_i</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-identifier\">me_myself_and_i</span>\n</pre>\n<p><em>raises the</em> ...\n",null,1],["TABSIZE","Curses","Rails/classes/Curses.html#method-c-TABSIZE","()","<p>Returns the number of positions in a tab.\n",null,1],["TABSIZE=","Curses","Rails/classes/Curses.html#method-c-TABSIZE-3D","(p1)","<p>Sets the TABSIZE to Integer <code>value</code>\n",null,1],["TCPServer","","Rails/classes/TCPServer.html","","<p>TCPServer represents a TCP/IP server socket.\n<p>A simple TCP server may look like:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'socket'</span>\n\n<span class=\"ruby-identifier\">server</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["TCPSocket","","Rails/classes/TCPSocket.html","","<p>TCPSocket represents a TCP/IP client socket.\n<p>A simple client may look like:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'socket'</span>\n\n<span class=\"ruby-identifier\">s</span> = <span class=\"ruby-constant\">TCPSocket</span>.<span class=\"ruby-identifier\">new</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["TSort","","Rails/classes/TSort.html","","<p>TSort implements topological sorting using Tarjan’s algorithm for strongly\nconnected components.\n<p>TSort …\n",null,1],["TSort::Cyclic","","Rails/classes/TSort/Cyclic.html","","",null,1],["Tag","","Ruby/classes/Tag.html","","",null,0],["Tempfile","","Rails/classes/Tempfile.html","","<p>A utility class for managing temporary files. When you create a Tempfile\nobject, it will create a temporary …\n",null,1],["Tempfile::Remover","","Rails/classes/Tempfile/Remover.html","","",null,1],["Thread","","Rails/classes/Thread.html","","<p>::VM\n<p>re-define Thread#initialize bug #2618(ruby-core:27634)\n",null,1],["ThreadError","","Rails/classes/ThreadError.html","","<p>Raised when an invalid operation is attempted on a thread.\n<p>For example, when no other thread has been ...\n",null,1],["ThreadGroup","","Rails/classes/ThreadGroup.html","","<p><code>ThreadGroup</code> provides a means of keeping track of a number of\nthreads as a group. A <code>Thread</code> can belong ...\n",null,1],["ThreadsWait","","Rails/classes/ThreadsWait.html","","<p>This class watches for termination of multiple threads.  Basic\nfunctionality (wait until specified threads …\n",null,1],["Time","","Ruby/classes/Time.html","","",null,0],["Time","","Rails/classes/Time.html","","<p><code>Time</code> is an abstraction of dates and times. Time is stored\ninternally as the number of seconds with fraction ...\n",null,1],["Timeout","","Rails/classes/Timeout.html","","<p>Timeout long-running blocks\n<p>Synopsis\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'timeout'</span>\n<span class=\"ruby-identifier\">status</span> = <span class=\"ruby-constant\">Timeout</span><span class=\"ruby-operator\">::</span><span class=\"ruby-identifier\">timeout</span>(<span class=\"ruby-value\">5</span>) {\n  <span class=\"ruby-comment\"># Something that ...</span>\n</pre>\n",null,1],["Timeout::Error","","Rails/classes/Timeout/Error.html","","<p>Raised by Timeout#timeout when the block times out.\n",null,1],["Token","RubyToken","Rails/classes/RubyToken.html#method-i-Token","(token, value = nil)","",null,1],["Tracer","","Rails/classes/Tracer.html","","<p>tracer main class\n",null,1],["TrueClass","","Ruby/classes/TrueClass.html","","",null,0],["TrueClass","","Rails/classes/TrueClass.html","","<p>The global value <code>true</code> is the only instance of class\n<code>TrueClass</code> and represents a logically true value in ...\n",null,1],["TypeError","","Rails/classes/TypeError.html","","<p>Raised when encountering an object that is not of the expected type.\n\n<pre>[1, 2, 3].first(&quot;two&quot;)</pre>\n<p><em>raises the</em> ...\n",null,1],["UDPSocket","","Rails/classes/UDPSocket.html","","<p>UDPSocket represents a UDP/IP socket.\n",null,1],["UNIXServer","","Rails/classes/UNIXServer.html","","<p>UNIXServer represents a UNIX domain stream server socket.\n",null,1],["UNIXSocket","","Rails/classes/UNIXSocket.html","","<p>UNIXSocket represents a UNIX domain stream client socket.\n",null,1],["URI","","Ruby/classes/URI.html","","",null,0],["URI","","Rails/classes/URI.html","","<p>URI is a module providing classes to handle Uniform Resource Identifiers\n(RFC2396)\n<p>Features\n<p>Uniform handling …\n",null,1],["URI","Kernel","Rails/classes/Kernel.html#method-c-URI","(uri)","<p>Returns <code>uri</code> converted to a URI object.\n",null,1],["URI::BadURIError","","Rails/classes/URI/BadURIError.html","","<p>URI is valid, bad usage is not.\n",null,1],["URI::Error","","Rails/classes/URI/Error.html","","<p>Base class for all URI exceptions.\n",null,1],["URI::Escape","","Rails/classes/URI/Escape.html","","<p>module for escaping unsafe characters with codes.\n",null,1],["URI::FTP","","Rails/classes/URI/FTP.html","","<p>FTP URI syntax is defined by RFC1738 section 3.2.\n<p>This class will be redesigned because of difference …\n",null,1],["URI::Generic","","Rails/classes/URI/Generic.html","","<p>Base class for all URI classes. Implements generic URI syntax as per RFC\n2396.\n",null,1],["URI::HTTP","","Rails/classes/URI/HTTP.html","","<p>The syntax of HTTP URIs is defined in RFC1738 section 3.3.\n<p>Note that the Ruby URI library allows HTTP …\n",null,1],["URI::HTTPS","","Rails/classes/URI/HTTPS.html","","<p>The default port for HTTPS URIs is 443, and the scheme is ‘https:’ rather\nthan ‘http:’. Other than that, …\n",null,1],["URI::InvalidComponentError","","Rails/classes/URI/InvalidComponentError.html","","<p>Not a URI component.\n",null,1],["URI::InvalidURIError","","Rails/classes/URI/InvalidURIError.html","","<p>Not a URI.\n",null,1],["URI::LDAP","","Rails/classes/URI/LDAP.html","","<p>LDAP URI SCHEMA (described in RFC2255)\nldap://<host>/<dn>[?<attrs>[?<scope>[?<filter>]]]\n",null,1],["URI::LDAPS","","Rails/classes/URI/LDAPS.html","","<p>The default port for LDAPS URIs is 636, and the scheme is ‘ldaps:’ rather\nthan ‘ldap:’. Other than that, …\n",null,1],["URI::MailTo","","Rails/classes/URI/MailTo.html","","<p>RFC2368, The mailto URL scheme\n",null,1],["URI::Parser","","Rails/classes/URI/Parser.html","","<p>class that Parses String’s into URI’s\n<p>It contains a Hash set of patterns and Regexp’s that match and validate. …\n",null,1],["URI::REGEXP","","Rails/classes/URI/REGEXP.html","","<p>Includes URI::REGEXP::PATTERN\n",null,1],["URI::REGEXP::PATTERN","","Rails/classes/URI/REGEXP/PATTERN.html","","<p>Patterns used to parse URI’s\n",null,1],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/assets/USAGE.html","","<p>Description:\n\n<pre>Stubs out new asset placeholders. Pass the asset name, either CamelCased\nor under_scored. ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/controller/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new controller and its views. Pass the controller name, either\nCamelCased or ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/generator/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new generator at lib/generators. Pass the generator name as an argument,\neither ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/app/USAGE.html","","<p>Description:\n\n<pre>The 'rails new' command creates a new Rails application with a default\ndirectory structure ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/helper/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new helper. Pass the helper name, either CamelCased\nor under_scored.\n\nTo create ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/migration/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new database migration. Pass the migration name, either\nCamelCased or under_scored, ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/model/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new model. Pass the model name, either CamelCased or\nunder_scored, and an optional ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/observer/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new observer. Pass the observer name, either CamelCased or\nunder_scored, as an ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/plugin_new/USAGE.html","","<p>Description:\n\n<pre>The 'rails plugin new' command creates a skeleton for developing any\nkind of Rails extension ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/resource/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new resource including an empty model and controller suitable\nfor a restful, ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/scaffold/USAGE.html","","<p>Description:\n\n<pre>Scaffolds an entire resource, from model and migration to controller and\nviews, along with ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/actionmailer/lib/rails/generators/mailer/USAGE.html","","<p>Description:\n<p>\n\n<pre>Stubs out a new mailer and its views. Pass the mailer name, either\nCamelCased or under_scored, ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/scaffold_controller/USAGE.html","","<p>Description:\n\n<pre>Stubs out a scaffolded controller, its seven RESTful actions and related\nviews. Pass the ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/task/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new Rake task. Pass the namespace name, and a list of tasks as arguments.\n\nThis ...</pre>\n",null,0],["USAGE","","Ruby/files/rails/railties/lib/rails/generators/rails/session_migration/USAGE.html","","<p>Description:\n\n<pre>Creates a migration to add the sessions table used by the ORM session store.\nPass the migration ...</pre>\n",null,0],["UnboundMethod","","Rails/classes/UnboundMethod.html","","<p>Ruby supports two forms of objectified methods. Class <code>Method</code>\nis used to represent methods that are associated ...\n",null,1],["Vector","","Rails/classes/Vector.html","","<p>The <code>Vector</code> class represents a mathematical vector, which is\nuseful in its own right, and also constitutes …\n",null,1],["Vector::ZeroVectorError","","Rails/classes/Vector/ZeroVectorError.html","","",null,1],["WEBrick","","Rails/classes/WEBrick.html","","<p>WEB server toolkit.\n<p>WEBrick is an HTTP server toolkit that can be configured as an HTTPS\nserver, a proxy …\n",null,1],["WEBrick::AccessLog","","Rails/classes/WEBrick/AccessLog.html","","<p>AccessLog provides logging to various files in various formats.\n<p>Multiple logs may be written to at the …\n",null,1],["WEBrick::AccessLog::AccessLogError","","Rails/classes/WEBrick/AccessLog/AccessLogError.html","","<p>Raised if a parameter such as %e, %i, %o or %n is used without fetching a\nspecific field.\n",null,1],["WEBrick::BasicLog","","Rails/classes/WEBrick/BasicLog.html","","<p>A generic logging class\n",null,1],["WEBrick::CGI","","Rails/classes/WEBrick/CGI.html","","",null,1],["WEBrick::CGI::Socket","","Rails/classes/WEBrick/CGI/Socket.html","","",null,1],["WEBrick::Config","","Rails/classes/WEBrick/Config.html","","",null,1],["WEBrick::Cookie","","Rails/classes/WEBrick/Cookie.html","","",null,1],["WEBrick::Daemon","","Rails/classes/WEBrick/Daemon.html","","<p>A generic module for daemonizing a process\n",null,1],["WEBrick::FakeProxyURI","","Rails/classes/WEBrick/FakeProxyURI.html","","",null,1],["WEBrick::GenericServer","","Rails/classes/WEBrick/GenericServer.html","","",null,1],["WEBrick::HTMLUtils","","Rails/classes/WEBrick/HTMLUtils.html","","",null,1],["WEBrick::HTTPAuth","","Rails/classes/WEBrick/HTTPAuth.html","","<p>HTTPAuth provides both basic and digest authentication.\n<p>To enable authentication for requests in WEBrick …\n",null,1],["WEBrick::HTTPAuth::Authenticator","","Rails/classes/WEBrick/HTTPAuth/Authenticator.html","","<p>Module providing generic support for both Digest and Basic authentication\nschemes.\n",null,1],["WEBrick::HTTPAuth::BasicAuth","","Rails/classes/WEBrick/HTTPAuth/BasicAuth.html","","<p>Basic Authentication for WEBrick\n<p>Use this class to add basic authentication to a WEBrick servlet.\n<p>Here …\n",null,1],["WEBrick::HTTPAuth::DigestAuth","","Rails/classes/WEBrick/HTTPAuth/DigestAuth.html","","<p>RFC 2617 Digest Access Authentication for WEBrick\n<p>Use this class to add digest authentication to a WEBrick …\n",null,1],["WEBrick::HTTPAuth::Htdigest","","Rails/classes/WEBrick/HTTPAuth/Htdigest.html","","<p>Htdigest accesses apache-compatible digest password files.  Passwords are\nmatched to a realm where they …\n",null,1],["WEBrick::HTTPAuth::Htgroup","","Rails/classes/WEBrick/HTTPAuth/Htgroup.html","","<p>Htgroup accesses apache-compatible group files.  Htgroup can be used to\nprovide group-based authentication …\n",null,1],["WEBrick::HTTPAuth::Htpasswd","","Rails/classes/WEBrick/HTTPAuth/Htpasswd.html","","<p>Htpasswd accesses apache-compatible password files.  Passwords are matched\nto a realm where they are …\n",null,1],["WEBrick::HTTPAuth::ProxyAuthenticator","","Rails/classes/WEBrick/HTTPAuth/ProxyAuthenticator.html","","<p>Module providing generic support for both Digest and Basic authentication\nschemes for proxies.\n",null,1],["WEBrick::HTTPAuth::ProxyBasicAuth","","Rails/classes/WEBrick/HTTPAuth/ProxyBasicAuth.html","","<p>Basic authentication for proxy servers.  See BasicAuth for details.\n",null,1],["WEBrick::HTTPAuth::ProxyDigestAuth","","Rails/classes/WEBrick/HTTPAuth/ProxyDigestAuth.html","","<p>Digest authentication for proxy servers.  See DigestAuth for details.\n",null,1],["WEBrick::HTTPAuth::UserDB","","Rails/classes/WEBrick/HTTPAuth/UserDB.html","","<p>User database mixin for HTTPAuth.  This mixin dispatches user record access\nto the underlying auth_type …\n",null,1],["WEBrick::HTTPProxyServer","","Rails/classes/WEBrick/HTTPProxyServer.html","","<p>An HTTP Proxy server which proxies GET, HEAD and POST requests.\n",null,1],["WEBrick::HTTPRequest","","Rails/classes/WEBrick/HTTPRequest.html","","<p>An HTTP request.\n",null,1],["WEBrick::HTTPResponse","","Rails/classes/WEBrick/HTTPResponse.html","","<p>An HTTP response.\n",null,1],["WEBrick::HTTPServer","","Rails/classes/WEBrick/HTTPServer.html","","<p>An HTTP Server\n",null,1],["WEBrick::HTTPServer::MountTable","","Rails/classes/WEBrick/HTTPServer/MountTable.html","","",null,1],["WEBrick::HTTPServerError","","Rails/classes/WEBrick/HTTPServerError.html","","",null,1],["WEBrick::HTTPServlet","","Rails/classes/WEBrick/HTTPServlet.html","","",null,1],["WEBrick::HTTPServlet::AbstractServlet","","Rails/classes/WEBrick/HTTPServlet/AbstractServlet.html","","<p>AbstractServlet allows HTTP server modules to be reused across multiple\nservers and allows encapsulation …\n",null,1],["WEBrick::HTTPServlet::CGIHandler","","Rails/classes/WEBrick/HTTPServlet/CGIHandler.html","","",null,1],["WEBrick::HTTPServlet::DefaultFileHandler","","Rails/classes/WEBrick/HTTPServlet/DefaultFileHandler.html","","",null,1],["WEBrick::HTTPServlet::ERBHandler","","Rails/classes/WEBrick/HTTPServlet/ERBHandler.html","","<p>ERBHandler evaluates an ERB file and returns the result.  This handler is\nautomatically used if there …\n",null,1],["WEBrick::HTTPServlet::FileHandler","","Rails/classes/WEBrick/HTTPServlet/FileHandler.html","","<p>Serves files from a directory\n",null,1],["WEBrick::HTTPServlet::HTTPServletError","","Rails/classes/WEBrick/HTTPServlet/HTTPServletError.html","","",null,1],["WEBrick::HTTPServlet::ProcHandler","","Rails/classes/WEBrick/HTTPServlet/ProcHandler.html","","",null,1],["WEBrick::HTTPStatus","","Rails/classes/WEBrick/HTTPStatus.html","","<p>This module is used to manager HTTP status codes.\n<p>See www.w3.org/Protocols/rfc2616/rfc2616-sec10.html …\n",null,1],["WEBrick::HTTPStatus::ClientError","","Rails/classes/WEBrick/HTTPStatus/ClientError.html","","<p>Root of the HTTP client error statuses\n",null,1],["WEBrick::HTTPStatus::EOFError","","Rails/classes/WEBrick/HTTPStatus/EOFError.html","","",null,1],["WEBrick::HTTPStatus::Error","","Rails/classes/WEBrick/HTTPStatus/Error.html","","<p>Root of the HTTP error statuses\n",null,1],["WEBrick::HTTPStatus::Info","","Rails/classes/WEBrick/HTTPStatus/Info.html","","<p>Root of the HTTP info statuses\n",null,1],["WEBrick::HTTPStatus::Redirect","","Rails/classes/WEBrick/HTTPStatus/Redirect.html","","<p>Root of the HTTP redirect statuses\n",null,1],["WEBrick::HTTPStatus::ServerError","","Rails/classes/WEBrick/HTTPStatus/ServerError.html","","<p>Root of the HTTP server error statuses\n",null,1],["WEBrick::HTTPStatus::Status","","Rails/classes/WEBrick/HTTPStatus/Status.html","","<p>Root of the HTTP status class hierarchy\n",null,1],["WEBrick::HTTPStatus::Success","","Rails/classes/WEBrick/HTTPStatus/Success.html","","<p>Root of the HTTP sucess statuses\n",null,1],["WEBrick::HTTPUtils","","Rails/classes/WEBrick/HTTPUtils.html","","",null,1],["WEBrick::HTTPUtils::FormData","","Rails/classes/WEBrick/HTTPUtils/FormData.html","","",null,1],["WEBrick::HTTPVersion","","Rails/classes/WEBrick/HTTPVersion.html","","",null,1],["WEBrick::Log","","Rails/classes/WEBrick/Log.html","","<p>A logging class that prepends a timestamp to each message.\n",null,1],["WEBrick::NullReader","","Rails/classes/WEBrick/NullReader.html","","",null,1],["WEBrick::ServerError","","Rails/classes/WEBrick/ServerError.html","","",null,1],["WEBrick::SimpleServer","","Rails/classes/WEBrick/SimpleServer.html","","",null,1],["WEBrick::Utils","","Rails/classes/WEBrick/Utils.html","","",null,1],["WEBrick::Utils::TimeoutHandler","","Rails/classes/WEBrick/Utils/TimeoutHandler.html","","<p>Class used to manage timeout handlers across multiple threads.\n<p>Timeout handlers should be managed by using …\n",null,1],["WIN32OLE","","Rails/classes/WIN32OLE.html","","\n<pre>&lt;code&gt;WIN32OLE&lt;/code&gt; objects represent OLE Automation object in Ruby.\n\nBy using WIN32OLE, you can access ...</pre>\n",null,1],["WIN32OLE::VARIANT","","Rails/classes/WIN32OLE/VARIANT.html","","",null,1],["WIN32OLERuntimeError","","Rails/classes/WIN32OLERuntimeError.html","","",null,1],["WIN32OLE_EVENT","","Rails/classes/WIN32OLE_EVENT.html","","<p><code>WIN32OLE_EVENT</code> objects controls OLE event.\n",null,1],["WIN32OLE_METHOD","","Rails/classes/WIN32OLE_METHOD.html","","<p><code>WIN32OLE_METHOD</code> objects represent OLE method information.\n",null,1],["WIN32OLE_PARAM","","Rails/classes/WIN32OLE_PARAM.html","","<p><code>WIN32OLE_PARAM</code> objects represent param information of the OLE\nmethod.\n",null,1],["WIN32OLE_TYPE","","Rails/classes/WIN32OLE_TYPE.html","","<p><code>WIN32OLE_TYPE</code> objects represent OLE type libarary information.\n",null,1],["WIN32OLE_TYPELIB","","Rails/classes/WIN32OLE_TYPELIB.html","","<p><code>WIN32OLE_TYPELIB</code> objects represent OLE tyblib information.\n",null,1],["WIN32OLE_VARIABLE","","Rails/classes/WIN32OLE_VARIABLE.html","","<p><code>WIN32OLE_VARIABLE</code> objects represent OLE variable information.\n",null,1],["WIN32OLE_VARIANT","","Rails/classes/WIN32OLE_VARIANT.html","","",null,1],["WeakRef","","Rails/classes/WeakRef.html","","<p>Weak Reference class that allows a referenced object to be\ngarbage-collected.  A WeakRef may be used …\n",null,1],["WeakRef::RefError","","Rails/classes/WeakRef/RefError.html","","<p>RefError is raised when a referenced object has been recycled by the\ngarbage collector\n",null,1],["Win32","","Rails/classes/Win32.html","","<p>Implements bindings to Win32 SSPI functions, focused on authentication to a\nproxy server over HTTP.\n",null,1],["Win32::Registry","","Rails/classes/Win32/Registry.html","","<p>Win32 Registry\n<p>win32/registry is registry accessor library for Win32 platform. It uses\ndl/import to call …\n",null,1],["Win32::Registry::API","","Rails/classes/Win32/Registry/API.html","","<p>Win32 APIs\n",null,1],["Win32::Registry::Constants","","Rails/classes/Win32/Registry/Constants.html","","<p>For detail, see the MSDN.\n<p>— HKEY_*\n\n<pre>Predefined key ((*handle*)).\nThese are Integer, not Win32::Registry.</pre>\n",null,1],["Win32::Registry::Error","","Rails/classes/Win32/Registry/Error.html","","<p>Error\n",null,1],["Win32::Registry::Error::Kernel32","","Rails/classes/Win32/Registry/Error/Kernel32.html","","",null,1],["Win32::Registry::PredefinedKey","","Rails/classes/Win32/Registry/PredefinedKey.html","","<p>Predefined Keys\n",null,1],["Win32::Resolv","","Rails/classes/Win32/Resolv.html","","",null,1],["Win32::Resolv::Kernel32","","Rails/classes/Win32/Resolv/Kernel32.html","","",null,1],["Win32::SSPI","","Rails/classes/Win32/SSPI.html","","",null,1],["Win32::SSPI::API","","Rails/classes/Win32/SSPI/API.html","","<p>Win32 API Functions. Uses Win32API to bind methods to constants contained\nin class.\n",null,1],["Win32::SSPI::Identity","","Rails/classes/Win32/SSPI/Identity.html","","<p>SEC_WINNT_AUTH_IDENTITY structure\n",null,1],["Win32::SSPI::NegotiateAuth","","Rails/classes/Win32/SSPI/NegotiateAuth.html","","<p>Handles “Negotiate” type authentication. Geared towards authenticating with\na proxy server …\n",null,1],["Win32::SSPI::SSPIResult","","Rails/classes/Win32/SSPI/SSPIResult.html","","<p>Takes a return result from an SSPI function and interprets the value.\n",null,1],["Win32::SSPI::SecurityBuffer","","Rails/classes/Win32/SSPI/SecurityBuffer.html","","<p>Creates binary representaiton of a SecBufferDesc structure, including the\nSecBuffer contained inside. …\n",null,1],["Win32::SSPI::SecurityHandle","","Rails/classes/Win32/SSPI/SecurityHandle.html","","<p>SecHandle struct\n",null,1],["Win32::SSPI::TimeStamp","","Rails/classes/Win32/SSPI/TimeStamp.html","","<p>TimeStamp struct\n",null,1],["Win32API","","Rails/classes/Win32API.html","","",null,1],["XML","","Rails/classes/XML.html","","",null,1],["XML::Parser","","Rails/classes/XML/Parser.html","","",null,1],["XMLEncoding_ja","","Rails/classes/XMLEncoding_ja.html","","",null,1],["XMLEncoding_ja::SJISHandler","","Rails/classes/XMLEncoding_ja/SJISHandler.html","","",null,1],["XMLRPC","","Rails/classes/XMLRPC.html","","<p>xmlrpc/base64.rb\n<p>Copyright (C) 2001, 2002, 2003 by Michael Neumann (mneumann@ntecs.de)\n<p>Released under the …\n",null,1],["XMLRPC::Base64","","Rails/classes/XMLRPC/Base64.html","","",null,1],["XMLRPC::BasicServer","","Rails/classes/XMLRPC/BasicServer.html","","",null,1],["XMLRPC::CGIServer","","Rails/classes/XMLRPC/CGIServer.html","","<p>XMLRPC::CGIServer\n<p>Synopsis\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&quot;xmlrpc/server&quot;</span>\n\n<span class=\"ruby-identifier\">s</span> = <span class=\"ruby-constant\">XMLRPC</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">CGIServer</span>.<span class=\"ruby-identifier\">new</span>\n\n<span class=\"ruby-identifier\">s</span>.<span class=\"ruby-identifier\">add_handler</span>(<span class=\"ruby-string\">&quot;michael.add&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["XMLRPC::Client","","Rails/classes/XMLRPC/Client.html","","",null,1],["XMLRPC::Client::Proxy","","Rails/classes/XMLRPC/Client/Proxy.html","","",null,1],["XMLRPC::Config","","Rails/classes/XMLRPC/Config.html","","",null,1],["XMLRPC::Convert","","Rails/classes/XMLRPC/Convert.html","","",null,1],["XMLRPC::Create","","Rails/classes/XMLRPC/Create.html","","",null,1],["XMLRPC::DateTime","","Rails/classes/XMLRPC/DateTime.html","","",null,1],["XMLRPC::FaultException","","Rails/classes/XMLRPC/FaultException.html","","",null,1],["XMLRPC::Marshal","","Rails/classes/XMLRPC/Marshal.html","","",null,1],["XMLRPC::Marshallable","","Rails/classes/XMLRPC/Marshallable.html","","<p>This module enables a user-class to be marshalled by XML-RPC for Ruby into\na Hash, with one additional …\n",null,1],["XMLRPC::ModRubyServer","","Rails/classes/XMLRPC/ModRubyServer.html","","<p>XMLRPC::ModRubyServer\n<p>Description\n<p>Implements a XML-RPC server, which works with Apache mod_ruby.\n",null,1],["XMLRPC::ParseContentType","","Rails/classes/XMLRPC/ParseContentType.html","","",null,1],["XMLRPC::ParserWriterChooseMixin","","Rails/classes/XMLRPC/ParserWriterChooseMixin.html","","",null,1],["XMLRPC::Server","","Rails/classes/XMLRPC/Server.html","","",null,1],["XMLRPC::Service","","Rails/classes/XMLRPC/Service.html","","",null,1],["XMLRPC::Service::BasicInterface","","Rails/classes/XMLRPC/Service/BasicInterface.html","","<p>base class for Service Interface definitions, used by\nBasicServer#add_handler\n",null,1],["XMLRPC::Service::Interface","","Rails/classes/XMLRPC/Service/Interface.html","","<p>class which wraps a Service Interface definition, used by\nBasicServer#add_handler\n",null,1],["XMLRPC::Service::PublicInstanceMethodsInterface","","Rails/classes/XMLRPC/Service/PublicInstanceMethodsInterface.html","","",null,1],["XMLRPC::WEBrickServlet","","Rails/classes/XMLRPC/WEBrickServlet.html","","<p>XMLRPC::Server\n<p>Synopsis\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&quot;xmlrpc/server&quot;</span>\n\n<span class=\"ruby-identifier\">s</span> = <span class=\"ruby-constant\">XMLRPC</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Server</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">8080</span>)\n\n<span class=\"ruby-identifier\">s</span>.<span class=\"ruby-identifier\">add_handler</span>(<span class=\"ruby-string\">&quot;michael.add&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["XMLRPC::XMLParser","","Rails/classes/XMLRPC/XMLParser.html","","",null,1],["XMLRPC::XMLParser::AbstractStreamParser","","Rails/classes/XMLRPC/XMLParser/AbstractStreamParser.html","","",null,1],["XMLRPC::XMLParser::AbstractTreeParser","","Rails/classes/XMLRPC/XMLParser/AbstractTreeParser.html","","",null,1],["XMLRPC::XMLParser::NQXMLParser","","Rails/classes/XMLRPC/XMLParser/NQXMLTreeParser.html","","",null,1],["XMLRPC::XMLParser::NQXMLStreamParser","","Rails/classes/XMLRPC/XMLParser/NQXMLStreamParser.html","","",null,1],["XMLRPC::XMLParser::NQXMLStreamParser::XMLRPCParser","","Rails/classes/XMLRPC/XMLParser/NQXMLStreamParser/XMLRPCParser.html","","",null,1],["XMLRPC::XMLParser::NQXMLTreeParser","","Rails/classes/XMLRPC/XMLParser/NQXMLTreeParser.html","","",null,1],["XMLRPC::XMLParser::REXMLStreamParser","","Rails/classes/XMLRPC/XMLParser/REXMLStreamParser.html","","",null,1],["XMLRPC::XMLParser::REXMLStreamParser::StreamListener","","Rails/classes/XMLRPC/XMLParser/REXMLStreamParser/StreamListener.html","","",null,1],["XMLRPC::XMLParser::StreamParserMixin","","Rails/classes/XMLRPC/XMLParser/StreamParserMixin.html","","",null,1],["XMLRPC::XMLParser::XMLParser","","Rails/classes/XMLRPC/XMLParser/XMLTreeParser.html","","",null,1],["XMLRPC::XMLParser::XMLScanStreamParser","","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser.html","","",null,1],["XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html","","",null,1],["XMLRPC::XMLParser::XMLStreamParser","","Rails/classes/XMLRPC/XMLParser/XMLStreamParser.html","","",null,1],["XMLRPC::XMLParser::XMLTreeParser","","Rails/classes/XMLRPC/XMLParser/XMLTreeParser.html","","",null,1],["XMLRPC::XMLWriter","","Rails/classes/XMLRPC/XMLWriter.html","","",null,1],["XMLRPC::XMLWriter::Abstract","","Rails/classes/XMLRPC/XMLWriter/Abstract.html","","",null,1],["XMLRPC::XMLWriter::Simple","","Rails/classes/XMLRPC/XMLWriter/Simple.html","","",null,1],["XMLRPC::XMLWriter::XMLParser","","Rails/classes/XMLRPC/XMLWriter/XMLParser.html","","",null,1],["XMP","","Rails/classes/XMP.html","","",null,1],["XMP::StringInputMethod","","Rails/classes/XMP/StringInputMethod.html","","",null,1],["YAML","","Rails/classes/YAML.html","","<p>YAML Ain’t Markup Language\n<p>This module provides a Ruby interface for data serialization in YAML\nformat. …\n",null,1],["YAML::DBM","","Rails/classes/YAML/DBM.html","","<p>YAML + DBM = YDBM\n<p>YAML::DBM provides the same interface as ::DBM.\n<p>However, while DBM only allows strings …\n",null,1],["YAML::Store","","Rails/classes/YAML/Store.html","","<p>YAML::Store provides the same functionality as PStore, except it uses YAML\nto dump objects instead of …\n",null,1],["YAML::Syck","","Rails/classes/YAML/Syck.html","","",null,1],["YAML::Syck::DefaultKey","","Rails/classes/YAML/Syck/DefaultKey.html","","",null,1],["ZeroDivisionError","","Rails/classes/ZeroDivisionError.html","","<p>Raised when attempting to divide an integer by 0.\n\n<pre>42 / 0</pre>\n<p><em>raises the exception:</em>\n",null,1],["Zlib","","Rails/classes/Zlib.html","","<p>Overview\n<p>Access to the zlib library.\n<p>Class tree\n",null,1],["Zlib::BufError","","Rails/classes/Zlib/BufError.html","","<p>Subclass of Zlib::Error when zlib returns a Z_BUF_ERROR.\n<p>Usually if no progress is possible.\n",null,1],["Zlib::DataError","","Rails/classes/Zlib/DataError.html","","<p>Subclass of Zlib::Error when zlib returns a Z_DATA_ERROR.\n<p>Usually if a stream was prematurely freed.\n",null,1],["Zlib::Deflate","","Rails/classes/Zlib/Deflate.html","","<p>Zlib::Deflate is the class for compressing data.  See Zlib::ZStream for\nmore information.\n",null,1],["Zlib::Error","","Rails/classes/Zlib/Error.html","","<p>The superclass for all exceptions raised by Ruby/zlib.\n<p>The following exceptions are defined as subclasses ...\n",null,1],["Zlib::GzipFile","","Rails/classes/Zlib/GzipFile.html","","<p>Zlib::GzipFile is an abstract class for handling a gzip formatted\ncompressed file. The operations are ...\n",null,1],["Zlib::GzipFile::CRCError","","Rails/classes/Zlib/GzipFile/CRCError.html","","<p>Raised when the CRC checksum recorded in gzip file footer is not equivalent\nto the CRC checksum of the ...\n",null,1],["Zlib::GzipFile::Error","","Rails/classes/Zlib/GzipFile/Error.html","","<p>Base class of errors that occur when processing GZIP files.\n",null,1],["Zlib::GzipFile::LengthError","","Rails/classes/Zlib/GzipFile/LengthError.html","","<p>Raised when the data length recorded in the gzip file footer is not\nequivalent to the length of the actual ...\n",null,1],["Zlib::GzipFile::NoFooter","","Rails/classes/Zlib/GzipFile/NoFooter.html","","<p>Raised when gzip file footer is not found.\n",null,1],["Zlib::GzipReader","","Rails/classes/Zlib/GzipReader.html","","<p>Zlib::GzipReader is the class for reading a gzipped file.  GzipReader\nshould be used an IO, or -IO-lie, ...\n",null,1],["Zlib::GzipWriter","","Rails/classes/Zlib/GzipWriter.html","","<p>Zlib::GzipWriter is a class for writing gzipped files.  GzipWriter should\nbe used with an instance of ...\n",null,1],["Zlib::Inflate","","Rails/classes/Zlib/Inflate.html","","<p>Zlib:Inflate is the class for decompressing compressed data.  Unlike\nZlib::Deflate, an instance of this ...\n",null,1],["Zlib::MemError","","Rails/classes/Zlib/MemError.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_MEM_ERROR, usually if there was not enough memory.\n",null,1],["Zlib::NeedDict","","Rails/classes/Zlib/NeedDict.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_NEED_DICT if a preset dictionary is needed at this\npoint. ...\n",null,1],["Zlib::StreamEnd","","Rails/classes/Zlib/StreamEnd.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_STREAM_END is return if the end of the compressed\ndata has ...\n",null,1],["Zlib::StreamError","","Rails/classes/Zlib/StreamError.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_STREAM_ERROR, usually if the stream state was\ninconsistent. ...\n",null,1],["Zlib::VersionError","","Rails/classes/Zlib/VersionError.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_VERSION_ERROR, usually if the zlib library version is\nincompatible ...\n",null,1],["Zlib::ZStream","","Rails/classes/Zlib/ZStream.html","","<p>Zlib::ZStream is the abstract class for the stream which handles the\ncompressed data. The operations ...\n",null,1],["[]","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-5B-5D","(k)","",null,0],["[]","ActionDispatch::Http::Headers","Ruby/classes/ActionDispatch/Http/Headers.html#method-i-5B-5D","(header_name)","",null,0],["[]","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-5B-5D","(i)","",null,0],["[]","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-5B-5D","(attribute)","<p>When passed a symbol or a name of a method, returns an array of errors for\nthe method.\n\n<pre>p.errors[:name] ...</pre>\n",null,0],["[]","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-5B-5D","(key)","",null,0],["[]","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-5B-5D","(key)","",null,0],["[]","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-5B-5D","(key)","",null,0],["[]","ActiveRecord::ConnectionAdapters::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-5B-5D","(key)","",null,0],["[]","ActiveRecord::ConnectionAdapters::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-5B-5D","(name)","<p>Returns a ColumnDefinition for the column with name <code>name</code>.\n",null,0],["[]","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-i-5B-5D","(x)","",null,0],["[]","ActiveResource::Formats","Ruby/classes/ActiveResource/Formats.html#method-c-5B-5D","(mime_type_reference)","<p>Lookup the format class from a mime type reference symbol. Example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ActiveResource</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Formats</span>[:<span class=\"ruby-identifier\">xml</span>]  <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,0],["[]","ActiveResource::Response","Ruby/classes/ActiveResource/Response.html#method-i-5B-5D","(key)","",null,0],["[]","ActiveSupport::Dependencies::ClassCache","Ruby/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-5B-5D","(key)","",null,0],["[]","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-5B-5D","(*args)","",null,0],["[]","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-c-5B-5D","(*args)","",null,0],["[]","ActiveSupport::OrderedOptions","Ruby/classes/ActiveSupport/OrderedOptions.html#method-i-5B-5D","(key)","",null,0],["[]","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-5B-5D","(*args)","",null,0],["[]","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-c-5B-5D","(arg)","<p>Locate a specific time zone object. If the argument is a string, it is\ninterpreted to mean the name of …\n",null,0],["[]","Mime","Ruby/classes/Mime.html#method-c-5B-5D","(type)","",null,0],["[]","Array","Rails/classes/Array.html#method-i-5B-5D","(p1, p2 = v2)","<p>Element Reference—Returns the element at <em>index</em>, or returns a\nsubarray starting at <em>start</em> and continuing …\n",null,1],["[]","Array","Rails/classes/Array.html#method-c-5B-5D","(*args)","<p>Returns a new array populated with the given objects.\n\n<pre>Array.[]( 1, 'a', /^A/ )\nArray[ 1, 'a', /^A/ ]\n[ ...</pre>\n",null,1],["[]","Bignum","Rails/classes/Bignum.html#method-i-5B-5D","(p1)","<p>Bit Reference—Returns the <em>n</em>th bit in the (assumed) binary\nrepresentation of <em>big</em>, where <em>big</em> is the least …\n",null,1],["[]","CGI::QueryExtension","Rails/classes/CGI/QueryExtension.html#method-i-5B-5D","(key)","<p>Get the value for the parameter with a given key.\n<p>If the parameter has multiple values, only the first …\n",null,1],["[]","CGI::Session","Rails/classes/CGI/Session.html#method-i-5B-5D","(key)","<p>Retrieve the session data for key <code>key</code>.\n",null,1],["[]","CSV::Row","Rails/classes/CSV/Row.html#method-i-5B-5D","(header_or_index, minimum_index = 0)","",null,1],["[]","CSV::Table","Rails/classes/CSV/Table.html#method-i-5B-5D","(index_or_header)","<p>In the default mixed mode, this method returns rows for index access and\ncolumns for header access.  …\n",null,1],["[]","Continuation","Rails/classes/Continuation.html#method-i-5B-5D","(*args)","<p>Invokes the continuation. The program continues from the end of the\n<code>callcc</code> block. If no arguments are …\n",null,1],["[]","DBM","Rails/classes/DBM.html#method-i-5B-5D","(p1)","<p>Return a value from the database by locating the key string provided.  If\nthe key is not found, returns …\n",null,1],["[]","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-5B-5D","(p1)","<p>Calls the function pointer passing in <code>ary</code> as values to the\nunderlying C function.  The return value depends …\n",null,1],["[]","DL::CPtr","Rails/classes/DL/CPtr.html#method-c-5B-5D","(p1)","<p>Get the underlying pointer for ruby object <code>val</code> and return it\nas a DL::CPtr object.\n",null,1],["[]","DL::CPtr","Rails/classes/DL/CPtr.html#method-c-5B-5D","(p1)","<p>Get the underlying pointer for ruby object <code>val</code> and return it\nas a DL::CPtr object.\n",null,1],["[]","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-5B-5D","(p1, p2 = v2)","<p>Returns integer stored at <em>index</em>.  If <em>start</em> and\n<em>length</em> are given, a string containing the bytes from  …\n",null,1],["[]","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-5B-5D","(p1, p2 = v2)","<p>Returns integer stored at <em>index</em>.  If <em>start</em> and\n<em>length</em> are given, a string containing the bytes from  …\n",null,1],["[]","DL::CStructEntity","Rails/classes/DL/CStructEntity.html#method-i-5B-5D","(name)","",null,1],["[]","DL::CompositeHandler","Rails/classes/DL/CompositeHandler.html#method-i-5B-5D","(symbol)","",null,1],["[]","DL::Handle","Rails/classes/DL/Handle.html#method-i-5B-5D","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.\n",null,1],["[]","DL::Handle","Rails/classes/DL/Handle.html#method-c-5B-5D","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.\n",null,1],["[]","DL::Importer","Rails/classes/DL/Importer.html#method-i-5B-5D","(name)","",null,1],["[]","DL::Packer","Rails/classes/DL/Packer.html#method-c-5B-5D","(*types)","",null,1],["[]","DL::Stack","Rails/classes/DL/Stack.html#method-c-5B-5D","(*types)","",null,1],["[]","DRb::DRbSSLSocket::SSLConfig","Rails/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-5B-5D","(key)","",null,1],["[]","DRb::GW","Rails/classes/DRb/GW.html#method-i-5B-5D","(key)","",null,1],["[]","Dir","Rails/classes/Dir.html#method-c-5B-5D","(*args)","<p>Equivalent to calling <code>Dir.glob(</code><em>array,</em><code>0)</code>\nand <code>Dir.glob([string,...],0)</code>.\n",null,1],["[]","ENV","Rails/classes/ENV.html#method-c-5B-5D","(p1)","<p>Retrieves the <code>value</code> for environment variable <code>name</code>\nas a String.  Returns <code>nil</code> if the named variable does …\n",null,1],["[]","Fixnum","Rails/classes/Fixnum.html#method-i-5B-5D","(p1)","<p>Bit Reference—Returns the <em>n</em>th bit in the binary representation of\n<em>fix</em>, where <em>fix</em> is the least significant …\n",null,1],["[]","GDBM","Rails/classes/GDBM.html#method-i-5B-5D","(p1)","<p>Retrieves the <em>value</em> corresponding to <em>key</em>.\n",null,1],["[]","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-i-5B-5D","(command_name)","<p>Return the registered command from the command name.\n",null,1],["[]","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-5B-5D","(key)","<p>Return the configuration information for <code>key</code>.\n",null,1],["[]","Hash","Rails/classes/Hash.html#method-c-5B-5D","(*args)","<p>Creates a new hash populated with the given objects. Equivalent to the\nliteral <code>{ <em>key</em> =&gt; <em>value</em>, ...</code> …\n",null,1],["[]","Hash","Rails/classes/Hash.html#method-i-5B-5D","(p1)","<p>Element Reference—Retrieves the <em>value</em> object corresponding to the\n<em>key</em> object. If not found, returns …\n",null,1],["[]","HttpServer::Table","Rails/classes/HttpServer/Table.html#method-i-5B-5D","(key)","",null,1],["[]","IRB::History","Rails/classes/IRB/History.html#method-i-5B-5D","(idx)","",null,1],["[]","JSON","Rails/classes/JSON.html#method-c-5B-5D","(object, opts = {})","<p>If <em>object</em> is string-like, parse the string and return the parsed\nresult as a Ruby data structure. Otherwise …\n",null,1],["[]","MatchData","Rails/classes/MatchData.html#method-i-5B-5D","(p1, p2 = v2)","<p>Match Reference—<code>MatchData</code> acts as an array, and may be\naccessed using the normal array indexing techniques. …\n",null,1],["[]","Matrix","Rails/classes/Matrix.html#method-i-5B-5D","(i, j)","<p>Returns element (<code>i</code>,<code>j</code>) of the matrix.  That is:\nrow <code>i</code>, column <code>j</code>.\n",null,1],["[]","Matrix","Rails/classes/Matrix.html#method-c-5B-5D","(*rows)","<p>Creates a matrix where each argument is a row.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[ [<span class=\"ruby-value\">25</span>, <span class=\"ruby-value\">93</span>], [<span class=\"ruby-value\">-1</span>, <span class=\"ruby-value\">66</span>] ]\n   =<span class=\"ruby-operator\">&gt;</span>  <span class=\"ruby-value\">25</span> <span class=\"ruby-value\">93</span>\n       <span class=\"ruby-value\">-1</span> <span class=\"ruby-value\">66</span>\n</pre>\n",null,1],["[]","Method","Rails/classes/Method.html#method-i-5B-5D","(*args)","<p>Invokes the <em>meth</em> with the specified arguments, returning the\nmethod’s return value.\n\n<pre>m = 12.method(&quot;+&quot;) ...</pre>\n",null,1],["[]","NQXML::Node","Rails/classes/NQXML/Node.html#method-i-5B-5D","(index)","",null,1],["[]","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-5B-5D","(key)","<p>Returns the header field corresponding to the case-insensitive key. For\nexample, a key of “Content-Type” …\n",null,1],["[]","OLEProperty","Rails/classes/OLEProperty.html#method-i-5B-5D","(*args)","",null,1],["[]","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-5B-5D","(section)","",null,1],["[]","PStore","Rails/classes/PStore.html#method-i-5B-5D","(name)","<p>Retrieves a value from the PStore file data, by <em>name</em>.  The\nhierarchy of Ruby objects stored under that …\n",null,1],["[]","Prime::TrialDivision","Rails/classes/Prime/TrialDivision.html#method-i-5B-5D","(index)","<p>Returns the +index+th prime number.\n<p><code>index</code> is a 0-based index.\n",null,1],["[]","Proc","Rails/classes/Proc.html#method-i-5B-5D","(*args)","<p>Invokes the block, setting the block’s parameters to the values in\n<em>params</em> using something close to method …\n",null,1],["[]","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-5B-5D","(k)","",null,1],["[]","RDoc::Markup::AttrSpan","Rails/classes/RDoc/Markup/AttrSpan.html#method-i-5B-5D","(n)","<p>Accesses flags for character <code>n</code>\n",null,1],["[]","REXML::AttlistDecl","Rails/classes/REXML/AttlistDecl.html#method-i-5B-5D","(key)","<p>Access the attlist attribute/value pairs.\n\n<pre>value = attlist_decl[ attribute_name ]</pre>\n",null,1],["[]","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-5B-5D","(name)","<p>Fetches an attribute value.  If you want to get the Attribute itself, use\nget_attribute()\n<p>name &mdash; an XPath …\n",null,1],["[]","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-5B-5D","( index, name=nil)","<p>Fetches a child element.  Filters only Element children, regardless of the\nXPath match.\n<p>index &mdash; the search …\n",null,1],["[]","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-5B-5D","( reference, ns=nil )","",null,1],["[]","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-5B-5D","( index )","<p>Fetches a child at a given index @param index the Integer index of the\nchild to fetch\n",null,1],["[]","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-5B-5D","( start, endd=nil)","",null,1],["[]","RSS::Maker","Rails/classes/RSS/Maker.html#method-c-5B-5D","(version)","",null,1],["[]","RSS::XML::Element","Rails/classes/RSS/XML/Element.html#method-i-5B-5D","(name)","",null,1],["[]","Rake::NameSpace","Rails/classes/Rake/NameSpace.html#method-i-5B-5D","(name)","<p>Lookup a task named <code>name</code> in the namespace.\n",null,1],["[]","Rake::Task","Rails/classes/Rake/Task.html#method-c-5B-5D","(task_name)","<p>Return a task with the given name.  If the task is not currently known, try\nto synthesize one from the …\n",null,1],["[]","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-i-5B-5D","(index)","<p>Find an argument value by name or index.\n",null,1],["[]","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-5B-5D","(task_name, scopes=nil)","<p>Find a matching task for <code>task_name</code>.\n",null,1],["[]","Rinda::Tuple","Rails/classes/Rinda/Tuple.html#method-i-5B-5D","(k)","<p>Accessor method for elements of the tuple.\n",null,1],["[]","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-5B-5D","(key)","<p>Retrieves <code>key</code> from the tuple.\n",null,1],["[]","SDBM","Rails/classes/SDBM.html#method-i-5B-5D","(p1)","",null,1],["[]","Set","Rails/classes/Set.html#method-c-5B-5D","(*ary)","<p>Creates a new set containing the given objects.\n",null,1],["[]","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-5B-5D","(command, file1, file2=nil)","",null,1],["[]","String","Rails/classes/String.html#method-i-5B-5D","(*args)","<p>Element Reference—If passed a single <code>Fixnum</code>, returns a\nsubstring of one character at that position. …\n",null,1],["[]","StringScanner","Rails/classes/StringScanner.html#method-i-5B-5D","(p1)","<p>Return the n-th subgroup in the most recent match.\n\n<pre>s = StringScanner.new(&quot;Fri Dec 12 1975 14:39&quot;)\ns.scan(/(\\w+) ...</pre>\n",null,1],["[]","Struct","Rails/classes/Struct.html#method-i-5B-5D","(p1)","<p>Attribute Reference—Returns the value of the instance variable named by\n<em>symbol</em>, or indexed (0..length-1 …\n",null,1],["[]","Symbol","Rails/classes/Symbol.html#method-i-5B-5D","(*args)","<p>Returns <code>sym.to_s[]</code>.\n",null,1],["[]","Thread","Rails/classes/Thread.html#method-i-5B-5D","(p1)","<p>Attribute Reference—Returns the value of a thread-local variable, using\neither a symbol or a string …\n",null,1],["[]","Vector","Rails/classes/Vector.html#method-c-5B-5D","(*array)","<p>Creates a Vector from a list of elements.\n\n<pre>Vector[7, 4, ...]</pre>\n",null,1],["[]","Vector","Rails/classes/Vector.html#method-i-5B-5D","(i)","<p>Returns element number <code>i</code> (starting at zero) of the vector.\n",null,1],["[]","WEBrick::CGI","Rails/classes/WEBrick/CGI.html#method-i-5B-5D","(key)","",null,1],["[]","WEBrick::GenericServer","Rails/classes/WEBrick/GenericServer.html#method-i-5B-5D","(key)","",null,1],["[]","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-5B-5D","(header_name)","<p>Retrieves <code>header_name</code>\n",null,1],["[]","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-5B-5D","(field)","<p>Retrieves the response header <code>field</code>\n",null,1],["[]","WEBrick::HTTPServer::MountTable","Rails/classes/WEBrick/HTTPServer/MountTable.html#method-i-5B-5D","(dir)","",null,1],["[]","WEBrick::HTTPStatus","Rails/classes/WEBrick/HTTPStatus.html#method-c-5B-5D","(code)","<p>Returns the status class corresponding to <code>code</code>\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">WEBrick</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">HTTPStatus</span>[<span class=\"ruby-value\">302</span>]\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">WEBrick</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">HTTPStatus</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">NotFound</span>\n</pre>\n",null,1],["[]","WEBrick::HTTPUtils::FormData","Rails/classes/WEBrick/HTTPUtils/FormData.html#method-i-5B-5D","(*key)","",null,1],["[]","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-5B-5D","(*args)","<p>Returns the value of Collection specified by a1, a2,.…\n\n<pre>dict = WIN32OLE.new('Scripting.Dictionary')\ndict.add('ruby', ...</pre>\n",null,1],["[]","WIN32OLE_VARIANT","Rails/classes/WIN32OLE_VARIANT.html#method-i-5B-5D","(*args)","<p>Returns the element of WIN32OLE_VARIANT object(OLE array). This method is\navailable only when the variant …\n",null,1],["[]","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-5B-5D","(name, *rtype)","<p>Read a registry value named name and return its value data. The class of\nvalue is same as #read method …\n",null,1],["[]","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-5B-5D","( key )","<p>Return value associated with <code>key</code> from database.\n<p>Returns <code>nil</code> if there is no such <code>key</code>.\n",null,1],["[]=","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-5B-5D-3D","(attribute, error)","<p>Adds to the supplied attribute the supplied error message.\n\n<pre>p.errors[:name] = &quot;must be set&quot;\np.errors[:name] ...</pre>\n",null,0],["[]=","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,0],["[]=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,0],["[]=","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,0],["[]=","ActiveRecord::ConnectionAdapters::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,0],["[]=","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-i-5B-5D-3D","(k,v)","",null,0],["[]=","ActiveResource::Response","Ruby/classes/ActiveResource/Response.html#method-i-5B-5D-3D","(key, value)","",null,0],["[]=","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-5B-5D-3D","(key, value)","<p>Assigns a new value to the hash:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[:key] = &quot;value&quot;</pre>\n",null,0],["[]=","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-5B-5D-3D","(key, value)","<p>Assigns a new value to the hash:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[:key] = &quot;value&quot;</pre>\n",null,0],["[]=","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-5B-5D-3D","(*args)","<p>Like <code>String#[]=</code>, except instead of byte offsets you specify\ncharacter offsets.\n<p>Example:\n\n<pre>s = &quot;Müller&quot;\ns.mb_chars[2] ...</pre>\n",null,0],["[]=","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-5B-5D-3D","(key, value)","",null,0],["[]=","ActiveSupport::OrderedOptions","Ruby/classes/ActiveSupport/OrderedOptions.html#method-i-5B-5D-3D","(key, value)","",null,0],["[]=","Rails::Paths::Root","Ruby/classes/Rails/Paths/Root.html#method-i-5B-5D-3D","(path, value)","",null,0],["[]=","Array","Rails/classes/Array.html#method-i-5B-5D-3D","(*args)","<p>Element Assignment—Sets the element at <em>index</em>, or replaces a\nsubarray starting at <em>start</em> and continuing …\n",null,1],["[]=","CGI::Session","Rails/classes/CGI/Session.html#method-i-5B-5D-3D","(key, val)","<p>Set the session date for key <code>key</code>.\n",null,1],["[]=","CSV::Row","Rails/classes/CSV/Row.html#method-i-5B-5D-3D","(*args)","<p>Looks up the field by the semantics described in CSV::Row.field() and\nassigns the <code>value</code>.\n<p>Assigning past …\n",null,1],["[]=","CSV::Table","Rails/classes/CSV/Table.html#method-i-5B-5D-3D","(index_or_header, value)","<p>In the default mixed mode, this method assigns rows for index access and\ncolumns for header access.  …\n",null,1],["[]=","DBM","Rails/classes/DBM.html#method-i-5B-5D-3D","(p1, p2)","<p>Stores the specified string value in the database, indexed via the string\nkey provided.\n",null,1],["[]=","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-5B-5D-3D","(p1, p2, p3 = v3)","<p>Set the value at <code>index</code> to <code>int</code>.  Or, set the\nmemory at <code>start</code> until <code>length</code> with the contents of\n<code>string</code> …\n",null,1],["[]=","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-5B-5D-3D","(p1, p2, p3 = v3)","<p>Set the value at <code>index</code> to <code>int</code>.  Or, set the\nmemory at <code>start</code> until <code>length</code> with the contents of\n<code>string</code> …\n",null,1],["[]=","DL::CStructEntity","Rails/classes/DL/CStructEntity.html#method-i-5B-5D-3D","(name, val)","",null,1],["[]=","DRb::GW","Rails/classes/DRb/GW.html#method-i-5B-5D-3D","(key, v)","",null,1],["[]=","ENV","Rails/classes/ENV.html#method-c-5B-5D-3D","(p1, p2)","<p>Sets the environment variable <code>name</code> to <code>value</code>.  If\nthe value given is <code>nil</code> the environment variable is deleted. …\n",null,1],["[]=","GDBM","Rails/classes/GDBM.html#method-i-5B-5D-3D","(p1, p2)","<p>Associates the value <em>value</em> with the specified <em>key</em>.\n",null,1],["[]=","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-5B-5D-3D","(key, value)","<p>Set configuration option <code>key</code> to <code>value</code>.\n",null,1],["[]=","Hash","Rails/classes/Hash.html#method-i-5B-5D-3D","(p1, p2)","<p>Element Assignment—Associates the value given by <em>value</em> with the\nkey given by <em>key</em>. <em>key</em> should not have …\n",null,1],["[]=","HttpServer::Table","Rails/classes/HttpServer/Table.html#method-i-5B-5D-3D","(key, value)","",null,1],["[]=","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-5B-5D-3D","(key, val)","<p>Sets the header field corresponding to the case-insensitive key.\n",null,1],["[]=","OLEProperty","Rails/classes/OLEProperty.html#method-i-5B-5D-3D","(*args)","",null,1],["[]=","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-5B-5D-3D","(section, pairs)","",null,1],["[]=","PStore","Rails/classes/PStore.html#method-i-5B-5D-3D","(name, value)","<p>Stores an individual Ruby object or a hierarchy of Ruby objects in the data\nstore file under the root …\n",null,1],["[]=","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-5B-5D-3D","(k, v)","",null,1],["[]=","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-5B-5D-3D","( name, value )","<p>Sets an attribute, overwriting any existing attribute value by the same\nname.  Namespace is significant. …\n",null,1],["[]=","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-5B-5D-3D","( index, element )","<p>Sets an element, replacing any previous matching element.  If no existing\nelement is found ,the element …\n",null,1],["[]=","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-5B-5D-3D","( reference, ns, value=nil )","<p>Doesn’t handle namespaces yet\n",null,1],["[]=","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-5B-5D-3D","( *args )","<p>Set an index entry.  See Array.[]= @param index the index of the element to\nset @param opt either the …\n",null,1],["[]=","REXML::XPathParser","Rails/classes/REXML/XPathParser.html#method-i-5B-5D-3D","( variable_name, value )","",null,1],["[]=","RSS::XML::Element","Rails/classes/RSS/XML/Element.html#method-i-5B-5D-3D","(name, value)","",null,1],["[]=","SDBM","Rails/classes/SDBM.html#method-i-5B-5D-3D","(p1, p2)","",null,1],["[]=","String","Rails/classes/String.html#method-i-5B-5D-3D","(*args)","<p>Element Assignment—Replaces some or all of the content of <em>str</em>. The\nportion of the string affected is …\n",null,1],["[]=","Struct","Rails/classes/Struct.html#method-i-5B-5D-3D","(p1, p2)","<p>Attribute Assignment—Assigns to the instance variable named by\n<em>symbol</em> or <em>fixnum</em> the value <em>obj</em> and returns …\n",null,1],["[]=","Thread","Rails/classes/Thread.html#method-i-5B-5D-3D","(p1, p2)","<p>Attribute Assignment—Sets or creates the value of a thread-local variable,\nusing either a symbol or …\n",null,1],["[]=","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-5B-5D-3D","(field, value)","<p>Sets the response header <code>field</code> to <code>value</code>\n",null,1],["[]=","WEBrick::HTTPServer::MountTable","Rails/classes/WEBrick/HTTPServer/MountTable.html#method-i-5B-5D-3D","(dir, val)","",null,1],["[]=","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-5B-5D-3D","(*args)","<p>Sets the value to WIN32OLE object specified by a1, a2, …\n\n<pre>dict = WIN32OLE.new('Scripting.Dictionary') ...</pre>\n",null,1],["[]=","WIN32OLE_VARIANT","Rails/classes/WIN32OLE_VARIANT.html#method-i-5B-5D-3D","(*args)","<p>Set the element of WIN32OLE_VARIANT object(OLE array) to val. This method\nis available only when the …\n",null,1],["[]=","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-5B-5D-3D","(name, rtype, value = nil)","<p>Write value to a registry value named name.\n<p>If wtype is specified, the value type is it. Otherwise, the …\n",null,1],["[]=","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-5B-5D-3D","( key, val )","<p>Set <code>key</code> to <code>value</code> in database.\n<p><code>value</code> will be converted to YAML before storage.\n",null,1],["^","Bignum","Rails/classes/Bignum.html#method-i-5E","(p1)","<p>Performs bitwise +exclusive or+ between <em>big</em> and <em>numeric</em>.\n",null,1],["^","FalseClass","Rails/classes/FalseClass.html#method-i-5E","(p1)","<p>Exclusive Or—If <em>obj</em> is <code>nil</code> or <code>false</code>,\nreturns <code>false</code>; otherwise, returns <code>true</code>.\n",null,1],["^","Fixnum","Rails/classes/Fixnum.html#method-i-5E","(p1)","<p>Bitwise EXCLUSIVE OR.\n",null,1],["^","NilClass","Rails/classes/NilClass.html#method-i-5E","(p1)","<p>Exclusive Or—If <em>obj</em> is <code>nil</code> or <code>false</code>,\nreturns <code>false</code>; otherwise, returns <code>true</code>.\n",null,1],["^","Set","Rails/classes/Set.html#method-i-5E","(enum)","<p>Returns a new set containing elements exclusive between the set and the\ngiven enumerable object.  (set …\n",null,1],["^","TrueClass","Rails/classes/TrueClass.html#method-i-5E","(p1)","<p>Exclusive Or—Returns <code>true</code> if <em>obj</em> is <code>nil</code>\nor <code>false</code>, <code>false</code> otherwise.\n",null,1],["_PermaLink?","RSS::Rss::Channel::Item::Guid","Rails/classes/RSS/Rss/Channel/Item/Guid.html#method-i-_PermaLink-3F","()","",null,1],["__callback_runner_name","ActiveSupport::Callbacks::ClassMethods","Ruby/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-__callback_runner_name","(key, kind)","",null,0],["__callee__","Kernel","Rails/classes/Kernel.html#method-i-__callee__","()","<p>Returns the name of the current method as a Symbol. If called outside of a\nmethod, it returns <code>nil</code>.\n",null,1],["__drbref","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-i-__drbref","()","<p>Get the reference of the object, if local.\n",null,1],["__drburi","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-i-__drburi","()","<p>Get the URI of the remote object.\n",null,1],["__evaluate__","IRB::WorkSpace","Rails/classes/IRB/WorkSpace.html#method-i-__evaluate__","(context, statements, file = nil, line = nil)","",null,1],["__exit__","IRB::Context","Rails/classes/IRB/Context.html#method-i-__exit__","(ret = 0)","",null,1],["__getobj__","Delegator","Rails/classes/Delegator.html#method-i-__getobj__","()","<p>This method must be overridden by subclasses and should return the object\nmethod calls are being delegated …\n",null,1],["__getobj__","SimpleDelegator","Rails/classes/SimpleDelegator.html#method-i-__getobj__","()","<p>Returns the current object method calls are being delegated to.\n",null,1],["__id__","BasicObject","Rails/classes/BasicObject.html#method-i-__id__","()","<p>Returns an integer identifier for <em>obj</em>. The same number will be\nreturned on all calls to <code>id</code> for a given ...\n",null,1],["__inspect__","IRB::Context","Rails/classes/IRB/Context.html#method-i-__inspect__","()","",null,1],["__method__","Kernel","Rails/classes/Kernel.html#method-i-__method__","()","<p>Returns the name of the current method as a Symbol. If called outside of a\nmethod, it returns <code>nil</code>.\n",null,1],["__reset_runner","ActiveSupport::Callbacks::ClassMethods","Ruby/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-__reset_runner","(symbol)","",null,0],["__send__","BasicObject","Rails/classes/BasicObject.html#method-i-__send__","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments\nspecified. You can use <code>__send__</code> if …\n",null,1],["__setobj__","Delegator","Rails/classes/Delegator.html#method-i-__setobj__","(obj)","<p>This method must be overridden by subclasses and change the object delegate\nto <em>obj</em>.\n",null,1],["__setobj__","SimpleDelegator","Rails/classes/SimpleDelegator.html#method-i-__setobj__","(obj)","<p>Changes the delegate object to <em>obj</em>.\n<p>It’s important to note that this does <strong>not</strong> cause\nSimpleDelegator’s …\n",null,1],["__to_s__","IRB::Context","Rails/classes/IRB/Context.html#method-i-__to_s__","()","",null,1],["_all_autoload_once_paths","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-_all_autoload_once_paths","()","",null,0],["_all_autoload_paths","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-_all_autoload_paths","()","",null,0],["_all_load_paths","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-_all_load_paths","()","",null,0],["_attribute","ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead","Ruby/classes/ActiveRecord/AttributeMethods/DeprecatedUnderscoreRead.html#method-i-_attribute","(attr_name)","",null,0],["_dasherize","ActiveSupport::XmlMini","Ruby/classes/ActiveSupport/XmlMini.html#method-i-_dasherize","(key)","",null,0],["_dump","Time","Ruby/classes/Time.html#method-i-_dump","(*args)","",null,0],["_dump","BigDecimal","Rails/classes/BigDecimal.html#method-i-_dump","(p1 = v1)","",null,1],["_dump","DRb::DRbArray","Rails/classes/DRb/DRbArray.html#method-i-_dump","(lv)","",null,1],["_dump","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-i-_dump","(lv)","<p>Marshall this object.\n<p>The URI and ref of the object are marshalled.\n",null,1],["_dump","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-_dump","(limit)","<p>Dump only crucial instance variables.\n",null,1],["_dump","Singleton","Rails/classes/Singleton.html#method-i-_dump","(depth = -1)","<p>By default, do not retain any state when marshalling.\n",null,1],["_dump","Time","Rails/classes/Time.html#method-i-_dump","(p1 = v1)","<p>Dump <em>time</em> for marshaling.\n",null,1],["_dump","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-_dump","(depth)","<p>marshalling is not allowed\n",null,1],["_dump_without_utc_flag","Time","Ruby/classes/Time.html#method-i-_dump_without_utc_flag","(*args)","",null,0],["_dump_without_zone","Time","Ruby/classes/Time.html#method-i-_dump_without_zone","(*args)","",null,0],["_escape","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-i-_escape","(str, regex)","",null,1],["_field_changed?","ActiveRecord::AttributeMethods::Serialization","Ruby/classes/ActiveRecord/AttributeMethods/Serialization.html#method-i-_field_changed-3F","(attr, old, value)","",null,0],["_get","ActiveSupport::OrderedOptions","Ruby/classes/ActiveSupport/OrderedOptions.html#method-i-_get","(key)","",null,0],["_getproperty","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-_getproperty","(p1, p2, p3)","<p>Runs the early binding method to get property. The 1st argument specifies\ndispatch ID, the 2nd argument …\n",null,1],["_handle_method_missing","ActionController::Compatibility","Ruby/classes/ActionController/Compatibility.html#method-i-_handle_method_missing","()","",null,0],["_handle_render_options","ActionController::Renderers","Ruby/classes/ActionController/Renderers.html#method-i-_handle_render_options","(options)","",null,0],["_httpdate","Date","Rails/classes/Date.html#method-c-_httpdate","(p1)","<p>Returns a hash of parsed elements.\n",null,1],["_id2ref","ObjectSpace","Rails/classes/ObjectSpace.html#method-c-_id2ref","(p1)","<p>Converts an object id to a reference to the object. May not be called on an\nobject id passed as a parameter …\n",null,1],["_implied_layout_name","AbstractController::Layouts::ClassMethods","Ruby/classes/AbstractController/Layouts/ClassMethods.html#method-i-_implied_layout_name","()","<p>If no layout is supplied, look for a template named the return value of\nthis method.\n<p>Returns\n<p><code>String</code> -  ...\n",null,0],["_insert_callbacks","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_insert_callbacks","(callbacks, block)","<p>Take callback names and an optional callback proc, normalize them, then\ncall the block with each callback. …\n",null,0],["_invoke","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-_invoke","(p1, p2, p3)","<p>Runs the early binding method. The 1st argument specifies dispatch ID, the\n2nd argument specifies the …\n",null,1],["_iso8601","Date","Rails/classes/Date.html#method-c-_iso8601","(p1)","<p>Returns a hash of parsed elements.\n",null,1],["_jisx0301","Date","Rails/classes/Date.html#method-c-_jisx0301","(p1)","<p>Returns a hash of parsed elements.\n",null,1],["_layout_for","ActionView::Context","Ruby/classes/ActionView/Context.html#method-i-_layout_for","(name=nil)","<p>Encapsulates the interaction with the view flow so it returns the correct\nbuffer on yield. This is usually …\n",null,0],["_layout_for","ActionView::Helpers::RenderingHelper","Ruby/classes/ActionView/Helpers/RenderingHelper.html#method-i-_layout_for","(*args, &block)","<p>Overwrites _layout_for in the context object so it supports the case a\nblock is passed to a partial. …\n",null,0],["_load","Time","Ruby/classes/Time.html#method-c-_load","(marshaled_time)","",null,0],["_load","BigDecimal","Rails/classes/BigDecimal.html#method-c-_load","(p1)","<p>Internal method used to provide marshalling support. See the Marshal\nmodule.\n",null,1],["_load","DRb::DRbArray","Rails/classes/DRb/DRbArray.html#method-c-_load","(s)","",null,1],["_load","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-c-_load","(s)","<p>Unmarshall a marshalled DRbObject.\n<p>If the referenced object is located within the local server, then the …\n",null,1],["_load","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-_load","(str)","<p>Load custom marshal format, re-initializing defaults as needed\n",null,1],["_load","Singleton","Rails/classes/Singleton.html#method-c-_load","","<p>By default calls instance(). Override to retain singleton state.\n",null,1],["_load","Time","Rails/classes/Time.html#method-c-_load","(p1)","<p>Unmarshal a dumped <code>Time</code> object.\n",null,1],["_load_without_utc_flag","Time","Ruby/classes/Time.html#method-c-_load_without_utc_flag","(marshaled_time)","",null,0],["_load_without_zone","Time","Ruby/classes/Time.html#method-c-_load_without_zone","(marshaled_time)","",null,0],["_make_regex","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-i-_make_regex","(str)","",null,1],["_make_regex!","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-i-_make_regex-21","(str)","",null,1],["_normalize_callback_options","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_normalize_callback_options","(options)","<p>If :only or :except are used, convert the options into the primitive form\n(:per_key) used by ActiveSupport::Callbacks …\n",null,0],["_normalize_options","AbstractController::Layouts","Ruby/classes/AbstractController/Layouts.html#method-i-_normalize_options","(options)","",null,0],["_normalize_options","ActionController::Compatibility","Ruby/classes/ActionController/Compatibility.html#method-i-_normalize_options","(options)","",null,0],["_original_to_s","BigDecimal","Ruby/classes/BigDecimal.html#method-i-_original_to_s","(format = DEFAULT_STRING_FORMAT)","",null,0],["_parse","Date","Rails/classes/Date.html#method-c-_parse","(*args)","<p>Parses the given representation of date and time, and returns a hash of\nparsed elements.\n<p>If the optional …\n",null,1],["_parse_file","ActiveSupport::XmlMini","Ruby/classes/ActiveSupport/XmlMini.html#method-i-_parse_file","(file, entity)","",null,0],["_prefixes","AbstractController::ViewPaths","Ruby/classes/AbstractController/ViewPaths.html#method-i-_prefixes","()","<p>The prefixes used in render “foo” shortcuts.\n",null,0],["_prepare_context","ActionView::Context","Ruby/classes/ActionView/Context.html#method-i-_prepare_context","()","<p>Prepares the context by setting the appropriate instance variables. :api:\nplugin\n",null,0],["_rfc2822","Date","Rails/classes/Date.html#method-c-_rfc2822","(p1)","<p>Returns a hash of parsed elements.\n",null,1],["_rfc3339","Date","Rails/classes/Date.html#method-c-_rfc3339","(p1)","<p>Returns a hash of parsed elements.\n",null,1],["_rfc822","Date","Rails/classes/Date.html#method-c-_rfc822","(p1)","<p>Returns a hash of parsed elements.\n",null,1],["_routes","AbstractController::UrlFor","Ruby/classes/AbstractController/UrlFor.html#method-i-_routes","()","",null,0],["_routes","AbstractController::UrlFor::ClassMethods","Ruby/classes/AbstractController/UrlFor/ClassMethods.html#method-i-_routes","()","",null,0],["_routes_context","ActionDispatch::Routing::UrlFor","Ruby/classes/ActionDispatch/Routing/UrlFor.html#method-i-_routes_context","()","",null,0],["_routes_context","ActionView::Helpers::UrlHelper","Ruby/classes/ActionView/Helpers/UrlHelper.html#method-i-_routes_context","()","",null,0],["_save_fragment","ActionController::Caching::Actions","Ruby/classes/ActionController/Caching/Actions.html#method-i-_save_fragment","(name, options)","",null,0],["_set_detail","ActionView::LookupContext::DetailsCache","Ruby/classes/ActionView/LookupContext/DetailsCache.html#method-i-_set_detail","(key, value)","",null,0],["_set_last_value","IRB::Context","Rails/classes/IRB/Context.html#method-i-_set_last_value","(value)","",null,1],["_set_wrapper_defaults","ActionController::ParamsWrapper::ClassMethods","Ruby/classes/ActionController/ParamsWrapper/ClassMethods.html#method-i-_set_wrapper_defaults","(options, model=nil)","",null,0],["_setproperty","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-_setproperty","(p1, p2, p3)","<p>Runs the early binding method to set property. The 1st argument specifies\ndispatch ID, the 2nd argument …\n",null,1],["_strptime","Date","Rails/classes/Date.html#method-c-_strptime","(*args)","<p>Parses the given representation of date and time with the given template,\nand returns a hash of parsed …\n",null,1],["_strptime","DateTime","Rails/classes/DateTime.html#method-c-_strptime","(*args)","<p>Parses the given representation of date and time with the given template,\nand returns a hash of parsed …\n",null,1],["_to_partial_path","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-c-_to_partial_path","()","",null,0],["_unescape","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-i-_unescape","(str, regex)","",null,1],["_validates_default_keys","ActiveModel::Validations::ClassMethods","Ruby/classes/ActiveModel/Validations/ClassMethods.html#method-i-_validates_default_keys","()","<p>When creating custom validators, it might be useful to be able to specify\nadditional default keys. This …\n",null,0],["_with_routes","ActionDispatch::Routing::UrlFor","Ruby/classes/ActionDispatch/Routing/UrlFor.html#method-i-_with_routes","(routes)","",null,0],["_write_layout_method","AbstractController::Layouts::ClassMethods","Ruby/classes/AbstractController/Layouts/ClassMethods.html#method-i-_write_layout_method","()","<p>Creates a _layout method to be called by _default_layout .\n<p>If a layout is not explicitly mentioned then …\n",null,0],["_xmlschema","Date","Rails/classes/Date.html#method-c-_xmlschema","(p1)","<p>Returns a hash of parsed elements.\n",null,1],["`","Kernel","Rails/classes/Kernel.html#method-i-60","(p1)","<p>Returns the standard output of running <em>cmd</em> in a subshell. The\nbuilt-in syntax <code>%x{...}</code> uses this method. …\n",null,1],["a","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-a","(href = \"\")","<p>Generate an Anchor element as a string.\n<p><code>href</code> can either be a string, giving the URL for the HREF\nattribute, ...\n",null,1],["abbrev","Abbrev","Rails/classes/Abbrev.html#method-c-abbrev","(words, pattern = nil)","<p>Given a set of strings, calculate the set of unambiguous abbreviations for\nthose strings, and return …\n",null,1],["abbrev","Array","Rails/classes/Array.html#method-i-abbrev","(pattern = nil)","<p>Calculates the set of unambiguous abbreviations for the strings in\n<code>self</code>. If passed a pattern or a string, …\n",null,1],["abbreviate","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-abbreviate","(spec)","<p>Abbreviate the spec for downloading.  Abbreviated specs are only used for\nsearching, downloading and …\n",null,1],["abbreviate","REXML::Parsers::XPathParser","Rails/classes/REXML/Parsers/XPathParser.html#method-i-abbreviate","( path )","",null,1],["abort","Kernel","Rails/classes/Kernel.html#method-i-abort","(p1)","<p>Terminate execution immediately, effectively by calling\n<code>Kernel.exit(false)</code>. If <em>msg</em> is given, it is written …\n",null,1],["abort","Net::FTP","Rails/classes/Net/FTP.html#method-i-abort","()","<p>Aborts the previous command (ABOR command).\n",null,1],["abort","OptionParser","Rails/classes/OptionParser.html#method-i-abort","(mesg = $!)","",null,1],["abort","PStore","Rails/classes/PStore.html#method-i-abort","()","<p>Ends the current PStore#transaction, discarding any changes to the data\nstore.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&quot;pstore&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["abort","Process","Rails/classes/Process.html#method-c-abort","(p1)","<p>Terminate execution immediately, effectively by calling\n<code>Kernel.exit(false)</code>. If <em>msg</em> is given, it is written …\n",null,1],["abort_on_exception","Thread","Rails/classes/Thread.html#method-i-abort_on_exception","()","<p>Returns the status of the thread-local “abort on exception” condition for\n<em>thr</em>. The default is <code>false</code> …\n",null,1],["abort_on_exception","Thread","Rails/classes/Thread.html#method-c-abort_on_exception","()","<p>Returns the status of the global “abort on exception” condition.  The\ndefault is <code>false</code>. When set to …\n",null,1],["abort_on_exception=","Thread","Rails/classes/Thread.html#method-c-abort_on_exception-3D","(p1)","<p>When set to <code>true</code>, all threads will abort if an exception is\nraised. Returns the new state.\n\n<pre>Thread.abort_on_exception ...</pre>\n",null,1],["abort_on_exception=","Thread","Rails/classes/Thread.html#method-i-abort_on_exception-3D","(p1)","<p>When set to <code>true</code>, causes all threads (including the main\nprogram) to abort if an exception is raised …\n",null,1],["abs","BigDecimal","Rails/classes/BigDecimal.html#method-i-abs","()","<p>Returns the absolute value.\n<p>BigDecimal(‘5’).abs -&gt; 5\n<p>BigDecimal(‘-3’).abs -&gt; 3\n",null,1],["abs","Bignum","Rails/classes/Bignum.html#method-i-abs","()","<p>Returns the absolute value of <em>big</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-1234567890987654321</span>.<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 1234567890987654321</span>\n</pre>\n",null,1],["abs","Complex","Rails/classes/Complex.html#method-i-abs","()","<p>Returns the absolute part of its polar form.\n",null,1],["abs","Fixnum","Rails/classes/Fixnum.html#method-i-abs","()","<p>Returns the absolute value of <em>fix</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-12345</span>.<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 12345</span>\n<span class=\"ruby-value\">12345</span>.<span class=\"ruby-identifier\">abs</span>    <span class=\"ruby-comment\">#=&gt; 12345</span>\n</pre>\n",null,1],["abs","Float","Rails/classes/Float.html#method-i-abs","()","<p>Returns the absolute value of <em>flt</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">-34.56</span>).<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 34.56</span>\n<span class=\"ruby-value\">-34.56</span>.<span class=\"ruby-identifier\">abs</span>     <span class=\"ruby-comment\">#=&gt; 34.56</span>\n</pre>\n",null,1],["abs","Numeric","Rails/classes/Numeric.html#method-i-abs","()","<p>Returns the absolute value of <em>num</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">12</span>.<span class=\"ruby-identifier\">abs</span>         <span class=\"ruby-comment\">#=&gt; 12</span>\n(<span class=\"ruby-value\">-34.56</span>).<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 34.56</span>\n<span class=\"ruby-value\">-34.56</span>.<span class=\"ruby-identifier\">abs</span>     <span class=\"ruby-comment\">#=&gt; 34.56</span>\n</pre>\n",null,1],["abs2","Complex","Rails/classes/Complex.html#method-i-abs2","()","<p>Returns square of the absolute value.\n",null,1],["abs2","Numeric","Rails/classes/Numeric.html#method-i-abs2","()","<p>Returns square of self.\n",null,1],["absolute","URI::Generic","Rails/classes/URI/Generic.html#method-i-absolute","()","",null,1],["absolute?","Pathname","Rails/classes/Pathname.html#method-i-absolute-3F","()","<p>Predicate method for testing whether a path is absolute. It returns\n<code>true</code> if the pathname begins with …\n",null,1],["absolute?","Resolv::DNS::Name","Rails/classes/Resolv/DNS/Name.html#method-i-absolute-3F","()","<p>True if this name is absolute.\n",null,1],["absolute?","URI::Generic","Rails/classes/URI/Generic.html#method-i-absolute-3F","()","<p>Checks if URI is an absolute one\n",null,1],["absolute_path","File","Rails/classes/File.html#method-c-absolute_path","(p1, p2 = v2)","<p>Converts a pathname to an absolute pathname. Relative paths are referenced\nfrom the current working directory …\n",null,1],["abstract!","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-c-abstract-21","()","<p>Define a controller as abstract. See internal_methods for more details.\n",null,0],["abstract_class?","ActiveRecord::Inheritance::ClassMethods","Ruby/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-abstract_class-3F","()","<p>Returns whether this class is an abstract class or not.\n",null,0],["abstract_railtie?","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-c-abstract_railtie-3F","()","",null,0],["accept","DRb::DRbSSLSocket","Rails/classes/DRb/DRbSSLSocket.html#method-i-accept","()","",null,1],["accept","DRb::DRbSSLSocket::SSLConfig","Rails/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-accept","(tcp)","",null,1],["accept","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-i-accept","()","<p>On the server side, for an instance returned by #open_server, accept a\nclient connection and return a …\n",null,1],["accept","DRb::DRbUNIXSocket","Rails/classes/DRb/DRbUNIXSocket.html#method-i-accept","()","",null,1],["accept","OpenSSL::SSL::SSLServer","Rails/classes/OpenSSL/SSL/SSLServer.html#method-i-accept","()","",null,1],["accept","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-accept","()","<p>Waits for a SSL/TLS client to initiate a handshake.  The handshake may be\nstarted after unencrypted data …\n",null,1],["accept","OptionParser","Rails/classes/OptionParser.html#method-i-accept","(*args, &blk)","<p>Directs to accept specified class <code>t</code>. The argument string is\npassed to the block in which it should be …\n",null,1],["accept","OptionParser","Rails/classes/OptionParser.html#method-c-accept","(*args, &blk)","<p>See #accept.\n",null,1],["accept","OptionParser::List","Rails/classes/OptionParser/List.html#method-i-accept","(t, pat = /.*/m, &block)","<p>See OptionParser.accept.\n",null,1],["accept","Psych::Visitors::JSONTree","Rails/classes/Psych/Visitors/JSONTree.html#method-i-accept","(target)","",null,1],["accept","Psych::Visitors::ToRuby","Rails/classes/Psych/Visitors/ToRuby.html#method-i-accept","(target)","",null,1],["accept","Psych::Visitors::Visitor","Rails/classes/Psych/Visitors/Visitor.html#method-i-accept","(target)","",null,1],["accept","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-accept","(target)","",null,1],["accept","RDoc::Markup::BlankLine","Rails/classes/RDoc/Markup/BlankLine.html#method-i-accept","(visitor)","<p>Calls #accept_blank_line on <code>visitor</code>\n",null,1],["accept","RDoc::Markup::Document","Rails/classes/RDoc/Markup/Document.html#method-i-accept","(visitor)","<p>Runs this document and all its #items through <code>visitor</code>\n",null,1],["accept","RDoc::Markup::Heading","Rails/classes/RDoc/Markup/Heading.html#method-i-accept","(visitor)","<p>Calls #accept_heading on <code>visitor</code>\n",null,1],["accept","RDoc::Markup::IndentedParagraph","Rails/classes/RDoc/Markup/IndentedParagraph.html#method-i-accept","(visitor)","<p>Calls #accept_indented_paragraph on <code>visitor</code>\n",null,1],["accept","RDoc::Markup::List","Rails/classes/RDoc/Markup/List.html#method-i-accept","(visitor)","<p>Runs this list and all its #items through <code>visitor</code>\n",null,1],["accept","RDoc::Markup::ListItem","Rails/classes/RDoc/Markup/ListItem.html#method-i-accept","(visitor)","<p>Runs this list item and all its #parts through <code>visitor</code>\n",null,1],["accept","RDoc::Markup::Paragraph","Rails/classes/RDoc/Markup/Paragraph.html#method-i-accept","(visitor)","<p>Calls #accept_paragraph on <code>visitor</code>\n",null,1],["accept","RDoc::Markup::Raw","Rails/classes/RDoc/Markup/Raw.html#method-i-accept","(visitor)","<p>Calls #accept_raw+ on <code>visitor</code>\n",null,1],["accept","RDoc::Markup::Rule","Rails/classes/RDoc/Markup/Rule.html#method-i-accept","(visitor)","<p>Calls #accept_rule on <code>visitor</code>\n",null,1],["accept","RDoc::Markup::Verbatim","Rails/classes/RDoc/Markup/Verbatim.html#method-i-accept","(visitor)","<p>Calls #accept_verbatim on <code>visitor</code>\n",null,1],["accept","Socket","Rails/classes/Socket.html#method-i-accept","()","<p>Accepts a next connection. Returns a new Socket object and Addrinfo object.\n\n<pre>serv = Socket.new(:INET, :STREAM, ...</pre>\n",null,1],["accept","TCPServer","Rails/classes/TCPServer.html#method-i-accept","()","<p>TCPServer.open(“127.0.0.1”, 14641) {|serv|\n\n<pre>s = serv.accept\ns.puts Time.now\ns.close</pre>\n<p>}\n",null,1],["accept","UNIXServer","Rails/classes/UNIXServer.html#method-i-accept","()","<p>Accepts a new connection. It returns new UNIXSocket object.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">UNIXServer</span>.<span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;/tmp/sock&quot;</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">serv</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-constant\">UNIXSocket</span>.<span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;/tmp/sock&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["accept_blank_line","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-accept_blank_line","(blank_line)","<p>Adds <code>blank_line</code> to the output\n",null,1],["accept_blank_line","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_blank_line","(blank_line)","<p>Adds <code>blank_line</code> to the output\n",null,1],["accept_blank_line","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_blank_line","(markup_item)","",null,1],["accept_charset","CGI","Rails/classes/CGI.html#method-c-accept_charset","()","<p>Return the accept character set for all new CGI instances.\n",null,1],["accept_charset=","CGI","Rails/classes/CGI.html#method-c-accept_charset-3D","(accept_charset)","<p>Set the accept character set for all new CGI instances.\n",null,1],["accept_document","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-accept_document","(document)","<p>Adds <code>document</code> to the output\n",null,1],["accept_heading","RDoc::Markup::ToBs","Rails/classes/RDoc/Markup/ToBs.html#method-i-accept_heading","(heading)","<p>Makes heading text bold.\n",null,1],["accept_heading","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-accept_heading","(heading)","<p>Adds <code>heading</code> to the output\n",null,1],["accept_heading","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_heading","(heading)","<p>Adds <code>heading</code> to the output\n",null,1],["accept_heading","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_heading","(markup_item)","",null,1],["accept_indented_paragraph","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_indented_paragraph","(paragraph)","<p>Adds <code>paragraph</code> to the output\n",null,1],["accept_list_end","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-accept_list_end","(list)","<p>Finishes consumption of <code>list</code>\n",null,1],["accept_list_end","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_list_end","(list)","<p>Finishes consumption of <code>list</code>\n",null,1],["accept_list_end","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_list_end","(list)","<p>Pops the list type for <code>list</code> from #list_type\n",null,1],["accept_list_item_end","RDoc::Markup::ToAnsi","Rails/classes/RDoc/Markup/ToAnsi.html#method-i-accept_list_item_end","(list_item)","<p>Overrides indent width to ensure output lines up correctly.\n",null,1],["accept_list_item_end","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-accept_list_item_end","(list_item)","<p>Finishes consumption of <code>list_item</code>\n",null,1],["accept_list_item_end","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_list_item_end","(list_item)","<p>Finishes consumption of <code>list_item</code>\n",null,1],["accept_list_item_end","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_list_item_end","(markup_item)","",null,1],["accept_list_item_start","RDoc::Markup::ToAnsi","Rails/classes/RDoc/Markup/ToAnsi.html#method-i-accept_list_item_start","(list_item)","<p>Adds coloring to note and label list items\n",null,1],["accept_list_item_start","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-accept_list_item_start","(list_item)","<p>Prepares the visitor for consuming <code>list_item</code>\n",null,1],["accept_list_item_start","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_list_item_start","(list_item)","<p>Prepares the visitor for consuming <code>list_item</code>\n",null,1],["accept_list_item_start","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_list_item_start","(list_item)","<p>Prepares the visitor for consuming <code>list_item</code>\n",null,1],["accept_list_start","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-accept_list_start","(list)","<p>Prepares the visitor for consuming <code>list</code>\n",null,1],["accept_list_start","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_list_start","(list)","<p>Prepares the visitor for consuming <code>list</code>\n",null,1],["accept_list_start","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_list_start","(list)","<p>Pushes the list type for <code>list</code> onto #list_type\n",null,1],["accept_loop","Socket","Rails/classes/Socket.html#method-c-accept_loop","(*sockets)","<p>yield socket and client address for each a connection accepted via given\nsockets.\n<p>The arguments are a …\n",null,1],["accept_nonblock","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-accept_nonblock","()","<p>Initiates the SSL/TLS handshake as a server in non-blocking manner.\n\n<pre># emulates blocking accept\nbegin\n ...</pre>\n",null,1],["accept_nonblock","Socket","Rails/classes/Socket.html#method-i-accept_nonblock","()","<p>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for\nthe underlying file descriptor. …\n",null,1],["accept_nonblock","TCPServer","Rails/classes/TCPServer.html#method-i-accept_nonblock","()","<p>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for\nthe underlying file descriptor. …\n",null,1],["accept_nonblock","UNIXServer","Rails/classes/UNIXServer.html#method-i-accept_nonblock","()","<p>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for\nthe underlying file descriptor. …\n",null,1],["accept_paragraph","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-accept_paragraph","(paragraph)","<p>Adds <code>paragraph</code> to the output\n",null,1],["accept_paragraph","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_paragraph","(paragraph)","<p>Adds <code>paragraph</code> to the output\n",null,1],["accept_paragraph","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_paragraph","(paragraph)","<p>Adds <code>paragraph</code> to the output\n",null,1],["accept_raw","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-accept_raw","(raw)","<p>Adds <code>raw</code> to the output\n",null,1],["accept_raw","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_raw","(raw)","<p>Adds <code>raw</code> to the output\n",null,1],["accept_raw","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_raw","(markup_item)","",null,1],["accept_rule","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-accept_rule","(rule)","<p>Adds <code>rule</code> to the output\n",null,1],["accept_rule","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_rule","(rule)","<p>Adds <code>rule</code> to the output\n",null,1],["accept_rule","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_rule","(markup_item)","",null,1],["accept_uri_http","Gem::LocalRemoteOptions","Rails/classes/Gem/LocalRemoteOptions.html#method-i-accept_uri_http","()","<p>Allows OptionParser to handle HTTP URIs.\n",null,1],["accept_verbatim","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-accept_verbatim","(verbatim)","<p>Adds <code>verbatim</code> to the output\n",null,1],["accept_verbatim","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-accept_verbatim","(verbatim)","<p>Outputs <code>verbatim</code> indented 2 columns\n",null,1],["accept_verbatim","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_verbatim","(markup_item)","",null,1],["accepts","ActionDispatch::Http::MimeNegotiation","Ruby/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-accepts","()","<p>Returns the accepted MIME type for the request.\n",null,0],["accepts_nested_attributes_for","ActiveRecord::NestedAttributes::ClassMethods","Ruby/classes/ActiveRecord/NestedAttributes/ClassMethods.html#method-i-accepts_nested_attributes_for","(*attr_names)","<p>Defines an attributes writer for the specified association(s). If you are\nusing <code>attr_protected</code> or <code>attr_accessible</code> …\n",null,0],["access_log","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-access_log","(config, req, res)","",null,1],["accessible_attributes","ActiveModel::MassAssignmentSecurity::ClassMethods","Ruby/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-accessible_attributes","(role = :default)","",null,0],["accessible_attributes","ActiveRecord::Generators::ModelGenerator","Ruby/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-accessible_attributes","()","",null,0],["acct","Net::FTP","Rails/classes/Net/FTP.html#method-i-acct","(account)","<p>Sends the ACCT command.\n<p>This is a less common FTP command, to send account information if the\ndestination …\n",null,1],["acos","CMath","Rails/classes/CMath.html#method-c-acos","(z)","<p>returns the arc cosine of <code>z</code>\n",null,1],["acos","Math","Rails/classes/Math.html#method-c-acos","(p1)","<p>Computes the arc cosine of <em>x</em>. Returns 0..PI.\n",null,1],["acos!","CMath","Rails/classes/CMath.html#method-c-acos-21","(z)","",null,1],["acosh","CMath","Rails/classes/CMath.html#method-c-acosh","(z)","<p>returns the inverse hyperbolic cosine of <code>z</code>\n",null,1],["acosh","Math","Rails/classes/Math.html#method-c-acosh","(p1)","<p>Computes the inverse hyperbolic cosine of <em>x</em>.\n",null,1],["acosh!","CMath","Rails/classes/CMath.html#method-c-acosh-21","(z)","",null,1],["acronym","ActiveSupport::Inflector::Inflections","Ruby/classes/ActiveSupport/Inflector/Inflections.html#method-i-acronym","(word)","<p>Specifies a new acronym. An acronym must be specified as it will appear in\na camelized string.  An underscore …\n",null,0],["action","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-c-action","(name, klass = ActionDispatch::Request)","<p>Return a rack endpoint for the given action. Memoize the endpoint, so\nmultiple calls into MyController.action …\n",null,0],["action_has_layout?","AbstractController::Layouts","Ruby/classes/AbstractController/Layouts.html#method-i-action_has_layout-3F","()","",null,0],["action_methods","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-c-action_methods","()","<p>A list of method names that should be considered actions. This includes all\npublic instance methods on …\n",null,0],["action_methods","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-i-action_methods","()","",null,0],["action_methods","AbstractController::UrlFor::ClassMethods","Ruby/classes/AbstractController/UrlFor/ClassMethods.html#method-i-action_methods","()","",null,0],["action_methods","ActionController::HideActions::ClassMethods","Ruby/classes/ActionController/HideActions/ClassMethods.html#method-i-action_methods","()","<p>Overrides AbstractController::Base#action_methods to remove any methods\nthat are listed as hidden methods. …\n",null,0],["activate","Gem","Rails/classes/Gem.html#method-c-activate","(dep, *requirements)","<p>Activates an installed gem matching <code>dep</code>.  The gem must satisfy\n<code>requirements</code>.\n<p>Returns true if the gem is …\n",null,1],["activate","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-activate","()","<p>Activate this spec, registering it as a loaded spec and adding it’s lib\npaths to $LOAD_PATH. Returns …\n",null,1],["activate","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-c-activate","(pc)","",null,1],["activate_dependencies","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-activate_dependencies","()","<p>Activate all unambiguously resolved runtime dependencies of this spec. Add\nany ambigous dependencies …\n",null,1],["active?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-active-3F","()","<p>Checks whether the connection to the database is still active. This\nincludes checking whether the database …\n",null,0],["active?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-active-3F","()","<p>CONNECTION MANAGEMENT ====================================\n",null,0],["active?","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-active-3F","()","<p>CONNECTION MANAGEMENT ====================================\n",null,0],["active?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-active-3F","()","<p>Is this connection alive and ready for queries?\n",null,0],["active?","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-active-3F","()","",null,1],["active?","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-active-3F","()","",null,1],["active?","Net::POP3","Rails/classes/Net/POP3.html#method-i-active-3F","()","",null,1],["active?","Net::POP3","Rails/classes/Net/POP3.html#method-i-active-3F","()","",null,1],["active?","Net::POP3","Rails/classes/Net/POP3.html#method-i-active-3F","()","",null,1],["active?","Net::POP3","Rails/classes/Net/POP3.html#method-i-active-3F","()","",null,1],["active?","Shell::BuiltInCommand","Rails/classes/Shell/BuiltInCommand.html#method-i-active-3F","()","",null,1],["active?","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-active-3F","()","",null,1],["active_authorizer","ActiveModel::MassAssignmentSecurity::ClassMethods","Ruby/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-active_authorizer","()","",null,0],["active_authorizers","ActiveModel::MassAssignmentSecurity::ClassMethods","Ruby/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-active_authorizers","()","",null,0],["active_connection?","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-active_connection-3F","()","<p>Is there an open connection that is being used for the current thread?\n",null,0],["active_connections?","ActiveRecord::ConnectionAdapters::ConnectionHandler","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-active_connections-3F","()","<p>Returns true if there are any active connections among the connection pools\nthat the ConnectionHandler …\n",null,0],["active_job?","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-active_job-3F","(job)","",null,1],["active_jobs","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-active_jobs","()","",null,1],["active_jobs_exist?","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-active_jobs_exist-3F","()","",null,1],["active_process_controllers","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-c-active_process_controllers","()","",null,1],["activerecord?","Build","Ruby/classes/Build.html#method-i-activerecord-3F","()","",null,0],["acts_like?","Object","Ruby/classes/Object.html#method-i-acts_like-3F","(duck)","<p>A duck-type assistant method. For example, Active Support extends Date to\ndefine an acts_like_date? method, …\n",null,0],["acts_like_date?","Date","Ruby/classes/Date.html#method-i-acts_like_date-3F","()","<p>Duck-types as a Date-like class. See Object#acts_like?.\n",null,0],["acts_like_date?","DateTime","Ruby/classes/DateTime.html#method-i-acts_like_date-3F","()","<p>Duck-types as a Date-like class. See Object#acts_like?.\n",null,0],["acts_like_string?","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-acts_like_string-3F","()","<p>Enable more predictable duck-typing on String-like classes. See\nObject#acts_like?.\n",null,0],["acts_like_string?","String","Ruby/classes/String.html#method-i-acts_like_string-3F","()","<p>Enable more predictable duck-typing on String-like classes. See\n<code>Object#acts_like?</code>.\n",null,0],["acts_like_time?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-acts_like_time-3F","()","<p>So that <code>self</code> <code>acts_like?(:time)</code>.\n",null,0],["acts_like_time?","DateTime","Ruby/classes/DateTime.html#method-i-acts_like_time-3F","()","<p>Duck-types as a Time-like class. See Object#acts_like?.\n",null,0],["acts_like_time?","Time","Ruby/classes/Time.html#method-i-acts_like_time-3F","()","<p>Duck-types as a Time-like class. See Object#acts_like?.\n",null,0],["adapter","Build","Ruby/classes/Build.html#method-i-adapter","()","",null,0],["adapter_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-adapter_name","()","<p>Returns the human-readable name of the adapter. Use mixed case - one can\nalways use downcase if needed. …\n",null,0],["adapter_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-adapter_name","()","<p>Returns ‘PostgreSQL’ as adapter name for identification purposes.\n",null,0],["add","ActionController::Renderers","Ruby/classes/ActionController/Renderers.html#method-c-add","(key, &block)","<p>Adds a new renderer to call within controller actions. A renderer is\ninvoked by passing its name as an …\n",null,0],["add","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-add","(attribute, message = nil, options = {})","<p>Adds <code>message</code> to the error messages on <code>attribute</code>.\nMore than one error can be added to the same <code>attribute</code> …\n",null,0],["add","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-add","(record)","",null,0],["add","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-i-add","(severity, message = nil, progname = nil, &block)","",null,0],["add","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-i-add","(severity, message = nil, progname = nil, &block)","",null,0],["add","Rails::Paths::Root","Ruby/classes/Rails/Paths/Root.html#method-i-add","(path, options={})","",null,0],["add","ACL::ACLList","Rails/classes/ACL/ACLList.html#method-i-add","(str)","<p>Adds <code>str</code> as an ACLEntry in this list\n",null,1],["add","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-i-add","()","<p>Returns a new Tms object whose times are the sum of the times for this Tms\nobject, plus the time required …\n",null,1],["add","BigDecimal","Rails/classes/BigDecimal.html#method-i-add","(p1, p2)","",null,1],["add","CompositePublisher","Rails/classes/CompositePublisher.html#method-i-add","(pub)","<p>Add a publisher to the composite.\n",null,1],["add","DRb::TimerIdConv::TimerHolder2","Rails/classes/DRb/TimerIdConv/TimerHolder2.html#method-i-add","(obj)","",null,1],["add","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-add","(*gemspecs)","<p>Adds <code>gemspecs</code> to the dependency list.\n",null,1],["add","Logger","Rails/classes/Logger.html#method-i-add","(severity, message = nil, progname = nil, &block)","<p>Synopsis\n\n<pre>Logger#add(severity, message = nil, progname = nil) { ... }</pre>\n<p>Args\n",null,1],["add","PrettyPrint::Text","Rails/classes/PrettyPrint/Text.html#method-i-add","(obj, width)","",null,1],["add","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-add","(k, v)","",null,1],["add","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-add","( attribute )","<p>Adds an attribute, overriding any existing attribute by the same name. \nNamespaces are significant.\n<p>attribute … &mdash; ",null,1],["add","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-add","(child)","",null,1],["add","REXML::Document","Rails/classes/REXML/Document.html#method-i-add","( child )","<p>We override this, because XMLDecls and DocTypes must go at the start of the\ndocument\n",null,1],["add","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-add","(element=nil)","<p>Adds an element\n<p>element &mdash; if supplied, is either an Element, String, or Source (see\nElement.initialize). …\n",null,1],["add","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-add","( object )","",null,1],["add","Rake::CompositePublisher","Rails/classes/Rake/CompositePublisher.html#method-i-add","(pub)","<p>Add a publisher to the composite.\n",null,1],["add","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-add","(*filenames)","",null,1],["add","Rinda::TupleBag::TupleBin","Rails/classes/Rinda/TupleBag/TupleBin.html#method-i-add","(tuple)","",null,1],["add","Set","Rails/classes/Set.html#method-i-add","(o)","<p>Adds the given object to the set and returns self.  Use <code>merge</code>\nto add many elements at once.\n",null,1],["add","ThreadGroup","Rails/classes/ThreadGroup.html#method-i-add","(p1)","<p>Adds the given <em>thread</em> to this group, removing it from any other\ngroup to which it may have previously …\n",null,1],["add","WEBrick::HTTPAuth::Htgroup","Rails/classes/WEBrick/HTTPAuth/Htgroup.html#method-i-add","(group, members)","<p>Add an Array of <code>members</code> to <code>group</code>\n",null,1],["add!","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-i-add-21","(&blk)","<p>An in-place version of #add.\n",null,1],["add?","Set","Rails/classes/Set.html#method-i-add-3F","(o)","<p>Adds the given object to the set and returns self.  If the object is\nalready in the set, returns nil. …\n",null,1],["add_alias","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-i-add_alias","(an_alias, context = nil)","<p>Adds <code>an_alias</code> as an alias for this method in\n<code>context</code>.\n",null,1],["add_alias","RDoc::Attr","Rails/classes/RDoc/Attr.html#method-i-add_alias","(an_alias, context)","<p>Add <code>an_alias</code> as an attribute in <code>context</code>.\n",null,1],["add_alias","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_alias","(an_alias)","<p>Adds <code>an_alias</code> that is automatically resolved\n",null,1],["add_alias","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-add_alias","(an_alias, context)","<p>Abstract method. Contexts in their building phase call this to register a\nnew alias for this known method/attribute. …\n",null,1],["add_alias","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-add_alias","(as)","<p>Records the parsing of an alias <code>as</code>.\n",null,1],["add_alias","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-add_alias","(an_alias)","<p>Adds <code>an_alias</code> to <code>Object</code> instead of\n<code>self</code>.\n",null,1],["add_also_in","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-add_also_in","(out, also_in)","<p>Adds paths for undocumented classes <code>also_in</code> to\n<code>out</code>\n",null,1],["add_attribute","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-add_attribute","(p1)","",null,1],["add_attribute","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_attribute","(attribute)","<p>Adds <code>attribute</code> if not already there. If it is (as method(s) or\nattribute), updates the comment if it …\n",null,1],["add_attribute","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-add_attribute","(attribute)","<p>Records the parsing of an attribute <code>attribute</code>\n",null,1],["add_attribute","REXML::Element","Rails/classes/REXML/Element.html#method-i-add_attribute","( key, value=nil )","<p>Adds an attribute to this element, overwriting any existing attribute by\nthe same name.\n<p>key &mdash; can be either …\n",null,1],["add_attributes","REXML::Element","Rails/classes/REXML/Element.html#method-i-add_attributes","(hash)","<p>Add multiple attributes to this element.\n<p>hash &mdash; is either a hash, or array of arrays\n\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">el</span>.<span class=\"ruby-identifier\">add_attributes</span>( {<span class=\"ruby-string\">&quot;name1&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;value1&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["add_authenticator","Net::IMAP","Rails/classes/Net/IMAP.html#method-c-add_authenticator","(auth_type, authenticator)","<p>Adds an authenticator for Net::IMAP#authenticate.  <code>auth_type</code>\nis the type of authentication this authenticator …\n",null,1],["add_bindir","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-add_bindir","(executables)","<p>Returns an array with bindir attached to each executable in the\n<code>executables</code> list\n",null,1],["add_bulk_threshold_option","Gem::LocalRemoteOptions","Rails/classes/Gem/LocalRemoteOptions.html#method-i-add_bulk_threshold_option","()","<p>Add the –bulk-threshold option\n",null,1],["add_cert","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-add_cert","(p1)","",null,1],["add_certid","OpenSSL::OCSP::Request","Rails/classes/OpenSSL/OCSP/Request.html#method-i-add_certid","(p1)","",null,1],["add_certificate","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-add_certificate","(p1)","",null,1],["add_class","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_class","(class_type, given_name, superclass = '::Object')","<p>Adds a class named <code>given_name</code> with <code>superclass</code>.\n<p>Both <code>given_name</code> and <code>superclass</code> may contain ‘::’,\nand are …\n",null,1],["add_class","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-add_class","(out, name, classes)","<p>Adds a class header to <code>out</code> for class <code>name</code> which\nis described in <code>classes</code>.\n",null,1],["add_class","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-add_class","(klass)","<p>Records the parsing of a class <code>klass</code>\n",null,1],["add_class_or_module","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_class_or_module","(mod, self_hash, all_hash)","<p>Adds the class or module <code>mod</code> to the modules or classes Hash\n<code>self_hash</code>, and to <code>all_hash</code> (either\n<code>TopLevel::modules_hash</code> …\n",null,1],["add_clear_sources_option","Gem::LocalRemoteOptions","Rails/classes/Gem/LocalRemoteOptions.html#method-i-add_clear_sources_option","()","<p>Add the –clear-sources option\n",null,1],["add_column","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_column","(table_name, column_name, type, options = {})","",null,0],["add_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-add_column","(table_name, column_name, type, options = {})","<p>Adds a new column to the named table. See TableDefinition#column for\ndetails of the options you can use. …\n",null,0],["add_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column","(table_name, column_name, type, options = {})","<p>Adds a new column to the named table. See TableDefinition#column for\ndetails of the options you can use. …\n",null,0],["add_column_position!","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_column_position-21","(sql, options)","",null,0],["add_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_column_sql","(table_name, column_name, type, options = {})","",null,0],["add_comment","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-add_comment","(comment, location)","<p>Adds <code>comment</code> to this ClassModule’s list of comments at\n<code>location</code>.  This method is preferred over #comment= …\n",null,1],["add_common_option","Gem::Command","Rails/classes/Gem/Command.html#method-c-add_common_option","(*args, &handler)","",null,1],["add_constant","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_constant","(constant)","<p>Adds <code>constant</code> if not already there. If it is, updates the\ncomment, value and/or is_alias_for of the known …\n",null,1],["add_constant","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-add_constant","(constant)","<p>Records the parsing of <code>constant</code>\n",null,1],["add_constant","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-add_constant","(constant)","<p>Adds <code>constant</code> to <code>Object</code> instead of\n<code>self</code>.\n",null,1],["add_crl","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-add_crl","(p1)","",null,1],["add_crl","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-add_crl","(p1)","",null,1],["add_data","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-add_data","(p1)","",null,1],["add_date","Gem::Server","Rails/classes/Gem/Server.html#method-i-add_date","(res)","",null,1],["add_delegate_command_to_shell","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-add_delegate_command_to_shell","(id)","",null,1],["add_delivery_method","ActionMailer::DeliveryMethods::ClassMethods","Ruby/classes/ActionMailer/DeliveryMethods/ClassMethods.html#method-i-add_delivery_method","(symbol, klass, default_options={})","<p>Adds a new delivery method through the given class using the given symbol\nas alias and the default options …\n",null,0],["add_dependency","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-add_dependency","(gem, *requirements)","",null,1],["add_description","Rake::Task","Rails/classes/Rake/Task.html#method-i-add_description","(description)","<p>Add a description to the task.  The description can consist of an option\nargument list (enclosed brackets) …\n",null,1],["add_development_dependency","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-add_development_dependency","(gem, *requirements)","<p>Adds a development dependency named <code>gem</code> with\n<code>requirements</code> to this Gem.  For example:\n\n<pre>spec.add_development_dependency ...</pre>\n",null,1],["add_element","REXML::Document","Rails/classes/REXML/Document.html#method-i-add_element","(arg=nil, arg2=nil)","",null,1],["add_element","REXML::Element","Rails/classes/REXML/Element.html#method-i-add_element","(element, attrs=nil)","<p>Adds a child to this element, optionally setting attributes in the element.\n<p>element &mdash; optional.  If Element …\n",null,1],["add_entry","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-i-add_entry","(p1, p2, p3 = v3)","",null,1],["add_event_to_arry","REXML::Validation::Choice","Rails/classes/REXML/Validation/Choice.html#method-i-add_event_to_arry","( arry, evt )","",null,1],["add_event_to_arry","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-i-add_event_to_arry","( arry, evt )","",null,1],["add_expr","ActionView::Template::Handlers::Erubis","Ruby/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_expr","(src, code, indicator)","<p>Erubis toggles &lt;%= and &lt;%== behavior when escaping is enabled. We\noverride to always treat &lt;%== …\n",null,0],["add_expr_escaped","ActionView::Template::Handlers::Erubis","Ruby/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_expr_escaped","(src, code)","",null,0],["add_expr_literal","ActionView::Template::Handlers::Erubis","Ruby/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_expr_literal","(src, code)","",null,0],["add_extension","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-add_extension","(p1)","",null,1],["add_extension","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-add_extension","(p1)","",null,1],["add_extension","OpenSSL::X509::Revoked","Rails/classes/OpenSSL/X509/Revoked.html#method-i-add_extension","(p1)","",null,1],["add_extra_args","Gem::Command","Rails/classes/Gem/Command.html#method-i-add_extra_args","(args)","<p>Adds extra args from ~/.gemrc\n",null,1],["add_field","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-add_field","(key, val)","<p>Ruby 1.8.3 &mdash; Adds a value to a named header field, instead of replacing its value.\nSecond argument <code>val</code> …\n",null,1],["add_file","Gem::Package::TarWriter","Rails/classes/Gem/Package/TarWriter.html#method-i-add_file","(name, mode)","<p>Adds file <code>name</code> with permissions <code>mode</code>, and yields\nan IO for writing the file to\n",null,1],["add_file","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-add_file","(p1)","",null,1],["add_file","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-add_file","(file)","<p>Records the parsing of <code>file</code>\n",null,1],["add_file_simple","Gem::Package::TarWriter","Rails/classes/Gem/Package/TarWriter.html#method-i-add_file_simple","(name, mode, size)","<p>Add file <code>name</code> with permissions <code>mode</code>\n<code>size</code> bytes long.  Yields an IO to write the file to.\n",null,1],["add_filter","ActiveSupport::BacktraceCleaner","Ruby/classes/ActiveSupport/BacktraceCleaner.html#method-i-add_filter","(&block)","<p>Adds a filter from the block provided. Each line in the backtrace will be\nmapped against this filter. …\n",null,0],["add_filter","Tracer","Rails/classes/Tracer.html#method-c-add_filter","(p = proc)","<p>Used to filter unwanted trace output\n<p>Example which only outputs lines of code executed within the Kernel …\n",null,1],["add_found_dependencies","Gem::DependencyInstaller","Rails/classes/Gem/DependencyInstaller.html#method-i-add_found_dependencies","(to_do, dependency_list)","",null,1],["add_from","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-add_from","(out, store)","<p>Adds “(from …)” to <code>out</code> for <code>store</code>\n",null,1],["add_gem_contents","Gem::Package::TarOutput","Rails/classes/Gem/Package/TarOutput.html#method-i-add_gem_contents","()","<p>Yields a TarWriter for the data.tar.gz inside a gem-format tar file. The\nyielded TarWriter has been extended …\n",null,1],["add_generator","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-c-add_generator","(klass)","<p>Add <code>klass</code> that can generate output after parsing\n",null,1],["add_handler","WEBrick::HTTPServlet::FileHandler","Rails/classes/WEBrick/HTTPServlet/FileHandler.html#method-c-add_handler","(suffix, handler)","<p>Allow custom handling of requests for files with <code>suffix</code> by\nclass <code>handler</code>\n",null,1],["add_handler","XMLRPC::BasicServer","Rails/classes/XMLRPC/BasicServer.html#method-i-add_handler","(prefix, obj_or_signature=nil, help=nil, &block)","",null,1],["add_have_children_element","RSS::Element","Rails/classes/RSS/Element.html#method-c-add_have_children_element","(variable_name, plural_name)","",null,1],["add_html","RDoc::Markup","Rails/classes/RDoc/Markup.html#method-i-add_html","(tag, name)","<p>Add to the sequences recognized as general markup.\n",null,1],["add_html","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-add_html","(tag, name)","<p>Adds a markup class with <code>name</code> for words surrounded by HTML tag\n<code>tag</code>. To process emphasis tags:\n\n<pre>am.add_html ...</pre>\n",null,1],["add_import","Rake::Application","Rails/classes/Rake/Application.html#method-i-add_import","(fn)","<p>Add a file to the list of files to be imported.\n",null,1],["add_include","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_include","(include)","<p>Adds included module <code>include</code> which should be an RDoc::Include\n",null,1],["add_include","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-add_include","(include)","<p>Adds <code>include</code> to <code>Object</code> instead of\n<code>self</code>.\n",null,1],["add_includes","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-add_includes","(out, includes)","<p>Adds <code>includes</code> to <code>out</code>\n",null,1],["add_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index","(table_name, column_name, options = {})","<p>Adds a new index to the table. <code>column_name</code> can be a single\nSymbol, or an Array of Symbols.\n<p>The index will …\n",null,0],["add_index_length","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_index_length","(option_strings, column_names, options = {})","",null,0],["add_index_options","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index_options","(table_name, column_name, options = {})","",null,0],["add_index_sort_order","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index_sort_order","(option_strings, column_names, options = {})","",null,0],["add_index_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_index_sql","(table_name, column_name, options = {})","",null,0],["add_install_update_options","Gem::InstallUpdateOptions","Rails/classes/Gem/InstallUpdateOptions.html#method-i-add_install_update_options","()","<p>Add the install/update options to the option parser.\n",null,1],["add_introspection","XMLRPC::BasicServer","Rails/classes/XMLRPC/BasicServer.html#method-i-add_introspection","()","",null,1],["add_key_option","Gem::GemcutterUtilities","Rails/classes/Gem/GemcutterUtilities.html#method-i-add_key_option","()","<p>Add the –key option\n",null,1],["add_line_numbers","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-i-add_line_numbers","(src)","<p>Prepend <code>src</code> with line numbers.  Relies on the first line of a\nsource code listing having:\n\n<pre># File xxxxx, ...</pre>\n",null,1],["add_listener","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-add_listener","( listener )","",null,1],["add_listener","REXML::Parsers::LightParser","Rails/classes/REXML/Parsers/LightParser.html#method-i-add_listener","( listener )","",null,1],["add_listener","REXML::Parsers::PullParser","Rails/classes/REXML/Parsers/PullParser.html#method-i-add_listener","( listener )","",null,1],["add_listener","REXML::Parsers::SAX2Parser","Rails/classes/REXML/Parsers/SAX2Parser.html#method-i-add_listener","( listener )","",null,1],["add_listener","REXML::Parsers::StreamParser","Rails/classes/REXML/Parsers/StreamParser.html#method-i-add_listener","( listener )","",null,1],["add_listener","REXML::Parsers::TreeParser","Rails/classes/REXML/Parsers/TreeParser.html#method-i-add_listener","( listener )","",null,1],["add_listener","REXML::Parsers::UltraLightParser","Rails/classes/REXML/Parsers/UltraLightParser.html#method-i-add_listener","( listener )","",null,1],["add_loader","Rake::Application","Rails/classes/Rake/Application.html#method-i-add_loader","(ext, loader)","<p>Add a loader to handle imported files ending in the extension\n<code>ext</code>.\n",null,1],["add_local_remote_options","Gem::LocalRemoteOptions","Rails/classes/Gem/LocalRemoteOptions.html#method-i-add_local_remote_options","()","<p>Add local/remote options to the command line parser.\n",null,1],["add_maker","RSS::Maker","Rails/classes/RSS/Maker.html#method-c-add_maker","(version, normalized_version, maker)","",null,1],["add_metadata","Gem::Package::TarOutput","Rails/classes/Gem/Package/TarOutput.html#method-i-add_metadata","()","<p>Adds metadata.gz to the gem-format tar file which was saved from a previous\n#add_gem_contents call.\n",null,1],["add_method","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_method","(method)","<p>Adds <code>method</code> if not already there. If it is (as method or\nattribute), updates the comment if it was empty. …\n",null,1],["add_method","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-add_method","(method)","<p>Records the parsing of <code>method</code>\n",null,1],["add_method","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-add_method","(method)","<p>Adds <code>method</code> to <code>Object</code> instead of\n<code>self</code>.\n",null,1],["add_method","XMLRPC::Service::BasicInterface","Rails/classes/XMLRPC/Service/BasicInterface.html#method-i-add_method","(sig, help=nil, meth_name=nil)","",null,1],["add_method_list","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-add_method_list","(out, methods, name)","<p>Adds a list of <code>methods</code> to <code>out</code> with a heading of\n<code>name</code>\n",null,1],["add_module","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_module","(class_type, name)","<p>Adds a module named <code>name</code>.  If RDoc already knows\n<code>name</code> is a class then that class is returned instead. …\n",null,1],["add_module","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-add_module","(mod)","<p>Records the parsing of a module <code>mod</code>\n",null,1],["add_module_alias","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_module_alias","(from, name, file)","<p>Adds an alias from <code>from</code> (a class or module) to\n<code>name</code> which was defined in <code>file</code>.\n",null,1],["add_multicall","XMLRPC::BasicServer","Rails/classes/XMLRPC/BasicServer.html#method-i-add_multicall","()","",null,1],["add_namespace","REXML::Element","Rails/classes/REXML/Element.html#method-i-add_namespace","( prefix, uri=nil )","<p>Adds a namespace to this element.\n<p>prefix &mdash; the prefix string, or the namespace URI if <code>uri</code> is not supplied\n…\n",null,1],["add_need_initialize_variable","RSS::Element","Rails/classes/RSS/Element.html#method-c-add_need_initialize_variable","(variable_name)","",null,1],["add_need_initialize_variable","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-add_need_initialize_variable","(variable_name, init_value=nil, &init_block)","",null,1],["add_nonce","OpenSSL::OCSP::BasicResponse","Rails/classes/OpenSSL/OCSP/BasicResponse.html#method-i-add_nonce","(p1 = v1)","",null,1],["add_nonce","OpenSSL::OCSP::Request","Rails/classes/OpenSSL/OCSP/Request.html#method-i-add_nonce","(p1 = v1)","",null,1],["add_observer","ActiveModel::Observing::ClassMethods","Ruby/classes/ActiveModel/Observing/ClassMethods.html#method-i-add_observer","(observer)","<p>Add a new observer to the pool. The new observer needs to respond to\n‘update’, otherwise it raises an …\n",null,0],["add_observer","Observable","Rails/classes/Observable.html#method-i-add_observer","(observer, func=:update)","<p>Add <code>observer</code> as an observer on this object. so that it will\nreceive notifications.\n<p><code>observer</code> &mdash; the object …\n",null,1],["add_observer!","ActiveRecord::Observer","Ruby/classes/ActiveRecord/Observer.html#method-i-add_observer-21","(klass)","",null,0],["add_on_blank","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-add_on_blank","(attributes, options = {})","<p>Will add an error message to each of the attributes in\n<code>attributes</code> that is blank (using Object#blank? …\n",null,0],["add_on_empty","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-add_on_empty","(attributes, options = {})","<p>Will add an error message to each of the attributes in\n<code>attributes</code> that is empty.\n",null,0],["add_option","Gem::Command","Rails/classes/Gem/Command.html#method-i-add_option","(*opts)","<p>Add a command-line option and handler to the command.\n<p>See OptionParser#make_switch for an explanation …\n",null,1],["add_other_element","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-add_other_element","(variable_name)","",null,1],["add_owners","Gem::Commands::OwnerCommand","Rails/classes/Gem/Commands/OwnerCommand.html#method-i-add_owners","(name, owners)","",null,1],["add_path","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-add_path","(p1)","",null,1],["add_platform","Gem::PlatformMismatch","Rails/classes/Gem/PlatformMismatch.html#method-i-add_platform","(platform)","",null,1],["add_platform_option","Gem::VersionOption","Rails/classes/Gem/VersionOption.html#method-i-add_platform_option","(task = command, *wrap)","<p>Add the –platform option to the option parser.\n",null,1],["add_plural_form","RSS::Element","Rails/classes/RSS/Element.html#method-c-add_plural_form","(singular, plural)","",null,1],["add_postamble","ActionView::Template::Handlers::Erubis","Ruby/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_postamble","(src)","",null,0],["add_preamble","ActionView::Template::Handlers::Erubis","Ruby/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_preamble","(src)","",null,0],["add_prerelease_option","Gem::VersionOption","Rails/classes/Gem/VersionOption.html#method-i-add_prerelease_option","(*wrap)","<p>Add the –prerelease option to the option parser.\n",null,1],["add_private_type","Psych","Rails/classes/Psych.html#method-c-add_private_type","(type_tag, &block)","",null,1],["add_protocol","DRb::DRbProtocol","Rails/classes/DRb/DRbProtocol.html#method-c-add_protocol","(prot)","<p>Add a new protocol to the DRbProtocol module.\n",null,1],["add_proxy_option","Gem::LocalRemoteOptions","Rails/classes/Gem/LocalRemoteOptions.html#method-i-add_proxy_option","()","<p>Add the –http-proxy option\n",null,1],["add_recipient","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-add_recipient","(p1)","",null,1],["add_renderer","ActionController","Ruby/classes/ActionController.html#method-c-add_renderer","(key, &block)","<p>See <code>Renderers.add</code>\n",null,0],["add_require","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_require","(require)","<p>Adds <code>require</code> to this context’s top level\n",null,1],["add_resource_route","Rails::Generators::ResourceRouteGenerator","Ruby/classes/Rails/Generators/ResourceRouteGenerator.html#method-i-add_resource_route","()","<p>Properly nests namespaces passed into a generator\n\n<pre>$ rails generate resource admin/users/products</pre>\n<p>should …\n",null,0],["add_response_handler","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-add_response_handler","(handler = Proc.new)","<p>Adds a response handler. For example, to detect when the server sends us a\nnew EXISTS response (which …\n",null,1],["add_revoked","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-add_revoked","(p1)","",null,1],["add_routes","Rails::Generators::ControllerGenerator","Ruby/classes/Rails/Generators/ControllerGenerator.html#method-i-add_routes","()","",null,0],["add_row","CSV","Rails/classes/CSV.html#method-i-add_row","(row)","",null,1],["add_ruby_type","Psych","Rails/classes/Psych.html#method-c-add_ruby_type","(type_tag, &block)","",null,1],["add_rubygems_trusted_certs","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-add_rubygems_trusted_certs","(store)","",null,1],["add_runtime_dependency","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-add_runtime_dependency","(gem, *requirements)","<p>Adds a runtime dependency named <code>gem</code> with\n<code>requirements</code> to this Gem. For example:\n\n<pre>spec.add_runtime_dependency ...</pre>\n",null,1],["add_schedule","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-add_schedule","(command)","<p>schedule a command\n",null,1],["add_section","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_section","(title, comment)","<p>Returns a section with <code>title</code>, creating it if it doesn’t\nalready exist. <code>comment</code> will be appended to the …\n",null,1],["add_self_to_load_path","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-add_self_to_load_path","()","<p>Adds this spec’s require paths to LOAD_PATH, in the proper location.\n",null,1],["add_shared_options_for","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-c-add_shared_options_for","(name)","",null,0],["add_shebang_option!","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-add_shebang_option-21","()","<p>Small macro to add ruby as an option to the generator with proper default\nvalue plus an instance helper …\n",null,0],["add_signatures","Gem::Package::TarOutput","Rails/classes/Gem/Package/TarOutput.html#method-i-add_signatures","()","<p>Adds data.tar.gz.sig and metadata.gz.sig to the gem-format tar files if a\nGem::Security::Signer was sent …\n",null,1],["add_signer","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-add_signer","(p1)","",null,1],["add_silencer","ActiveSupport::BacktraceCleaner","Ruby/classes/ActiveSupport/BacktraceCleaner.html#method-i-add_silencer","(&block)","<p>Adds a silencer from the block provided. If the silencer returns true for a\ngiven line, it will be excluded …\n",null,0],["add_source","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-add_source","(source, options={})","<p>Add the given source to Gemfile\n<p>Example\n\n<pre>add_source &quot;http://gems.github.com/&quot;</pre>\n",null,0],["add_source_option","Gem::LocalRemoteOptions","Rails/classes/Gem/LocalRemoteOptions.html#method-i-add_source_option","()","<p>Add the –source option\n",null,1],["add_spec","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-add_spec","(gem_spec, name = gem_spec.full_name)","<p>Add a gem specification to the source index.\n",null,1],["add_spec","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-add_spec","(spec)","<p>Adds <code>spec</code> to the known specifications, keeping the collection\nproperly sorted.\n",null,1],["add_special","RDoc::Markup","Rails/classes/RDoc/Markup.html#method-i-add_special","(pattern, name)","<p>Add to other inline sequences.  For example, we could add WikiWords using\nsomething like:\n\n<pre>parser.add_special(/\\b([A-Z][a-z]+[A-Z]\\w+)/, ...</pre>\n",null,1],["add_special","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-add_special","(pattern, name)","<p>Adds a special handler for <code>pattern</code> with <code>name</code>.  A\nsimple URL handler would be:\n\n<pre>@am.add_special(/((https?:)\\S+\\w)/, ...</pre>\n",null,1],["add_specific_extra_args","Gem::Command","Rails/classes/Gem/Command.html#method-c-add_specific_extra_args","(cmd,args)","<p>Add a list of extra arguments for the given command.  <code>args</code> may\nbe an array or a string to be split on …\n",null,1],["add_specs","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-add_specs","(*gem_specs)","<p>Add gem specifications to the source index.\n",null,1],["add_specs","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-add_specs","(*specs)","<p>Adds multiple specs to the known specifications.\n",null,1],["add_status","OpenSSL::OCSP::BasicResponse","Rails/classes/OpenSSL/OCSP/BasicResponse.html#method-i-add_status","(p1, p2, p3, p4, p5, p6, p7)","",null,1],["add_tag","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-add_tag","(name, start, stop)","<p>Add a new set of tags for an attribute. We allow separate start and end\ntags for flexibility\n",null,1],["add_target","Rake::RuleRecursionOverflowError","Rails/classes/Rake/RuleRecursionOverflowError.html#method-i-add_target","(target)","",null,1],["add_text","ActionView::Template::Handlers::Erubis","Ruby/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_text","(src, text)","",null,0],["add_text","REXML::Element","Rails/classes/REXML/Element.html#method-i-add_text","( text )","<p>A helper method to add a Text child.  Actual Text instances can be added\nwith regular Parent methods, …\n",null,1],["add_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_timestamps","(table_name)","<p>Adds timestamps (created_at and updated_at) columns to the named table.\n<p>Examples\n\n<pre>add_timestamps(:suppliers)</pre>\n",null,0],["add_timestamps_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_timestamps_sql","(table_name)","",null,0],["add_to","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-add_to","(array, thing)","<p>Adds <code>thing</code> to the collection <code>array</code>\n",null,1],["add_to_classes_or_modules","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-add_to_classes_or_modules","(mod)","<p>Adds class or module <code>mod</code>. Used in the building phase by the\nruby parser.\n",null,1],["add_to_element_method","RSS::Element","Rails/classes/RSS/Element.html#method-c-add_to_element_method","(method_name)","",null,1],["add_to_transaction","ActiveRecord::Transactions","Ruby/classes/ActiveRecord/Transactions.html#method-i-add_to_transaction","()","<p>Add the record to the current transaction so that the :after_rollback and\n:after_commit callbacks can …\n",null,0],["add_token","RDoc::TokenStream","Rails/classes/RDoc/TokenStream.html#method-i-add_token","(*tokens)","",null,1],["add_token_listener","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-add_token_listener","(obj)","<p>Adds a token listener <code>obj</code>, but you should probably use\ntoken_listener\n",null,1],["add_tokens","RDoc::TokenStream","Rails/classes/RDoc/TokenStream.html#method-i-add_tokens","(*tokens)","<p>Adds <code>tokens</code> to the collected tokens\n",null,1],["add_trace_func","Thread","Rails/classes/Thread.html#method-i-add_trace_func","(p1)","<p>Adds <em>proc</em> as a handler for tracing. See\n<code>Thread#set_trace_func</code> and <code>set_trace_func</code>.\n",null,1],["add_transaction_record","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-add_transaction_record","(record)","<p>Register a record with the current transaction so that its after_commit and\nafter_rollback callbacks …\n",null,0],["add_trusted_cert","Gem::Security","Rails/classes/Gem/Security.html#method-c-add_trusted_cert","(cert, opt = {})","<p>Add certificate to trusted cert list.\n<p>Note: At the moment these are stored in OPT, although that directory …\n",null,1],["add_update_sources_option","Gem::LocalRemoteOptions","Rails/classes/Gem/LocalRemoteOptions.html#method-i-add_update_sources_option","()","<p>Add the –update-sources option\n",null,1],["add_value","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-add_value","(section, key, value)","",null,1],["add_version_option","Gem::VersionOption","Rails/classes/Gem/VersionOption.html#method-i-add_version_option","(task = command, *wrap)","<p>Add the –version option to the option parser.\n",null,1],["add_whiner","NilClass","Ruby/classes/NilClass.html#method-c-add_whiner","(klass)","",null,0],["add_word_pair","RDoc::Markup","Rails/classes/RDoc/Markup.html#method-i-add_word_pair","(start, stop, name)","<p>Add to the sequences used to add formatting to an individual word (such as\n<strong>bold</strong>).  Matching entries will …\n",null,1],["add_word_pair","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-add_word_pair","(start, stop, name)","<p>Adds a markup class with <code>name</code> for words wrapped in the\n<code>start</code> and <code>stop</code> character.  To make words wrapped\n…\n",null,1],["addch","Curses","Rails/classes/Curses.html#method-c-addch","(p1)","<p>Add a character <code>ch</code>, with attributes, then advance the cursor.\n<p>see also the system manual for curs_addch …\n",null,1],["addch","Curses::Window","Rails/classes/Curses/Window.html#method-i-addch","(p1)","<p>Add a character <code>ch</code>, with attributes, to the window, then\nadvance the cursor.\n<p>see also the system manual …\n",null,1],["added?","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-added-3F","(attribute, message = nil, options = {})","<p>Returns true if an error on the attribute with the given message is\npresent, false otherwise. <code>message</code> …\n",null,0],["addr","IPSocket","Rails/classes/IPSocket.html#method-i-addr","(*args)","<p>Returns the local address as an array which contains address_family, port,\nhostname and numeric_address. …\n",null,1],["addr","OpenSSL::SSL::SocketForwarder","Rails/classes/OpenSSL/SSL/SocketForwarder.html#method-i-addr","()","",null,1],["addr","UNIXSocket","Rails/classes/UNIXSocket.html#method-i-addr","()","<p>Returns the local address as an array which contains address_family and\nunix_path.\n<p>Example\n\n<pre>serv = UNIXServer.new(&quot;/tmp/sock&quot;) ...</pre>\n",null,1],["addr","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-addr","()","",null,1],["addstr","Curses","Rails/classes/Curses.html#method-c-addstr","(p1)","<p>add a string of characters <code>str</code>, to the window and advance\ncursor\n",null,1],["addstr","Curses::Window","Rails/classes/Curses/Window.html#method-i-addstr","(p1)","<p>add a string of characters <code>str</code>, to the window and advance\ncursor\n",null,1],["adler","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-adler","()","<p>Returns the adler-32 checksum.\n",null,1],["adler32","Zlib","Rails/classes/Zlib.html#method-c-adler32","(*args)","<p>Calculates Adler-32 checksum for <code>string</code>, and returns updated\nvalue of <code>adler</code>. If <code>string</code> is omitted, it …\n",null,1],["adler32_combine","Zlib","Rails/classes/Zlib.html#method-c-adler32_combine","(p1, p2, p3)","<p>Combine two Adler-32 check values in to one.  <code>alder1</code> is the\nfirst Adler-32 value, <code>adler2</code> is the second …\n",null,1],["advance","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-advance","(options)","",null,0],["advance","Date","Ruby/classes/Date.html#method-i-advance","(options)","<p>Provides precise Date calculations for years, months, and days. The\n<code>options</code> parameter takes a hash with …\n",null,0],["advance","DateTime","Ruby/classes/DateTime.html#method-i-advance","(options)","<p>Uses Date to provide precise Time calculations for years, months, and days.\nThe <code>options</code> parameter takes …\n",null,0],["advance","Time","Ruby/classes/Time.html#method-i-advance","(options)","<p>Uses Date to provide precise Time calculations for years, months, and days.\nThe <code>options</code> parameter takes …\n",null,0],["advise","IO","Rails/classes/IO.html#method-i-advise","(p1, p2 = v2, p3 = v3)","\n<pre>Announce an intention to access data from the current file in a\nspecific pattern. On platforms that do ...</pre>\n",null,1],["afamily","Addrinfo","Rails/classes/Addrinfo.html#method-i-afamily","()","<p>returns the address family as an integer.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">tcp</span>(<span class=\"ruby-string\">&quot;localhost&quot;</span>, <span class=\"ruby-value\">80</span>).<span class=\"ruby-identifier\">afamily</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-constant\">Socket</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">AF_INET</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["after","ActionDispatch::Callbacks","Ruby/classes/ActionDispatch/Callbacks.html#method-c-after","(*args, &block)","",null,0],["after","Rails::Initializable::Initializer","Ruby/classes/Rails/Initializable/Initializer.html#method-i-after","()","",null,0],["after_commit","ActiveRecord::Transactions::ClassMethods","Ruby/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_commit","(*args, &block)","<p>This callback is called after a record has been created, updated, or\ndestroyed.\n<p>You can specify that the …\n",null,0],["after_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-after_filter","","<p>Append an after filter. See _insert_callbacks for parameter details.\n",null,0],["after_initialize","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-after_initialize","(&block)","<p>Last configurable block to run. Called after frameworks initialize.\n",null,0],["after_rollback","ActiveRecord::Transactions::ClassMethods","Ruby/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_rollback","(*args, &block)","<p>This callback is called after a create, update, or destroy are rolled back.\n<p>Please check the documentation …\n",null,0],["after_validation","ActiveModel::Validations::Callbacks::ClassMethods","Ruby/classes/ActiveModel/Validations/Callbacks/ClassMethods.html#method-i-after_validation","(*args, &block)","",null,0],["ago","ActiveSupport::Duration","Ruby/classes/ActiveSupport/Duration.html#method-i-ago","(time = ::Time.current)","<p>Calculates a new Time or Date that is as far in the past as this Duration\nrepresents.\n",null,0],["ago","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-ago","(other)","",null,0],["ago","Date","Ruby/classes/Date.html#method-i-ago","(seconds)","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the beginning of the …\n",null,0],["ago","DateTime","Ruby/classes/DateTime.html#method-i-ago","(seconds)","<p>Returns a new DateTime representing the time a number of seconds ago Do not\nuse this method in combination …\n",null,0],["ago","Numeric","Ruby/classes/Numeric.html#method-i-ago","(time = ::Time.current)","<p>Reads best without arguments:  10.minutes.ago\n",null,0],["ago","Time","Ruby/classes/Time.html#method-i-ago","(seconds)","<p>Returns a new Time representing the time a number of seconds ago, this is\nbasically a wrapper around …\n",null,0],["ajd","Date","Rails/classes/Date.html#method-i-ajd","()","<p>Returns the astronomical Julian day number.  This is a fractional number,\nwhich is not adjusted by the …\n",null,1],["alert","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-alert","()","<p>Convenience accessor for flash\n",null,0],["alert","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-alert","(statement, question=nil)","<p>Display an informational alert.  Will ask <code>question</code> if it is\nnot nil.\n",null,1],["alert","Gem::UserInteraction","Rails/classes/Gem/UserInteraction.html#method-i-alert","(*args)","",null,1],["alert=","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-alert-3D","(message)","<p>Convenience accessor for flash=\n",null,0],["alert_error","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-alert_error","(statement, question=nil)","<p>Display an error message in a location expected to get error messages. Will\nask <code>question</code> if it is not …\n",null,1],["alert_error","Gem::UserInteraction","Rails/classes/Gem/UserInteraction.html#method-i-alert_error","(*args)","",null,1],["alert_warning","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-alert_warning","(statement, question=nil)","<p>Display a warning in a location expected to get error messages.  Will ask\n<code>question</code> if it is not nil. …\n",null,1],["alert_warning","Gem::UserInteraction","Rails/classes/Gem/UserInteraction.html#method-i-alert_warning","(*args)","",null,1],["alias","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-alias","(p1)","<p>Emit an alias with <code>anchor</code>.\n<p>See Psych::Handler#alias\n",null,1],["alias","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-alias","(anchor)","<p>Called when an alias is found to <code>anchor</code>.  <code>anchor</code>\nwill be the name of the anchor found.\n<p>Example\n<p>Here we …\n",null,1],["alias","Psych::TreeBuilder","Rails/classes/Psych/TreeBuilder.html#method-i-alias","(anchor)","",null,1],["alias_attribute","ActiveModel::AttributeMethods::ClassMethods","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-alias_attribute","(new_name, old_name)","",null,0],["alias_attribute","Module","Ruby/classes/Module.html#method-i-alias_attribute","(new_name, old_name)","<p>Allows you to make aliases for attributes, which includes getter, setter,\nand query methods.\n<p>Example: …\n",null,0],["alias_command","Shell","Rails/classes/Shell.html#method-c-alias_command","(ali, command, *opts, &block)","",null,1],["alias_command","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-alias_command","(ali, command, *opts, &block)","",null,1],["alias_extension","RDoc::Parser","Rails/classes/RDoc/Parser.html#method-c-alias_extension","(old_ext, new_ext)","<p>Alias an extension to another extension. After this call, files ending\n“new_ext” will be parsed …\n",null,1],["alias_map","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-alias_map","()","",null,1],["alias_method_chain","Module","Ruby/classes/Module.html#method-i-alias_method_chain","(target, feature)","<p>Encapsulates the common pattern of:\n\n<pre>alias_method :foo_without_feature, :foo\nalias_method :foo, :foo_with_feature</pre>\n",null,0],["aliased_path_for","Sprockets::StaticCompiler","Ruby/classes/Sprockets/StaticCompiler.html#method-i-aliased_path_for","(logical_path)","",null,0],["aliases","Encoding","Rails/classes/Encoding.html#method-c-aliases","()","<p>Returns the hash of available encoding alias and original encoding name.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span>.<span class=\"ruby-identifier\">aliases</span>\n<span class=\"ruby-comment\">#=&gt; {&quot;BINARY&quot;=&gt;&quot;ASCII-8BIT&quot;, ...</span>\n</pre>\n",null,1],["alien","Gem::Validator","Rails/classes/Gem/Validator.html#method-i-alien","(gems=[])","<p>Checks the gem directory for the following potential\ninconsistencies/problems:\n<p>Checksum gem itself\n<p>For …\n",null,1],["align","DL::PackInfo","Rails/classes/DL/PackInfo.html#method-c-align","(addr, align)","",null,1],["alive?","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-i-alive-3F","()","<p>Is this server alive?\n",null,1],["alive?","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-i-alive-3F","()","<p>Check to see if this connection is alive.\n",null,1],["alive?","DRb::ExtServ","Rails/classes/DRb/ExtServ.html#method-i-alive-3F","()","",null,1],["alive?","Fiber","Rails/classes/Fiber.html#method-i-alive-3F","()","<p>Returns true if the fiber can still be resumed (or transferred to). After\nfinishing execution of the …\n",null,1],["alive?","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-alive-3F","()","<p>A TupleEntry is dead when it is canceled or expired.\n",null,1],["alive?","Thread","Rails/classes/Thread.html#method-i-alive-3F","()","<p>Returns <code>true</code> if <em>thr</em> is running or sleeping.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">thr</span> = <span class=\"ruby-constant\">Thread</span>.<span class=\"ruby-identifier\">new</span> { }\n<span class=\"ruby-identifier\">thr</span>.<span class=\"ruby-identifier\">join</span>                <span class=\"ruby-comment\">#=&gt; #&lt;Thread:0x401b3fb0 ...</span>\n</pre>\n",null,1],["all","ActionMailer::Collector","Ruby/classes/ActionMailer/Collector.html#method-i-all","(*args, &block)","",null,0],["all","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-all","(*args)","<p>A convenience wrapper for <code>find(:all, *args)</code>. You can pass in\nall the same arguments to this method as …\n",null,0],["all","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-all","(*args)","<p>This is an alias for find(:all).  You can pass in all the same arguments to\nthis method as you can to …\n",null,0],["all","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-c-all","()","<p>Return an array of all TimeZone objects. There are multiple TimeZone\nobjects per time zone, in many cases, …\n",null,0],["all","Rails::Application::Railties","Ruby/classes/Rails/Application/Railties.html#method-i-all","(&block)","",null,0],["all","Rails::Engine::Railties","Ruby/classes/Rails/Engine/Railties.html#method-i-all","(&block)","",null,0],["all","Rails::Generators::ActiveModel","Ruby/classes/Rails/Generators/ActiveModel.html#method-c-all","(klass)","<p>GET index\n",null,0],["all","Rails::Plugin","Ruby/classes/Rails/Plugin.html#method-c-all","(list, paths)","",null,0],["all","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-all","()","<p>Returns all specifications. This method is discouraged from use. You\nprobably want to use one of the …\n",null,1],["all","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-all","( dest = '' )","",null,1],["all=","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-all-3D","(specs)","<p>Sets the known specs to <code>specs</code>. Not guaranteed to work for you\nin the future. Use at your own risk. Caveat …\n",null,1],["all?","Enumerable","Rails/classes/Enumerable.html#method-i-all-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block never …\n",null,1],["all_classes","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-all_classes","()","<p>Returns all classes discovered by RDoc\n",null,1],["all_classes_and_modules","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-all_classes_and_modules","()","<p>Returns all classes and modules discovered by RDoc\n",null,1],["all_classes_hash","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-all_classes_hash","()","<p>Hash of all classes known to RDoc\n",null,1],["all_day","Time","Ruby/classes/Time.html#method-i-all_day","()","<p>Returns a Range representing the whole day of the current time.\n",null,0],["all_files","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-all_files","()","<p>All TopLevels known to RDoc\n",null,1],["all_files_hash","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-all_files_hash","()","<p>Hash of all files known to RDoc\n",null,1],["all_gems","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-all_gems","()","",null,1],["all_helpers_from_path","ActionController::Helpers::ClassMethods","Ruby/classes/ActionController/Helpers/ClassMethods.html#method-i-all_helpers_from_path","(path)","",null,0],["all_load_paths","Gem","Rails/classes/Gem.html#method-c-all_load_paths","()","<p>An Array of all possible load paths for all versions of all gems in the Gem\ninstallation.\n",null,1],["all_modules","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-all_modules","()","<p>Returns all modules discovered by RDoc\n",null,1],["all_modules_hash","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-all_modules_hash","()","<p>Hash of all modules known to RDoc\n",null,1],["all_month","Time","Ruby/classes/Time.html#method-i-all_month","()","<p>Returns a Range representing the whole month of the current time.\n",null,0],["all_names","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-all_names","()","<p>Return full names of all specs in sorted order.\n",null,1],["all_paths","Rails::Paths::Root","Ruby/classes/Rails/Paths/Root.html#method-i-all_paths","()","",null,0],["all_quarter","Time","Ruby/classes/Time.html#method-i-all_quarter","()","<p>Returns a Range representing the whole quarter of the current time.\n",null,0],["all_symbols","Symbol","Rails/classes/Symbol.html#method-c-all_symbols","()","<p>Returns an array of all the symbols currently in Ruby’s symbol table.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Symbol</span>.<span class=\"ruby-identifier\">all_symbols</span>.<span class=\"ruby-identifier\">size</span>    <span class=\"ruby-comment\">#=&gt; 903 ...</span>\n</pre>\n",null,1],["all_waits","ThreadsWait","Rails/classes/ThreadsWait.html#method-c-all_waits","(*threads)","<p>Waits until all specified threads have terminated.  If a block is provided,\nit is executed for each thread …\n",null,1],["all_waits","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-all_waits","()","<p>Waits until all of the specified threads are terminated.  If a block is\nsupplied for the method, it is …\n",null,1],["all_waits","ThreadsWait","Rails/classes/ThreadsWait.html#method-c-all_waits","(*threads)","<p>Waits until all specified threads have terminated.  If a block is provided,\nit is executed for each thread …\n",null,1],["all_waits","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-all_waits","()","<p>Waits until all of the specified threads are terminated.  If a block is\nsupplied for the method, it is …\n",null,1],["all_week","Time","Ruby/classes/Time.html#method-i-all_week","(start_day = :monday)","<p>Returns a Range representing the whole week of the current time. Week\nstarts on start_day (default is …\n",null,0],["all_year","Time","Ruby/classes/Time.html#method-i-all_year","()","<p>Returns a Range representing the whole year of the current time.\n",null,0],["allocate","Class","Rails/classes/Class.html#method-i-allocate","()","<p>Allocates space for a new object of <em>class</em>’s class and does not\ncall initialize on the new instance.  …\n",null,1],["allow_addr?","ACL","Rails/classes/ACL.html#method-i-allow_addr-3F","(addr)","<p>Allow connections from addrinfo <code>addr</code>?  It must be formatted\nlike Socket#peeraddr:\n\n<pre>[&quot;AF_INET&quot;, 10, &quot;lc630&quot;, ...</pre>\n",null,1],["allow_socket?","ACL","Rails/classes/ACL.html#method-i-allow_socket-3F","(soc)","<p>Allow connections from Socket <code>soc</code>?\n",null,1],["alternate=","RSS::XMLStyleSheet","Rails/classes/RSS/XMLStyleSheet.html#method-i-alternate-3D","(value)","",null,1],["amjd","Date","Rails/classes/Date.html#method-i-amjd","()","<p>Returns the astronomical modified Julian day number.  This is a fractional\nnumber, which is not adjusted …\n",null,1],["ancestors","Module","Rails/classes/Module.html#method-i-ancestors","()","<p>Returns a list of modules included in <em>mod</em> (including <em>mod</em>\nitself).\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">Mod</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">Math</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ancestors","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-ancestors","()","<p>Ancestors list for this ClassModule: the list of included modules (classes\nwill add their superclass …\n",null,1],["ancestors","RDoc::NormalClass","Rails/classes/RDoc/NormalClass.html#method-i-ancestors","()","<p>Appends the superclass, if any, to the included modules.\n",null,1],["ancestors","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-ancestors","()","<p>Ancestors cache accessor.  Maps a klass name to an Array of its ancestors\nin this store.  If Foo in this …\n",null,1],["ancestors","RDoc::SingleClass","Rails/classes/RDoc/SingleClass.html#method-i-ancestors","()","<p>Adds the superclass to the included modules.\n",null,1],["ancestors_of","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-ancestors_of","(klass)","<p>Returns ancestor classes of <code>klass</code>\n",null,1],["angle","Complex","Rails/classes/Complex.html#method-i-angle","()","<p>Returns the angle part of its polar form.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>.<span class=\"ruby-identifier\">polar</span>(<span class=\"ruby-value\">3</span>, <span class=\"ruby-constant\">Math</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PI</span><span class=\"ruby-operator\">/</span><span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">arg</span> <span class=\"ruby-comment\">#=&gt; 1.5707963267948966</span>\n</pre>\n",null,1],["angle","Float","Rails/classes/Float.html#method-i-angle","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,1],["angle","Numeric","Rails/classes/Numeric.html#method-i-angle","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,1],["annotate","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-annotate","(tag)","<p>Allows <code>tag</code> to be decorated with additional information.\n",null,1],["annotate","RDoc::Markup::ToBs","Rails/classes/RDoc/Markup/ToBs.html#method-i-annotate","(tag)","<p>Turns on or off special handling for <code>convert_string</code>\n",null,1],["announce","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-announce","(message)","",null,0],["announce","Build","Ruby/classes/Build.html#method-i-announce","(heading)","",null,0],["anonymous?","Module","Ruby/classes/Module.html#method-i-anonymous-3F","()","<p>A module may or may not have a name.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M</span>; <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-constant\">M</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-comment\"># =&gt; &quot;M&quot;</span>\n\n<span class=\"ruby-identifier\">m</span> = <span class=\"ruby-constant\">Module</span>.<span class=\"ruby-identifier\">new</span>\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-comment\"># =&gt; &quot;&quot;</span>\n</pre>\n<p>A module …\n",null,0],["any","ActionMailer::Collector","Ruby/classes/ActionMailer/Collector.html#method-i-any","(*args, &block)","",null,0],["any?","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-any-3F","()","",null,0],["any?","Enumerable","Rails/classes/Enumerable.html#method-i-any-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block ever returns …\n",null,1],["any_content","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-any_content","(includes = true)","<p>Is there any content?\n<p>This means any of: comment, aliases, methods, attributes, external aliases,\nrequire, …\n",null,1],["api_behavior","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-api_behavior","(error)","<p>This is the common behavior for formats associated with APIs, such as :xml\nand :json.\n",null,0],["api_key","Gem::GemcutterUtilities","Rails/classes/Gem/GemcutterUtilities.html#method-i-api_key","()","",null,1],["api_location","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-api_location","()","",null,0],["apop?","Net::APOP","Rails/classes/Net/APOP.html#method-i-apop-3F","()","<p>Always returns true.\n",null,1],["apop?","Net::APOP","Rails/classes/Net/APOP.html#method-i-apop-3F","()","<p>Always returns true.\n",null,1],["apop?","Net::POP3","Rails/classes/Net/POP3.html#method-i-apop-3F","()","<p>Does this instance use APOP authentication?\n",null,1],["apop?","Net::POP3","Rails/classes/Net/POP3.html#method-i-apop-3F","()","<p>Does this instance use APOP authentication?\n",null,1],["apop?","Net::POP3","Rails/classes/Net/POP3.html#method-i-apop-3F","()","<p>Does this instance use APOP authentication?\n",null,1],["apop?","Net::POP3","Rails/classes/Net/POP3.html#method-i-apop-3F","()","<p>Does this instance use APOP authentication?\n",null,1],["app","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-app","()","",null,0],["app","Rails::ConsoleMethods","Ruby/classes/Rails/ConsoleMethods.html#method-i-app","(create=false)","<p>reference the global “app” instance, created on demand. To recreate the\ninstance, pass a non-false …\n",null,0],["app","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-app","()","",null,0],["app","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-app","()","",null,0],["app","Rails::Server","Ruby/classes/Rails/Server.html#method-i-app","()","",null,0],["app_const","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-app_const","()","",null,0],["app_const_base","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-app_const_base","()","",null,0],["app_generators","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-app_generators","()","<p>This allows you to modify application’s generators from Railties.\n<p>Values set on app_generators will become …\n",null,0],["app_middleware","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-app_middleware","()","<p>This allows you to modify the application’s middlewares from Engines.\n<p>All operations you run on the app_middleware …\n",null,0],["app_name","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-app_name","()","",null,0],["app_script_text","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-app_script_text","(bin_file_name)","<p>Return the text for an application file.\n",null,1],["app_secret","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-app_secret","()","",null,0],["app_templates_dir","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-app_templates_dir","()","",null,0],["append","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-append","(mailbox, message, flags = nil, date_time = nil)","<p>Sends a APPEND command to append the <code>message</code> to the end of the\n<code>mailbox</code>. The optional <code>flags</code> argument is …\n",null,1],["append","OptionParser::List","Rails/classes/OptionParser/List.html#method-i-append","(*args)","<p>Appends <code>switch</code> at the tail of the list, and associates short,\nlong and negated long options. Arguments …\n",null,1],["append","Rake::InvocationChain","Rails/classes/Rake/InvocationChain.html#method-c-append","(value, chain)","",null,1],["append","Rake::InvocationChain","Rails/classes/Rake/InvocationChain.html#method-i-append","(value)","",null,1],["append","Rake::InvocationChain::EmptyInvocationChain","Rails/classes/Rake/InvocationChain/EmptyInvocationChain.html#method-i-append","(value)","",null,1],["append","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-append","(to, filter)","",null,1],["append_after_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_after_filter","","<p>Append an after filter. See _insert_callbacks for parameter details.\n",null,0],["append_around_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_around_filter","","<p>Append an around filter. See _insert_callbacks for parameter details.\n",null,0],["append_before_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_before_filter","","<p>Append a before filter. See _insert_callbacks for parameter details.\n",null,0],["append_data","WEBrick::HTTPUtils::FormData","Rails/classes/WEBrick/HTTPUtils/FormData.html#method-i-append_data","(data)","",null,1],["append_features","ActiveSupport::Concern","Ruby/classes/ActiveSupport/Concern.html#method-i-append_features","(base)","",null,0],["append_features","Mutex_m","Rails/classes/Mutex_m.html#method-c-append_features","(cl)","",null,1],["append_features","RSS::Atom::CommonModel","Rails/classes/RSS/Atom/CommonModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Atom::ContentModel","Rails/classes/RSS/Atom/ContentModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Atom::DateConstruct","Rails/classes/RSS/Atom/DateConstruct.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Atom::PersonConstruct","Rails/classes/RSS/Atom/PersonConstruct.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Atom::TextConstruct","Rails/classes/RSS/Atom/TextConstruct.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Atom::URIContentModel","Rails/classes/RSS/Atom/URIContentModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::BaseDublinCoreModel","Rails/classes/RSS/BaseDublinCoreModel.html#method-i-append_features","(klass)","",null,1],["append_features","RSS::BaseTrackBackModel","Rails/classes/RSS/BaseTrackBackModel.html#method-i-append_features","(klass)","",null,1],["append_features","RSS::ContentModel","Rails/classes/RSS/ContentModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::ITunesChannelModel","Rails/classes/RSS/ITunesChannelModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::ITunesItemModel","Rails/classes/RSS/ITunesItemModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::ImageFaviconModel","Rails/classes/RSS/ImageFaviconModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::ImageItemModel","Rails/classes/RSS/ImageItemModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::AtomPersonConstructBase","Rails/classes/RSS/Maker/AtomPersonConstructBase.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::AtomTextConstructBase","Rails/classes/RSS/Maker/AtomTextConstructBase.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::ContentModel","Rails/classes/RSS/Maker/ContentModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::DublinCoreModel","Rails/classes/RSS/Maker/DublinCoreModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::ITunesChannelModel","Rails/classes/RSS/Maker/ITunesChannelModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::ITunesItemModel","Rails/classes/RSS/Maker/ITunesItemModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::ImageFaviconModel","Rails/classes/RSS/Maker/ImageFaviconModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::ImageItemModel","Rails/classes/RSS/Maker/ImageItemModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::SlashModel","Rails/classes/RSS/Maker/SlashModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::SyndicationModel","Rails/classes/RSS/Maker/SyndicationModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::TaxonomyTopicModel","Rails/classes/RSS/Maker/TaxonomyTopicModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::TaxonomyTopicsModel","Rails/classes/RSS/Maker/TaxonomyTopicsModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::Maker::TrackBackModel","Rails/classes/RSS/Maker/TrackBackModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::RSS09","Rails/classes/RSS/RSS09.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::RSS10","Rails/classes/RSS/RSS10.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::SlashModel","Rails/classes/RSS/SlashModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::SyndicationModel","Rails/classes/RSS/SyndicationModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::TaxonomyTopicModel","Rails/classes/RSS/TaxonomyTopicModel.html#method-c-append_features","(klass)","",null,1],["append_features","RSS::TaxonomyTopicsModel","Rails/classes/RSS/TaxonomyTopicsModel.html#method-c-append_features","(klass)","",null,1],["append_features","Sync_m","Rails/classes/Sync_m.html#method-c-append_features","(cl)","",null,1],["append_features","Sync_m","Rails/classes/Sync_m.html#method-c-append_features","(cl)","",null,1],["append_view_path","AbstractController::ViewPaths","Ruby/classes/AbstractController/ViewPaths.html#method-i-append_view_path","(path)","",null,0],["append_view_path","AbstractController::ViewPaths::ClassMethods","Ruby/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-append_view_path","(path)","<p>Append a path to the list of view paths for this controller.\n<p>Parameters\n<p><code>path</code> - If a String is provided, ...\n",null,0],["application","Rails","Ruby/classes/Rails.html#method-c-application","()","",null,0],["application","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-application","(data=nil, options={}, &block)","",null,0],["application","Rake","Rails/classes/Rake.html#method-c-application","()","<p>Current Rake Application\n",null,1],["application=","Rails","Ruby/classes/Rails.html#method-c-application-3D","(application)","",null,0],["application=","Rake","Rails/classes/Rake.html#method-c-application-3D","(app)","<p>Set the current Rake application object.\n",null,1],["application_definition","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-application_definition","()","",null,0],["application_name","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-application_name","()","<p>Tries to retrieve the application name or simple return application.\n",null,0],["application_trace","ActionDispatch::ExceptionWrapper","Ruby/classes/ActionDispatch/ExceptionWrapper.html#method-i-application_trace","()","",null,0],["apply_finder_options","ActiveRecord::SpawnMethods","Ruby/classes/ActiveRecord/SpawnMethods.html#method-i-apply_finder_options","(options)","",null,0],["apply_join_dependency","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-apply_join_dependency","(relation, join_dependency)","",null,0],["apply_rails_template","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-apply_rails_template","()","",null,0],["aref","RDoc::Alias","Rails/classes/RDoc/Alias.html#method-i-aref","()","<p>HTML fragment reference for this alias\n",null,1],["aref","RDoc::Context::Section","Rails/classes/RDoc/Context/Section.html#method-i-aref","()","<p>Anchor reference for linking to this section\n",null,1],["aref","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-aref","()","<p>HTML fragment reference for this method\n",null,1],["aref_prefix","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-i-aref_prefix","()","<p>Prefix for <code>aref</code> is ‘method’.\n",null,1],["aref_prefix","RDoc::Attr","Rails/classes/RDoc/Attr.html#method-i-aref_prefix","()","<p>The #aref prefix for attributes\n",null,1],["aref_prefix","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-aref_prefix","()","<p>Prefix for <code>aref</code>, defined by subclasses.\n",null,1],["aref_to","RDoc::Generator::Markup","Rails/classes/RDoc/Generator/Markup.html#method-i-aref_to","(target_path)","<p>Generates a relative URL from this object’s path to\n<code>target_path</code>\n",null,1],["arel","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-arel","()","",null,0],["arel_engine","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-arel_engine","()","",null,0],["arel_table","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-arel_table","()","",null,0],["arg","Complex","Rails/classes/Complex.html#method-i-arg","()","<p>Returns the angle part of its polar form.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>.<span class=\"ruby-identifier\">polar</span>(<span class=\"ruby-value\">3</span>, <span class=\"ruby-constant\">Math</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PI</span><span class=\"ruby-operator\">/</span><span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">arg</span> <span class=\"ruby-comment\">#=&gt; 1.5707963267948966</span>\n</pre>\n",null,1],["arg","Float","Rails/classes/Float.html#method-i-arg","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,1],["arg","Numeric","Rails/classes/Numeric.html#method-i-arg","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,1],["arg_names","Rake::Task","Rails/classes/Rake/Task.html#method-i-arg_names","()","<p>Name of arguments for this task.\n",null,1],["arglists","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-i-arglists","()","<p>The call_seq or the param_seq with method name, if there is no call_seq.\n<p>Use this for displaying a method’s …\n",null,1],["args","NoMethodError","Rails/classes/NoMethodError.html#method-i-args","()","<p>Return the arguments passed in as the third parameter to the constructor.\n",null,1],["arguments","Gem::Command","Rails/classes/Gem/Command.html#method-i-arguments","()","<p>Override to provide details of the arguments a command takes.  It should\nreturn a left-justified string, …\n",null,1],["argv","ARGF","Rails/classes/ARGF.html#method-i-argv","()","<p>Returns the <code>ARGV</code> array, which contains the arguments passed to\nyour script, one per element.\n<p>For example: …\n",null,1],["arity","Method","Rails/classes/Method.html#method-i-arity","()","<p>Returns an indication of the number of arguments accepted by a method.\nReturns a nonnegative integer …\n",null,1],["arity","Proc","Rails/classes/Proc.html#method-i-arity","()","<p>Returns the number of arguments that would not be ignored. If the block is\ndeclared to take no arguments, …\n",null,1],["arity","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-arity","()","<p>Returns an indication of the number of arguments accepted by a method.\nReturns a nonnegative integer …\n",null,1],["around_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-around_filter","","<p>Append an around filter. See _insert_callbacks for parameter details.\n",null,0],["array","WIN32OLE_VARIANT","Rails/classes/WIN32OLE_VARIANT.html#method-c-array","(p1, p2)","<p>Returns Ruby object wrapping OLE variant whose variant type is VT_ARRAY.\nThe first argument should be …\n",null,1],["array_attributes","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-array_attributes","()","<p>Return the list of all array-oriented instance variables.\n",null,1],["as_href","RDoc::Generator::Markup","Rails/classes/RDoc/Generator/Markup.html#method-i-as_href","(from_path)","<p>Generates a relative URL from <code>from_path</code> to this object’s path\n",null,1],["as_json","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-as_json","(options=nil)","<p>Returns an ActiveSupport::OrderedHash that can be used as the JSON\nrepresentation for this object.\n",null,0],["as_json","ActiveModel::Serializers::JSON","Ruby/classes/ActiveModel/Serializers/JSON.html#method-i-as_json","(options = nil)","<p>Returns a hash representing the model. Some configuration can be passed\nthrough <code>options</code>.\n<p>The option <code>include_root_in_json</code> …\n",null,0],["as_json","ActiveSupport::JSON::Encoding::Encoder","Ruby/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-as_json","(value, use_options = true)","<p>like encode, but only calls as_json, without encoding to string\n",null,0],["as_json","ActiveSupport::JSON::Variable","Ruby/classes/ActiveSupport/JSON/Variable.html#method-i-as_json","(options = nil)","",null,0],["as_json","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-as_json","(options = nil)","<p>Coerces time to a string for JSON encoding. The default format is ISO 8601.\nYou can get %Y/%m/%d %H:%M:% …\n",null,0],["as_json","BigDecimal","Ruby/classes/BigDecimal.html#method-i-as_json","(options = nil)","<p>A BigDecimal would be naturally represented as a JSON number. Most\nlibraries, however, parse non-integer …\n",null,0],["as_json","FalseClass","Ruby/classes/FalseClass.html#method-i-as_json","(options = nil)","",null,0],["as_json","NilClass","Ruby/classes/NilClass.html#method-i-as_json","(options = nil)","",null,0],["as_json","Numeric","Ruby/classes/Numeric.html#method-i-as_json","(options = nil)","",null,0],["as_json","Regexp","Ruby/classes/Regexp.html#method-i-as_json","(options = nil)","",null,0],["as_json","String","Ruby/classes/String.html#method-i-as_json","(options = nil)","",null,0],["as_json","Symbol","Ruby/classes/Symbol.html#method-i-as_json","(options = nil)","",null,0],["as_json","TrueClass","Ruby/classes/TrueClass.html#method-i-as_json","(options = nil)","",null,0],["as_json","Complex","Rails/classes/Complex.html#method-i-as_json","(*)","",null,1],["as_json","Date","Rails/classes/Date.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,1],["as_json","DateTime","Rails/classes/DateTime.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,1],["as_json","Exception","Rails/classes/Exception.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,1],["as_json","Range","Rails/classes/Range.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,1],["as_json","Rational","Rails/classes/Rational.html#method-i-as_json","(*)","",null,1],["as_json","Regexp","Rails/classes/Regexp.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,1],["as_json","Struct","Rails/classes/Struct.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,1],["as_json","Symbol","Rails/classes/Symbol.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,1],["as_json","Time","Rails/classes/Time.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,1],["as_string","RDoc::Markup::Attribute","Rails/classes/RDoc/Markup/Attribute.html#method-c-as_string","(bitmap)","<p>Returns a string representation of <code>bitmap</code>\n",null,1],["ascend","Pathname","Rails/classes/Pathname.html#method-i-ascend","()","<p>Iterates over and yields a new Pathname object for each element in the\ngiven path in ascending order. …\n",null,1],["ascii_compatible?","Encoding","Rails/classes/Encoding.html#method-i-ascii_compatible-3F","()","<p>Returns whether ASCII-compatible or not.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">UTF_8</span>.<span class=\"ruby-identifier\">ascii_compatible?</span>     <span class=\"ruby-comment\">#=&gt; true</span>\n<span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">UTF_16BE</span>.<span class=\"ruby-identifier\">ascii_compatible?</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ascii_only?","String","Rails/classes/String.html#method-i-ascii_only-3F","()","<p>Returns true for a string which has only ASCII characters.\n\n<pre>&quot;abc&quot;.force_encoding(&quot;UTF-8&quot;).ascii_only?  ...</pre>\n",null,1],["asciicompat_encoding","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-c-asciicompat_encoding","(p1)","<p>Returns the corresponding ASCII compatible encoding.\n<p>Returns nil if the argument is an ASCII compatible …\n",null,1],["asctime","Date","Rails/classes/Date.html#method-i-asctime","()","<p>Returns a string in asctime(3) format (but without “n0” at the end).  This\nmethod is equivalent …\n",null,1],["asctime","Time","Rails/classes/Time.html#method-i-asctime","()","<p>Returns a canonical string representation of <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>.<span class=\"ruby-identifier\">asctime</span>   <span class=\"ruby-comment\">#=&gt; &quot;Wed Apr  9 08:56:03 2003&quot;</span>\n</pre>\n",null,1],["asin","CMath","Rails/classes/CMath.html#method-c-asin","(z)","<p>returns the arc sine of <code>z</code>\n",null,1],["asin","Math","Rails/classes/Math.html#method-c-asin","(p1)","<p>Computes the arc sine of <em>x</em>. Returns -{PI/2} .. {PI/2}.\n",null,1],["asin!","CMath","Rails/classes/CMath.html#method-c-asin-21","(z)","",null,1],["asinh","CMath","Rails/classes/CMath.html#method-c-asinh","(z)","<p>returns the inverse hyperbolic sine of <code>z</code>\n",null,1],["asinh","Math","Rails/classes/Math.html#method-c-asinh","(p1)","<p>Computes the inverse hyperbolic sine of <em>x</em>.\n",null,1],["asinh!","CMath","Rails/classes/CMath.html#method-c-asinh-21","(z)","",null,1],["ask","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-ask","(question)","<p>Ask a question.  Returns an answer if connected to a tty, nil otherwise.\n",null,1],["ask","Gem::UserInteraction","Rails/classes/Gem/UserInteraction.html#method-i-ask","(*args)","",null,1],["ask_for_password","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-ask_for_password","(question)","<p>Ask for a password. Does not echo response to terminal.\n",null,1],["ask_for_password","Gem::UserInteraction","Rails/classes/Gem/UserInteraction.html#method-i-ask_for_password","(*args)","",null,1],["ask_for_password_on_unix","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-ask_for_password_on_unix","()","<p>Asks for a password that works on unix\n",null,1],["ask_for_password_on_windows","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-ask_for_password_on_windows","()","<p>Asks for a password that works on windows. Ripped from the Heroku gem.\n",null,1],["ask_if_ok","Gem::Uninstaller","Rails/classes/Gem/Uninstaller.html#method-i-ask_if_ok","(spec)","",null,1],["ask_yes_no","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-ask_yes_no","(question, default=nil)","<p>Ask a question.  Returns a true for yes, false for no.  If not connected to\na tty, raises an exception …\n",null,1],["ask_yes_no","Gem::UserInteraction","Rails/classes/Gem/UserInteraction.html#method-i-ask_yes_no","(*args)","",null,1],["asn1_flag","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-asn1_flag","()","<p>See the OpenSSL documentation for EC_GROUP_get_asn1_flag()\n",null,1],["asn1_flag=","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-asn1_flag-3D","(p1)","<p>See the OpenSSL documentation for EC_GROUP_set_asn1_flag()\n",null,1],["assert_index","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-assert_index","(index, where)","",null,0],["assert_valid_keys","Hash","Ruby/classes/Hash.html#method-i-assert_valid_keys","(*valid_keys)","<p>Validate all keys in a hash match *valid keys, raising ArgumentError on a\nmismatch. Note that keys are …\n",null,0],["asset_name","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-i-asset_name","()","",null,0],["asset_name","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#method-i-asset_name","()","",null,0],["asset_name","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#method-i-asset_name","()","",null,0],["asset_name","Rails::Generators::AssetsGenerator","Ruby/classes/Rails/Generators/AssetsGenerator.html#method-i-asset_name","()","",null,0],["asset_path","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-asset_path","(source, options = {})","",null,0],["asset_paths","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-asset_paths","()","",null,0],["asset_tag","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-i-asset_tag","(source, options)","",null,0],["asset_tag","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#method-i-asset_tag","(source, options)","",null,0],["asset_tag","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#method-i-asset_tag","(source, options)","",null,0],["assets_gemfile_entry","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-assets_gemfile_entry","()","",null,0],["assign_attributes","ActiveRecord::AttributeAssignment","Ruby/classes/ActiveRecord/AttributeAssignment.html#method-i-assign_attributes","(new_attributes, options = {})","<p>Allows you to set all the attributes for a particular mass-assignment\nsecurity role by passing in a hash …\n",null,0],["assign_names","DL::CStructEntity","Rails/classes/DL/CStructEntity.html#method-i-assign_names","(members)","",null,1],["assign_shortcuts","ActionController::Compatibility","Ruby/classes/ActionController/Compatibility.html#method-i-assign_shortcuts","(*)","",null,0],["assoc","Array","Rails/classes/Array.html#method-i-assoc","(p1)","<p>Searches through an array whose elements are also arrays comparing\n<em>obj</em> with the first element of each …\n",null,1],["assoc","ENV","Rails/classes/ENV.html#method-c-assoc","(p1)","<p>Returns an Array of the name and value of the environment variable with\n<code>name</code> or <code>nil</code> if the name cannot …\n",null,1],["assoc","Hash","Rails/classes/Hash.html#method-i-assoc","(p1)","<p>Searches through the hash comparing <em>obj</em> with the key using\n<code>==</code>. Returns the key-value pair (two elements …\n",null,1],["assume_migrated_upto_version","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-assume_migrated_upto_version","(version, migrations_paths = ActiveRecord::Migrator.migrations_paths)","",null,0],["at","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-at","(secs)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone\nof <code>self</code> from number of seconds …\n",null,0],["at","String","Ruby/classes/String.html#method-i-at","(position)","<p>Returns the character at the <code>position</code> treating the string as\nan array (where 0 is the first character). …\n",null,0],["at","Time","Ruby/classes/Time.html#method-c-at","(*args)","",null,0],["at","Array","Rails/classes/Array.html#method-i-at","(p1)","<p>Returns the element at <em>index</em>. A negative index counts from the end\nof <code>self</code>.  Returns <code>nil</code> if the index …\n",null,1],["at","Time","Rails/classes/Time.html#method-c-at","(p1, p2 = v2)","<p>Creates a new time object with the value given by <em>time</em>, the given\nnumber of <em>seconds_with_frac</em>, or <em>seconds</em> …\n",null,1],["at_beginning_of_day","Date","Ruby/classes/Date.html#method-i-at_beginning_of_day","()","",null,0],["at_beginning_of_day","DateTime","Ruby/classes/DateTime.html#method-i-at_beginning_of_day","()","",null,0],["at_beginning_of_day","Time","Ruby/classes/Time.html#method-i-at_beginning_of_day","()","",null,0],["at_beginning_of_hour","DateTime","Ruby/classes/DateTime.html#method-i-at_beginning_of_hour","()","",null,0],["at_beginning_of_hour","Time","Ruby/classes/Time.html#method-i-at_beginning_of_hour","()","",null,0],["at_beginning_of_month","Date","Ruby/classes/Date.html#method-i-at_beginning_of_month","()","",null,0],["at_beginning_of_month","Time","Ruby/classes/Time.html#method-i-at_beginning_of_month","()","",null,0],["at_beginning_of_quarter","Date","Ruby/classes/Date.html#method-i-at_beginning_of_quarter","()","",null,0],["at_beginning_of_quarter","Time","Ruby/classes/Time.html#method-i-at_beginning_of_quarter","()","",null,0],["at_beginning_of_week","Date","Ruby/classes/Date.html#method-i-at_beginning_of_week","(start_day = :monday)","",null,0],["at_beginning_of_week","Time","Ruby/classes/Time.html#method-i-at_beginning_of_week","(start_day = :monday)","",null,0],["at_beginning_of_year","Date","Ruby/classes/Date.html#method-i-at_beginning_of_year","()","",null,0],["at_beginning_of_year","Time","Ruby/classes/Time.html#method-i-at_beginning_of_year","()","",null,0],["at_end_of_month","Date","Ruby/classes/Date.html#method-i-at_end_of_month","()","",null,0],["at_end_of_month","Time","Ruby/classes/Time.html#method-i-at_end_of_month","()","",null,0],["at_end_of_quarter","Date","Ruby/classes/Date.html#method-i-at_end_of_quarter","()","",null,0],["at_end_of_quarter","Time","Ruby/classes/Time.html#method-i-at_end_of_quarter","()","",null,0],["at_end_of_week","Date","Ruby/classes/Date.html#method-i-at_end_of_week","(start_day = :monday)","",null,0],["at_end_of_week","Time","Ruby/classes/Time.html#method-i-at_end_of_week","(start_day = :monday)","",null,0],["at_end_of_year","Date","Ruby/classes/Date.html#method-i-at_end_of_year","()","",null,0],["at_end_of_year","Time","Ruby/classes/Time.html#method-i-at_end_of_year","()","",null,0],["at_exit","Kernel","Rails/classes/Kernel.html#method-i-at_exit","()","<p>Converts <em>block</em> to a <code>Proc</code> object (and therefore binds\nit at the point of call) and registers it for execution …\n",null,1],["at_midnight","Date","Ruby/classes/Date.html#method-i-at_midnight","()","",null,0],["at_midnight","DateTime","Ruby/classes/DateTime.html#method-i-at_midnight","()","",null,0],["at_midnight","Time","Ruby/classes/Time.html#method-i-at_midnight","()","",null,0],["at_with_coercion","Time","Ruby/classes/Time.html#method-c-at_with_coercion","(*args)","<p>Layers additional behavior on Time.at so that ActiveSupport::TimeWithZone\nand DateTime instances can …\n",null,0],["at_without_coercion","Time","Ruby/classes/Time.html#method-c-at_without_coercion","(*args)","",null,0],["atan","BigMath","Rails/classes/BigMath.html#method-i-atan","(x, prec)","<p>Computes the arctangent of x to the specified number of digits of\nprecision.\n<p>If x is NaN, returns NaN …\n",null,1],["atan","CMath","Rails/classes/CMath.html#method-c-atan","(z)","<p>returns the arc tangent of <code>z</code>\n",null,1],["atan","Math","Rails/classes/Math.html#method-c-atan","(p1)","<p>Computes the arc tangent of <em>x</em>. Returns -{PI/2} .. {PI/2}.\n",null,1],["atan!","CMath","Rails/classes/CMath.html#method-c-atan-21","(z)","",null,1],["atan2","CMath","Rails/classes/CMath.html#method-c-atan2","(y,x)","<p>returns the arc tangent of <code>y</code> divided by <code>x</code> using\nthe signs of <code>y</code> and <code>x</code> to determine the quadrant\n",null,1],["atan2","Math","Rails/classes/Math.html#method-c-atan2","(p1, p2)","<p>Computes the arc tangent given <em>y</em> and <em>x</em>. Returns -PI..PI.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">atan2</span>(<span class=\"ruby-value\">-0.0</span>, <span class=\"ruby-value\">-1.0</span>) <span class=\"ruby-comment\">#=&gt; -3.141592653589793 ...</span>\n</pre>\n",null,1],["atan2!","CMath","Rails/classes/CMath.html#method-c-atan2-21","(y,x)","",null,1],["atanh","CMath","Rails/classes/CMath.html#method-c-atanh","(z)","<p>returns the inverse hyperbolic tangent of <code>z</code>\n",null,1],["atanh","Math","Rails/classes/Math.html#method-c-atanh","(p1)","<p>Computes the inverse hyperbolic tangent of <em>x</em>.\n",null,1],["atanh!","CMath","Rails/classes/CMath.html#method-c-atanh-21","(z)","",null,1],["atime","File","Rails/classes/File.html#method-c-atime","(p1)","<p>Returns the last access time for the named file as a Time object).\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">atime</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)   <span class=\"ruby-comment\">#=&gt; Wed Apr ...</span>\n</pre>\n",null,1],["atime","File","Rails/classes/File.html#method-i-atime","()","<p>Returns the last access time (a <code>Time</code> object)\n\n<pre>for &lt;i&gt;file&lt;/i&gt;, or epoch if &lt;i&gt;file&lt;/i&gt; has not been accessed. ...</pre>\n",null,1],["atime","File::Stat","Rails/classes/File/Stat.html#method-i-atime","()","<p>Returns the last access time for this file as an object of class\n<code>Time</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">atime</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["atime","Pathname","Rails/classes/Pathname.html#method-i-atime","()","<p>See <code>File.atime</code>.  Returns last access time.\n",null,1],["atom_feed","ActionView::Helpers::AtomFeedHelper","Ruby/classes/ActionView/Helpers/AtomFeedHelper.html#method-i-atom_feed","(options = {}, &block)","<p>Adds easy defaults to writing Atom feeds with the Builder template engine\n(this does not work on ERB …\n",null,0],["atom_validate","RSS::Atom::DateConstruct","Rails/classes/RSS/Atom/DateConstruct.html#method-i-atom_validate","(ignore_unknown_element, tags, uri)","",null,1],["atom_validate","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-atom_validate","(ignore_unknown_element, tags, uri)","",null,1],["atom_validate","RSS::Atom::TextConstruct","Rails/classes/RSS/Atom/TextConstruct.html#method-i-atom_validate","(ignore_unknown_element, tags, uri)","",null,1],["atomic_write","File","Ruby/classes/File.html#method-c-atomic_write","(file_name, temp_dir = Dir.tmpdir)","<p>Write to a file atomically. Useful for situations where you don’t want\nother processes or threads to …\n",null,0],["attach_to","ActiveSupport::LogSubscriber","Ruby/classes/ActiveSupport/LogSubscriber.html#method-c-attach_to","(namespace, log_subscriber=new, notifier=ActiveSupport::Notifications)","",null,0],["attachments","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-i-attachments","()","<p>Allows you to add attachments to an email, like so:\n\n<pre>mail.attachments['filename.jpg'] = File.read('/path/to/filename.jpg')</pre>\n",null,0],["attachments","ActionMailer::MailHelper","Ruby/classes/ActionMailer/MailHelper.html#method-i-attachments","()","<p>Access the message attachments list.\n",null,0],["attlistdecl","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-attlistdecl","(element, pairs, contents)","<p>If a doctype includes an ATTLIST declaration, it will cause this method to\nbe called.  The content is …\n",null,1],["attlistdecl","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-attlistdecl","(element_name, attributes, raw_content)","<p>If a doctype includes an ATTLIST declaration, it will cause this method to\nbe called.  The content is …\n",null,1],["attlistdecl?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-attlistdecl-3F","()","<p>Content: [ String text ]\n",null,1],["attr_accessible","ActiveModel::MassAssignmentSecurity::ClassMethods","Ruby/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-attr_accessible","(*args)","<p>Specifies a white list of model attributes that can be set via\nmass-assignment.\n<p>Like <code>attr_protected</code>, a …\n",null,0],["attr_internal","Module","Ruby/classes/Module.html#method-i-attr_internal","(*attrs)","",null,0],["attr_internal_accessor","Module","Ruby/classes/Module.html#method-i-attr_internal_accessor","(*attrs)","<p>Declares an attribute reader and writer backed by an internally-named\ninstance variable.\n",null,0],["attr_internal_reader","Module","Ruby/classes/Module.html#method-i-attr_internal_reader","(*attrs)","<p>Declares an attribute reader backed by an internally-named instance\nvariable.\n",null,0],["attr_internal_writer","Module","Ruby/classes/Module.html#method-i-attr_internal_writer","(*attrs)","<p>Declares an attribute writer backed by an internally-named instance\nvariable.\n",null,0],["attr_protected","ActiveModel::MassAssignmentSecurity::ClassMethods","Ruby/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-attr_protected","(*args)","<p>Attributes named in this macro are protected from mass-assignment whenever\nattributes are sanitized before …\n",null,0],["attr_readonly","ActiveRecord::ReadonlyAttributes::ClassMethods","Ruby/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html#method-i-attr_readonly","(*attributes)","<p>Attributes listed as readonly will be used to create a new record but\nupdate operations will ignore these …\n",null,0],["attribute","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-attribute","(turn_on, turn_off)","<p>Return an attribute object with the given turn_on and turn_off bits set\n",null,1],["attribute","REXML::Element","Rails/classes/REXML/Element.html#method-i-attribute","( name, namespace=nil )","<p>Attributes                                    #\n",null,1],["attribute","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-attribute","( name )","",null,1],["attribute_cast_code","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html#method-i-attribute_cast_code","(attr_name)","<p>The enhanced read method automatically converts the UTC time stored in the\ndatabase to the time zone …\n",null,0],["attribute_match","HTML::Selector","Ruby/classes/HTML/Selector.html#method-i-attribute_match","(equality, value)","<p>Create a regular expression to match an attribute value based on the\nequality operator (=, ^=, |=, etc). …\n",null,0],["attribute_method?","ActiveModel::AttributeMethods","Ruby/classes/ActiveModel/AttributeMethods.html#method-i-attribute_method-3F","(attr_name)","",null,0],["attribute_method?","ActiveModel::Validations::ClassMethods","Ruby/classes/ActiveModel/Validations/ClassMethods.html#method-i-attribute_method-3F","(attribute)","<p>Check if method is an attribute method or not.\n",null,0],["attribute_method?","ActiveRecord::AttributeMethods::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-attribute_method-3F","(attribute)","",null,0],["attribute_method_affix","ActiveModel::AttributeMethods::ClassMethods","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_affix","(*affixes)","<p>Declares a method available for all attributes with the given prefix and\nsuffix. Uses <code>method_missing</code> …\n",null,0],["attribute_method_prefix","ActiveModel::AttributeMethods::ClassMethods","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_prefix","(*prefixes)","<p>Declares a method available for all attributes with the given prefix. Uses\n<code>method_missing</code> and <code>respond_to</code> …\n",null,0],["attribute_method_suffix","ActiveModel::AttributeMethods::ClassMethods","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_suffix","(*suffixes)","<p>Declares a method available for all attributes with the given suffix. Uses\n<code>method_missing</code> and <code>respond_to</code> …\n",null,0],["attribute_methods_generated?","ActiveRecord::AttributeMethods::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-attribute_methods_generated-3F","()","",null,0],["attribute_missing","ActiveModel::AttributeMethods","Ruby/classes/ActiveModel/AttributeMethods.html#method-i-attribute_missing","(match, *args, &block)","<p>attribute_missing is like method_missing, but for attributes. When\nmethod_missing is called we check …\n",null,0],["attribute_names","ActiveRecord::AttributeMethods::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-attribute_names","()","<p>Returns an array of column names as strings if it’s not an abstract class\nand table exists. Otherwise …\n",null,0],["attribute_names","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-attribute_names","()","<p>Return the list of all instance variables.\n",null,1],["attribute_of","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-attribute_of","(element, attribute)","",null,1],["attributes","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-attributes","()","",null,1],["attributes","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-attributes","(text)","<p>Applies attribute-specific markup to <code>text</code> using\nRDoc::AttributeManager\n",null,1],["attributes","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-attributes","()","<p>Attributes cache accessor.  Maps a class to an Array of its attributes.\n",null,1],["attributes","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-attributes","()","<p>returns attributes.\n",null,1],["attributes=","ActiveRecord::AttributeAssignment","Ruby/classes/ActiveRecord/AttributeAssignment.html#method-i-attributes-3D","(new_attributes)","<p>Allows you to set all the attributes at once by passing in a hash with keys\nmatching the attribute names …\n",null,0],["attributes=","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-attributes-3D","(p1)","",null,1],["attributes=","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-attributes-3D","(val)","<p>setter for attributes <code>val</code>\n",null,1],["attributes_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","Ruby/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#method-i-attributes_before_type_cast","()","<p>Returns a hash of attributes before typecasting and deserialization.\n",null,0],["attributes_before_type_cast","ActiveRecord::AttributeMethods::Serialization","Ruby/classes/ActiveRecord/AttributeMethods/Serialization.html#method-i-attributes_before_type_cast","()","",null,0],["attributes_of","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-attributes_of","(element)","",null,1],["attributes_protected_by_default","ActiveModel::MassAssignmentSecurity::ClassMethods","Ruby/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-attributes_protected_by_default","()","",null,0],["attributes_protected_by_default","ActiveModel::SecurePassword::ClassMethods","Ruby/classes/ActiveModel/SecurePassword/ClassMethods.html#method-c-attributes_protected_by_default","()","",null,0],["attributes_with_index","ActiveRecord::Generators::ModelGenerator","Ruby/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-attributes_with_index","()","",null,0],["attroff","Curses","Rails/classes/Curses.html#method-c-attroff","(p1)","<p>Turns on the named attributes <code>attrs</code> without affecting any\nothers.\n<p>See also Curses::Window.attrset for …\n",null,1],["attroff","Curses::Window","Rails/classes/Curses/Window.html#method-i-attroff","(p1)","<p>Turns on the named attributes <code>attrs</code> without affecting any\nothers.\n<p>See also Curses::Window.attrset\n",null,1],["attron","Curses","Rails/classes/Curses.html#method-c-attron","(p1)","<p>Turns off the named attributes <code>attrs</code> without turning any other\nattributes on or off.\n<p>See also Curses::Window.attrset …\n",null,1],["attron","Curses::Window","Rails/classes/Curses/Window.html#method-i-attron","(p1)","<p>Turns off the named attributes <code>attrs</code> without turning any other\nattributes on or off.\n<p>See also Curses::Window.attrset …\n",null,1],["attrset","Curses","Rails/classes/Curses.html#method-c-attrset","(p1)","<p>Sets the current attributes of the given window to <code>attrs</code>.\n<p>see also Curses::Window.attrset\n",null,1],["attrset","Curses::Window","Rails/classes/Curses/Window.html#method-i-attrset","(p1)","<p>Sets the current attributes of the given window to <code>attrs</code>.\n<p>The following video attributes, defined in &lt; …\n",null,1],["audio_path","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-audio_path","(source)","<p>Computes the path to an audio asset in the public audios directory. Full\npaths from the document root …\n",null,0],["audio_tag","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-audio_tag","(source, options = {})","<p>Returns an html audio tag for the <code>source</code>. The\n<code>source</code> can be full path or file that exists in your public …\n",null,0],["auth_cram_md5","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-auth_cram_md5","(user, secret)","",null,1],["auth_cram_md5","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-auth_cram_md5","(user, secret)","",null,1],["auth_login","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-auth_login","(user, secret)","",null,1],["auth_login","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-auth_login","(user, secret)","",null,1],["auth_only","Net::POP3","Rails/classes/Net/POP3.html#method-c-auth_only","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Opens a POP3 session, attempts authentication, and quits.\n<p>This method raises POPAuthenticationError if …\n",null,1],["auth_only","Net::POP3","Rails/classes/Net/POP3.html#method-i-auth_only","(account, password)","<p>Starts a pop3 session, attempts authentication, and quits. This method must\nnot be called while POP3 …\n",null,1],["auth_only","Net::POP3","Rails/classes/Net/POP3.html#method-i-auth_only","(account, password)","<p>Starts a pop3 session, attempts authentication, and quits. This method must\nnot be called while POP3 …\n",null,1],["auth_only","Net::POP3","Rails/classes/Net/POP3.html#method-i-auth_only","(account, password)","<p>Starts a pop3 session, attempts authentication, and quits. This method must\nnot be called while POP3 …\n",null,1],["auth_only","Net::POP3","Rails/classes/Net/POP3.html#method-i-auth_only","(account, password)","<p>Starts a pop3 session, attempts authentication, and quits. This method must\nnot be called while POP3 …\n",null,1],["auth_only","Net::POP3","Rails/classes/Net/POP3.html#method-c-auth_only","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Opens a POP3 session, attempts authentication, and quits.\n<p>This method raises POPAuthenticationError if …\n",null,1],["auth_only","Net::POP3","Rails/classes/Net/POP3.html#method-c-auth_only","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Opens a POP3 session, attempts authentication, and quits.\n<p>This method raises POPAuthenticationError if …\n",null,1],["auth_only","Net::POP3","Rails/classes/Net/POP3.html#method-c-auth_only","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Opens a POP3 session, attempts authentication, and quits.\n<p>This method raises POPAuthenticationError if …\n",null,1],["auth_plain","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-auth_plain","(user, secret)","",null,1],["auth_plain","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-auth_plain","(user, secret)","",null,1],["auth_type","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-auth_type","()","",null,0],["auth_type=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-auth_type-3D","(auth_type)","",null,0],["auth_type=","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-auth_type-3D","(auth_type)","<p>Sets the auth type for remote service.\n",null,0],["authenticate","ActionController::HttpAuthentication::Basic","Ruby/classes/ActionController/HttpAuthentication/Basic.html#method-i-authenticate","(request, &login_procedure)","",null,0],["authenticate","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-authenticate","(request, realm, &password_procedure)","<p>Returns false on a valid response, true otherwise\n",null,0],["authenticate","ActionController::HttpAuthentication::Token","Ruby/classes/ActionController/HttpAuthentication/Token.html#method-i-authenticate","(controller, &login_procedure)","<p>If token Authorization header is present, call the login procedure with the\npresent token and options. …\n",null,0],["authenticate","ActiveModel::SecurePassword::InstanceMethodsOnActivation","Ruby/classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html#method-i-authenticate","(unencrypted_password)","<p>Returns self if the password is correct, otherwise false.\n",null,0],["authenticate","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-authenticate","(auth_type, *args)","<p>Sends an AUTHENTICATE command to authenticate the client. The\n<code>auth_type</code> parameter is a string that represents …\n",null,1],["authenticate","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-authenticate","(user, secret, authtype = DEFAULT_AUTH_TYPE)","",null,1],["authenticate","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-authenticate","(user, secret, authtype = DEFAULT_AUTH_TYPE)","",null,1],["authenticate","WEBrick::HTTPAuth::BasicAuth","Rails/classes/WEBrick/HTTPAuth/BasicAuth.html#method-i-authenticate","(req, res)","<p>Authenticates a <code>req</code> and returns a 401 Unauthorized using\n<code>res</code> if the authentication was not correct.\n",null,1],["authenticate","WEBrick::HTTPAuth::DigestAuth","Rails/classes/WEBrick/HTTPAuth/DigestAuth.html#method-i-authenticate","(req, res)","<p>Authenticates a <code>req</code> and returns a 401 Unauthorized using\n<code>res</code> if the authentication was not correct.\n",null,1],["authenticate_or_request_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","Ruby/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-authenticate_or_request_with_http_basic","(realm = \"Application\", &login_procedure)","",null,0],["authenticate_or_request_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","Ruby/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-authenticate_or_request_with_http_digest","(realm = \"Application\", &password_procedure)","",null,0],["authenticate_or_request_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","Ruby/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-authenticate_or_request_with_http_token","(realm = \"Application\", &login_procedure)","",null,0],["authenticate_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","Ruby/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-authenticate_with_http_basic","(&login_procedure)","",null,0],["authenticate_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","Ruby/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-authenticate_with_http_digest","(realm = \"Application\", &password_procedure)","<p>Authenticate with HTTP Digest, returns true or false\n",null,0],["authenticate_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","Ruby/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-authenticate_with_http_token","(&login_procedure)","",null,0],["authentication_header","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-authentication_header","(controller, realm)","",null,0],["authentication_request","ActionController::HttpAuthentication::Basic","Ruby/classes/ActionController/HttpAuthentication/Basic.html#method-i-authentication_request","(controller, realm)","",null,0],["authentication_request","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-authentication_request","(controller, realm, message = nil)","",null,0],["authentication_request","ActionController::HttpAuthentication::Token","Ruby/classes/ActionController/HttpAuthentication/Token.html#method-i-authentication_request","(controller, realm)","<p>Sets a WWW-Authenticate to let the client know a token is desired.\n<p>controller - ActionController::Base …\n",null,0],["author","RailsGuides::Helpers","Ruby/classes/RailsGuides/Helpers.html#method-i-author","(name, nick, image = 'credits_pic_blank.gif', &block)","",null,0],["author","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-author","()","<p>Singular reader for #authors\n",null,1],["author=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-author-3D","(o)","<p>Singular writer for #authors\n",null,1],["authorization","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-authorization","()","<p>Returns the authorization header regardless of whether it was specified\ndirectly or through one of the …\n",null,0],["authors","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-authors","()","<p>The list of author names who wrote this gem.\n<p>If you are providing multiple authors and multiple emails …\n",null,1],["authors=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-authors-3D","(value)","<p>Sets the list of authors, ensuring it is an array.\n",null,1],["auto_discovery_link_tag","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-auto_discovery_link_tag","(type = :rss, url_options = {}, tag_options = {})","<p>Returns a link tag that browsers and news readers can use to auto-detect an\nRSS or ATOM feed. The <code>type</code> …\n",null,0],["auto_flushing=","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-i-auto_flushing-3D","(period)","<p>Set the auto-flush period. Set to true to flush after every log message, to\nan integer to flush every …\n",null,0],["autoclose=","IO","Rails/classes/IO.html#method-i-autoclose-3D","(p1)","<p>Sets auto-close flag.\n\n<pre>f = open(&quot;/dev/null&quot;)\nIO.for_fd(f.fileno)\n# ...\nf.gets # may cause IOError\n\nf = ...</pre>\n",null,1],["autoclose?","IO","Rails/classes/IO.html#method-i-autoclose-3F","()","<p>Returns <code>true</code> if the underlying file descriptor of <em>ios</em>\nwill be closed automatically at its finalization, …\n",null,1],["autoload","ActiveSupport::Autoload","Ruby/classes/ActiveSupport/Autoload.html#method-i-autoload","(const_name, path = @@at_path)","",null,0],["autoload","Kernel","Rails/classes/Kernel.html#method-i-autoload","(p1, p2)","<p>Registers <em>filename</em> to be loaded (using\n<code>Kernel::require</code>) the first time that <em>module</em> (which\nmay be a <code>String</code> …\n",null,1],["autoload","Module","Rails/classes/Module.html#method-i-autoload","(p1, p2)","<p>Registers <em>filename</em> to be loaded (using\n<code>Kernel::require</code>) the first time that <em>module</em> (which\nmay be a <code>String</code> …\n",null,1],["autoload?","Kernel","Rails/classes/Kernel.html#method-i-autoload-3F","(p1)","<p>Returns <em>filename</em> to be loaded if <em>name</em> is registered as\n<code>autoload</code>.\n\n<pre>autoload(:B, &quot;b&quot;)\nautoload?(:B)      ...</pre>\n",null,1],["autoload?","Module","Rails/classes/Module.html#method-i-autoload-3F","(p1)","<p>Returns <em>filename</em> to be loaded if <em>name</em> is registered as\n<code>autoload</code> in the namespace of <em>mod</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">A</span>\n<span class=\"ruby-keyword\">end</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["autoload_at","ActiveSupport::Autoload","Ruby/classes/ActiveSupport/Autoload.html#method-i-autoload_at","(path)","",null,0],["autoload_once","Rails::Paths::Root","Ruby/classes/Rails/Paths/Root.html#method-i-autoload_once","()","",null,0],["autoload_once_paths","Rails::Engine::Configuration","Ruby/classes/Rails/Engine/Configuration.html#method-i-autoload_once_paths","()","",null,0],["autoload_paths","Rails::Engine::Configuration","Ruby/classes/Rails/Engine/Configuration.html#method-i-autoload_paths","()","",null,0],["autoload_paths","Rails::Paths::Root","Ruby/classes/Rails/Paths/Root.html#method-i-autoload_paths","()","",null,0],["autoload_under","ActiveSupport::Autoload","Ruby/classes/ActiveSupport/Autoload.html#method-i-autoload_under","(path)","",null,0],["autoloads","ActiveSupport::Autoload","Ruby/classes/ActiveSupport/Autoload.html#method-i-autoloads","()","",null,0],["avail_in","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-avail_in","()","<p>Returns bytes of data in the input buffer. Normally, returns 0.\n",null,1],["avail_out","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-avail_out","()","<p>Returns number of bytes of free spaces in output buffer.  Because the free\nspace is allocated automatically, …\n",null,1],["avail_out=","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-avail_out-3D","(p1)","<p>Allocates <code>size</code> bytes of free space in the output buffer. If\nthere are more than <code>size</code> bytes already in …\n",null,1],["available?","Gem","Rails/classes/Gem.html#method-c-available-3F","(dep, *requirements)","<p>See if a given gem is available.\n",null,1],["available_action?","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-i-available_action-3F","(action_name)","<p>Returns true if a method for the action is available and can be dispatched,\nfalse otherwise.\n<p>Notice that …\n",null,0],["available_tags","RSS::BaseListener","Rails/classes/RSS/BaseListener.html#method-c-available_tags","(uri)","<p>return the tag_names for setters associated with uri\n",null,1],["available_views","Erb::Generators::ScaffoldGenerator","Ruby/classes/Erb/Generators/ScaffoldGenerator.html#method-i-available_views","()","",null,0],["average","ActiveRecord::Calculations","Ruby/classes/ActiveRecord/Calculations.html#method-i-average","(column_name, options = {})","<p>Calculates the average value on a given column. Returns <code>nil</code> if\nthere’s no row. See <code>calculate</code> for examples …\n",null,0],["axe","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-axe","( elements, axe_name, rest )","",null,1],["backend","ActiveSupport::JSON","Ruby/classes/ActiveSupport/JSON.html#method-c-backend","()","",null,0],["backend=","ActiveSupport::JSON","Ruby/classes/ActiveSupport/JSON.html#method-c-backend-3D","(name)","",null,0],["backend=","ActiveSupport::XmlMini","Ruby/classes/ActiveSupport/XmlMini.html#method-i-backend-3D","(name)","",null,0],["backticks","Rake::AltSystem","Rails/classes/Rake/AltSystem.html#method-i-backticks","(cmd)","",null,1],["backtrace","Exception","Rails/classes/Exception.html#method-i-backtrace","()","<p>Returns any backtrace associated with the exception. The backtrace is an\narray of strings, each containing …\n",null,1],["backtrace","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-backtrace","()","<p>True if the backtrace option has been specified, or debug is on.\n",null,1],["backtrace","Thread","Rails/classes/Thread.html#method-i-backtrace","()","<p>Returns the current back trace of the <em>thr</em>.\n",null,1],["backtrace_cleaner","Rails","Ruby/classes/Rails.html#method-c-backtrace_cleaner","()","",null,0],["bang?","ActiveRecord::DynamicFinderMatch","Ruby/classes/ActiveRecord/DynamicFinderMatch.html#method-i-bang-3F","()","",null,0],["banner","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-c-banner","()","",null,0],["banner","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-banner","()","<p>Use Rails default banner.\n",null,0],["banner","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-c-banner","()","",null,0],["banner","OptionParser","Rails/classes/OptionParser.html#method-i-banner","()","<p>Heading banner preceding summary.\n",null,1],["base","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-base","(href = \"\")","<p>Generate a Document Base URI element as a String.\n<p><code>href</code> can either by a string, giving the base URL for ...\n",null,1],["base","OptionParser","Rails/classes/OptionParser.html#method-i-base","()","<p>Subject of #on_tail.\n",null,1],["base64","SecureRandom","Rails/classes/SecureRandom.html#method-c-base64","(n=nil)","<p>SecureRandom.base64 generates a random base64 string.\n<p>The argument <em>n</em> specifies the length of the random …\n",null,1],["base64","XMLRPC::Convert","Rails/classes/XMLRPC/Convert.html#method-c-base64","(str)","",null,1],["base64digest","Digest::Class","Rails/classes/Digest/Class.html#method-c-base64digest","(str, *args)","<p>Returns the base64 encoded hash value of a given <em>string</em>.  The\nreturn value is properly padded with ‘=’ …\n",null,1],["base64digest","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-base64digest","(str = nil)","<p>If none is given, returns the resulting hash value of the digest in a\nbase64 encoded form, keeping the …\n",null,1],["base64digest!","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-base64digest-21","()","<p>Returns the resulting hash value and resets the digest to the initial\nstate.\n",null,1],["base_class","ActiveRecord::Inheritance::ClassMethods","Ruby/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-base_class","()","<p>Returns the base AR subclass that this class descends from. If A extends\nAR::Base, A.base_class will …\n",null,0],["base_dir","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-base_dir","()","<p>Returns the full path to the base gem directory.\n<p>eg: /usr/local/lib/ruby/gems/1.8\n",null,1],["base_name","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-base_name","()","<p>Sets the base_name taking into account the current class namespace.\n",null,0],["base_name","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-base_name","()","<p>Base name of this file\n",null,1],["base_root","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-base_root","()","<p>Returns the base root for a common set of generators. This is used to\ndynamically guess the default source …\n",null,0],["basename","ActiveRecord::MigrationProxy","Ruby/classes/ActiveRecord/MigrationProxy.html#method-i-basename","()","",null,0],["basename","File","Rails/classes/File.html#method-c-basename","(p1, p2 = v2)","<p>Returns the last component of the filename given in <em>file_name</em>,\nwhich must be formed using forward slashes …\n",null,1],["basename","Pathname","Rails/classes/Pathname.html#method-i-basename","(p1 = v1)","<p>See <code>File.basename</code>.  Returns the last component of the path.\n",null,1],["basic","OpenSSL::OCSP::Response","Rails/classes/OpenSSL/OCSP/Response.html#method-i-basic","()","",null,1],["basic_auth","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-basic_auth","(account, password)","<p>Set the Authorization: header for “Basic” authorization.\n",null,1],["basic_auth","WEBrick::HTTPAuth","Rails/classes/WEBrick/HTTPAuth.html#method-i-basic_auth","(req, res, realm)","<p>Simple wrapper for providing basic authentication for a request.  When\ncalled with a request <code>req</code>, response …\n",null,1],["basic_quote_characters","Readline","Rails/classes/Readline.html#method-c-basic_quote_characters","()","<p>Gets a list of quote characters which can cause a word break.\n<p>Raises NotImplementedError if the using …\n",null,1],["basic_quote_characters=","Readline","Rails/classes/Readline.html#method-c-basic_quote_characters-3D","(p1)","<p>Sets a list of quote characters which can cause a word break.\n<p>Raises NotImplementedError if the using …\n",null,1],["basic_word_break_characters","Readline","Rails/classes/Readline.html#method-c-basic_word_break_characters","()","<p>Gets the basic list of characters that signal a break between words for the\ncompleter routine.\n<p>Raises …\n",null,1],["basic_word_break_characters=","Readline","Rails/classes/Readline.html#method-c-basic_word_break_characters-3D","(p1)","<p>Sets the basic list of characters that signal a break between words for the\ncompleter routine. The default …\n",null,1],["becomes","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-becomes","(klass)","<p>Returns an instance of the specified <code>klass</code> with the attributes\nof the current record. This is mostly …\n",null,0],["beep","Curses","Rails/classes/Curses.html#method-c-beep","()","<p>Sounds an audible alarm on the terminal, if possible; otherwise it flashes\nthe screen (visual bell). …\n",null,1],["before","ActionDispatch::Callbacks","Ruby/classes/ActionDispatch/Callbacks.html#method-c-before","(*args, &block)","",null,0],["before","Rails::Initializable::Initializer","Ruby/classes/Rails/Initializable/Initializer.html#method-i-before","()","",null,0],["before_configuration","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-before_configuration","(&block)","<p>First configurable block to run. Called before any initializers are run.\n",null,0],["before_eager_load","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-before_eager_load","(&block)","<p>Third configurable block to run. Does not run if config.cache_classes set\nto false.\n",null,0],["before_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-before_filter","","<p>Append a before filter. See _insert_callbacks for parameter details.\n",null,0],["before_initialize","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-before_initialize","(&block)","<p>Second configurable block to run. Called before frameworks initialize.\n",null,0],["before_running_rdoc","RDoc::Task","Rails/classes/RDoc/Task.html#method-i-before_running_rdoc","(&block)","<p>The block passed to this method will be called just before running the RDoc\ngenerator. It is allowed …\n",null,1],["before_validation","ActiveModel::Validations::Callbacks::ClassMethods","Ruby/classes/ActiveModel/Validations/Callbacks/ClassMethods.html#method-i-before_validation","(*args, &block)","",null,0],["begin","MatchData","Rails/classes/MatchData.html#method-i-begin","(p1)","<p>Returns the offset of the start of the <em>n</em>th element of the match\narray in the string. <em>n</em> can be a string …\n",null,1],["begin","Range","Rails/classes/Range.html#method-i-begin","()","<p>Returns the first object in <em>rng</em>.\n",null,1],["begin_adding","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-begin_adding","()","<p>Call this to mark the beginning of parsing for display purposes\n",null,1],["begin_adding","RDoc::Stats::Quiet","Rails/classes/RDoc/Stats/Quiet.html#method-i-begin_adding","(*)","<p>Prints a message at the beginning of parsing\n",null,1],["begin_db_transaction","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-begin_db_transaction","()","",null,0],["begin_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-begin_db_transaction","()","<p>Begins the transaction (and turns off auto-committing).\n",null,0],["begin_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-begin_db_transaction","()","<p>Begins a transaction.\n",null,0],["beginning_of_day","Date","Ruby/classes/Date.html#method-i-beginning_of_day","()","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the beginning of the …\n",null,0],["beginning_of_day","DateTime","Ruby/classes/DateTime.html#method-i-beginning_of_day","()","<p>Returns a new DateTime representing the start of the day (0:00)\n",null,0],["beginning_of_day","Time","Ruby/classes/Time.html#method-i-beginning_of_day","()","<p>Returns a new Time representing the start of the day (0:00)\n",null,0],["beginning_of_hour","DateTime","Ruby/classes/DateTime.html#method-i-beginning_of_hour","()","<p>Returns a new DateTime representing the start of the hour (hh:00:00)\n",null,0],["beginning_of_hour","Time","Ruby/classes/Time.html#method-i-beginning_of_hour","()","<p>Returns a new Time representing the start of the hour (x:00)\n",null,0],["beginning_of_line?","StringScanner","Rails/classes/StringScanner.html#method-i-beginning_of_line-3F","()","<p>Returns <code>true</code> iff the scan pointer is at the beginning of the\nline.\n\n<pre>s = StringScanner.new(&quot;test\\ntest\\n&quot;) ...</pre>\n",null,1],["beginning_of_month","Date","Ruby/classes/Date.html#method-i-beginning_of_month","()","<p>Returns a new ; DateTime objects will have time set to 0:00DateTime\nrepresenting the start of the month …\n",null,0],["beginning_of_month","Time","Ruby/classes/Time.html#method-i-beginning_of_month","()","<p>Returns a new Time representing the start of the month (1st of the month,\n0:00)\n",null,0],["beginning_of_quarter","Date","Ruby/classes/Date.html#method-i-beginning_of_quarter","()","<p>Returns a new Date/DateTime representing the start of the quarter (1st of\njanuary, april, july, october; …\n",null,0],["beginning_of_quarter","Time","Ruby/classes/Time.html#method-i-beginning_of_quarter","()","<p>Returns  a new Time representing the start of the quarter (1st of january,\napril, july, october, 0:00) …\n",null,0],["beginning_of_week","Date","Ruby/classes/Date.html#method-i-beginning_of_week","(start_day = :monday)","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the\nstart of this week. Week is assumed to start on <code>start_day</code> …\n",null,0],["beginning_of_week","Time","Ruby/classes/Time.html#method-i-beginning_of_week","(start_day = :monday)","<p>Returns a new Time representing the “start” of this week, week starts on\nstart_day (default …\n",null,0],["beginning_of_year","Date","Ruby/classes/Date.html#method-i-beginning_of_year","()","<p>Returns a new Date/DateTime representing the start of the year (1st of\njanuary; DateTime objects will …\n",null,0],["beginning_of_year","Time","Ruby/classes/Time.html#method-i-beginning_of_year","()","<p>Returns a new Time representing the start of the year (1st of january,\n0:00)\n",null,0],["begins?","Gem::Command","Rails/classes/Gem/Command.html#method-i-begins-3F","(long, short)","<p>True if <code>long</code> begins with the characters from\n<code>short</code>.\n",null,1],["begx","Curses::Window","Rails/classes/Curses/Window.html#method-i-begx","()","<p>A getter for the beginning column (X coord) of the window\n",null,1],["begy","Curses::Window","Rails/classes/Curses/Window.html#method-i-begy","()","<p>A getter for the beginning line (Y coord) of the window\n",null,1],["behavior","ActiveSupport::Deprecation","Ruby/classes/ActiveSupport/Deprecation.html#method-c-behavior","()","<p>Returns the set behavior or if one isn’t set, defaults to\n<code>:stderr</code>\n",null,0],["behavior=","ActiveSupport::Deprecation","Ruby/classes/ActiveSupport/Deprecation.html#method-c-behavior-3D","(behavior)","<p>Sets the behavior to the specified value. Can be a single value or an\narray.\n<p>Examples\n\n<pre>ActiveSupport::Deprecation.behavior ...</pre>\n",null,0],["belongs_to","ActiveRecord::Associations::ClassMethods","Ruby/classes/ActiveRecord/Associations/ClassMethods.html#method-i-belongs_to","(name, options = {})","<p>Specifies a one-to-one association with another class. This method should\nonly be used if this class …\n",null,0],["belongs_to","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-belongs_to","(*args)","",null,0],["belongs_to","ActiveRecord::ConnectionAdapters::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-belongs_to","(*args)","",null,0],["belongs_to?","Rails::Initializable::Initializer","Ruby/classes/Rails/Initializable/Initializer.html#method-i-belongs_to-3F","(group)","",null,0],["benchmark","ActiveSupport::Benchmarkable","Ruby/classes/ActiveSupport/Benchmarkable.html#method-i-benchmark","(message = \"Benchmarking\", options = {})","<p>Allows you to measure the execution time of a block in a template and\nrecords the result to the log. …\n",null,0],["benchmark","Benchmark","Rails/classes/Benchmark.html#method-c-benchmark","(caption = \"\", label_width = nil, format = nil, *labels)","<p>Invokes the block with a <code>Benchmark::Report</code> object, which may\nbe used to collect and report on the results …\n",null,1],["best_install_method","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-i-best_install_method","()","",null,0],["between?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-between-3F","(min, max)","",null,0],["between?","Comparable","Rails/classes/Comparable.html#method-i-between-3F","(p1, p2)","<p>Returns <code>false</code> if <em>obj</em> <code>&lt;=&gt;</code>\n<em>min</em> is less than zero or if <em>anObject</em>\n<code>&lt;=&gt;</code> <em>max</em> is greater than zero, …\n",null,1],["bin_dir","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-bin_dir","()","<p>Returns the full path to installed gem’s bin directory.\n<p>NOTE: do not confuse this with <code>bindir</code>, which is …\n",null,1],["bin_file","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-bin_file","(name)","<p>Returns the full path to an executable named <code>name</code> in this gem.\n",null,1],["bin_path","Gem","Rails/classes/Gem.html#method-c-bin_path","(name, exec_name = nil, *requirements)","<p>Find the full path to the executable for gem <code>name</code>.  If the\n<code>exec_name</code> is not given, the gem’s default_executable …\n",null,1],["binary=","Net::FTP","Rails/classes/Net/FTP.html#method-i-binary-3D","(newmode)","<p>A setter to toggle transfers in binary mode. <code>newmode</code> is either\n<code>true</code> or <code>false</code>\n",null,1],["binary?","RDoc::Parser","Rails/classes/RDoc/Parser.html#method-c-binary-3F","(file)","<p>Determines if the file is a “binary” file which basically means it has\ncontent that an RDoc …\n",null,1],["binary_mode","Gem","Rails/classes/Gem.html#method-c-binary_mode","()","<p>The mode needed to read a file as straight binary.\n",null,1],["bind","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-bind","(value)","",null,0],["bind","Rails::Initializable::Initializer","Ruby/classes/Rails/Initializable/Initializer.html#method-i-bind","(context)","",null,0],["bind","Addrinfo","Rails/classes/Addrinfo.html#method-i-bind","()","<p>creates a socket bound to self.\n<p>If a block is given, it is called with the socket and the value of the …\n",null,1],["bind","DL::Function","Rails/classes/DL/Function.html#method-i-bind","(&block)","",null,1],["bind","DL::Importer","Rails/classes/DL/Importer.html#method-i-bind","(signature, *opts, &blk)","",null,1],["bind","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-bind","(cl)","",null,1],["bind","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-bind","(cl)","",null,1],["bind","Socket","Rails/classes/Socket.html#method-i-bind","(p1)","<p>Binds to the given local address.\n<p>Parameter\n<p><code>local_sockaddr</code> - the <code>struct</code> sockaddr contained in\na string ...\n",null,1],["bind","UDPSocket","Rails/classes/UDPSocket.html#method-i-bind","(host, port)","<p>Binds <em>udpsocket</em> to <em>host</em>:<em>port</em>.\n\n<pre>u1 = UDPSocket.new\nu1.bind(&quot;127.0.0.1&quot;, 4913)\nu1.send &quot;message-to-self&quot;, ...</pre>\n",null,1],["bind","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-bind","(p1)","<p>Bind <em>umeth</em> to <em>obj</em>. If <code>Klass</code> was the class\nfrom which <em>umeth</em> was obtained, <code>obj.kind_of?(Klass)</code>\nmust be …\n",null,1],["bind_at_call","DL::CarriedFunction","Rails/classes/DL/CarriedFunction.html#method-i-bind_at_call","(&block)","",null,1],["bind_at_call","DL::Function","Rails/classes/DL/Function.html#method-i-bind_at_call","(&block)","",null,1],["bind_at_call","DL::TempFunction","Rails/classes/DL/TempFunction.html#method-i-bind_at_call","(&block)","",null,1],["bind_function","DL::Importer","Rails/classes/DL/Importer.html#method-i-bind_function","(name, ctype, argtype, call_type = nil, &block)","",null,1],["binding","Kernel","Rails/classes/Kernel.html#method-i-binding","()","<p>Returns a <code>Binding</code> object, describing the variable and method\nbindings at the point of call. This object …\n",null,1],["binding","Proc","Rails/classes/Proc.html#method-i-binding","()","<p>Returns the binding associated with <em>prc</em>. Note that\n<code>Kernel#eval</code> accepts either a <code>Proc</code> or a\n<code>Binding</code> object …\n",null,1],["bindir","Gem","Rails/classes/Gem.html#method-c-bindir","(install_dir=Gem.dir)","<p>The path where gem executables are to be installed.\n",null,1],["binmode","ARGF","Rails/classes/ARGF.html#method-i-binmode","()","<p>Puts <code>ARGF</code> into binary mode. Once a stream is in binary mode,\nit cannot be reset to non-binary mode.  …\n",null,1],["binmode","IO","Rails/classes/IO.html#method-i-binmode","()","<p>Puts <em>ios</em> into binary mode. Once a stream is in binary mode, it\ncannot be reset to nonbinary mode.\n<p>newline …\n",null,1],["binmode","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-binmode","(mode = nil)","<p>Turn newline conversion on (<code>mode</code> == false) or off\n(<code>mode</code> == true), or return the current value (<code>mode</code>\nis …\n",null,1],["binmode","StringIO","Rails/classes/StringIO.html#method-i-binmode","()","",null,1],["binmode=","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-binmode-3D","(mode)","<p>Turn newline conversion on (false) or off (true).\n",null,1],["binmode?","ARGF","Rails/classes/ARGF.html#method-i-binmode-3F","()","\n<pre>Returns true if +ARGF+ is being read in binary mode; false otherwise. (To\nenable binary mode use +ARGF.binmode+.</pre>\n",null,1],["binmode?","IO","Rails/classes/IO.html#method-i-binmode-3F","()","<p>Returns <code>true</code> if <em>ios</em> is binmode.\n",null,1],["binread","IO","Rails/classes/IO.html#method-c-binread","(p1, p2 = v2, p3 = v3)","<p>Opens the file, optionally seeks to the given <em>offset</em>, then returns\n<em>length</em> bytes (defaulting to the rest …\n",null,1],["binread","Pathname","Rails/classes/Pathname.html#method-i-binread","(p1 = v1, p2 = v2)","<p>See <code>IO.binread</code>.  Returns all the bytes from the file, or the\nfirst <code>N</code> if specified.\n",null,1],["binwrite","IO","Rails/classes/IO.html#method-c-binwrite","(*args)","<p>Opens the file, optionally seeks to the given <em>offset</em>, writes\n<em>string</em> then returns the length written. …\n",null,1],["bit_set?","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-bit_set-3F","(p1)","",null,1],["bitmap_for","RDoc::Markup::Attribute","Rails/classes/RDoc/Markup/Attribute.html#method-c-bitmap_for","(name)","<p>Returns a unique bit for <code>name</code>\n",null,1],["bkgd","Curses","Rails/classes/Curses.html#method-c-bkgd","(p1)","<p>Window background manipulation routines.\n<p>Set the background property of the current and then apply the …\n",null,1],["bkgd","Curses::Window","Rails/classes/Curses/Window.html#method-i-bkgd","(p1)","<p>Set the background of the current window and apply character Integer\n<code>ch</code> to every character.\n<p>see also  …\n",null,1],["bkgdset","Curses","Rails/classes/Curses.html#method-c-bkgdset","(p1)","<p>Manipulate the background of the named window with character Integer\n<code>ch</code>\n<p>The background becomes a property …\n",null,1],["bkgdset","Curses::Window","Rails/classes/Curses/Window.html#method-i-bkgdset","(p1)","<p>Manipulate the background of the current window with character Integer\n<code>ch</code>\n<p>see also Curses.bkgdset\n",null,1],["blank?","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-blank-3F","()","",null,0],["blank?","FalseClass","Ruby/classes/FalseClass.html#method-i-blank-3F","()","<p><code>false</code> is blank:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">false</span>.<span class=\"ruby-identifier\">blank?</span> <span class=\"ruby-comment\"># =&gt; true</span>\n</pre>\n",null,0],["blank?","NilClass","Ruby/classes/NilClass.html#method-i-blank-3F","()","<p><code>nil</code> is blank:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">blank?</span> <span class=\"ruby-comment\"># =&gt; true</span>\n</pre>\n",null,0],["blank?","Object","Ruby/classes/Object.html#method-i-blank-3F","()","<p>An object is blank if it’s false, empty, or a whitespace string. For\nexample, “”, “   …\n",null,0],["blank?","String","Ruby/classes/String.html#method-i-blank-3F","()","<p>A string is blank if it’s empty or contains whitespaces only:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;&quot;</span>.<span class=\"ruby-identifier\">blank?</span>                 <span class=\"ruby-comment\"># =&gt; true</span>\n<span class=\"ruby-string\">&quot;   ...\n</span></pre>\n",null,0],["blank?","TrueClass","Ruby/classes/TrueClass.html#method-i-blank-3F","()","<p><code>true</code> is not blank:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">true</span>.<span class=\"ruby-identifier\">blank?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n</pre>\n",null,0],["blinding_off!","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-blinding_off-21","()","",null,1],["blinding_on!","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-blinding_on-21","()","",null,1],["blksize","File::Stat","Rails/classes/File/Stat.html#method-i-blksize","()","<p>Returns the native file system’s block size. Will return <code>nil</code>\non platforms that don’t support this information. …\n",null,1],["block_format","ActionMailer::MailHelper","Ruby/classes/ActionMailer/MailHelper.html#method-i-block_format","(text)","<p>Uses Text::Format to take the text and format it, indented two spaces for\neach line, and wrapped at 72 …\n",null,0],["block_given?","Kernel","Rails/classes/Kernel.html#method-i-block_given-3F","()","<p>Returns <code>true</code> if <code>yield</code> would execute a block in\nthe current context. The <code>iterator?</code> form is mildly deprecated.\n…\n",null,1],["block_length","Digest::HMAC","Rails/classes/Digest/HMAC.html#method-i-block_length","()","<p>Returns the block length in bytes of the hmac.\n",null,1],["block_length","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-block_length","()","<p>Returns the block length of the digest.\n<p>This method is overridden by each implementation subclass.\n",null,1],["block_length","OpenSSL::Digest","Rails/classes/OpenSSL/Digest.html#method-i-block_length","()","<p>Returns the block length of the digest algorithm, i.e. the length in bytes\nof an individual block. Most …\n",null,1],["block_output_synchronize","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-c-block_output_synchronize","(&b)","",null,1],["block_params=","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-block_params-3D","(value)","<p>Attempts to sanitize the content passed by the ruby parser: remove outer\nparentheses, etc.\n",null,1],["block_scanf","String","Rails/classes/String.html#method-i-block_scanf","(fstr)","<p>Scans the current string until the match is exhausted yielding each match\nas it is encountered in the …\n",null,1],["block_yield","DRb::DRbServer::InvokeMethod18Mixin","Rails/classes/DRb/DRbServer/InvokeMethod18Mixin.html#method-i-block_yield","(x)","",null,1],["blockdev?","File","Rails/classes/File.html#method-c-blockdev-3F","(p1)","<p>Returns <code>true</code> if the named file is a block device.\n",null,1],["blockdev?","File::Stat","Rails/classes/File/Stat.html#method-i-blockdev-3F","()","<p>Returns <code>true</code> if the file is a block device, <code>false</code>\nif it isn’t or if the operating system doesn’t support …\n",null,1],["blockdev?","FileTest","Rails/classes/FileTest.html#method-i-blockdev-3F","(p1)","<p>Returns <code>true</code> if the named file is a block device.\n",null,1],["blockdev?","Pathname","Rails/classes/Pathname.html#method-i-blockdev-3F","()","<p>See <code>FileTest.blockdev?</code>.\n",null,1],["blockquote","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-blockquote","(cite = {})","<p>Generate a BlockQuote element as a string.\n<p><code>cite</code> can either be a string, give the URI for the source of\n...\n",null,1],["blocks","File::Stat","Rails/classes/File/Stat.html#method-i-blocks","()","<p>Returns the number of native file system blocks allocated for this file, or\n<code>nil</code> if the operating system …\n",null,1],["bm","Benchmark","Rails/classes/Benchmark.html#method-c-bm","(label_width = 0, *labels)","<p>A simple interface to the #benchmark method, #bm is generates sequential\nreports with labels.  The parameters …\n",null,1],["bmbm","Benchmark","Rails/classes/Benchmark.html#method-c-bmbm","(width = 0)","<p>Sometimes benchmark results are skewed because code executed earlier\nencounters different garbage collection …\n",null,1],["body","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-body","()","<p>The request body is an IO input stream. If the RAW_POST_DATA environment\nvariable is already set, wrap …\n",null,0],["body","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-body","()","",null,0],["body","Net::HTTPResponse","Rails/classes/Net/HTTPResponse.html#method-i-body","()","<p>Returns the full entity body.\n<p>Calling this method a second or subsequent time will return the string\nalready …\n",null,1],["body","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-body","(&block)","",null,1],["body=","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-body-3D","(body)","",null,0],["body=","Net::HTTPGenericRequest","Rails/classes/Net/HTTPGenericRequest.html#method-i-body-3D","(str)","",null,1],["body=","Net::HTTPResponse","Rails/classes/Net/HTTPResponse.html#method-i-body-3D","(value)","<p>Because it may be necessary to modify the body, Eg, decompression this\nmethod facilitates that.\n",null,1],["body_exist?","Net::HTTPGenericRequest","Rails/classes/Net/HTTPGenericRequest.html#method-i-body_exist-3F","()","",null,1],["body_parts","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-body_parts","()","",null,0],["body_permitted?","Net::HTTPResponse","Rails/classes/Net/HTTPResponse.html#method-c-body_permitted-3F","()","<p>true if the response has a body.\n",null,1],["body_stream=","Net::HTTPGenericRequest","Rails/classes/Net/HTTPGenericRequest.html#method-i-body_stream-3D","(input)","",null,1],["bool","Socket::Option","Rails/classes/Socket/Option.html#method-c-bool","(p1, p2, p3, p4)","<p>Creates a new Socket::Option object which contains boolean as data.\nActually 0 or 1 as int is used.\n\n<pre>p ...</pre>\n",null,1],["bool","Socket::Option","Rails/classes/Socket/Option.html#method-i-bool","()","<p>Returns the data in <em>sockopt</em> as an boolean value.\n\n<pre>sockopt = Socket::Option.int(:INET, :SOCKET, :KEEPALIVE, ...</pre>\n",null,1],["boolean","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-boolean","( object=nil )","<p>UNTESTED\n",null,1],["boolean","XMLRPC::Convert","Rails/classes/XMLRPC/Convert.html#method-c-boolean","(str)","",null,1],["both?","Gem::LocalRemoteOptions","Rails/classes/Gem/LocalRemoteOptions.html#method-i-both-3F","()","<p>Is fetching of local and remote information enabled?\n",null,1],["bottom","IRB::Frame","Rails/classes/IRB/Frame.html#method-i-bottom","(n = 0)","",null,1],["bottom","IRB::Frame","Rails/classes/IRB/Frame.html#method-c-bottom","(n = 0)","<p>singleton functions\n",null,1],["bound?","DL::Function","Rails/classes/DL/Function.html#method-i-bound-3F","()","",null,1],["box","Curses::Window","Rails/classes/Curses/Window.html#method-i-box","(p1, p2, p3 = v3)","<p>set the characters to frame the window in. The vertical <code>vert</code>\nand horizontal <code>hor</code> character.\n\n<pre>win = Curses::Window.new(5,5,5,5) ...</pre>\n",null,1],["break","PrettyPrint::Group","Rails/classes/PrettyPrint/Group.html#method-i-break","()","",null,1],["break?","PrettyPrint::Group","Rails/classes/PrettyPrint/Group.html#method-i-break-3F","()","",null,1],["break_outmost_groups","PrettyPrint","Rails/classes/PrettyPrint.html#method-i-break_outmost_groups","()","<p>Breaks the buffer into lines that are shorter than #maxwidth\n",null,1],["break_points","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-break_points","()","",null,1],["break_points","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-break_points","()","",null,1],["breakable","PrettyPrint","Rails/classes/PrettyPrint.html#method-i-breakable","(sep=' ', width=sep.length)","<p>This says “you can break a line here if necessary”, and a\n<code>width</code>-column text <code>sep</code> is inserted …\n",null,1],["breakable","PrettyPrint::SingleLine","Rails/classes/PrettyPrint/SingleLine.html#method-i-breakable","(sep=' ', width=nil)","",null,1],["breakpoint","Kernel","Ruby/classes/Kernel.html#method-i-breakpoint","()","",null,0],["broadcast","ConditionVariable","Rails/classes/ConditionVariable.html#method-i-broadcast","()","<p>Wakes up all threads waiting for this lock.\n",null,1],["broadcast","MonitorMixin::ConditionVariable","Rails/classes/MonitorMixin/ConditionVariable.html#method-i-broadcast","()","<p>Wakes up all threads waiting for this lock.\n",null,1],["brush_for","RailsGuides::TextileExtensions","Ruby/classes/RailsGuides/TextileExtensions.html#method-i-brush_for","(code_type)","",null,0],["bufferSize","Win32::SSPI::SecurityBuffer","Rails/classes/Win32/SSPI/SecurityBuffer.html#method-i-bufferSize","()","",null,1],["bufferType","Win32::SSPI::SecurityBuffer","Rails/classes/Win32/SSPI/SecurityBuffer.html#method-i-bufferType","()","",null,1],["build","ActionController::Middleware","Ruby/classes/ActionController/Middleware.html#method-c-build","(app)","",null,0],["build","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-build","(app = nil, &block)","",null,0],["build","ActionDispatch::MiddlewareStack::Middleware","Ruby/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-build","(app)","",null,0],["build","ActionView::Resolver::Path","Ruby/classes/ActionView/Resolver/Path.html#method-c-build","(name, prefix, partial)","",null,0],["build","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-build","(*args, &block)","",null,0],["build","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-build","(attributes = {})","<p>Builds a new, unsaved record using the default values from the remote\nserver so that it can be used with …\n",null,0],["build","Rails::Generators::ActiveModel","Ruby/classes/Rails/Generators/ActiveModel.html#method-c-build","(klass, params=nil)","<p>GET new POST create\n",null,0],["build","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-build","(meth, *args)","",null,0],["build","Gem::Builder","Rails/classes/Gem/Builder.html#method-i-build","(skip_validation=false)","<p>Builds the gem from the specification.  Returns the name of the file\nwritten.\n",null,1],["build","Gem::Ext::ConfigureBuilder","Rails/classes/Gem/Ext/ConfigureBuilder.html#method-c-build","(extension, directory, dest_path, results)","",null,1],["build","Gem::Ext::ExtConfBuilder","Rails/classes/Gem/Ext/ExtConfBuilder.html#method-c-build","(extension, directory, dest_path, results)","",null,1],["build","Gem::Ext::RakeBuilder","Rails/classes/Gem/Ext/RakeBuilder.html#method-c-build","(extension, directory, dest_path, results)","",null,1],["build","Matrix","Rails/classes/Matrix.html#method-c-build","(row_size, column_size = row_size)","<p>Creates a matrix of size <code>row_size</code> x <code>column_size</code>.\nIt fills the values by calling the given block, passing …\n",null,1],["build","URI::FTP","Rails/classes/URI/FTP.html#method-c-build","(args)","<p>Description\n<p>Creates a new URI::FTP object from components, with syntax checking.\n<p>The components accepted …\n",null,1],["build","URI::Generic","Rails/classes/URI/Generic.html#method-c-build","(args)","<p>Synopsis\n<p>See #new\n<p>Description\n",null,1],["build","URI::HTTP","Rails/classes/URI/HTTP.html#method-c-build","(args)","<p>Description\n<p>Create a new URI::HTTP object from components, with syntax checking.\n<p>The components accepted …\n",null,1],["build","URI::LDAP","Rails/classes/URI/LDAP.html#method-c-build","(args)","<p>Description\n<p>Create a new URI::LDAP object from components, with syntax checking.\n<p>The components accepted …\n",null,1],["build","URI::MailTo","Rails/classes/URI/MailTo.html#method-c-build","(args)","<p>Description\n<p>Creates a new URI::MailTo object from components, with syntax checking.\n<p>Components can be provided …\n",null,1],["build2","URI::Generic","Rails/classes/URI/Generic.html#method-c-build2","(args)","<p>Synopsis\n<p>See #new\n<p>Description\n",null,1],["build_arel","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-build_arel","()","",null,0],["build_args","Gem::Command","Rails/classes/Gem/Command.html#method-c-build_args","()","<p>Arguments used when building gems\n",null,1],["build_args=","Gem::Command","Rails/classes/Gem/Command.html#method-c-build_args-3D","(value)","",null,1],["build_cert","Gem::Security","Rails/classes/Gem/Security.html#method-c-build_cert","(name, key, opt = {})","<p>Build a certificate from the given DN and private key.\n",null,1],["build_extensions","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-build_extensions","()","<p>Builds extensions.  Valid types of extensions are extconf.rb files,\nconfigure scripts and rakefiles or …\n",null,1],["build_heading","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-build_heading","(level)","<p>Builds a Heading of <code>level</code>\n",null,1],["build_indicies","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-build_indicies","()","<p>Build various indicies\n",null,1],["build_legacy_indicies","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-build_legacy_indicies","()","<p>Builds indicies for RubyGems older than 1.2.x\n",null,1],["build_list","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-build_list","(margin)","<p>Builds a List flush to <code>margin</code>\n",null,1],["build_marshal_gemspecs","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-build_marshal_gemspecs","()","<p>Builds Marshal quick index gemspecs.\n",null,1],["build_mem_cache","ActiveSupport::Cache::MemCacheStore","Ruby/classes/ActiveSupport/Cache/MemCacheStore.html#method-c-build_mem_cache","(*addresses)","",null,0],["build_modern_index","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-build_modern_index","(index, file, name)","<p>Build a single index for RubyGems 1.2 and newer\n",null,1],["build_modern_indicies","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-build_modern_indicies","()","<p>Builds indicies for RubyGems 1.2 and newer. Handles full, latest,\nprerelease\n",null,1],["build_original_fullpath","Rails::Application","Ruby/classes/Rails/Application.html#method-i-build_original_fullpath","(env)","",null,0],["build_paragraph","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-build_paragraph","(margin)","<p>Builds a Paragraph that is flush to <code>margin</code>\n",null,1],["build_rss","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-build_rss","()","<p>Builds an RSS feed for past two days gem releases according to the gem’s\ndate.\n",null,1],["build_self_signed_cert","Gem::Security","Rails/classes/Gem/Security.html#method-c-build_self_signed_cert","(email_addr, opt = {})","<p>Build a self-signed certificate for the given email address.\n",null,1],["build_verbatim","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-build_verbatim","(margin)","<p>Builds a Verbatim that is indented from <code>margin</code>.\n<p>The verbatim block is shifted left (the least indented …\n",null,1],["builder","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-builder","()","",null,0],["builtin_curves","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-c-builtin_curves","()","<p>See the OpenSSL documentation for EC_builtin_curves()\n",null,1],["bump","Gem::Version","Rails/classes/Gem/Version.html#method-i-bump","()","<p>Return a new version object where the next to the last revision number is\none greater (e.g., 5.3.1 =&gt; …\n",null,1],["bundle_command","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-bundle_command","(command)","",null,0],["bundler?","Object","Ruby/classes/Object.html#method-i-bundler-3F","()","<p>This is a predicate useful for the doc:guides task of applications.\n",null,0],["button","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-button","(value=nil, options={})","<p>Add the submit button for the given form. When no value is given, it checks\nif the object is a new resource …\n",null,0],["button_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-button_tag","(content_or_options = nil, options = nil, &block)","<p>Creates a button element that defines a <code>submit</code> button,\n<code>reset</code>button or a generic button which can be used …\n",null,0],["button_to","ActionView::Helpers::UrlHelper","Ruby/classes/ActionView/Helpers/UrlHelper.html#method-i-button_to","(name, options = {}, html_options = {})","<p>Generates a form containing a single button that submits to the URL created\nby the set of <code>options</code>. This …\n",null,0],["button_to_function","ActionView::Helpers::JavaScriptHelper","Ruby/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-button_to_function","(name, function=nil, html_options={})","<p>Returns a button whose <code>onclick</code> handler triggers the passed\nJavaScript.\n<p>The helper receives a name, JavaScript …\n",null,0],["by_col","CSV::Table","Rails/classes/CSV/Table.html#method-i-by_col","()","<p>Returns a duplicate table object, in column mode.  This is handy for\nchaining in a single call without …\n",null,1],["by_col!","CSV::Table","Rails/classes/CSV/Table.html#method-i-by_col-21","()","<p>Switches the mode of this table to column mode.  All calls to indexing and\niteration methods will work …\n",null,1],["by_col_or_row","CSV::Table","Rails/classes/CSV/Table.html#method-i-by_col_or_row","()","<p>Returns a duplicate table object, in mixed mode.  This is handy for\nchaining in a single call without …\n",null,1],["by_col_or_row!","CSV::Table","Rails/classes/CSV/Table.html#method-i-by_col_or_row-21","()","<p>Switches the mode of this table to mixed mode.  All calls to indexing and\niteration methods will use …\n",null,1],["by_id","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-c-by_id","(p1)","",null,1],["by_row","CSV::Table","Rails/classes/CSV/Table.html#method-i-by_row","()","<p>Returns a duplicate table object, in row mode.  This is handy for chaining\nin a single call without changing …\n",null,1],["by_row!","CSV::Table","Rails/classes/CSV/Table.html#method-i-by_row-21","()","<p>Switches the mode of this table to row mode.  All calls to indexing and\niteration methods will work with …\n",null,1],["byte","Numeric","Ruby/classes/Numeric.html#method-i-byte","()","",null,0],["bytes","Numeric","Ruby/classes/Numeric.html#method-i-bytes","()","<p>Enables the use of byte calculations and declarations, like 45.bytes +\n2.6.megabytes\n",null,0],["bytes","ARGF","Rails/classes/ARGF.html#method-i-bytes","()","\n<pre>Iterates over each byte of each file in +ARGV+.\nA byte is returned as a +Fixnum+ in the range 0..255. ...</pre>\n",null,1],["bytes","IO","Rails/classes/IO.html#method-i-bytes","()","<p>Calls the given block once for each byte (0..255) in <em>ios</em>, passing\nthe byte as an argument. The stream …\n",null,1],["bytes","REXML::Child","Rails/classes/REXML/Child.html#method-i-bytes","()","<p>This doesn’t yet handle encodings\n",null,1],["bytes","Random","Rails/classes/Random.html#method-i-bytes","(p1)","<p>Returns a random binary string.  The argument size specified the length of\nthe result string.\n",null,1],["bytes","String","Rails/classes/String.html#method-i-bytes","()","<p>Passes each byte in <em>str</em> to the given block, or returns an\nenumerator if no block is given.\n\n<pre>&quot;hello&quot;.each_byte ...</pre>\n",null,1],["bytes","StringIO","Rails/classes/StringIO.html#method-i-bytes","()","<p>See IO#each_byte.\n",null,1],["bytes","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-bytes","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["bytes_read","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-bytes_read","()","<p>Number of bytes read out of the tar entry\n",null,1],["bytesize","String","Rails/classes/String.html#method-i-bytesize","()","<p>Returns the length of <em>str</em> in bytes.\n",null,1],["byteslice","String","Rails/classes/String.html#method-i-byteslice","(*args)","<p>Byte Reference—If passed a single <code>Fixnum</code>, returns a substring\nof one byte at that position. If passed …\n",null,1],["cache","ActionController::Caching","Ruby/classes/ActionController/Caching.html#method-i-cache","(key, options = {}, &block)","<p>Convenience accessor\n",null,0],["cache","ActionView::Helpers::CacheHelper","Ruby/classes/ActionView/Helpers/CacheHelper.html#method-i-cache","(name = {}, options = nil, &block)","<p>This helper exposes a method for caching fragments of a view  rather than\nan entire action or page.  …\n",null,0],["cache","ActiveRecord::ConnectionAdapters::QueryCache","Ruby/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-cache","()","<p>Enable the query cache within the block.\n",null,0],["cache","ActiveRecord::QueryCache::ClassMethods","Ruby/classes/ActiveRecord/QueryCache/ClassMethods.html#method-i-cache","(&block)","<p>Enable the query cache within the block if Active Record is configured.\n",null,0],["cache","Rails","Ruby/classes/Rails.html#method-c-cache","()","",null,0],["cache","Prime::TrialDivision","Rails/classes/Prime/TrialDivision.html#method-i-cache","()","<p>Returns the cached prime numbers.\n",null,1],["cache_attribute?","ActiveRecord::AttributeMethods::Read::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-cache_attribute-3F","(attr_name)","<p>Returns <code>true</code> if the provided attribute is being cached.\n",null,0],["cache_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-cache_attributes","(*attribute_names)","<p><code>cache_attributes</code> allows you to declare which converted\nattribute values should be cached. Usually caching ...\n",null,0],["cache_dir","Gem","Rails/classes/Gem.html#method-c-cache_dir","(custom_dir=false)","<p>Get the appropriate cache path.\n<p>Pass a string to use a different base path, or nil/false (default) for …\n",null,1],["cache_dir","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-i-cache_dir","(uri)","<p>Returns the local directory to write <code>uri</code> to.\n",null,1],["cache_dir","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-cache_dir","()","<p>Returns the full path to the cache directory containing this spec’s cached\ngem.\n",null,1],["cache_file","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-cache_file","()","<p>Returns the full path to the cached gem for this spec.\n",null,1],["cache_fixtures","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-c-cache_fixtures","(connection, fixtures_map)","",null,0],["cache_for_connection","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-c-cache_for_connection","(connection)","",null,0],["cache_gem","Gem","Rails/classes/Gem.html#method-c-cache_gem","(filename, user_dir=false)","<p>Given a gem path, find the gem in cache.\n<p>Pass a string as the second argument to use a different base …\n",null,1],["cache_gem","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-cache_gem","()","",null,1],["cache_key","ActiveRecord::Integration","Ruby/classes/ActiveRecord/Integration.html#method-i-cache_key","()","<p>Returns a cache key that can be used to identify this record.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Product</span>.<span class=\"ruby-identifier\">new</span>.<span class=\"ruby-identifier\">cache_key</span>     <span class=\"ruby-comment\"># =&gt; &quot;products/new&quot; ...</span>\n</pre>\n",null,0],["cache_page","ActionController::Caching::Pages","Ruby/classes/ActionController/Caching/Pages.html#method-i-cache_page","(content = nil, options = nil, gzip = Zlib::BEST_COMPRESSION)","<p>Manually cache the <code>content</code> in the key determined by\n<code>options</code>. If no content is provided, the contents …\n",null,0],["cache_page","ActionController::Caching::Pages::ClassMethods","Ruby/classes/ActionController/Caching/Pages/ClassMethods.html#method-i-cache_page","(content, path, extension = nil, gzip = Zlib::BEST_COMPRESSION)","<p>Manually cache the <code>content</code> in the key determined by\n<code>path</code>. Example:\n\n<pre>cache_page &quot;I'm the cached content&quot;, ...</pre>\n",null,0],["cache_path","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-cache_path","()","<p>Path to the cache file\n",null,1],["cache_store","ActionController::Caching::ConfigMethods","Ruby/classes/ActionController/Caching/ConfigMethods.html#method-i-cache_store","()","",null,0],["cache_store=","ActionController::Caching::ConfigMethods","Ruby/classes/ActionController/Caching/ConfigMethods.html#method-i-cache_store-3D","(store)","",null,0],["cache_template_loading","ActionView::Base","Ruby/classes/ActionView/Base.html#method-c-cache_template_loading","()","",null,0],["cache_template_loading=","ActionView::Base","Ruby/classes/ActionView/Base.html#method-c-cache_template_loading-3D","(value)","",null,0],["cached_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-cached_attributes","()","<p>Returns the attributes which are cached. By default time related columns\nwith datatype <code>:datetime, :timestamp,</code> …\n",null,0],["cached_fixtures","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-c-cached_fixtures","(connection, keys_to_fetch = nil)","",null,0],["caches_action","ActionController::Caching::Actions::ClassMethods","Ruby/classes/ActionController/Caching/Actions/ClassMethods.html#method-i-caches_action","(*actions)","<p>Declares that <code>actions</code> should be cached. See\nActionController::Caching::Actions for details.\n",null,0],["caches_page","ActionController::Caching::Pages::ClassMethods","Ruby/classes/ActionController/Caching/Pages/ClassMethods.html#method-i-caches_page","(*actions)","<p>Caches the <code>actions</code> using the page-caching approach that’ll\nstore the cache in a path within the page_cache_directory …\n",null,0],["cachesize=","GDBM","Rails/classes/GDBM.html#method-i-cachesize-3D","(p1)","<p>Sets the size of the internal bucket cache to <em>size</em>.\n",null,1],["caching_allowed?","ActionController::Caching","Ruby/classes/ActionController/Caching.html#method-i-caching_allowed-3F","()","",null,0],["calculate","ActiveRecord::Calculations","Ruby/classes/ActiveRecord/Calculations.html#method-i-calculate","(operation, column_name, options = {})","<p>This calculates aggregate values in the given column. Methods for count,\nsum, average, minimum, and maximum …\n",null,0],["calculate","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-calculate","()","<p>Calculates documentation totals and percentages for classes, modules,\nconstants, attributes and methods. …\n",null,1],["calculate_ip","ActionDispatch::RemoteIp::GetIp","Ruby/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-calculate_ip","()","<p>Determines originating IP address. REMOTE_ADDR is the standard but will be\nwrong if the user is behind …\n",null,0],["call","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-c-call","(env)","<p>Makes the controller a rack endpoint that points to the action in the given\nenv’s action_dispatch.request.path_parameters …\n",null,0],["call","ActionController::Middleware::ActionMiddleware","Ruby/classes/ActionController/Middleware/ActionMiddleware.html#method-i-call","(env)","",null,0],["call","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-c-call","(*args)","<p>Initializes a new responder an invoke the proper format. If the format is\nnot defined, call to_format. …\n",null,0],["call","ActionDispatch::BestStandardsSupport","Ruby/classes/ActionDispatch/BestStandardsSupport.html#method-i-call","(env)","",null,0],["call","ActionDispatch::Callbacks","Ruby/classes/ActionDispatch/Callbacks.html#method-i-call","(env)","",null,0],["call","ActionDispatch::Cookies","Ruby/classes/ActionDispatch/Cookies.html#method-i-call","(env)","",null,0],["call","ActionDispatch::DebugExceptions","Ruby/classes/ActionDispatch/DebugExceptions.html#method-i-call","(env)","",null,0],["call","ActionDispatch::FileHandler","Ruby/classes/ActionDispatch/FileHandler.html#method-i-call","(env)","",null,0],["call","ActionDispatch::Flash","Ruby/classes/ActionDispatch/Flash.html#method-i-call","(env)","",null,0],["call","ActionDispatch::Head","Ruby/classes/ActionDispatch/Head.html#method-i-call","(env)","",null,0],["call","ActionDispatch::ParamsParser","Ruby/classes/ActionDispatch/ParamsParser.html#method-i-call","(env)","",null,0],["call","ActionDispatch::PublicExceptions","Ruby/classes/ActionDispatch/PublicExceptions.html#method-i-call","(env)","",null,0],["call","ActionDispatch::Reloader","Ruby/classes/ActionDispatch/Reloader.html#method-i-call","(env)","",null,0],["call","ActionDispatch::RemoteIp","Ruby/classes/ActionDispatch/RemoteIp.html#method-i-call","(env)","",null,0],["call","ActionDispatch::RequestId","Ruby/classes/ActionDispatch/RequestId.html#method-i-call","(env)","",null,0],["call","ActionDispatch::Rescue","Ruby/classes/ActionDispatch/Rescue.html#method-i-call","(env)","",null,0],["call","ActionDispatch::ShowExceptions","Ruby/classes/ActionDispatch/ShowExceptions.html#method-i-call","(env)","",null,0],["call","ActionDispatch::Static","Ruby/classes/ActionDispatch/Static.html#method-i-call","(env)","",null,0],["call","ActionView::Template::Handlers::Builder","Ruby/classes/ActionView/Template/Handlers/Builder.html#method-i-call","(template)","",null,0],["call","ActionView::Template::Handlers::ERB","Ruby/classes/ActionView/Template/Handlers/ERB.html#method-c-call","(template)","",null,0],["call","ActionView::Template::Handlers::ERB","Ruby/classes/ActionView/Template/Handlers/ERB.html#method-i-call","(template)","",null,0],["call","ActiveRecord::ConnectionAdapters::ConnectionManagement","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html#method-i-call","(env)","",null,0],["call","ActiveRecord::IdentityMap::Middleware","Ruby/classes/ActiveRecord/IdentityMap/Middleware.html#method-i-call","(env)","",null,0],["call","ActiveRecord::QueryCache","Ruby/classes/ActiveRecord/QueryCache.html#method-i-call","(env)","",null,0],["call","ActiveSupport::LogSubscriber","Ruby/classes/ActiveSupport/LogSubscriber.html#method-i-call","(message, *args)","",null,0],["call","I18n::ExceptionHandler","Ruby/classes/I18n/ExceptionHandler.html#method-i-call","(exception, locale, key, options)","",null,0],["call","Logger::SimpleFormatter","Ruby/classes/Logger/SimpleFormatter.html#method-i-call","(severity, timestamp, progname, msg)","<p>This method is invoked when a log event occurs\n",null,0],["call","Rails::Application","Ruby/classes/Rails/Application.html#method-i-call","(env)","",null,0],["call","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-call","(env)","",null,0],["call","Rails::Rack::Debugger","Ruby/classes/Rails/Rack/Debugger.html#method-i-call","(env)","",null,0],["call","Rails::Rack::LogTailer","Ruby/classes/Rails/Rack/LogTailer.html#method-i-call","(env)","",null,0],["call","Rails::Rack::Logger","Ruby/classes/Rails/Rack/Logger.html#method-i-call","(env)","",null,0],["call","Continuation","Rails/classes/Continuation.html#method-i-call","(*args)","<p>Invokes the continuation. The program continues from the end of the\n<code>callcc</code> block. If no arguments are …\n",null,1],["call","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-call","(p1)","<p>Calls the function pointer passing in <code>ary</code> as values to the\nunderlying C function.  The return value depends …\n",null,1],["call","DL::Function","Rails/classes/DL/Function.html#method-i-call","(*args, &block)","",null,1],["call","Fiddle::Closure::BlockCaller","Rails/classes/Fiddle/Closure/BlockCaller.html#method-i-call","(*args)","<p>Calls the constructed BlockCaller, with <code>args</code>\n<p>For an example see Fiddle::Closure::BlockCaller.new\n",null,1],["call","Fiddle::Function","Rails/classes/Fiddle/Function.html#method-i-call","(*args)","<p>Calls the constructed Function, with <code>args</code>\n<p>For an example see Fiddle::Function\n",null,1],["call","Logger::Formatter","Rails/classes/Logger/Formatter.html#method-i-call","(severity, time, progname, msg)","",null,1],["call","Method","Rails/classes/Method.html#method-i-call","(*args)","<p>Invokes the <em>meth</em> with the specified arguments, returning the\nmethod’s return value.\n\n<pre>m = 12.method(&quot;+&quot;) ...</pre>\n",null,1],["call","Proc","Rails/classes/Proc.html#method-i-call","(*args)","<p>Invokes the block, setting the block’s parameters to the values in\n<em>params</em> using something close to method …\n",null,1],["call","Win32API","Rails/classes/Win32API.html#method-i-call","(*args)","",null,1],["call","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-call","(method, *args)","<p>Call methods ————————————————————–\n",null,1],["call2","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-call2","(method, *args)","",null,1],["call2_async","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-call2_async","(method, *args)","",null,1],["call_app","Rails::Rack::Logger","Ruby/classes/Rails/Rack/Logger.html#method-i-call_app","(request, env)","",null,0],["call_async","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-call_async","(method, *args)","",null,1],["callcc","Kernel","Rails/classes/Kernel.html#method-i-callcc","()","<p>Generates a <code>Continuation</code> object, which it passes to the\nassociated block. You need to <code>require 'continuation'</code> …\n",null,1],["caller","Kernel","Rails/classes/Kernel.html#method-i-caller","(p1 = v1)","<p>Returns the current execution stack—an array containing strings in the form\n“<em>file:line</em>” or “<em>file:line:</em> …\n",null,1],["calltype","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-calltype","()","<p>Get the call type of this function.\n",null,1],["calltype=","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-calltype-3D","(p1)","<p>Set the call type for this function.\n",null,1],["camelcase","String","Ruby/classes/String.html#method-i-camelcase","(first_letter = :upper)","",null,0],["camelize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-camelize","(term, uppercase_first_letter = true)","<p>By default, <code>camelize</code> converts strings to UpperCamelCase. If\nthe argument to <code>camelize</code> is set to <code>:lower</code> …\n",null,0],["camelize","String","Ruby/classes/String.html#method-i-camelize","(first_letter = :upper)","<p>By default, <code>camelize</code> converts strings to UpperCamelCase. If\nthe argument to camelize is set to <code>:lower</code> …\n",null,0],["camelized","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-camelized","()","",null,0],["camelized","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-camelized","()","",null,0],["can_change_color?","Curses","Rails/classes/Curses.html#method-c-can_change_color-3F","()","<p>Returns <code>true</code> or <code>false</code> depending on whether the\nterminal can change color attributes\n",null,1],["can_parse","RDoc::Parser","Rails/classes/RDoc/Parser.html#method-c-can_parse","(file_name)","<p>Return a parser that can handle a particular extension\n",null,1],["cancel","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-cancel","()","<p>Marks this TupleEntry as canceled.\n",null,1],["cancel","Rinda::WaitTemplateEntry","Rails/classes/Rinda/WaitTemplateEntry.html#method-i-cancel","()","",null,1],["cancel","WEBrick::Utils::TimeoutHandler","Rails/classes/WEBrick/Utils/TimeoutHandler.html#method-i-cancel","(thread, id)","<p>Cancels the timeout handler <code>id</code>\n",null,1],["cancel","WEBrick::Utils::TimeoutHandler","Rails/classes/WEBrick/Utils/TimeoutHandler.html#method-c-cancel","(id)","<p>Cancels the timeout handler <code>id</code>\n",null,1],["canceled?","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-canceled-3F","()","<p>Returns the canceled status.\n",null,1],["candidate","OptionParser","Rails/classes/OptionParser.html#method-i-candidate","(word)","",null,1],["candidate","OptionParser::Completion","Rails/classes/OptionParser/Completion.html#method-i-candidate","(key, icase = false, pat = nil)","",null,1],["candidate","OptionParser::Completion","Rails/classes/OptionParser/Completion.html#method-c-candidate","(key, icase = false, pat = nil, &block)","",null,1],["canonical","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-canonical","()","<p>Get the output style, canonical or not.\n",null,1],["canonical=","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-canonical-3D","(p1)","<p>Set the output style to canonical, or not.\n",null,1],["canonical_each","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-canonical_each","()","",null,1],["canonname","Addrinfo","Rails/classes/Addrinfo.html#method-i-canonname","()","<p>returns the canonical name as an string.\n<p>nil is returned if no canonical name.\n<p>The canonical name is set …\n",null,1],["capabilities","Net::SMTP::Response","Rails/classes/Net/SMTP/Response.html#method-i-capabilities","()","<p>Returns a hash of the human readable reply text in the response if it is\nmultiple lines. It does not …\n",null,1],["capability","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-capability","()","<p>Sends a CAPABILITY command, and returns an array of capabilities that the\nserver supports.  Each capability …\n",null,1],["capable_auth_types","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-capable_auth_types","()","<p>Returns supported authentication methods on this server. You cannot get\nvalid value before opening SMTP …\n",null,1],["capable_auth_types","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-capable_auth_types","()","<p>Returns supported authentication methods on this server. You cannot get\nvalid value before opening SMTP …\n",null,1],["capable_cram_md5_auth?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-capable_cram_md5_auth-3F","()","<p>true if server advertises AUTH CRAM-MD5. You cannot get valid value before\nopening SMTP session.\n",null,1],["capable_cram_md5_auth?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-capable_cram_md5_auth-3F","()","<p>true if server advertises AUTH CRAM-MD5. You cannot get valid value before\nopening SMTP session.\n",null,1],["capable_login_auth?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-capable_login_auth-3F","()","<p>true if server advertises AUTH LOGIN. You cannot get valid value before\nopening SMTP session.\n",null,1],["capable_login_auth?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-capable_login_auth-3F","()","<p>true if server advertises AUTH LOGIN. You cannot get valid value before\nopening SMTP session.\n",null,1],["capable_plain_auth?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-capable_plain_auth-3F","()","<p>true if server advertises AUTH PLAIN. You cannot get valid value before\nopening SMTP session.\n",null,1],["capable_plain_auth?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-capable_plain_auth-3F","()","<p>true if server advertises AUTH PLAIN. You cannot get valid value before\nopening SMTP session.\n",null,1],["capable_starttls?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-capable_starttls-3F","()","<p>true if server advertises STARTTLS. You cannot get valid value before\nopening SMTP session.\n",null,1],["capable_starttls?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-capable_starttls-3F","()","<p>true if server advertises STARTTLS. You cannot get valid value before\nopening SMTP session.\n",null,1],["capify!","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-capify-21","()","<p>Just run the capify command in root\n<p>Example\n\n<pre>capify!</pre>\n",null,0],["capitalize","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-capitalize","()","<p>Converts the first character to uppercase and the remainder to lowercase.\n<p>Example:\n\n<pre>'über'.mb_chars.capitalize.to_s ...</pre>\n",null,0],["capitalize","String","Rails/classes/String.html#method-i-capitalize","()","<p>Returns a copy of <em>str</em> with the first character converted to\nuppercase and the remainder to lowercase. …\n",null,1],["capitalize","Symbol","Rails/classes/Symbol.html#method-i-capitalize","()","<p>Same as <code>sym.to_s.capitalize.intern</code>.\n",null,1],["capitalize!","String","Rails/classes/String.html#method-i-capitalize-21","()","<p>Modifies <em>str</em> by converting the first character to uppercase and\nthe remainder to lowercase. Returns  …\n",null,1],["caption","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-caption","(align = {})","<p>Generate a Table Caption element as a string.\n<p><code>align</code> can be a string, giving the alignment of the caption ...\n",null,1],["capture","ActionView::Helpers::CaptureHelper","Ruby/classes/ActionView/Helpers/CaptureHelper.html#method-i-capture","(*args)","<p>The capture method allows you to extract part of a template into a\nvariable. You can then use this variable …\n",null,0],["capture","Kernel","Ruby/classes/Kernel.html#method-i-capture","(stream)","<p>Captures the given stream and returns it:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">stream</span> = <span class=\"ruby-identifier\">capture</span>(:<span class=\"ruby-identifier\">stdout</span>) { <span class=\"ruby-identifier\">puts</span> <span class=\"ruby-string\">&quot;Cool&quot;</span> }\n<span class=\"ruby-identifier\">stream</span> <span class=\"ruby-comment\"># =&gt; &quot;Cool\\n&quot;</span>\n</pre>\n",null,0],["capture2","Open3","Rails/classes/Open3.html#method-c-capture2","(*cmd, &block)","<p>Open3.capture2 captures the standard output of a command.\n\n<pre>stdout_str, status = Open3.capture2([env,] cmd... ...</pre>\n",null,1],["capture2e","Open3","Rails/classes/Open3.html#method-c-capture2e","(*cmd, &block)","<p>Open3.capture2e captures the standard output and the standard error of a\ncommand.\n\n<pre>stdout_and_stderr_str, ...</pre>\n",null,1],["capture3","Open3","Rails/classes/Open3.html#method-c-capture3","(*cmd, &block)","<p>Open3.capture3 captures the standard output and the standard error of a\ncommand.\n\n<pre>stdout_str, stderr_str, ...</pre>\n",null,1],["captures","MatchData","Rails/classes/MatchData.html#method-i-captures","()","<p>Returns the array of captures; equivalent to <code>mtch.to_a[1..-1]</code>.\n\n<pre>f1,f2,f3,f4 = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;).captures ...</pre>\n",null,1],["case_insensitive_comparison","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-case_insensitive_comparison","(table, attribute, column, value)","",null,0],["case_insensitive_comparison","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-case_insensitive_comparison","(table, attribute, column, value)","",null,0],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-case_sensitive_equality_operator","()","",null,0],["case_sensitive_modifier","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-case_sensitive_modifier","(node)","",null,0],["case_sensitive_modifier","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-case_sensitive_modifier","(node)","",null,0],["casecmp","String","Rails/classes/String.html#method-i-casecmp","(p1)","<p>Case-insensitive version of <code>String#&lt;=&gt;</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;abcdef&quot;</span>.<span class=\"ruby-identifier\">casecmp</span>(<span class=\"ruby-string\">&quot;abcde&quot;</span>)     <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-string\">&quot;aBcDeF&quot;</span>.<span class=\"ruby-identifier\">casecmp</span>(<span class=\"ruby-string\">&quot;abcdef&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["casecmp","Symbol","Rails/classes/Symbol.html#method-i-casecmp","(p1)","<p>Case-insensitive version of <code>Symbol#&lt;=&gt;</code>.\n",null,1],["casefold?","Regexp","Rails/classes/Regexp.html#method-i-casefold-3F","()","<p>Returns the value of the case-insensitive flag.\n\n<pre class=\"ruby\"><span class=\"ruby-regexp\">/a/</span>.<span class=\"ruby-identifier\">casefold?</span>           <span class=\"ruby-comment\">#=&gt; false</span>\n<span class=\"ruby-regexp\">/a/</span>.<span class=\"ruby-identifier\">casefold?</span>      <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["cat","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-cat","(*filenames)","",null,1],["catch","Kernel","Rails/classes/Kernel.html#method-i-catch","(p1 = v1)","<p><code>catch</code> executes its block. If a <code>throw</code> is executed,\nRuby searches up its stack for a <code>catch</code> block with a ...\n",null,1],["cattr_accessor","Class","Ruby/classes/Class.html#method-i-cattr_accessor","(*syms, &blk)","<p>Defines both class and instance accessors for class attributes.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">cattr_accessor</span> :<span class=\"ruby-identifier\">hair_colors</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["cattr_reader","Class","Ruby/classes/Class.html#method-i-cattr_reader","(*syms)","<p>Defines a class attribute if it’s not defined and creates a reader method\nthat returns the attribute …\n",null,0],["cattr_writer","Class","Ruby/classes/Class.html#method-i-cattr_writer","(*syms)","<p>Defines a class attribute if it’s not defined and creates a writer method\nto allow assignment to the …\n",null,0],["cbreak","Curses","Rails/classes/Curses.html#method-c-cbreak","()","<p>Put the terminal into cbreak mode.\n<p>Normally, the tty driver buffers typed characters until a newline or …\n",null,1],["cbrt","CMath","Rails/classes/CMath.html#method-c-cbrt","(z)","<p>returns the principal value of the cube root of <code>z</code>\n",null,1],["cbrt","Math","Rails/classes/Math.html#method-c-cbrt","(p1)","<p>Returns the cube root of <em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-9</span>.<span class=\"ruby-identifier\">upto</span>(<span class=\"ruby-value\">9</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">x</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">p</span> [<span class=\"ruby-identifier\">x</span>, <span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">cbrt</span>(<span class=\"ruby-identifier\">x</span>), <span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">cbrt</span>(<span class=\"ruby-identifier\">x</span>)<span class=\"ruby-operator\">**</span><span class=\"ruby-value\">3</span>]\n}\n<span class=\"ruby-comment\">#=&gt;</span>\n[<span class=\"ruby-value\">-9</span>, <span class=\"ruby-value\">-2.0800838230519</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["cbrt!","CMath","Rails/classes/CMath.html#method-c-cbrt-21","(z)","",null,1],["cd","FileUtils","Rails/classes/FileUtils.html#method-c-cd","(dir, options = {})","<p>Options: verbose\n<p>Changes the current directory to the directory <code>dir</code>.\n<p>If this method is called with block, …\n",null,1],["cd","Shell","Rails/classes/Shell.html#method-i-cd","(path = nil, verbose = @verbose)","",null,1],["cd","Shell","Rails/classes/Shell.html#method-c-cd","(path)","",null,1],["cdata","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-cdata","(content)","<p>Called when &lt;![CDATA[ … ]]&gt; is encountered in a document. @p content\n“…”\n",null,1],["cdata","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-cdata","(content)","<p>Called when &lt;![CDATA[ … ]]&gt; is encountered in a document. @p content\n“…”\n",null,1],["cdata?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-cdata-3F","()","<p>Content: [ String text ]\n",null,1],["cdata_block","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-cdata_block","(string)","",null,0],["cdata_section","ActionView::Helpers::TagHelper","Ruby/classes/ActionView/Helpers/TagHelper.html#method-i-cdata_section","(content)","<p>Returns a CDATA section with the given <code>content</code>. CDATA sections\nare used to escape blocks of text containing …\n",null,0],["cdatas","REXML::Element","Rails/classes/REXML/Element.html#method-i-cdatas","()","<p>Get an array of all CData children. IMMUTABLE\n",null,1],["ceil","BigDecimal","Rails/classes/BigDecimal.html#method-i-ceil","(p1 = v1)","<p>Return the smallest integer greater than or equal to the value, as a\nBigDecimal.\n<p>BigDecimal(‘3.14159’).ceil …\n",null,1],["ceil","Float","Rails/classes/Float.html#method-i-ceil","()","<p>Returns the smallest <code>Integer</code> greater than or equal to\n<em>flt</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1.2</span>.<span class=\"ruby-identifier\">ceil</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n<span class=\"ruby-value\">2.0</span>.<span class=\"ruby-identifier\">ceil</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n(<span class=\"ruby-value\">-1.2</span>).<span class=\"ruby-identifier\">ceil</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ceil","Integer","Rails/classes/Integer.html#method-i-ceil","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,1],["ceil","Numeric","Rails/classes/Numeric.html#method-i-ceil","()","<p>Returns the smallest <code>Integer</code> greater than or equal to\n<em>num</em>. Class <code>Numeric</code> achieves this by converting …\n",null,1],["ceil","Rational","Rails/classes/Rational.html#method-i-ceil","(*args)","<p>Returns the truncated value (toward positive infinity).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">ceil</span>      <span class=\"ruby-comment\">#=&gt; 3</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ceiling","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-ceiling","( number )","",null,1],["center","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-center","(integer, padstr=' ')","<p>Works just like <code>String#center</code>, only integer specifies\ncharacters instead of bytes.\n<p>Example:\n\n<pre>&quot;¾ cup&quot;.mb_chars.center(8).to_s ...</pre>\n",null,0],["center","String","Rails/classes/String.html#method-i-center","(*args)","<p>If <em>integer</em> is greater than the length of <em>str</em>, returns a\nnew <code>String</code> of length <em>integer</em> with <em>str</em>\ncentered …\n",null,1],["cert","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-cert","()","<p>The X509 certificate for this socket endpoint.\n",null,1],["cert","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-cert","()","",null,1],["certid","OpenSSL::OCSP::Request","Rails/classes/OpenSSL/OCSP/Request.html#method-i-certid","()","",null,1],["certificates","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-certificates","()","",null,1],["certificates=","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-certificates-3D","(p1)","",null,1],["certs","Net::POP3","Rails/classes/Net/POP3.html#method-c-certs","()","<p>returns the :ca_file or :ca_path from POP3.ssh_params\n",null,1],["certs","Net::POP3","Rails/classes/Net/POP3.html#method-c-certs","()","<p>returns the :ca_file or :ca_path from POP3.ssh_params\n",null,1],["certs","Net::POP3","Rails/classes/Net/POP3.html#method-c-certs","()","<p>returns the :ca_file or :ca_path from POP3.ssh_params\n",null,1],["certs","Net::POP3","Rails/classes/Net/POP3.html#method-c-certs","()","<p>returns the :ca_file or :ca_path from POP3.ssh_params\n",null,1],["chain","Rake::InvocationExceptionMixin","Rails/classes/Rake/InvocationExceptionMixin.html#method-i-chain","()","<p>Return the invocation chain (list of Rake tasks) that were in effect when\nthis exception was detected …\n",null,1],["chain=","Rake::InvocationExceptionMixin","Rails/classes/Rake/InvocationExceptionMixin.html#method-i-chain-3D","(value)","<p>Set the invocation chain in effect when this exception was detected.\n",null,1],["challenge","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-i-challenge","()","",null,1],["challenge","WEBrick::HTTPAuth::BasicAuth","Rails/classes/WEBrick/HTTPAuth/BasicAuth.html#method-i-challenge","(req, res)","<p>Returns a challenge response which asks for for authentication information\n",null,1],["challenge","WEBrick::HTTPAuth::DigestAuth","Rails/classes/WEBrick/HTTPAuth/DigestAuth.html#method-i-challenge","(req, res, stale=false)","<p>Returns a challenge response which asks for for authentication information\n",null,1],["challenge=","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-i-challenge-3D","(p1)","",null,1],["change","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-change","(column_name, type, options = {})","<p>Changes the column’s definition according to the new options. See\nTableDefinition#column for details …\n",null,0],["change","CreateComments","Ruby/classes/CreateComments.html#method-i-change","()","",null,0],["change","CreatePosts","Ruby/classes/CreatePosts.html#method-i-change","()","",null,0],["change","CreateTags","Ruby/classes/CreateTags.html#method-i-change","()","",null,0],["change","Date","Ruby/classes/Date.html#method-i-change","(options)","<p>Returns a new Date where one or more of the elements have been changed\naccording to the <code>options</code> parameter. …\n",null,0],["change","DateTime","Ruby/classes/DateTime.html#method-i-change","(options)","<p>Returns a new DateTime where one or more of the elements have been changed\naccording to the <code>options</code> parameter. …\n",null,0],["change","Time","Ruby/classes/Time.html#method-i-change","(options)","<p>Returns a new Time where one or more of the elements have been changed\naccording to the <code>options</code> parameter. …\n",null,0],["change_attribute","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-change_attribute","(current, new)","<p>Changes the current attribute from <code>current</code> to <code>new</code>\n",null,1],["change_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-change_column","(table_name, column_name, type, options = {})","<p>Changes the column of a table.\n",null,0],["change_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column","(table_name, column_name, type, options = {})","<p>Changes the column’s definition according to the new options. See\nTableDefinition#column for details …\n",null,0],["change_column_default","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-change_column_default","(table_name, column_name, default)","",null,0],["change_column_default","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-change_column_default","(table_name, column_name, default)","<p>Changes the default value of a table column.\n",null,0],["change_column_default","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_default","(table_name, column_name, default)","<p>Sets a new default value for a column.\n<p>Examples\n\n<pre>change_column_default(:suppliers, :qualification, 'new') ...</pre>\n",null,0],["change_column_null","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","",null,0],["change_column_null","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","",null,0],["change_column_null","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","",null,0],["change_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-change_column_sql","(table_name, column_name, type, options = {})","",null,0],["change_default","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-change_default","(column_name, default)","<p>Sets a new default value for a column. See\nSchemaStatements#change_column_default\n<p>Examples\n\n<pre>t.change_default(:qualification, ...</pre>\n",null,0],["change_privilege","Process::GID","Rails/classes/Process/GID.html#method-c-change_privilege","(p1)","<p>Change the current process’s real and effective group ID to that specified\nby <em>integer</em>. Returns the new …\n",null,1],["change_privilege","Process::UID","Rails/classes/Process/UID.html#method-c-change_privilege","(p1)","<p>Change the current process’s real and effective user ID to that specified\nby <em>integer</em>. Returns the new …\n",null,1],["change_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_table","(table_name, options = {})","<p>A block for changing columns in <code>table</code>.\n<p>Example\n\n<pre># change_table() yields a Table instance\nchange_table(:suppliers) ...</pre>\n",null,0],["change_workspace","IRB::Context","Rails/classes/IRB/Context.html#method-i-change_workspace","(*_main)","",null,1],["changed","ActiveModel::Dirty","Ruby/classes/ActiveModel/Dirty.html#method-i-changed","()","<p>List of attributes with unsaved changes.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changed</span> <span class=\"ruby-comment\"># =&gt; []</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> = <span class=\"ruby-string\">'bob'</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changed</span> <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,0],["changed","Observable","Rails/classes/Observable.html#method-i-changed","(state=true)","<p>Set the changed state of this object.  Notifications will be sent only if\nthe changed <code>state</code> is <code>true</code>. …\n",null,1],["changed?","ActiveModel::Dirty","Ruby/classes/ActiveModel/Dirty.html#method-i-changed-3F","()","<p>Returns true if any attribute have unsaved changes, false otherwise.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changed?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["changed?","Observable","Rails/classes/Observable.html#method-i-changed-3F","()","<p>Returns true if this object’s state has been changed since the last\n#notify_observers call.\n",null,1],["changed_attribute_by_name","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-changed_attribute_by_name","(current_set, new_set)","<p>Used by the tests to change attributes by name from\n<code>current_set</code> to <code>new_set</code>\n",null,1],["changed_attributes","ActiveModel::Dirty","Ruby/classes/ActiveModel/Dirty.html#method-i-changed_attributes","()","<p>Map of change <code>attr =&gt; original value</code>.\n",null,0],["changed_for_autosave?","ActiveRecord::AutosaveAssociation","Ruby/classes/ActiveRecord/AutosaveAssociation.html#method-i-changed_for_autosave-3F","()","<p>Returns whether or not this record has been changed in any way (including\nwhether any of its nested autosave …\n",null,0],["changes","ActiveModel::Dirty","Ruby/classes/ActiveModel/Dirty.html#method-i-changes","()","<p>Map of changed attrs =&gt; [original value, new value].\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changes</span> <span class=\"ruby-comment\"># =&gt; {}</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> = <span class=\"ruby-string\">'bob'</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changes</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["character","RSS::REXMLLikeXMLParser","Rails/classes/RSS/REXMLLikeXMLParser.html#method-i-character","(data)","",null,1],["character","XMLRPC::XMLParser::StreamParserMixin","Rails/classes/XMLRPC/XMLParser/StreamParserMixin.html#method-i-character","(data)","",null,1],["characters","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-characters","(string)","",null,0],["characters","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-characters","(text)","",null,1],["chardev?","File","Rails/classes/File.html#method-c-chardev-3F","(p1)","<p>Returns <code>true</code> if the named file is a character device.\n",null,1],["chardev?","File::Stat","Rails/classes/File/Stat.html#method-i-chardev-3F","()","<p>Returns <code>true</code> if the file is a character device,\n<code>false</code> if it isn’t or if the operating system doesn’t …\n",null,1],["chardev?","FileTest","Rails/classes/FileTest.html#method-i-chardev-3F","(p1)","<p>Returns <code>true</code> if the named file is a character device.\n",null,1],["chardev?","Pathname","Rails/classes/Pathname.html#method-i-chardev-3F","()","<p>See <code>FileTest.chardev?</code>.\n",null,1],["chars","ARGF","Rails/classes/ARGF.html#method-i-chars","()","<p>Iterates over each character of each file in <code>ARGF</code>.\n<p>This method allows you to treat the files supplied …\n",null,1],["chars","IO","Rails/classes/IO.html#method-i-chars","()","<p>Calls the given block once for each character in <em>ios</em>, passing the\ncharacter as an argument. The stream …\n",null,1],["chars","String","Rails/classes/String.html#method-i-chars","()","<p>Passes each character in <em>str</em> to the given block, or returns an\nenumerator if no block is given.\n\n<pre>&quot;hello&quot;.each_char ...</pre>\n",null,1],["chars","StringIO","Rails/classes/StringIO.html#method-i-chars","()","<p>See IO#each_char.\n",null,1],["charset","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-charset","()","<p>Returns the database character set.\n",null,0],["charset","OpenURI::Meta","Rails/classes/OpenURI/Meta.html#method-i-charset","()","<p>returns a charset parameter in Content-Type field. It is downcased for\ncanonicalization.\n<p>If charset parameter …\n",null,1],["charset_map","Iconv","Rails/classes/Iconv.html#method-c-charset_map","()","<p>Returns the map from canonical name to system dependent name.\n",null,1],["chdir","Dir","Rails/classes/Dir.html#method-c-chdir","(p1 = v1)","<p>Changes the current working directory of the process to the given string.\nWhen called without an argument, …\n",null,1],["chdir","FileUtils","Rails/classes/FileUtils.html#method-c-chdir","(dir, options = {})","",null,1],["chdir","Net::FTP","Rails/classes/Net/FTP.html#method-i-chdir","(dirname)","<p>Changes the (remote) directory.\n",null,1],["chdir","Shell","Rails/classes/Shell.html#method-i-chdir","(path = nil, verbose = @verbose)","<p>If called as iterator, it restores the current directory when the block\nends.\n",null,1],["check","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-check","()","<p>Sends a CHECK command to request a checkpoint of the currently selected\nmailbox.  This performs implementation-specific …\n",null,1],["check","PTY","Rails/classes/PTY.html#method-c-check","(p1, p2 = v2)","<p>Checks the status of the child process specified by <code>pid</code>.\nReturns <code>nil</code> if the process is still alive.  …\n",null,1],["check","REXML::Text","Rails/classes/REXML/Text.html#method-c-check","(string, pattern, doctype)","<p>check for illegal characters\n",null,1],["check","StringScanner","Rails/classes/StringScanner.html#method-i-check","(p1)","<p>This returns the value that #scan would return, without advancing the scan\npointer.  The match register …\n",null,1],["check","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-check","(result)","",null,1],["check_box","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-check_box","(method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","",null,0],["check_box","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-check_box","(object_name, method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","<p>Returns a checkbox tag tailored for accessing a specified attribute\n(identified by <code>method</code>) on an object …\n",null,0],["check_box_checked?","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-c-check_box_checked-3F","(value, checked_value)","",null,0],["check_box_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-check_box_tag","(name, value = \"1\", checked = false, options = {})","<p>Creates a check box form input tag.\n<p>Options\n<p><code>:disabled</code> - If set to true, the user will not be able to use\n...\n",null,0],["check_break_points","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-check_break_points","(file, klass, pos, binding, id)","",null,1],["check_class_collision","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-c-check_class_collision","(options={})","<p>Add a class collisions name to be checked on class initialization. You can\nsupply a hash with a :prefix …\n",null,0],["check_closed","Gem::Package::TarWriter","Rails/classes/Gem/Package/TarWriter.html#method-i-check_closed","()","<p>Raises IOError if the TarWriter is closed\n",null,1],["check_encoding","REXML::Encoding","Rails/classes/REXML/Encoding.html#method-i-check_encoding","(xml)","",null,1],["check_files","RDoc::Options","Rails/classes/RDoc/Options.html#method-i-check_files","()","<p>Check that the files on the command line exist\n",null,1],["check_generator","RDoc::Options","Rails/classes/RDoc/Options.html#method-i-check_generator","()","<p>Ensure only one generator is loaded\n",null,1],["check_insecure_method","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-i-check_insecure_method","(obj, msg_id)","<p>Check that a method is callable via dRuby.\n<p><code>obj</code> is the object we want to invoke the method on.\n<code>msg_id</code> is ...\n",null,1],["check_inspect_key","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-check_inspect_key","(id)","",null,1],["check_key","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-check_key","()","<p>Raises an exception if the key is invalid.\n<p>See the OpenSSL documentation for EC_KEY_check_key()\n",null,1],["check_names","RDoc::Task","Rails/classes/RDoc/Task.html#method-i-check_names","(names)","<p>Ensures that <code>names</code> only includes names for the :rdoc,\n:clobber_rdoc and :rerdoc.  If other names are …\n",null,1],["check_nonce","OpenSSL::OCSP::Request","Rails/classes/OpenSSL/OCSP/Request.html#method-i-check_nonce","(p1)","<p>Check nonce validity in a request and response. Return value reflects\nresult:\n\n<pre>1: nonces present and equal. ...</pre>\n",null,1],["check_point","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-check_point","()","<p>ProcessCommand#transact\n",null,1],["check_private_key","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-check_private_key","(p1)","<p>Checks if ‘key’ is PRIV key for this cert\n",null,1],["check_ruby_version","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-i-check_ruby_version","()","",null,1],["check_signedness","Object","Rails/classes/Object.html#method-i-check_signedness","(type, headers = nil, opts = nil, &b)","<p>Returns the signedness of the given <code>type</code>.  You may optionally\nspecify additional <code>headers</code> to search in …\n",null,1],["check_sizeof","Object","Rails/classes/Object.html#method-i-check_sizeof","(type, headers = nil, opts = \"\", &b)","<p>Returns the size of the given <code>type</code>.  You may optionally\nspecify additional <code>headers</code> to search in for the …\n",null,1],["check_suspend","DEBUGGER__::Context","Rails/classes/DEBUGGER__/Context.html#method-i-check_suspend","()","",null,1],["check_that_user_bin_dir_is_in_path","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-check_that_user_bin_dir_is_in_path","()","",null,1],["check_until","StringScanner","Rails/classes/StringScanner.html#method-i-check_until","(p1)","<p>This returns the value that #scan_until would return, without advancing the\nscan pointer.  The match …\n",null,1],["check_validity","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-check_validity","(issuer_cert = nil, time = Time.now)","<p>Check the validity of this certificate.\n",null,1],["check_validity!","ActiveModel::EachValidator","Ruby/classes/ActiveModel/EachValidator.html#method-i-check_validity-21","()","<p>Hook method that gets called by the initializer allowing verification that\nthe arguments supplied are …\n",null,0],["check_validity!","ActiveModel::Validations::ExclusionValidator","Ruby/classes/ActiveModel/Validations/ExclusionValidator.html#method-i-check_validity-21","()","",null,0],["check_validity!","ActiveModel::Validations::FormatValidator","Ruby/classes/ActiveModel/Validations/FormatValidator.html#method-i-check_validity-21","()","",null,0],["check_validity!","ActiveModel::Validations::InclusionValidator","Ruby/classes/ActiveModel/Validations/InclusionValidator.html#method-i-check_validity-21","()","",null,0],["check_validity!","ActiveModel::Validations::LengthValidator","Ruby/classes/ActiveModel/Validations/LengthValidator.html#method-i-check_validity-21","()","",null,0],["check_validity!","ActiveModel::Validations::NumericalityValidator","Ruby/classes/ActiveModel/Validations/NumericalityValidator.html#method-i-check_validity-21","()","",null,0],["checkbox","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-checkbox","(name = \"\", value = nil, checked = nil)","<p>Generate a Checkbox Input element as a string.\n<p>The attributes of the element can be specified as three …\n",null,1],["checkbox_group","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-checkbox_group","(name = \"\", *values)","<p>Generate a sequence of checkbox elements, as a String.\n<p>The checkboxes will all have the same <code>name</code> attribute. …\n",null,1],["checkin","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-checkin","(conn)","<p>Check-in a database connection back into the pool, indicating that you no\nlonger need this connection. …\n",null,0],["checkout","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-checkout","()","<p>Check-out a database connection from the pool, indicating that you want to\nuse it. You should call #checkin …\n",null,0],["childNodes","NQXML::Node","Rails/classes/NQXML/Node.html#method-i-childNodes","()","",null,1],["child_name","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-child_name","(name)","<p>Creates the full name for a child with <code>name</code>\n",null,1],["children","Rails::Paths::Path","Ruby/classes/Rails/Paths/Path.html#method-i-children","()","",null,0],["children","Pathname","Rails/classes/Pathname.html#method-i-children","(with_directory=true)","<p>Returns the children of the directory (files and subdirectories, not\nrecursive) as an array of Pathname …\n",null,1],["children","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-children","()","",null,1],["children","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-children","()","",null,1],["chmod","File","Rails/classes/File.html#method-c-chmod","(p1, *args)","<p>Changes permission bits on the named file(s) to the bit pattern represented\nby <em>mode_int</em>. Actual effects …\n",null,1],["chmod","File","Rails/classes/File.html#method-i-chmod","(p1)","<p>Changes permission bits on <em>file</em> to the bit pattern represented by\n<em>mode_int</em>. Actual effects are platform …\n",null,1],["chmod","FileUtils","Rails/classes/FileUtils.html#method-c-chmod","(mode, list, options = {})","<p>Options: noop verbose\n<p>Changes permission bits on the named files (in <code>list</code>) to the\nbit pattern represented …\n",null,1],["chmod","Object","Rails/classes/Object.html#method-i-chmod","()","<p>Change the mode of each FILE to OCTAL-MODE.\n\n<pre>ruby -run -e chmod -- [OPTION] OCTAL-MODE FILE\n\n-v        ...</pre>\n",null,1],["chmod","Pathname","Rails/classes/Pathname.html#method-i-chmod","(p1)","<p>See <code>File.chmod</code>.  Changes permissions.\n",null,1],["chmod_R","FileUtils","Rails/classes/FileUtils.html#method-c-chmod_R","(mode, list, options = {})","<p>Options: noop verbose force\n<p>Changes permission bits on the named files (in <code>list</code>) to the\nbit pattern represented …\n",null,1],["chomp","Kernel","Rails/classes/Kernel.html#method-i-chomp","(*args)","<p>Equivalent to <code>$_ = $_.chomp(<em>string</em>)</code>. See\n<code>String#chomp</code>. Available only when -p/-n command line option …\n",null,1],["chomp","String","Rails/classes/String.html#method-i-chomp","(*args)","<p>Returns a new <code>String</code> with the given record separator removed\nfrom the end of <em>str</em> (if present). If <code>$/</code> …\n",null,1],["chomp!","String","Rails/classes/String.html#method-i-chomp-21","(p1 = v1)","<p>Modifies <em>str</em> in place as described for <code>String#chomp</code>,\nreturning <em>str</em>, or <code>nil</code> if no modifications were made.\n…\n",null,1],["choose_from_list","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-choose_from_list","(question, list)","<p>Choose from a list of options.  <code>question</code> is a prompt displayed\nabove the list.  <code>list</code> is a list of option …\n",null,1],["choose_from_list","Gem::UserInteraction","Rails/classes/Gem/UserInteraction.html#method-i-choose_from_list","(*args)","",null,1],["chop","Kernel","Rails/classes/Kernel.html#method-i-chop","()","<p>Equivalent to <code>($_.dup).chop!</code>, except <code>nil</code> is never\nreturned. See <code>String#chop!</code>. Available only when -p/-n …\n",null,1],["chop","String","Rails/classes/String.html#method-i-chop","()","<p>Returns a new <code>String</code> with the last character removed.  If the\nstring ends with <code>\\r\\n</code>, both characters …\n",null,1],["chop!","String","Rails/classes/String.html#method-i-chop-21","()","<p>Processes <em>str</em> as for <code>String#chop</code>, returning\n<em>str</em>, or <code>nil</code> if <em>str</em> is the empty string.  See\nalso <code>String#chomp!</code> …\n",null,1],["chown","File","Rails/classes/File.html#method-i-chown","(p1, p2)","<p>Changes the owner and group of <em>file</em> to the given numeric owner and\ngroup id’s. Only a process with superuser …\n",null,1],["chown","File","Rails/classes/File.html#method-c-chown","(p1, p2, *args)","<p>Changes the owner and group of the named file(s) to the given numeric owner\nand group id’s. Only a process …\n",null,1],["chown","FileUtils","Rails/classes/FileUtils.html#method-c-chown","(user, group, list, options = {})","<p>Options: noop verbose\n<p>Changes owner and group on the named files (in <code>list</code>) to the\nuser <code>user</code> and the group …\n",null,1],["chown","Pathname","Rails/classes/Pathname.html#method-i-chown","(p1, p2)","<p>See <code>File.chown</code>.  Change owner and group of file.\n",null,1],["chown_R","FileUtils","Rails/classes/FileUtils.html#method-c-chown_R","(user, group, list, options = {})","<p>Options: noop verbose force\n<p>Changes owner and group on the named files (in <code>list</code>) to the\nuser <code>user</code> and …\n",null,1],["chr","Integer","Rails/classes/Integer.html#method-i-chr","(*args)","<p>Returns a string containing the character represented by the receiver’s\nvalue according to <code>encoding</code>. …\n",null,1],["chr","String","Rails/classes/String.html#method-i-chr","()","<p>Returns a one-character string at the beginning of the string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = <span class=\"ruby-string\">&quot;abcde&quot;</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">chr</span>    <span class=\"ruby-comment\">#=&gt; &quot;a&quot;</span>\n</pre>\n",null,1],["chroot","Dir","Rails/classes/Dir.html#method-c-chroot","(p1)","<p>Changes this process’s idea of the file system root. Only a privileged\nprocess may make this call. Not …\n",null,1],["chunk","Enumerable","Rails/classes/Enumerable.html#method-i-chunk","(p1 = v1)","<p>Creates an enumerator for each chunked elements. The consecutive elements\nwhich have same block value …\n",null,1],["chunked=","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-chunked-3D","(val)","<p>Enables chunked transfer encoding.\n",null,1],["chunked?","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-chunked-3F","()","<p>Returns “true” if the “transfer-encoding” header is present and set to\n“chunked”. …\n",null,1],["chunked?","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-chunked-3F","()","<p>Will this response body be returned using chunked transfer-encoding?\n",null,1],["cipher","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-cipher","(p1)","",null,1],["cipher","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-cipher","()","<p>The cipher being used for the current connection\n",null,1],["cipher","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-cipher","()","",null,1],["cipher=","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-cipher-3D","(p1)","",null,1],["ciphers","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-c-ciphers","()","<p>Returns the names of all available ciphers in an array.\n",null,1],["ciphers","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-ciphers","()","<p>The list of ciphers configured for this context.\n",null,1],["ciphers=","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-ciphers-3D","(p1)","<p>Sets the list of available ciphers for this context.  Note in a server\ncontext some ciphers require the …\n",null,1],["civil","Date","Rails/classes/Date.html#method-c-civil","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Creates a date object denoting the given calendar date.\n<p>In this class, BCE years are counted astronomically. …\n",null,1],["civil","DateTime","Rails/classes/DateTime.html#method-c-civil","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7, p8 = v8)","<p>Creates a date-time object denoting the given calendar date.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">DateTime</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>)    <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["civil_from_format","DateTime","Ruby/classes/DateTime.html#method-c-civil_from_format","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0)","",null,0],["class","Object","Rails/classes/Object.html#method-i-class","()","<p>Returns the class of <em>obj</em>. This method must always be called with\nan explicit receiver, as <code>class</code> is also …\n",null,1],["class","Win32::Registry::PredefinedKey","Rails/classes/Win32/Registry/PredefinedKey.html#method-i-class","()","<p>Fake #class method for Registry#open, Registry#create\n",null,1],["class_attribute","Class","Ruby/classes/Class.html#method-i-class_attribute","(*attrs)","<p>Declare a class-level attribute whose value is inheritable by subclasses.\nSubclasses can change their …\n",null,0],["class_attributes","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-class_attributes","()","<p>Class attributes\n",null,1],["class_dir","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-class_dir","()","<p>Directory where generated class HTML files live relative to the output dir.\n",null,1],["class_document","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-class_document","(name, found, klasses, includes)","<p>Builds a RDoc::Markup::Document from <code>found</code>,\n<code>klasess</code> and <code>includes</code>\n",null,1],["class_eval","Kernel","Ruby/classes/Kernel.html#method-i-class_eval","(*args, &block)","<p>class_eval on an object acts like singleton_class.class_eval.\n",null,0],["class_eval","Module","Rails/classes/Module.html#method-i-class_eval","(*args)","<p>Evaluates the string or block in the context of <em>mod</em>. This can be\nused to add methods to a class. <code>module_eval</code> …\n",null,1],["class_exec","Module","Rails/classes/Module.html#method-i-class_exec","(*args)","<p>Evaluates the given block in the context of the class/module. The method\ndefined in the block will belong …\n",null,1],["class_file","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-class_file","(klass_name)","<p>Path to the ri data for <code>klass_name</code>\n",null,1],["class_method_list","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-class_method_list","()","<p>Class methods\n",null,1],["class_methods","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-class_methods","()","<p>Class methods cache accessor.  Maps a class to an Array of its class\nmethods (not full name).\n",null,1],["class_name","ActiveRecord::Reflection::MacroReflection","Ruby/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-class_name","()","<p>Returns the class name for the macro.\n<p><code>composed_of :balance, :class_name =&gt; 'Money'</code> returns\n<code>'Money'</code> ...\n",null,0],["class_name","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-class_name","()","",null,0],["class_name","Gem::Ext::Builder","Rails/classes/Gem/Ext/Builder.html#method-c-class_name","()","",null,1],["class_name","RSS::BaseListener","Rails/classes/RSS/BaseListener.html#method-c-class_name","(uri, tag_name)","<p>retrieve class_name for the supplied uri and tag_name If it doesn’t exist,\ncapitalize the tag_name\n",null,1],["class_of_active_record_descendant","ActiveRecord::Inheritance::ClassMethods","Ruby/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-class_of_active_record_descendant","(klass)","<p>Returns the class descending directly from ActiveRecord::Base or an\nabstract class, if any, in the inheritance …\n",null,0],["class_path","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-class_path","()","",null,0],["class_path","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-class_path","(klass_name)","<p>Path where data for <code>klass_name</code> will be stored (methods or\nclass data)\n",null,1],["class_variable_defined?","Module","Rails/classes/Module.html#method-i-class_variable_defined-3F","(p1)","<p>Returns <code>true</code> if the given class variable is defined in\n<em>obj</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Fred</span>\n  <span class=\"ruby-identifier\">@@foo</span> = <span class=\"ruby-value\">99</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-constant\">Fred</span>.<span class=\"ruby-identifier\">class_variable_defined?</span>(:<span class=\"ruby-identifier\">@@foo</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["class_variable_get","Module","Rails/classes/Module.html#method-i-class_variable_get","(p1)","<p>Returns the value of the given class variable (or throws a\n<code>NameError</code> exception). The <code>@@</code> part of the variable\n…\n",null,1],["class_variable_set","Module","Rails/classes/Module.html#method-i-class_variable_set","(p1, p2)","<p>Sets the class variable names by <em>symbol</em> to <em>object</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Fred</span>\n  <span class=\"ruby-identifier\">@@foo</span> = <span class=\"ruby-value\">99</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">foo</span>\n    <span class=\"ruby-identifier\">@@foo</span>\n  <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-keyword\">end</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["class_variables","Module","Rails/classes/Module.html#method-i-class_variables","()","<p>Returns an array of the names of class variables in <em>mod</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">One</span>\n  <span class=\"ruby-identifier\">@@var1</span> = <span class=\"ruby-value\">1</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Two</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">One</span>\n  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["classes","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-classes","()","<p>Array of classes in this context\n",null,1],["classes","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-classes","()","<p>Hash mapping a known class or module to the stores it can be loaded from\n",null,1],["classes","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-classes","()","",null,1],["classes_and_includes_for","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-classes_and_includes_for","(name)","<p>Returns the stores wherin <code>name</code> is found along with the classes\nand includes that match it\n",null,1],["classes_and_modules","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-classes_and_modules","()","<p>All classes and modules in this namespace\n",null,1],["classes_hash","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-classes_hash","()","<p>Hash of classes keyed by class name\n",null,1],["classes_hash","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-classes_hash","()","",null,1],["classify","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-classify","(table_name)","<p>Create a class name from a plural table name like Rails does for table\nnames to models. Note that this …\n",null,0],["classify","String","Ruby/classes/String.html#method-i-classify","()","<p>Create a class name from a plural table name like Rails does for table\nnames to models. Note that this …\n",null,0],["classify","Set","Rails/classes/Set.html#method-i-classify","()","<p>Classifies the set by the return value of the given block and returns a\nhash of {value =&gt; set of elements} …\n",null,1],["clean","ActiveSupport::BacktraceCleaner","Ruby/classes/ActiveSupport/BacktraceCleaner.html#method-i-clean","(backtrace, kind = :silent)","<p>Returns the backtrace after all filters and silencers have been run against\nit. Filters run first, then …\n",null,0],["cleanpath","Pathname","Rails/classes/Pathname.html#method-i-cleanpath","(consider_symlink=false)","<p>Returns clean pathname of <code>self</code> with consecutive slashes and\nuseless dots removed.  The filesystem is …\n",null,1],["cleanup","ActiveSupport::Cache::FileStore","Ruby/classes/ActiveSupport/Cache/FileStore.html#method-i-cleanup","(options = nil)","",null,0],["cleanup","ActiveSupport::Cache::MemoryStore","Ruby/classes/ActiveSupport/Cache/MemoryStore.html#method-i-cleanup","(options = nil)","",null,0],["cleanup","ActiveSupport::Cache::NullStore","Ruby/classes/ActiveSupport/Cache/NullStore.html#method-i-cleanup","(options = nil)","",null,0],["cleanup","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-cleanup","(options = nil)","<p>Cleanup the cache by removing expired entries.\n<p>Options are passed to the underlying cache implementation. …\n",null,0],["cleanup","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-c-cleanup","()","",null,1],["cleanup","OpenSSL::X509::StoreContext","Rails/classes/OpenSSL/X509/StoreContext.html#method-i-cleanup","()","",null,1],["cleanup!","ActionDispatch::Reloader","Ruby/classes/ActionDispatch/Reloader.html#method-c-cleanup-21","()","<p>Execute all cleanup callbacks.\n",null,0],["clear","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-clear","()","",null,0],["clear","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-clear","()","<p>Clear the messages\n",null,0],["clear","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-clear","()","",null,0],["clear","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-clear","()","",null,0],["clear","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-clear","()","",null,0],["clear","ActiveRecord::ConnectionAdapters::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-clear","()","",null,0],["clear","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-clear","()","",null,0],["clear","ActiveSupport::Cache::FileStore","Ruby/classes/ActiveSupport/Cache/FileStore.html#method-i-clear","(options = nil)","",null,0],["clear","ActiveSupport::Cache::MemCacheStore","Ruby/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-clear","(options = nil)","<p>Clear the entire cache on all memcached servers. This method should be used\nwith care when shared cache …\n",null,0],["clear","ActiveSupport::Cache::MemoryStore","Ruby/classes/ActiveSupport/Cache/MemoryStore.html#method-i-clear","(options = nil)","",null,0],["clear","ActiveSupport::Cache::NullStore","Ruby/classes/ActiveSupport/Cache/NullStore.html#method-i-clear","(options = nil)","",null,0],["clear","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-clear","(options = nil)","<p>Clear the entire cache. Be careful with this method since it could affect\nother processes if shared cache …\n",null,0],["clear","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Ruby/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-clear","(options = nil)","",null,0],["clear","ActiveSupport::DescendantsTracker","Ruby/classes/ActiveSupport/DescendantsTracker.html#method-c-clear","()","",null,0],["clear","ActiveSupport::Inflector::Inflections","Ruby/classes/ActiveSupport/Inflector/Inflections.html#method-i-clear","(scope = :all)","<p>Clears the loaded inflections within a given scope (default is\n<code>:all</code>). Give the scope as a symbol of the …\n",null,0],["clear","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-clear","()","",null,0],["clear","Array","Rails/classes/Array.html#method-i-clear","()","<p>Removes all elements from <code>self</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span>, <span class=\"ruby-string\">&quot;c&quot;</span>, <span class=\"ruby-string\">&quot;d&quot;</span>, <span class=\"ruby-string\">&quot;e&quot;</span> ]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">clear</span>    <span class=\"ruby-comment\">#=&gt; [ ]</span>\n</pre>\n",null,1],["clear","Curses","Rails/classes/Curses.html#method-c-clear","()","<p>Clears every position on the screen completely, so that a subsequent call\nby Curses.refresh for the  …\n",null,1],["clear","Curses::Window","Rails/classes/Curses/Window.html#method-i-clear","()","<p>Clear the window.\n",null,1],["clear","DBM","Rails/classes/DBM.html#method-i-clear","()","<p>Deletes all data from the database.\n",null,1],["clear","ENV","Rails/classes/ENV.html#method-c-clear","()","<p>Removes every environment variable.\n",null,1],["clear","GC::Profiler","Rails/classes/GC/Profiler.html#method-c-clear","()","<p>Clears the GC profiler data.\n",null,1],["clear","GDBM","Rails/classes/GDBM.html#method-i-clear","()","<p>Removes all the key-value pairs within <em>gdbm</em>.\n",null,1],["clear","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-clear","()","",null,1],["clear","Hash","Rails/classes/Hash.html#method-i-clear","()","<p>Removes all key-value pairs from <em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }   <span class=\"ruby-comment\">#=&gt; {&quot;a&quot;=&gt;100, &quot;b&quot;=&gt;200}</span>\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">clear</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["clear","Queue","Rails/classes/Queue.html#method-i-clear","()","<p>Removes all objects from the queue.\n",null,1],["clear","Rake::Task","Rails/classes/Rake/Task.html#method-i-clear","()","<p>Clear the existing prerequisites and actions of a rake task.\n",null,1],["clear","Rake::Task","Rails/classes/Rake/Task.html#method-c-clear","()","<p>Clear the task list.  This cause rake to immediately forget all the tasks\nthat have been assigned.  ( …\n",null,1],["clear","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-clear","()","<p>Clear all tasks in this application.\n",null,1],["clear","SDBM","Rails/classes/SDBM.html#method-i-clear","()","",null,1],["clear","Set","Rails/classes/Set.html#method-i-clear","()","<p>Removes all elements and returns self.\n",null,1],["clear","String","Rails/classes/String.html#method-i-clear","()","<p>Makes string empty.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = <span class=\"ruby-string\">&quot;abcde&quot;</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">clear</span>    <span class=\"ruby-comment\">#=&gt; &quot;&quot;</span>\n</pre>\n",null,1],["clear","StringScanner","Rails/classes/StringScanner.html#method-i-clear","()","<p>Equivalent to #terminate. This method is obsolete; use #terminate instead.\n",null,1],["clear!","ActiveRecord::ConnectionAdapters::SchemaCache","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-clear-21","()","<p>Clears out internal caches\n",null,0],["clear!","ActiveSupport::Dependencies::ClassCache","Ruby/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-clear-21","()","",null,0],["clear_action_methods!","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-c-clear_action_methods-21","()","<p>action_methods are cached and there is sometimes need to refresh them.\nclear_action_methods! allows you …\n",null,0],["clear_actions","Rake::Task","Rails/classes/Rake/Task.html#method-i-clear_actions","()","<p>Clear the existing actions on a rake task.\n",null,1],["clear_active_connections!","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-clear_active_connections-21","()","",null,0],["clear_active_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_active_connections-21","()","<p>Returns any connections in use by the current thread back to the pool.\n",null,0],["clear_all_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_all_connections-21","()","",null,0],["clear_cache","ActionView::Resolver","Ruby/classes/ActionView/Resolver.html#method-i-clear_cache","()","",null,0],["clear_cache!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-clear_cache-21","()","<p>Clear any caching the database adapter may be doing, for example clearing\nthe prepared statement cache. …\n",null,0],["clear_cache!","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-clear_cache-21","()","",null,0],["clear_cache!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-clear_cache-21","()","<p>Clears the prepared statements cache.\n",null,0],["clear_cache!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-clear_cache-21","()","<p>Clears the prepared statements cache.\n",null,0],["clear_cache!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-clear_cache-21","()","<p>Clears the prepared statements cache.\n",null,0],["clear_comment","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-clear_comment","()","<p>Clears the comment. Used by the ruby parser.\n",null,1],["clear_exclude","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-clear_exclude","()","<p>Clear all the exclude patterns so that we exclude nothing.\n",null,1],["clear_helpers","AbstractController::Helpers::ClassMethods","Ruby/classes/AbstractController/Helpers/ClassMethods.html#method-i-clear_helpers","()","<p>Clears up all existing helpers in this class, only keeping the helper with\nthe same name as this class. …\n",null,0],["clear_paths","Gem","Rails/classes/Gem.html#method-c-clear_paths","()","<p>Reset the <code>dir</code> and <code>path</code> values.  The next time\n<code>dir</code> or <code>path</code> is requested, the values will be\ncalculated …\n",null,1],["clear_prerequisites","Rake::Task","Rails/classes/Rake/Task.html#method-i-clear_prerequisites","()","<p>Clear the existing prerequisites of a rake task.\n",null,1],["clear_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","Ruby/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-clear_query_cache","()","<p>Clears the query cache.\n<p>One reason you may wish to call this method explicitly is between queries\nthat …\n",null,0],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_reloadable_connections-21","()","<p>Clears the cache which maps classes.\n",null,0],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-clear_reloadable_connections-21","()","<p>Clears the cache which maps classes.\n",null,0],["clear_respond_to","ActionController::MimeResponds::ClassMethods","Ruby/classes/ActionController/MimeResponds/ClassMethods.html#method-i-clear_respond_to","()","<p>Clear all mime types in <code>respond_to</code>.\n",null,0],["clear_stale_cached_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-clear_stale_cached_connections-21","()","<p>Return any checked-out connections back to the pool by threads that are no\nlonger alive.\n",null,0],["clear_suspend","DEBUGGER__::Context","Rails/classes/DEBUGGER__/Context.html#method-i-clear_suspend","()","",null,1],["clear_table_cache!","ActiveRecord::ConnectionAdapters::SchemaCache","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-clear_table_cache-21","(table_name)","<p>Clear out internal caches for table with <code>table_name</code>.\n",null,0],["clear_tags!","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-i-clear_tags-21","()","",null,0],["client_ca","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-client_ca","()","<p>Returns the list of client CAs. Please note that in contrast to\nSSLContext#client_ca= no array of X509::Certificate …\n",null,1],["client_encoding","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-client_encoding","()","<p>Get the client encoding for this database\n",null,0],["client_error?","WEBrick::HTTPStatus","Rails/classes/WEBrick/HTTPStatus.html#method-c-client_error-3F","(code)","<p>Is <code>code</code> a client error status?\n",null,1],["client_min_messages","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-client_min_messages","()","<p>Returns the current client message level.\n",null,0],["client_min_messages=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-client_min_messages-3D","(level)","<p>Set the client message level.\n",null,0],["clobber_task_description","RDoc::Task","Rails/classes/RDoc/Task.html#method-i-clobber_task_description","()","<p>Task description for the clobber rdoc task or its renamed equivalent\n",null,1],["clone","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-clone","()","<p>Returns a clone of the resource that hasn’t been assigned an\n<code>id</code> yet and is treated as a new resource. …\n",null,0],["clone","Matrix","Rails/classes/Matrix.html#method-i-clone","()","<p>Returns a clone of the matrix, so that the contents of each do not\nreference identical objects. There …\n",null,1],["clone","Method","Rails/classes/Method.html#method-i-clone","()","<p>MISSING: documentation\n",null,1],["clone","Object","Rails/classes/Object.html#method-i-clone","()","<p>Produces a shallow copy of <em>obj</em>—the instance variables of\n<em>obj</em> are copied, but not the objects they reference. …\n",null,1],["clone","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-clone","()","<p>Returns a copy of this attribute\n",null,1],["clone","REXML::CData","Rails/classes/REXML/CData.html#method-i-clone","()","<p>Make a copy of this object\n<p><em>Examples</em>\n\n<pre>c = CData.new( &quot;Some text&quot; )\nd = c.clone\nd.to_s        # -&gt; &quot;Some text&quot;</pre>\n",null,1],["clone","REXML::Comment","Rails/classes/REXML/Comment.html#method-i-clone","()","",null,1],["clone","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-clone","()","",null,1],["clone","REXML::Document","Rails/classes/REXML/Document.html#method-i-clone","()","<p>Should be obvious\n",null,1],["clone","REXML::Element","Rails/classes/REXML/Element.html#method-i-clone","()","<p>Creates a shallow copy of self.\n\n<pre>d = Document.new &quot;&lt;a&gt;&lt;b/&gt;&lt;b/&gt;&lt;c&gt;&lt;d/&gt;&lt;/c&gt;&lt;/a&gt;&quot;\nnew_a = d.root.clone\nputs ...</pre>\n",null,1],["clone","REXML::Instruction","Rails/classes/REXML/Instruction.html#method-i-clone","()","",null,1],["clone","REXML::Text","Rails/classes/REXML/Text.html#method-i-clone","()","",null,1],["clone","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-i-clone","()","",null,1],["clone","Rake::Cloneable","Rails/classes/Rake/Cloneable.html#method-i-clone","()","",null,1],["clone","Singleton","Rails/classes/Singleton.html#method-i-clone","()","<p>Raises a TypeError to prevent cloning.\n",null,1],["clone","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-clone","()","<p>MISSING: documentation\n",null,1],["clone","Vector","Rails/classes/Vector.html#method-i-clone","()","<p>Return a copy of the vector.\n",null,1],["clone_empty","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-clone_empty","()","",null,0],["close","ActionDispatch::BodyProxy","Ruby/classes/ActionDispatch/BodyProxy.html#method-i-close","()","",null,0],["close","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-close","()","",null,0],["close","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-close","()","<p>Check the connection back in to the connection pool\n",null,0],["close","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-i-close","()","",null,0],["close","ActiveSupport::Gzip::Stream","Ruby/classes/ActiveSupport/Gzip/Stream.html#method-i-close","()","",null,0],["close","ARGF","Rails/classes/ARGF.html#method-i-close","()","\n<pre>Closes the current file and skips to the next in the stream. Trying to\nclose a file that has already ...</pre>\n",null,1],["close","CGI::Session","Rails/classes/CGI/Session.html#method-i-close","()","<p>Store session data on the server and close the session storage. For some\nsession storage types, this …\n",null,1],["close","CGI::Session::FileStore","Rails/classes/CGI/Session/FileStore.html#method-i-close","()","<p>Update and close the session’s FileStore file.\n",null,1],["close","CGI::Session::MemoryStore","Rails/classes/CGI/Session/MemoryStore.html#method-i-close","()","<p>Close session storage.\n<p>A no-op.\n",null,1],["close","CGI::Session::NullStore","Rails/classes/CGI/Session/NullStore.html#method-i-close","()","<p>Close session storage.\n<p>A no-op.\n",null,1],["close","CGI::Session::PStore","Rails/classes/CGI/Session/PStore.html#method-i-close","()","<p>Update and close the session’s PStore file.\n",null,1],["close","Curses::Window","Rails/classes/Curses/Window.html#method-i-close","()","<p>Deletes the window, and frees the memory\n",null,1],["close","DBM","Rails/classes/DBM.html#method-i-close","()","<p>Closes the database.\n",null,1],["close","DL::Handle","Rails/classes/DL/Handle.html#method-i-close","()","<p>Close this DL::Handle.  Calling close more than once will raise a\nDL::DLError exception.\n",null,1],["close","DRb::DRbSSLSocket","Rails/classes/DRb/DRbSSLSocket.html#method-i-close","()","",null,1],["close","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-i-close","()","<p>Close the connection.\n<p>If this is an instance returned by #open_server, then this stops listening\nfor new …\n",null,1],["close","DRb::DRbUNIXSocket","Rails/classes/DRb/DRbUNIXSocket.html#method-i-close","()","",null,1],["close","Dir","Rails/classes/Dir.html#method-i-close","()","<p>Closes the directory stream. Any further attempts to access <em>dir</em>\nwill raise an <code>IOError</code>.\n\n<pre>d = Dir.new(&quot;testdir&quot;) ...</pre>\n",null,1],["close","GDBM","Rails/classes/GDBM.html#method-i-close","()","<p>Closes the associated database file.\n",null,1],["close","Gem::Package::TarOutput","Rails/classes/Gem/Package/TarOutput.html#method-i-close","()","<p>Closes the TarOutput.\n",null,1],["close","Gem::Package::TarReader","Rails/classes/Gem/Package/TarReader.html#method-i-close","()","<p>Close the tar file\n",null,1],["close","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-close","()","<p>Closes the tar entry\n",null,1],["close","Gem::Package::TarWriter","Rails/classes/Gem/Package/TarWriter.html#method-i-close","()","<p>Closes the TarWriter\n",null,1],["close","IO","Rails/classes/IO.html#method-i-close","()","<p>Closes <em>ios</em> and flushes any pending writes to the operating system.\nThe stream is unavailable for any …\n",null,1],["close","Iconv","Rails/classes/Iconv.html#method-i-close","()","<p>Finishes conversion.\n<p>After calling this, calling Iconv#iconv will cause an exception, but\nmultiple calls ...\n",null,1],["close","Logger","Rails/classes/Logger.html#method-i-close","()","<p>Close the logging device.\n",null,1],["close","Logger::LogDevice","Rails/classes/Logger/LogDevice.html#method-i-close","()","",null,1],["close","Net::FTP","Rails/classes/Net/FTP.html#method-i-close","()","<p>Closes the connection.  Further operations are impossible until you open a\nnew connection with #connect …\n",null,1],["close","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-close","()","<p>Sends a CLOSE command to close the currently selected mailbox. The CLOSE\ncommand permanently removes …\n",null,1],["close","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-close","()","<p>Closes the connection\n",null,1],["close","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-close","()","<p>Closes the SSLSocket and flushes any unwritten data.\n",null,1],["close","OpenSSL::SSL::SSLServer","Rails/classes/OpenSSL/SSL/SSLServer.html#method-i-close","()","",null,1],["close","Rake::FtpUploader","Rails/classes/Rake/FtpUploader.html#method-i-close","()","<p>Close the uploader.\n",null,1],["close","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-i-close","()","<p>Closes the DNS resolver.\n",null,1],["close","SDBM","Rails/classes/SDBM.html#method-i-close","()","",null,1],["close","SOCKSSocket","Rails/classes/SOCKSSocket.html#method-i-close","()","<p>Closes the SOCKS connection.\n",null,1],["close","StringIO","Rails/classes/StringIO.html#method-i-close","()","<p>Closes strio.  The <strong>strio</strong> is unavailable for any further\ndata operations; an <code>IOError</code> is raised if such …\n",null,1],["close","Syslog","Rails/classes/Syslog.html#method-c-close","()","<p>Closes the syslog facility. Raises a runtime exception if it is not open.\n",null,1],["close","Tempfile","Rails/classes/Tempfile.html#method-i-close","(unlink_now=false)","<p>Closes the file. If <code>unlink_now</code> is true, then the file will be\nunlinked (deleted) after closing. Of course, …\n",null,1],["close","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-close","()","<p>Closes the logger (also closes the log device associated to the logger)\n",null,1],["close","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-close","()","<p>Close key.\n<p>After close, most method raise an error.\n",null,1],["close","Win32::Registry::PredefinedKey","Rails/classes/Win32/Registry/PredefinedKey.html#method-i-close","()","<p>Predefined keys cannot be closed\n",null,1],["close","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-close","()","<p>Closes the GzipFile object. This method calls close method of the\nassociated IO object. Returns the associated ...\n",null,1],["close","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-close","()","<p>Closes the stream. All operations on the closed stream will raise an\nexception.\n",null,1],["close!","Tempfile","Rails/classes/Tempfile.html#method-i-close-21","()","<p>Closes and unlinks (deletes) the file. Has the same effect as called\n<code>close(true)</code>.\n",null,1],["close_enabled?","DL::Handle","Rails/classes/DL/Handle.html#method-i-close_enabled-3F","()","<p>Returns <code>true</code> if dlclose() will be called when this DL::Handle\nis garbage collected.\n",null,1],["close_on_exec=","IO","Rails/classes/IO.html#method-i-close_on_exec-3D","(p1)","<p>Sets a close-on-exec flag.\n\n<pre>f = open(&quot;/dev/null&quot;)\nf.close_on_exec = true\nsystem(&quot;cat&quot;, &quot;/proc/self/fd/#{f.fileno}&quot;) ...</pre>\n",null,1],["close_on_exec?","IO","Rails/classes/IO.html#method-i-close_on_exec-3F","()","<p>Returns <code>true</code> if <em>ios</em> will be closed on exec.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">f</span> = <span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;/dev/null&quot;</span>)\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">close_on_exec?</span>                 <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["close_read","BasicSocket","Rails/classes/BasicSocket.html#method-i-close_read","()","<p>Disallows further read using shutdown system call.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">s1</span>, <span class=\"ruby-identifier\">s2</span> = <span class=\"ruby-constant\">UNIXSocket</span>.<span class=\"ruby-identifier\">pair</span>\n<span class=\"ruby-identifier\">s1</span>.<span class=\"ruby-identifier\">close_read</span>\n<span class=\"ruby-identifier\">s2</span>.<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["close_read","IO","Rails/classes/IO.html#method-i-close_read","()","<p>Closes the read end of a duplex I/O stream (i.e., one that contains both a\nread and a write stream, such …\n",null,1],["close_read","StringIO","Rails/classes/StringIO.html#method-i-close_read","()","<p>Closes the read end of a StringIO.  Will raise an <code>IOError</code> if\nthe <strong>strio</strong> is not readable.\n",null,1],["close_screen","Curses","Rails/classes/Curses.html#method-c-close_screen","()","<p>A program should always call Curses.close_screen before exiting or escaping\nfrom curses mode temporarily. …\n",null,1],["close_write","BasicSocket","Rails/classes/BasicSocket.html#method-i-close_write","()","<p>Disallows further write using shutdown system call.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">UNIXSocket</span>.<span class=\"ruby-identifier\">pair</span> {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">s1</span>, <span class=\"ruby-identifier\">s2</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">s1</span>.<span class=\"ruby-identifier\">print</span> <span class=\"ruby-string\">&quot;ping&quot;</span>\n  <span class=\"ruby-identifier\">s1</span>.<span class=\"ruby-identifier\">close_write</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["close_write","IO","Rails/classes/IO.html#method-i-close_write","()","<p>Closes the write end of a duplex I/O stream (i.e., one that contains both a\nread and a write stream, …\n",null,1],["close_write","StringIO","Rails/classes/StringIO.html#method-i-close_write","()","<p>Closes the write end of a StringIO.  Will raise an  <code>IOError</code> if\nthe <strong>strio</strong> is not writeable.\n",null,1],["closed?","ActionDispatch::BodyProxy","Ruby/classes/ActionDispatch/BodyProxy.html#method-i-closed-3F","()","",null,0],["closed?","ARGF","Rails/classes/ARGF.html#method-i-closed-3F","()","<p>Returns <em>true</em> if the current file has been closed; <em>false</em>\notherwise. Use <code>ARGF.close</code> to actually close the …\n",null,1],["closed?","Curses","Rails/classes/Curses.html#method-c-closed-3F","()","<p>Returns <code>true</code> if the window/screen has been closed, without any\nsubsequent Curses.refresh calls, returns …\n",null,1],["closed?","DBM","Rails/classes/DBM.html#method-i-closed-3F","()","<p>Returns true if the database is closed, false otherwise.\n",null,1],["closed?","GDBM","Rails/classes/GDBM.html#method-i-closed-3F","()","<p>Returns true if the associated database file has been closed.\n",null,1],["closed?","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-closed-3F","()","<p>Is the tar entry closed?\n",null,1],["closed?","Gem::Package::TarWriter","Rails/classes/Gem/Package/TarWriter.html#method-i-closed-3F","()","<p>Is the TarWriter closed?\n",null,1],["closed?","IO","Rails/classes/IO.html#method-i-closed-3F","()","<p>Returns <code>true</code> if <em>ios</em> is completely closed (for duplex\nstreams, both reader and writer), <code>false</code> otherwise. …\n",null,1],["closed?","Net::FTP","Rails/classes/Net/FTP.html#method-i-closed-3F","()","<p>Returns <code>true</code> iff the connection is closed.\n",null,1],["closed?","OpenSSL::SSL::SocketForwarder","Rails/classes/OpenSSL/SSL/SocketForwarder.html#method-i-closed-3F","()","",null,1],["closed?","SDBM","Rails/classes/SDBM.html#method-i-closed-3F","()","",null,1],["closed?","StringIO","Rails/classes/StringIO.html#method-i-closed-3F","()","<p>Returns <code>true</code> if <strong>strio</strong> is completely closed,\n<code>false</code> otherwise.\n",null,1],["closed?","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-closed-3F","()","<p>Same as IO#closed?\n",null,1],["closed?","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-closed-3F","()","<p>Returns true if the stream is closed.\n",null,1],["closed_read?","StringIO","Rails/classes/StringIO.html#method-i-closed_read-3F","()","<p>Returns <code>true</code> if <strong>strio</strong> is not readable,\n<code>false</code> otherwise.\n",null,1],["closed_write?","StringIO","Rails/classes/StringIO.html#method-i-closed_write-3F","()","<p>Returns <code>true</code> if <strong>strio</strong> is not writable,\n<code>false</code> otherwise.\n",null,1],["clrtoeol","Curses","Rails/classes/Curses.html#method-c-clrtoeol","()","<p>Clears to the end of line, that the cursor is currently on.\n",null,1],["clrtoeol","Curses::Window","Rails/classes/Curses/Window.html#method-i-clrtoeol","()","<p>Clear the window to the end of line, that the cursor is currently on.\n",null,1],["cmd","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-cmd","(options)","<p>Send a command to the host.\n<p>More exactly, sends a string to the host, and reads in all received data\nuntil …\n",null,1],["cmds","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-cmds","()","",null,1],["cmp","FileUtils","Rails/classes/FileUtils.html#method-c-cmp","(a, b)","",null,1],["cmp","OpenSSL::OCSP::CertificateId","Rails/classes/OpenSSL/OCSP/CertificateId.html#method-i-cmp","(p1)","",null,1],["cmp","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-i-cmp","(p1)","<p>Compares this Name with <code>other</code> and returns 0 if they are the\nsame and -1 or +1 if they are greater or …\n",null,1],["cmp_issuer","OpenSSL::OCSP::CertificateId","Rails/classes/OpenSSL/OCSP/CertificateId.html#method-i-cmp_issuer","(p1)","",null,1],["cmsg_is?","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-cmsg_is-3F","(p1, p2)","<p>tests the level and type of <em>ancillarydata</em>.\n\n<pre>ancdata = Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, ...</pre>\n",null,1],["code","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-code","()","<p>Returns a String to ensure compatibility with Net::HTTPResponse\n",null,0],["code","RailsGuides::Helpers","Ruby/classes/RailsGuides/Helpers.html#method-i-code","(&block)","",null,0],["code","RailsGuides::TextileExtensions","Ruby/classes/RailsGuides/TextileExtensions.html#method-i-code","(body)","",null,0],["code","WEBrick::HTTPStatus::Status","Rails/classes/WEBrick/HTTPStatus/Status.html#method-i-code","()","<p>Returns the HTTP status code\n",null,1],["codepage","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-codepage","()","<p>Returns current codepage.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">codepage</span> <span class=\"ruby-comment\"># =&gt; WIN32OLE::CP_ACP</span>\n</pre>\n",null,1],["codepage=","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-codepage-3D","(p1)","<p>Sets current codepage. The WIN32OLE.codepage is initialized according to\nEncoding.default_internal.  …\n",null,1],["codepoints","ARGF","Rails/classes/ARGF.html#method-i-codepoints","()","<p>Iterates over each codepoint of each file in <code>ARGF</code>.\n<p>This method allows you to treat the files supplied …\n",null,1],["codepoints","IO","Rails/classes/IO.html#method-i-codepoints","()","<p>Passes the <code>Integer</code> ordinal of each character in <em>ios</em>,\npassing the codepoint as an argument. The stream …\n",null,1],["codepoints","String","Rails/classes/String.html#method-i-codepoints","()","<p>Passes the <code>Integer</code> ordinal of each character in <em>str</em>,\nalso known as a <em>codepoint</em> when applied to Unicode …\n",null,1],["codepoints","StringIO","Rails/classes/StringIO.html#method-i-codepoints","()","<p>See IO#each_codepoint.\n",null,1],["coerce","BigDecimal","Rails/classes/BigDecimal.html#method-i-coerce","(p1)","<p>The coerce method provides support for Ruby type coercion. It is not\nenabled by default.\n<p>This means that …\n",null,1],["coerce","Bignum","Rails/classes/Bignum.html#method-i-coerce","(p1)","<p>MISSING: documentation\n",null,1],["coerce","Float","Rails/classes/Float.html#method-i-coerce","(p1)","<p>Returns an array with both <em>aNumeric</em> and <em>flt</em> represented\nas <code>Float</code> objects. This is achieved by converting …\n",null,1],["coerce","Matrix","Rails/classes/Matrix.html#method-i-coerce","(other)","<p>The coerce method provides support for Ruby type coercion. This coercion\nmechanism is used by Ruby to …\n",null,1],["coerce","Numeric","Rails/classes/Numeric.html#method-i-coerce","(p1)","<p>If <em>aNumeric</em> is the same type as <em>num</em>, returns an array\ncontaining <em>aNumeric</em> and <em>num</em>. Otherwise, returns …\n",null,1],["coerce","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-coerce","(p1)","",null,1],["coerce","URI::Generic","Rails/classes/URI/Generic.html#method-i-coerce","(oth)","<p>Args\n<p><code>v</code> &mdash; URI or String\n\n<p>Description\n",null,1],["coerce","Vector","Rails/classes/Vector.html#method-i-coerce","(other)","<p>The coerce method provides support for Ruby type coercion. This coercion\nmechanism is used by Ruby to …\n",null,1],["cofactor","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-cofactor","()","<p>See the OpenSSL documentation for EC_GROUP_get_cofactor()\n",null,1],["collation","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-collation","()","<p>Returns the database collation strategy.\n",null,0],["collect","Array","Rails/classes/Array.html#method-i-collect","()","<p>Invokes <em>block</em> once for each element of <code>self</code>. Creates\na new array containing the values returned by the …\n",null,1],["collect","Enumerable","Rails/classes/Enumerable.html#method-i-collect","()","<p>Returns a new array with the results of running <em>block</em> once for\nevery element in <em>enum</em>.\n<p>If no block is given, …\n",null,1],["collect","Matrix","Rails/classes/Matrix.html#method-i-collect","()","<p>Returns a matrix that is the result of iteration of the given block over\nall elements of the matrix. …\n",null,1],["collect","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-collect","( xpath=nil, &block )","",null,1],["collect","Vector","Rails/classes/Vector.html#method-i-collect","()","<p>Like Array#collect.\n",null,1],["collect!","Array","Rails/classes/Array.html#method-i-collect-21","()","<p>Invokes the block once for each element of <code>self</code>, replacing the\nelement with the value returned by <em>block</em> …\n",null,1],["collect!","Set","Rails/classes/Set.html#method-i-collect-21","()","<p>Replaces the elements with ones returned by collect().\n",null,1],["collect2","Vector","Rails/classes/Vector.html#method-i-collect2","(v)","<p>Collects (as in Enumerable#collect) over the elements of this vector and\n<code>v</code> in conjunction.\n",null,1],["collect_concat","Enumerable","Rails/classes/Enumerable.html#method-i-collect_concat","()","<p>Returns a new array with the concatenated results of running <em>block</em>\nonce for every element in <em>enum</em>.\n<p>If …\n",null,1],["collect_first_comment","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-collect_first_comment","()","<p>Look for the first comment in a file that isn’t a shebang line.\n",null,1],["collect_specs","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-collect_specs","(gems = gem_file_list)","<p>Collect specifications from .gem files from the gem directory.\n",null,1],["collect_tasks","Rake::Application","Rails/classes/Rake/Application.html#method-i-collect_tasks","()","<p>Collect the list of tasks on the command line.  If no tasks are given,\nreturn a list containing only …\n",null,1],["collect_tokens","RDoc::TokenStream","Rails/classes/RDoc/TokenStream.html#method-i-collect_tokens","()","<p>Starts collecting tokens\n",null,1],["collection","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-collection","()","<p>To add a route to the collection:\n\n<pre>resources :photos do\n  collection do\n    get 'search'\n  end\nend</pre>\n<p>This …\n",null,0],["collection_name","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-collection_name","()","",null,0],["collection_path","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-collection_path","(options = nil)","",null,0],["collection_path","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-collection_path","(prefix_options = {}, query_options = nil)","<p>Gets the collection path for the REST resources.  If the\n<code>query_options</code> parameter is omitted, Rails will …\n",null,0],["collection_select","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-collection_select","(method, collection, value_method, text_method, options = {}, html_options = {})","",null,0],["collection_select","ActionView::Helpers::FormOptionsHelper","Ruby/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_select","(object, method, collection, value_method, text_method, options = {}, html_options = {})","<p>Returns <code>&lt;select&gt;</code> and <code>&lt;option&gt;</code> tags\nfor the collection of existing return values of <code>method</code> …\n",null,0],["color","ActiveSupport::LogSubscriber","Ruby/classes/ActiveSupport/LogSubscriber.html#method-i-color","(text, color, bold=false)","<p>Set color by using a string or one of the defined constants. If a third\noption is set to true, it also …\n",null,0],["color_content","Curses","Rails/classes/Curses.html#method-c-color_content","(p1)","<p>Returns an 3 item Array of the RGB values in <code>color</code>\n",null,1],["color_pair","Curses","Rails/classes/Curses.html#method-c-color_pair","(p1)","<p>Sets the color pair attributes to <code>attrs</code>.\n<p>This should be equivalent to Curses.attrset(COLOR_PAIR(<code>attrs</code> …\n",null,1],["color_pairs","Curses","Rails/classes/Curses.html#method-c-color_pairs","()","<p>Returns the COLOR_PAIRS available, if the curses library supports it.\n",null,1],["color_set","Curses::Window","Rails/classes/Curses/Window.html#method-i-color_set","(p1)","<p>Sets the current color of the given window to the foreground/background\ncombination described by the …\n",null,1],["colorize_logging","Rails::Application::Configuration","Ruby/classes/Rails/Application/Configuration.html#method-i-colorize_logging","()","",null,0],["colorize_logging=","Rails::Application::Configuration","Ruby/classes/Rails/Application/Configuration.html#method-i-colorize_logging-3D","(val)","",null,0],["colors","Curses","Rails/classes/Curses.html#method-c-colors","()","<p>returns COLORS\n",null,1],["cols","Curses","Rails/classes/Curses.html#method-c-cols","()","<p>Returns the number of columns on the screen\n",null,1],["column","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-column","(column_name, type, options = {})","<p>Adds a new column to the named table. See TableDefinition#column for\ndetails of the options you can use. …\n",null,0],["column","ActiveRecord::ConnectionAdapters::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-column","(name, type, options = {})","<p>Instantiates a new column for the table. The <code>type</code> parameter is\nnormally one of the migrations native …\n",null,0],["column","Matrix","Rails/classes/Matrix.html#method-i-column","(j)","<p>Returns column vector number <code>j</code> of the matrix as a Vector\n(starting at 0 like an array).  When a block …\n",null,1],["column","Ripper::Filter","Rails/classes/Ripper/Filter.html#method-i-column","()","<p>The column number of the current token. This value starts from 0. This\nmethod is valid only in event …\n",null,1],["column_defaults","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-column_defaults","()","<p>Returns a hash where the keys are column names and the values are default\nvalues when instantiating the …\n",null,0],["column_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-column_exists-3F","(table_name, column_name, type = nil, options = {})","<p>Checks to see if a column exists in a given table.\n<p>Examples\n\n<pre># Check a column exists\ncolumn_exists?(:suppliers, ...</pre>\n",null,0],["column_exists?","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-column_exists-3F","(column_name, type = nil, options = {})","<p>Checks to see if a column exists. See SchemaStatements#column_exists?\n",null,0],["column_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-column_name_length","()","<p>Returns the maximum length of a column name.\n",null,0],["column_names","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-column_names","()","<p>Returns an array of column names as strings.\n",null,0],["column_vector","Matrix","Rails/classes/Matrix.html#method-c-column_vector","(column)","<p>Creates a single-column matrix where the values of that column are as given\nin <code>column</code>.\n\n<pre>Matrix.column_vector([4,5,6]) ...</pre>\n",null,1],["column_vectors","Matrix","Rails/classes/Matrix.html#method-i-column_vectors","()","<p>Returns an array of the column vectors of the matrix.  See Vector.\n",null,1],["columns","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-columns","()","",null,0],["columns","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-columns","(table_name, name = nil)","<p>Returns the list of all column definitions for a table.\n",null,0],["columns","ActiveRecord::ConnectionAdapters::SchemaCache","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-columns","(table = nil)","<p>Get the columns for a table\n",null,0],["columns","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-columns","(table_name, name = nil)","<p>Returns an array of Column objects for the table specified by\n<code>table_name</code>. See the concrete implementation …\n",null,0],["columns","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-columns","()","<p>Returns an array of column objects for the table associated with this\nclass.\n",null,0],["columns","Matrix","Rails/classes/Matrix.html#method-c-columns","(columns)","<p>Creates a matrix using <code>columns</code> as an array of column vectors.\n\n<pre>Matrix.columns([[25, 93], [-1, 66]])\n   ...</pre>\n",null,1],["columns_for_remove","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-columns_for_remove","(table_name, *column_names)","",null,0],["columns_hash","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-columns_hash","()","",null,0],["columns_hash","ActiveRecord::ConnectionAdapters::SchemaCache","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-columns_hash","(table = nil)","<p>Get the columns for a table as a hash, key is the column name value is the\ncolumn object.\n",null,0],["columns_hash","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-columns_hash","()","<p>Returns a hash of column objects for the table associated with this class.\n",null,0],["columns_per_multicolumn_index","ActiveRecord::ConnectionAdapters::DatabaseLimits","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-columns_per_multicolumn_index","()","<p>Returns the maximum number of columns in a multicolumn index.\n",null,0],["columns_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-columns_per_table","()","<p>Returns the maximum number of columns per table.\n",null,0],["combination","Array","Rails/classes/Array.html#method-i-combination","(p1)","<p>When invoked with a block, yields all combinations of length <em>n</em> of\nelements from <em>ary</em> and then returns …\n",null,1],["comma_breakable","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-comma_breakable","()","<p>A convenience method which is same as follows:\n\n<pre>text ','\nbreakable</pre>\n",null,1],["command","DRb::ExtServManager","Rails/classes/DRb/ExtServManager.html#method-c-command","()","",null,1],["command=","DRb::ExtServManager","Rails/classes/DRb/ExtServManager.html#method-c-command-3D","(cmd)","",null,1],["command_names","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-i-command_names","()","<p>Return a sorted list of all command names (as strings).\n",null,1],["comment","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-comment","(comment)","<p>Called when a comment is encountered. @p comment The content of the comment\n",null,1],["comment","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-comment","(comment)","<p>Called when a comment is encountered. @p comment The content of the comment\n",null,1],["comment","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-comment","()","<p>Returns comments recorded in the gzip file header, or nil if the comments\nis not present.\n",null,1],["comment=","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-comment-3D","(comment)","<p>This method is deprecated, use #add_comment instead.\n<p>Appends <code>comment</code> to the current comment, but separated …\n",null,1],["comment=","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-comment-3D","(comment)","<p>Replaces our comment with <code>comment</code>, unless it is empty.\n",null,1],["comment=","RDoc::Context::Section","Rails/classes/RDoc/Context/Section.html#method-i-comment-3D","(comment)","<p>Appends <code>comment</code> to the current comment separated by a rule.\n",null,1],["comment=","Rake::Task","Rails/classes/Rake/Task.html#method-i-comment-3D","(description)","<p>Writing to the comment attribute is the same as adding a description.\n",null,1],["comment=","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-comment-3D","(p1)","<p>Specify the comment (<code>str</code>) in the gzip header.\n",null,1],["comment?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-comment-3F","()","<p>Content: [ String text ]\n",null,1],["comment_if","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-comment_if","(value)","",null,0],["comments","REXML::Element","Rails/classes/REXML/Element.html#method-i-comments","()","<p>Get an array of all Comment children. IMMUTABLE\n",null,1],["commercial","Date","Rails/classes/Date.html#method-c-commercial","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Creates a date object denoting the given week date.\n<p>The week and the day of week should be a negative …\n",null,1],["commercial","DateTime","Rails/classes/DateTime.html#method-c-commercial","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7, p8 = v8)","<p>Creates a date-time object denoting the given week date.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">DateTime</span>.<span class=\"ruby-identifier\">commercial</span>(<span class=\"ruby-value\">2001</span>) <span class=\"ruby-comment\">#=&gt; #&lt;DateTime: ...</span>\n</pre>\n",null,1],["commit","PStore","Rails/classes/PStore.html#method-i-commit","()","<p>Ends the current PStore#transaction, committing any changes to the data\nstore immediately.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["commit_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-commit_db_transaction","()","<p>Commits the transaction (and turns on auto-committing).\n",null,0],["commit_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-commit_db_transaction","()","<p>Commits a transaction.\n",null,0],["commit_transaction_records","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-commit_transaction_records","()","<p>Send a commit message to all records after they have been committed.\n",null,0],["common_options","Gem::Command","Rails/classes/Gem/Command.html#method-c-common_options","()","",null,1],["compact","Array","Rails/classes/Array.html#method-i-compact","()","<p>Returns a copy of <code>self</code> with all <code>nil</code> elements\nremoved.\n\n<pre>[ &quot;a&quot;, nil, &quot;b&quot;, nil, &quot;c&quot;, nil ].compact\n       ...</pre>\n",null,1],["compact!","Array","Rails/classes/Array.html#method-i-compact-21","()","<p>Removes <code>nil</code> elements from the array. Returns <code>nil</code>\nif no changes were made, otherwise returns <em>ary</em>.\n\n<pre>[ &quot;a&quot;, ...</pre>\n",null,1],["compact_specs","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-compact_specs","(specs)","<p>Compacts Marshal output for the specs index data source by using identical\nobjects as much as possible. …\n",null,1],["comparable_time","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-comparable_time","()","",null,0],["compare_by_identity","Hash","Rails/classes/Hash.html#method-i-compare_by_identity","()","<p>Makes <em>hsh</em> compare its keys by their identity, i.e. it will\nconsider exact same objects as same keys. …\n",null,1],["compare_by_identity?","Hash","Rails/classes/Hash.html#method-i-compare_by_identity-3F","()","<p>Returns <code>true</code> if <em>hsh</em> will compare its keys by their\nidentity.  Also see <code>Hash#compare_by_identity</code>.\n",null,1],["compare_file","FileUtils","Rails/classes/FileUtils.html#method-c-compare_file","(a, b)","<p>Returns true if the contents of a file A and a file B are identical.\n\n<pre>FileUtils.compare_file('somefile', ...</pre>\n",null,1],["compare_language","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-compare_language","(lang1, lang2)","",null,1],["compare_stream","FileUtils","Rails/classes/FileUtils.html#method-c-compare_stream","(a, b)","<p>Returns true if the contents of a stream <code>a</code> and <code>b</code>\nare identical.\n",null,1],["compare_with_coercion","Time","Ruby/classes/Time.html#method-i-compare_with_coercion","(other)","<p>Layers additional behavior on Time#&lt;=&gt; so that DateTime and\nActiveSupport::TimeWithZone instances …\n",null,0],["compare_without_coercion","Time","Ruby/classes/Time.html#method-i-compare_without_coercion","(other)","",null,0],["compatible?","Encoding","Rails/classes/Encoding.html#method-c-compatible-3F","(p1, p2)","<p>Checks the compatibility of two objects.\n<p>If the objects are both strings they are compatible when they …\n",null,1],["compile","Sprockets::StaticCompiler","Ruby/classes/Sprockets/StaticCompiler.html#method-i-compile","()","",null,0],["compile","Regexp","Rails/classes/Regexp.html#method-c-compile","(*args)","<p>Synonym for <code>Regexp.new</code>\n",null,1],["compile","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-c-compile","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = v5)","",null,1],["compile_file","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-c-compile_file","(p1, p2 = v2)","",null,1],["compile_methods!","ActiveSupport::Configurable::Configuration","Ruby/classes/ActiveSupport/Configurable/Configuration.html#method-i-compile_methods-21","()","",null,0],["compile_methods!","ActiveSupport::Configurable::Configuration","Ruby/classes/ActiveSupport/Configurable/Configuration.html#method-c-compile_methods-21","(keys)","<p>compiles reader methods so we don’t have to go through method_missing\n",null,0],["compile_option","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-c-compile_option","()","",null,1],["compile_option=","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-c-compile_option-3D","(p1)","",null,1],["compiled_asset_path","Rails::Application::Configuration","Ruby/classes/Rails/Application/Configuration.html#method-i-compiled_asset_path","()","",null,0],["complain","Gem::Commands::LockCommand","Rails/classes/Gem/Commands/LockCommand.html#method-i-complain","(message)","",null,1],["complete","OptionParser::Completion","Rails/classes/OptionParser/Completion.html#method-i-complete","(key, icase = false, pat = nil)","",null,1],["complete","OptionParser::List","Rails/classes/OptionParser/List.html#method-i-complete","(id, opt, icase = false, *pat, &block)","<p>Searches list <code>id</code> for <code>opt</code> and the optional\npatterns for completion <code>pat</code>. If <code>icase</code> is true,\nthe search is …\n",null,1],["complete","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-complete","(min_visibility)","<p>Prepares this ClassModule for use by a generator.\n<p>See RDoc::TopLevel::complete\n",null,1],["complete","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-complete","(name)","<p>Completes <code>name</code> based on the caches.  For Readline\n",null,1],["complete","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-complete","(min_visibility)","<p>Prepares the RDoc code object tree for use by a generator.\n<p>It finds unique classes/modules defined, and …\n",null,1],["complete_authentication","Win32::SSPI::NegotiateAuth","Rails/classes/Win32/SSPI/NegotiateAuth.html#method-i-complete_authentication","(token)","<p>Takes a token and gets the next token in the Negotiate authentication\nchain. Token can be Base64 encoded …\n",null,1],["completer_quote_characters","Readline","Rails/classes/Readline.html#method-c-completer_quote_characters","()","<p>Gets a list of characters which can be used to quote a substring of the\nline.\n<p>Raises NotImplementedError …\n",null,1],["completer_quote_characters=","Readline","Rails/classes/Readline.html#method-c-completer_quote_characters-3D","(p1)","<p>Sets a list of characters which can be used to quote a substring of the\nline. Completion occurs on the …\n",null,1],["completer_word_break_characters","Readline","Rails/classes/Readline.html#method-c-completer_word_break_characters","()","<p>Gets the basic list of characters that signal a break between words for\nrl_complete_internal().\n<p>Raises …\n",null,1],["completer_word_break_characters=","Readline","Rails/classes/Readline.html#method-c-completer_word_break_characters-3D","(p1)","<p>Sets the basic list of characters that signal a break between words for\nrl_complete_internal(). The default …\n",null,1],["completion_append_character","Readline","Rails/classes/Readline.html#method-c-completion_append_character","()","<p>Returns a string containing a character to be appended on completion. The\ndefault is a space (“ …\n",null,1],["completion_append_character=","Readline","Rails/classes/Readline.html#method-c-completion_append_character-3D","(p1)","<p>Specifies a character to be appended on completion. Nothing will be\nappended if an empty string (“”) …\n",null,1],["completion_case_fold","Readline","Rails/classes/Readline.html#method-c-completion_case_fold","()","<p>Returns true if completion ignores case. If no, returns false.\n<p>NOTE: Returns the same object that is specified …\n",null,1],["completion_case_fold=","Readline","Rails/classes/Readline.html#method-c-completion_case_fold-3D","(p1)","<p>Sets whether or not to ignore case on completion.\n<p>Raises SecurityError exception if $SAFE is 4.\n",null,1],["completion_proc","Readline","Rails/classes/Readline.html#method-c-completion_proc","()","<p>Returns the completion Proc object.\n<p>Raises SecurityError exception if $SAFE is 4.\n",null,1],["completion_proc=","Readline","Rails/classes/Readline.html#method-c-completion_proc-3D","(p1)","<p>Specifies a Proc object <code>proc</code> to determine completion behavior.\nIt should take input string and return …\n",null,1],["component","Matrix","Rails/classes/Matrix.html#method-i-component","(i, j)","",null,1],["component","URI::Generic","Rails/classes/URI/Generic.html#method-c-component","()","<p>Components of the URI in the order.\n",null,1],["component","URI::Generic","Rails/classes/URI/Generic.html#method-i-component","()","<p>Components of the URI in the order.\n",null,1],["component","Vector","Rails/classes/Vector.html#method-i-component","(i)","",null,1],["component_ary","URI::Generic","Rails/classes/URI/Generic.html#method-i-component_ary","()","<p>returns an Array of the components defined from the COMPONENT Array\n",null,1],["compose","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-compose","()","<p>Performs composition on all the characters.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">'é'</span>.<span class=\"ruby-identifier\">length</span>                       <span class=\"ruby-comment\"># =&gt; 3</span>\n<span class=\"ruby-string\">'é'</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">compose</span>.<span class=\"ruby-identifier\">to_s</span>.<span class=\"ruby-identifier\">length</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["compose_codepoints","ActiveSupport::Multibyte::Unicode","Ruby/classes/ActiveSupport/Multibyte/Unicode.html#method-i-compose_codepoints","(codepoints)","<p>Compose decomposed characters to the composed form.\n",null,0],["composed_of","ActiveRecord::Aggregations::ClassMethods","Ruby/classes/ActiveRecord/Aggregations/ClassMethods.html#method-i-composed_of","(part_id, options = {})","<p>Adds reader and writer methods for manipulating a value object:\n<code>composed_of :address</code> adds <code>address</code> and …\n",null,0],["compress","ActiveSupport::Gzip","Ruby/classes/ActiveSupport/Gzip.html#method-c-compress","(source)","<p>Compresses a string using gzip.\n",null,0],["compress","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-compress","(filename, extension)","<p>Compress <code>filename</code> with <code>extension</code>.\n",null,1],["compress_indicies","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-compress_indicies","()","<p>Compresses indicies on disk\n",null,1],["compressed?","ActiveSupport::Cache::Entry","Ruby/classes/ActiveSupport/Cache/Entry.html#method-i-compressed-3F","()","",null,0],["compute_key","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-compute_key","(p1)","<p>Returns a String containing a shared secret computed from the other party’s\npublic value. See DH_compute_key …\n",null,1],["compute_tags","Rails::Rack::Logger","Ruby/classes/Rails/Rack/Logger.html#method-i-compute_tags","(request)","",null,0],["compute_type","ActiveRecord::Inheritance::ClassMethods","Ruby/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-compute_type","(type_name)","<p>Returns the class type of the record using the current module as a prefix.\nSo descendants of MyApp::Business::Account …\n",null,0],["concat","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-concat","(string)","<p>The preferred method of outputting text in your views is to use the &lt;%=\n“text” %&gt; eRuby …\n",null,0],["concat","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-concat","(value)","",null,0],["concat","Array","Rails/classes/Array.html#method-i-concat","(p1)","<p>Appends the elements of <em>other_ary</em> to <code>self</code>.\n\n<pre class=\"ruby\">[ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span> ].<span class=\"ruby-identifier\">concat</span>( [<span class=\"ruby-string\">&quot;c&quot;</span>, <span class=\"ruby-string\">&quot;d&quot;</span>] ) <span class=\"ruby-comment\">#=&gt; [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot; ...</span>\n</pre>\n",null,1],["concat","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-concat","( *objects )","<p>UNTESTED\n",null,1],["concat","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-concat","(*jobs)","",null,1],["concat","String","Rails/classes/String.html#method-i-concat","(p1)","<p>Append—Concatenates the given object to <em>str</em>. If the object is a\n<code>Integer</code>, it is considered as a codepoint, …\n",null,1],["concat","StringScanner","Rails/classes/StringScanner.html#method-i-concat","(p1)","<p>Appends <code>str</code> to the string being scanned. This method does not\naffect scan pointer.\n\n<pre>s = StringScanner.new(&quot;Fri ...</pre>\n",null,1],["conditional_layout?","AbstractController::Layouts","Ruby/classes/AbstractController/Layouts.html#method-i-conditional_layout-3F","()","",null,0],["conditional_layout?","AbstractController::Layouts::ClassMethods::LayoutConditions","Ruby/classes/AbstractController/Layouts/ClassMethods/LayoutConditions.html#method-i-conditional_layout-3F","()","<p>Determines whether the current action has a layout by checking the action\nname against the :only and …\n",null,0],["conf","IRB","Rails/classes/IRB.html#method-c-conf","()","",null,1],["config","ActiveSupport::Configurable","Ruby/classes/ActiveSupport/Configurable.html#method-i-config","()","<p>Reads and writes attributes from a configuration <code>OrderedHash</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'active_support/configurable'</span>\n\n<span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["config","ActiveSupport::Configurable::ClassMethods","Ruby/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-config","()","",null,0],["config","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-config","()","",null,0],["config","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-config","()","",null,0],["config","Rails::Plugin","Ruby/classes/Rails/Plugin.html#method-i-config","()","",null,0],["config","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-config","()","",null,0],["config","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-i-config","()","",null,0],["config","Sprockets::Helpers::IsolatedHelper","Ruby/classes/Sprockets/Helpers/IsolatedHelper.html#method-i-config","()","",null,0],["config","DRb","Rails/classes/DRb.html#method-c-config","()","<p>Get the configuration of the current server.\n<p>If there is no current server, this returns the default configuration. …\n",null,1],["config=","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-i-config-3D","(p1)","",null,1],["config_accessor","ActiveSupport::Configurable::ClassMethods","Ruby/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-config_accessor","(*names)","<p>Allows you to add shortcut so that you don’t have to refer to attribute\nthrough config. Also look at …\n",null,0],["config_file","Gem","Rails/classes/Gem.html#method-c-config_file","()","<p>The path to standard location of the user’s .gemrc file.\n",null,1],["config_file_name","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-config_file_name","()","<p>The name of the configuration file.\n",null,1],["configru","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-configru","()","",null,0],["configuration","Rails","Ruby/classes/Rails.html#method-c-configuration","()","<p>The Configuration instance used to configure the Rails environment\n",null,0],["configuration","Gem","Rails/classes/Gem.html#method-c-configuration","()","<p>The standard configuration object for gems.\n",null,1],["configuration=","Gem","Rails/classes/Gem.html#method-c-configuration-3D","(config)","<p>Use the given configuration object (which implements the ConfigFile\nprotocol) as the standard configuration …\n",null,1],["configurations","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-configurations","","<p>Contains the database configuration - as is typically stored in\nconfig/database.yml - as a Hash.\n<p>For example, …\n",null,0],["configure","ActiveSupport::Configurable::ClassMethods","Ruby/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-configure","()","",null,0],["configure","Rails::Railtie::Configurable::ClassMethods","Ruby/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-configure","(&block)","",null,0],["configure_connection_for_https","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-configure_connection_for_https","(connection)","",null,1],["configured_args","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-c-configured_args","()","",null,1],["configured_args=","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-c-configured_args-3D","(args)","",null,1],["conflicts","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-conflicts","()","<p>Return any possible conflicts against the currently loaded specs.\n",null,1],["conj","Complex","Rails/classes/Complex.html#method-i-conj","()","<p>Returns the complex conjugate.\n",null,1],["conj","Matrix","Rails/classes/Matrix.html#method-i-conj","()","",null,1],["conj","Numeric","Rails/classes/Numeric.html#method-i-conj","()","<p>Returns self.\n",null,1],["conjugate","Complex","Rails/classes/Complex.html#method-i-conjugate","()","<p>Returns the complex conjugate.\n",null,1],["conjugate","Matrix","Rails/classes/Matrix.html#method-i-conjugate","()","<p>Returns the conjugate of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">2</span>), <span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">0</span>,<span class=\"ruby-value\">1</span>), <span class=\"ruby-value\">0</span>], [<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span><span class=\"ruby-operator\">+</span><span class=\"ruby-value\">2</span><span class=\"ruby-identifier\">i</span>   <span class=\"ruby-identifier\">i</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["conjugate","Numeric","Rails/classes/Numeric.html#method-i-conjugate","()","<p>Returns self.\n",null,1],["connect","Addrinfo","Rails/classes/Addrinfo.html#method-i-connect","(&block)","<p>creates a socket connected to the address of self.\n<p>If a block is given, it is called with the socket and …\n",null,1],["connect","DRb::DRbSSLSocket::SSLConfig","Rails/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-connect","(tcp)","",null,1],["connect","Net::FTP","Rails/classes/Net/FTP.html#method-i-connect","(host, port = FTP_PORT)","<p>Establishes an FTP connection to host, optionally overriding the default\nport. If the environment variable …\n",null,1],["connect","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-connect","()","<p>Initiates an SSL/TLS handshake with a server.  The handshake may be started\nafter unencrypted data has …\n",null,1],["connect","Rake::FtpUploader","Rails/classes/Rake/FtpUploader.html#method-c-connect","(path, host, account, password)","<p>Create an uploader and pass it to the given block as <code>up</code>. When\nthe block is complete, close the uploader. …\n",null,1],["connect","Socket","Rails/classes/Socket.html#method-i-connect","(p1)","<p>Requests a connection to be made on the given <code>remote_sockaddr</code>.\nReturns 0 if successful, otherwise an …\n",null,1],["connect","UDPSocket","Rails/classes/UDPSocket.html#method-i-connect","(host, port)","<p>Connects <em>udpsocket</em> to <em>host</em>:<em>port</em>.\n<p>This makes possible to send without destination address.\n\n<pre>u1 = UDPSocket.new ...</pre>\n",null,1],["connect","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-connect","(p1, *args)","<p>Returns running OLE Automation object or WIN32OLE object from moniker. 1st\nargument should be OLE program …\n",null,1],["connect_address","BasicSocket","Rails/classes/BasicSocket.html#method-i-connect_address","()","<p>Returns an address of the socket suitable for connect in the local machine.\n<p>This method returns <em>self</em>. …\n",null,1],["connect_from","Addrinfo","Rails/classes/Addrinfo.html#method-i-connect_from","(*local_addr_args, &block)","<p>creates a socket connected to the address of self.\n<p>If one or more arguments given as <em>local_addr_args</em>, …\n",null,1],["connect_nonblock","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-connect_nonblock","()","<p>Initiates the SSL/TLS handshake as a client in non-blocking manner.\n\n<pre># emulates blocking connect\nbegin ...</pre>\n",null,1],["connect_nonblock","Socket","Rails/classes/Socket.html#method-i-connect_nonblock","(p1)","<p>Requests a connection to be made on the given <code>remote_sockaddr</code>\nafter O_NONBLOCK is set for the underlying …\n",null,1],["connect_to","Addrinfo","Rails/classes/Addrinfo.html#method-i-connect_to","(*remote_addr_args, &block)","<p>creates a socket connected to <em>remote_addr_args</em> and bound to self.\n<p>If a block is given, it is called with …\n",null,1],["connected?","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-connected-3F","()","<p>Returns true if Active Record is connected.\n",null,0],["connected?","ActiveRecord::ConnectionAdapters::ConnectionHandler","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-connected-3F","(klass)","<p>Returns true if a connection that’s accessible to this class has already\nbeen opened.\n",null,0],["connected?","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-connected-3F","()","<p>Returns true if a connection has already been opened.\n",null,0],["connecting","GServer","Rails/classes/GServer.html#method-i-connecting","(client)","<p>Called when a client connects, if auditing is enabled.\n<p><code>client</code> &mdash; a TCPSocket instances representing the client …\n\n",null,1],["connection","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-connection","()","<p>Returns the connection currently associated with the class. This can also\nbe used to “borrow” …\n",null,0],["connection","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-connection","()","<p>Returns the connection currently associated with the class. This can also\nbe used to “borrow” …\n",null,0],["connection","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-connection","()","<p>Retrieve the connection associated with the current thread, or call\n#checkout to obtain one if necessary. …\n",null,0],["connection","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-connection","()","",null,0],["connection","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-connection","()","",null,0],["connection","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-connection","(refresh = false)","",null,0],["connection","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-connection","(refresh = false)","<p>An instance of ActiveResource::Connection that is the base connection to\nthe remote service. The <code>refresh</code> …\n",null,0],["connection_close?","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-connection_close-3F","()","",null,1],["connection_config","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-connection_config","()","<p>Returns the configuration of the associated connection as a hash:\n\n<pre>ActiveRecord::Base.connection_config ...</pre>\n",null,0],["connection_for","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-connection_for","(uri)","<p>Creates or an HTTP connection based on <code>uri</code>, or retrieves an\nexisting connection, using a proxy if needed. …\n",null,1],["connection_handler","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-connection_handler","","<p>The connection handler\n",null,0],["connection_id","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-connection_id","()","",null,0],["connection_id=","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-connection_id-3D","(connection_id)","",null,0],["connection_keep_alive?","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-connection_keep_alive-3F","()","",null,1],["connection_pool","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-connection_pool","()","",null,0],["connection_pool","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-connection_pool","()","",null,0],["connections","GServer","Rails/classes/GServer.html#method-i-connections","()","<p>Return the current number of connected clients\n",null,1],["consider_all_requests_local?","Rails::InfoController","Ruby/classes/Rails/InfoController.html#method-i-consider_all_requests_local-3F","()","",null,0],["console","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-c-console","(&blk)","",null,0],["console","IO","Rails/classes/IO.html#method-c-console","()","<p>Returns an File instance opened console.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["const_defined?","Module","Rails/classes/Module.html#method-i-const_defined-3F","(p1, p2 = v2)","<p>Checks for a constant with the given name in <em>mod</em> If\n<code>inherit</code> is set, the lookup will also search the ancestors …\n",null,1],["const_defined_in?","JSON","Rails/classes/JSON.html#method-c-const_defined_in-3F","(modul, constant)","",null,1],["const_get","Module","Rails/classes/Module.html#method-i-const_get","(p1, p2 = v2)","<p>Checks for a constant with the given name in <em>mod</em> If\n<code>inherit</code> is set, the lookup will also search the ancestors …\n",null,1],["const_load","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-const_load","(p1, p2 = v2)","<p>Defines the constants of OLE Automation server as mod’s constants. The\nfirst argument is WIN32OLE object …\n",null,1],["const_missing","Module","Rails/classes/Module.html#method-i-const_missing","(p1)","<p>Invoked when a reference is made to an undefined constant in <em>mod</em>.\nIt is passed a symbol for the undefined …\n",null,1],["const_set","Module","Rails/classes/Module.html#method-i-const_set","(p1, p2)","<p>Sets the named constant to the given object, returning that object. Creates\na new constant if no constant …\n",null,1],["const_warning","Rake::Application","Rails/classes/Rake/Application.html#method-i-const_warning","(const_name)","<p>Warn about deprecated use of top level constant names.\n",null,1],["constantize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-constantize","(camel_cased_word)","<p>Tries to find a constant with the name specified in the argument string:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;Module&quot;</span>.<span class=\"ruby-identifier\">constantize</span>     <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,0],["constantize","String","Ruby/classes/String.html#method-i-constantize","()","<p><code>constantize</code> tries to find a declared constant with the name\nspecified in the string. It raises a NameError ...\n",null,0],["constants","Module","Rails/classes/Module.html#method-i-constants","(p1 = v1)","<p>Returns an array of the names of the constants accessible in <em>mod</em>.\nThis includes the names of constants …\n",null,1],["constants","Module","Rails/classes/Module.html#method-c-constants","(*args)","<p>In the first form, returns an array of the names of all constants\naccessible from the point of call. …\n",null,1],["constraints","ActionDispatch::Routing::Mapper::Scoping","Ruby/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-constraints","(constraints = {})","<p>Parameter Restriction\n<p>Allows you to constrain the nested routes based on a set of rules. For\ninstance, …\n",null,0],["construct","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-c-construct","(hour, minute, second)","",null,1],["construct_join_dependency_for_association_find","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-construct_join_dependency_for_association_find","()","",null,0],["construct_limited_ids_condition","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-construct_limited_ids_condition","(relation)","",null,0],["construct_relation_for_association_calculations","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-construct_relation_for_association_calculations","()","",null,0],["construct_relation_for_association_find","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-construct_relation_for_association_find","(join_dependency)","",null,0],["consume","REXML::IOSource","Rails/classes/REXML/IOSource.html#method-i-consume","( pattern )","",null,1],["consume","REXML::Source","Rails/classes/REXML/Source.html#method-i-consume","( pattern )","",null,1],["consumes?","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-c-consumes-3F","(string)","<p>Returns <code>true</code> when the proxy class can handle the string.\nReturns <code>false</code> otherwise.\n",null,0],["contains","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-contains","( string, test )","<p>Fixed by Mike Stok\n",null,1],["contains_bad_protocols?","HTML::WhiteListSanitizer","Ruby/classes/HTML/WhiteListSanitizer.html#method-i-contains_bad_protocols-3F","(attr_name, value)","",null,0],["contains_requirable_file?","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-contains_requirable_file-3F","(file)","<p>Return true if this spec can require <code>file</code>.\n",null,1],["content=","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-content-3D","(value)","",null,1],["content=","RSS::Maker::ITunesItemModel::ITunesDurationBase","Rails/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html#method-i-content-3D","(content)","",null,1],["content_columns","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-content_columns","()","<p>Returns an array of column objects where the primary id, all columns ending\nin “_id” or “_count”, …\n",null,0],["content_encoding","OpenURI::Meta","Rails/classes/OpenURI/Meta.html#method-i-content_encoding","()","<p>returns a list of encodings in Content-Encoding field as an Array of\nString. The encodings are downcased …\n",null,1],["content_for","ActionView::Helpers::CaptureHelper","Ruby/classes/ActionView/Helpers/CaptureHelper.html#method-i-content_for","(name, content = nil, &block)","<p>Calling content_for stores a block of markup in an identifier for later\nuse. You can make subsequent …\n",null,0],["content_for?","ActionView::Helpers::CaptureHelper","Ruby/classes/ActionView/Helpers/CaptureHelper.html#method-i-content_for-3F","(name)","<p>content_for? simply checks whether any content has been captured yet using\ncontent_for Useful to render …\n",null,0],["content_length","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-content_length","()","<p>Returns the content length of the request as an integer.\n",null,0],["content_length","HttpServer::Request","Rails/classes/HttpServer/Request.html#method-i-content_length","()","",null,1],["content_length","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-content_length","()","<p>Returns an Integer object which represents the HTTP Content-Length: header\nfield, or <code>nil</code> if that field …\n",null,1],["content_length","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-content_length","()","<p>The content-length header\n",null,1],["content_length","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-content_length","()","<p>The content-length header\n",null,1],["content_length=","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-content_length-3D","(len)","",null,1],["content_length=","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-content_length-3D","(len)","<p>Sets the content-length header to <code>len</code>\n",null,1],["content_mime_type","ActionDispatch::Http::MimeNegotiation","Ruby/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-content_mime_type","()","<p>The MIME type of the HTTP request, such as Mime::XML.\n<p>For backward compatibility, the post format is extracted …\n",null,0],["content_range","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-content_range","()","<p>Returns a Range object which represents the value of the Content-Range:\nheader field. For a partial entity …\n",null,1],["content_setup","RSS::Element","Rails/classes/RSS/Element.html#method-c-content_setup","(type=nil, disp_name=nil)","",null,1],["content_tag","ActionView::Helpers::TagHelper","Ruby/classes/ActionView/Helpers/TagHelper.html#method-i-content_tag","(name, content_or_options_with_block = nil, options = nil, escape = true, &block)","<p>Returns an HTML block tag of type <code>name</code> surrounding the\n<code>content</code>. Add HTML attributes by passing an attributes …\n",null,0],["content_tag_for","ActionView::Helpers::RecordTagHelper","Ruby/classes/ActionView/Helpers/RecordTagHelper.html#method-i-content_tag_for","(tag_name, single_or_multiple_records, prefix = nil, options = nil, &block)","<p>content_tag_for creates an HTML element with id and class parameters that\nrelate to the specified Active …\n",null,0],["content_type","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-content_type","()","",null,0],["content_type","ActionDispatch::Http::MimeNegotiation","Ruby/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-content_type","()","",null,0],["content_type","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-content_type","()","<p>Returns a content type string such as “text/html”. This method returns nil\nif Content-Type: …\n",null,1],["content_type","OpenURI::Meta","Rails/classes/OpenURI/Meta.html#method-i-content_type","()","<p>returns “type/subtype” which is MIME Content-Type. It is downcased for\ncanonicalization. Content- …\n",null,1],["content_type","RSS::Atom::ContentModel::ClassMethods","Rails/classes/RSS/Atom/ContentModel/ClassMethods.html#method-i-content_type","()","",null,1],["content_type","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-content_type","()","<p>The content-type header\n",null,1],["content_type","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-content_type","()","<p>The content-type header\n",null,1],["content_type=","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-content_type-3D","(type)","<p>Basic implementations for content_type=, location=, and headers are\nprovided to reduce the dependency …\n",null,0],["content_type=","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-content_type-3D","(type, params = {})","",null,1],["content_type=","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-content_type-3D","(type)","<p>Sets the content-type header to <code>type</code>\n",null,1],["context","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-context","(th)","",null,1],["context","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-context","(thread=Thread.current)","",null,1],["context","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-context","()","",null,1],["context","REXML::ParseException","Rails/classes/REXML/ParseException.html#method-i-context","()","",null,1],["context=","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-context-3D","(value)","",null,1],["continue","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-continue","()","<p>Generate HTTP/1.1 100 continue response if the client expects it, otherwise\ndoes nothing.\n",null,1],["continue?","Net::SMTP::Response","Rails/classes/Net/SMTP/Response.html#method-i-continue-3F","()","<p>Determines whether the response received was a Positive Intermediate reply\n(3xx reply code)\n",null,1],["continue_timeout=","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-continue_timeout-3D","(sec)","<p>Setter for the continue_timeout attribute.\n",null,1],["continue_timeout=","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-continue_timeout-3D","(sec)","<p>Setter for the continue_timeout attribute.\n",null,1],["controller","ActionDispatch::Routing::Mapper::Scoping","Ruby/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-controller","(controller, options={})","<p>Scopes routes to a specific controller\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">controller</span> <span class=\"ruby-string\">&quot;food&quot;</span> <span class=\"ruby-keyword\">do</span>\n  <span class=\"ruby-identifier\">match</span> <span class=\"ruby-string\">&quot;bacon&quot;</span>, :<span class=\"ruby-identifier\">action</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;bacon&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["controller","Rails::ConsoleMethods","Ruby/classes/Rails/ConsoleMethods.html#method-i-controller","()","",null,0],["controller","Sprockets::Helpers::IsolatedHelper","Ruby/classes/Sprockets/Helpers/IsolatedHelper.html#method-i-controller","()","",null,0],["controller_class_name","Rails::Generators::ResourceHelpers","Ruby/classes/Rails/Generators/ResourceHelpers.html#method-i-controller_class_name","()","",null,0],["controller_class_path","Rails::Generators::ResourceHelpers","Ruby/classes/Rails/Generators/ResourceHelpers.html#method-i-controller_class_path","()","",null,0],["controller_file_name","Rails::Generators::ResourceHelpers","Ruby/classes/Rails/Generators/ResourceHelpers.html#method-i-controller_file_name","()","",null,0],["controller_file_path","Rails::Generators::ResourceHelpers","Ruby/classes/Rails/Generators/ResourceHelpers.html#method-i-controller_file_path","()","",null,0],["controller_i18n_scope","Rails::Generators::ResourceHelpers","Ruby/classes/Rails/Generators/ResourceHelpers.html#method-i-controller_i18n_scope","()","",null,0],["controller_name","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-controller_name","()","<p>Delegates to the class’ <code>controller_name</code>\n",null,0],["controller_name","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-c-controller_name","()","<p>Returns the last part of the controller’s name, underscored, without the\nending <code>Controller</code>. For instance, …\n",null,0],["controller_path","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-i-controller_path","()","<p>Delegates to the class’ #controller_path\n",null,0],["controller_path","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-c-controller_path","()","<p>Returns the full controller name, underscored, without the ending\nController. For instance, MyApp::MyPostsController …\n",null,0],["controller_path","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-c-controller_path","()","",null,0],["conv","Iconv","Rails/classes/Iconv.html#method-c-conv","(p1, p2, p3)","<p>Shorthand for\n\n<pre>Iconv.iconv(to, from, str).join</pre>\n<p>See Iconv.iconv.\n",null,1],["conv","Iconv","Rails/classes/Iconv.html#method-i-conv","(*args)","<p>Equivalent to\n\n<pre>iconv(nil, str..., nil).join</pre>\n",null,1],["convert","CSV","Rails/classes/CSV.html#method-i-convert","(name = nil, &converter)","<p>You can use this method to install a CSV::Converters built-in, or provide a\nblock that handles a custom …\n",null,1],["convert","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-convert","(p1)","<p>Convert source_string and return destination_string.\n<p>source_string is assumed as a part of source. i.e. …\n",null,1],["convert","OptionParser::Completion","Rails/classes/OptionParser/Completion.html#method-i-convert","(opt = nil, val = nil, *)","",null,1],["convert","RDoc::Markup","Rails/classes/RDoc/Markup.html#method-i-convert","(input, formatter)","<p>We take <code>input</code>, parse it if necessary, then invoke the output\n<code>formatter</code> using a Visitor to render the …\n",null,1],["convert","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-convert","(content)","<p>Marks up <code>content</code>\n",null,1],["convert","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-convert","(value)","",null,1],["convert","RSS::Element","Rails/classes/RSS/Element.html#method-i-convert","(value)","",null,1],["convert","WEBrick::HTTPVersion","Rails/classes/WEBrick/HTTPVersion.html#method-c-convert","(version)","",null,1],["convert_attrs","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-convert_attrs","(str, attrs)","<p>Map attributes like <strong>text</strong>to the sequence\n001002&lt;char&gt;001003&lt;char&gt;, where &lt;char&gt; is a …\n",null,1],["convert_database_option_for_jruby","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-convert_database_option_for_jruby","()","",null,0],["convert_flow","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-convert_flow","(flow)","<p>Converts flow items <code>flow</code>\n",null,1],["convert_html","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-convert_html","(str, attrs)","<p>Converts HTML tags to RDoc attributes\n",null,1],["convert_key","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_key","(key)","",null,0],["convert_key","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_key","(key)","",null,0],["convert_special","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-convert_special","(special)","<p>Converts added specials.  See RDoc::Markup#add_special\n",null,1],["convert_special","RDoc::Markup::ToBs","Rails/classes/RDoc/Markup/ToBs.html#method-i-convert_special","(special)","<p>Calls convert_string on the result of convert_special\n",null,1],["convert_specials","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-convert_specials","(str, attrs)","<p>Converts special sequences to RDoc attributes\n",null,1],["convert_string","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-convert_string","(string)","<p>Converts a string to be fancier if desired\n",null,1],["convert_string","RDoc::Markup::ToBs","Rails/classes/RDoc/Markup/ToBs.html#method-i-convert_string","(string)","<p>Adds bold or underline mixed with backspaces\n",null,1],["convert_string","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-convert_string","(text)","<p>CGI escapes <code>text</code>\n",null,1],["convert_to_model","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-convert_to_model","(object)","<p>Converts the given object to an ActiveModel compliant one.\n",null,0],["convert_value","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_value","(value)","",null,0],["convert_value","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_value","(value)","",null,0],["converter=","RSS::Element","Rails/classes/RSS/Element.html#method-i-converter-3D","(converter)","",null,1],["converters","CSV","Rails/classes/CSV.html#method-i-converters","()","<p>Returns the current list of converters in effect.  See CSV::new for\ndetails. Built-in converters will …\n",null,1],["convertible_int","Object","Rails/classes/Object.html#method-i-convertible_int","(type, headers = nil, opts = nil, &b)","<p>Returns the convertible integer type of the given <code>type</code>.  You\nmay optionally specify additional <code>headers</code> …\n",null,1],["convpath","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-convpath","()","<p>Returns the conversion path of ec.\n<p>The result is an array of conversions.\n\n<pre>ec = Encoding::Converter.new(&quot;ISO-8859-1&quot;, ...</pre>\n",null,1],["cooked","IO","Rails/classes/IO.html#method-i-cooked","()","<p>Yields <code>self</code> within cooked mode.\n\n<pre>STDIN.cooked(&amp;:gets)</pre>\n<p>will read and return a line with echo back and line …\n",null,1],["cooked!","IO","Rails/classes/IO.html#method-i-cooked-21","()","<p>Enables cooked mode.\n<p>If the terminal mode needs to be back, use io.cooked { … }.\n<p>You must require ‘io/console …\n",null,1],["cookie_jar","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-cookie_jar","()","",null,0],["cookies","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-cookies","()","<p>Returns the response cookies, converted to a Hash of (name =&gt; value)\npairs\n\n<pre>assert_equal 'AuthorOfNewPage', ...</pre>\n",null,0],["copy","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-copy","(destination, sources, options = {})","",null,0],["copy","FileUtils","Rails/classes/FileUtils.html#method-c-copy","(src, dest, options = {})","",null,1],["copy","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-copy","(path, initheader = nil)","<p>Sends a COPY request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["copy","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-copy","(path, initheader = nil)","<p>Sends a COPY request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["copy","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-copy","(set, mailbox)","<p>Sends a COPY command to copy the specified message(s) to the end of the\nspecified destination <code>mailbox</code> …\n",null,1],["copy","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-copy","(p1)","",null,1],["copy","Sys","Rails/classes/Sys.html#method-i-copy","(file_name, dest_file)","<p>Copy a single file from <code>file_name</code> to <code>dest_file</code>.\n",null,1],["copy_entry","FileUtils","Rails/classes/FileUtils.html#method-c-copy_entry","(src, dest, preserve = false, dereference_root = false, remove_destination = false)","<p>Copies a file system entry <code>src</code> to <code>dest</code>. If\n<code>src</code> is a directory, this method copies its contents\nrecursively. …\n",null,1],["copy_file","FileUtils","Rails/classes/FileUtils.html#method-c-copy_file","(src, dest, preserve = false, dereference = true)","<p>Copies file contents of <code>src</code> to <code>dest</code>. Both of\n<code>src</code> and <code>dest</code> must be a path name.\n",null,1],["copy_files","Sys","Rails/classes/Sys.html#method-i-copy_files","(wildcard, dest_dir)","<p>Copy all files matching <code>wildcard</code> into the directory\n<code>dest_dir</code>.\n",null,1],["copy_javascript","Js::Generators::AssetsGenerator","Ruby/classes/Js/Generators/AssetsGenerator.html#method-i-copy_javascript","()","",null,0],["copy_nonce","OpenSSL::OCSP::BasicResponse","Rails/classes/OpenSSL/OCSP/BasicResponse.html#method-i-copy_nonce","(p1)","",null,1],["copy_stream","FileUtils","Rails/classes/FileUtils.html#method-c-copy_stream","(src, dest)","<p>Copies stream <code>src</code> to <code>dest</code>. <code>src</code> must\nrespond to #read(n) and <code>dest</code> must respond to #write(str).\n",null,1],["copy_stream","IO","Rails/classes/IO.html#method-c-copy_stream","(p1, p2, p3 = v3, p4 = v4)","<p>IO.copy_stream copies <em>src</em> to <em>dst</em>. <em>src</em> and\n<em>dst</em> is either a filename or an IO.\n<p>This method returns the number …\n",null,1],["copy_string","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-copy_string","(start_pos, end_pos)","<p>Copies <code>start_pos</code> to <code>end_pos</code> from the current\nstring\n",null,1],["copy_stylesheet","Css::Generators::AssetsGenerator","Ruby/classes/Css/Generators/AssetsGenerator.html#method-i-copy_stylesheet","()","",null,0],["copy_stylesheet","Css::Generators::ScaffoldGenerator","Ruby/classes/Css/Generators/ScaffoldGenerator.html#method-i-copy_stylesheet","()","<p>In order to allow the Sass generators to pick up the default Rails CSS and\ntransform it, we leave it …\n",null,0],["copy_view_files","Erb::Generators::ControllerGenerator","Ruby/classes/Erb/Generators/ControllerGenerator.html#method-i-copy_view_files","()","",null,0],["copy_view_files","Erb::Generators::ScaffoldGenerator","Ruby/classes/Erb/Generators/ScaffoldGenerator.html#method-i-copy_view_files","()","",null,0],["coredump?","Process::Status","Rails/classes/Process/Status.html#method-i-coredump-3F","()","<p>Returns <code>true</code> if <em>stat</em> generated a coredump when it\nterminated. Not available on all platforms.\n",null,1],["correct?","Gem::Version","Rails/classes/Gem/Version.html#method-c-correct-3F","(version)","<p>True if the <code>version</code> string matches RubyGems’ requirements.\n",null,1],["correct_for_windows_path","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-correct_for_windows_path","(path)","",null,1],["cos","BigMath","Rails/classes/BigMath.html#method-i-cos","(x, prec)","<p>Computes the cosine of x to the specified number of digits of precision.\n<p>If x is infinite or NaN, returns …\n",null,1],["cos","CMath","Rails/classes/CMath.html#method-c-cos","(z)","<p>returns the cosine of <code>z</code>, where <code>z</code> is given in\nradians\n",null,1],["cos","Math","Rails/classes/Math.html#method-c-cos","(p1)","<p>Computes the cosine of <em>x</em> (expressed in radians). Returns -1..1.\n",null,1],["cos!","CMath","Rails/classes/CMath.html#method-c-cos-21","(z)","",null,1],["cosh","CMath","Rails/classes/CMath.html#method-c-cosh","(z)","<p>returns the hyperbolic cosine of <code>z</code>, where <code>z</code> is\ngiven in radians\n",null,1],["cosh","Math","Rails/classes/Math.html#method-c-cosh","(p1)","<p>Computes the hyperbolic cosine of <em>x</em> (expressed in radians).\n",null,1],["cosh!","CMath","Rails/classes/CMath.html#method-c-cosh-21","(z)","",null,1],["count","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-count","()","<p>Returns the number of error messages.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">add</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-string\">&quot;can't be blank&quot;</span>)\n<span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">count</span> <span class=\"ruby-comment\"># =&gt; 1</span>\n<span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">add</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["count","ActiveRecord::Calculations","Ruby/classes/ActiveRecord/Calculations.html#method-i-count","(column_name = nil, options = {})","<p>Count operates using three different approaches.\n<p>Count all: By not passing any parameters to count, it …\n",null,0],["count","Array","Rails/classes/Array.html#method-i-count","(p1)","<p>Returns the number of elements.  If an argument is given, counts the number\nof elements which equals …\n",null,1],["count","Enumerable","Rails/classes/Enumerable.html#method-i-count","(p1)","<p>Returns the number of items in <em>enum</em>, where #size is called if it\nresponds to it, otherwise the items …\n",null,1],["count","GC","Rails/classes/GC.html#method-c-count","()","<p>The number of times GC occurred.\n<p>It returns the number of times GC occurred since the process started. …\n",null,1],["count","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-count","( node_set )","<p>Returns the size of the given list of nodes.\n",null,1],["count","String","Rails/classes/String.html#method-i-count","(*args)","<p>Each <em>other_str</em> parameter defines a set of characters to count. \nThe intersection of these sets defines …\n",null,1],["count_by_sql","ActiveRecord::Querying","Ruby/classes/ActiveRecord/Querying.html#method-i-count_by_sql","(sql)","<p>Returns the result of an SQL statement that should only include a COUNT(*)\nin the SELECT part. The use …\n",null,0],["count_objects","ObjectSpace","Rails/classes/ObjectSpace.html#method-c-count_objects","(p1 = v1)","<p>Counts objects for each type.\n<p>It returns a hash as: {:TOTAL=&gt;10000, :FREE=&gt;3011, :T_OBJECT=&gt;6, …\n",null,1],["count_observers","ActiveModel::Observing::ClassMethods","Ruby/classes/ActiveModel/Observing/ClassMethods.html#method-i-count_observers","()","<p>Total number of observers.\n",null,0],["count_observers","Observable","Rails/classes/Observable.html#method-i-count_observers","()","<p>Return the number of observers associated with this object.\n",null,1],["covector","Vector","Rails/classes/Vector.html#method-i-covector","()","<p>Creates a single-row matrix from this vector.\n",null,1],["cover?","Range","Rails/classes/Range.html#method-i-cover-3F","(p1)","<p>Returns <code>true</code> if <em>obj</em> is between beg and end, i.e\n<code>beg &lt;= obj &lt;= end</code> (or <em>end</em> exclusive when\n<code>exclude_end</code> …\n",null,1],["coverage_level=","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-coverage_level-3D","(level)","<p>Sets coverage report level.  Accepted values are:\n<p>false or nil &mdash; No report\n<p>0 &mdash; Classes, modules, constants, …\n",null,1],["cp","FileUtils","Rails/classes/FileUtils.html#method-c-cp","(src, dest, options = {})","<p>Options: preserve noop verbose\n<p>Copies a file content <code>src</code> to <code>dest</code>.  If\n<code>dest</code> is a directory, copies <code>src</code> …\n",null,1],["cp","Object","Rails/classes/Object.html#method-i-cp","()","<p>Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY\n\n<pre>ruby -run -e cp -- [OPTION] SOURCE DEST\n\n-p   ...</pre>\n",null,1],["cp_r","FileUtils","Rails/classes/FileUtils.html#method-c-cp_r","(src, dest, options = {})","<p>Options: preserve noop verbose dereference_root remove_destination\n<p>Copies <code>src</code> to <code>dest</code>. If <code>src</code> is a\ndirectory, …\n",null,1],["cram_md5_challenge","Net::SMTP::Response","Rails/classes/Net/SMTP/Response.html#method-i-cram_md5_challenge","()","<p>Creates a CRAM-MD5 challenge. You can view more information on CRAM-MD5 on\nWikipedia: en.wikipedia.org/wiki/CRAM-MD5 …\n",null,1],["crc","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-crc","()","<p>Returns CRC value of the uncompressed data.\n",null,1],["crc32","Zlib","Rails/classes/Zlib.html#method-c-crc32","(*args)","<p>Calculates CRC checksum for <code>string</code>, and returns updated value\nof <code>crc</code>. If <code>string</code> is omitted, it returns …\n",null,1],["crc32_combine","Zlib","Rails/classes/Zlib.html#method-c-crc32_combine","(p1, p2, p3)","<p>Combine two CRC-32 check values in to one.  <code>crc1</code> is the first\nCRC-32 value, <code>crc2</code> is the second CRC-32 …\n",null,1],["crc_table","Zlib","Rails/classes/Zlib.html#method-c-crc_table","()","<p>Returns the table for calculating CRC checksum as an array.\n",null,1],["create","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-create","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","",null,0],["create","ActiveRecord::Persistence::ClassMethods","Ruby/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-create","(attributes = nil, options = {}, &block)","<p>Creates an object (or multiple objects) and saves it to the database, if\nvalidations pass. The resulting …\n",null,0],["create","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-create","(*args, &block)","",null,0],["create","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-create","()","<p>Create (i.e., save to the remote service) the new resource.\n",null,0],["create","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-create","(attributes = {})","<p>Creates a new resource instance and makes a request to the remote service\nthat it be saved, making it …\n",null,0],["create","ActiveSupport::Cache::Entry","Ruby/classes/ActiveSupport/Cache/Entry.html#method-c-create","(raw_value, created_at, options = {})","<p>Create an entry with internal attributes set. This method is intended to be\nused by implementations that …\n",null,0],["create","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-c-create","(name, utc_offset = nil, tzinfo = nil)","",null,0],["create","CommentsController","Ruby/classes/CommentsController.html#method-i-create","()","",null,0],["create","PostsController","Ruby/classes/PostsController.html#method-i-create","()","<p>POST /posts POST /posts.json\n",null,0],["create","DL::CStructBuilder","Rails/classes/DL/CStructBuilder.html#method-c-create","(klass, types, members)","",null,1],["create","Gem::Requirement","Rails/classes/Gem/Requirement.html#method-c-create","(input)","<p>Factory method to create a Gem::Requirement object.  Input may be a\nVersion, a String, or nil.  Intended …\n",null,1],["create","Gem::Version","Rails/classes/Gem/Version.html#method-c-create","(input)","<p>Factory method to create a Version object. Input may be a Version or a\nString. Intended to simplify client …\n",null,1],["create","IRB::SLex","Rails/classes/IRB/SLex.html#method-i-create","(token, preproc = nil, postproc = nil)","",null,1],["create","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-create","(mailbox)","<p>Sends a CREATE command to create a new <code>mailbox</code>.\n<p>A Net::IMAP::NoResponseError is raised if a mailbox with …\n",null,1],["create","OpenSSL::OCSP::Response","Rails/classes/OpenSSL/OCSP/Response.html#method-c-create","(p1, p2)","<p>OCSP::Response\n",null,1],["create","OpenSSL::PKCS12","Rails/classes/OpenSSL/PKCS12.html#method-c-create","(p1, p2, p3, p4, p5 = v5, p6 = v6, p7 = v7, p8 = v8, p9 = v9, p10 = v10)","<p>Parameters\n<p><code>pass</code> - string\n<p><code>name</code> - A string describing the key.\n",null,1],["create","Resolv::DNS::Name","Rails/classes/Resolv/DNS/Name.html#method-c-create","(arg)","<p>Creates a new DNS name from <code>arg</code>.  <code>arg</code> can be:\n<p>Name &mdash; returns <code>arg</code>.\n<p>String &mdash; Creates a new Name.\n",null,1],["create","Resolv::IPv4","Rails/classes/Resolv/IPv4.html#method-c-create","(arg)","",null,1],["create","Resolv::IPv6","Rails/classes/Resolv/IPv6.html#method-c-create","(arg)","<p>Creates a new IPv6 address from <code>arg</code> which may be:\n<p>IPv6 &mdash; returns <code>arg</code>.\n<p>String &mdash; <code>arg</code> must match one of the IPv6::Regex* ...\n",null,1],["create","Win32::Registry","Rails/classes/Win32/Registry.html#method-c-create","(hkey, subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED)","<p>— Registry.create(key, subkey, desired = KEY_ALL_ACCESS, opt =\nREG_OPTION_RESERVED)\n<p>— Registry.create …\n",null,1],["create","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-create","(subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED, &blk)","<p>Same as Win32::Registry.create (self, subkey, desired, opt)\n",null,1],["create!","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-create-21","(*args, &block)","",null,0],["create!","ActiveRecord::Validations::ClassMethods","Ruby/classes/ActiveRecord/Validations/ClassMethods.html#method-i-create-21","(attributes = nil, options = {}, &block)","<p>Creates an object just like Base.create but calls <code>save!</code>\ninstead of <code>save</code> so an exception is raised if …\n",null,0],["create_active_record_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_active_record_files","()","",null,0],["create_app_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_app_files","()","",null,0],["create_app_files","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_app_files","()","",null,0],["create_boot_file","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_boot_file","()","",null,0],["create_carried_function","DL::Importer","Rails/classes/DL/Importer.html#method-i-create_carried_function","(name, ctype, argtype, call_type = nil, n = 0)","",null,1],["create_carrier","DL::CarriedFunction","Rails/classes/DL/CarriedFunction.html#method-i-create_carrier","(data)","",null,1],["create_config_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_config_files","()","",null,0],["create_config_files","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_config_files","()","",null,0],["create_controller_files","Rails::Generators::ControllerGenerator","Ruby/classes/Rails/Generators/ControllerGenerator.html#method-i-create_controller_files","()","",null,0],["create_controller_files","Rails::Generators::ScaffoldControllerGenerator","Ruby/classes/Rails/Generators/ScaffoldControllerGenerator.html#method-i-create_controller_files","()","",null,0],["create_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-create_database","(name, options = {})","<p>Create a new MySQL database with optional <code>:charset</code> and\n<code>:collation</code>. Charset defaults to utf8.\n<p>Example: …\n",null,0],["create_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-create_database","(name, options = {})","<p>Create a new PostgreSQL database. Options include <code>:owner</code>,\n<code>:template</code>, <code>:encoding</code>, <code>:tablespace</code>,\nand <code>:connection_limit</code> …\n",null,0],["create_db_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_db_files","()","",null,0],["create_doc_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_doc_files","()","",null,0],["create_dummy_app","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_dummy_app","(path = nil)","",null,0],["create_ext","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext","(p1, p2, p3 = v3)","<p>Array to X509_EXTENSION Structure:\n<p>“ln”, “value”, bool_critical &mdash; or\n<p>“sn”, … &mdash; ",null,1],["create_ext_from_array","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext_from_array","(ary)","",null,1],["create_ext_from_hash","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext_from_hash","(hash)","",null,1],["create_ext_from_string","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext_from_string","(str)","",null,1],["create_extension","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_extension","(*arg)","",null,1],["create_fixtures","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-c-create_fixtures","(fixtures_directory, table_names, class_names = {})","",null,0],["create_from","REXML::SourceFactory","Rails/classes/REXML/SourceFactory.html#method-c-create_from","(arg)","<p>Generates a Source object @param arg Either a String, or an IO @return a\nSource, or nil if a bad argument …\n",null,1],["create_generator_files","Rails::Generators::GeneratorGenerator","Ruby/classes/Rails/Generators/GeneratorGenerator.html#method-i-create_generator_files","()","",null,0],["create_guid","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-create_guid","()","<p>Creates GUID.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">WIN32OLE</span>.<span class=\"ruby-identifier\">create_guid</span> <span class=\"ruby-comment\"># =&gt; {1CB530F1-F6B1-404D-BCE6-1959BF91F4A8}</span>\n</pre>\n",null,1],["create_header","Object","Rails/classes/Object.html#method-i-create_header","(header = \"extconf.h\")","<p>Generates a header file consisting of the various macro definitions\ngenerated by other methods such as …\n",null,1],["create_helper_files","Rails::Generators::HelperGenerator","Ruby/classes/Rails/Generators/HelperGenerator.html#method-i-create_helper_files","()","",null,0],["create_images_directory","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_images_directory","()","",null,0],["create_javascript_files","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_javascript_files","()","",null,0],["create_lib_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_lib_files","()","",null,0],["create_lib_files","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_lib_files","()","",null,0],["create_listeners","WEBrick::Utils","Rails/classes/WEBrick/Utils.html#method-c-create_listeners","(address, port, logger=nil)","<p>Creates TCP server sockets bound to <code>address</code>:<code>port</code>\nand returns them.\n<p>It will create IPV4 and IPV6 sockets …\n",null,1],["create_log_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_log_files","()","",null,0],["create_mailer_file","Rails::Generators::MailerGenerator","Ruby/classes/Rails/Generators/MailerGenerator.html#method-i-create_mailer_file","()","",null,0],["create_makefile","Object","Rails/classes/Object.html#method-i-create_makefile","(target, srcprefix = nil)","<p>Generates the Makefile for your extension, passing along any options and\npreprocessor constants that …\n",null,1],["create_migration_file","ActiveRecord::Generators::MigrationGenerator","Ruby/classes/ActiveRecord/Generators/MigrationGenerator.html#method-i-create_migration_file","()","",null,0],["create_migration_file","ActiveRecord::Generators::ModelGenerator","Ruby/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-create_migration_file","()","",null,0],["create_migration_file","ActiveRecord::Generators::SessionMigrationGenerator","Ruby/classes/ActiveRecord/Generators/SessionMigrationGenerator.html#method-i-create_migration_file","()","",null,0],["create_model_file","ActiveRecord::Generators::ModelGenerator","Ruby/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-create_model_file","()","",null,0],["create_module_file","ActiveRecord::Generators::ModelGenerator","Ruby/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-create_module_file","()","",null,0],["create_observer_file","ActiveRecord::Generators::ObserverGenerator","Ruby/classes/ActiveRecord/Generators/ObserverGenerator.html#method-i-create_observer_file","()","",null,0],["create_public_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_public_files","()","",null,0],["create_public_stylesheets_files","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_public_stylesheets_files","()","",null,0],["create_reflection","ActiveRecord::Reflection::ClassMethods","Ruby/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-create_reflection","(macro, name, options, active_record)","",null,0],["create_root","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-create_root","()","",null,0],["create_root_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_root_files","()","",null,0],["create_root_files","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_root_files","()","",null,0],["create_root_folder","Erb::Generators::ScaffoldGenerator","Ruby/classes/Erb/Generators/ScaffoldGenerator.html#method-i-create_root_folder","()","",null,0],["create_rule","Rake::Task","Rails/classes/Rake/Task.html#method-c-create_rule","(*args, &block)","<p>Define a rule for synthesizing tasks.\n",null,1],["create_rule","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-create_rule","(*args, &block)","",null,1],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-create_savepoint","()","",null,0],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-create_savepoint","()","",null,0],["create_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-create_savepoint","()","",null,0],["create_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-create_savepoint","()","",null,0],["create_script_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_script_files","()","",null,0],["create_script_files","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_script_files","()","",null,0],["create_self_signed_cert","WEBrick::Utils","Rails/classes/WEBrick/Utils.html#method-c-create_self_signed_cert","(bits, cn, comment)","",null,1],["create_ssl_params","Net::POP3","Rails/classes/Net/POP3.html#method-c-create_ssl_params","(verify_or_params = {}, certs = nil)","<p>Constructs proper parameters from arguments\n",null,1],["create_ssl_params","Net::POP3","Rails/classes/Net/POP3.html#method-c-create_ssl_params","(verify_or_params = {}, certs = nil)","<p>Constructs proper parameters from arguments\n",null,1],["create_ssl_params","Net::POP3","Rails/classes/Net/POP3.html#method-c-create_ssl_params","(verify_or_params = {}, certs = nil)","<p>Constructs proper parameters from arguments\n",null,1],["create_ssl_params","Net::POP3","Rails/classes/Net/POP3.html#method-c-create_ssl_params","(verify_or_params = {}, certs = nil)","<p>Constructs proper parameters from arguments\n",null,1],["create_subnode","IRB::SLex::Node","Rails/classes/IRB/SLex/Node.html#method-i-create_subnode","(chrs, preproc = nil, postproc = nil)","",null,1],["create_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_table","(table_name, options = {})","<p>Creates a new table with the name <code>table_name</code>.\n<code>table_name</code> may either be a String or a Symbol.\n<p>There are …\n",null,0],["create_task_files","Rails::Generators::TaskGenerator","Ruby/classes/Rails/Generators/TaskGenerator.html#method-i-create_task_files","()","",null,0],["create_temp_function","DL::Importer","Rails/classes/DL/Importer.html#method-i-create_temp_function","(name, ctype, argtype, call_type = nil)","",null,1],["create_test_dummy_files","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_test_dummy_files","()","",null,0],["create_test_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_test_files","()","",null,0],["create_test_files","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_test_files","()","",null,0],["create_tmp_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_tmp_files","()","",null,0],["create_value","DL::Importer","Rails/classes/DL/Importer.html#method-i-create_value","(ty, val=nil)","",null,1],["create_vendor_files","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-create_vendor_files","()","",null,0],["create_with","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-create_with","(value)","",null,0],["created?","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-created-3F","()","<p>Returns if key is created ((<strong>newly</strong>)). (see Registry.create)\n– basically you call create then when you …\n",null,1],["creator?","ActiveRecord::DynamicFinderMatch","Ruby/classes/ActiveRecord/DynamicFinderMatch.html#method-i-creator-3F","()","",null,0],["credentials_path","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-credentials_path","()","<p>Location of RubyGems.org credentials\n",null,1],["critical=","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-i-critical-3D","(p1)","",null,1],["critical?","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-i-critical-3F","()","",null,1],["crl=","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-i-crl-3D","(p1)","",null,1],["crls","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-crls","()","",null,1],["crls=","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-crls-3D","(p1)","",null,1],["crmode","Curses","Rails/classes/Curses.html#method-c-crmode","()","<p>Put the terminal into normal mode (out of cbreak mode).\n<p>See Curses.cbreak for more detail.\n",null,1],["cross_reference","RDoc::Markup::ToHtmlCrossref","Rails/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-cross_reference","(name, text = nil)","<p>Creates a link to the reference <code>name</code> if the name exists.  If\n<code>text</code> is given it is used as the link text, …\n",null,1],["crypt","String","Rails/classes/String.html#method-i-crypt","(p1)","<p>Applies a one-way cryptographic hash to <em>str</em> by invoking the\nstandard library function <code>crypt</code>. The argument …\n",null,1],["csrf_meta_tag","ActionView::Helpers::CsrfHelper","Ruby/classes/ActionView/Helpers/CsrfHelper.html#method-i-csrf_meta_tag","()","<p>For backwards compatibility.\n",null,0],["csrf_meta_tags","ActionView::Helpers::CsrfHelper","Ruby/classes/ActionView/Helpers/CsrfHelper.html#method-i-csrf_meta_tags","()","<p>Returns meta tags “csrf-param” and “csrf-token” with the name of the\ncross-site request …\n",null,0],["ctime","Date","Rails/classes/Date.html#method-i-ctime","()","<p>Returns a string in asctime(3) format (but without “n0” at the end).  This\nmethod is equivalent …\n",null,1],["ctime","File","Rails/classes/File.html#method-c-ctime","(p1)","<p>Returns the change time for the named file (the time at which directory\ninformation about the file was …\n",null,1],["ctime","File","Rails/classes/File.html#method-i-ctime","()","<p>Returns the change time for <em>file</em> (that is, the time directory\ninformation about the file was changed, …\n",null,1],["ctime","File::Stat","Rails/classes/File/Stat.html#method-i-ctime","()","<p>Returns the change time for <em>stat</em> (that is, the time directory\ninformation about the file was changed, …\n",null,1],["ctime","Pathname","Rails/classes/Pathname.html#method-i-ctime","()","<p>See <code>File.ctime</code>.  Returns last (directory entry, not file)\nchange time.\n",null,1],["ctime","Time","Rails/classes/Time.html#method-i-ctime","()","<p>Returns a canonical string representation of <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>.<span class=\"ruby-identifier\">asctime</span>   <span class=\"ruby-comment\">#=&gt; &quot;Wed Apr  9 08:56:03 2003&quot;</span>\n</pre>\n",null,1],["ctlmethods","Iconv","Rails/classes/Iconv.html#method-c-ctlmethods","()","<p>Returns available iconvctl() method list.\n",null,1],["ctrl_cmd","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-ctrl_cmd","(p1, p2 = v2)","",null,1],["ctype","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-ctype","()","<p>Get the C function return value type.  See DL for a list of constants\ncorresponding to this method’s …\n",null,1],["ctype=","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-ctype-3D","(p1)","<p>Set the C function return value type to <code>type</code>.\n",null,1],["current","Date","Ruby/classes/Date.html#method-c-current","()","<p>Returns Time.zone.today when <code>Time.zone</code> or\n<code>config.time_zone</code> are set, otherwise just returns Date.today …\n",null,0],["current","DateTime","Ruby/classes/DateTime.html#method-c-current","()","<p>Returns <code>Time.zone.now.to_datetime</code> when <code>Time.zone</code>\nor <code>config.time_zone</code> are set, otherwise returns\n<code>Time.now</code> …\n",null,0],["current","Time","Ruby/classes/Time.html#method-c-current","()","<p>Returns <code>Time.zone.now</code> when <code>Time.zone</code> or\n<code>config.time_zone</code> are set, otherwise just returns\n<code>Time.now</code>.\n",null,0],["current","Fiber","Rails/classes/Fiber.html#method-c-current","()","<p>Returns the current fiber. You need to <code>require 'fiber'</code> before\nusing this method. If you are not running …\n",null,1],["current","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-c-current","()","<p>Active RDoc::RDoc instance\n",null,1],["current","Thread","Rails/classes/Thread.html#method-c-current","()","<p>Returns the currently executing thread.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Thread</span>.<span class=\"ruby-identifier\">current</span>   <span class=\"ruby-comment\">#=&gt; #&lt;Thread:0x401bdf4c run&gt;</span>\n</pre>\n",null,1],["current=","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-c-current-3D","(rdoc)","<p>Sets the active RDoc::RDoc instance\n",null,1],["current_cycle","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-current_cycle","(name = \"default\")","<p>Returns the current cycle string after a cycle has been started. Useful for\ncomplex table highlighting …\n",null,0],["current_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-current_database","()","",null,0],["current_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-current_database","()","<p>Returns the current database name.\n",null,0],["current_group","PrettyPrint","Rails/classes/PrettyPrint.html#method-i-current_group","()","<p>Returns the group most recently added to the stack.\n",null,1],["current_hash","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-current_hash","()","",null,0],["current_hash","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-current_hash","()","",null,0],["current_line","REXML::IOSource","Rails/classes/REXML/IOSource.html#method-i-current_line","()","<p>@return the current line in the source\n",null,1],["current_line","REXML::Source","Rails/classes/REXML/Source.html#method-i-current_line","()","<p>@return the current line in the source\n",null,1],["current_page?","ActionView::Helpers::UrlHelper","Ruby/classes/ActionView/Helpers/UrlHelper.html#method-i-current_page-3F","(options)","<p>True if the current request URI was generated by the given\n<code>options</code>.\n<p>Examples\n<p>Let’s say we’re in the <code>/shop/checkout</code> …\n",null,0],["current_savepoint_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-current_savepoint_name","()","",null,0],["current_schema","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-current_schema","()","<p>Returns the current schema name.\n",null,0],["current_scope","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-current_scope","()","<p>Return the list of scope names currently active in the task manager.\n",null,1],["current_section","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-current_section","()","<p>The current documentation section that new items will be added to.  If\ntemporary_section is available …\n",null,1],["current_server","DRb","Rails/classes/DRb.html#method-c-current_server","()","<p>Get the ‘current’ server.\n<p>In the context of execution taking place within the main thread of a dRuby\nserver …\n",null,1],["curry","Proc","Rails/classes/Proc.html#method-i-curry","(p1 = v1)","<p>Returns a curried proc. If the optional <em>arity</em> argument is given,\nit determines the number of arguments. …\n",null,1],["curs_set","Curses","Rails/classes/Curses.html#method-c-curs_set","(p1)","<p>Sets Cursor Visibility. 0: invisible 1: visible 2: very visible\n",null,1],["curve_name","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-curve_name","()","<p>See the OpenSSL documentation for EC_GROUP_get_curve_name()\n",null,1],["curx","Curses::Window","Rails/classes/Curses/Window.html#method-i-curx","()","<p>A getter for the current column (X coord) of the window\n",null,1],["cury","Curses::Window","Rails/classes/Curses/Window.html#method-i-cury","()","<p>A getter for the current line (Y coord) of the window\n",null,1],["custom","ActionMailer::Collector","Ruby/classes/ActionMailer/Collector.html#method-i-custom","(mime, options={})","",null,0],["custom_dir","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-i-custom_dir","()","",null,0],["custom_dir","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#method-i-custom_dir","()","",null,0],["custom_dir","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#method-i-custom_dir","()","",null,0],["custom_method_collection_url","ActiveResource::CustomMethods::ClassMethods","Ruby/classes/ActiveResource/CustomMethods/ClassMethods.html#method-i-custom_method_collection_url","(method_name, options = {})","",null,0],["cvs_url","RDoc::Generator::Markup","Rails/classes/RDoc/Generator/Markup.html#method-i-cvs_url","(url, full_path)","<p>Build a webcvs URL starting for the given <code>url</code> with\n<code>full_path</code> appended as the destination path.  If\n<code>url</code> …\n",null,1],["cvs_url","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-cvs_url","()","<p>Returns a URL for this source file on some web repository.  Use the -W\ncommand line option to set.\n",null,1],["cwday","Date","Rails/classes/Date.html#method-i-cwday","()","<p>Returns the day of calendar week (1-7, Monday is 1).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">cwday</span>          <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["cweek","Date","Rails/classes/Date.html#method-i-cweek","()","<p>Returns the calendar week number (1-53).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">cweek</span>          <span class=\"ruby-comment\">#=&gt; 5</span>\n</pre>\n",null,1],["cwyear","Date","Rails/classes/Date.html#method-i-cwyear","()","<p>Returns the calendar week based year.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">cwyear</span>         <span class=\"ruby-comment\">#=&gt; 2001</span>\n<span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>).<span class=\"ruby-identifier\">cwyear</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["cycle","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-cycle","(first_value, *values)","<p>Creates a Cycle object whose <em>to_s</em> method cycles through elements\nof an array every time it is called. …\n",null,0],["cycle","Array","Rails/classes/Array.html#method-i-cycle","(p1 = v1)","<p>Calls <em>block</em> for each element repeatedly <em>n</em> times or\nforever if none or <code>nil</code> is given.  If a non-positive …\n",null,1],["cycle","Enumerable","Rails/classes/Enumerable.html#method-i-cycle","(p1 = v1)","<p>Calls <em>block</em> for each element of <em>enum</em> repeatedly\n<em>n</em> times or forever if none or <code>nil</code> is given.  If a\nnon-positive …\n",null,1],["d","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-i-d","()","",null,1],["daemon","Process","Ruby/classes/Process.html#method-c-daemon","(nochdir = nil, noclose = nil)","",null,0],["daemon","Process","Rails/classes/Process.html#method-c-daemon","(p1 = v1, p2 = v2)","<p>Detach the process from controlling terminal and run in the background as\nsystem daemon.  Unless the …\n",null,1],["dangerous_attribute_method?","ActiveRecord::AttributeMethods::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-dangerous_attribute_method-3F","(name)","<p>A method name is ‘dangerous’ if it is already defined by Active Record, but\nnot by any ancestors. (So …\n",null,0],["dangerous_attribute_method?","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-dangerous_attribute_method-3F","(method_name)","",null,0],["dasherize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-dasherize","(underscored_word)","<p>Replaces underscores with dashes in the string.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;puni_puni&quot;</span> <span class=\"ruby-comment\"># =&gt; &quot;puni-puni&quot;</span>\n</pre>\n",null,0],["dasherize","String","Ruby/classes/String.html#method-i-dasherize","()","<p>Replaces underscores with dashes in the string.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;puni_puni&quot;</span> <span class=\"ruby-comment\"># =&gt; &quot;puni-puni&quot;</span>\n</pre>\n",null,0],["data","ActiveRecord::SessionStore::Session","Ruby/classes/ActiveRecord/SessionStore/Session.html#method-i-data","()","<p>Lazy-unmarshal session state.\n",null,0],["data","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-i-data","()","<p>Lazy-unmarshal session state.\n",null,0],["data","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-data","(msgstr = nil)","<p>This method sends a message. If <code>msgstr</code> is given, sends it as a\nmessage. If block is given, yield a message …\n",null,1],["data","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-data","(msgstr = nil)","<p>This method sends a message. If <code>msgstr</code> is given, sends it as a\nmessage. If block is given, yield a message …\n",null,1],["data","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-data","()","",null,1],["data","Resolv::DNS::Resource::TXT","Rails/classes/Resolv/DNS/Resource/TXT.html#method-i-data","()","<p>Returns the first string from <code>strings</code>.\n",null,1],["data","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-data","()","<p>returns the cmsg data as a string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">Socket</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">AncillaryData</span>.<span class=\"ruby-identifier\">new</span>(:<span class=\"ruby-constant\">INET6</span>, :<span class=\"ruby-constant\">IPV6</span>, :<span class=\"ruby-constant\">PKTINFO</span>, <span class=\"ruby-string\">&quot;&quot;</span>).<span class=\"ruby-identifier\">data</span>\n<span class=\"ruby-comment\">#=&gt; &quot;&quot;</span>\n</pre>\n",null,1],["data","Socket::Option","Rails/classes/Socket/Option.html#method-i-data","()","<p>returns the socket option data as a string.\n\n<pre>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).data ...</pre>\n",null,1],["data=","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-data-3D","(p1)","",null,1],["data_column","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-data_column","","<p>The data field defaults to ‘data’.\n",null,0],["data_column_name","ActiveRecord::SessionStore::Session","Ruby/classes/ActiveRecord/SessionStore/Session.html#method-c-data_column_name","","<p>Customizable data column name. Defaults to ‘data’.\n",null,0],["data_column_name","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-data_column_name","","",null,0],["data_column_size_limit","ActiveRecord::SessionStore::Session","Ruby/classes/ActiveRecord/SessionStore/Session.html#method-c-data_column_size_limit","()","",null,0],["data_type","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-data_type","()","<p>Guesses the type of the data which have been inputed into the stream. The\nreturned value is either <code>BINARY</code> …\n",null,1],["database_configuration","Rails::Application::Configuration","Ruby/classes/Rails/Application/Configuration.html#method-i-database_configuration","()","<p>Loads and returns the contents of the #database_configuration_file. The\ncontents of the file are processed …\n",null,0],["database_gemfile_entry","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-database_gemfile_entry","()","",null,0],["database_yml","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-database_yml","()","",null,0],["datadir","Gem","Rails/classes/Gem.html#method-c-datadir","(gem_name)","<p>The path the the data directory specified by the gem name.  If the package\nis not available as a gem, …\n",null,1],["date","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-date","()","<p>The date this gem was created. Lazily defaults to TODAY.\n",null,1],["date","Rake::FtpFile","Rails/classes/Rake/FtpFile.html#method-c-date","()","",null,1],["date=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-date-3D","(date)","<p>The date this gem was created\n<p>Do not set this, it is set automatically when the gem is packaged.\n",null,1],["date=","RSS::Maker::ChannelBase","Rails/classes/RSS/Maker/ChannelBase.html#method-i-date-3D","(_date)","",null,1],["date=","RSS::Maker::ItemsBase::ItemBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-date-3D","(_date)","",null,1],["date=","RSS::Maker::ItemsBase::ItemBase::SourceBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase.html#method-i-date-3D","(_date)","",null,1],["dateTime","XMLRPC::Convert","Rails/classes/XMLRPC/Convert.html#method-c-dateTime","(str)","",null,1],["date_select","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-date_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for year, month, and day) pre-selected\nfor accessing a specified date-based …\n",null,0],["date_select","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-date_select","(method, options = {}, html_options = {})","",null,0],["datetime_format","Logger","Rails/classes/Logger.html#method-i-datetime_format","()","<p>Returns the date format being used.  See #datetime_format=\n",null,1],["datetime_format=","Logger","Rails/classes/Logger.html#method-i-datetime_format-3D","(datetime_format)","<p>Set date-time format.\n<p><code>datetime_format</code> &mdash; A string suitable for passing to <code>strftime</code>.\n\n",null,1],["datetime_select","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-datetime_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for year, month, day, hour, and minute)\npre-selected for accessing …\n",null,0],["datetime_select","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-datetime_select","(method, options = {}, html_options = {})","",null,0],["day","Numeric","Ruby/classes/Numeric.html#method-i-day","()","",null,0],["day","Date","Rails/classes/Date.html#method-i-day","()","<p>Returns the day of the month (1-31).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">mday</span>           <span class=\"ruby-comment\">#=&gt; 3</span>\n</pre>\n",null,1],["day","Time","Rails/classes/Time.html#method-i-day","()","<p>Returns the day of the month (1..n) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:27:03 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">day</span>      <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["day=","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-day-3D","(value)","",null,1],["day_fraction","Date","Rails/classes/Date.html#method-i-day_fraction","()","<p>Returns the fractional part of the day.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">DateTime</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>,<span class=\"ruby-value\">12</span>).<span class=\"ruby-identifier\">day_fraction</span>    <span class=\"ruby-comment\">#=&gt; (1/2)</span>\n</pre>\n",null,1],["days","Numeric","Ruby/classes/Numeric.html#method-i-days","()","",null,0],["days_in_month","Time","Ruby/classes/Time.html#method-c-days_in_month","(month, year = now.year)","<p>Return the number of days in the given month. If no year is specified, it\nwill use the current year. …\n",null,0],["days_to_week_start","Date","Ruby/classes/Date.html#method-i-days_to_week_start","(start_day = :monday)","<p>Returns number of days to start of this week. Week is assumed to start on\n<code>start_day</code>, default is <code>:monday</code> …\n",null,0],["days_to_week_start","Time","Ruby/classes/Time.html#method-i-days_to_week_start","(start_day = :monday)","<p>Returns number of days to start of this week, week starts on start_day\n(default is :monday).\n",null,0],["db","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-db","()","",null,0],["dclone","Array","Rails/classes/Array.html#method-i-dclone","()","<p>provides a unified <code>clone</code> operation, for REXML::XPathParser to\nuse across multiple Object+ types\n",null,1],["dclone","Fixnum","Rails/classes/Fixnum.html#method-i-dclone","()","<p>provides a unified <code>clone</code> operation, for REXML::XPathParser to\nuse across multiple Object types\n",null,1],["dclone","Float","Rails/classes/Float.html#method-i-dclone","()","<p>provides a unified <code>clone</code> operation, for REXML::XPathParser to\nuse across multiple Object types\n",null,1],["dclone","Object","Rails/classes/Object.html#method-i-dclone","()","<p>provides a unified <code>clone</code> operation, for REXML::XPathParser to\nuse across multiple Object types\n",null,1],["dclone","Symbol","Rails/classes/Symbol.html#method-i-dclone","()","<p>provides a unified <code>clone</code> operation, for REXML::XPathParser to\nuse across multiple Object types\n",null,1],["deafen","REXML::Parsers::SAX2Parser","Rails/classes/REXML/Parsers/SAX2Parser.html#method-i-deafen","( listener=nil, &blok )","",null,1],["debug","ActionView::Helpers::DebugHelper","Ruby/classes/ActionView/Helpers/DebugHelper.html#method-i-debug","(object)","<p>Returns a YAML representation of <code>object</code> wrapped with\n&lt;pre&gt; and &lt;/pre&gt;. If the object cannot …\n",null,0],["debug","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-debug","(statement)","<p>Display a debug message on the same location as error messages.\n",null,1],["debug","Logger","Rails/classes/Logger.html#method-i-debug","(progname = nil, &block)","<p>Log a <code>DEBUG</code> message.\n<p>See #info for more information.\n",null,1],["debug","Net::IMAP","Rails/classes/Net/IMAP.html#method-c-debug","()","<p>Returns the debug mode.\n",null,1],["debug","OpenSSL","Rails/classes/OpenSSL.html#method-c-debug","()","",null,1],["debug","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-debug","(msg)","<p>Shortcut for logging a DEBUG message\n",null,1],["debug=","Net::IMAP","Rails/classes/Net/IMAP.html#method-c-debug-3D","(val)","<p>Sets the debug mode.\n",null,1],["debug=","OpenSSL","Rails/classes/OpenSSL.html#method-c-debug-3D","(p1)","<p>Turns on or off CRYPTO_MEM_CHECK. Also shows some debugging message on\nstderr.\n",null,1],["debug=","Shell","Rails/classes/Shell.html#method-c-debug-3D","(val)","",null,1],["debug=","Shell","Rails/classes/Shell.html#method-i-debug-3D","(val)","",null,1],["debug?","IRB::Context","Rails/classes/IRB/Context.html#method-i-debug-3F","()","",null,1],["debug?","Logger","Rails/classes/Logger.html#method-i-debug-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>DEBUG</code> messages.\n",null,1],["debug?","RubyLex","Rails/classes/RubyLex.html#method-c-debug-3F","()","",null,1],["debug?","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-debug-3F","()","<p>Will the logger output DEBUG messages?\n",null,1],["debug_command","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-debug_command","(file, line, id, binding)","",null,1],["debug_eval","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-debug_eval","(str, binding)","",null,1],["debug_funcname","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-debug_funcname","(id)","",null,1],["debug_level=","IRB::Context","Rails/classes/IRB/Context.html#method-i-debug_level-3D","(value)","",null,1],["debug_method_info","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-debug_method_info","(input, binding)","",null,1],["debug_msg","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-debug_msg","(*msg)","<p>Output progress information if debugging is enabled\n",null,1],["debug_output=","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-debug_output-3D","(arg)","<p>WARNING: This method causes serious security holes. Use this method for\nonly debugging.\n<p>Set an output …\n",null,1],["debug_output=","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-debug_output-3D","(arg)","<p>WARNING: This method causes serious security holes. Use this method for\nonly debugging.\n<p>Set an output …\n",null,1],["debug_print_help","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-debug_print_help","()","",null,1],["debug_protected_attribute_removal","ActiveModel::MassAssignmentSecurity::Sanitizer","Ruby/classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#method-i-debug_protected_attribute_removal","(attributes, sanitized_attributes)","",null,0],["debug_silent_eval","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-debug_silent_eval","(str, binding)","",null,1],["debug_thread_info","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-debug_thread_info","(input, binding)","",null,1],["debug_variable_info","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-debug_variable_info","(input, binding)","",null,1],["debugger","Kernel","Ruby/classes/Kernel.html#method-i-debugger","()","<p>Starts a debugging session if ruby-debug has been loaded (call rails server\n–debugger to do load it). …\n",null,0],["decode","ActiveResource::Formats::JsonFormat","Ruby/classes/ActiveResource/Formats/JsonFormat.html#method-i-decode","(json)","",null,0],["decode","ActiveResource::Formats::XmlFormat","Ruby/classes/ActiveResource/Formats/XmlFormat.html#method-i-decode","(xml)","",null,0],["decode","ActiveSupport::JSON","Ruby/classes/ActiveSupport/JSON.html#method-c-decode","(json, options ={})","",null,0],["decode","OpenSSL::ASN1","Rails/classes/OpenSSL/ASN1.html#method-c-decode","(p1)","<p>Decodes a BER- or DER-encoded value and creates an ASN1Data instance.\n<code>der</code> may be a <code>String</code> or any object …\n",null,1],["decode","REXML::Encoding","Rails/classes/REXML/Encoding.html#method-i-decode","(string)","",null,1],["decode","URI::Escape","Rails/classes/URI/Escape.html#method-i-decode","(*arg)","",null,1],["decode","XMLRPC::Base64","Rails/classes/XMLRPC/Base64.html#method-c-decode","(str)","",null,1],["decode64","ActiveSupport::Base64","Ruby/classes/ActiveSupport/Base64.html#method-c-decode64","(value)","",null,0],["decode64","Base64","Ruby/classes/Base64.html#method-c-decode64","(data)","<p>Decodes a base 64 encoded string to its original representation.\n\n<pre>ActiveSupport::Base64.decode64(&quot;T3JpZ2luYWwgdW5lbmNvZGVkIHN0cmluZw==&quot;) ...</pre>\n",null,0],["decode64","Base64","Rails/classes/Base64.html#method-i-decode64","(str)","<p>Returns the Base64-decoded version of <code>str</code>. This method\ncomplies with RFC 2045. Characters outside the …\n",null,1],["decode_all","OpenSSL::ASN1","Rails/classes/OpenSSL/ASN1.html#method-c-decode_all","(p1)","<p>Similar to <code>decode</code> with the difference that <code>decode</code>\nexpects one distinct value represented in <code>der</code>.\n<code>decode_all</code> …\n",null,1],["decode_credentials","ActionController::HttpAuthentication::Basic","Ruby/classes/ActionController/HttpAuthentication/Basic.html#method-i-decode_credentials","(request)","",null,0],["decode_credentials","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-decode_credentials","(header)","",null,0],["decode_credentials_header","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-decode_credentials_header","(request)","",null,0],["decode_utf7","Net::IMAP","Rails/classes/Net/IMAP.html#method-c-decode_utf7","(s)","<p>Decode a string from modified UTF-7 format to UTF-8.\n<p>UTF-7 is a 7-bit encoding of Unicode [UTF7].  IMAP …\n",null,1],["decode_www_form","URI","Rails/classes/URI.html#method-c-decode_www_form","(str, enc=Encoding::UTF_8)","<p>Decode URL-encoded form data from given <code>str</code>.\n<p>This decodes application/x-www-form-urlencoded data and returns …\n",null,1],["decode_www_form_component","URI","Rails/classes/URI.html#method-c-decode_www_form_component","(str, enc=Encoding::UTF_8)","<p>Decode given <code>str</code> of URL-encoded form data.\n<p>This decods + to SP.\n<p>See URI.encode_www_form_component, URI.decode_www_form …\n",null,1],["decoded","XMLRPC::Base64","Rails/classes/XMLRPC/Base64.html#method-i-decoded","()","",null,1],["decompose","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-decompose","()","<p>Performs canonical decomposition on all the characters.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">'é'</span>.<span class=\"ruby-identifier\">length</span>                         <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,0],["decompose_codepoints","ActiveSupport::Multibyte::Unicode","Ruby/classes/ActiveSupport/Multibyte/Unicode.html#method-i-decompose_codepoints","(type, codepoints)","<p>Decompose composed characters to the decomposed form.\n",null,0],["decompress","ActiveSupport::Gzip","Ruby/classes/ActiveSupport/Gzip.html#method-c-decompress","(source)","<p>Decompresses a gzipped string.\n",null,0],["deconstantize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-deconstantize","(path)","<p>Removes the rightmost segment from the constant expression in the string:\n\n<pre>&quot;Net::HTTP&quot;.deconstantize   ...</pre>\n",null,0],["deconstantize","String","Ruby/classes/String.html#method-i-deconstantize","()","<p>Removes the rightmost segment from the constant expression in the string.\n\n<pre>&quot;Net::HTTP&quot;.deconstantize   ...</pre>\n",null,0],["decrement","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-decrement","(attribute, by = 1)","<p>Initializes <code>attribute</code> to zero if <code>nil</code> and\nsubtracts the value passed as <code>by</code> (default is 1). The decrement\n…\n",null,0],["decrement","ActiveSupport::Cache::FileStore","Ruby/classes/ActiveSupport/Cache/FileStore.html#method-i-decrement","(name, amount = 1, options = nil)","",null,0],["decrement","ActiveSupport::Cache::MemoryStore","Ruby/classes/ActiveSupport/Cache/MemoryStore.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Decrement an integer value in the cache.\n",null,0],["decrement","ActiveSupport::Cache::NullStore","Ruby/classes/ActiveSupport/Cache/NullStore.html#method-i-decrement","(name, amount = 1, options = nil)","",null,0],["decrement","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Increment an integer value in the cache.\n<p>Options are passed to the underlying cache implementation.\n<p>All …\n",null,0],["decrement!","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-decrement-21","(attribute, by = 1)","<p>Wrapper around <code>decrement</code> that saves the record. This method\ndiffers from its non-bang version in that …\n",null,0],["decrement_counter","ActiveRecord::CounterCache","Ruby/classes/ActiveRecord/CounterCache.html#method-i-decrement_counter","(counter_name, id)","<p>Decrement a number field by one, usually representing a count.\n<p>This works the same as increment_counter …\n",null,0],["decrement_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-decrement_open_transactions","()","",null,0],["decrypt","ActiveSupport::MessageEncryptor","Ruby/classes/ActiveSupport/MessageEncryptor.html#method-i-decrypt","(value)","",null,0],["decrypt","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-decrypt","(*args)","<p>Initializes the Cipher for decryption.\n<p>Make sure to call Cipher#encrypt or Cipher#decrypt before using …\n",null,1],["decrypt","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-decrypt","(p1, p2, p3 = v3)","",null,1],["decrypt_and_verify","ActiveSupport::MessageEncryptor","Ruby/classes/ActiveSupport/MessageEncryptor.html#method-i-decrypt_and_verify","(value)","<p>Decrypt and verify a message. We need to verify the message in order to\navoid padding attacks. Reference: …\n",null,0],["deep_clone","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-deep_clone","()","<p>Deeply clones this object.  This creates a complete duplicate of this\nParent, including all descendants. …\n",null,1],["deep_dup","Hash","Ruby/classes/Hash.html#method-i-deep_dup","()","<p>Returns a deep copy of hash.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">hash</span> = { :<span class=\"ruby-identifier\">a</span> =<span class=\"ruby-operator\">&gt;</span> { :<span class=\"ruby-identifier\">b</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'b'</span> } }\n<span class=\"ruby-identifier\">dup</span>  = <span class=\"ruby-identifier\">hash</span>.<span class=\"ruby-identifier\">deep_dup</span>\n<span class=\"ruby-identifier\">dup</span>[:<span class=\"ruby-identifier\">a</span>][:<span class=\"ruby-identifier\">c</span>] = <span class=\"ruby-string\">'c'</span>\n\n<span class=\"ruby-identifier\">hash</span>[:<span class=\"ruby-identifier\">a</span>][:<span class=\"ruby-identifier\">c</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["deep_merge","Hash","Ruby/classes/Hash.html#method-i-deep_merge","(other_hash)","<p>Returns a new hash with <code>self</code> and <code>other_hash</code>\nmerged recursively.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h1</span> = {:<span class=\"ruby-identifier\">x</span> =<span class=\"ruby-operator\">&gt;</span> {:<span class=\"ruby-identifier\">y</span> =<span class=\"ruby-operator\">&gt;</span> [<span class=\"ruby-value\">4</span>,<span class=\"ruby-value\">5</span>,<span class=\"ruby-value\">6</span>]}, :<span class=\"ruby-identifier\">z</span> =<span class=\"ruby-operator\">&gt;</span> [<span class=\"ruby-value\">7</span>,<span class=\"ruby-value\">8</span>,<span class=\"ruby-value\">9</span>]} <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["deep_merge!","Hash","Ruby/classes/Hash.html#method-i-deep_merge-21","(other_hash)","<p>Same as <code>deep_merge</code>, but modifies <code>self</code>.\n",null,0],["deep_munge","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-deep_munge","(hash)","<p>Remove nils from the params hash\n",null,0],["def_array_element","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-def_array_element","(name, plural=nil, klass_name=nil)","",null,1],["def_atom_persons","RSS::Maker::AtomPersons","Rails/classes/RSS/Maker/AtomPersons.html#method-i-def_atom_persons","(klass, name, maker_name, plural=nil)","",null,1],["def_atom_text_construct","RSS::Maker::AtomTextConstruct","Rails/classes/RSS/Maker/AtomTextConstruct.html#method-c-def_atom_text_construct","(klass, name, maker_name, klass_name=nil, atom_klass_name=nil)","",null,1],["def_builtin_commands","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-def_builtin_commands","(delegation_class, command_specs)","<p>CommandProcessor.def_builtin_commands(delegation_class, command_specs)\n\n<pre>  delegation_class: Class or Module ...</pre>\n",null,1],["def_class","ERB","Rails/classes/ERB.html#method-i-def_class","(superklass=Object, methodname='result')","<p>Define unnamed class which has <em>methodname</em> as instance method, and\nreturn it.\n<p>example:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">MyClass_</span>\n  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["def_class_accessor","RSS::ITunesModelUtils","Rails/classes/RSS/ITunesModelUtils.html#method-i-def_class_accessor","(klass, name, type, *args)","",null,1],["def_class_accessor","RSS::Maker::ITunesBaseModel","Rails/classes/RSS/Maker/ITunesBaseModel.html#method-i-def_class_accessor","(klass, name, type, *args)","",null,1],["def_classed_element","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-def_classed_element","(name, class_name=nil, attribute_name=nil)","",null,1],["def_classed_element_without_accessor","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-def_classed_element_without_accessor","(name, class_name=nil)","",null,1],["def_classed_elements","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-def_classed_elements","(name, attribute, plural_class_name=nil, plural_name=nil, new_name=nil)","",null,1],["def_convert","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_convert","(depth=0)","",null,1],["def_corresponded_attr_reader","RSS::Element","Rails/classes/RSS/Element.html#method-c-def_corresponded_attr_reader","(name, type=nil)","",null,1],["def_corresponded_attr_writer","RSS::Element","Rails/classes/RSS/Element.html#method-c-def_corresponded_attr_writer","(name, type=nil, disp_name=nil)","",null,1],["def_csv_accessor","RSS::Maker::ITunesBaseModel","Rails/classes/RSS/Maker/ITunesBaseModel.html#method-i-def_csv_accessor","(klass, full_name)","",null,1],["def_csv_element","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-def_csv_element","(name, type=nil)","",null,1],["def_delegator","Forwardable","Rails/classes/Forwardable.html#method-i-def_delegator","(accessor, method, ali = method)","",null,1],["def_delegator","SingleForwardable","Rails/classes/SingleForwardable.html#method-i-def_delegator","(accessor, method, ali = method)","",null,1],["def_delegators","Forwardable","Rails/classes/Forwardable.html#method-i-def_delegators","(accessor, *methods)","",null,1],["def_delegators","SingleForwardable","Rails/classes/SingleForwardable.html#method-i-def_delegators","(accessor, *methods)","",null,1],["def_e2message","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-def_e2message","(c, m)","<p>def_e2message(c, m)\n\n<pre>    c:  exception\n    m:  message_form\ndefine exception c with message m.</pre>\n",null,1],["def_e2message","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-def_e2message","(k, c, m)","<p>E2MM.def_e2message(k, e, m)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">e</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">message_form</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["def_e2message","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-def_e2message","(c, m)","<p>def_e2message(c, m)\n\n<pre>    c:  exception\n    m:  message_form\ndefine exception c with message m.</pre>\n",null,1],["def_e2message","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-def_e2message","(k, c, m)","<p>E2MM.def_e2message(k, e, m)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">e</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">message_form</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["def_element_class_accessor","RSS::ITunesModelUtils","Rails/classes/RSS/ITunesModelUtils.html#method-i-def_element_class_accessor","(klass, name, full_name, klass_name, recommended_attribute_name=nil)","",null,1],["def_elements_class_accessor","RSS::ITunesModelUtils","Rails/classes/RSS/ITunesModelUtils.html#method-i-def_elements_class_accessor","(klass, name, full_name, klass_name, plural_name, recommended_attribute_name=nil)","",null,1],["def_elements_class_accessor","RSS::Maker::ITunesBaseModel","Rails/classes/RSS/Maker/ITunesBaseModel.html#method-i-def_elements_class_accessor","(klass, name, full_name, full_plural_name, klass_name, plural_klass_name, recommended_attribute_name=nil)","",null,1],["def_else_enc","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_else_enc","(to_enc, from_enc)","",null,1],["def_erb_method","ERB::DefMethod","Rails/classes/ERB/DefMethod.html#method-c-def_erb_method","(methodname, erb_or_fname)","<p>define <em>methodname</em> as instance method of current module, using ERB\nobject or eRuby file\n",null,1],["def_exception","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-def_exception","(n, m, s = StandardError)","<p>def_exception(n, m, s)\n\n<pre>    n:  exception_name\n    m:  message_form\n    s:  superclass(default: StandardError) ...</pre>\n",null,1],["def_exception","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-def_exception","(k, n, m, s = StandardError)","<p>E2MM.def_exception(k, n, m, s)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">n</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception_name</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["def_exception","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-def_exception","(k, n, m, s = StandardError)","<p>E2MM.def_exception(k, n, m, s)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">n</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception_name</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["def_exception","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-def_exception","(n, m, s = StandardError)","<p>def_exception(n, m, s)\n\n<pre>    n:  exception_name\n    m:  message_form\n    s:  superclass(default: StandardError) ...</pre>\n",null,1],["def_extend_command","IRB::ContextExtender","Rails/classes/IRB/ContextExtender.html#method-c-def_extend_command","(cmd_name, load_file, *aliases)","",null,1],["def_extend_command","IRB::ContextExtender","Rails/classes/IRB/ContextExtender.html#method-c-def_extend_command","(cmd_name, load_file, *aliases)","",null,1],["def_extend_command","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-c-def_extend_command","(cmd_name, cmd_class, load_file = nil, *aliases)","<p>aliases = [commands_alias, flag], …\n",null,1],["def_extend_command","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-c-def_extend_command","(cmd_name, cmd_class, load_file = nil, *aliases)","<p>aliases = [commands_alias, flag], …\n",null,1],["def_head_option","OptionParser","Rails/classes/OptionParser.html#method-i-def_head_option","(*opts, &block)","",null,1],["def_iconv_convert","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_iconv_convert","(to_enc, from_enc, depth=0)","",null,1],["def_inspector","IRB::INSPECTORS","Rails/classes/IRB/INSPECTORS.html#method-c-def_inspector","(key, arg=nil, &block)","<p>ex) INSPECTORS.def_inspector(key, init_p=nil){|v| v.inspect}\nINSPECTORS.def_inspector(, init_p=nil){|v| …\n",null,1],["def_instance_delegator","Forwardable","Rails/classes/Forwardable.html#method-i-def_instance_delegator","(accessor, method, ali = method)","<p>Define <code>method</code> as delegator instance method with an optional\nalias name <code>ali</code>. Method calls to <code>ali</code> will …\n",null,1],["def_instance_delegators","Forwardable","Rails/classes/Forwardable.html#method-i-def_instance_delegators","(accessor, *methods)","<p>Shortcut for defining multiple delegator methods, but with no provision for\nusing a different name.  …\n",null,1],["def_method","ERB","Rails/classes/ERB.html#method-i-def_method","(mod, methodname, fname='(ERB)')","<p>Define <em>methodname</em> as instance method of <em>mod</em> from compiled\nruby source.\n<p>example:\n\n<pre>filename = 'example.rhtml' ...</pre>\n",null,1],["def_module","ERB","Rails/classes/ERB.html#method-i-def_module","(methodname='erb')","<p>Create unnamed module, define <em>methodname</em> as instance method of it,\nand return it.\n<p>example:\n\n<pre>filename = 'example.rhtml' ...</pre>\n",null,1],["def_notifier","IRB::Notifier","Rails/classes/IRB/Notifier.html#method-c-def_notifier","(prefix = \"\", output_method = StdioOutputMethod.new)","",null,1],["def_notifier","IRB::Notifier::CompositeNotifier","Rails/classes/IRB/Notifier/CompositeNotifier.html#method-i-def_notifier","(level, prefix = \"\")","",null,1],["def_option","OptionParser","Rails/classes/OptionParser.html#method-i-def_option","(*opts, &block)","",null,1],["def_other_element","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-def_other_element","(name)","",null,1],["def_other_element_without_accessor","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-def_other_element_without_accessor","(name)","",null,1],["def_post_proc","IRB::MethodExtender","Rails/classes/IRB/MethodExtender.html#method-i-def_post_proc","(base_method, extend_method)","",null,1],["def_pre_proc","IRB::MethodExtender","Rails/classes/IRB/MethodExtender.html#method-i-def_pre_proc","(base_method, extend_method)","",null,1],["def_prog_mode","Curses","Rails/classes/Curses.html#method-c-def_prog_mode","()","<p>Save the current terminal modes as the “program” state for use by the\nCurses.reset_prog_mode …\n",null,1],["def_rule","IRB::SLex","Rails/classes/IRB/SLex.html#method-i-def_rule","(token, preproc = nil, postproc = nil, &block)","",null,1],["def_rules","IRB::SLex","Rails/classes/IRB/SLex.html#method-i-def_rules","(*tokens, &block)","",null,1],["def_same_enc","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_same_enc","()","",null,1],["def_single_delegator","SingleForwardable","Rails/classes/SingleForwardable.html#method-i-def_single_delegator","(accessor, method, ali = method)","<p>Defines a method <em>method</em> which delegates to <em>obj</em> (i.e. it\ncalls the method of the same name in <em>obj</em>).   …\n",null,1],["def_single_delegators","SingleForwardable","Rails/classes/SingleForwardable.html#method-i-def_single_delegators","(accessor, *methods)","<p>Shortcut for defining multiple delegator methods, but with no provision for\nusing a different name.  …\n",null,1],["def_system_command","Shell","Rails/classes/Shell.html#method-c-def_system_command","(command, path = command)","<p>command definitions\n",null,1],["def_system_command","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-def_system_command","(command, path = command)","<p>CommandProcessor.def_system_command(command, path)\n\n<pre>  command:  String\n  path:     String\ndefine 'command()' ...</pre>\n",null,1],["def_tail_option","OptionParser","Rails/classes/OptionParser.html#method-i-def_tail_option","(*opts, &block)","",null,1],["def_to_euc_jp_from_iso_2022_jp","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_to_euc_jp_from_iso_2022_jp","()","",null,1],["def_to_euc_jp_from_shift_jis","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_to_euc_jp_from_shift_jis","()","",null,1],["def_to_euc_jp_from_utf_8","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_to_euc_jp_from_utf_8","()","",null,1],["def_to_iso_2022_jp_from_euc_jp","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_to_iso_2022_jp_from_euc_jp","()","",null,1],["def_to_iso_8859_1_from_utf_8","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_to_iso_8859_1_from_utf_8","()","",null,1],["def_to_shift_jis_from_euc_jp","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_to_shift_jis_from_euc_jp","()","",null,1],["def_to_shift_jis_from_utf_8","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_to_shift_jis_from_utf_8","()","",null,1],["def_to_utf_8_from_euc_jp","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_to_utf_8_from_euc_jp","()","",null,1],["def_to_utf_8_from_iso_8859_1","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_to_utf_8_from_iso_8859_1","()","",null,1],["def_to_utf_8_from_shift_jis","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_to_utf_8_from_shift_jis","()","",null,1],["def_token","RubyToken","Rails/classes/RubyToken.html#method-c-def_token","(token_n, super_token = Token, reading = nil, *opts)","",null,1],["def_uconv_convert_if_can","RSS::Converter","Rails/classes/RSS/Converter.html#method-i-def_uconv_convert_if_can","(meth, to_enc, from_enc, nkf_arg)","",null,1],["def_yes_clean_other_accessor","RSS::Maker::ITunesBaseModel","Rails/classes/RSS/Maker/ITunesBaseModel.html#method-i-def_yes_clean_other_accessor","(klass, full_name)","",null,1],["def_yes_other_accessor","RSS::Maker::ITunesBaseModel","Rails/classes/RSS/Maker/ITunesBaseModel.html#method-i-def_yes_other_accessor","(klass, full_name)","",null,1],["default","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-c-default","(value = nil)","",null,0],["default","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-default","(key = nil)","",null,0],["default","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-default","(key = nil)","",null,0],["default","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-i-default","()","",null,0],["default","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-c-default","()","",null,0],["default","Gem::Requirement","Rails/classes/Gem/Requirement.html#method-c-default","()","<p>A default “version requirement” can surely <em>only</em> be ‘&gt;= 0’.\n",null,1],["default","Hash","Rails/classes/Hash.html#method-i-default","(p1 = v1)","<p>Returns the default value, the value that would be returned by <em>hsh</em>\nif <em>key</em> did not exist in <em>hsh</em>. See also …\n",null,1],["default","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-c-default","()","<p>Only use this if you do not want the XML declaration to be written; this\nobject is ignored by the XML …\n",null,1],["default","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-i-default","()","<p>Returns default value. If the default value does not exist, this method\nreturns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft ...</pre>\n",null,1],["default=","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-c-default-3D","(rails_env)","",null,0],["default=","Hash","Rails/classes/Hash.html#method-i-default-3D","(p1)","<p>Sets the default value, the value returned for a key that does not exist in\nthe hash. It is not possible …\n",null,1],["default_acl","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-c-default_acl","(acl)","<p>Set the default value for the :acl option.\n<p>See #new().  The initial default value is nil.\n",null,1],["default_action","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-default_action","()","<p>By default, render the <code>:edit</code> action for HTML requests with\nfailure, unless the verb is POST.\n",null,0],["default_aliases_for_option","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-default_aliases_for_option","(name, options)","<p>Return default aliases for the option name given doing a lookup in\nRails::Generators.aliases.\n",null,0],["default_argc_limit","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-c-default_argc_limit","(argc)","<p>Set the default value for the :argc_limit option.\n<p>See #new().  The initial default value is 256.\n",null,1],["default_bindir","Gem","Rails/classes/Gem.html#method-c-default_bindir","()","<p>The default directory for binaries\n",null,1],["default_charset=","ActionController::Compatibility","Ruby/classes/ActionController/Compatibility.html#method-c-default_charset-3D","(new_charset)","",null,0],["default_dir","Gem","Rails/classes/Gem.html#method-c-default_dir","()","<p>Default home directory path to be used if an alternate value is not\nspecified in the environment\n",null,1],["default_event_sources","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-default_event_sources","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the\nWIN32OLE_TYPE object and having …\n",null,1],["default_exec_format","Gem","Rails/classes/Gem.html#method-c-default_exec_format","()","<p>Deduce Ruby’s –program-prefix and –program-suffix from its install name\n",null,1],["default_executable","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-default_executable","()","<p>The default executable for this gem.\n<p>Deprecated: The name of the gem is assumed to be the name of the …\n",null,1],["default_external","Encoding","Rails/classes/Encoding.html#method-c-default_external","()","<p>Returns default external encoding.\n<p>The default external encoding is used by default for strings created …\n",null,1],["default_external=","Encoding","Rails/classes/Encoding.html#method-c-default_external-3D","(p1)","<p>Sets default external encoding.  You should not set\nEncoding::default_external in ruby code as strings …\n",null,1],["default_for_option","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-default_for_option","(config, name, options, default)","<p>Return default for the option name given doing a lookup in config.\n",null,0],["default_generator_root","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-default_generator_root","()","",null,0],["default_id_conv","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-c-default_id_conv","(idconv)","<p>Set the default value for the :id_conv option.\n<p>See #new().  The initial default value is a DRbIdConv instance. …\n",null,1],["default_inspect","Date","Ruby/classes/Date.html#method-i-default_inspect","()","",null,0],["default_inspect","DateTime","Ruby/classes/DateTime.html#method-i-default_inspect","()","",null,0],["default_internal","Encoding","Rails/classes/Encoding.html#method-c-default_internal","()","<p>Returns default internal encoding.  Strings will be transcoded to the\ndefault internal encoding in the …\n",null,1],["default_internal=","Encoding","Rails/classes/Encoding.html#method-c-default_internal-3D","(p1)","<p>Sets default internal encoding or removes default internal encoding when\npassed nil.  You should not …\n",null,1],["default_load_limit","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-c-default_load_limit","(sz)","<p>Set the default value for the :load_limit option.\n<p>See #new().  The initial default value is 25 MB.\n",null,1],["default_middleware_stack","Rails::Application","Ruby/classes/Rails/Application.html#method-i-default_middleware_stack","()","",null,0],["default_middleware_stack","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-default_middleware_stack","()","",null,0],["default_ole_types","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-default_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the\nWIN32OLE_TYPE object and having …\n",null,1],["default_options","Rails::Server","Ruby/classes/Rails/Server.html#method-i-default_options","()","",null,0],["default_options","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-c-default_options","()","<p>Default options for ri\n",null,1],["default_parser","RSS::Parser","Rails/classes/RSS/Parser.html#method-c-default_parser","()","",null,1],["default_parser=","RSS::Parser","Rails/classes/RSS/Parser.html#method-c-default_parser-3D","(new_value)","<p>Set @@default_parser to new_value if it is one of the available parsers.\nElse raise NotValidXMLParser …\n",null,1],["default_path","Gem","Rails/classes/Gem.html#method-c-default_path","()","<p>Default gem load path\n",null,1],["default_pop3_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_pop3_port","()","<p>The default port for POP3 connections, port 110\n",null,1],["default_pop3_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_pop3_port","()","<p>The default port for POP3 connections, port 110\n",null,1],["default_pop3_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_pop3_port","()","<p>The default port for POP3 connections, port 110\n",null,1],["default_pop3_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_pop3_port","()","<p>The default port for POP3 connections, port 110\n",null,1],["default_pop3s_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_pop3s_port","()","<p>The default port for POP3S connections, port 995\n",null,1],["default_pop3s_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_pop3s_port","()","<p>The default port for POP3S connections, port 995\n",null,1],["default_pop3s_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_pop3s_port","()","<p>The default port for POP3S connections, port 995\n",null,1],["default_pop3s_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_pop3s_port","()","<p>The default port for POP3S connections, port 995\n",null,1],["default_port","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-default_port","()","<p>The default port to use for HTTP requests; defaults to 80.\n",null,1],["default_port","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-default_port","()","<p>The default port to use for HTTP requests; defaults to 80.\n",null,1],["default_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_port","()","<p>returns the port for POP3\n",null,1],["default_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_port","()","<p>returns the port for POP3\n",null,1],["default_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_port","()","<p>returns the port for POP3\n",null,1],["default_port","Net::POP3","Rails/classes/Net/POP3.html#method-c-default_port","()","<p>returns the port for POP3\n",null,1],["default_port","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-default_port","()","<p>The default SMTP port number, 25.\n",null,1],["default_port","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-default_port","()","<p>The default SMTP port number, 25.\n",null,1],["default_port","URI::Generic","Rails/classes/URI/Generic.html#method-i-default_port","()","<p>Returns default port\n",null,1],["default_port","URI::Generic","Rails/classes/URI/Generic.html#method-c-default_port","()","<p>Returns default port\n",null,1],["default_primary_key_type","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-default_primary_key_type","()","",null,0],["default_proc","Hash","Rails/classes/Hash.html#method-i-default_proc","()","<p>If <code>Hash::new</code> was invoked with a block, return that block,\notherwise return <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = <span class=\"ruby-constant\">Hash</span>.<span class=\"ruby-identifier\">new</span> {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">h</span>,<span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">h</span>[<span class=\"ruby-identifier\">k</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["default_proc=","Hash","Rails/classes/Hash.html#method-i-default_proc-3D","(p1)","<p>Sets the default proc to be executed on each key lookup.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">default_proc</span> = <span class=\"ruby-identifier\">proc</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">hash</span>, <span class=\"ruby-identifier\">key</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">hash</span>[<span class=\"ruby-identifier\">key</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["default_record_separator","Shell","Rails/classes/Shell.html#method-c-default_record_separator","()","",null,1],["default_record_separator=","Shell","Rails/classes/Shell.html#method-c-default_record_separator-3D","(rs)","",null,1],["default_render","ActionController::ImplicitRender","Ruby/classes/ActionController/ImplicitRender.html#method-i-default_render","(*args)","",null,0],["default_render","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-default_render","()","<p>If a response block was given, use it, otherwise call render on controller.\n",null,0],["default_rubygems_dirs","Gem","Rails/classes/Gem.html#method-c-default_rubygems_dirs","()","<p>Paths where RubyGems’ .rb files and bin files are installed\n",null,1],["default_safe_level","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-c-default_safe_level","(level)","",null,1],["default_scope","ActiveRecord::Scoping::Default::ClassMethods","Ruby/classes/ActiveRecord/Scoping/Default/ClassMethods.html#method-i-default_scope","(scope = {})","<p>Use this macro in your model to set a default scope for all operations on\nthe model.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Article</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["default_sequence_name","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-default_sequence_name","(table, column)","",null,0],["default_source_root","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-default_source_root","()","<p>Returns the default source root for a given generator. This is used\ninternally by rails to set its generators …\n",null,0],["default_sources","Gem","Rails/classes/Gem.html#method-c-default_sources","()","<p>An Array of the default sources that come with RubyGems\n",null,1],["default_src_encoding","Object","Rails/classes/Object.html#method-i-default_src_encoding","()","<p>DO NOT WRITE ANY MAGIC COMMENT HERE.\n",null,1],["default_ssl_context","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-default_ssl_context","()","",null,1],["default_ssl_context","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-default_ssl_context","()","",null,1],["default_ssl_port","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-default_ssl_port","()","",null,1],["default_ssl_port","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-default_ssl_port","()","",null,1],["default_submission_port","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-default_submission_port","()","<p>The default mail submission port number, 587.\n",null,1],["default_submission_port","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-default_submission_port","()","<p>The default mail submission port number, 587.\n",null,1],["default_system_path","Shell","Rails/classes/Shell.html#method-c-default_system_path","()","",null,1],["default_system_path=","Shell","Rails/classes/Shell.html#method-c-default_system_path-3D","(path)","",null,1],["default_system_source_cache_dir","Gem","Rails/classes/Gem.html#method-c-default_system_source_cache_dir","()","<p>The default system-wide source info cache directory\n",null,1],["default_timezone","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-default_timezone","","<p>Determines whether to use Time.local (using :local) or Time.utc (using\n:utc) when pulling dates and times …\n",null,0],["default_title=","RDoc::Options","Rails/classes/RDoc/Options.html#method-i-default_title-3D","(string)","<p>Set the title, but only if not already set. Used to set the title from a\nsource file, so that a title …\n",null,1],["default_tls_port","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-default_tls_port","()","<p>The default SMTPS port number, 465.\n",null,1],["default_tls_port","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-default_tls_port","()","<p>The default SMTPS port number, 465.\n",null,1],["default_url_options","ActionDispatch::Routing::Mapper::Base","Ruby/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-default_url_options","(options)","",null,0],["default_url_options=","ActionDispatch::Routing::Mapper::Base","Ruby/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-default_url_options-3D","(options)","",null,0],["default_user_source_cache_dir","Gem","Rails/classes/Gem.html#method-c-default_user_source_cache_dir","()","<p>The default user-specific source info cache directory\n",null,1],["default_value","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-default_value","(name)","<p>The default value for specification attribute <code>name</code>\n",null,1],["default_value_for_option","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-default_value_for_option","(name, options)","<p>Return the default value for the option name given doing a lookup in\nRails::Generators.options.\n",null,0],["defaults","ActionDispatch::Routing::Mapper::Scoping","Ruby/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-defaults","(defaults = {})","<p>Allows you to set default parameters for a route, such as this:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">defaults</span> :<span class=\"ruby-identifier\">id</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'home'</span> <span class=\"ruby-keyword\">do</span>\n  <span class=\"ruby-identifier\">match</span> <span class=\"ruby-string\">'scoped_pages/(:id)'</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["defaults","RDoc::Task","Rails/classes/RDoc/Task.html#method-i-defaults","()","<p>Sets default task values\n",null,1],["defaults_str","Gem::Command","Rails/classes/Gem/Command.html#method-i-defaults_str","()","<p>Override to display the default values of the command options. (similar to\n<code>arguments</code>, but displays the …\n",null,1],["defaults_str","Gem::Commands::SourcesCommand","Rails/classes/Gem/Commands/SourcesCommand.html#method-i-defaults_str","()","",null,1],["define","ActiveRecord::Schema","Ruby/classes/ActiveRecord/Schema.html#method-c-define","(info={}, &block)","<p>Eval the given block. All methods available to the current connection\nadapter are available within the …\n",null,0],["define","Gem::PackageTask","Rails/classes/Gem/PackageTask.html#method-i-define","()","<p>Create the Rake tasks and actions specified by this Gem::PackageTask.\n(<code>define</code> is automatically called …\n",null,1],["define","OptionParser","Rails/classes/OptionParser.html#method-i-define","(*opts, &block)","",null,1],["define","RDoc::Task","Rails/classes/RDoc/Task.html#method-i-define","()","<p>Create the tasks defined by this task lib.\n",null,1],["define","Rake::PackageTask","Rails/classes/Rake/PackageTask.html#method-i-define","()","<p>Create the tasks defined by this task library.\n",null,1],["define_aliases","Mutex_m","Rails/classes/Mutex_m.html#method-c-define_aliases","(cl)","",null,1],["define_aliases","Sync_m","Rails/classes/Sync_m.html#method-c-define_aliases","(cl)","",null,1],["define_aliases","Sync_m","Rails/classes/Sync_m.html#method-c-define_aliases","(cl)","",null,1],["define_attribute_method","ActiveModel::AttributeMethods::ClassMethods","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-define_attribute_method","(attr_name)","",null,0],["define_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-define_attribute_methods","(attr_names)","<p>Declares the attributes that should be prefixed and suffixed by\nActiveModel::AttributeMethods.\n<p>To use, …\n",null,0],["define_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-define_attribute_methods","()","<p>Generates all the attribute related methods for columns in the database\naccessors, mutators and query …\n",null,0],["define_callbacks","ActiveRecord::Observer","Ruby/classes/ActiveRecord/Observer.html#method-i-define_callbacks","(klass)","",null,0],["define_callbacks","ActiveSupport::Callbacks::ClassMethods","Ruby/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-define_callbacks","(*callbacks)","<p>Define sets of events in the object lifecycle that support callbacks.\n\n<pre>define_callbacks :validate\ndefine_callbacks ...</pre>\n",null,0],["define_finalizer","ObjectSpace","Rails/classes/ObjectSpace.html#method-c-define_finalizer","(p1, p2 = v2)","<p>Adds <em>aProc</em> as a finalizer, to be called after <em>obj</em> was\ndestroyed.\n",null,1],["define_head","OptionParser","Rails/classes/OptionParser.html#method-i-define_head","(*opts, &block)","",null,1],["define_method__attribute","ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/DeprecatedUnderscoreRead/ClassMethods.html#method-i-define_method__attribute","(attr_name)","",null,0],["define_method_attribute","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-define_method_attribute","(attr_name)","",null,0],["define_method_attribute","ActiveRecord::AttributeMethods::Read::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-define_method_attribute","(attr_name)","<p>We want to generate the methods via module_eval rather than define_method,\nbecause define_method is slower …\n",null,0],["define_method_attribute=","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html#method-i-define_method_attribute-3D","(attr_name)","<p>Defined for all <code>datetime</code> and <code>timestamp</code> attributes\nwhen <code>time_zone_aware_attributes</code> are enabled. This enhanced …\n",null,0],["define_method_attribute=","ActiveRecord::AttributeMethods::Write::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/Write/ClassMethods.html#method-i-define_method_attribute-3D","(attr_name)","",null,0],["define_model_callbacks","ActiveModel::Callbacks","Ruby/classes/ActiveModel/Callbacks.html#method-i-define_model_callbacks","(*callbacks)","<p>define_model_callbacks accepts the same options define_callbacks does, in\ncase you want to overwrite …\n",null,0],["define_module_function","Rake::AltSystem","Rails/classes/Rake/AltSystem.html#method-c-define_module_function","(name, &block)","",null,1],["define_singleton_method","Object","Rails/classes/Object.html#method-i-define_singleton_method","(*args)","<p>Defines a singleton method in the receiver. The <em>method</em> parameter\ncan be a <code>Proc</code>, a <code>Method</code> or an\n<code>UnboundMethod</code> …\n",null,1],["define_tail","OptionParser","Rails/classes/OptionParser.html#method-i-define_tail","(*opts, &block)","",null,1],["define_task","Rake::Task","Rails/classes/Rake/Task.html#method-c-define_task","(*args, &block)","<p>Define a task given <code>args</code> and an option block.  If a rule with\nthe given name already exists, the prerequisites …\n",null,1],["define_task","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-define_task","(task_class, *args, &block)","",null,1],["defined_app_const_base","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-defined_app_const_base","()","",null,0],["defined_app_const_base?","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-defined_app_const_base-3F","()","",null,0],["defined_app_name","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-defined_app_name","()","",null,0],["defined_in?","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-defined_in-3F","(file)","<p>Is part of this thing was defined in <code>file</code>?\n",null,1],["definition","RDoc::Attr","Rails/classes/RDoc/Attr.html#method-i-definition","()","<p>Returns attr_reader, attr_writer or attr_accessor as appropriate.\n",null,1],["definition","RDoc::NormalClass","Rails/classes/RDoc/NormalClass.html#method-i-definition","()","<p>The definition of this class, <code>class MyClassName</code>\n",null,1],["definition","RDoc::NormalModule","Rails/classes/RDoc/NormalModule.html#method-i-definition","()","<p>The definition of this module, <code>module MyModuleName</code>\n",null,1],["definition","RDoc::SingleClass","Rails/classes/RDoc/SingleClass.html#method-i-definition","()","<p>The definition of this singleton class, <code>class &lt;&lt;\nMyClassName</code>\n",null,1],["deflate","Gem","Rails/classes/Gem.html#method-c-deflate","(data)","<p>A Zlib::Deflate.deflate wrapper\n",null,1],["deflate","Zlib","Rails/classes/Zlib.html#method-c-deflate","(p1, p2 = v2)","<p>Compresses the given <code>string</code>. Valid values of level are\n<code>NO_COMPRESSION</code>, <code>BEST_SPEED</code>,\n<code>BEST_COMPRESSION</code>, …\n",null,1],["deflate","Zlib::Deflate","Rails/classes/Zlib/Deflate.html#method-i-deflate","(p1, p2 = v2)","<p>Arguments\n<p><code>string</code> &mdash; String\n<p><code>flush</code> &mdash; Integer representing a flush code. Either NO_FLUSH, SYNC_FLUSH, FULL_FLUSH\n…\n",null,1],["deflate","Zlib::Deflate","Rails/classes/Zlib/Deflate.html#method-c-deflate","(p1, p2 = v2)","<p>Compresses the given <code>string</code>. Valid values of level are\n<code>NO_COMPRESSION</code>, <code>BEST_SPEED</code>,\n<code>BEST_COMPRESSION</code>, …\n",null,1],["degree","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-degree","()","<p>See the OpenSSL documentation for EC_GROUP_get_degree()\n",null,1],["delch","Curses","Rails/classes/Curses.html#method-c-delch","()","<p>Delete the character under the cursor\n",null,1],["delch","Curses::Window","Rails/classes/Curses/Window.html#method-i-delch","()","<p>Delete the character under the cursor\n",null,1],["delegate","Module","Ruby/classes/Module.html#method-i-delegate","(*methods)","<p>Provides a delegate class method to easily expose contained objects’\nmethods as your own. Pass one or …\n",null,0],["delegate","Forwardable","Rails/classes/Forwardable.html#method-i-delegate","(hash)","",null,1],["delegate","SingleForwardable","Rails/classes/SingleForwardable.html#method-i-delegate","(hash)","",null,1],["delegate_to_scoped_klass","ActiveRecord::Delegation","Ruby/classes/ActiveRecord/Delegation.html#method-c-delegate_to_scoped_klass","(method)","",null,0],["delegating_block","Delegator","Rails/classes/Delegator.html#method-c-delegating_block","(mid)","",null,1],["delete","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-delete","(key)","",null,0],["delete","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-delete","(target)","",null,0],["delete","ActionDispatch::Routing::Mapper::HttpHelpers","Ruby/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-delete","(*args, &block)","<p>Define a route that only recognizes HTTP PUT. For supported arguments, see\n<code>Base#match</code>.\n<p>Example:\n<p>delete …\n",null,0],["delete","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-delete","(key)","<p>Delete messages for <code>key</code>\n",null,0],["delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-delete","(arel, name = nil, binds = [])","<p>Executes the delete statement and returns the number of rows affected.\n",null,0],["delete","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-delete","(key)","",null,0],["delete","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-delete","(sql_key)","",null,0],["delete","ActiveRecord::ConnectionAdapters::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-delete","(key)","",null,0],["delete","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-delete","()","<p>Deletes the record in the database and freezes this instance to reflect\nthat no changes should be made …\n",null,0],["delete","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-delete","(id_or_array)","<p>Deletes the row with a primary key matching the <code>id</code> argument,\nusing a SQL <code>DELETE</code> statement, and returns …\n",null,0],["delete","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-delete","(id, options = {})","<p>Deletes the resources with the ID in the <code>id</code> parameter.\n<p>Options\n<p>All options specify prefix and query parameters. …\n",null,0],["delete","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-delete","(path, headers = {})","<p>Executes a DELETE request (see HTTP protocol documentation if unfamiliar).\nUsed to delete resources. …\n",null,0],["delete","ActiveResource::CustomMethods","Ruby/classes/ActiveResource/CustomMethods.html#method-c-delete","(custom_method_name, options = {})","",null,0],["delete","ActiveResource::CustomMethods","Ruby/classes/ActiveResource/CustomMethods.html#method-i-delete","(method_name, options = {})","",null,0],["delete","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-delete","(name, options = nil)","<p>Deletes an entry in the cache. Returns <code>true</code> if an entry is\ndeleted.\n<p>Options are passed to the underlying …\n",null,0],["delete","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-delete","(key)","<p>Removes a specified key from the hash.\n",null,0],["delete","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-delete","(key)","<p>Removes a specified key from the hash.\n",null,0],["delete","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-delete","(key)","",null,0],["delete","Array","Rails/classes/Array.html#method-i-delete","(p1)","<p>Deletes items from <code>self</code> that are equal to <em>obj</em>. If any\nitems are found, returns <em>obj</em>.   If the item is …\n",null,1],["delete","CGI::Session","Rails/classes/CGI/Session.html#method-i-delete","()","<p>Delete the session from storage.  Also closes the storage.\n<p>Note that the session’s data is <em>not</em> automatically …\n",null,1],["delete","CGI::Session::FileStore","Rails/classes/CGI/Session/FileStore.html#method-i-delete","()","<p>Close and delete the session’s FileStore file.\n",null,1],["delete","CGI::Session::MemoryStore","Rails/classes/CGI/Session/MemoryStore.html#method-i-delete","()","<p>Delete the session state.\n",null,1],["delete","CGI::Session::NullStore","Rails/classes/CGI/Session/NullStore.html#method-i-delete","()","<p>Delete the session state.\n<p>A no-op.\n",null,1],["delete","CGI::Session::PStore","Rails/classes/CGI/Session/PStore.html#method-i-delete","()","<p>Close and delete the session’s PStore file.\n",null,1],["delete","CSV::Row","Rails/classes/CSV/Row.html#method-i-delete","(header_or_index, minimum_index = 0)","<p>Used to remove a pair from the row by <code>header</code> or\n<code>index</code>.  The pair is located as described in CSV::Row.field() …\n",null,1],["delete","CSV::Table","Rails/classes/CSV/Table.html#method-i-delete","(index_or_header)","<p>Removes and returns the indicated column or row.  In the default mixed mode\nindices refer to rows and …\n",null,1],["delete","DBM","Rails/classes/DBM.html#method-i-delete","(p1)","<p>Deletes an entry from the database.\n",null,1],["delete","Dir","Rails/classes/Dir.html#method-c-delete","(p1)","<p>Deletes the named directory. Raises a subclass of\n<code>SystemCallError</code> if the directory isn’t empty.\n",null,1],["delete","ENV","Rails/classes/ENV.html#method-c-delete","(p1)","<p>Deletes the environment variable with <code>name</code> and returns the\nvalue of the variable.  If a block is given …\n",null,1],["delete","File","Rails/classes/File.html#method-c-delete","(*args)","<p>Deletes the named files, returning the number of names passed as arguments.\nRaises an exception on any …\n",null,1],["delete","GDBM","Rails/classes/GDBM.html#method-i-delete","(p1)","<p>Removes the key-value-pair with the specified <em>key</em> from this\ndatabase and returns the corresponding <em>value</em> …\n",null,1],["delete","Hash","Rails/classes/Hash.html#method-i-delete","(p1)","<p>Deletes and returns a key-value pair from <em>hsh</em> whose key is equal\nto <em>key</em>. If the key is not found, returns …\n",null,1],["delete","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-delete","(key)","",null,1],["delete","Net::FTP","Rails/classes/Net/FTP.html#method-i-delete","(filename)","<p>Deletes a file on the server.\n",null,1],["delete","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-delete","(path, initheader = {'Depth' => 'Infinity'})","<p>Sends a DELETE request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["delete","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-delete","(path, initheader = {'Depth' => 'Infinity'})","<p>Sends a DELETE request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["delete","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-delete","(key)","<p>Removes a header field, specified by case-insensitive key.\n",null,1],["delete","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-delete","(mailbox)","<p>Sends a DELETE command to remove the <code>mailbox</code>.\n<p>A Net::IMAP::NoResponseError is raised if a mailbox with …\n",null,1],["delete","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-delete","()","<p>Marks a message for deletion on the server.  Deletion does not actually\noccur until the end of the session; …\n",null,1],["delete","PStore","Rails/classes/PStore.html#method-i-delete","(name)","<p>Removes an object hierarchy from the data store, by <em>name</em>.\n<p><strong>WARNING</strong>:  This method is only valid in a\nPStore#transaction ...\n",null,1],["delete","Pathname","Rails/classes/Pathname.html#method-i-delete","()","<p>Removes a file or directory, using <code>File.unlink</code> or\n<code>Dir.unlink</code> as necessary.\n",null,1],["delete","PrettyPrint::GroupQueue","Rails/classes/PrettyPrint/GroupQueue.html#method-i-delete","(group)","",null,1],["delete","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-delete","( attribute )","<p>Removes an attribute\n<p>attribute &mdash; either a String, which is the name of the attribute to remove – namespaces\n…\n",null,1],["delete","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-delete","(element)","<p>Deletes a child Element\n<p>element &mdash; Either an Element, which is removed directly; an xpath, where the first …\n",null,1],["delete","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-delete","( object )","",null,1],["delete","Rinda::TupleBag","Rails/classes/Rinda/TupleBag.html#method-i-delete","(tuple)","<p>Removes <code>tuple</code> from the TupleBag.\n",null,1],["delete","Rinda::TupleBag::TupleBin","Rails/classes/Rinda/TupleBag/TupleBin.html#method-i-delete","(tuple)","",null,1],["delete","SDBM","Rails/classes/SDBM.html#method-i-delete","(p1)","",null,1],["delete","Set","Rails/classes/Set.html#method-i-delete","(o)","<p>Deletes the given object from the set and returns self.  Use\n<code>subtract</code> to delete many items at once.\n",null,1],["delete","String","Rails/classes/String.html#method-i-delete","(*args)","<p>Returns a copy of <em>str</em> with all characters in the intersection of\nits arguments deleted. Uses the same …\n",null,1],["delete","Sys","Rails/classes/Sys.html#method-i-delete","(*wildcards)","<p>Remove all files matching <code>wildcard</code>.  If a matching file is a\ndirectory, it must be empty to be removed. …\n",null,1],["delete","Tempfile","Rails/classes/Tempfile.html#method-i-delete","()","",null,1],["delete","WEBrick::HTTPServer::MountTable","Rails/classes/WEBrick/HTTPServer/MountTable.html#method-i-delete","(dir)","",null,1],["delete","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-delete","(name)","",null,1],["delete","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-delete","( key )","<p>Deletes value from database associated with <code>key</code>.\n<p>Returns value or <code>nil</code>.\n",null,1],["delete!","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-delete-21","()","",null,1],["delete!","String","Rails/classes/String.html#method-i-delete-21","(*args)","<p>Performs a <code>delete</code> operation in place, returning <em>str</em>,\nor <code>nil</code> if <em>str</em> was not modified.\n",null,1],["delete?","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-delete-3F","()","<p>Is this a DELETE request? Equivalent to <code>request.request_method_symbol\n== :delete</code>.\n",null,0],["delete?","Set","Rails/classes/Set.html#method-i-delete-3F","(o)","<p>Deletes the given object from the set and returns self.  If the object is\nnot in the set, returns nil. …\n",null,1],["delete_all","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-delete_all","(conditions = nil)","<p>Deletes the records matching <code>conditions</code> without instantiating\nthe records first, and hence not calling …\n",null,0],["delete_all","Net::POP3","Rails/classes/Net/POP3.html#method-i-delete_all","()","<p>Deletes all messages on the server.\n<p>If called with a block, yields each message in turn before deleting …\n",null,1],["delete_all","Net::POP3","Rails/classes/Net/POP3.html#method-i-delete_all","()","<p>Deletes all messages on the server.\n<p>If called with a block, yields each message in turn before deleting …\n",null,1],["delete_all","Net::POP3","Rails/classes/Net/POP3.html#method-c-delete_all","(address, port = nil, account = nil, password = nil, isapop = false, &block)","<p>Starts a POP3 session and deletes all messages on the server. If a block is\ngiven, each POPMail object …\n",null,1],["delete_all","Net::POP3","Rails/classes/Net/POP3.html#method-c-delete_all","(address, port = nil, account = nil, password = nil, isapop = false, &block)","<p>Starts a POP3 session and deletes all messages on the server. If a block is\ngiven, each POPMail object …\n",null,1],["delete_all","Net::POP3","Rails/classes/Net/POP3.html#method-i-delete_all","()","<p>Deletes all messages on the server.\n<p>If called with a block, yields each message in turn before deleting …\n",null,1],["delete_all","Net::POP3","Rails/classes/Net/POP3.html#method-c-delete_all","(address, port = nil, account = nil, password = nil, isapop = false, &block)","<p>Starts a POP3 session and deletes all messages on the server. If a block is\ngiven, each POPMail object …\n",null,1],["delete_all","Net::POP3","Rails/classes/Net/POP3.html#method-c-delete_all","(address, port = nil, account = nil, password = nil, isapop = false, &block)","<p>Starts a POP3 session and deletes all messages on the server. If a block is\ngiven, each POPMail object …\n",null,1],["delete_all","Net::POP3","Rails/classes/Net/POP3.html#method-i-delete_all","()","<p>Deletes all messages on the server.\n<p>If called with a block, yields each message in turn before deleting …\n",null,1],["delete_all","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-delete_all","( name )","<p>Deletes all attributes matching a name.  Namespaces are significant.\n<p>name &mdash; A String; all attributes that …\n",null,1],["delete_all","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-delete_all","( xpath )","<p>Removes multiple elements.  Filters for Element children, regardless of\nXPath matching.\n<p>xpath &mdash; all elements …\n",null,1],["delete_all","Sys","Rails/classes/Sys.html#method-i-delete_all","(*wildcards)","<p>Recursively delete all files and directories matching\n<code>wildcard</code>.\n",null,1],["delete_at","Array","Rails/classes/Array.html#method-i-delete_at","(p1)","<p>Deletes the element at the specified index, returning that element, or\n<code>nil</code> if the index is out of range. …\n",null,1],["delete_at","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-delete_at","( index )","",null,1],["delete_attribute","REXML::Element","Rails/classes/REXML/Element.html#method-i-delete_attribute","(key)","<p>Removes an attribute\n<p>key &mdash; either an Attribute or a String.  In either case, the attribute is found by\nmatching …\n",null,1],["delete_caller","IRB","Rails/classes/IRB.html#method-c-delete_caller","()","",null,1],["delete_cookie","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-delete_cookie","(key, value={})","",null,0],["delete_element","REXML::Element","Rails/classes/REXML/Element.html#method-i-delete_element","(element)","<p>Deletes a child element.\n<p>element &mdash; Must be an <code>Element</code>, <code>String</code>, or\n<code>Integer</code>.  If Element, the element is removed. …\n",null,1],["delete_entry","ActiveSupport::Cache::FileStore","Ruby/classes/ActiveSupport/Cache/FileStore.html#method-i-delete_entry","(key, options)","",null,0],["delete_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Ruby/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-delete_entry","(key, options)","",null,0],["delete_field","OpenStruct","Rails/classes/OpenStruct.html#method-i-delete_field","(name)","<p>Remove the named field from the object. Returns the value that the field\ncontained if it was defined. …\n",null,1],["delete_if","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-delete_if","()","",null,0],["delete_if","Array","Rails/classes/Array.html#method-i-delete_if","()","<p>Deletes every element of <code>self</code> for which <em>block</em>\nevaluates to true. The array is changed instantly every …\n",null,1],["delete_if","CSV::Row","Rails/classes/CSV/Row.html#method-i-delete_if","(&block)","<p>The provided <code>block</code> is passed a header and field for each pair\nin the row and expected to return <code>true</code> …\n",null,1],["delete_if","CSV::Table","Rails/classes/CSV/Table.html#method-i-delete_if","(&block)","<p>Removes any column or row for which the block returns <code>true</code>. \nIn the default mixed mode or row mode, iteration …\n",null,1],["delete_if","DBM","Rails/classes/DBM.html#method-i-delete_if","()","<p>Deletes all entries for which the code block returns true. Returns self.\n",null,1],["delete_if","ENV","Rails/classes/ENV.html#method-c-delete_if","()","<p>Deletes every environment variable for which the block evaluates to\n<code>true</code>.\n<p>If no block is given an enumerator …\n",null,1],["delete_if","GDBM","Rails/classes/GDBM.html#method-i-delete_if","()","<p>Deletes every key-value pair from <em>gdbm</em> for which <em>block</em>\nevaluates to true.\n",null,1],["delete_if","Hash","Rails/classes/Hash.html#method-i-delete_if","()","<p>Deletes every key-value pair from <em>hsh</em> for which <em>block</em>\nevaluates to <code>true</code>.\n<p>If no block is given, an enumerator …\n",null,1],["delete_if","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-delete_if","( &block )","",null,1],["delete_if","SDBM","Rails/classes/SDBM.html#method-i-delete_if","()","",null,1],["delete_if","Set","Rails/classes/Set.html#method-i-delete_if","()","<p>Deletes every element of the set for which block evaluates to true, and\nreturns self.\n",null,1],["delete_if","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-delete_if","()","<p>Calls the given block once for each <code>key</code>, <code>value</code>\npair in the database. Deletes all entries for which the …\n",null,1],["delete_key","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-delete_key","(name, recursive = false)","<p>Delete a subkey named name and all its values.\n<p>If recursive is false, the subkey must not have subkeys. …\n",null,1],["delete_legacy_args","RDoc::RubygemsHook","Rails/classes/RDoc/RubygemsHook.html#method-i-delete_legacy_args","(args)","<p>Removes legacy rdoc arguments from <code>args</code>\n",null,1],["delete_matched","ActiveSupport::Cache::FileStore","Ruby/classes/ActiveSupport/Cache/FileStore.html#method-i-delete_matched","(matcher, options = nil)","",null,0],["delete_matched","ActiveSupport::Cache::MemoryStore","Ruby/classes/ActiveSupport/Cache/MemoryStore.html#method-i-delete_matched","(matcher, options = nil)","",null,0],["delete_matched","ActiveSupport::Cache::NullStore","Ruby/classes/ActiveSupport/Cache/NullStore.html#method-i-delete_matched","(matcher, options = nil)","",null,0],["delete_matched","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-delete_matched","(matcher, options = nil)","<p>Delete all entries with keys matching the pattern.\n<p>Options are passed to the underlying cache implementation. …\n",null,0],["delete_namespace","REXML::Element","Rails/classes/REXML/Element.html#method-i-delete_namespace","(namespace=\"xmlns\")","<p>Removes a namespace from this node.  This only works if the namespace is\nactually declared in this node. …\n",null,1],["delete_observer","Observable","Rails/classes/Observable.html#method-i-delete_observer","(observer)","<p>Remove <code>observer</code> as an observer on this object so that it will\nno longer receive notifications.\n<p><code>observer</code> ... &mdash; ",null,1],["delete_observers","Observable","Rails/classes/Observable.html#method-i-delete_observers","()","<p>Remove all observers associated with this object.\n",null,1],["delete_passwd","WEBrick::HTTPAuth::Htdigest","Rails/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-delete_passwd","(realm, user)","<p>Removes a password from the database for <code>user</code> in\n<code>realm</code>.\n",null,1],["delete_passwd","WEBrick::HTTPAuth::Htpasswd","Rails/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-delete_passwd","(realm, user)","<p>Removes a password from the database for <code>user</code> in\n<code>realm</code>.\n",null,1],["delete_responses_to_replace","ActiveResource::HttpMock","Ruby/classes/ActiveResource/HttpMock.html#method-c-delete_responses_to_replace","(new_responses)","",null,0],["delete_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-delete_sql","(sql, name = nil)","<p>Executes the delete statement and returns the number of rows affected.\n",null,0],["delete_unless_alive","Rinda::TupleBag","Rails/classes/Rinda/TupleBag.html#method-i-delete_unless_alive","()","<p>Delete tuples which dead tuples from the TupleBag, returning the deleted\ntuples.\n",null,1],["delete_value","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-delete_value","(name)","<p>Delete a registry value named name. We can not delete the `default’ value.\n",null,1],["deleted?","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-deleted-3F","()","<p>True if the mail has been deleted.\n",null,1],["deleteln","Curses","Rails/classes/Curses.html#method-c-deleteln","()","<p>Delete the line under the cursor.\n",null,1],["deleteln","Curses::Window","Rails/classes/Curses/Window.html#method-i-deleteln","()","<p>Delete the line under the cursor.\n",null,1],["deliver","ActionMailer::LogSubscriber","Ruby/classes/ActionMailer/LogSubscriber.html#method-i-deliver","(event)","",null,0],["demodulize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-demodulize","(path)","<p>Removes the module part from the expression in the string:\n\n<pre>&quot;ActiveRecord::CoreExtensions::String::Inflections&quot;.demodulize ...</pre>\n",null,0],["demodulize","String","Ruby/classes/String.html#method-i-demodulize","()","<p>Removes the module part from the constant expression in the string.\n\n<pre>&quot;ActiveRecord::CoreExtensions::String::Inflections&quot;.demodulize ...</pre>\n",null,0],["denominator","Complex","Rails/classes/Complex.html#method-i-denominator","()","<p>Returns the denominator (lcm of both denominator - real and imag).\n<p>See numerator.\n",null,1],["denominator","Float","Rails/classes/Float.html#method-i-denominator","()","<p>Returns the denominator (always positive).  The result is machine\ndependent.\n<p>See numerator.\n",null,1],["denominator","Integer","Rails/classes/Integer.html#method-i-denominator","()","<p>Returns 1.\n",null,1],["denominator","Numeric","Rails/classes/Numeric.html#method-i-denominator","()","<p>Returns the denominator (always positive).\n",null,1],["denominator","Rational","Rails/classes/Rational.html#method-i-denominator","()","<p>Returns the denominator (always positive).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">7</span>).<span class=\"ruby-identifier\">denominator</span>             <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">7</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["deny?","ActiveModel::MassAssignmentSecurity::BlackList","Ruby/classes/ActiveModel/MassAssignmentSecurity/BlackList.html#method-i-deny-3F","(key)","",null,0],["deny?","ActiveModel::MassAssignmentSecurity::PermissionSet","Ruby/classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#method-i-deny-3F","(key)","",null,0],["deny?","ActiveModel::MassAssignmentSecurity::WhiteList","Ruby/classes/ActiveModel/MassAssignmentSecurity/WhiteList.html#method-i-deny-3F","(key)","",null,0],["depend_rules","Object","Rails/classes/Object.html#method-i-depend_rules","(depend)","<p>Processes the data contents of the “depend” file. Each line of this file is\nexpected to be …\n",null,1],["dependencies","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-dependencies","()","<p>A list of Gem::Dependency objects this gem depends on.\n<p>Use #add_dependency or #add_development_dependency …\n",null,1],["dependencies_ok?","Gem::Uninstaller","Rails/classes/Gem/Uninstaller.html#method-i-dependencies_ok-3F","(spec)","",null,1],["dependency_order","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-dependency_order","()","<p>Return a list of the gem specifications in the dependency list, sorted in\norder so that no gemspec in …\n",null,1],["dependent_gems","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-dependent_gems","()","<p>Return a list of all gems that have a dependency on this gemspec.  The list\nis structured with entries …\n",null,1],["dependent_specs","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-dependent_specs","()","<p>Returns all specs that matches this spec’s runtime dependencies.\n",null,1],["deprecate","Module","Ruby/classes/Module.html#method-i-deprecate","(*method_names)","<p>Declare that a method has been deprecated.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">deprecate</span> :<span class=\"ruby-identifier\">foo</span>\n<span class=\"ruby-identifier\">deprecate</span> :<span class=\"ruby-identifier\">bar</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'message'</span>\n<span class=\"ruby-identifier\">deprecate</span> :<span class=\"ruby-identifier\">foo</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["deprecate","Gem::Deprecate","Rails/classes/Gem/Deprecate.html#method-c-deprecate","(name, repl, year, month)","<p>Simple deprecation method that deprecates <code>name</code> by wrapping it\nup in a dummy method. It warns on each …\n",null,1],["deprecate","Rake::Application","Rails/classes/Rake/Application.html#method-i-deprecate","(old_usage, new_usage, call_site)","<p>Warn about deprecated usage.\n<p>Example:\n\n<pre>Rake.application.deprecate(&quot;import&quot;, &quot;Rake.import&quot;, caller.first)</pre>\n",null,1],["deprecate_methods","ActiveSupport::Deprecation","Ruby/classes/ActiveSupport/Deprecation.html#method-c-deprecate_methods","(target_module, *method_names)","<p>Declare that a method has been deprecated.\n",null,0],["deprecated_method_warning","ActiveSupport::Deprecation","Ruby/classes/ActiveSupport/Deprecation.html#method-c-deprecated_method_warning","(method_name, message = nil)","",null,0],["deq","PrettyPrint::GroupQueue","Rails/classes/PrettyPrint/GroupQueue.html#method-i-deq","()","",null,1],["deq","Queue","Rails/classes/Queue.html#method-i-deq","(non_block=false)","<p>Alias of pop\n",null,1],["deq","SizedQueue","Rails/classes/SizedQueue.html#method-i-deq","(*args)","<p>Alias of pop\n",null,1],["dequote","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-dequote","(str)","",null,1],["desc","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-desc","(description=nil)","<p>Tries to get the description from a USAGE file one folder above the source\nroot otherwise uses a default …\n",null,0],["descend","Pathname","Rails/classes/Pathname.html#method-i-descend","()","<p>Iterates over and yields a new Pathname object for each element in the\ngiven path in descending order. …\n",null,1],["descendants","ActiveSupport::DescendantsTracker","Ruby/classes/ActiveSupport/DescendantsTracker.html#method-c-descendants","(klass)","",null,0],["descendants","ActiveSupport::DescendantsTracker","Ruby/classes/ActiveSupport/DescendantsTracker.html#method-i-descendants","()","",null,0],["descends_from_active_record?","ActiveRecord::Inheritance::ClassMethods","Ruby/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-descends_from_active_record-3F","()","<p>True if this isn’t a concrete subclass needing a STI type condition.\n",null,0],["description","Gem::Command","Rails/classes/Gem/Command.html#method-i-description","()","<p>Override to display a longer description of what this command does.\n",null,1],["description","RDoc::Generator::Markup","Rails/classes/RDoc/Generator/Markup.html#method-i-description","()","<p>Handy wrapper for marking up this object’s comment\n",null,1],["description=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-description-3D","(str)","<p>A long description of this gem\n",null,1],["destination_encoding","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an Encoding object.\n",null,1],["destination_encoding","Encoding::InvalidByteSequenceError","Rails/classes/Encoding/InvalidByteSequenceError.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an encoding object.\n",null,1],["destination_encoding","Encoding::UndefinedConversionError","Rails/classes/Encoding/UndefinedConversionError.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an encoding object.\n",null,1],["destination_encoding_name","Encoding::InvalidByteSequenceError","Rails/classes/Encoding/InvalidByteSequenceError.html#method-i-destination_encoding_name","()","<p>Returns the destination encoding name as a string.\n",null,1],["destination_encoding_name","Encoding::UndefinedConversionError","Rails/classes/Encoding/UndefinedConversionError.html#method-i-destination_encoding_name","()","<p>Returns the destination encoding name as a string.\n",null,1],["destroy","ActionDispatch::Session::DestroyableSession","Ruby/classes/ActionDispatch/Session/DestroyableSession.html#method-i-destroy","()","",null,0],["destroy","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-destroy","()","<p>Deletes the record in the database and freezes this instance to reflect\nthat no changes should be made …\n",null,0],["destroy","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-destroy","(id)","<p>Destroy an object (or multiple objects) that has the given id, the object\nis instantiated first, therefore …\n",null,0],["destroy","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-i-destroy","()","",null,0],["destroy","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-destroy","()","<p>Deletes the resource from the remote service.\n<p>Examples\n\n<pre>my_id = 3\nmy_person = Person.find(my_id)\nmy_person.destroy ...</pre>\n",null,0],["destroy","CommentsController","Ruby/classes/CommentsController.html#method-i-destroy","()","",null,0],["destroy","PostsController","Ruby/classes/PostsController.html#method-i-destroy","()","<p>DELETE /posts/1 DELETE /posts/1.json\n",null,0],["destroy","Rails::Generators::ActiveModel","Ruby/classes/Rails/Generators/ActiveModel.html#method-i-destroy","()","<p>DELETE destroy\n",null,0],["destroy_all","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-destroy_all","(conditions = nil)","<p>Destroys the records matching <code>conditions</code> by instantiating each\nrecord and calling its <code>destroy</code> method. …\n",null,0],["destroy_session","ActionDispatch::Session::CacheStore","Ruby/classes/ActionDispatch/Session/CacheStore.html#method-i-destroy_session","(env, sid, options)","<p>Remove a session from the cache.\n",null,0],["destroyed?","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-destroyed-3F","()","<p>Returns true if this object has been destroyed, otherwise returns false.\n",null,0],["det","Matrix","Rails/classes/Matrix.html#method-i-det","()","",null,1],["det","Matrix::LUPDecomposition","Rails/classes/Matrix/LUPDecomposition.html#method-i-det","()","<p>Returns the determinant of <code>A</code>, calculated efficiently from the\nfactorization.\n",null,1],["det_e","Matrix","Rails/classes/Matrix.html#method-i-det_e","()","",null,1],["detach","Process","Rails/classes/Process.html#method-c-detach","(p1)","<p>Some operating systems retain the status of terminated child processes\nuntil the parent collects that …\n",null,1],["detached","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-detached","()","",null,1],["detached=","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-detached-3D","(p1)","",null,1],["detached?","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-detached-3F","()","",null,1],["detail_args_for","ActionView::LookupContext::ViewPaths","Ruby/classes/ActionView/LookupContext/ViewPaths.html#method-i-detail_args_for","(options)","<p>Compute details hash and key according to user options (e.g. passed from\n#render).\n",null,0],["details_for_lookup","AbstractController::ViewPaths","Ruby/classes/AbstractController/ViewPaths.html#method-i-details_for_lookup","()","",null,0],["detect","Enumerable","Rails/classes/Enumerable.html#method-i-detect","(p1 = v1)","<p>Passes each entry in <em>enum</em> to <em>block</em>. Returns the first for\nwhich <em>block</em> is not false.  If no object matches, …\n",null,1],["detect_implicit","Psych","Rails/classes/Psych.html#method-c-detect_implicit","(thing)","",null,1],["determinant","Matrix","Rails/classes/Matrix.html#method-i-determinant","()","<p>Returns the determinant of the matrix.\n<p>Beware that using Float values can yield erroneous results because …\n",null,1],["determinant","Matrix::LUPDecomposition","Rails/classes/Matrix/LUPDecomposition.html#method-i-determinant","()","",null,1],["determinant_e","Matrix","Rails/classes/Matrix.html#method-i-determinant_e","()","<p>deprecated; use Matrix#determinant\n",null,1],["determine_install_method","Rails::Commands::Install","Ruby/classes/Rails/Commands/Install.html#method-i-determine_install_method","()","",null,0],["dev","File::Stat","Rails/classes/File/Stat.html#method-i-dev","()","<p>Returns an integer representing the device on which <em>stat</em> resides.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">dev</span>   <span class=\"ruby-comment\">#=&gt; 774</span>\n</pre>\n",null,1],["dev_major","File::Stat","Rails/classes/File/Stat.html#method-i-dev_major","()","<p>Returns the major part of <code>File_Stat#dev</code> or <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/fd1&quot;</span>).<span class=\"ruby-identifier\">dev_major</span>   <span class=\"ruby-comment\">#=&gt; 2</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/tty&quot;</span>).<span class=\"ruby-identifier\">dev_major</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["dev_minor","File::Stat","Rails/classes/File/Stat.html#method-i-dev_minor","()","<p>Returns the minor part of <code>File_Stat#dev</code> or <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/fd1&quot;</span>).<span class=\"ruby-identifier\">dev_minor</span>   <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/tty&quot;</span>).<span class=\"ruby-identifier\">dev_minor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["development_dependencies","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-development_dependencies","()","<p>List of dependencies that are used for development\n",null,1],["dfdxi","Jacobian","Rails/classes/Jacobian.html#method-i-dfdxi","(f,fx,x,i)","<p>Computes the derivative of f at x. fx is the value of f at x.\n",null,1],["dh_compute_key","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-dh_compute_key","(p1)","<p>See the OpenSSL documentation for ECDH_compute_key()\n",null,1],["diagonal","Matrix","Rails/classes/Matrix.html#method-c-diagonal","(*values)","<p>Creates a matrix where the diagonal elements are composed of\n<code>values</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">diagonal</span>(<span class=\"ruby-value\">9</span>, <span class=\"ruby-value\">5</span>, <span class=\"ruby-value\">-3</span>)\n  =<span class=\"ruby-operator\">&gt;</span>  <span class=\"ruby-value\">9</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["diagonal?","Matrix","Rails/classes/Matrix.html#method-i-diagonal-3F","()","<p>Returns <code>true</code> is this is a diagonal matrix. Raises an error if\nmatrix is not square.\n",null,1],["diff","Hash","Ruby/classes/Hash.html#method-i-diff","(h2)","<p>Returns a hash that represents the difference between two hashes.\n<p>Examples:\n\n<pre class=\"ruby\">{<span class=\"ruby-value\">1</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>}.<span class=\"ruby-identifier\">diff</span>(<span class=\"ruby-value\">1</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>)      <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["difference","Set","Rails/classes/Set.html#method-i-difference","(enum)","",null,1],["digest","Digest::Class","Rails/classes/Digest/Class.html#method-c-digest","(*args)","<p>Returns the hash value of a given <em>string</em>.  This is equivalent to\nDigest::Class.new(*parameters).digest(string), …\n",null,1],["digest","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-digest","(p1 = v1)","<p>If none is given, returns the resulting hash value of the digest, keeping\nthe digest’s state.\n<p>If a <em>string</em> …\n",null,1],["digest","OpenSSL::Digest","Rails/classes/OpenSSL/Digest.html#method-c-digest","(name, data)","<p>Return the <code>data</code> hash computed with <code>name</code> Digest.\n<code>name</code> is either the long name or short name of a supported …\n",null,1],["digest","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-digest","(p1)","",null,1],["digest","OpenSSL::HMAC","Rails/classes/OpenSSL/HMAC.html#method-i-digest","()","",null,1],["digest","OpenSSL::HMAC","Rails/classes/OpenSSL/HMAC.html#method-c-digest","(p1, p2, p3)","",null,1],["digest!","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-digest-21","()","<p>Returns the resulting hash value and resets the digest to the initial\nstate.\n",null,1],["digest_length","Digest::HMAC","Rails/classes/Digest/HMAC.html#method-i-digest_length","()","<p>Returns the length in bytes of the hash value of the digest.\n",null,1],["digest_length","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-digest_length","()","<p>Returns the length of the hash value of the digest.\n<p>This method should be overridden by each implementation …\n",null,1],["digest_length","OpenSSL::Digest","Rails/classes/OpenSSL/Digest.html#method-i-digest_length","()","<p>Returns the output size of the digest, i.e. the length in bytes of the\nfinal message digest result.\n<p>Example …\n",null,1],["dir","Build","Ruby/classes/Build.html#method-i-dir","()","",null,0],["dir","Gem","Rails/classes/Gem.html#method-c-dir","()","<p>The path where gems are to be installed.\n",null,1],["dir","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-dir","()","<p>Return the target directory where the gem is to be installed. This\ndirectory is not guaranteed to be …\n",null,1],["dir","Net::FTP","Rails/classes/Net/FTP.html#method-i-dir","(*args)","",null,1],["dir_config","Object","Rails/classes/Object.html#method-i-dir_config","(target, idefault=nil, ldefault=nil)","<p>Sets a <code>target</code> name that the user can then use to configure\nvarious ‘with’ options with on the command …\n",null,1],["direct_descendants","ActiveSupport::DescendantsTracker","Ruby/classes/ActiveSupport/DescendantsTracker.html#method-c-direct_descendants","(klass)","",null,0],["direct_descendants","ActiveSupport::DescendantsTracker","Ruby/classes/ActiveSupport/DescendantsTracker.html#method-i-direct_descendants","()","",null,0],["directory?","File","Rails/classes/File.html#method-c-directory-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. ...\n",null,1],["directory?","File::Stat","Rails/classes/File/Stat.html#method-i-directory-3F","()","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. ...\n",null,1],["directory?","FileTest","Rails/classes/FileTest.html#method-i-directory-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. ...\n",null,1],["directory?","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-directory-3F","()","<p>Is this tar entry a directory?\n",null,1],["directory?","Pathname","Rails/classes/Pathname.html#method-i-directory-3F","()","<p>See <code>FileTest.directory?</code>.\n",null,1],["directory?","Rake::FtpFile","Rails/classes/Rake/FtpFile.html#method-i-directory-3F","()","",null,1],["dirname","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Ruby/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-c-dirname","()","<p>Returns the directory in which the data files are stored\n",null,0],["dirname","File","Rails/classes/File.html#method-c-dirname","(p1)","<p>Returns all components of the filename given in <em>file_name</em> except\nthe last one. The filename must be formed …\n",null,1],["dirname","Pathname","Rails/classes/Pathname.html#method-i-dirname","()","<p>See <code>File.dirname</code>.  Returns all but the last component of the\npath.\n",null,1],["dirs","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-dirs","()","<p>Return the directories that Specification uses to find specs.\n",null,1],["dirs=","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-dirs-3D","(dirs)","<p>Set the directories that Specification uses to find specs. Setting this\nresets the list of known specs. …\n",null,1],["dirties_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","Ruby/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-c-dirties_query_cache","(base, *method_names)","",null,0],["disable","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-disable","(*observers, &block)","<p>Disables one or more observers. This supports multiple forms:\n\n<pre>ORM.observers.disable :user_observer\n  # ...</pre>\n",null,0],["disable","GC","Rails/classes/GC.html#method-c-disable","()","<p>Disables garbage collection, returning <code>true</code> if garbage\ncollection was already disabled.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">GC</span>.<span class=\"ruby-identifier\">disable</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["disable","GC::Profiler","Rails/classes/GC/Profiler.html#method-c-disable","()","<p>Stops the GC profiler.\n",null,1],["disable_cache","ActionView::LookupContext::DetailsCache","Ruby/classes/ActionView/LookupContext/DetailsCache.html#method-i-disable_cache","()","<p>Temporary skip passing the details_key forward.\n",null,0],["disable_close","DL::Handle","Rails/classes/DL/Handle.html#method-i-disable_close","()","<p>Disable a call to dlclose() when this DL::Handle is garbage collected.\n",null,1],["disable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache","Ruby/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-disable_query_cache-21","()","",null,0],["disable_referential_integrity","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-disable_referential_integrity","()","<p>Override to turn off referential integrity while executing\n<code>&amp;block</code>.\n",null,0],["disable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-i-disable_ssl","()","<p>Disable SSL for all new instances.\n",null,1],["disable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-c-disable_ssl","()","<p>Disable SSL for all new instances.\n",null,1],["disable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-i-disable_ssl","()","<p>Disable SSL for all new instances.\n",null,1],["disable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-c-disable_ssl","()","<p>Disable SSL for all new instances.\n",null,1],["disable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-c-disable_ssl","()","<p>Disable SSL for all new instances.\n",null,1],["disable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-i-disable_ssl","()","<p>Disable SSL for all new instances.\n",null,1],["disable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-c-disable_ssl","()","<p>Disable SSL for all new instances.\n",null,1],["disable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-i-disable_ssl","()","<p>Disable SSL for all new instances.\n",null,1],["disable_ssl","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-disable_ssl","()","",null,1],["disable_ssl","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-disable_ssl","()","",null,1],["disable_starttls","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-disable_starttls","()","<p>Disables SMTP/TLS (STARTTLS) for this object.  Must be called before the\nconnection is established to …\n",null,1],["disable_starttls","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-disable_starttls","()","<p>Disables SMTP/TLS (STARTTLS) for this object.  Must be called before the\nconnection is established to …\n",null,1],["disable_tls","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-disable_tls","()","<p>Disables SMTP/TLS for this object.  Must be called before the connection is\nestablished to have any effect. …\n",null,1],["disable_tls","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-disable_tls","()","<p>Disables SMTP/TLS for this object.  Must be called before the connection is\nestablished to have any effect. …\n",null,1],["disabled_for?","ActiveModel::Observer","Ruby/classes/ActiveModel/Observer.html#method-i-disabled_for-3F","(object)","",null,0],["disabled_for?","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-disabled_for-3F","(observer)","<p>Returns true if the given observer is disabled for the model class.\n",null,0],["disabled_observer_stack","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-disabled_observer_stack","()","",null,0],["disabled_observers","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-disabled_observers","()","",null,0],["disasm","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-c-disasm","(p1)","",null,1],["disasm","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-i-disasm","()","",null,1],["disassemble","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-c-disassemble","(p1)","",null,1],["disassemble","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-i-disassemble","()","",null,1],["discard","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-discard","(k = nil)","<p>Marks the entire flash or a single flash entry to be discarded by the end\nof the current action:\n\n<pre>flash.discard ...</pre>\n",null,0],["discard_ilseq=","Iconv","Rails/classes/Iconv.html#method-i-discard_ilseq-3D","(p1)","<p>Sets discard_ilseq flag.\n",null,1],["discard_ilseq?","Iconv","Rails/classes/Iconv.html#method-i-discard_ilseq-3F","()","<p>Returns discard_ilseq flag.\n",null,1],["disconnect","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-disconnect","()","<p>Disconnects from the server.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-disconnect-21","()","<p>Disconnects all connections in the pool, and clears the pool.\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,0],["disconnected?","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-disconnected-3F","()","<p>Returns true if disconnected from the server.\n",null,1],["disconnecting","GServer","Rails/classes/GServer.html#method-i-disconnecting","(clientPort)","<p>Called when a client disconnects, if audition is enabled.\n<p><code>clientPort</code> &mdash; the port of the client that is connecting …\n\n",null,1],["dispatch","ActionController::RackDelegation","Ruby/classes/ActionController/RackDelegation.html#method-i-dispatch","(action, request, response = ActionDispatch::Response.new)","",null,0],["dispid","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-dispid","()","<p>Returns dispatch ID.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\nmethod ...</pre>\n",null,1],["display","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-display","(resource, given_options={})","<p>Display is just a shortcut to render a resource with the current format.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">display</span> <span class=\"ruby-ivar\">@user</span>, :<span class=\"ruby-identifier\">status</span> =<span class=\"ruby-operator\">&gt;</span> :<span class=\"ruby-identifier\">ok</span>\n</pre>\n",null,0],["display","SourceAnnotationExtractor","Ruby/classes/SourceAnnotationExtractor.html#method-i-display","(results, options={})","<p>Prints the mapping from filenames to annotations in <code>results</code>\nordered by filename. The <code>options</code> hash is …\n",null,0],["display","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-display","()","",null,1],["display","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-display","()","",null,1],["display","Object","Rails/classes/Object.html#method-i-display","(p1 = v1)","<p>Prints <em>obj</em> on the given port (default <code>$&gt;</code>).\nEquivalent to:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">display</span>(<span class=\"ruby-identifier\">port</span>=<span class=\"ruby-identifier\">$&gt;</span>)\n  <span class=\"ruby-identifier\">port</span>.<span class=\"ruby-identifier\">write</span> <span class=\"ruby-keyword\">self</span>\n<span class=\"ruby-keyword\">end</span>\n</pre>\n",null,1],["display","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-display","(document)","<p>Converts <code>document</code> to text and writes it to the pager\n",null,1],["display?","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-display-3F","()","<p>Should this CodeObject be shown in documentation?\n",null,1],["display_attributes","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-display_attributes","()","<p>Debug method that prints a string along with its attributes\n",null,1],["display_class","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-display_class","(name)","<p>Outputs formatted RI data for class <code>name</code>.  Groups undocumented\nclasses\n",null,1],["display_error_message","Rake::Application","Rails/classes/Rake/Application.html#method-i-display_error_message","(ex)","<p>Display the error message that caused the exception.\n",null,1],["display_errors","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-display_errors","()","",null,0],["display_expression","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-display_expression","(exp, binding)","",null,1],["display_expressions","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-display_expressions","(binding)","",null,1],["display_frames","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-display_frames","(pos)","",null,1],["display_list","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-display_list","(b, e, file, line)","",null,1],["display_method","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-display_method","(name)","<p>Outputs formatted RI data for method <code>name</code>\n",null,1],["display_name","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-display_name","(name)","<p>Outputs formatted RI data for the class or method <code>name</code>.\n<p>Returns true if <code>name</code> was found, false if it was …\n",null,1],["display_names","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-display_names","(names)","<p>Displays each name in <code>name</code>\n",null,1],["display_prerequisites","Rake::Application","Rails/classes/Rake/Application.html#method-i-display_prerequisites","()","<p>Display the tasks and prerequisites\n",null,1],["display_tasks_and_comments","Rake::Application","Rails/classes/Rake/Application.html#method-i-display_tasks_and_comments","()","<p>Display the tasks and comments.\n",null,1],["distance","RailsGuides::Levenshtein","Ruby/classes/RailsGuides/Levenshtein.html#method-c-distance","(s1, s2)","<p>Based on the pseudocode in en.wikipedia.org/wiki/Levenshtein_distance.\n",null,0],["distance_of_time_in_words","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-distance_of_time_in_words","(from_time, to_time = 0, include_seconds = false, options = {})","<p>Reports the approximate distance in time between two Time, Date or DateTime\nobjects or integers as seconds. …\n",null,0],["distance_of_time_in_words_to_now","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-distance_of_time_in_words_to_now","(from_time, include_seconds = false, options = {})","",null,0],["distinct","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-distinct","(columns, order_by)","<p>SELECT DISTINCT clause for a given set of columns and a given ORDER BY\nclause. Both PostgreSQL and Oracle …\n",null,0],["div","BigDecimal","Rails/classes/BigDecimal.html#method-i-div","(p1, p2 = v2)","",null,1],["div","Bignum","Rails/classes/Bignum.html#method-i-div","(p1)","<p>Performs integer division: returns integer value.\n",null,1],["div","Fixnum","Rails/classes/Fixnum.html#method-i-div","(p1)","<p>Performs integer division: returns integer value.\n",null,1],["div","Numeric","Rails/classes/Numeric.html#method-i-div","(p1)","<p>Uses <code>/</code> to perform division, then converts the result to an\ninteger. <code>numeric</code> does not define the <code>/</code> operator;\n…\n",null,1],["div_for","ActionView::Helpers::RecordTagHelper","Ruby/classes/ActionView/Helpers/RecordTagHelper.html#method-i-div_for","(record, *args, &block)","<p>Produces a wrapper DIV element with id and class parameters that relate to\nthe specified Active Record …\n",null,0],["divide","Set","Rails/classes/Set.html#method-i-divide","(&func)","<p>Divides the set into a set of subsets according to the commonality defined\nby the given block.\n<p>If the …\n",null,1],["divmod","BigDecimal","Rails/classes/BigDecimal.html#method-i-divmod","(p1)","<p>Divides by the specified value, and returns the quotient and modulus as\nBigDecimal numbers. The quotient …\n",null,1],["divmod","Bignum","Rails/classes/Bignum.html#method-i-divmod","(p1)","<p>See <code>Numeric#divmod</code>.\n",null,1],["divmod","Fixnum","Rails/classes/Fixnum.html#method-i-divmod","(p1)","<p>See <code>Numeric#divmod</code>.\n",null,1],["divmod","Float","Rails/classes/Float.html#method-i-divmod","(p1)","<p>See <code>Numeric#divmod</code>.\n",null,1],["divmod","Numeric","Rails/classes/Numeric.html#method-i-divmod","(p1)","<p>Returns an array containing the quotient and modulus obtained by dividing\n<em>num</em> by <em>numeric</em>. If <code>q, r = </code> …\n",null,1],["dlload","DL::Importer","Rails/classes/DL/Importer.html#method-i-dlload","(*libs)","",null,1],["dlopen","DL","Rails/classes/DL.html#method-c-dlopen","(*args)","",null,1],["dlunwrap","DL","Rails/classes/DL.html#method-c-dlunwrap","(p1)","",null,1],["dlwrap","DL","Rails/classes/DL.html#method-c-dlwrap","(p1)","",null,1],["dn","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-dn","()","<p>returns dn.\n",null,1],["dn=","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-dn-3D","(val)","<p>setter for dn <code>val</code>\n",null,1],["do_CONNECT","WEBrick::HTTPProxyServer","Rails/classes/WEBrick/HTTPProxyServer.html#method-i-do_CONNECT","(req, res)","",null,1],["do_GET","WEBrick::HTTPProxyServer","Rails/classes/WEBrick/HTTPProxyServer.html#method-i-do_GET","(req, res)","",null,1],["do_GET","WEBrick::HTTPServlet::AbstractServlet","Rails/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-i-do_GET","(req, res)","<p>Raises a NotFound exception\n",null,1],["do_GET","WEBrick::HTTPServlet::CGIHandler","Rails/classes/WEBrick/HTTPServlet/CGIHandler.html#method-i-do_GET","(req, res)","",null,1],["do_GET","WEBrick::HTTPServlet::DefaultFileHandler","Rails/classes/WEBrick/HTTPServlet/DefaultFileHandler.html#method-i-do_GET","(req, res)","",null,1],["do_GET","WEBrick::HTTPServlet::ERBHandler","Rails/classes/WEBrick/HTTPServlet/ERBHandler.html#method-i-do_GET","(req, res)","<p>Handles GET requests\n",null,1],["do_GET","WEBrick::HTTPServlet::FileHandler","Rails/classes/WEBrick/HTTPServlet/FileHandler.html#method-i-do_GET","(req, res)","",null,1],["do_GET","WEBrick::HTTPServlet::ProcHandler","Rails/classes/WEBrick/HTTPServlet/ProcHandler.html#method-i-do_GET","(request, response)","",null,1],["do_HEAD","WEBrick::HTTPProxyServer","Rails/classes/WEBrick/HTTPProxyServer.html#method-i-do_HEAD","(req, res)","",null,1],["do_HEAD","WEBrick::HTTPServlet::AbstractServlet","Rails/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-i-do_HEAD","(req, res)","<p>Dispatches to do_GET\n",null,1],["do_OPTIONS","WEBrick::HTTPProxyServer","Rails/classes/WEBrick/HTTPProxyServer.html#method-i-do_OPTIONS","(req, res)","",null,1],["do_OPTIONS","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-do_OPTIONS","(req, res)","",null,1],["do_OPTIONS","WEBrick::HTTPServlet::AbstractServlet","Rails/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-i-do_OPTIONS","(req, res)","<p>Returns the allowed HTTP request methods\n",null,1],["do_OPTIONS","WEBrick::HTTPServlet::FileHandler","Rails/classes/WEBrick/HTTPServlet/FileHandler.html#method-i-do_OPTIONS","(req, res)","",null,1],["do_POST","WEBrick::HTTPProxyServer","Rails/classes/WEBrick/HTTPProxyServer.html#method-i-do_POST","(req, res)","",null,1],["do_POST","WEBrick::HTTPServlet::CGIHandler","Rails/classes/WEBrick/HTTPServlet/CGIHandler.html#method-i-do_POST","(req, res)","",null,1],["do_POST","WEBrick::HTTPServlet::ERBHandler","Rails/classes/WEBrick/HTTPServlet/ERBHandler.html#method-i-do_POST","(req, res)","<p>Handles POST requests\n",null,1],["do_POST","WEBrick::HTTPServlet::FileHandler","Rails/classes/WEBrick/HTTPServlet/FileHandler.html#method-i-do_POST","(req, res)","",null,1],["do_POST","WEBrick::HTTPServlet::ProcHandler","Rails/classes/WEBrick/HTTPServlet/ProcHandler.html#method-i-do_POST","(request, response)","",null,1],["do_aliases","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-do_aliases","()","<p>Scans #content for rb_define_alias\n",null,1],["do_attrs","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-do_attrs","()","<p>Scans #content for rb_attr and rb_define_attr\n",null,1],["do_classes","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-do_classes","()","<p>Scans #content for rb_define_module, rb_define_class, boot_defclass,\nrb_define_module_under, rb_define_class_under …\n",null,1],["do_constants","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-do_constants","()","<p>Scans #content for rb_define_variable, rb_define_readonly_variable,\nrb_define_const and rb_define_global_const …\n",null,1],["do_includes","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-do_includes","()","<p>Scans #content for rb_include_module\n",null,1],["do_methods","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-do_methods","()","<p>Scans #content for rb_define_method, rb_define_singleton_method,\nrb_define_module_function, rb_define_private_method …\n",null,1],["do_not_reverse_lookup","BasicSocket","Rails/classes/BasicSocket.html#method-i-do_not_reverse_lookup","()","<p>Gets the do_not_reverse_lookup flag of <em>basicsocket</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">TCPSocket</span>.<span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;www.ruby-lang.org&quot;</span>, <span class=\"ruby-value\">80</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">sock</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["do_not_reverse_lookup","BasicSocket","Rails/classes/BasicSocket.html#method-c-do_not_reverse_lookup","()","<p>Gets the global do_not_reverse_lookup flag.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">BasicSocket</span>.<span class=\"ruby-identifier\">do_not_reverse_lookup</span>  <span class=\"ruby-comment\">#=&gt; false</span>\n</pre>\n",null,1],["do_not_reverse_lookup=","BasicSocket","Rails/classes/BasicSocket.html#method-c-do_not_reverse_lookup-3D","(p1)","<p>Sets the global do_not_reverse_lookup flag.\n<p>The flag is used for initial value of do_not_reverse_lookup …\n",null,1],["do_not_reverse_lookup=","BasicSocket","Rails/classes/BasicSocket.html#method-i-do_not_reverse_lookup-3D","(p1)","<p>Sets the do_not_reverse_lookup flag of <em>basicsocket</em>.\n\n<pre>BasicSocket.do_not_reverse_lookup = false\np TCPSocket.new(&quot;127.0.0.1&quot;, ...</pre>\n",null,1],["do_not_reverse_lookup=","OpenSSL::SSL::SocketForwarder","Rails/classes/OpenSSL/SSL/SocketForwarder.html#method-i-do_not_reverse_lookup-3D","(flag)","",null,1],["do_nothing","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-do_nothing","(markup_item)","<p>Does nothing to <code>markup_item</code> because it doesn’t have any\nuser-built content\n",null,1],["do_reply","Rinda::RingServer","Rails/classes/Rinda/RingServer.html#method-i-do_reply","()","<p>Pulls lookup tuples out of the TupleSpace and sends their DRb object the\naddress of the local TupleSpace …\n",null,1],["do_validate","RSS::BaseParser","Rails/classes/RSS/BaseParser.html#method-i-do_validate","()","",null,1],["do_validate=","RSS::BaseParser","Rails/classes/RSS/BaseParser.html#method-i-do_validate-3D","(new_value)","",null,1],["do_write","Rinda::RingServer","Rails/classes/Rinda/RingServer.html#method-i-do_write","(msg)","<p>Extracts the response URI from <code>msg</code> and adds it to TupleSpace\nwhere it will be picked up by <code>reply_service</code> …\n",null,1],["doc","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-doc","()","",null,0],["doc_dir","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-doc_dir","()","<p>Returns the full path to this spec’s documentation directory.\n",null,1],["doc_stats","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-doc_stats","(collection)","<p>Returns the length and number of undocumented items in\n<code>collection</code>.\n",null,1],["docs_for_menu","RailsGuides::Helpers","Ruby/classes/RailsGuides/Helpers.html#method-i-docs_for_menu","(position)","",null,0],["doctype","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-doctype","()","",null,1],["doctype","REXML::Document","Rails/classes/REXML/Document.html#method-i-doctype","()","<p>@return the DocType child of the document, if one exists, and nil\notherwise.\n",null,1],["doctype","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-doctype","(name, pub_sys, long_name, uri)","<p>Handles a doctype declaration. Any attributes of the doctype which are not\nsupplied will be nil.  #  …\n",null,1],["doctype","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-doctype","(name, pub_sys, long_name, uri)","<p>Handles a doctype declaration. Any attributes of the doctype which are not\nsupplied will be nil.  #  …\n",null,1],["doctype","REXML::Text","Rails/classes/REXML/Text.html#method-i-doctype","()","",null,1],["doctype?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-doctype-3F","()","<p>Content: [ String name, String pub_sys, String long_name, String uri ]\n",null,1],["doctype_end","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-doctype_end","()","<p>Called when the doctype is done\n",null,1],["document","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-document","(options)","<p>Generates documentation or a coverage report depending upon the settings in\n<code>options</code>.\n<p><code>options</code> can be either ...\n",null,1],["document","RDoc::RubygemsHook","Rails/classes/RDoc/RubygemsHook.html#method-i-document","(generator, options, destination)","<p>Generates documentation using the named <code>generator</code> (“darkfish”\nor “ri”) and following …\n",null,1],["document","REXML::Child","Rails/classes/REXML/Child.html#method-i-document","()","<p>Returns &mdash; the document this child belongs to, or nil if this child\n\n<p>belongs to no document\n",null,1],["document","REXML::Element","Rails/classes/REXML/Element.html#method-i-document","()","<p>Evaluates to the document to which this element belongs, or nil if this\nelement doesn’t belong to a document. …\n",null,1],["document","XMLRPC::XMLWriter::Simple","Rails/classes/XMLRPC/XMLWriter/Simple.html#method-i-document","(*params)","",null,1],["document","XMLRPC::XMLWriter::XMLParser","Rails/classes/XMLRPC/XMLWriter/XMLParser.html#method-i-document","(*params)","",null,1],["document_children=","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-document_children-3D","(document_children)","<p>Enables or disables documentation of this CodeObject’s children unless it\nhas been turned off by :enddoc: …\n",null,1],["document_self=","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-document_self-3D","(document_self)","<p>Enables or disables documentation of this CodeObject unless it has been\nturned off by :enddoc:.  If the …\n",null,1],["document_to_str","XMLRPC::XMLWriter::Simple","Rails/classes/XMLRPC/XMLWriter/Simple.html#method-i-document_to_str","(doc)","",null,1],["document_to_str","XMLRPC::XMLWriter::XMLParser","Rails/classes/XMLRPC/XMLWriter/XMLParser.html#method-i-document_to_str","(doc)","",null,1],["documented?","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-documented-3F","()","<p>Does this object have a comment with content or is #received_nodoc true?\n",null,1],["documented?","RDoc::Constant","Rails/classes/RDoc/Constant.html#method-i-documented-3F","()","<p>A constant is documented if it has a comment, or is an alias for a\ndocumented class or module.\n",null,1],["documented?","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-documented-3F","()","<p>A method/attribute is documented if any of the following is true:\n<p>it was marked with :nodoc:;\n<p>it has a …\n",null,1],["documents_by_section","RailsGuides::Helpers","Ruby/classes/RailsGuides/Helpers.html#method-i-documents_by_section","()","",null,0],["documents_flat","RailsGuides::Helpers","Ruby/classes/RailsGuides/Helpers.html#method-i-documents_flat","()","",null,0],["dom_class","ActionController::RecordIdentifier","Ruby/classes/ActionController/RecordIdentifier.html#method-i-dom_class","(record_or_class, prefix = nil)","<p>The DOM class convention is to use the singular form of an object or class.\nExamples:\n\n<pre>dom_class(post) ...</pre>\n",null,0],["dom_id","ActionController::RecordIdentifier","Ruby/classes/ActionController/RecordIdentifier.html#method-i-dom_id","(record, prefix = nil)","<p>The DOM id convention is to use the singular form of an object or class\nwith the id following an underscore. …\n",null,0],["domain","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-domain","(tld_length = @@tld_length)","<p>Returns the domain part of a host, such as “rubyonrails.org” in\n“www.rubyonrails.org”. …\n",null,0],["done","Gem::StreamUI::SilentDownloadReporter","Rails/classes/Gem/StreamUI/SilentDownloadReporter.html#method-i-done","()","",null,1],["done","Gem::StreamUI::SilentProgressReporter","Rails/classes/Gem/StreamUI/SilentProgressReporter.html#method-i-done","()","",null,1],["done","Gem::StreamUI::SimpleProgressReporter","Rails/classes/Gem/StreamUI/SimpleProgressReporter.html#method-i-done","()","<p>Prints out the terminal message.\n",null,1],["done","Gem::StreamUI::VerboseDownloadReporter","Rails/classes/Gem/StreamUI/VerboseDownloadReporter.html#method-i-done","()","",null,1],["done","Gem::StreamUI::VerboseProgressReporter","Rails/classes/Gem/StreamUI/VerboseProgressReporter.html#method-i-done","()","<p>Prints out the terminal message.\n",null,1],["done?","REXML::Validation::Event","Rails/classes/REXML/Validation/Event.html#method-i-done-3F","()","",null,1],["done_adding","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-done_adding","()","<p>Call this to mark the end of parsing for display purposes\n",null,1],["done_adding","RDoc::Stats::Quiet","Rails/classes/RDoc/Stats/Quiet.html#method-i-done_adding","(*)","<p>Prints when RDoc is done\n",null,1],["done_documenting=","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-done_documenting-3D","(value)","<p>Turns documentation on/off, and turns on/off #document_self and\n#document_children.\n<p>Once documentation …\n",null,1],["double","XMLRPC::Convert","Rails/classes/XMLRPC/Convert.html#method-c-double","(str)","",null,1],["double_fig","BigDecimal","Rails/classes/BigDecimal.html#method-c-double_fig","()","<p>The BigDecimal.double_fig class method returns the number of digits a Float\nnumber is allowed to have. …\n",null,1],["doupdate","Curses","Rails/classes/Curses.html#method-c-doupdate","()","<p>Refreshes the windows and lines.\n<p>Curses.doupdate allows multiple updates with more efficiency than\nCurses.refresh …\n",null,1],["down","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-down","()","",null,0],["downcase","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-downcase","()","<p>Convert characters in the string to lowercase.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">'VĚDA A VÝZKUM'</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">downcase</span>.<span class=\"ruby-identifier\">to_s</span> <span class=\"ruby-comment\"># =&gt; &quot;věda ...</span>\n</pre>\n",null,0],["downcase","String","Rails/classes/String.html#method-i-downcase","()","<p>Returns a copy of <em>str</em> with all uppercase letters replaced with\ntheir lowercase counterparts. The operation …\n",null,1],["downcase","Symbol","Rails/classes/Symbol.html#method-i-downcase","()","<p>Same as <code>sym.to_s.downcase.intern</code>.\n",null,1],["downcase!","String","Rails/classes/String.html#method-i-downcase-21","()","<p>Downcases the contents of <em>str</em>, returning <code>nil</code> if no\nchanges were made. Note: case replacement is effective …\n",null,1],["download","RecursiveHTTPFetcher","Ruby/classes/RecursiveHTTPFetcher.html#method-i-download","(link)","",null,0],["download","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-download","(spec, source_uri, install_dir = Gem.dir)","<p>Moves the gem <code>spec</code> from <code>source_uri</code> to the cache\ndir unless it is already there.  If the source_uri is …\n",null,1],["download_reporter","Gem::SilentUI","Rails/classes/Gem/SilentUI.html#method-i-download_reporter","(*args)","",null,1],["download_reporter","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-download_reporter","(*args)","<p>Return a download reporter object chosen from the current verbosity\n",null,1],["download_to_cache","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-download_to_cache","(dependency)","<p>Given a name and requirement, downloads this gem into cache and returns the\nfilename. Returns nil if …\n",null,1],["downto","Date","Rails/classes/Date.html#method-i-downto","(p1)","<p>This method is equivalent to step(min, -1){|date| …}.\n",null,1],["downto","Integer","Rails/classes/Integer.html#method-i-downto","(p1)","<p>Iterates <em>block</em>, passing decreasing values from <em>int</em> down\nto and including <em>limit</em>.\n<p>If no block is given, …\n",null,1],["dowrite","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-i-dowrite","()","",null,1],["drop","Array","Rails/classes/Array.html#method-i-drop","(p1)","<p>Drops first n elements from <code>ary</code> and returns the rest of the\nelements in an array.\n\n<pre>a = [1, 2, 3, 4, 5, ...</pre>\n",null,1],["drop","Enumerable","Rails/classes/Enumerable.html#method-i-drop","(p1)","<p>Drops first n elements from <em>enum</em>, and returns rest elements in an\narray.\n\n<pre>a = [1, 2, 3, 4, 5, 0]\na.drop(3) ...</pre>\n",null,1],["drop_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-drop_table","(table_name, options = {})","<p>Drops a table from the database.\n",null,0],["drop_while","Array","Rails/classes/Array.html#method-i-drop_while","()","<p>Drops elements up to, but not including, the first element for which the\nblock returns <code>nil</code> or <code>false</code> and …\n",null,1],["drop_while","Enumerable","Rails/classes/Enumerable.html#method-i-drop_while","()","<p>Drops elements up to, but not including, the first element for which the\nblock returns <code>nil</code> or <code>false</code> and …\n",null,1],["dsa_sign_asn1","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-dsa_sign_asn1","(p1)","<p>See the OpenSSL documentation for ECDSA_sign()\n",null,1],["dsa_verify_asn1","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-dsa_verify_asn1","(p1, p2)","<p>See the OpenSSL documentation for ECDSA_verify()\n",null,1],["dst?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-dst-3F","()","",null,0],["dst?","Time","Rails/classes/Time.html#method-i-dst-3F","()","<p>Returns <code>true</code> if <em>time</em> occurs during Daylight Saving\nTime in its time zone.\n\n<pre># CST6CDT:\n  Time.local(2000, ...</pre>\n",null,1],["dummy?","Encoding","Rails/classes/Encoding.html#method-i-dummy-3F","()","<p>Returns true for dummy encodings. A dummy encoding is an encoding for which\ncharacter handling is not …\n",null,1],["dummy_makefile","Object","Rails/classes/Object.html#method-i-dummy_makefile","(srcdir)","<p>creates a stub Makefile.\n",null,1],["dummy_path","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-dummy_path","(path = nil)","",null,0],["dump","CSV","Rails/classes/CSV.html#method-c-dump","(ary_of_objs, io = \"\", options = Hash.new)","<p>This method allows you to serialize an Array of Ruby objects to a String or\nFile of CSV data.  This is …\n",null,1],["dump","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-dump","()","",null,1],["dump","JSON","Rails/classes/JSON.html#method-i-dump","(obj, anIO = nil, limit = nil)","<p>Dumps <em>obj</em> as a JSON string, i.e. calls generate on the object and\nreturns the result.\n<p>If anIO (an IO-like …\n",null,1],["dump","Marshal","Rails/classes/Marshal.html#method-c-dump","(p1, p2 = v2, p3 = v3)","<p>Serializes obj and all descendant objects. If anIO is specified, the\nserialized data will be written …\n",null,1],["dump","Psych","Rails/classes/Psych.html#method-c-dump","(o, io = nil, options = {})","<p>Dump Ruby object <code>o</code> to a YAML string.  Optional\n<code>options</code> may be passed in to control the output format. …\n",null,1],["dump","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-c-dump","(data_path)","<p>Dump <code>data_path</code> using pp\n",null,1],["dump","REXML::Validation::Validator","Rails/classes/REXML/Validation/Validator.html#method-i-dump","()","",null,1],["dump","String","Rails/classes/String.html#method-i-dump","()","<p>Produces a version of <em>str</em> with all nonprinting characters replaced\nby <code>\\nnn</code> notation and all special characters …\n",null,1],["dump","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-c-dump","( param )","",null,1],["dump_call","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-i-dump_call","( methodName, *params )","",null,1],["dump_call","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-c-dump_call","( methodName, *params )","",null,1],["dump_response","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-i-dump_response","( param )","",null,1],["dump_response","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-c-dump_response","( param )","",null,1],["dump_stream","Psych","Rails/classes/Psych.html#method-c-dump_stream","(*objects)","<p>Dump a list of objects as separate documents to a document stream.\n<p>Example:\n\n<pre>Psych.dump_stream(&quot;foo\\n  &quot;, ...</pre>\n",null,1],["dup","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-dup","()","<p>Duplicates the current resource without saving it.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">my_invoice</span> = <span class=\"ruby-constant\">Invoice</span>.<span class=\"ruby-identifier\">create</span>(:<span class=\"ruby-identifier\">customer</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'That ...\n</span></pre>\n",null,0],["dup","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-dup","()","<p>Returns an exact copy of the hash.\n",null,0],["dup","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-dup","()","<p>Returns an exact copy of the hash.\n",null,0],["dup","Object","Rails/classes/Object.html#method-i-dup","()","<p>Produces a shallow copy of <em>obj</em>—the instance variables of\n<em>obj</em> are copied, but not the objects they reference. …\n",null,1],["dup","Rake::Cloneable","Rails/classes/Rake/Cloneable.html#method-i-dup","()","<p>Clone an object by making a new object and setting all the instance\nvariables to the same values.\n",null,1],["dup","Singleton","Rails/classes/Singleton.html#method-i-dup","()","<p>Raises a TypeError to prevent duping.\n",null,1],["duplicable?","BigDecimal","Ruby/classes/BigDecimal.html#method-i-duplicable-3F","()","",null,0],["duplicable?","Class","Ruby/classes/Class.html#method-i-duplicable-3F","()","<p>Classes are not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">c</span> = <span class=\"ruby-constant\">Class</span>.<span class=\"ruby-identifier\">new</span> <span class=\"ruby-comment\"># =&gt; #&lt;Class:0x10328fd80&gt;</span>\n<span class=\"ruby-identifier\">c</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; #&lt;Class:0x10328fd80&gt;</span>\n</pre>\n",null,0],["duplicable?","FalseClass","Ruby/classes/FalseClass.html#method-i-duplicable-3F","()","<p><code>false</code> is not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">false</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-keyword\">false</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can't dup FalseClass</span>\n</pre>\n",null,0],["duplicable?","Module","Ruby/classes/Module.html#method-i-duplicable-3F","()","<p>Modules are not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">m</span> = <span class=\"ruby-constant\">Module</span>.<span class=\"ruby-identifier\">new</span> <span class=\"ruby-comment\"># =&gt; #&lt;Module:0x10328b6e0&gt;</span>\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">dup</span>          <span class=\"ruby-comment\"># =&gt; #&lt;Module:0x10328b6e0&gt;</span>\n</pre>\n",null,0],["duplicable?","NilClass","Ruby/classes/NilClass.html#method-i-duplicable-3F","()","<p><code>nil</code> is not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can't dup NilClass</span>\n</pre>\n",null,0],["duplicable?","Numeric","Ruby/classes/Numeric.html#method-i-duplicable-3F","()","<p>Numbers are not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-value\">3</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-value\">3</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can't dup Fixnum</span>\n</pre>\n",null,0],["duplicable?","Object","Ruby/classes/Object.html#method-i-duplicable-3F","()","<p>Can you safely dup this object?\n<p>False for <code>nil</code>, <code>false</code>, <code>true</code>, symbols,\nnumbers, class and module objects; …\n",null,0],["duplicable?","Symbol","Ruby/classes/Symbol.html#method-i-duplicable-3F","()","<p>Symbols are not duplicable:\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">my_symbol</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n:<span class=\"ruby-identifier\">my_symbol</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can't ...</span>\n</pre>\n",null,0],["duplicable?","TrueClass","Ruby/classes/TrueClass.html#method-i-duplicable-3F","()","<p><code>true</code> is not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">true</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-keyword\">true</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can't dup TrueClass</span>\n</pre>\n",null,0],["dynamic_width","Rake::Application","Rails/classes/Rake/Application.html#method-i-dynamic_width","()","<p>Calculate the dynamic width of the\n",null,1],["dynamic_width_stty","Rake::Application","Rails/classes/Rake/Application.html#method-i-dynamic_width_stty","()","",null,1],["dynamic_width_tput","Rake::Application","Rails/classes/Rake/Application.html#method-i-dynamic_width_tput","()","",null,1],["e2mm_message","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-e2mm_message","(klass, exp)","",null,1],["e2mm_message","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-e2mm_message","(klass, exp)","",null,1],["each","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-each","(&block)","",null,0],["each","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-each","()","",null,0],["each","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-each","()","<p>Iterates through each error key, value pair in the error messages hash.\nYields the attribute and the …\n",null,0],["each","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-each","(&block)","",null,0],["each","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-each","(&block)","",null,0],["each","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-each","(&block)","",null,0],["each","ActiveRecord::ConnectionAdapters::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-each","()","",null,0],["each","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-i-each","(&block)","",null,0],["each","ActiveRecord::Fixtures::File","Ruby/classes/ActiveRecord/Fixtures/File.html#method-i-each","(&block)","",null,0],["each","ActiveRecord::Result","Ruby/classes/ActiveRecord/Result.html#method-i-each","()","",null,0],["each","ActiveSupport::Dependencies::WatchStack","Ruby/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-each","(&block)","",null,0],["each","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-each","()","",null,0],["each","ARGF","Rails/classes/ARGF.html#method-i-each","(*args)","<p>Returns an enumerator which iterates over each line (separated by\n<em>sep</em>, which defaults to your platform’s …\n",null,1],["each","Array","Rails/classes/Array.html#method-i-each","()","<p>Calls <em>block</em> once for each element in <code>self</code>, passing\nthat element as a parameter.\n<p>If no block is given, …\n",null,1],["each","CSV","Rails/classes/CSV.html#method-i-each","()","<p>Yields each row of the data source in turn.\n<p>Support for Enumerable.\n<p>The data source must be open for reading. …\n",null,1],["each","CSV::Row","Rails/classes/CSV/Row.html#method-i-each","(&block)","<p>Yields each pair of the row as header and field tuples (much like iterating\nover a Hash).\n<p>Support for …\n",null,1],["each","CSV::Table","Rails/classes/CSV/Table.html#method-i-each","(&block)","<p>In the default mixed mode or row mode, iteration is the standard row major\nwalking of rows.  In column …\n",null,1],["each","DBM","Rails/classes/DBM.html#method-i-each","()","<p>Calls the block once for each [key, value] pair in the database. Returns\nself.\n",null,1],["each","Dir","Rails/classes/Dir.html#method-i-each","()","<p>Calls the block once for each entry in this directory, passing the filename\nof each entry as a parameter …\n",null,1],["each","ENV","Rails/classes/ENV.html#method-c-each","()","<p>Yields each environment variable <code>name</code> and <code>value</code>.\n<p>If no block is given an Enumerator is returned.\n",null,1],["each","Enumerator","Rails/classes/Enumerator.html#method-i-each","()","<p>Iterates over the block according to how this Enumerable was constructed.\nIf no block is given, returns …\n",null,1],["each","GDBM","Rails/classes/GDBM.html#method-i-each","()","<p>Executes <em>block</em> for each key in the database, passing the\n<em>key</em> and the correspoding <em>value</em> as a parameter. …\n",null,1],["each","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-each","(&block)","<p>Delegates to @hash\n",null,1],["each","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-each","(&block)","<p>Iterator over dependency_order\n",null,1],["each","Gem::Package::TarReader","Rails/classes/Gem/Package/TarReader.html#method-i-each","()","<p>Iterates over files in the tarball yielding each entry\n",null,1],["each","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-each","()","<p>Iterate over the specifications in the source index.\n",null,1],["each","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-each","()","<p>Enumerate every known spec.  See ::dirs= and ::add_spec to set the list of\nspecs.\n",null,1],["each","GetoptLong","Rails/classes/GetoptLong.html#method-i-each","()","<p>Iterator version of `get’.\n<p>The block is called repeatedly with two arguments: The first is the option\n…\n",null,1],["each","Hash","Rails/classes/Hash.html#method-i-each","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the\nkey-value pair as parameters.\n<p>If no block is given, …\n",null,1],["each","HttpServer::Table","Rails/classes/HttpServer/Table.html#method-i-each","()","",null,1],["each","IO","Rails/classes/IO.html#method-i-each","(*args)","<p>Executes the block for every line in <em>ios</em>, where lines are\nseparated by <em>sep</em>. <em>ios</em> must be opened for reading …\n",null,1],["each","Matrix","Rails/classes/Matrix.html#method-i-each","(which = :all)","<p>Yields all elements of the matrix, starting with those of the first row, or\nreturns an Enumerator is …\n",null,1],["each","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-each","()","",null,1],["each","Net::POP3","Rails/classes/Net/POP3.html#method-i-each","()","",null,1],["each","Net::POP3","Rails/classes/Net/POP3.html#method-i-each","()","",null,1],["each","Net::POP3","Rails/classes/Net/POP3.html#method-i-each","()","",null,1],["each","Net::POP3","Rails/classes/Net/POP3.html#method-i-each","()","",null,1],["each","OpenSSL::ASN1::Constructive","Rails/classes/OpenSSL/ASN1/Constructive.html#method-i-each","()","<p>Calls <em>block</em> once for each element in <code>self</code>, passing\nthat element as parameter <code>asn1</code>. If no block is given, …\n",null,1],["each","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-each","(eol=$/)","<p>Executes the block for every line in the stream where lines are separated\nby <code>eol</code>.\n<p>See also #gets\n",null,1],["each","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-each","()","",null,1],["each","Prime","Rails/classes/Prime.html#method-i-each","(ubound = nil, generator = EratosthenesGenerator.new, &block)","<p>Iterates the given block over all prime numbers.\n<p>Parameters\n<p><code>ubound</code> &mdash; Optional. An arbitrary positive number. …\n",null,1],["each","Prime::OldCompatibility","Rails/classes/Prime/OldCompatibility.html#method-i-each","(&block)","<p>Overwrites Prime#each.\n<p>Iterates the given block over all prime numbers. Note that enumeration\nstarts from …\n",null,1],["each","Prime::PseudoPrimeGenerator","Rails/classes/Prime/PseudoPrimeGenerator.html#method-i-each","(&block)","<p>Iterates the given block for each prime numbers.\n",null,1],["each","Psych::Nodes::Node","Rails/classes/Psych/Nodes/Node.html#method-i-each","(&block)","<p>Iterate over each node in the tree. Yields each node to <code>block</code>\ndepth first.\n",null,1],["each","RDoc::RI::Paths","Rails/classes/RDoc/RI/Paths.html#method-c-each","(system, site, home, gems, *extra_dirs)","<p>Iterates over each selected path yielding the directory and type.\n<p>Yielded types:\n<p>:system &mdash; Where Ruby’s ri …\n",null,1],["each","REXML::AttlistDecl","Rails/classes/REXML/AttlistDecl.html#method-i-each","(&block)","<p>Iterate over the key/value pairs:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">attlist_decl</span>.<span class=\"ruby-identifier\">each</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">attribute_name</span>, <span class=\"ruby-identifier\">attribute_value</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-operator\">...</span> }\n</pre>\n",null,1],["each","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-each","()","<p>Iterates over each attribute of an Element, yielding the expanded name and\nvalue as a pair of Strings …\n",null,1],["each","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-each","( xpath=nil, &block)","<p>Iterates through all of the child Elements, optionally filtering them by a\ngiven XPath\n<p>xpath &mdash; optional. …\n\n",null,1],["each","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-each","( &block )","",null,1],["each","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-each","(&block)","",null,1],["each","REXML::Parsers::PullParser","Rails/classes/REXML/Parsers/PullParser.html#method-i-each","()","",null,1],["each","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-each","(element, path, namespaces=EMPTY_HASH, &block)","",null,1],["each","REXML::SyncEnumerator","Rails/classes/REXML/SyncEnumerator.html#method-i-each","()","<p>Enumerates rows of the Enumerable objects.\n",null,1],["each","REXML::XPath","Rails/classes/REXML/XPath.html#method-c-each","(element, path=nil, namespaces=nil, variables={})","<p>Iterates over nodes that match the given path, calling the supplied block\nwith the match.\n<p>element &mdash; The …\n",null,1],["each","RSS::XML::Element","Rails/classes/RSS/XML/Element.html#method-i-each","(&block)","",null,1],["each","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-i-each","(&block)","",null,1],["each","Range","Rails/classes/Range.html#method-i-each","()","<p>Iterates over the elements <em>rng</em>, passing each in turn to the block.\nYou can only iterate if the start …\n",null,1],["each","Rinda::NotifyTemplateEntry","Rails/classes/Rinda/NotifyTemplateEntry.html#method-i-each","()","<p>Yields event/tuple pairs until this NotifyTemplateEntry expires.\n",null,1],["each","Rinda::RingFinger","Rails/classes/Rinda/RingFinger.html#method-i-each","()","<p>Iterates over all discovered TupleSpaces starting with the primary.\n",null,1],["each","Rinda::Tuple","Rails/classes/Rinda/Tuple.html#method-i-each","()","<p>Iterate through the tuple, yielding the index or key, and the value, thus\nensuring arrays are iterated …\n",null,1],["each","SDBM","Rails/classes/SDBM.html#method-i-each","()","",null,1],["each","Set","Rails/classes/Set.html#method-i-each","()","<p>Calls the given block once for each element in the set, passing the element\nas parameter.  Returns an …\n",null,1],["each","Shell::Cat","Rails/classes/Shell/Cat.html#method-i-each","(rs = nil)","",null,1],["each","Shell::Concat","Rails/classes/Shell/Concat.html#method-i-each","(rs = nil)","",null,1],["each","Shell::Echo","Rails/classes/Shell/Echo.html#method-i-each","(rs = nil)","",null,1],["each","Shell::Filter","Rails/classes/Shell/Filter.html#method-i-each","(rs = nil)","",null,1],["each","Shell::Glob","Rails/classes/Shell/Glob.html#method-i-each","(rs = nil)","",null,1],["each","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-each","(rs = nil)","",null,1],["each","Shell::Tee","Rails/classes/Shell/Tee.html#method-i-each","(rs = nil)","",null,1],["each","Shell::Void","Rails/classes/Shell/Void.html#method-i-each","(rs = nil)","",null,1],["each","StringIO","Rails/classes/StringIO.html#method-i-each","(*args)","<p>See IO#each.\n",null,1],["each","Struct","Rails/classes/Struct.html#method-i-each","()","<p>Calls <em>block</em> once for each instance variable, passing the value as\na parameter.\n<p>If no block is given, an …\n",null,1],["each","Vector","Rails/classes/Vector.html#method-i-each","(&block)","<p>Iterate over the elements of this vector\n",null,1],["each","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-each","()","",null,1],["each","WEBrick::HTTPAuth::Htdigest","Rails/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-each","()","<p>Iterate passwords in the database.\n",null,1],["each","WEBrick::HTTPAuth::Htpasswd","Rails/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-each","()","<p>Iterate passwords in the database.\n",null,1],["each","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-each","()","<p>Iterates over the request headers\n",null,1],["each","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-each","()","<p>Iterates over each header in the resopnse\n",null,1],["each","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-each","()","<p>Iterates over each item of OLE collection which has IEnumVARIANT interface.\n\n<pre>excel = WIN32OLE.new('Excel.Application') ...</pre>\n",null,1],["each","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-each","()","",null,1],["each","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-each","()","",null,1],["each","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-each","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["each2","Vector","Rails/classes/Vector.html#method-i-each2","(v)","<p>Iterate over the elements of this vector and <code>v</code> in conjunction.\n",null,1],["each_active_object","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-c-each_active_object","()","",null,1],["each_address","Resolv","Rails/classes/Resolv.html#method-i-each_address","(name)","<p>Iterates over all IP addresses for <code>name</code>.\n",null,1],["each_address","Resolv","Rails/classes/Resolv.html#method-c-each_address","(name, &block)","<p>Iterates over all IP addresses for <code>name</code>.\n",null,1],["each_address","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-i-each_address","(name)","<p>Iterates over all IP addresses for <code>name</code> retrieved from the DNS\nresolver.\n<p><code>name</code> can be a Resolv::DNS::Name ...\n",null,1],["each_address","Resolv::Hosts","Rails/classes/Resolv/Hosts.html#method-i-each_address","(name, &proc)","<p>Iterates over all IP addresses for <code>name</code> retrieved from the\nhosts file.\n",null,1],["each_ancestor","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-each_ancestor","()","<p>Iterates the ancestors of this class or module for which an\nRDoc::ClassModule exists.\n",null,1],["each_attribute","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-each_attribute","()","<p>Iterator for attributes\n",null,1],["each_attribute","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-each_attribute","()","<p>Iterates over the attributes of an Element.  Yields actual Attribute nodes,\nnot String values.\n\n<pre>doc = Document.new ...</pre>\n",null,1],["each_byte","ARGF","Rails/classes/ARGF.html#method-i-each_byte","()","\n<pre>Iterates over each byte of each file in +ARGV+.\nA byte is returned as a +Fixnum+ in the range 0..255. ...</pre>\n",null,1],["each_byte","IO","Rails/classes/IO.html#method-i-each_byte","()","<p>Calls the given block once for each byte (0..255) in <em>ios</em>, passing\nthe byte as an argument. The stream …\n",null,1],["each_byte","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-each_byte","()","<p>Calls the given block once for each byte in the stream.\n",null,1],["each_byte","String","Rails/classes/String.html#method-i-each_byte","()","<p>Passes each byte in <em>str</em> to the given block, or returns an\nenumerator if no block is given.\n\n<pre>&quot;hello&quot;.each_byte ...</pre>\n",null,1],["each_byte","StringIO","Rails/classes/StringIO.html#method-i-each_byte","()","<p>See IO#each_byte.\n",null,1],["each_byte","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-each_byte","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["each_capitalized","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-each_capitalized","()","<p>As for #each_header, except the keys are provided in capitalized form.\n<p>Note that header names are capitalized …\n",null,1],["each_capitalized_name","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-each_capitalized_name","()","<p>Iterates through the header names in the header, passing capitalized header\nnames to the code block. …\n",null,1],["each_char","ARGF","Rails/classes/ARGF.html#method-i-each_char","()","<p>Iterates over each character of each file in <code>ARGF</code>.\n<p>This method allows you to treat the files supplied …\n",null,1],["each_char","IO","Rails/classes/IO.html#method-i-each_char","()","<p>Calls the given block once for each character in <em>ios</em>, passing the\ncharacter as an argument. The stream …\n",null,1],["each_char","String","Rails/classes/String.html#method-i-each_char","()","<p>Passes each character in <em>str</em> to the given block, or returns an\nenumerator if no block is given.\n\n<pre>&quot;hello&quot;.each_char ...</pre>\n",null,1],["each_char","StringIO","Rails/classes/StringIO.html#method-i-each_char","()","<p>See IO#each_char.\n",null,1],["each_char","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-each_char","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["each_child","Pathname","Rails/classes/Pathname.html#method-i-each_child","(with_directory=true, &b)","<p>Iterates over the children of the directory (files and subdirectories, not\nrecursive). It yields Pathname …\n",null,1],["each_child","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-each_child","(&block)","",null,1],["each_classmodule","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-each_classmodule","()","<p>Iterator for classes and modules\n",null,1],["each_codepoint","ARGF","Rails/classes/ARGF.html#method-i-each_codepoint","()","<p>Iterates over each codepoint of each file in <code>ARGF</code>.\n<p>This method allows you to treat the files supplied …\n",null,1],["each_codepoint","IO","Rails/classes/IO.html#method-i-each_codepoint","()","<p>Passes the <code>Integer</code> ordinal of each character in <em>ios</em>,\npassing the codepoint as an argument. The stream …\n",null,1],["each_codepoint","String","Rails/classes/String.html#method-i-each_codepoint","()","<p>Passes the <code>Integer</code> ordinal of each character in <em>str</em>,\nalso known as a <em>codepoint</em> when applied to Unicode …\n",null,1],["each_codepoint","StringIO","Rails/classes/StringIO.html#method-i-each_codepoint","()","<p>See IO#each_codepoint.\n",null,1],["each_cons","Enumerable","Rails/classes/Enumerable.html#method-i-each_cons","(p1)","<p>Iterates the given block for each array of consecutive &lt;n&gt; elements. \nIf no block is given, returns …\n",null,1],["each_const","OptionParser","Rails/classes/OptionParser.html#method-c-each_const","(path, base = ::Object)","",null,1],["each_constant","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-each_constant","()","<p>Iterator for constants\n",null,1],["each_data","WEBrick::HTTPUtils::FormData","Rails/classes/WEBrick/HTTPUtils/FormData.html#method-i-each_data","()","",null,1],["each_element","REXML::Element","Rails/classes/REXML/Element.html#method-i-each_element","( xpath=nil )","<p>Synonym for Element.elements.each\n",null,1],["each_element_with_attribute","REXML::Element","Rails/classes/REXML/Element.html#method-i-each_element_with_attribute","( key, value=nil, max=0, name=nil )","<p>Iterates through the child elements, yielding for each Element that has a\nparticular attribute set.\n<p>key … &mdash; ",null,1],["each_element_with_text","REXML::Element","Rails/classes/REXML/Element.html#method-i-each_element_with_text","( text=nil, max=0, name=nil )","<p>Iterates through the children, yielding for each Element that has a\nparticular text set.\n<p>text &mdash; the text …\n",null,1],["each_entry","Enumerable","Rails/classes/Enumerable.html#method-i-each_entry","(*args)","<p>Calls <em>block</em> once for each element in <code>self</code>, passing\nthat element as a parameter, converting multiple values …\n",null,1],["each_entry","Gem::Package::TarReader","Rails/classes/Gem/Package/TarReader.html#method-i-each_entry","()","",null,1],["each_entry","Pathname","Rails/classes/Pathname.html#method-i-each_entry","()","<p>Iterates over the entries (files and subdirectories) in the directory.  It\nyields a Pathname object for …\n",null,1],["each_filename","Pathname","Rails/classes/Pathname.html#method-i-each_filename","()","<p>Iterates over each component of the path.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Pathname</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;/usr/bin/ruby&quot;</span>).<span class=\"ruby-identifier\">each_filename</span> {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">filename</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-operator\">...</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["each_header","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-each_header","()","<p>Iterates through the header names and values, passing in the name and value\nto the code block supplied. …\n",null,1],["each_include","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-each_include","()","<p>Iterator for included modules\n",null,1],["each_index","Array","Rails/classes/Array.html#method-i-each_index","()","<p>Same as <code>Array#each</code>, but passes the index of the element\ninstead of the element itself.\n<p>If no block is …\n",null,1],["each_index","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-each_index","( &block )","",null,1],["each_installed_parser","XMLRPC::XMLParser","Rails/classes/XMLRPC/XMLParser.html#method-c-each_installed_parser","()","<p>yields an instance of each installed parser\n",null,1],["each_installed_writer","XMLRPC::XMLWriter","Rails/classes/XMLRPC/XMLWriter.html#method-c-each_installed_writer","()","<p>yields an instance of each installed XML writer\n",null,1],["each_key","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-each_key","()","",null,0],["each_key","DBM","Rails/classes/DBM.html#method-i-each_key","()","<p>Calls the block once for each key string in the database. Returns self.\n",null,1],["each_key","ENV","Rails/classes/ENV.html#method-c-each_key","()","<p>Yields each environment variable name.\n<p>An Enumerator is returned if no block is given.\n",null,1],["each_key","GDBM","Rails/classes/GDBM.html#method-i-each_key","()","<p>Executes <em>block</em> for each key in the database, passing the\n<em>key</em> as a parameter.\n",null,1],["each_key","Hash","Rails/classes/Hash.html#method-i-each_key","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the key as\na parameter.\n<p>If no block is given, an enumerator …\n",null,1],["each_key","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-each_key","()","",null,1],["each_key","SDBM","Rails/classes/SDBM.html#method-i-each_key","()","",null,1],["each_key","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-each_key","()","<p>Enumerate subkeys.\n<p>subkey is String which contains name of subkey. wtime is last write time as\nFILETIME …\n",null,1],["each_line","ARGF","Rails/classes/ARGF.html#method-i-each_line","(*args)","<p>Returns an enumerator which iterates over each line (separated by\n<em>sep</em>, which defaults to your platform’s …\n",null,1],["each_line","IO","Rails/classes/IO.html#method-i-each_line","(*args)","<p>Executes the block for every line in <em>ios</em>, where lines are\nseparated by <em>sep</em>. <em>ios</em> must be opened for reading …\n",null,1],["each_line","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-each_line","(eol=$/)","",null,1],["each_line","Pathname","Rails/classes/Pathname.html#method-i-each_line","(p1 = v1, p2 = v2, p3 = v3)","<p>#each_line iterates over the line in the file.  It yields a String object\nfor each line.\n<p>This method is …\n",null,1],["each_line","String","Rails/classes/String.html#method-i-each_line","(p1 = v1)","<p>Splits <em>str</em> using the supplied parameter as the record separator\n(<code>$/</code> by default), passing each substring …\n",null,1],["each_line","StringIO","Rails/classes/StringIO.html#method-i-each_line","(*args)","<p>See IO#each.\n",null,1],["each_line","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-each_line","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["each_mail","Net::POP3","Rails/classes/Net/POP3.html#method-i-each_mail","()","<p>Yields each message to the passed-in block in turn. Equivalent to:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">pop3</span>.<span class=\"ruby-identifier\">mails</span>.<span class=\"ruby-identifier\">each</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">popmail</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-operator\">...</span>. <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["each_mail","Net::POP3","Rails/classes/Net/POP3.html#method-i-each_mail","()","<p>Yields each message to the passed-in block in turn. Equivalent to:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">pop3</span>.<span class=\"ruby-identifier\">mails</span>.<span class=\"ruby-identifier\">each</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">popmail</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-operator\">...</span>. <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["each_mail","Net::POP3","Rails/classes/Net/POP3.html#method-i-each_mail","()","<p>Yields each message to the passed-in block in turn. Equivalent to:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">pop3</span>.<span class=\"ruby-identifier\">mails</span>.<span class=\"ruby-identifier\">each</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">popmail</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-operator\">...</span>. <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["each_mail","Net::POP3","Rails/classes/Net/POP3.html#method-i-each_mail","()","<p>Yields each message to the passed-in block in turn. Equivalent to:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">pop3</span>.<span class=\"ruby-identifier\">mails</span>.<span class=\"ruby-identifier\">each</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">popmail</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-operator\">...</span>. <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["each_method","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-each_method","()","<p>Iterator for methods\n",null,1],["each_name","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-each_name","()","<p>Iterates through the header names in the header, passing each header name\nto the code block.\n",null,1],["each_name","Resolv","Rails/classes/Resolv.html#method-c-each_name","(address, &proc)","<p>Iterates over all hostnames for <code>address</code>.\n",null,1],["each_name","Resolv","Rails/classes/Resolv.html#method-i-each_name","(address)","<p>Iterates over all hostnames for <code>address</code>.\n",null,1],["each_name","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-i-each_name","(address)","<p>Iterates over all hostnames for <code>address</code> retrieved from the DNS\nresolver.\n<p><code>address</code> must be a Resolv::IPv4 ...\n",null,1],["each_name","Resolv::Hosts","Rails/classes/Resolv/Hosts.html#method-i-each_name","(address, &proc)","<p>Iterates over all hostnames for <code>address</code> retrieved from the\nhosts file.\n",null,1],["each_name_of","RDoc::Markup::Attribute","Rails/classes/RDoc/Markup/Attribute.html#method-c-each_name_of","(bitmap)","<p>yields each attribute name in <code>bitmap</code>\n",null,1],["each_object","ObjectSpace","Rails/classes/ObjectSpace.html#method-c-each_object","(p1 = v1)","<p>Calls the block once for each living, nonimmediate object in this Ruby\nprocess. If <em>module</em> is specified, …\n",null,1],["each_option","GetoptLong","Rails/classes/GetoptLong.html#method-i-each_option","()","<p>`each_option’ is an alias of `each’.\n",null,1],["each_option","OptionParser::List","Rails/classes/OptionParser/List.html#method-i-each_option","(&block)","<p>Iterates over each option, passing the option to the <code>block</code>.\n",null,1],["each_pair","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-each_pair","()","",null,0],["each_pair","DBM","Rails/classes/DBM.html#method-i-each_pair","()","<p>Calls the block once for each [key, value] pair in the database. Returns\nself.\n",null,1],["each_pair","ENV","Rails/classes/ENV.html#method-c-each_pair","()","<p>Yields each environment variable <code>name</code> and <code>value</code>.\n<p>If no block is given an Enumerator is returned.\n",null,1],["each_pair","GDBM","Rails/classes/GDBM.html#method-i-each_pair","()","<p>Executes <em>block</em> for each key in the database, passing the\n<em>key</em> and the correspoding <em>value</em> as a parameter. …\n",null,1],["each_pair","Hash","Rails/classes/Hash.html#method-i-each_pair","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the\nkey-value pair as parameters.\n<p>If no block is given, …\n",null,1],["each_pair","SDBM","Rails/classes/SDBM.html#method-i-each_pair","()","",null,1],["each_pair","Struct","Rails/classes/Struct.html#method-i-each_pair","()","<p>Calls <em>block</em> once for each instance variable, passing the name (as\na symbol) and the value as parameters. …\n",null,1],["each_pair","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-each_pair","()","<p>Calls the given block once for each <code>key</code>, <code>value</code>\npair in the database.\n<p>Returns <code>self</code>.\n",null,1],["each_parent","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-each_parent","()","<p>Yields each parent of this CodeObject.  See also\nRDoc::ClassModule#each_ancestor\n",null,1],["each_prime","Integer","Rails/classes/Integer.html#method-c-each_prime","(ubound)","<p>Iterates the given block over all prime numbers.\n<p>See <code>Prime</code>#each for more details.\n",null,1],["each_recursive","REXML::Node","Rails/classes/REXML/Node.html#method-i-each_recursive","()","<p>Visit all subnodes of <code>self</code> recursively\n",null,1],["each_resource","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-i-each_resource","(name, typeclass, &proc)","<p>Iterates over all <code>typeclass</code> DNS resources for\n<code>name</code>.  See #getresource for argument details.\n",null,1],["each_section","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-each_section","()","<p>Iterator for each section’s contents sorted by title.  The\n<code>section</code>, the section’s <code>constants</code> and the sections\n…\n",null,1],["each_slice","Enumerable","Rails/classes/Enumerable.html#method-i-each_slice","(p1)","<p>Iterates the given block for each slice of &lt;n&gt; elements.  If no block\nis given, returns an enumerator. …\n",null,1],["each_strongly_connected_component","TSort","Rails/classes/TSort.html#method-i-each_strongly_connected_component","()","<p>The iterator version of the #strongly_connected_components method.\n<code><em>obj</em>.each_strongly_connected_component</code> …\n",null,1],["each_strongly_connected_component_from","TSort","Rails/classes/TSort.html#method-i-each_strongly_connected_component_from","(node, id_map={}, stack=[])","<p>Iterates over strongly connected component in the subgraph reachable from\n<em>node</em>.\n<p>Return value is unspecified. …\n",null,1],["each_subclass_array","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-each_subclass_array","()","",null,0],["each_top_level_statement","RubyLex","Rails/classes/RubyLex.html#method-i-each_top_level_statement","()","",null,1],["each_value","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-each_value","()","",null,0],["each_value","DBM","Rails/classes/DBM.html#method-i-each_value","()","<p>Calls the block once for each value string in the database. Returns self.\n",null,1],["each_value","ENV","Rails/classes/ENV.html#method-c-each_value","()","<p>Yields each environment variable <code>value</code>.\n<p>An Enumerator is returned if no block was given.\n",null,1],["each_value","GDBM","Rails/classes/GDBM.html#method-i-each_value","()","<p>Executes <em>block</em> for each key in the database, passing the\ncorresponding <em>value</em> as a parameter.\n",null,1],["each_value","Hash","Rails/classes/Hash.html#method-i-each_value","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the value\nas a parameter.\n<p>If no block is given, an enumerator …\n",null,1],["each_value","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-each_value","()","<p>Iterates through header values, passing each value to the code block.\n",null,1],["each_value","SDBM","Rails/classes/SDBM.html#method-i-each_value","()","",null,1],["each_value","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-each_value","()","<p>Enumerate values.\n",null,1],["each_value","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-each_value","()","<p>Calls the given block for each value in database.\n<p>Returns <code>self</code>.\n",null,1],["each_with_index","Enumerable","Rails/classes/Enumerable.html#method-i-each_with_index","(*args)","<p>Calls <em>block</em> with two arguments, the item and its index, for each\nitem in <em>enum</em>.  Given arguments are passed …\n",null,1],["each_with_index","Enumerator","Rails/classes/Enumerator.html#method-i-each_with_index","()","<p>Same as Enumerator#with_index(0), i.e. there is no starting offset.\n<p>If no block is given, a new Enumerator …\n",null,1],["each_with_index","Matrix","Rails/classes/Matrix.html#method-i-each_with_index","(which = :all)","<p>Same as #each, but the row index and column index in addition to the\nelement\n\n<pre>Matrix[ [1,2], [3,4] ].each_with_index ...</pre>\n",null,1],["each_with_object","Enumerable","Ruby/classes/Enumerable.html#method-i-each_with_object","(memo)","<p>Iterates over a collection, passing the current element\n<strong>and</strong> the <code>memo</code> to the block. Handy for building\n…\n",null,0],["each_with_object","Enumerable","Rails/classes/Enumerable.html#method-i-each_with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object given,\nand returns the initially given …\n",null,1],["each_with_object","Enumerator","Rails/classes/Enumerator.html#method-i-each_with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object,\n<code>obj</code>, and returns <code>obj</code>\n<p>If no block is …\n",null,1],["eager_autoload","ActiveSupport::Autoload","Ruby/classes/ActiveSupport/Autoload.html#method-i-eager_autoload","()","",null,0],["eager_autoload!","ActiveSupport::Autoload","Ruby/classes/ActiveSupport/Autoload.html#method-c-eager_autoload-21","()","",null,0],["eager_load","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-eager_load","(*args)","",null,0],["eager_load","Rails::Paths::Root","Ruby/classes/Rails/Paths/Root.html#method-i-eager_load","()","",null,0],["eager_load!","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-eager_load-21","()","",null,0],["eager_load!","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-i-eager_load-21","()","",null,0],["eager_load_paths","Rails::Engine::Configuration","Ruby/classes/Rails/Engine/Configuration.html#method-i-eager_load_paths","()","",null,0],["eager_loading?","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-eager_loading-3F","()","",null,0],["echo","Curses","Rails/classes/Curses.html#method-c-echo","()","<p>Enables characters typed by the user to be echoed by Curses.getch as they\nare typed.\n",null,1],["echo","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-echo","(*strings)","",null,1],["echo=","IO","Rails/classes/IO.html#method-i-echo-3D","(p1)","<p>Enables/disables echo back. On some platforms, all combinations of this\nflags and raw/cooked mode may …\n",null,1],["echo?","IO","Rails/classes/IO.html#method-i-echo-3F","()","<p>Returns <code>true</code> if echo back is enabled.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["edit","PostsController","Ruby/classes/PostsController.html#method-i-edit","()","<p>GET /posts/1/edit\n",null,0],["egid","Process","Rails/classes/Process.html#method-c-egid","()","<p>Returns the effective group ID for this process. Not available on all\nplatforms.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">egid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,1],["egid=","Process","Rails/classes/Process.html#method-c-egid-3D","(p1)","<p>Sets the effective group ID for this process. Not available on all\nplatforms.\n",null,1],["ehlo","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-ehlo","(domain)","",null,1],["ehlo","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-ehlo","(domain)","",null,1],["eid","Process::GID","Rails/classes/Process/GID.html#method-c-eid","()","<p>Returns the effective group ID for this process. Not available on all\nplatforms.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">egid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,1],["eid","Process::UID","Rails/classes/Process/UID.html#method-c-eid","()","<p>Returns the effective user ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">euid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,1],["eigen","Matrix","Rails/classes/Matrix.html#method-i-eigen","()","",null,1],["eigensystem","Matrix","Rails/classes/Matrix.html#method-i-eigensystem","()","<p>Returns the Eigensystem of the matrix; see\n<code>EigenvalueDecomposition</code>.\n\n<pre>m = Matrix[[1, 2], [3, 4]]\nv, d, v_inv ...</pre>\n",null,1],["eigenvalue_matrix","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-i-eigenvalue_matrix","()","<p>Returns the block diagonal eigenvalue matrix <code>D</code>\n",null,1],["eigenvalues","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-i-eigenvalues","()","<p>Returns the eigenvalues in an array\n",null,1],["eigenvector_matrix","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-i-eigenvector_matrix","()","<p>Returns the eigenvector matrix <code>V</code>\n",null,1],["eigenvector_matrix_inv","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-i-eigenvector_matrix_inv","()","<p>Returns the inverse of the eigenvector matrix <code>V</code>\n",null,1],["eigenvectors","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-i-eigenvectors","()","<p>Returns an array of the eigenvectors\n",null,1],["ele","XMLRPC::XMLWriter::Abstract","Rails/classes/XMLRPC/XMLWriter/Abstract.html#method-i-ele","(name, *children)","",null,1],["element","Matrix","Rails/classes/Matrix.html#method-i-element","(i, j)","",null,1],["element","Vector","Rails/classes/Vector.html#method-i-element","(i)","",null,1],["element","XMLRPC::XMLWriter::Simple","Rails/classes/XMLRPC/XMLWriter/Simple.html#method-i-element","(name, attrs, *children)","",null,1],["element","XMLRPC::XMLWriter::XMLParser","Rails/classes/XMLRPC/XMLWriter/XMLParser.html#method-i-element","(name, attrs, *children)","",null,1],["element=","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-element-3D","( element )","<p>Sets the element of which this object is an attribute.  Normally, this is\nnot directly called.\n<p>Returns …\n",null,1],["element_initialize_arguments?","RSS::Utils","Rails/classes/RSS/Utils.html#method-i-element_initialize_arguments-3F","(args)","",null,1],["element_name","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-element_name","()","",null,0],["element_path","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-element_path","(options = nil)","",null,0],["element_path","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-element_path","(id, prefix_options = {}, query_options = nil)","<p>Gets the element path for the given ID in <code>id</code>.  If the\n<code>query_options</code> parameter is omitted, Rails will …\n",null,0],["elementdecl","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-elementdecl","(content)","<p>&lt;!ELEMENT …&gt;\n",null,1],["elementdecl","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-elementdecl","(content)","<p>&lt;!ELEMENT …&gt;\n",null,1],["elementdecl?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-elementdecl-3F","()","<p>Content: [ String text ]\n",null,1],["elements","Vector","Rails/classes/Vector.html#method-c-elements","(array, copy = true)","<p>Creates a vector from an Array.  The optional second argument specifies\nwhether the array itself or a …\n",null,1],["elements_to_f","Matrix","Rails/classes/Matrix.html#method-i-elements_to_f","()","",null,1],["elements_to_f","Vector","Rails/classes/Vector.html#method-i-elements_to_f","()","",null,1],["elements_to_i","Matrix","Rails/classes/Matrix.html#method-i-elements_to_i","()","",null,1],["elements_to_i","Vector","Rails/classes/Vector.html#method-i-elements_to_i","()","",null,1],["elements_to_r","Matrix","Rails/classes/Matrix.html#method-i-elements_to_r","()","",null,1],["elements_to_r","Vector","Rails/classes/Vector.html#method-i-elements_to_r","()","",null,1],["emacs_editing_mode","Readline","Rails/classes/Readline.html#method-c-emacs_editing_mode","()","<p>Specifies Emacs editing mode. The default is this mode. See the manual of\nGNU Readline for details of …\n",null,1],["emacs_editing_mode?","Readline","Rails/classes/Readline.html#method-c-emacs_editing_mode-3F","()","<p>Returns true if emacs mode is active. Returns false if not.\n<p>Raises NotImplementedError if the using readline …\n",null,1],["email_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-email_field","(object_name, method, options = {})","<p>Returns a text_field of type “email”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">email_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;address&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_address&quot; ...</span>\n</pre>\n",null,0],["email_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-email_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “email”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,0],["email_to_name","Gem::Security","Rails/classes/Gem/Security.html#method-c-email_to_name","(email_address, munge_re)","<p>Turns <code>email_address</code> into an OpenSSL::X509::Name\n",null,1],["emitted_hidden_id?","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-emitted_hidden_id-3F","()","",null,0],["empty","Matrix","Rails/classes/Matrix.html#method-c-empty","(row_size = 0, column_size = 0)","<p>Creates a empty matrix of <code>row_size</code> x <code>column_size</code>.\nAt least one of <code>row_size</code> or <code>column_size</code> must be\n0. …\n",null,1],["empty","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-empty","()","<p>Called when an empty event happens. (Which, as far as I can tell, is\nnever).\n",null,1],["empty?","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-empty-3F","()","",null,0],["empty?","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-empty-3F","()","<p>Returns true if no errors are found, false otherwise. If the error message\nis a string it can be empty. …\n",null,0],["empty?","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-empty-3F","()","<p>Returns true if there are no records.\n",null,0],["empty?","ActiveSupport::Dependencies::ClassCache","Ruby/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-empty-3F","()","",null,0],["empty?","Array","Rails/classes/Array.html#method-i-empty-3F","()","<p>Returns <code>true</code> if <code>self</code> contains no elements.\n\n<pre class=\"ruby\">[].<span class=\"ruby-identifier\">empty?</span>   <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n",null,1],["empty?","DBM","Rails/classes/DBM.html#method-i-empty-3F","()","<p>Returns true if the database is empty, false otherwise.\n",null,1],["empty?","ENV","Rails/classes/ENV.html#method-c-empty-3F","()","<p>Returns true when there are no environment variables\n",null,1],["empty?","GDBM","Rails/classes/GDBM.html#method-i-empty-3F","()","<p>Returns true if the database is empty.\n",null,1],["empty?","Gem::Package::TarHeader","Rails/classes/Gem/Package/TarHeader.html#method-i-empty-3F","()","<p>Is the tar entry empty?\n",null,1],["empty?","Gem::Platform","Rails/classes/Gem/Platform.html#method-i-empty-3F","()","",null,1],["empty?","Hash","Rails/classes/Hash.html#method-i-empty-3F","()","<p>Returns <code>true</code> if <em>hsh</em> contains no key-value pairs.\n\n<pre class=\"ruby\">{}.<span class=\"ruby-identifier\">empty?</span>   <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n",null,1],["empty?","Matrix","Rails/classes/Matrix.html#method-i-empty-3F","()","<p>Returns <code>true</code> if this is an empty matrix, i.e. if the number of\nrows or the number of columns is 0.\n",null,1],["empty?","Queue","Rails/classes/Queue.html#method-i-empty-3F","()","<p>Returns <code>true</code> if the queue is empty.\n",null,1],["empty?","RDoc::Markup::Document","Rails/classes/RDoc/Markup/Document.html#method-i-empty-3F","()","<p>Does this document have no parts?\n",null,1],["empty?","RDoc::Markup::List","Rails/classes/RDoc/Markup/List.html#method-i-empty-3F","()","<p>Is the list empty?\n",null,1],["empty?","RDoc::Markup::ListItem","Rails/classes/RDoc/Markup/ListItem.html#method-i-empty-3F","()","<p>Is the ListItem empty?\n",null,1],["empty?","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-empty-3F","()","<p>Returns <code>true</code> if there are no <code>Element</code> children,\n<code>false</code> otherwise\n",null,1],["empty?","REXML::IOSource","Rails/classes/REXML/IOSource.html#method-i-empty-3F","()","",null,1],["empty?","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-empty-3F","()","<p>Returns true if there are no more events\n",null,1],["empty?","REXML::Source","Rails/classes/REXML/Source.html#method-i-empty-3F","()","<p>@return true if the Source is exhausted\n",null,1],["empty?","REXML::Text","Rails/classes/REXML/Text.html#method-i-empty-3F","()","",null,1],["empty?","SDBM","Rails/classes/SDBM.html#method-i-empty-3F","()","",null,1],["empty?","Set","Rails/classes/Set.html#method-i-empty-3F","()","<p>Returns true if the set contains no elements.\n",null,1],["empty?","String","Rails/classes/String.html#method-i-empty-3F","()","<p>Returns <code>true</code> if <em>str</em> has a length of zero.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;hello&quot;</span>.<span class=\"ruby-identifier\">empty?</span>   <span class=\"ruby-comment\">#=&gt; false</span>\n<span class=\"ruby-string\">&quot;&quot;</span>.<span class=\"ruby-identifier\">empty?</span>        <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n",null,1],["empty?","StringScanner","Rails/classes/StringScanner.html#method-i-empty-3F","()","<p>Equivalent to #eos?. This method is obsolete, use #eos? instead.\n",null,1],["empty?","Symbol","Rails/classes/Symbol.html#method-i-empty-3F","()","<p>Returns that <em>sym</em> is :“” or not.\n",null,1],["empty?","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-empty-3F","()","<p>Returns <code>true</code> if there are no threads in the pool still\nrunning.\n",null,1],["empty?","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-empty-3F","()","<p>Returns <code>true</code> if there are no threads in the pool still\nrunning.\n",null,1],["empty_directory_with_gitkeep","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-empty_directory_with_gitkeep","(destination, config = {})","",null,0],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-empty_insert_statement_value","()","",null,0],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-empty_insert_statement_value","()","",null,0],["emulate_booleans","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-c-emulate_booleans","","<p>By default, the MysqlAdapter will consider all columns of type\n<code>tinyint(1)</code> as boolean. If you wish to …\n",null,0],["enable","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-enable","(*observers, &block)","<p>Enables one or more observers. This supports multiple forms:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ORM</span>.<span class=\"ruby-identifier\">observers</span>.<span class=\"ruby-identifier\">enable</span> :<span class=\"ruby-identifier\">user_observer</span>\n  <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,0],["enable","GC","Rails/classes/GC.html#method-c-enable","()","<p>Enables garbage collection, returning <code>true</code> if garbage\ncollection was previously disabled.\n\n<pre>GC.disable  ...</pre>\n",null,1],["enable","GC::Profiler","Rails/classes/GC/Profiler.html#method-c-enable","()","<p>Starts the GC profiler.\n",null,1],["enable_close","DL::Handle","Rails/classes/DL/Handle.html#method-i-enable_close","()","<p>Enable a call to dlclose() when this DL::Handle is garbage collected.\n",null,1],["enable_config","Object","Rails/classes/Object.html#method-i-enable_config","(config, default=nil)","<p>Tests for the presence of an –enable-<code>config</code> or\n–disable-<code>config</code> option. Returns true if the enable option …\n",null,1],["enable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache","Ruby/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-enable_query_cache-21","()","",null,0],["enable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-i-enable_ssl","(verify_or_params = {}, certs = nil, port = nil)","<p>Enables SSL for this instance.  Must be called before the connection is\nestablished to have any effect. …\n",null,1],["enable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-i-enable_ssl","(verify_or_params = {}, certs = nil, port = nil)","<p>Enables SSL for this instance.  Must be called before the connection is\nestablished to have any effect. …\n",null,1],["enable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-c-enable_ssl","(*args)","<p>Enable SSL for all new instances. <code>params</code> is passed to\nOpenSSL::SSLContext#set_params.\n",null,1],["enable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-i-enable_ssl","(verify_or_params = {}, certs = nil, port = nil)","<p>Enables SSL for this instance.  Must be called before the connection is\nestablished to have any effect. …\n",null,1],["enable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-c-enable_ssl","(*args)","<p>Enable SSL for all new instances. <code>params</code> is passed to\nOpenSSL::SSLContext#set_params.\n",null,1],["enable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-c-enable_ssl","(*args)","<p>Enable SSL for all new instances. <code>params</code> is passed to\nOpenSSL::SSLContext#set_params.\n",null,1],["enable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-i-enable_ssl","(verify_or_params = {}, certs = nil, port = nil)","<p>Enables SSL for this instance.  Must be called before the connection is\nestablished to have any effect. …\n",null,1],["enable_ssl","Net::POP3","Rails/classes/Net/POP3.html#method-c-enable_ssl","(*args)","<p>Enable SSL for all new instances. <code>params</code> is passed to\nOpenSSL::SSLContext#set_params.\n",null,1],["enable_ssl","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-enable_ssl","(context = SMTP.default_ssl_context)","",null,1],["enable_ssl","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-enable_ssl","(context = SMTP.default_ssl_context)","",null,1],["enable_starttls","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-enable_starttls","(context = SMTP.default_ssl_context)","<p>Enables SMTP/TLS (STARTTLS) for this object. <code>context</code> is a\nOpenSSL::SSL::SSLContext object.\n",null,1],["enable_starttls","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-enable_starttls","(context = SMTP.default_ssl_context)","<p>Enables SMTP/TLS (STARTTLS) for this object. <code>context</code> is a\nOpenSSL::SSL::SSLContext object.\n",null,1],["enable_starttls_auto","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-enable_starttls_auto","(context = SMTP.default_ssl_context)","<p>Enables SMTP/TLS (STARTTLS) for this object if server accepts.\n<code>context</code> is a OpenSSL::SSL::SSLContext …\n",null,1],["enable_starttls_auto","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-enable_starttls_auto","(context = SMTP.default_ssl_context)","<p>Enables SMTP/TLS (STARTTLS) for this object if server accepts.\n<code>context</code> is a OpenSSL::SSL::SSLContext …\n",null,1],["enable_tls","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-enable_tls","(context = SMTP.default_ssl_context)","<p>Enables SMTP/TLS (SMTPS: SMTP over direct TLS connection) for this object. \nMust be called before the …\n",null,1],["enable_tls","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-enable_tls","(context = SMTP.default_ssl_context)","<p>Enables SMTP/TLS (SMTPS: SMTP over direct TLS connection) for this object. \nMust be called before the …\n",null,1],["enable_warnings","Kernel","Ruby/classes/Kernel.html#method-i-enable_warnings","()","<p>Sets $VERBOSE to true for the duration of the block and back to its\noriginal value afterwards.\n",null,0],["enabled","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-enabled","()","",null,0],["enabled=","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-enabled-3D","(flag)","",null,0],["enabled?","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-enabled-3F","()","",null,0],["enabled?","GC::Profiler","Rails/classes/GC/Profiler.html#method-c-enabled-3F","()","<p>The current status of GC profile mode.\n",null,1],["enc_key","OpenSSL::PKCS7::RecipientInfo","Rails/classes/OpenSSL/PKCS7/RecipientInfo.html#method-i-enc_key","()","",null,1],["enclose","ThreadGroup","Rails/classes/ThreadGroup.html#method-i-enclose","()","<p>Prevents threads from being added to or removed from the receiving\n<code>ThreadGroup</code>. New threads can still …\n",null,1],["enclosed?","ThreadGroup","Rails/classes/ThreadGroup.html#method-i-enclosed-3F","()","<p>Returns <code>true</code> if <em>thgrp</em> is enclosed. See also\nThreadGroup#enclose.\n",null,1],["encode","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-encode","(options={})","<p>Returns the serialized string representation of the resource in the\nconfigured serialization format specified …\n",null,0],["encode","ActiveResource::Formats::JsonFormat","Ruby/classes/ActiveResource/Formats/JsonFormat.html#method-i-encode","(hash, options = nil)","",null,0],["encode","ActiveResource::Formats::XmlFormat","Ruby/classes/ActiveResource/Formats/XmlFormat.html#method-i-encode","(hash, options={})","",null,0],["encode","ActiveSupport::JSON","Ruby/classes/ActiveSupport/JSON.html#method-c-encode","(value, options = nil)","<p>Dumps object in JSON (JavaScript Object Notation). See www.json.org for\nmore info.\n",null,0],["encode","ActiveSupport::JSON::Encoding::Encoder","Ruby/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-encode","(value, use_options = true)","",null,0],["encode","REXML::Encoding","Rails/classes/REXML/Encoding.html#method-i-encode","(string)","",null,1],["encode","String","Rails/classes/String.html#method-i-encode","(*args)","<p>The first form returns a copy of <code>str</code> transcoded to encoding\n<code>encoding</code>. The second form returns a copy …\n",null,1],["encode","URI::Escape","Rails/classes/URI/Escape.html#method-i-encode","(*arg)","",null,1],["encode","XMLRPC::Base64","Rails/classes/XMLRPC/Base64.html#method-c-encode","(str)","",null,1],["encode!","ActionView::Template","Ruby/classes/ActionView/Template.html#method-i-encode-21","()","<p>This method is responsible for properly setting the encoding of the source.\nUntil this point, we assume …\n",null,0],["encode!","String","Rails/classes/String.html#method-i-encode-21","(*args)","<p>The first form transcodes the contents of <em>str</em> from str.encoding to\n<code>encoding</code>. The second form transcodes …\n",null,1],["encode64","ActiveSupport::Base64","Ruby/classes/ActiveSupport/Base64.html#method-c-encode64","(value)","",null,0],["encode64","Base64","Ruby/classes/Base64.html#method-c-encode64","(data)","<p>Encodes a string to its base 64 representation. Each 60 characters of\noutput is separated by a newline …\n",null,0],["encode64","Base64","Rails/classes/Base64.html#method-i-encode64","(bin)","<p>Returns the Base64-encoded version of <code>bin</code>. This method\ncomplies with RFC 2045. Line feeds are added to …\n",null,1],["encode64s","ActiveSupport::Base64","Ruby/classes/ActiveSupport/Base64.html#method-c-encode64s","(value)","",null,0],["encode_credentials","ActionController::HttpAuthentication::Basic","Ruby/classes/ActionController/HttpAuthentication/Basic.html#method-i-encode_credentials","(user_name, password)","",null,0],["encode_credentials","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-encode_credentials","(http_method, credentials, password, password_is_ha1)","",null,0],["encode_credentials","ActionController::HttpAuthentication::Token","Ruby/classes/ActionController/HttpAuthentication/Token.html#method-i-encode_credentials","(token, options = {})","<p>Encodes the given token and options into an Authorization header value.\n<p>token   - String token. options …\n",null,0],["encode_fallback","RDoc::Text","Rails/classes/RDoc/Text.html#method-c-encode_fallback","(character, encoding, fallback)","<p>Transcodes <code>character</code> to <code>encoding</code> with a\n<code>fallback</code> character.\n",null,1],["encode_json","ActiveSupport::JSON::Variable","Ruby/classes/ActiveSupport/JSON/Variable.html#method-i-encode_json","(encoder)","",null,0],["encode_json","FalseClass","Ruby/classes/FalseClass.html#method-i-encode_json","(encoder)","",null,0],["encode_json","Hash","Ruby/classes/Hash.html#method-i-encode_json","(encoder)","",null,0],["encode_json","NilClass","Ruby/classes/NilClass.html#method-i-encode_json","(encoder)","",null,0],["encode_json","Numeric","Ruby/classes/Numeric.html#method-i-encode_json","(encoder)","",null,0],["encode_json","String","Ruby/classes/String.html#method-i-encode_json","(encoder)","",null,0],["encode_json","TrueClass","Ruby/classes/TrueClass.html#method-i-encode_json","(encoder)","",null,0],["encode_utf7","Net::IMAP","Rails/classes/Net/IMAP.html#method-c-encode_utf7","(s)","<p>Encode a string from UTF-8 format to modified UTF-7.\n",null,1],["encode_with","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-encode_with","(coder)","<p>Populate <code>coder</code> with attributes about this record that should\nbe serialized. The structure of <code>coder</code> defined …\n",null,0],["encode_with","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-encode_with","(coder)","",null,0],["encode_with","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-encode_with","(coder)","",null,0],["encode_with","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-encode_with","(coder)","",null,0],["encode_with","BigDecimal","Ruby/classes/BigDecimal.html#method-i-encode_with","(coder)","",null,0],["encode_www_form","URI","Rails/classes/URI.html#method-c-encode_www_form","(enum)","<p>Generate URL-encoded form data from given <code>enum</code>.\n<p>This generates application/x-www-form-urlencoded data …\n",null,1],["encode_www_form_component","URI","Rails/classes/URI.html#method-c-encode_www_form_component","(str)","<p>Encode given <code>str</code> to URL-encoded form data.\n<p>This method doesn’t convert *, -, ., 0-9, A-Z, _, a-z, but …\n",null,1],["encoded","XMLRPC::Base64","Rails/classes/XMLRPC/Base64.html#method-i-encoded","()","",null,1],["encoding","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-encoding","()","<p>Returns the current database encoding format.\n",null,0],["encoding","IRB::FileInputMethod","Rails/classes/IRB/FileInputMethod.html#method-i-encoding","()","",null,1],["encoding","IRB::ReadlineInputMethod","Rails/classes/IRB/ReadlineInputMethod.html#method-i-encoding","()","",null,1],["encoding","IRB::StdioInputMethod","Rails/classes/IRB/StdioInputMethod.html#method-i-encoding","()","",null,1],["encoding","REXML::Document","Rails/classes/REXML/Document.html#method-i-encoding","()","<p>@return the XMLDecl encoding of this document as an Encoding object. If no\nXMLDecl has been set, returns …\n",null,1],["encoding","Regexp","Rails/classes/Regexp.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of obj.\n",null,1],["encoding","String","Rails/classes/String.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of obj.\n",null,1],["encoding","Symbol","Rails/classes/Symbol.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of <em>sym</em>.\n",null,1],["encoding=","Rails::Application::Configuration","Ruby/classes/Rails/Application/Configuration.html#method-i-encoding-3D","(value)","",null,0],["encoding=","REXML::Encoding","Rails/classes/REXML/Encoding.html#method-i-encoding-3D","(encoding)","",null,1],["encoding=","REXML::Source","Rails/classes/REXML/Source.html#method-i-encoding-3D","(enc)","<p>Inherited from Encoding Overridden to support optimized en/decoding\n",null,1],["encoding=","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-i-encoding-3D","( enc )","",null,1],["encoding_aware?","String","Ruby/classes/String.html#method-i-encoding_aware-3F","()","",null,0],["encrypt","ActiveSupport::MessageEncryptor","Ruby/classes/ActiveSupport/MessageEncryptor.html#method-i-encrypt","(value)","",null,0],["encrypt","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-encrypt","(*args)","<p>Initializes the Cipher for encryption.\n<p>Make sure to call Cipher#encrypt or Cipher#decrypt before using …\n",null,1],["encrypt","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-c-encrypt","(p1, p2, p3 = v3, p4 = v4)","",null,1],["encrypt_and_sign","ActiveSupport::MessageEncryptor","Ruby/classes/ActiveSupport/MessageEncryptor.html#method-i-encrypt_and_sign","(value)","<p>Encrypt and sign a message. We need to sign the message in order to avoid\npadding attacks. Reference: …\n",null,0],["end","MatchData","Rails/classes/MatchData.html#method-i-end","(p1)","<p>Returns the offset of the character immediately following the end of the\n<em>n</em>th element of the match array …\n",null,1],["end","Range","Rails/classes/Range.html#method-i-end","()","<p>Returns the object that defines the end of <em>rng</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">10</span>).<span class=\"ruby-identifier\">end</span>    <span class=\"ruby-comment\">#=&gt; 10</span>\n(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">...</span><span class=\"ruby-value\">10</span>).<span class=\"ruby-identifier\">end</span>   <span class=\"ruby-comment\">#=&gt; 10</span>\n</pre>\n",null,1],["end","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-end","()","<p>Closes the stream. All operations on the closed stream will raise an\nexception.\n",null,1],["endElement","RSS::REXMLLikeXMLParser","Rails/classes/RSS/REXMLLikeXMLParser.html#method-i-endElement","(name)","",null,1],["endElement","XMLRPC::XMLParser::StreamParserMixin","Rails/classes/XMLRPC/XMLParser/StreamParserMixin.html#method-i-endElement","(name)","",null,1],["end_accepting","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-end_accepting","()","<p>Returns the generated output\n",null,1],["end_accepting","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-end_accepting","()","<p>Returns the generated output\n",null,1],["end_accepting","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-end_accepting","()","<p>Returns an Array of items that were wrapped in plus, tt or code.\n",null,1],["end_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-end_document","()","",null,0],["end_document","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-end_document","(p1)","<p>End a document emission with an <code>implicit</code> ending.\n<p>See Psych::Handler#end_document\n",null,1],["end_document","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-end_document","(implicit)","<p>Called with the document ends.  <code>implicit</code> is a boolean value\nindicating whether or not the document has …\n",null,1],["end_document","Psych::TreeBuilder","Rails/classes/Psych/TreeBuilder.html#method-i-end_document","(implicit_end = !streaming?)","<p>Handles end_document events with <code>version</code>,\n<code>tag_directives</code>, and <code>implicit</code> styling.\n<p>See Psych::Handler#start_document …\n",null,1],["end_document","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-end_document","()","",null,1],["end_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-end_element","(name)","",null,0],["end_element","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-end_element","(uri, localname, qname)","",null,1],["end_element?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-end_element-3F","()","<p>Content: [ String tag_name ]\n",null,1],["end_mapping","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-end_mapping","()","<p>Emit the end of a mapping.\n<p>See Psych::Handler#end_mapping\n",null,1],["end_mapping","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-end_mapping","()","<p>Called when a map ends\n",null,1],["end_of_day","Date","Ruby/classes/Date.html#method-i-end_of_day","()","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the end of the day (23:59:59) …\n",null,0],["end_of_day","DateTime","Ruby/classes/DateTime.html#method-i-end_of_day","()","<p>Returns a new DateTime representing the end of the day (23:59:59)\n",null,0],["end_of_day","Time","Ruby/classes/Time.html#method-i-end_of_day","()","<p>Returns a new Time representing the end of the day, 23:59:59.999999\n(.999999999 in ruby1.9)\n",null,0],["end_of_hour","DateTime","Ruby/classes/DateTime.html#method-i-end_of_hour","()","<p>Returns a new DateTime representing the end of the hour (hh:59:59)\n",null,0],["end_of_hour","Time","Ruby/classes/Time.html#method-i-end_of_hour","()","<p>Returns a new Time representing the end of the hour, x:59:59.999999\n(.999999999 in ruby1.9)\n",null,0],["end_of_month","Date","Ruby/classes/Date.html#method-i-end_of_month","()","<p>Returns a new Date/DateTime representing the end of the month (last day of\nthe month; DateTime objects …\n",null,0],["end_of_month","Time","Ruby/classes/Time.html#method-i-end_of_month","()","<p>Returns a new Time representing the end of the month (end of the last day\nof the month)\n",null,0],["end_of_quarter","Date","Ruby/classes/Date.html#method-i-end_of_quarter","()","<p>Returns a new Date/DateTime representing the end of the quarter (last day\nof march, june, september, …\n",null,0],["end_of_quarter","Time","Ruby/classes/Time.html#method-i-end_of_quarter","()","<p>Returns a new Time representing the end of the quarter (end of the last day\nof march, june, september, …\n",null,0],["end_of_week","Date","Ruby/classes/Date.html#method-i-end_of_week","(start_day = :monday)","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the end\nof this week. Week is assumed to start on <code>start_day</code> …\n",null,0],["end_of_week","Time","Ruby/classes/Time.html#method-i-end_of_week","(start_day = :monday)","<p>Returns a new Time representing the end of this week, week starts on\nstart_day (default is :monday,  …\n",null,0],["end_of_year","Date","Ruby/classes/Date.html#method-i-end_of_year","()","<p>Returns a new Time representing the end of the year (31st of december;\nDateTime objects will have time …\n",null,0],["end_of_year","Time","Ruby/classes/Time.html#method-i-end_of_year","()","<p>Returns a new Time representing the end of the year (end of the 31st of\ndecember)\n",null,0],["end_prefix_mapping","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-end_prefix_mapping","(prefix)","",null,1],["end_sequence","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-end_sequence","()","<p>End sequence emission.\n<p>See Psych::Handler#end_sequence\n",null,1],["end_sequence","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-end_sequence","()","<p>Called when a sequence ends.\n",null,1],["end_stream","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-end_stream","()","<p>End a stream emission\n<p>See Psych::Handler#end_stream\n",null,1],["end_stream","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-end_stream","()","<p>Called when the YAML stream ends\n",null,1],["end_stream","Psych::TreeBuilder","Rails/classes/Psych/TreeBuilder.html#method-i-end_stream","()","",null,1],["end_transaction","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-end_transaction","()","",null,0],["end_with?","String","Rails/classes/String.html#method-i-end_with-3F","(*args)","<p>Returns true if <em>str</em> ends with one of the suffixes given.\n",null,1],["ended?","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-ended-3F","()","<p>Returns true if the stream is closed.\n",null,1],["endgrent","Etc","Rails/classes/Etc.html#method-c-endgrent","()","<p>Ends the process of scanning through the /etc/group file begun by getgrent,\nand closes the file.\n",null,1],["endpoint","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-endpoint","()","",null,0],["endpoint","Rails::Engine","Ruby/classes/Rails/Engine.html#method-c-endpoint","(endpoint = nil)","",null,0],["endpwent","Etc","Rails/classes/Etc.html#method-c-endpwent","()","<p>Ends the process of scanning through the /etc/passwd file begun with\ngetpwent, and closes the file.\n",null,1],["engine","ActiveSupport::JSON","Ruby/classes/ActiveSupport/JSON.html#method-c-engine","()","",null,0],["engine=","ActiveSupport::JSON","Ruby/classes/ActiveSupport/JSON.html#method-c-engine-3D","(name)","",null,0],["engines","Rails::Engine::Railties","Ruby/classes/Rails/Engine/Railties.html#method-c-engines","()","",null,0],["engines","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-c-engines","()","",null,1],["england","Date","Rails/classes/Date.html#method-i-england","()","<p>This method is equivalent to new_start(Date::ENGLAND).\n",null,1],["enhance","Rake::Task","Rails/classes/Rake/Task.html#method-i-enhance","(deps=nil, &block)","<p>Enhance a task with prerequisites or actions.  Returns self.\n",null,1],["enhance_with_matching_rule","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-enhance_with_matching_rule","(task_name, level=0)","<p>If a rule can be found that matches the task name, enhance the task with\nthe prerequisites and actions …\n",null,1],["enlist_fixture_connections","ActiveRecord::TestFixtures","Ruby/classes/ActiveRecord/TestFixtures.html#method-i-enlist_fixture_connections","()","",null,0],["enq","PrettyPrint::GroupQueue","Rails/classes/PrettyPrint/GroupQueue.html#method-i-enq","(group)","",null,1],["enq","Queue","Rails/classes/Queue.html#method-i-enq","(obj)","<p>Alias of push\n",null,1],["enq","SizedQueue","Rails/classes/SizedQueue.html#method-i-enq","(obj)","<p>Alias of push\n",null,1],["ensure_dependencies_met","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-ensure_dependencies_met","()","",null,1],["ensure_dependency","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-ensure_dependency","(spec, dependency)","<p>Ensure that the dependency is satisfied by the current installation of gem.\nIf it is not an exception …\n",null,1],["ensure_gem_subdirectories","Gem","Rails/classes/Gem.html#method-c-ensure_gem_subdirectories","(dir = Gem.dir)","<p>Quietly ensure the named Gem directory contains all the proper\nsubdirectories.  If we can’t create a …\n",null,1],["ensure_required_ruby_version_met","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-ensure_required_ruby_version_met","()","",null,1],["ensure_required_rubygems_version_met","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-ensure_required_rubygems_version_met","()","",null,1],["ensure_ssl_available","Gem","Rails/classes/Gem.html#method-c-ensure_ssl_available","()","<p>Ensure that SSL is available.  Throw an exception if it is not.\n",null,1],["ensure_xml_content","RSS::Maker::AtomTextConstructBase::EnsureXMLContent","Rails/classes/RSS/Maker/AtomTextConstructBase/EnsureXMLContent.html#method-i-ensure_xml_content","(content)","",null,1],["entity","Net::HTTPResponse","Rails/classes/Net/HTTPResponse.html#method-i-entity","()","",null,1],["entity","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-entity","( name )","",null,1],["entity","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-entity","( reference, entities )","",null,1],["entity","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-entity","(content)","<p>Called when %foo; is encountered in a doctype declaration. @p content “foo”\n",null,1],["entity?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-entity-3F","()","<p>Content: [ String text ]\n",null,1],["entity_class","DL::CStruct","Rails/classes/DL/CStruct.html#method-c-entity_class","()","",null,1],["entity_class","DL::CUnion","Rails/classes/DL/CUnion.html#method-c-entity_class","()","",null,1],["entity_expansion_limit","REXML::Document","Rails/classes/REXML/Document.html#method-c-entity_expansion_limit","()","<p>Get the entity expansion limit. By default the limit is set to 10000.\n",null,1],["entity_expansion_limit=","REXML::Document","Rails/classes/REXML/Document.html#method-c-entity_expansion_limit-3D","( val )","<p>Set the entity expansion limit. By default the limit is set to 10000.\n",null,1],["entity_expansion_text_limit","REXML","Rails/classes/REXML.html#method-c-entity_expansion_text_limit","()","<p>Get the entity expansion limit. By default the limit is set to 10240.\n",null,1],["entity_expansion_text_limit","REXML::Document","Rails/classes/REXML/Document.html#method-c-entity_expansion_text_limit","()","<p>Get the entity expansion limit. By default the limit is set to 10000.\n<p>Deprecated. Use REXML.entity_expansion_text_limit …\n",null,1],["entity_expansion_text_limit=","REXML","Rails/classes/REXML.html#method-c-entity_expansion_text_limit-3D","( val )","<p>Set the entity expansion limit. By default the limit is set to 10240.\n",null,1],["entity_expansion_text_limit=","REXML::Document","Rails/classes/REXML/Document.html#method-c-entity_expansion_text_limit-3D","( val )","<p>Set the entity expansion limit. By default the limit is set to 10240.\n<p>Deprecated. Use REXML.entity_expansion_text_limit= …\n",null,1],["entitydecl","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-entitydecl","(name, decl)","<p>&lt;!ENTITY …&gt; The argument passed to this method is an array of the\nentity declaration.  It can …\n",null,1],["entitydecl","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-entitydecl","(content)","<p>&lt;!ENTITY …&gt; The argument passed to this method is an array of the\nentity declaration.  It can …\n",null,1],["entitydecl?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-entitydecl-3F","()","<p>Due to the wonders of DTDs, an entity declaration can be just about\nanything.  There’s no way to normalize …\n",null,1],["entries","Dir","Rails/classes/Dir.html#method-c-entries","(*args)","<p>Returns an array containing all of the filenames in the given directory.\nWill raise a <code>SystemCallError</code> …\n",null,1],["entries","Enumerable","Rails/classes/Enumerable.html#method-i-entries","(*args)","<p>Returns an array containing the items in <em>enum</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">7</span>).<span class=\"ruby-identifier\">to_a</span>                       <span class=\"ruby-comment\">#=&gt; [1, 2, 3, 4, 5, 6, ...</span>\n</pre>\n",null,1],["entries","Pathname","Rails/classes/Pathname.html#method-i-entries","()","<p>Return the entries (files and subdirectories) in the directory, each as a\nPathname object.\n<p>The result …\n",null,1],["entry","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","Ruby/classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#method-i-entry","(record, options = {})","<p>Creates an entry tag for a specific record and prefills the id using class\nand id.\n<p>Options:\n<p><code>:published</code> ...\n",null,0],["enum_for","Object","Rails/classes/Object.html#method-i-enum_for","(*args)","<p>Creates a new Enumerator which will enumerate by on calling\n<code>method</code> on <code>obj</code>.\n<p><code>method</code> &mdash; the method to call on …\n",null,1],["enumerate","SourceAnnotationExtractor","Ruby/classes/SourceAnnotationExtractor.html#method-c-enumerate","(tag, options={})","<p>Prints all annotations with tag <code>tag</code> under the root directories\n<code>app</code>, <code>config</code>, <code>lib</code>,\n<code>script</code>, and <code>test</code> (recursively). …\n",null,0],["env","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-env","()","",null,0],["env","Rails","Ruby/classes/Rails.html#method-c-env","()","",null,0],["env=","Rails","Ruby/classes/Rails.html#method-c-env-3D","(environment)","",null,0],["env_config","Rails::Application","Ruby/classes/Rails/Application.html#method-i-env_config","()","<p>Rails.application.env_config stores some of the Rails initial environment\nparameters. Currently stores: …\n",null,0],["env_config","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-env_config","()","",null,0],["env_filter","ActionDispatch::Http::FilterParameters","Ruby/classes/ActionDispatch/Http/FilterParameters.html#method-i-env_filter","()","",null,0],["environment","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-environment","(data=nil, options={}, &block)","<p>Adds a line inside the Application class for config/application.rb.\n<p>If options :env is specified, the …\n",null,0],["environment","OptionParser","Rails/classes/OptionParser.html#method-i-environment","(env = File.basename($0, '.*'))","<p>Parses environment variable <code>env</code> or its uppercase with\nsplitting like a shell.\n<p><code>env</code> defaults to the basename ...\n",null,1],["environment=","Rails::Commands::Plugin","Ruby/classes/Rails/Commands/Plugin.html#method-i-environment-3D","(value)","",null,0],["eof","ARGF","Rails/classes/ARGF.html#method-i-eof","()","<p>Returns true if the current file in <code>ARGF</code> is at end of file,\ni.e. it has no data to read. The stream must …\n",null,1],["eof","IO","Rails/classes/IO.html#method-i-eof","()","<p>Returns true if <em>ios</em> is at end of file that means there are no more\ndata to read. The stream must be opened …\n",null,1],["eof","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-eof","()","",null,1],["eof","StringIO","Rails/classes/StringIO.html#method-i-eof","()","<p>Returns true if <strong>strio</strong> is at end of file. The stringio must\nbe opened for reading or an <code>IOError</code> will be …\n",null,1],["eof","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-eof","()","<p>Returns <code>true</code> or <code>false</code> whether the stream has\nreached the end.\n",null,1],["eof?","ARGF","Rails/classes/ARGF.html#method-i-eof-3F","()","<p>Returns true if the current file in <code>ARGF</code> is at end of file,\ni.e. it has no data to read. The stream must …\n",null,1],["eof?","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-eof-3F","()","<p>Are we at the end of the tar entry?\n",null,1],["eof?","IO","Rails/classes/IO.html#method-i-eof-3F","()","<p>Returns true if <em>ios</em> is at end of file that means there are no more\ndata to read. The stream must be opened …\n",null,1],["eof?","IRB::FileInputMethod","Rails/classes/IRB/FileInputMethod.html#method-i-eof-3F","()","",null,1],["eof?","IRB::ReadlineInputMethod","Rails/classes/IRB/ReadlineInputMethod.html#method-i-eof-3F","()","",null,1],["eof?","IRB::StdioInputMethod","Rails/classes/IRB/StdioInputMethod.html#method-i-eof-3F","()","",null,1],["eof?","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-eof-3F","()","<p>Returns true if the stream is at file which means there is no more data to\nbe read.\n",null,1],["eof?","RubyLex","Rails/classes/RubyLex.html#method-i-eof-3F","()","",null,1],["eof?","StringIO","Rails/classes/StringIO.html#method-i-eof-3F","()","<p>Returns true if <strong>strio</strong> is at end of file. The stringio must\nbe opened for reading or an <code>IOError</code> will be …\n",null,1],["eof?","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-eof-3F","()","",null,1],["eof?","XMP::StringInputMethod","Rails/classes/XMP/StringInputMethod.html#method-i-eof-3F","()","",null,1],["eof?","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-eof-3F","()","<p>Returns <code>true</code> or <code>false</code> whether the stream has\nreached the end.\n",null,1],["eos?","StringScanner","Rails/classes/StringScanner.html#method-i-eos-3F","()","<p>Returns <code>true</code> if the scan pointer is at the end of the string.\n\n<pre>s = StringScanner.new('test string')\np s.eos? ...</pre>\n",null,1],["eql?","ActionView::FileSystemResolver","Ruby/classes/ActionView/FileSystemResolver.html#method-i-eql-3F","(resolver)","",null,0],["eql?","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-eql-3F","(comparison_object)","",null,0],["eql?","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-eql-3F","(other)","<p>Tests for equality (delegates to ==).\n",null,0],["eql?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-eql-3F","(other)","",null,0],["eql?","Time","Ruby/classes/Time.html#method-i-eql-3F","(other)","",null,0],["eql?","Array","Rails/classes/Array.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <code>self</code> and <em>other</em> are the\nsame object, or are both arrays with the same content.\n",null,1],["eql?","BigDecimal","Rails/classes/BigDecimal.html#method-i-eql-3F","(p1)","<p>Tests for value equality; returns true if the values are equal.\n<p>The == and === operators and the eql? …\n",null,1],["eql?","Bignum","Rails/classes/Bignum.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a <code>Bignum</code>\nwith the same value as <em>big</em>. Contrast this with\n<code>Bignum#==</code>, which …\n",null,1],["eql?","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-eql-3F","(p1)","<p>Returns true if <code>other</code> wraps the same pointer, otherwise\nreturns false.\n",null,1],["eql?","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-eql-3F","(p1)","<p>Returns true if <code>other</code> wraps the same pointer, otherwise\nreturns false.\n",null,1],["eql?","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-i-eql-3F","(other)","",null,1],["eql?","Float","Rails/classes/Float.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a <code>Float</code> with\nthe same value as <em>flt</em>. Contrast this with <code>Float#==</code>,\nwhich performs …\n",null,1],["eql?","Gem::Platform","Rails/classes/Gem/Platform.html#method-i-eql-3F","(other)","",null,1],["eql?","Gem::Version","Rails/classes/Gem/Version.html#method-i-eql-3F","(other)","<p>A Version is only eql? to another version if it’s specified to the same\nprecision. Version “1.0 …\n",null,1],["eql?","Hash","Rails/classes/Hash.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <em>hash</em> and <em>other</em> are both\nhashes with the same content.\n",null,1],["eql?","IPAddr","Rails/classes/IPAddr.html#method-i-eql-3F","(other)","<p>Checks equality used by Hash.\n",null,1],["eql?","MatchData","Rails/classes/MatchData.html#method-i-eql-3F","(p1)","<p>Equality—Two matchdata are equal if their target strings, patterns, and\nmatched positions are identical. …\n",null,1],["eql?","Matrix","Rails/classes/Matrix.html#method-i-eql-3F","(other)","",null,1],["eql?","Method","Rails/classes/Method.html#method-i-eql-3F","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition. …\n",null,1],["eql?","Numeric","Rails/classes/Numeric.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <em>num</em> and <em>numeric</em> are the same\ntype and have equal values.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-value\">1.0</span>          <span class=\"ruby-comment\">#=&gt; true</span>\n<span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">eql?</span>(<span class=\"ruby-value\">1.0</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["eql?","Object","Rails/classes/Object.html#method-i-eql-3F","(p1)","<p>Equality—At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <em>obj</em> and <em>other</em> are the same\nobject. Typically …\n",null,1],["eql?","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-eql-3F","(p1)","",null,1],["eql?","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-eql-3F","(p1)","",null,1],["eql?","OpenSSL::PKey::EC::Point","Rails/classes/OpenSSL/PKey/EC/Point.html#method-i-eql-3F","(p1)","",null,1],["eql?","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-i-eql-3F","(p1)","",null,1],["eql?","Pathname","Rails/classes/Pathname.html#method-i-eql-3F","(p1)","<p>Compare this pathname with <code>other</code>.  The comparison is\nstring-based. Be aware that two different paths …\n",null,1],["eql?","Proc","Rails/classes/Proc.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <em>prc</em> is the same object as\n<em>other_proc</em>, or if they are both procs with the same body.\n",null,1],["eql?","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-eql-3F","(other)","",null,1],["eql?","Range","Rails/classes/Range.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a Range, has equivalent\nbeginning and end items (by comparing them with  …\n",null,1],["eql?","Regexp","Rails/classes/Regexp.html#method-i-eql-3F","(p1)","<p>Equality—Two regexps are equal if their patterns are identical, they have\nthe same character set code, …\n",null,1],["eql?","String","Rails/classes/String.html#method-i-eql-3F","(p1)","<p>Two strings are equal if they have the same length and content.\n",null,1],["eql?","Struct","Rails/classes/Struct.html#method-i-eql-3F","(p1)","<p>code-seq:\n\n<pre>struct.eql?(other)   -&gt; true or false</pre>\n<p>Two structures are equal if they are the same object, or …\n",null,1],["eql?","Time","Rails/classes/Time.html#method-i-eql-3F","(p1)","<p>Return <code>true</code> if <em>time</em> and <em>other_time</em> are both\n<code>Time</code> objects with the same seconds and fractional seconds. …\n",null,1],["eql?","URI::Generic","Rails/classes/URI/Generic.html#method-i-eql-3F","(oth)","",null,1],["eql?","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-eql-3F","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition. …\n",null,1],["eql?","Vector","Rails/classes/Vector.html#method-i-eql-3F","(other)","",null,1],["eql_with_coercion","Time","Ruby/classes/Time.html#method-i-eql_with_coercion","(other)","<p>Layers additional behavior on Time#eql? so that ActiveSupport::TimeWithZone\ninstances can be eql? to …\n",null,0],["eql_without_coercion","Time","Ruby/classes/Time.html#method-i-eql_without_coercion","(other)","",null,0],["equal?","BasicObject","Rails/classes/BasicObject.html#method-i-equal-3F","(p1)","<p>Equality—At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <em>obj</em> and <em>other</em> are the same\nobject. Typically …\n",null,1],["erf","Math","Rails/classes/Math.html#method-c-erf","(p1)","<p>Calculates the error function of x.\n",null,1],["erfc","Math","Rails/classes/Math.html#method-c-erfc","(p1)","<p>Calculates the complementary error function of x.\n",null,1],["errno","SystemCallError","Rails/classes/SystemCallError.html#method-i-errno","()","<p>Return this SystemCallError’s error number.\n",null,1],["error","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-error","(error_message)","",null,0],["error","GServer","Rails/classes/GServer.html#method-i-error","(detail)","<p>Called if #debug is true whenever an unhandled exception is raised. This\nimplementation simply logs the …\n",null,1],["error","Gem::MockGemUi","Rails/classes/Gem/MockGemUi.html#method-i-error","()","",null,1],["error","Logger","Rails/classes/Logger.html#method-i-error","(progname = nil, &block)","<p>Log an <code>ERROR</code> message.\n<p>See #info for more information.\n",null,1],["error","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-error","(msg)","<p>Aborts with <code>msg</code>\n",null,1],["error","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-error","(msg)","<p>Report an error message and exit\n",null,1],["error","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-error","(msg)","<p>Shortcut for logging an ERROR message\n",null,1],["error?","Logger","Rails/classes/Logger.html#method-i-error-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>ERROR</code> messages.\n",null,1],["error?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-error-3F","()","",null,1],["error?","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-error-3F","()","<p>Will the logger output ERROR messages?\n",null,1],["error?","WEBrick::HTTPStatus","Rails/classes/WEBrick/HTTPStatus.html#method-c-error-3F","(code)","<p>Is <code>code</code> an error status?\n",null,1],["error_bytes","Encoding::InvalidByteSequenceError","Rails/classes/Encoding/InvalidByteSequenceError.html#method-i-error_bytes","()","<p>Returns the discarded bytes when Encoding::InvalidByteSequenceError occurs.\n\n<pre>ec = Encoding::Converter.new(&quot;EUC-JP&quot;, ...</pre>\n",null,1],["error_char","Encoding::UndefinedConversionError","Rails/classes/Encoding/UndefinedConversionError.html#method-i-error_char","()","<p>Returns the one-character string which cause\nEncoding::UndefinedConversionError.\n\n<pre>ec = Encoding::Converter.new(&quot;ISO-8859-1&quot;, ...</pre>\n",null,1],["error_message","ActionView::Helpers::ActiveModelInstanceTag","Ruby/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-error_message","()","",null,0],["error_message","GetoptLong","Rails/classes/GetoptLong.html#method-i-error_message","()","<p>Return the appropriate error message in POSIX-defined format. If no error\nhas occurred, returns nil. …\n",null,1],["error_number","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-error_number","(exception)","",null,0],["error_wrapping","ActionView::Helpers::ActiveModelInstanceTag","Ruby/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-error_wrapping","(html_tag)","",null,0],["errors","ActiveModel::Validations","Ruby/classes/ActiveModel/Validations.html#method-i-errors","()","<p>Returns the <code>Errors</code> object that holds all information about\nattribute error messages.\n",null,0],["errors","ActiveResource::Validations","Ruby/classes/ActiveResource/Validations.html#method-i-errors","()","<p>Returns the Errors object that holds all information about attribute error\nmessages.\n",null,0],["errors","Rails::Generators::ActiveModel","Ruby/classes/Rails/Generators/ActiveModel.html#method-i-errors","()","<p>POST create PUT update\n",null,0],["errors","OpenSSL","Rails/classes/OpenSSL.html#method-c-errors","()","<p>See any remaining errors held in queue.\n<p>Any errors you see here are probably due to a bug in ruby’s OpenSSL …\n",null,1],["escape","ActiveSupport::JSON::Encoding::Encoder","Ruby/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-escape","(string)","",null,0],["escape","CGI","Rails/classes/CGI.html#method-c-escape","(string)","<p>URL-encode a string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">url_encoded_string</span> = <span class=\"ruby-constant\">CGI</span><span class=\"ruby-operator\">::</span><span class=\"ruby-identifier\">escape</span>(<span class=\"ruby-string\">&quot;'Stop!' said Fred&quot;</span>)\n   <span class=\"ruby-comment\"># =&gt; &quot;%27Stop%21%27+said+Fred&quot;</span>\n</pre>\n",null,1],["escape","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-escape","(str)","",null,1],["escape","Regexp","Rails/classes/Regexp.html#method-c-escape","(p1)","<p>Escapes any characters that would have special meaning in a regular\nexpression. Returns a new escaped …\n",null,1],["escape","Shellwords","Rails/classes/Shellwords.html#method-c-escape","(str)","",null,1],["escape","URI::Escape","Rails/classes/URI/Escape.html#method-i-escape","(*arg)","<p>Synopsis\n\n<pre>URI.escape(str [, unsafe])</pre>\n<p>Args\n",null,1],["escape","URI::Parser","Rails/classes/URI/Parser.html#method-i-escape","(str, unsafe = @regexp[:UNSAFE])","<p>Args\n<p><code>str</code> &mdash; String to make safe\n<p><code>unsafe</code> &mdash; Regexp to apply. Defaults to self.regexp\n",null,1],["escape","WEBrick::AccessLog","Rails/classes/WEBrick/AccessLog.html#method-i-escape","(data)","",null,1],["escape","WEBrick::HTMLUtils","Rails/classes/WEBrick/HTMLUtils.html#method-c-escape","(string)","<p>Escapes &amp;, “, &gt; and &lt; in <code>string</code>\n",null,1],["escape","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-i-escape","(str)","",null,1],["escape8bit","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-i-escape8bit","(str)","",null,1],["escapeElement","CGI","Rails/classes/CGI.html#method-c-escapeElement","(string, *elements)","<p>Escape only the tags of certain HTML elements in <code>string</code>.\n<p>Takes an element or elements or array of elements. …\n",null,1],["escapeHTML","CGI","Rails/classes/CGI.html#method-c-escapeHTML","(string)","<p>Escape special characters in HTML, namely &amp;“&lt;&gt;\n\n<pre>CGI::escapeHTML('Usage: foo &quot;bar&quot; &lt;baz&gt;')\n   ...</pre>\n",null,1],["escape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-escape_bytea","(value)","<p>Escapes binary strings for bytea input to the database.\n",null,0],["escape_element","CGI","Rails/classes/CGI.html#method-c-escape_element","(str)","<p>Synonym for CGI::escapeElement(str)\n",null,1],["escape_form","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-i-escape_form","(str)","",null,1],["escape_glob_chars","ActionDispatch::FileHandler","Ruby/classes/ActionDispatch/FileHandler.html#method-i-escape_glob_chars","(path)","",null,0],["escape_html","CGI","Rails/classes/CGI.html#method-c-escape_html","(str)","<p>Synonym for CGI::escapeHTML(str)\n",null,1],["escape_javascript","ActionView::Helpers::JavaScriptHelper","Ruby/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-escape_javascript","(javascript)","<p>Escapes carriage returns and single and double quotes for JavaScript\nsegments.\n<p>Also available through …\n",null,0],["escape_once","ActionView::Helpers::TagHelper","Ruby/classes/ActionView/Helpers/TagHelper.html#method-i-escape_once","(html)","<p>Returns an escaped version of <code>html</code> without affecting existing\nescaped entities.\n<p>Examples\n\n<pre>escape_once(&quot;1 ...</pre>\n",null,0],["escape_path","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-i-escape_path","(str)","",null,1],["establish_connection","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-establish_connection","(spec = ENV[\"DATABASE_URL\"])","<p>Establishes the connection to the database. Accepts a hash as input where\nthe <code>:adapter</code> key must be specified …\n",null,0],["establish_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-establish_connection","(name, spec)","",null,0],["etag=","ActionDispatch::Http::Cache::Response","Ruby/classes/ActionDispatch/Http/Cache/Response.html#method-i-etag-3D","(etag)","",null,0],["etag_matches?","ActionDispatch::Http::Cache::Request","Ruby/classes/ActionDispatch/Http/Cache/Request.html#method-i-etag_matches-3F","(etag)","",null,0],["euid","Process","Rails/classes/Process.html#method-c-euid","()","<p>Returns the effective user ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">euid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,1],["euid=","Process","Rails/classes/Process.html#method-c-euid-3D","(p1)","<p>Sets the effective user ID for this process. Not available on all\nplatforms.\n",null,1],["eval","Binding","Rails/classes/Binding.html#method-i-eval","(p1, p2 = v2, p3 = v3)","<p>Evaluates the Ruby expression(s) in <em>string</em>, in the\n<em>binding</em>’s context.  If the optional <em>filename</em> and  …\n",null,1],["eval","Kernel","Rails/classes/Kernel.html#method-i-eval","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Evaluates the Ruby expression(s) in <em>string</em>. If <em>binding</em> is\ngiven, which must be a <code>Binding</code> object, the …\n",null,1],["eval","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-i-eval","()","",null,1],["eval_history=","IRB::Context","Rails/classes/IRB/Context.html#method-i-eval_history-3D","(no)","",null,1],["eval_input","IRB::Irb","Rails/classes/IRB/Irb.html#method-i-eval_input","()","",null,1],["evaluate","IRB::Context","Rails/classes/IRB/Context.html#method-i-evaluate","(line, line_no)","",null,1],["evaluate","IRB::WorkSpace","Rails/classes/IRB/WorkSpace.html#method-i-evaluate","(context, statements, file = nil, line = nil)","",null,1],["evaluate_default_scope","ActiveRecord::Scoping::Default::ClassMethods","Ruby/classes/ActiveRecord/Scoping/Default/ClassMethods.html#method-i-evaluate_default_scope","()","<p>The ignore_default_scope flag is used to prevent an infinite recursion\nsituation where a default scope …\n",null,0],["even?","Bignum","Rails/classes/Bignum.html#method-i-even-3F","()","<p>Returns <code>true</code> if <em>big</em> is an even number.\n",null,1],["even?","Fixnum","Rails/classes/Fixnum.html#method-i-even-3F","()","<p>Returns <code>true</code> if <em>fix</em> is an even number.\n",null,1],["even?","Integer","Rails/classes/Integer.html#method-i-even-3F","()","<p>Returns <code>true</code> if <em>int</em> is an even number.\n",null,1],["event?","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-event-3F","()","<p>Returns true if the method is event.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook') ...</pre>\n",null,1],["event_interface","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-event_interface","()","<p>Returns event interface name if the method is event.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object ...</pre>\n",null,1],["event_type","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-event_type","()","",null,1],["exabyte","Numeric","Ruby/classes/Numeric.html#method-i-exabyte","()","",null,0],["exabytes","Numeric","Ruby/classes/Numeric.html#method-i-exabytes","()","",null,0],["examine","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-examine","(mailbox)","<p>Sends a EXAMINE command to select a <code>mailbox</code> so that messages\nin the <code>mailbox</code> can be accessed.  Behaves …\n",null,1],["except","ActiveRecord::SpawnMethods","Ruby/classes/ActiveRecord/SpawnMethods.html#method-i-except","(*skips)","<p>Removes from the query the condition(s) specified in <code>skips</code>.\n<p>Example:\n\n<pre>Post.order('id asc').except(:order) ...</pre>\n",null,0],["except","Hash","Ruby/classes/Hash.html#method-i-except","(*keys)","<p>Return a hash that includes everything but the given keys. This is useful\nfor limiting a set of parameters …\n",null,0],["except!","Hash","Ruby/classes/Hash.html#method-i-except-21","(*keys)","<p>Replaces the hash without the given keys.\n",null,0],["exception","DRb::DRbUnknown","Rails/classes/DRb/DRbUnknown.html#method-i-exception","()","<p>Create a DRbUnknownError exception containing this object.\n",null,1],["exception","Exception","Rails/classes/Exception.html#method-i-exception","(*args)","<p>With no argument, or if the argument is the same as the receiver, return\nthe receiver. Otherwise, create ...\n",null,1],["exception","Exception","Rails/classes/Exception.html#method-c-exception","(*args)","<p>With no argument, or if the argument is the same as the receiver, return\nthe receiver. Otherwise, create ...\n",null,1],["exception_class","Net::SMTP::Response","Rails/classes/Net/SMTP/Response.html#method-i-exception_class","()","<p>Determines whether there was an error and raies the appropriate error based\non the reply code of the …\n",null,1],["excerpt","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-excerpt","(text, phrase, *args)","<p>Extracts an excerpt from <code>text</code> that matches the first instance\nof <code>phrase</code>. The <code>:radius</code> option expands the …\n",null,0],["exclude","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-exclude","(*patterns, &block)","<p>Register a list of file name patterns that should be excluded from the\nlist.  Patterns may be regular …\n",null,1],["exclude?","Enumerable","Ruby/classes/Enumerable.html#method-i-exclude-3F","(object)","<p>The negative of the <code>Enumerable#include?</code>. Returns true if the\ncollection does not include the object. …\n",null,0],["exclude?","String","Ruby/classes/String.html#method-i-exclude-3F","(string)","<p>The inverse of <code>String#include?</code>. Returns true if the string\ndoes not include the other string.\n\n<pre>&quot;hello&quot;.exclude? ...</pre>\n",null,0],["exclude_end?","Range","Rails/classes/Range.html#method-i-exclude_end-3F","()","<p>Returns <code>true</code> if <em>rng</em> excludes its end value.\n",null,1],["exclusive","Thread","Rails/classes/Thread.html#method-c-exclusive","()","<p>Wraps a block in Thread.critical, restoring the original value upon exit\nfrom the critical section, and …\n",null,1],["excn_handle","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-excn_handle","(file, line, id, binding)","",null,1],["exec","Kernel","Rails/classes/Kernel.html#method-i-exec","(*args)","<p>Replaces the current process by running the given external\n<em>command</em>. <em>command…</em> is one of following forms. …\n",null,1],["exec","Process","Rails/classes/Process.html#method-c-exec","(*args)","<p>Replaces the current process by running the given external\n<em>command</em>. <em>command…</em> is one of following forms. …\n",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_delete","(sql, name, binds)","<p>Executes delete <code>sql</code> statement in the context of this\nconnection using <code>binds</code> as the bind substitutes. …\n",null,0],["exec_delete","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_delete","(sql, name, binds)","",null,0],["exec_delete","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-exec_delete","(sql, name, binds)","",null,0],["exec_delete","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-exec_delete","(sql, name = 'SQL', binds = [])","",null,0],["exec_delete","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-exec_delete","(sql, name = 'SQL', binds = [])","",null,0],["exec_format","Gem::Installer","Rails/classes/Gem/Installer.html#method-c-exec_format","()","<p>Defaults to use Ruby’s program prefix and suffix.\n",null,1],["exec_if","IRB::Notifier::AbstractNotifier","Rails/classes/IRB/Notifier/AbstractNotifier.html#method-i-exec_if","()","",null,1],["exec_insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_insert","(sql, name, binds)","<p>Executes insert <code>sql</code> statement in the context of this\nconnection using <code>binds</code> as the bind substitutes. …\n",null,0],["exec_insert","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_insert","(sql, name, binds)","",null,0],["exec_query","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","<p>Executes <code>sql</code> statement in the context of this connection using\n<code>binds</code> as the bind substitutes. <code>name</code> is …\n",null,0],["exec_query","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","",null,0],["exec_query","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","",null,0],["exec_query","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","",null,0],["exec_query","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-exec_query","(sql, name = nil, binds = [])","",null,0],["exec_script_rails!","Rails::ScriptRailsLoader","Ruby/classes/Rails/ScriptRailsLoader.html#method-c-exec_script_rails-21","()","",null,0],["exec_update","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_update","(sql, name, binds)","<p>Executes update <code>sql</code> statement in the context of this\nconnection using <code>binds</code> as the bind substitutes. …\n",null,0],["exec_update","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_update","(sql, name, binds)","",null,0],["exec_update","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-exec_update","(sql, name, binds)","",null,0],["exec_update","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-exec_update","(sql, name = 'SQL', binds = [])","",null,0],["exec_update","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-exec_update","(sql, name = 'SQL', binds = [])","",null,0],["exec_without_stmt","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_without_stmt","(sql, name = 'SQL', binds = [])","",null,0],["executable","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-executable","()","<p>Singular accessor for #executables\n",null,1],["executable=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-executable-3D","(o)","<p>Singular accessor for #executables\n",null,1],["executable?","File","Rails/classes/File.html#method-c-executable-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the effective\nuser id of this process.\n",null,1],["executable?","File::Stat","Rails/classes/File/Stat.html#method-i-executable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is executable or if the\noperating system doesn’t distinguish executable files from …\n",null,1],["executable?","FileTest","Rails/classes/FileTest.html#method-i-executable-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the effective\nuser id of this process.\n",null,1],["executable?","Pathname","Rails/classes/Pathname.html#method-i-executable-3F","()","<p>See <code>FileTest.executable?</code>.\n",null,1],["executable_real?","File","Rails/classes/File.html#method-c-executable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the real user\nid of this process.\n",null,1],["executable_real?","File::Stat","Rails/classes/File/Stat.html#method-i-executable_real-3F","()","<p>Same as <code>executable?</code>, but tests using the real owner of the\nprocess.\n",null,1],["executable_real?","FileTest","Rails/classes/FileTest.html#method-i-executable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the real user\nid of this process.\n",null,1],["executable_real?","Pathname","Rails/classes/Pathname.html#method-i-executable_real-3F","()","<p>See <code>FileTest.executable_real?</code>.\n",null,1],["executables","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-executables","()","<p>Executables included in the gem.\n",null,1],["executables=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-executables-3D","(value)","<p>Sets executables to <code>value</code>, ensuring it is an array. Don’t use\nthis, push onto the array instead.\n",null,1],["execute","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-execute","(sql, name = nil)","<p>Executes the SQL statement in the context of this connection.\n",null,0],["execute","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-execute","(sql, name = nil)","<p>Executes the SQL statement in the context of this connection.\n",null,0],["execute","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-execute","(sql, name = nil)","<p>Executes the SQL statement in the context of this connection.\n",null,0],["execute","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-execute","(sql, name = nil)","<p>Executes an SQL statement, returning a PGresult object on success or\nraising a PGError exception otherwise. …\n",null,0],["execute","ActiveSupport::FileUpdateChecker","Ruby/classes/ActiveSupport/FileUpdateChecker.html#method-i-execute","()","<p>Executes the given block and updates the counter to latest timestamp.\n",null,0],["execute","Gem::Command","Rails/classes/Gem/Command.html#method-i-execute","()","<p>Override to provide command handling.\n<p>#options will be filled in with your parsed options, unparsed options …\n",null,1],["execute","Gem::Commands::BuildCommand","Rails/classes/Gem/Commands/BuildCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::CertCommand","Rails/classes/Gem/Commands/CertCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::CheckCommand","Rails/classes/Gem/Commands/CheckCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::CleanupCommand","Rails/classes/Gem/Commands/CleanupCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::ContentsCommand","Rails/classes/Gem/Commands/ContentsCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::DependencyCommand","Rails/classes/Gem/Commands/DependencyCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::EnvironmentCommand","Rails/classes/Gem/Commands/EnvironmentCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::FetchCommand","Rails/classes/Gem/Commands/FetchCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::GenerateIndexCommand","Rails/classes/Gem/Commands/GenerateIndexCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::HelpCommand","Rails/classes/Gem/Commands/HelpCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::InstallCommand","Rails/classes/Gem/Commands/InstallCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::ListCommand","Rails/classes/Gem/Commands/ListCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::LockCommand","Rails/classes/Gem/Commands/LockCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::OutdatedCommand","Rails/classes/Gem/Commands/OutdatedCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::OwnerCommand","Rails/classes/Gem/Commands/OwnerCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::PristineCommand","Rails/classes/Gem/Commands/PristineCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::PushCommand","Rails/classes/Gem/Commands/PushCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::QueryCommand","Rails/classes/Gem/Commands/QueryCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::RdocCommand","Rails/classes/Gem/Commands/RdocCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::SearchCommand","Rails/classes/Gem/Commands/SearchCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::ServerCommand","Rails/classes/Gem/Commands/ServerCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::SourcesCommand","Rails/classes/Gem/Commands/SourcesCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::SpecificationCommand","Rails/classes/Gem/Commands/SpecificationCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::StaleCommand","Rails/classes/Gem/Commands/StaleCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::UninstallCommand","Rails/classes/Gem/Commands/UninstallCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::UnpackCommand","Rails/classes/Gem/Commands/UnpackCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::UpdateCommand","Rails/classes/Gem/Commands/UpdateCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::WhichCommand","Rails/classes/Gem/Commands/WhichCommand.html#method-i-execute","()","",null,1],["execute","IRB::ExtendCommand::ChangeWorkspace","Rails/classes/IRB/ExtendCommand/ChangeWorkspace.html#method-i-execute","(*obj)","",null,1],["execute","IRB::ExtendCommand::CurrentWorkingWorkspace","Rails/classes/IRB/ExtendCommand/CurrentWorkingWorkspace.html#method-i-execute","(*obj)","",null,1],["execute","IRB::ExtendCommand::Foreground","Rails/classes/IRB/ExtendCommand/Foreground.html#method-i-execute","(key)","",null,1],["execute","IRB::ExtendCommand::Fork","Rails/classes/IRB/ExtendCommand/Fork.html#method-i-execute","(&block)","",null,1],["execute","IRB::ExtendCommand::Help","Rails/classes/IRB/ExtendCommand/Help.html#method-i-execute","(*names)","",null,1],["execute","IRB::ExtendCommand::IrbCommand","Rails/classes/IRB/ExtendCommand/IrbCommand.html#method-i-execute","(*obj)","",null,1],["execute","IRB::ExtendCommand::Jobs","Rails/classes/IRB/ExtendCommand/Jobs.html#method-i-execute","()","",null,1],["execute","IRB::ExtendCommand::Kill","Rails/classes/IRB/ExtendCommand/Kill.html#method-i-execute","(*keys)","",null,1],["execute","IRB::ExtendCommand::Load","Rails/classes/IRB/ExtendCommand/Load.html#method-i-execute","(file_name, priv = nil)","",null,1],["execute","IRB::ExtendCommand::Nop","Rails/classes/IRB/ExtendCommand/Nop.html#method-i-execute","(*opts)","",null,1],["execute","IRB::ExtendCommand::Nop","Rails/classes/IRB/ExtendCommand/Nop.html#method-c-execute","(conf, *opts)","",null,1],["execute","IRB::ExtendCommand::PopWorkspace","Rails/classes/IRB/ExtendCommand/PopWorkspace.html#method-i-execute","(*obj)","",null,1],["execute","IRB::ExtendCommand::PushWorkspace","Rails/classes/IRB/ExtendCommand/PushWorkspace.html#method-i-execute","(*obj)","",null,1],["execute","IRB::ExtendCommand::Require","Rails/classes/IRB/ExtendCommand/Require.html#method-i-execute","(file_name)","",null,1],["execute","IRB::ExtendCommand::Source","Rails/classes/IRB/ExtendCommand/Source.html#method-i-execute","(file_name)","",null,1],["execute","IRB::ExtendCommand::Workspaces","Rails/classes/IRB/ExtendCommand/Workspaces.html#method-i-execute","(*obj)","",null,1],["execute","Rake::Task","Rails/classes/Rake/Task.html#method-i-execute","(args=nil)","<p>Execute the actions associated with this task.\n",null,1],["execute_and_free","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-execute_and_free","(sql, name = nil)","",null,0],["execute_hook","ActiveSupport","Ruby/classes/ActiveSupport.html#method-c-execute_hook","(base, options, block)","",null,0],["execute_if_updated","ActiveSupport::FileUpdateChecker","Ruby/classes/ActiveSupport/FileUpdateChecker.html#method-i-execute_if_updated","()","<p>Execute the block given if updated.\n",null,0],["exist?","ActionDispatch::RailsEntityStore","Ruby/classes/ActionDispatch/RailsEntityStore.html#method-i-exist-3F","(key)","",null,0],["exist?","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-exist-3F","(name, options = nil)","<p>Return true if the cache contains an entry for the given key.\n<p>Options are passed to the underlying cache …\n",null,0],["exist?","Dir","Rails/classes/Dir.html#method-c-exist-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. …\n",null,1],["exist?","File","Rails/classes/File.html#method-c-exist-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory,\n<code>false</code> otherwise.\n",null,1],["exist?","FileTest","Rails/classes/FileTest.html#method-i-exist-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory,\n<code>false</code> otherwise.\n",null,1],["exist?","Pathname","Rails/classes/Pathname.html#method-i-exist-3F","()","<p>See <code>FileTest.exist?</code>.\n",null,1],["exist?","StringScanner","Rails/classes/StringScanner.html#method-i-exist-3F","(p1)","<p>Looks <em>ahead</em> to see if the <code>pattern</code> exists\n<em>anywhere</em> in the string, without advancing the scan pointer. …\n",null,1],["existent","Rails::Paths::Path","Ruby/classes/Rails/Paths/Path.html#method-i-existent","()","<p>Returns all expanded paths but only if they exist in the filesystem.\n",null,0],["existent_directories","Rails::Paths::Path","Ruby/classes/Rails/Paths/Path.html#method-i-existent_directories","()","",null,0],["exists?","ActionView::LookupContext::ViewPaths","Ruby/classes/ActionView/LookupContext/ViewPaths.html#method-i-exists-3F","(name, prefixes = [], partial = false, keys = [], options = {})","",null,0],["exists?","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-exists-3F","(id = false)","<p>Returns true if a record exists in the table that matches the\n<code>id</code> or conditions given, or false otherwise. …\n",null,0],["exists?","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-exists-3F","(id, options = {})","<p>Asserts the existence of a resource, returning <code>true</code> if the\nresource is found.\n<p>Examples\n\n<pre>Note.create(:title ...</pre>\n",null,0],["exists?","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-exists-3F","()","<p>Evaluates to <code>true</code> if this resource is not <code>new?</code>\nand is found on the remote service.  Using this method, …\n",null,0],["exists?","Dir","Rails/classes/Dir.html#method-c-exists-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. …\n",null,1],["exists?","File","Rails/classes/File.html#method-c-exists-3F","(p1)","<p>Return <code>true</code> if the named file exists.\n",null,1],["exists?","FileTest","Rails/classes/FileTest.html#method-i-exists-3F","(p1)","<p>Return <code>true</code> if the named file exists.\n",null,1],["exit","IRB::Context","Rails/classes/IRB/Context.html#method-i-exit","(ret = 0)","",null,1],["exit","Kernel","Rails/classes/Kernel.html#method-i-exit","(p1 = v1)","<p>Initiates the termination of the Ruby script by raising the\n<code>SystemExit</code> exception. This exception may …\n",null,1],["exit","Process","Rails/classes/Process.html#method-c-exit","(p1 = v1)","<p>Initiates the termination of the Ruby script by raising the\n<code>SystemExit</code> exception. This exception may …\n",null,1],["exit","Thread","Rails/classes/Thread.html#method-c-exit","()","<p>Terminates the currently running thread and schedules another thread to be\nrun. If this thread is already …\n",null,1],["exit","Thread","Rails/classes/Thread.html#method-i-exit","()","<p>Terminates <em>thr</em> and schedules another thread to be run. If this\nthread is already marked to be killed, …\n",null,1],["exit!","Kernel","Rails/classes/Kernel.html#method-i-exit-21","(p1 = v1)","<p>Exits the process immediately. No exit handlers are run. <em>status</em> is\nreturned to the underlying system …\n",null,1],["exit!","Process","Rails/classes/Process.html#method-c-exit-21","(p1 = v1)","<p>Exits the process immediately. No exit handlers are run. <em>status</em> is\nreturned to the underlying system …\n",null,1],["exit_on_failure?","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-c-exit_on_failure-3F","()","<p>We want to exit on failure to be kind to other libraries This is only when\naccessing via CLI\n",null,0],["exit_value","LocalJumpError","Rails/classes/LocalJumpError.html#method-i-exit_value","()","<p>call_seq:\n\n<pre>local_jump_error.exit_value  -&gt; obj</pre>\n<p>Returns the exit value associated with this <code>LocalJumpError</code> …\n",null,1],["exited?","Process::Status","Rails/classes/Process/Status.html#method-i-exited-3F","()","<p>Returns <code>true</code> if <em>stat</em> exited normally (for example\nusing an <code>exit()</code> call or finishing the program).\n",null,1],["exited?","Rake::PseudoStatus","Rails/classes/Rake/PseudoStatus.html#method-i-exited-3F","()","",null,1],["exitstatus","Process::Status","Rails/classes/Process/Status.html#method-i-exitstatus","()","<p>Returns the least significant eight bits of the return code of\n<em>stat</em>. Only available if <code>exited?</code> is <code>true</code>\n…\n",null,1],["exp","BigMath","Rails/classes/BigMath.html#method-c-exp","(p1, p2)","<p>Computes the value of e (the base of natural logarithms) raised to the\npower of x, to the specified number …\n",null,1],["exp","CMath","Rails/classes/CMath.html#method-c-exp","(z)","<p>Math::E raised to the <code>z</code> power\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">exp</span>(<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">0</span>,<span class=\"ruby-value\">0</span>))      <span class=\"ruby-comment\">#=&gt; 1.0+0.0i</span>\n<span class=\"ruby-identifier\">exp</span>(<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">0</span>,<span class=\"ruby-constant\">PI</span>))     <span class=\"ruby-comment\">#=&gt; -1.0+1.2246467991473532e-16i ...</span>\n</pre>\n",null,1],["exp","Math","Rails/classes/Math.html#method-c-exp","(p1)","<p>Returns e**x.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">exp</span>(<span class=\"ruby-value\">0</span>)       <span class=\"ruby-comment\">#=&gt; 1.0</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">exp</span>(<span class=\"ruby-value\">1</span>)       <span class=\"ruby-comment\">#=&gt; 2.718281828459045</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">exp</span>(<span class=\"ruby-value\">1.5</span>)     <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["exp!","CMath","Rails/classes/CMath.html#method-c-exp-21","(z)","",null,1],["expand","REXML::Parsers::XPathParser","Rails/classes/REXML/Parsers/XPathParser.html#method-i-expand","( path )","",null,1],["expand","REXML::Text","Rails/classes/REXML/Text.html#method-c-expand","(ref, doctype, filter)","",null,1],["expand_cache_key","ActiveSupport::Cache","Ruby/classes/ActiveSupport/Cache.html#method-c-expand_cache_key","(key, namespace = nil)","",null,0],["expand_class","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-expand_class","(klass)","<p>Expands abbreviated klass <code>klass</code> into a fully-qualified class. \n“Zl::Da” will be expanded to …\n",null,1],["expand_environ","Win32::Registry","Rails/classes/Win32/Registry.html#method-c-expand_environ","(str)","<p>Replace %w+% into the environment value of what is contained between the\n%‘s This method is used for …\n",null,1],["expand_hash_conditions_for_aggregates","ActiveRecord::Sanitization::ClassMethods","Ruby/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-expand_hash_conditions_for_aggregates","(attrs)","<p>Accepts a hash of SQL conditions and replaces those attributes that\ncorrespond to a <code>composed_of</code> relationship …\n",null,0],["expand_hexstring","OpenSSL::X509::Name::RFC2253DN","Rails/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-expand_hexstring","(str)","",null,1],["expand_name","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-expand_name","(name)","<p>Expands the class portion of <code>name</code> into a fully-qualified\nclass.  See #expand_class.\n",null,1],["expand_pair","OpenSSL::X509::Name::RFC2253DN","Rails/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-expand_pair","(str)","",null,1],["expand_path","File","Rails/classes/File.html#method-c-expand_path","(p1, p2 = v2)","<p>Converts a pathname to an absolute pathname. Relative paths are referenced\nfrom the current working directory …\n",null,1],["expand_path","Pathname","Rails/classes/Pathname.html#method-i-expand_path","(p1 = v1)","<p>See <code>File.expand_path</code>.\n",null,1],["expand_path","Shell","Rails/classes/Shell.html#method-i-expand_path","(path)","",null,1],["expand_path","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-expand_path","(path)","<p>CommandProcessor#expand_path(path)\n\n<pre>  path:   String\n  return: String\nreturns the absolute path for &lt;path&gt;</pre>\n",null,1],["expand_ref_in","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-i-expand_ref_in","( arry, ind )","",null,1],["expand_tabs","RDoc::Text","Rails/classes/RDoc/Text.html#method-i-expand_tabs","(text)","<p>Expands tab characters in <code>text</code> to eight spaces\n",null,1],["expand_value","OpenSSL::X509::Name::RFC2253DN","Rails/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-expand_value","(str1, str2, str3)","",null,1],["expanded","Rails::Paths::Path","Ruby/classes/Rails/Paths/Path.html#method-i-expanded","()","<p>Expands all paths against the root and return all unique values.\n",null,0],["expanded_name","REXML::Document","Rails/classes/REXML/Document.html#method-i-expanded_name","()","<p>According to the XML spec, a root node has no expanded name\n",null,1],["expect","IO","Rails/classes/IO.html#method-i-expect","(pat,timeout=9999999)","<p>Reads from the IO until pattern <code>pat</code> matches or the\n<code>timeout</code> is over. It returns an array with the read …\n",null,1],["expected","REXML::Validation::Choice","Rails/classes/REXML/Validation/Choice.html#method-i-expected","()","",null,1],["expected","REXML::Validation::Interleave","Rails/classes/REXML/Validation/Interleave.html#method-i-expected","()","",null,1],["expected","REXML::Validation::OneOrMore","Rails/classes/REXML/Validation/OneOrMore.html#method-i-expected","()","",null,1],["expected","REXML::Validation::Optional","Rails/classes/REXML/Validation/Optional.html#method-i-expected","()","",null,1],["expected","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-i-expected","()","",null,1],["expected","REXML::Validation::ZeroOrMore","Rails/classes/REXML/Validation/ZeroOrMore.html#method-i-expected","()","",null,1],["expected_response","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-expected_response","(http_method, uri, credentials, password, password_is_ha1=true)","<p>Returns the expected response for a request of <code>http_method</code> to\n<code>uri</code> with the decoded <code>credentials</code> and the …\n",null,0],["expire","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-expire","()","",null,0],["expire_action","ActionController::Caching::Actions","Ruby/classes/ActionController/Caching/Actions.html#method-i-expire_action","(options = {})","",null,0],["expire_fragment","ActionController::Caching::Fragments","Ruby/classes/ActionController/Caching/Fragments.html#method-i-expire_fragment","(key, options = nil)","<p>Removes fragments from the cache.\n<p><code>key</code> can take one of three forms:\n<p>String - This would normally take the …\n",null,0],["expire_page","ActionController::Caching::Pages","Ruby/classes/ActionController/Caching/Pages.html#method-i-expire_page","(options = {})","<p>Expires the page that was cached with the <code>options</code> as a key.\nExample:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">expire_page</span> :<span class=\"ruby-identifier\">controller</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;lists&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["expire_page","ActionController::Caching::Pages::ClassMethods","Ruby/classes/ActionController/Caching/Pages/ClassMethods.html#method-i-expire_page","(path)","<p>Expires the page that was cached with the <code>path</code> as a key.\nExample:\n\n<pre>expire_page &quot;/lists/show&quot;</pre>\n",null,0],["expired?","ActiveSupport::Cache::Entry","Ruby/classes/ActiveSupport/Cache/Entry.html#method-i-expired-3F","()","<p>Check if the entry is expired. The <code>expires_in</code> parameter can\noverride the value set when the entry was …\n",null,0],["expired?","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-expired-3F","()","<p>Has this tuple expired? (true/false).\n<p>A tuple has expired when its expiry timer based on the <code>sec</code>\nargument …\n",null,1],["expires","WEBrick::Cookie","Rails/classes/WEBrick/Cookie.html#method-i-expires","()","",null,1],["expires=","WEBrick::Cookie","Rails/classes/WEBrick/Cookie.html#method-i-expires-3D","(t)","",null,1],["expires_at","ActiveSupport::Cache::Entry","Ruby/classes/ActiveSupport/Cache/Entry.html#method-i-expires_at","()","<p>Seconds since the epoch when the entry will expire.\n",null,0],["expires_at=","ActiveSupport::Cache::Entry","Ruby/classes/ActiveSupport/Cache/Entry.html#method-i-expires_at-3D","(time)","<p>Set a new time when the entry will expire.\n",null,0],["expires_in","ActionController::ConditionalGet","Ruby/classes/ActionController/ConditionalGet.html#method-i-expires_in","(seconds, options = {})","<p>Sets a HTTP 1.1 Cache-Control header. Defaults to issuing a\n<code>private</code> instruction, so that intermediate …\n",null,0],["expires_now","ActionController::ConditionalGet","Ruby/classes/ActionController/ConditionalGet.html#method-i-expires_now","()","<p>Sets a HTTP 1.1 Cache-Control header of <code>no-cache</code> so no caching\nshould occur by the browser or intermediate …\n",null,0],["explain","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-explain","(arel, binds = [])","<p>DATABASE STATEMENTS ======================================\n",null,0],["explain","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-explain","(arel, binds = [])","<p>DATABASE STATEMENTS ======================================\n",null,0],["explain","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-explain","(arel, binds = [])","<p>DATABASE STATEMENTS ======================================\n",null,0],["explain","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-explain","()","<p>Runs EXPLAIN on the query or queries triggered by this relation and returns\nthe result as a string.  …\n",null,0],["exponent","BigDecimal","Rails/classes/BigDecimal.html#method-i-exponent","()","<p>Returns the exponent of the BigDecimal number, as an Integer.\n<p>If the number can be represented as 0.xxxxxx …\n",null,1],["export","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-export","()","<p>Encodes this DH to its PEM encoding. Note that any existing per-session\npublic/private keys will <strong>not</strong> …\n",null,1],["export","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-export","(p1 = v1, p2 = v2)","<p>Encodes this DSA to its PEM encoding.\n<p>Parameters\n<p><code>cipher</code> is an OpenSSL::Cipher.\n",null,1],["export","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-export","(p1 = v1, p2 = v2)","<p>Outputs this keypair in PEM encoding.  If <code>cipher</code> and\n<code>pass_phrase</code> are given they will be used to encrypt …\n",null,1],["expunge","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-expunge","()","<p>Sends a EXPUNGE command to permanently remove from the currently selected\nmailbox all messages that have …\n",null,1],["ext","ActionDispatch::FileHandler","Ruby/classes/ActionDispatch/FileHandler.html#method-i-ext","()","",null,0],["ext","String","Rails/classes/String.html#method-i-ext","(newext='')","<p>Replace the file extension with <code>newext</code>.  If there is no\nextension on the string, append the new extension …\n",null,1],["extend","Object","Rails/classes/Object.html#method-i-extend","(*args)","<p>Adds to <em>obj</em> the instance methods from each module given as a\nparameter.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">Mod</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">hello</span>\n    <span class=\"ruby-string\">&quot;Hello ...\n</span></pre>\n",null,1],["extend_object","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-extend_object","(cl)","",null,1],["extend_object","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-extend_object","(cl)","",null,1],["extend_object","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-c-extend_object","(obj)","",null,1],["extend_object","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-c-extend_object","(obj)","",null,1],["extend_object","MonitorMixin","Rails/classes/MonitorMixin.html#method-c-extend_object","(obj)","",null,1],["extend_object","Mutex_m","Rails/classes/Mutex_m.html#method-c-extend_object","(obj)","",null,1],["extend_object","OptionParser::Arguable","Rails/classes/OptionParser/Arguable.html#method-c-extend_object","(obj)","<p>Initializes instance variable.\n",null,1],["extend_object","Sync_m","Rails/classes/Sync_m.html#method-c-extend_object","(obj)","",null,1],["extend_object","Sync_m","Rails/classes/Sync_m.html#method-c-extend_object","(obj)","",null,1],["extended","ActiveModel::Callbacks","Ruby/classes/ActiveModel/Callbacks.html#method-c-extended","(base)","",null,0],["extended","ActiveRecord::Explain","Ruby/classes/ActiveRecord/Explain.html#method-c-extended","(base)","",null,0],["extended","ActiveSupport::Concern","Ruby/classes/ActiveSupport/Concern.html#method-c-extended","(base)","",null,0],["extended","ActiveSupport::Memoizable","Ruby/classes/ActiveSupport/Memoizable.html#method-c-extended","(base)","",null,0],["extended","IRB::HistorySavingAbility","Rails/classes/IRB/HistorySavingAbility.html#method-c-extended","(obj)","<p>def HistorySavingAbility.create_finalizer\n\n<pre>proc do\nif num = IRB.conf[:SAVE_HISTORY] and (num = num.to_i) ...</pre>\n",null,1],["extending","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-extending","(*modules)","<p>Used to extend a scope with additional methods, either through a module or\nthrough a block provided. …\n",null,0],["extension","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-i-extension","()","",null,0],["extension","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#method-i-extension","()","",null,0],["extension","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#method-i-extension","()","",null,0],["extension","ActiveResource::Formats::JsonFormat","Ruby/classes/ActiveResource/Formats/JsonFormat.html#method-i-extension","()","",null,0],["extension","ActiveResource::Formats::XmlFormat","Ruby/classes/ActiveResource/Formats/XmlFormat.html#method-i-extension","()","",null,0],["extensions","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-extensions","()","<p>Extensions to build when installing the gem.  See\nGem::Installer#build_extensions for valid values.\n",null,1],["extensions","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-extensions","()","<p>Gets X509v3 extensions as array of X509Ext objects\n",null,1],["extensions","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-extensions","()","",null,1],["extensions","OpenSSL::X509::Revoked","Rails/classes/OpenSSL/X509/Revoked.html#method-i-extensions","()","<p>Gets X509v3 extensions as array of X509Ext objects\n",null,1],["extensions","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-extensions","()","<p>returns extensions.\n",null,1],["extensions=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-extensions-3D","(extensions)","<p>Sets extensions to <code>extensions</code>, ensuring it is an array. Don’t\nuse this, push onto the array instead. …\n",null,1],["extensions=","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-extensions-3D","(p1)","<p>Sets X509_EXTENSIONs\n",null,1],["extensions=","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-extensions-3D","(p1)","",null,1],["extensions=","OpenSSL::X509::Revoked","Rails/classes/OpenSSL/X509/Revoked.html#method-i-extensions-3D","(p1)","<p>Sets X509_EXTENSIONs\n",null,1],["extensions=","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-extensions-3D","(val)","<p>setter for extensions <code>val</code>\n",null,1],["extern","DL::Importer","Rails/classes/DL/Importer.html#method-i-extern","(signature, *opts)","",null,1],["external_encoding","ARGF","Rails/classes/ARGF.html#method-i-external_encoding","()","\n<pre>Returns the external encoding for files read from +ARGF+ as an +Encoding+\nobject. The external encoding ...</pre>\n",null,1],["external_encoding","IO","Rails/classes/IO.html#method-i-external_encoding","()","<p>Returns the Encoding object that represents the encoding of the file. If io\nis write mode and no encoding …\n",null,1],["external_encoding","StringIO","Rails/classes/StringIO.html#method-i-external_encoding","()","<p>Returns the Encoding object that represents the encoding of the file. If\nstrio is write mode and no encoding …\n",null,1],["externals","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-i-externals","()","",null,0],["externals=","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-i-externals-3D","(items)","",null,0],["extify","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-extify","(name)","<p>Add an extension to the given name based on the platform.\n",null,0],["extname","File","Rails/classes/File.html#method-c-extname","(p1)","<p>Returns the extension (the portion of file name in <em>path</em> after the\nperiod).\n\n<pre>File.extname(&quot;test.rb&quot;)    ...</pre>\n",null,1],["extname","Pathname","Rails/classes/Pathname.html#method-i-extname","()","<p>See <code>File.extname</code>.  Returns the file’s extension.\n",null,1],["extra_args","Gem::Command","Rails/classes/Gem/Command.html#method-c-extra_args","()","",null,1],["extra_args=","Gem::Command","Rails/classes/Gem/Command.html#method-c-extra_args-3D","(value)","",null,1],["extra_rdoc_files","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-extra_rdoc_files","()","<p>Extra files to add to RDoc such as README or doc/examples.txt\n",null,1],["extra_rdoc_files=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-extra_rdoc_files-3D","(files)","<p>Sets extra_rdoc_files to <code>files</code>, ensuring it is an array. Don’t\nuse this, push onto the array instead. …\n",null,1],["extract","URI","Rails/classes/URI.html#method-c-extract","(str, schemes = nil, &block)","<p>Synopsis\n\n<pre>URI::extract(str[, schemes][,&amp;blk])</pre>\n<p>Args\n",null,1],["extract","URI::Parser","Rails/classes/URI/Parser.html#method-i-extract","(str, schemes = nil, &block)","<p>Args\n<p><code>str</code> &mdash; String to search\n<p><code>schemes</code> &mdash; Patterns to apply to <code>str</code>\n",null,1],["extract!","Hash","Ruby/classes/Hash.html#method-i-extract-21","(*keys)","<p>Removes and returns the key/value pairs matching the given keys.\n\n<pre class=\"ruby\">{:<span class=\"ruby-identifier\">a</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span>, :<span class=\"ruby-identifier\">b</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>, :<span class=\"ruby-identifier\">c</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">3</span>, :<span class=\"ruby-identifier\">d</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">4</span>}.<span class=\"ruby-identifier\">extract!</span>(:<span class=\"ruby-identifier\">a</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["extract_annotations_from","SourceAnnotationExtractor","Ruby/classes/SourceAnnotationExtractor.html#method-i-extract_annotations_from","(file, pattern)","<p>If <code>file</code> is the filename of a file that contains annotations\nthis method returns a hash with a single …\n",null,0],["extract_call_seq","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-extract_call_seq","(comment, meth)","<p>Look for a ‘call-seq’ in the comment, and override the normal parameter\nstuff\n",null,1],["extract_comment","RDoc::Context::Section","Rails/classes/RDoc/Context/Section.html#method-i-extract_comment","(comment)","<p>Extracts the comment for this section from the original comment block. If\nthe first line contains :section:, …\n",null,1],["extract_domain","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-c-extract_domain","(host, tld_length = @@tld_length)","",null,0],["extract_files","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-extract_files","()","<p>Reads the file index and extracts each file into the gem directory.\n<p>Ensures that files can’t be installed …\n",null,1],["extract_options!","Array","Ruby/classes/Array.html#method-i-extract_options-21","()","<p>Extracts options from a set of arguments. Removes and returns the last\nelement in the array if it’s a …\n",null,0],["extract_schema_and_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Utils","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Utils.html#method-i-extract_schema_and_table","(name)","<p>Returns an array of <code>[schema_name, table_name]</code> extracted from\n<code>name</code>. <code>schema_name</code> is nil if not specified …\n",null,0],["extract_session_id","ActionDispatch::Session::StaleSessionCheck","Ruby/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-extract_session_id","(env)","",null,0],["extract_subdomain","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-c-extract_subdomain","(host, tld_length = @@tld_length)","",null,0],["extract_subdomains","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-c-extract_subdomains","(host, tld_length = @@tld_length)","",null,0],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-extractable_options-3F","()","<p>Always returns true, so that <code>Array#extract_options!</code> finds\nmembers of this class.\n",null,0],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-extractable_options-3F","()","<p>Always returns true, so that <code>Array#extract_options!</code> finds\nmembers of this class.\n",null,0],["extractable_options?","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-extractable_options-3F","()","<p>Returns true to make sure that this hash is extractable via\n<code>Array#extract_options!</code>\n",null,0],["extractable_options?","Hash","Ruby/classes/Hash.html#method-i-extractable_options-3F","()","<p>By default, only instances of Hash itself are extractable. Subclasses of\nHash may implement this method …\n",null,0],["facility","Syslog","Rails/classes/Syslog.html#method-c-facility","()","<p>Returns the facility number used in the last call to open()\n",null,1],["fail","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-fail","(err = nil, *rest)","",null,1],["fail","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-i-fail","(err = nil, *rest)","",null,1],["fail","Kernel","Rails/classes/Kernel.html#method-i-fail","(*args)","<p>With no arguments, raises the exception in <code>$!</code> or raises a\n<code>RuntimeError</code> if <code>$!</code> is <code>nil</code>. With a\nsingle <code>String</code> …\n",null,1],["failed","Iconv::Failure","Rails/classes/Iconv/Failure.html#method-i-failed","()","<p>Returns substring of the original string passed to Iconv that starts at the\ncharacter caused the exception. ...\n",null,1],["fallbacks","Rails::Generators","Ruby/classes/Rails/Generators.html#method-c-fallbacks","()","<p>Hold configured generators fallbacks. If a plugin developer wants a\ngenerator group to fallback to another …\n",null,0],["false","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-false","( )","<p>UNTESTED\n",null,1],["family","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-family","()","<p>returns the socket family as an integer.\n\n<pre>p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, &quot;&quot;).family ...</pre>\n",null,1],["family","Socket::Option","Rails/classes/Socket/Option.html#method-i-family","()","<p>returns the socket family as an integer.\n\n<pre>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).family ...</pre>\n",null,1],["family_addrinfo","Addrinfo","Rails/classes/Addrinfo.html#method-i-family_addrinfo","(*args)","<p>creates an Addrinfo object from the arguments.\n<p>The arguments are interpreted as similar to self.\n\n<pre>Addrinfo.tcp(&quot;0.0.0.0&quot;, ...</pre>\n",null,1],["fast_generate","JSON","Rails/classes/JSON.html#method-i-fast_generate","(obj, opts = nil)","<p>Generate a JSON document from the Ruby data structure <em>obj</em> and\nreturn it. This method disables the checks …\n",null,1],["fastmode=","GDBM","Rails/classes/GDBM.html#method-i-fastmode-3D","(p1)","<p>Turns the database’s fast mode on or off. If fast mode is turned on, gdbm\ndoes not wait for writes to …\n",null,1],["fatal","","Rails/classes/fatal.html","","<p>fatal is an Exception that is raised when ruby has encountered a fatal\nerror and must exit.  You are ...\n",null,1],["fatal","Logger","Rails/classes/Logger.html#method-i-fatal","(progname = nil, &block)","<p>Log a <code>FATAL</code> message.\n<p>See #info for more information.\n",null,1],["fatal","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-fatal","(msg)","<p>Shortcut for logging a FATAL message\n",null,1],["fatal?","Logger","Rails/classes/Logger.html#method-i-fatal-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>FATAL</code> messages.\n",null,1],["fatal?","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-fatal-3F","()","<p>Will the logger output FATAL messages?\n",null,1],["fault","XMLRPC::Convert","Rails/classes/XMLRPC/Convert.html#method-c-fault","(hash)","",null,1],["favicon_link_tag","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-favicon_link_tag","(source='/favicon.ico', options={})","\n<pre>&lt;%= favicon_link_tag %&gt;</pre>\n<p>generates\n\n<pre>&lt;link href=&quot;/favicon.ico&quot; rel=&quot;shortcut icon&quot; type=&quot;image/vnd.microsoft.icon&quot; ...</pre>\n",null,0],["fcntl","IO","Rails/classes/IO.html#method-i-fcntl","(p1, p2 = v2)","<p>Provides a mechanism for issuing low-level commands to control or query\nfile-oriented I/O streams. Arguments …\n",null,1],["fcntl","OpenSSL::SSL::SocketForwarder","Rails/classes/OpenSSL/SSL/SocketForwarder.html#method-i-fcntl","(*args)","",null,1],["fcntl","StringIO","Rails/classes/StringIO.html#method-i-fcntl","(*args)","",null,1],["fdatasync","IO","Rails/classes/IO.html#method-i-fdatasync","()","<p>Immediately writes all buffered data in <em>ios</em> to disk.\n<p>If the underlying operating system does not support …\n",null,1],["fdiv","Bignum","Rails/classes/Bignum.html#method-i-fdiv","(p1)","<p>Returns the floating point result of dividing <em>big</em> by\n<em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-1234567890987654321</span>.<span class=\"ruby-identifier\">fdiv</span>(<span class=\"ruby-value\">13731</span>)      <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["fdiv","Complex","Rails/classes/Complex.html#method-i-fdiv","(p1)","<p>Performs division as each part is a float, never returns a float.\n<p>For example:\n\n<pre>Complex(11,22).fdiv(3)  ...</pre>\n",null,1],["fdiv","Fixnum","Rails/classes/Fixnum.html#method-i-fdiv","(p1)","<p>Returns the floating point result of dividing <em>fix</em> by\n<em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">654321</span>.<span class=\"ruby-identifier\">fdiv</span>(<span class=\"ruby-value\">13731</span>)      <span class=\"ruby-comment\">#=&gt; 47.6528293642124 ...</span>\n</pre>\n",null,1],["fdiv","Float","Rails/classes/Float.html#method-i-fdiv","(p1)","<p>Returns float / numeric.\n",null,1],["fdiv","Numeric","Rails/classes/Numeric.html#method-i-fdiv","(p1)","<p>Returns float division.\n",null,1],["fdiv","Rational","Rails/classes/Rational.html#method-i-fdiv","(p1)","<p>Performs division and returns the value as a float.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">fdiv</span>(<span class=\"ruby-value\">1</span>)       <span class=\"ruby-comment\">#=&gt; 0.6666666666666666 ...</span>\n</pre>\n",null,1],["feed","Enumerator","Rails/classes/Enumerator.html#method-i-feed","(p1)","<p>Sets the value to be returned by the next yield inside <code>e</code>.\n<p>If the value is not set, the yield returns nil. …\n",null,1],["feed_info","RSS::RootElementMixin","Rails/classes/RSS/RootElementMixin.html#method-i-feed_info","()","",null,1],["fetch","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-fetch","(name, options = nil)","<p>Fetches data from the cache, using the given key. If there is data in the\ncache with the given key, then …\n",null,0],["fetch","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-fetch","(key, *extras)","<p>Same as <code>Hash#fetch</code> where the key passed as argument can be\neither a string or a symbol:\n\n<pre>counters = HashWithIndifferentAccess.new ...</pre>\n",null,0],["fetch","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-fetch","(key, *extras)","<p>Same as <code>Hash#fetch</code> where the key passed as argument can be\neither a string or a symbol:\n\n<pre>counters = HashWithIndifferentAccess.new ...</pre>\n",null,0],["fetch","RecursiveHTTPFetcher","Ruby/classes/RecursiveHTTPFetcher.html#method-i-fetch","(links = @urls_to_fetch)","",null,0],["fetch","Array","Rails/classes/Array.html#method-i-fetch","(p1, p2 = v2)","<p>Tries to return the element at position <em>index</em>. If the index lies\noutside the array, the first form throws …\n",null,1],["fetch","DBM","Rails/classes/DBM.html#method-i-fetch","(p1, p2 = v2)","<p>Return a value from the database by locating the key string provided.  If\nthe key is not found, returns …\n",null,1],["fetch","DRb::TimerIdConv::TimerHolder2","Rails/classes/DRb/TimerIdConv/TimerHolder2.html#method-i-fetch","(key, dv=@sentinel)","",null,1],["fetch","ENV","Rails/classes/ENV.html#method-c-fetch","(p1, p2 = v2)","<p>Retrieves the environment variable <code>name</code>.\n<p>If the given name does not exist and neither <code>default</code> nor a\nblock …\n",null,1],["fetch","GDBM","Rails/classes/GDBM.html#method-i-fetch","(p1, p2 = v2)","<p>Retrieves the <em>value</em> corresponding to <em>key</em>. If there is no\nvalue associated with <em>key</em>, <em>default</em> will be returned …\n",null,1],["fetch","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-i-fetch","(*args)","",null,1],["fetch","Gem::StreamUI::SilentDownloadReporter","Rails/classes/Gem/StreamUI/SilentDownloadReporter.html#method-i-fetch","(filename, filesize)","",null,1],["fetch","Gem::StreamUI::VerboseDownloadReporter","Rails/classes/Gem/StreamUI/VerboseDownloadReporter.html#method-i-fetch","(file_name, total_bytes)","",null,1],["fetch","Hash","Rails/classes/Hash.html#method-i-fetch","(p1, p2 = v2)","<p>Returns a value from the hash for the given key. If the key can’t be found,\nthere are several options: …\n",null,1],["fetch","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-fetch","(key, *args)","<p>Returns the header field corresponding to the case-insensitive key. Returns\nthe default value <code>args</code>, or …\n",null,1],["fetch","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-fetch","(set, attr)","<p>Sends a FETCH command to retrieve data associated with a message in the\nmailbox. The <code>set</code> parameter is …\n",null,1],["fetch","PStore","Rails/classes/PStore.html#method-i-fetch","(name, default=PStore::Error)","<p>This method is just like PStore#[], save that you may also provide a\n<em>default</em> value for the object.   …\n",null,1],["fetch","Rinda::Tuple","Rails/classes/Rinda/Tuple.html#method-i-fetch","(k)","<p>Fetches item <code>k</code> from the tuple.\n",null,1],["fetch","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-fetch","(key)","<p>Fetches <code>key</code> from the tuple.\n",null,1],["fetch","SDBM","Rails/classes/SDBM.html#method-i-fetch","(p1, p2 = v2)","",null,1],["fetch","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-fetch","( keystr, ifnone = nil )","<p>Return value associated with <code>key</code>.\n<p>If there is no value for <code>key</code> and no block is given, returns\n<code>ifnone</code>. …\n",null,1],["fetch_dir","RecursiveHTTPFetcher","Ruby/classes/RecursiveHTTPFetcher.html#method-i-fetch_dir","(url)","",null,0],["fetch_file","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-fetch_file","(uri, *_)","<p>File Fetcher. Dispatched by <code>fetch_path</code>. Use it instead.\n",null,1],["fetch_http","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-fetch_http","(uri, last_modified = nil, head = false, depth = 0)","<p>HTTP Fetcher. Dispatched by <code>fetch_path</code>. Use it instead.\n",null,1],["fetch_https","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-fetch_https","(uri, last_modified = nil, head = false, depth = 0)","",null,1],["fetch_path","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-fetch_path","(uri, mtime = nil, head = false)","<p>Downloads <code>uri</code> and returns it as a String.\n",null,1],["fetch_server","DRb","Rails/classes/DRb.html#method-c-fetch_server","(uri)","",null,1],["fetch_size","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-fetch_size","(uri)","<p>Returns the size of <code>uri</code> in bytes.\n",null,1],["fetch_spec","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-i-fetch_spec","(spec, source_uri)","",null,1],["fetch_with_errors","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-i-fetch_with_errors","(dependency, all = false, matching_platform = true, prerelease = false)","<p>Fetch specs matching <code>dependency</code>.  If <code>all</code> is true,\nall matching (released) versions are returned.  If …\n",null,1],["fetcher","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-c-fetcher","()","<p>Cached RemoteFetcher instance.\n",null,1],["fetcher","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-c-fetcher","()","",null,1],["fiddle?","DL","Rails/classes/DL.html#method-c-fiddle-3F","()","",null,1],["field","CSV::Row","Rails/classes/CSV/Row.html#method-i-field","(header_or_index, minimum_index = 0)","<p>This method will fetch the field value by <code>header</code> or\n<code>index</code>.  If a field is not found, <code>nil</code> is returned.\n…\n",null,1],["field?","CSV::Row","Rails/classes/CSV/Row.html#method-i-field-3F","(data)","<p>Returns <code>true</code> if <code>data</code> matches a field in this row,\nand <code>false</code> otherwise.\n",null,1],["field_row?","CSV::Row","Rails/classes/CSV/Row.html#method-i-field_row-3F","()","<p>Returns <code>true</code> if this is a field row.\n",null,1],["field_set_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-field_set_tag","(legend = nil, options = nil, &block)","<p>Creates a field set for grouping HTML form elements.\n<p><code>legend</code> will become the fieldset's title (optional ...\n",null,0],["field_type","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-i-field_type","()","",null,0],["fields","CSV::Row","Rails/classes/CSV/Row.html#method-i-fields","(*headers_and_or_indices)","<p>This method accepts any number of arguments which can be headers, indices,\nRanges of either, or two-element …\n",null,1],["fields_for","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-fields_for","(record_name, record_object = nil, fields_options = {}, &block)","",null,0],["fields_for","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-fields_for","(record_name, record_object = nil, options = {}, &block)","<p>Creates a scope around a specific model object like form_for, but doesn’t\ncreate the form tags themselves. …\n",null,0],["fifth","Array","Ruby/classes/Array.html#method-i-fifth","()","<p>Equal to <code>self[4]</code>.\n",null,0],["file","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-file","(*args, &block)","<p>Define file as an alias to create_file for backwards compatibility.\n",null,0],["file","ARGF","Rails/classes/ARGF.html#method-i-file","()","<p>Returns the current file as an <code>IO</code> or <code>File</code> object.\n#&lt;IO:&lt;STDIN&gt;&gt; is returned when the current …\n",null,1],["file","Digest::Class","Rails/classes/Digest/Class.html#method-c-file","(name)","<p>creates a digest object and reads a given file, <em>name</em>.\n\n<pre>p Digest::SHA256.file(&quot;X11R6.8.2-src.tar.bz2&quot;).hexdigest ...</pre>\n",null,1],["file","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-file","(name)","<p>updates the digest with the contents of a given file <em>name</em> and\nreturns self.\n",null,1],["file?","File","Rails/classes/File.html#method-c-file-3F","(p1)","<p>Returns <code>true</code> if the named file exists and is a regular file.\n",null,1],["file?","File::Stat","Rails/classes/File/Stat.html#method-i-file-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a regular file (not a device\nfile, pipe, socket, etc.).\n\n<pre>File.stat(&quot;testfile&quot;).file? ...</pre>\n",null,1],["file?","FileTest","Rails/classes/FileTest.html#method-i-file-3F","(p1)","<p>Returns <code>true</code> if the named file exists and is a regular file.\n",null,1],["file?","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-file-3F","()","<p>Is this tar entry a file?\n",null,1],["file?","Pathname","Rails/classes/Pathname.html#method-i-file-3F","()","<p>See <code>FileTest.file?</code>.\n",null,1],["file_dir","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-file_dir","()","<p>Directory where generated class HTML files live relative to the output dir.\n",null,1],["file_field","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-file_field","(method, options = {})","",null,0],["file_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-file_field","(object_name, method, options = {})","<p>Returns a file upload input tag tailored for accessing a specified\nattribute (identified by <code>method</code>) on …\n",null,0],["file_field","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-file_field","(name = \"\", size = 20, maxlength = nil)","<p>Generate an File Upload Input element as a string.\n<p>The attributes of the element can be specified as three …\n",null,1],["file_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-file_field_tag","(name, options = {})","<p>Creates a file upload field. If you are using file uploads then you will\nalso need to set the multipart …\n",null,0],["file_input?","IRB::Context","Rails/classes/IRB/Context.html#method-i-file_input-3F","()","",null,1],["file_name","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-file_name","()","<p>The default (generated) file name of the gem.  See also #spec_name.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">spec</span>.<span class=\"ruby-identifier\">file_name</span> <span class=\"ruby-comment\"># =&gt; &quot;example-1.0.gem&quot;</span>\n</pre>\n",null,1],["file_name","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-file_name","()","<p>File name where this CodeObject was found.\n<p>See also RDoc::Context#in_files\n",null,1],["file_path","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-file_path","()","",null,0],["filename","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Ruby/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-c-filename","()","<p>Returns the filename for the data file for this version\n",null,0],["filename","ARGF","Rails/classes/ARGF.html#method-i-filename","()","<p>Returns the current filename. “-” is returned when the current file is\nSTDIN.\n<p>For example:\n\n<pre>$ ...</pre>\n",null,1],["filename","Ripper::Filter","Rails/classes/Ripper/Filter.html#method-i-filename","()","<p>The file name of the input.\n",null,1],["filename_quote_characters","Readline","Rails/classes/Readline.html#method-c-filename_quote_characters","()","<p>Gets a list of characters that cause a filename to be quoted by the\ncompleter when they appear in a completed …\n",null,1],["filename_quote_characters=","Readline","Rails/classes/Readline.html#method-c-filename_quote_characters-3D","(p1)","<p>Sets a list of characters that cause a filename to be quoted by the\ncompleter when they appear in a completed …\n",null,1],["fileno","ARGF","Rails/classes/ARGF.html#method-i-fileno","()","<p>Returns an integer representing the numeric file descriptor for the current\nfile. Raises an <code>ArgumentError</code> …\n",null,1],["fileno","IO","Rails/classes/IO.html#method-i-fileno","()","<p>Returns an integer representing the numeric file descriptor for\n<em>ios</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">$stdin</span>.<span class=\"ruby-identifier\">fileno</span>    <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-identifier\">$stdout</span>.<span class=\"ruby-identifier\">fileno</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["fileno","StringIO","Rails/classes/StringIO.html#method-i-fileno","()","",null,1],["files","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-files","()","<p>Files included in this gem.  You cannot append to this accessor, you must\nassign to it.\n<p>Only add files …\n",null,1],["files","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-files","()","",null,1],["files=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-files-3D","(files)","<p>Sets files to <code>files</code>, ensuring it is an array.\n",null,1],["files_hash","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-files_hash","()","",null,1],["fill","Array","Rails/classes/Array.html#method-i-fill","(p1 = v1, p2 = v2)","<p>The first three forms set the selected elements of <code>self</code> (which\nmay be the entire array) to <em>obj</em>. A <em>start</em> …\n",null,1],["fill_breakable","PrettyPrint","Rails/classes/PrettyPrint.html#method-i-fill_breakable","(sep=' ', width=sep.length)","<p>This is similar to #breakable except the decision to break or not is\ndetermined individually.\n<p>Two #fill_breakable …\n",null,1],["filter","ActionDispatch::Http::ParameterFilter","Ruby/classes/ActionDispatch/Http/ParameterFilter.html#method-i-filter","(params)","",null,0],["filter","CSV","Rails/classes/CSV.html#method-c-filter","(*args)","<p>This method is a convenience for building Unix-like filters for CSV data.\nEach row is yielded to the …\n",null,1],["filter","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-filter","(elements, path)","<p>Given an array of nodes it filters the array based on the path. The result\nis that when this method returns, …\n",null,1],["filter","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-filter","()","<p>returns filter.\n",null,1],["filter=","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-filter-3D","(val)","<p>setter for filter <code>val</code>\n",null,1],["filter_backtrace","IRB::WorkSpace","Rails/classes/IRB/WorkSpace.html#method-i-filter_backtrace","(bt)","<p>error message manipulator\n",null,1],["filter_backtrace","OptionParser::ParseError","Rails/classes/OptionParser/ParseError.html#method-c-filter_backtrace","(array)","",null,1],["filter_by","Rails::Paths::Root","Ruby/classes/Rails/Paths/Root.html#method-i-filter_by","(constraint)","",null,0],["filter_methods","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-filter_methods","(found, name)","<p>Filters the methods in <code>found</code> trying to find a match for\n<code>name</code>.\n",null,1],["filtered_env","ActionDispatch::Http::FilterParameters","Ruby/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_env","()","<p>Return a hash of request.env with all sensitive data replaced.\n",null,0],["filtered_options","ActiveModel::Validations::NumericalityValidator","Ruby/classes/ActiveModel/Validations/NumericalityValidator.html#method-i-filtered_options","(value)","",null,0],["filtered_parameters","ActionDispatch::Http::FilterParameters","Ruby/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_parameters","()","<p>Return a hash of parameters with all sensitive data replaced.\n",null,0],["filtered_path","ActionDispatch::Http::FilterParameters","Ruby/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_path","()","<p>Reconstructed a path with all sensitive GET parameters replaced.\n",null,0],["filtered_query_string","ActionDispatch::Http::FilterParameters","Ruby/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_query_string","()","",null,0],["final","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-final","()","<p>Returns the remaining data held in the cipher object.  Further calls to\nCipher#update or Cipher#final …\n",null,1],["find","ActionView::LookupContext::ViewPaths","Ruby/classes/ActionView/LookupContext/ViewPaths.html#method-i-find","(name, prefixes = [], partial = false, keys = [], options = {})","",null,0],["find","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-find","(*args)","<p>Find operates with four different retrieval approaches:\n<p>Find by id - This can either be a specific id …\n",null,0],["find","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-find","(*arguments)","<p>Core method for finding resources.  Used similarly to Active Record’s\n<code>find</code> method.\n<p>Arguments\n<p>The first …\n",null,0],["find","Plugin","Ruby/classes/Plugin.html#method-c-find","(name)","",null,0],["find","Rails::Engine","Ruby/classes/Rails/Engine.html#method-c-find","(path)","<p>Finds engine with given path\n",null,0],["find","Rails::Generators::ActiveModel","Ruby/classes/Rails/Generators/ActiveModel.html#method-c-find","(klass, params=nil)","<p>GET show GET edit PUT update DELETE destroy\n",null,0],["find","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-c-find","(dir=nil)","",null,0],["find","SourceAnnotationExtractor","Ruby/classes/SourceAnnotationExtractor.html#method-i-find","(dirs=%w(app config lib script test))","<p>Returns a hash that maps filenames under <code>dirs</code> (recursively) to\narrays with their annotations.\n",null,0],["find","Encoding","Rails/classes/Encoding.html#method-c-find","(p1)","<p>Search the encoding with specified <em>name</em>. <em>name</em> should be a\nstring or symbol.\n\n<pre>Encoding.find(&quot;US-ASCII&quot;) ...</pre>\n",null,1],["find","Enumerable","Rails/classes/Enumerable.html#method-i-find","(p1 = v1)","<p>Passes each entry in <em>enum</em> to <em>block</em>. Returns the first for\nwhich <em>block</em> is not false.  If no object matches, …\n",null,1],["find","Find","Rails/classes/Find.html#method-c-find","(*paths)","<p>Calls the associated block with the name of every file and directory listed\nas arguments, then recursively …\n",null,1],["find","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-find","(glob)","<p>Look in all the installed gems until a matching <code>glob</code> is found.\nReturn the <em>gemspec</em> of the gem where it …\n",null,1],["find","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-find","(file , paths = $:)","",null,1],["find","Pathname","Rails/classes/Pathname.html#method-i-find","()","<p>Pathname#find is an iterator to traverse a directory tree in a depth first\nmanner.  It yields a Pathname …\n",null,1],["find","Rinda::TupleBag","Rails/classes/Rinda/TupleBag.html#method-i-find","(template)","<p>Finds a live tuple that matches <code>template</code>.\n",null,1],["find","Rinda::TupleBag::TupleBin","Rails/classes/Rinda/TupleBag/TupleBin.html#method-i-find","(&blk)","",null,1],["find_active","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-find_active","(glob)","",null,1],["find_alias_comment","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-find_alias_comment","(class_name, new_name, old_name)","<p>Finds the comment for an alias on <code>class_name</code> from\n<code>new_name</code> to <code>old_name</code>\n",null,1],["find_all","ActionView::LookupContext::ViewPaths","Ruby/classes/ActionView/LookupContext/ViewPaths.html#method-i-find_all","(name, prefixes = [], partial = false, keys = [], options = {})","",null,0],["find_all","ActionView::Resolver","Ruby/classes/ActionView/Resolver.html#method-i-find_all","(name, prefix=nil, partial=false, details={}, key=nil, locals=[])","<p>Normalizes the arguments and passes it on to find_template.\n",null,0],["find_all","Enumerable","Rails/classes/Enumerable.html#method-i-find_all","()","<p>Returns an array containing all elements of <em>enum</em> for which\n<em>block</em> is not <code>false</code> (see also\n<code>Enumerable#reject</code> …\n",null,1],["find_all","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-find_all","(glob)","<p>Works like #find, but finds all gemspecs matching <code>glob</code>.\n",null,1],["find_all","Rinda::TupleBag","Rails/classes/Rinda/TupleBag.html#method-i-find_all","(template)","<p>Finds all live tuples that match <code>template</code>.\n",null,1],["find_all_by_name","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-find_all_by_name","(name, *requirements)","<p>Returns every spec that matches <code>name</code> and optional\n<code>requirements</code>.\n",null,1],["find_all_template","Rinda::TupleBag","Rails/classes/Rinda/TupleBag.html#method-i-find_all_template","(tuple)","<p>Finds all tuples in the TupleBag which when treated as templates, match\n<code>tuple</code> and are alive.\n",null,1],["find_ancestor_local_symbol","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-find_ancestor_local_symbol","(symbol)","<p>Looks for a symbol in the #ancestors. See Context#find_local_symbol.\n",null,1],["find_attr_comment","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-find_attr_comment","(var_name, attr_name, read = nil, write = nil)","<p>Finds a comment for rb_define_attr, rb_attr or Document-attr.\n<p><code>var_name</code> is the C class variable the attribute ...\n",null,1],["find_attribute","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_attribute","(name, singleton)","<p>Finds an attribute <code>name</code> with singleton value\n<code>singleton</code>.\n",null,1],["find_attribute_named","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_attribute_named","(name)","<p>Finds an attribute with <code>name</code> in this context\n",null,1],["find_body","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-find_body","(class_name, meth_name, meth_obj, file_content, quiet = false)","<p>Find the C code corresponding to a Ruby method\n",null,1],["find_by_attributes","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-find_by_attributes","(match, attributes, *args)","",null,0],["find_by_name","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-find_by_name","(name, *requirements)","<p>Find the best specification matching a <code>name</code> and\n<code>requirements</code>. Raises if the dependency doesn’t resolve …\n",null,1],["find_by_path","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-find_by_path","(path)","<p>Return the best specification that contains the file matching\n<code>path</code>.\n",null,1],["find_by_session_id","ActiveRecord::SessionStore::Session","Ruby/classes/ActiveRecord/SessionStore/Session.html#method-c-find_by_session_id","(session_id)","<p>Hook to set up sessid compatibility.\n",null,0],["find_by_session_id","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-find_by_session_id","(session_id)","<p>Look up a session by id and unmarshal its data if found.\n",null,0],["find_by_sql","ActiveRecord::Querying","Ruby/classes/ActiveRecord/Querying.html#method-i-find_by_sql","(sql, binds = [])","<p>Executes a custom SQL query against your database and returns all the\nresults. The results will be returned …\n",null,0],["find_class","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-find_class","(raw_name, name)","<p>Finds a RDoc::NormalClass or RDoc::NormalModule for <code>raw_name</code>\n",null,1],["find_class_comment","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-find_class_comment","(class_name, class_mod)","<p>Look for class or module documentation above Init_+class_name+(void), in a\nDocument-class <code>class_name</code> …\n",null,1],["find_class_method_named","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_class_method_named","(name)","<p>Finds a class method with <code>name</code> in this context\n",null,1],["find_class_named","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-find_class_named","(name)","<p>Finds a class or module with <code>name</code> in this namespace or its\ndescendants\n",null,1],["find_class_named","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-find_class_named","(name)","<p>Finds the class with <code>name</code> in all discovered classes\n",null,1],["find_class_named_from","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-find_class_named_from","(name, from)","<p>Finds the class with <code>name</code> starting in namespace\n<code>from</code>\n",null,1],["find_class_or_module","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-find_class_or_module","(name)","<p>See RDoc::TopLevel::find_class_or_module\n",null,1],["find_class_or_module","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-find_class_or_module","(name)","<p>Finds the class or module with <code>name</code>\n",null,1],["find_cmd","Rails::DBConsole","Ruby/classes/Rails/DBConsole.html#method-i-find_cmd","(*commands)","",null,0],["find_command","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-i-find_command","(cmd_name)","",null,1],["find_command_possibilities","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-i-find_command_possibilities","(cmd_name)","",null,1],["find_const_comment","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-find_const_comment","(type, const_name, class_name = nil)","<p>Finds a comment matching <code>type</code> and <code>const_name</code>\neither above the comment or in the matching Document- section. …\n",null,1],["find_constant_named","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_constant_named","(name)","<p>Finds a constant with <code>name</code> in this context\n",null,1],["find_each","ActiveRecord::Batches","Ruby/classes/ActiveRecord/Batches.html#method-i-find_each","(options = {})","<p>Yields each record that was found by the find <code>options</code>. The\nfind is performed by find_in_batches with …\n",null,0],["find_enclosing_module_named","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_enclosing_module_named","(name)","<p>Find a module at a higher scope\n",null,1],["find_executable","Object","Rails/classes/Object.html#method-i-find_executable","(bin, path = nil)","<p>Searches for the executable <code>bin</code> on <code>path</code>. The\ndefault path is your PATH environment variable. If that …\n",null,1],["find_external_alias","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_external_alias","(name, singleton)","<p>Finds an external alias <code>name</code> with singleton value\n<code>singleton</code>.\n",null,1],["find_external_alias_named","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_external_alias_named","(name)","<p>Finds an external alias with <code>name</code> in this context\n",null,1],["find_file_named","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_file_named","(name)","<p>Finds a file with <code>name</code> in this context\n",null,1],["find_file_named","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-find_file_named","(name)","<p>Finds the file with <code>name</code> in all discovered files\n",null,1],["find_files","Gem","Rails/classes/Gem.html#method-c-find_files","(glob, check_load_path=true)","<p>Returns a list of paths matching <code>glob</code> that can be used by a\ngem to pick up features from other gems. …\n",null,1],["find_first","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-find_first","()","",null,0],["find_first_recursive","REXML::Node","Rails/classes/REXML/Node.html#method-i-find_first_recursive","()","<p>Find (and return) first subnode (recursively) for which the block evaluates\nto true. Returns <code>nil</code> if none …\n",null,1],["find_gems_with_sources","Gem::DependencyInstaller","Rails/classes/Gem/DependencyInstaller.html#method-i-find_gems_with_sources","(dep)","<p>Returns a list of pairs of gemspecs and source_uris that match\nGem::Dependency <code>dep</code> from both local ( …\n",null,1],["find_header","Object","Rails/classes/Object.html#method-i-find_header","(header, *paths)","<p>Instructs mkmf to search for the given <code>header</code> in any of the\n<code>paths</code> provided, and returns whether or not …\n",null,1],["find_in","SourceAnnotationExtractor","Ruby/classes/SourceAnnotationExtractor.html#method-i-find_in","(dir)","<p>Returns a hash that maps filenames under <code>dir</code> (recursively) to\narrays with their annotations. Only files …\n",null,0],["find_in_batches","ActiveRecord::Batches","Ruby/classes/ActiveRecord/Batches.html#method-i-find_in_batches","(options = {})","<p>Yields each batch of records that was found by the find\n<code>options</code> as an array. The size of each batch is …\n",null,0],["find_in_cache","Gem::Commands::UnpackCommand","Rails/classes/Gem/Commands/UnpackCommand.html#method-i-find_in_cache","(filename)","<p>Find cached filename in Gem.path. Returns nil if the file cannot be found.\n",null,1],["find_in_unresolved","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-find_in_unresolved","(glob)","",null,1],["find_in_unresolved","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-find_in_unresolved","(path)","<p>Return currently unresolved specs that contain the file matching\n<code>path</code>.\n",null,1],["find_in_unresolved_tree","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-find_in_unresolved_tree","(glob)","",null,1],["find_in_unresolved_tree","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-find_in_unresolved_tree","(path)","<p>Search through all unresolved deps and sub-dependencies and return specs\nthat contain the file matching …\n",null,1],["find_include_file","RDoc::Markup::PreProcess","Rails/classes/RDoc/Markup/PreProcess.html#method-i-find_include_file","(name)","<p>Look for the given file in the directory containing the current file, and\nthen in each of the directories …\n",null,1],["find_index","Array","Rails/classes/Array.html#method-i-find_index","(p1)","<p>Returns the index of the first object in <code>self</code> such that the\nobject is <code>==</code> to <em>obj</em>. If a block is given …\n",null,1],["find_index","Enumerable","Rails/classes/Enumerable.html#method-i-find_index","(p1)","<p>Compares each entry in <em>enum</em> with <em>value</em> or passes to\n<em>block</em>.  Returns the index for the first for which …\n",null,1],["find_index","Matrix","Rails/classes/Matrix.html#method-i-find_index","(*args)","",null,1],["find_instance_method_named","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_instance_method_named","(name)","<p>Finds an instance method with <code>name</code> in this context\n",null,1],["find_last","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-find_last","()","",null,0],["find_library","Object","Rails/classes/Object.html#method-i-find_library","(lib, func, *paths, &b)","<p>Returns whether or not the entry point <code>func</code> can be found\nwithin the library <code>lib</code> in one of the <code>paths</code>\nspecified, …\n",null,1],["find_local_symbol","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_local_symbol","(symbol)","<p>Finds a method, constant, attribute, external alias, module or file named\n<code>symbol</code> in this context.\n",null,1],["find_local_symbol","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-find_local_symbol","(symbol)","<p>Finds a class or module named <code>symbol</code>\n",null,1],["find_matching","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-i-find_matching","(*args)","",null,1],["find_matching_with_errors","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-i-find_matching_with_errors","(dependency, all = false, matching_platform = true, prerelease = false)","<p>Find spec names that match <code>dependency</code>.  If <code>all</code> is\ntrue, all matching released versions are returned. …\n",null,1],["find_method","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_method","(name, singleton)","<p>Finds a method named <code>name</code> with singleton value\n<code>singleton</code>.\n",null,1],["find_method_named","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_method_named","(name)","<p>Finds a instance or module method with <code>name</code> in this context\n",null,1],["find_methods","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-find_methods","(name)","<p>Yields items matching <code>name</code> including the store they were found\nin, the class being searched for, the …\n",null,1],["find_modifiers","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-find_modifiers","(comment, meth_obj)","<p>Handles modifiers in <code>comment</code> and updates <code>meth_obj</code>\nas appropriate.\n<p>If <code>:nodoc:</code> is found, documentation on …\n",null,1],["find_module_named","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_module_named","(name)","<p>Find a module with <code>name</code> using ruby’s scoping rules\n",null,1],["find_module_named","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-find_module_named","(name)","<p>Finds the module with <code>name</code> in all discovered modules\n",null,1],["find_module_named","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-find_module_named","(name)","<p>Finds a module or class with <code>name</code>\n",null,1],["find_name","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-find_name","(full_name)","",null,1],["find_name","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-find_name","(gem_name, requirement = Gem::Requirement.default)","<p>Find a gem by an exact match on the short name.\n",null,1],["find_one","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-find_one","(id)","",null,0],["find_or_instantiator_by_attributes","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-find_or_instantiator_by_attributes","(match, attributes, *args)","",null,0],["find_override_comment","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-find_override_comment","(class_name, meth_obj)","<p>Finds a <code>Document-method</code> override for <code>meth_obj</code> on\n<code>class_name</code>\n",null,1],["find_paths","Gem::Commands::WhichCommand","Rails/classes/Gem/Commands/WhichCommand.html#method-i-find_paths","(package_name, dirs)","",null,1],["find_proxy","URI::Generic","Rails/classes/URI/Generic.html#method-i-find_proxy","()","<p>returns a proxy URI. The proxy URI is obtained from environment variables\nsuch as http_proxy, ftp_proxy …\n",null,1],["find_rakefile_location","Rake::Application","Rails/classes/Rake/Application.html#method-i-find_rakefile_location","()","",null,1],["find_reverse_dependencies","Gem::Commands::DependencyCommand","Rails/classes/Gem/Commands/DependencyCommand.html#method-i-find_reverse_dependencies","(spec)","<p>Returns an Array of [specification, dep] that are satisfied by\n<code>spec</code>.\n",null,1],["find_root_with_flag","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-find_root_with_flag","(flag, default=nil)","",null,0],["find_runnable","Rake::AltSystem","Rails/classes/Rake/AltSystem.html#method-i-find_runnable","(file)","",null,1],["find_some","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-find_some","(ids)","",null,0],["find_spec_by_name_and_version","Gem::DependencyInstaller","Rails/classes/Gem/DependencyInstaller.html#method-i-find_spec_by_name_and_version","(gem_name, version = Gem::Requirement.default, prerelease = false)","<p>Finds a spec and the source_uri it came from for gem <code>gem_name</code>\nand <code>version</code>.  Returns an Array of specs …\n",null,1],["find_spec_for_file","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-find_spec_for_file","(file)","<p>Looks through the available gemspecs and finds the first one that contains\n<code>file</code> as a requirable file. …\n",null,1],["find_symbol","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_symbol","(symbol)","<p>Look up <code>symbol</code>, first as a module, then as a local symbol.\n",null,1],["find_symbol_module","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-find_symbol_module","(symbol)","<p>Look up a module named <code>symbol</code>.\n",null,1],["find_system_command","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-find_system_command","(command)","<p>private functions\n",null,1],["find_template","ActionView::LookupContext::ViewPaths","Ruby/classes/ActionView/LookupContext/ViewPaths.html#method-i-find_template","(name, prefixes = [], partial = false, keys = [], options = {})","",null,0],["find_type","Object","Rails/classes/Object.html#method-i-find_type","(type, opt, *headers, &b)","<p>Returns where the static type <code>type</code> is defined.\n<p>You may also pass additional flags to <code>opt</code> which are then …\n",null,1],["find_tzinfo","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-c-find_tzinfo","(name)","",null,0],["find_unique","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-find_unique","(all_hash)","<p>Finds unique classes/modules defined in <code>all_hash</code>, and returns\nthem as an array. Performs the alias updates …\n",null,1],["find_with_associations","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-find_with_associations","()","",null,0],["find_with_ids","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-find_with_ids","(*ids)","",null,0],["find_zone","Time","Ruby/classes/Time.html#method-c-find_zone","(time_zone)","",null,0],["find_zone!","Time","Ruby/classes/Time.html#method-c-find_zone-21","(time_zone)","<p>Returns a TimeZone instance or nil, or raises an ArgumentError for invalid\ntimezones.\n",null,0],["finder?","ActiveRecord::DynamicFinderMatch","Ruby/classes/ActiveRecord/DynamicFinderMatch.html#method-i-finder-3F","()","",null,0],["finger","Rinda::RingFinger","Rails/classes/Rinda/RingFinger.html#method-c-finger","()","<p>Creates a singleton RingFinger and looks for a RingServer.  Returns the\ncreated RingFinger.\n",null,1],["finish","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-finish","()","<p>Finishes the converter. It returns the last part of the converted string.\n\n<pre>ec = Encoding::Converter.new(&quot;utf-8&quot;, ...</pre>\n",null,1],["finish","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-finish","()","<p>Finishes the HTTP session and closes the TCP connection. Raises IOError if\nthe session has not been started. …\n",null,1],["finish","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-finish","()","<p>Finishes the HTTP session and closes the TCP connection. Raises IOError if\nthe session has not been started. …\n",null,1],["finish","Net::POP3","Rails/classes/Net/POP3.html#method-i-finish","()","<p>Finishes a POP3 session and closes TCP connection.\n",null,1],["finish","Net::POP3","Rails/classes/Net/POP3.html#method-i-finish","()","<p>Finishes a POP3 session and closes TCP connection.\n",null,1],["finish","Net::POP3","Rails/classes/Net/POP3.html#method-i-finish","()","<p>Finishes a POP3 session and closes TCP connection.\n",null,1],["finish","Net::POP3","Rails/classes/Net/POP3.html#method-i-finish","()","<p>Finishes a POP3 session and closes TCP connection.\n",null,1],["finish","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-finish","()","<p>Finishes the SMTP session and closes TCP connection. Raises IOError if not\nstarted.\n",null,1],["finish","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-finish","()","<p>Finishes the SMTP session and closes TCP connection. Raises IOError if not\nstarted.\n",null,1],["finish","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-finish","()","",null,1],["finish","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-finish","()","",null,1],["finish","RDoc::Options","Rails/classes/RDoc/Options.html#method-i-finish","()","<p>Completes any unfinished option setup business such as filtering for\nexistent files, creating a regexp …\n",null,1],["finish","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-finish","()","<p>Closes the GzipFile object. Unlike Zlib::GzipFile#close, this method never\ncalls the close method of ...\n",null,1],["finish","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-finish","()","<p>Finishes the stream and flushes output buffer. See Zlib::Deflate#finish and\nZlib::Inflate#finish for …\n",null,1],["finish_all_jobs","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-finish_all_jobs","()","",null,1],["finish_template","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-finish_template","()","",null,0],["finish_template","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-finish_template","()","",null,0],["finished?","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-finished-3F","()","<p>Returns <code>true</code> if any thread has terminated and is ready to be\ncollected.\n",null,1],["finished?","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-finished-3F","()","<p>Returns <code>true</code> if any thread has terminated and is ready to be\ncollected.\n",null,1],["finished?","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-finished-3F","()","<p>Returns true if the stream is finished.\n",null,1],["finished_documents","RailsGuides::Helpers","Ruby/classes/RailsGuides/Helpers.html#method-i-finished_documents","(documents)","",null,0],["finite?","BigDecimal","Rails/classes/BigDecimal.html#method-i-finite-3F","()","<p>Returns True if the value is finite (not NaN or infinite)\n",null,1],["finite?","Float","Rails/classes/Float.html#method-i-finite-3F","()","<p>Returns <code>true</code> if <em>flt</em> is a valid IEEE floating point\nnumber (it is not infinite, and <code>nan?</code> is <code>false</code>).\n",null,1],["first","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-first","(*args)","<p>A convenience wrapper for <code>find(:first, *args)</code>. You can pass in\nall the same arguments to this method …\n",null,0],["first","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-first","(*args)","<p>A convenience wrapper for <code>find(:first, *args)</code>. You can pass in\nall the same arguments to this method …\n",null,0],["first","Rails::Paths::Path","Ruby/classes/Rails/Paths/Path.html#method-i-first","()","",null,0],["first","String","Ruby/classes/String.html#method-i-first","(limit = 1)","<p>Returns the first character of the string or the first <code>limit</code>\ncharacters.\n<p>Examples:\n\n<pre>&quot;hello&quot;.first     # ...</pre>\n",null,0],["first","Array","Rails/classes/Array.html#method-i-first","(*args)","<p>Returns the first element, or the first <code>n</code> elements, of the\narray. If the array is empty, the first form …\n",null,1],["first","Enumerable","Rails/classes/Enumerable.html#method-i-first","(p1 = v1)","<p>Returns the first element, or the first <code>n</code> elements, of the\nenumerable. If the enumerable is empty, the …\n",null,1],["first","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-first","(element, path, namespaces=EMPTY_HASH)","",null,1],["first","REXML::XPath","Rails/classes/REXML/XPath.html#method-c-first","(element, path=nil, namespaces=nil, variables={})","<p>Finds and returns the first node that matches the supplied xpath.\n<p>element &mdash; The context element\n<p>path &mdash; The …\n",null,1],["first","REXML::XPathParser","Rails/classes/REXML/XPathParser.html#method-i-first","( path_stack, node )","<p>Performs a depth-first (document order) XPath search, and returns the first\nmatch.  This is the fastest, …\n",null,1],["first","Range","Rails/classes/Range.html#method-i-first","(p1)","<p>Returns the first object in <em>rng</em>, or the first <code>n</code>\nelements.\n",null,1],["first!","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-first-21","()","<p>Same as <code>first</code> but raises\n<code>ActiveRecord::RecordNotFound</code> if no record is found. Note that\n<code>first!</code> accepts …\n",null,0],["first?","PrettyPrint","Rails/classes/PrettyPrint.html#method-i-first-3F","()","<p>first? is a predicate to test the call is a first call to first? with\ncurrent group.\n<p>It is useful to format …\n",null,1],["first?","PrettyPrint::Group","Rails/classes/PrettyPrint/Group.html#method-i-first-3F","()","",null,1],["first?","PrettyPrint::SingleLine","Rails/classes/PrettyPrint/SingleLine.html#method-i-first-3F","()","",null,1],["first_or_create","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-first_or_create","(attributes = nil, options = {}, &block)","<p>Tries to load the first record; if it fails, then <code>create</code> is\ncalled with the same arguments as this method. …\n",null,0],["first_or_create!","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-first_or_create-21","(attributes = nil, options = {}, &block)","<p>Like <code>first_or_create</code> but calls <code>create!</code> so an\nexception is raised if the created record is invalid.\n<p>Expects …\n",null,0],["first_or_initialize","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-first_or_initialize","(attributes = nil, options = {}, &block)","<p>Like <code>first_or_create</code> but calls <code>new</code> instead of\n<code>create</code>.\n<p>Expects arguments in the same format as <code>Base.new</code> …\n",null,0],["fix","BigDecimal","Rails/classes/BigDecimal.html#method-i-fix","()","<p>Return the integer part of the number.\n",null,1],["fix_basic_object_inheritance","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-fix_basic_object_inheritance","()","<p>Fixes the erroneous <code>BasicObject &lt; Object</code> in 1.9.\n<p>Because we assumed all classes without a stated superclass …\n",null,1],["fixed_encoding?","Regexp","Rails/classes/Regexp.html#method-i-fixed_encoding-3F","()","<p>Returns false if rxp is applicable to a string with any ASCII compatible\nencoding. Returns true otherwise. …\n",null,1],["fixture_is_cached?","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-c-fixture_is_cached-3F","(connection, table_name)","",null,0],["fixtures","ActiveRecord::TestFixtures::ClassMethods","Ruby/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-fixtures","(*fixture_names)","",null,0],["fixup","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-fixup","()","",null,1],["flags=","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-flags-3D","(p1)","",null,1],["flash","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-flash","()","<p>Access the contents of the flash. Use <code>flash[\"notice\"]</code> to read\na notice you put there or <code>flash[\"notice\"]</code> …\n",null,0],["flash","Curses","Rails/classes/Curses.html#method-c-flash","()","<p>Flashs the screen, for visual alarm on the terminal, if possible; otherwise\nit sounds the alert.\n<p>see also …\n",null,1],["flat_map","Enumerable","Rails/classes/Enumerable.html#method-i-flat_map","()","<p>Returns a new array with the concatenated results of running <em>block</em>\nonce for every element in <em>enum</em>.\n<p>If …\n",null,1],["flatten","Array","Rails/classes/Array.html#method-i-flatten","(p1 = v1)","<p>Returns a new array that is a one-dimensional flattening of this array\n(recursively). That is, for every …\n",null,1],["flatten","Hash","Rails/classes/Hash.html#method-i-flatten","(*args)","<p>Returns a new array that is a one-dimensional flattening of this hash. That\nis, for every key or value …\n",null,1],["flatten","Set","Rails/classes/Set.html#method-i-flatten","()","<p>Returns a new set that is a copy of the set, flattening each containing set\nrecursively.\n",null,1],["flatten!","Array","Rails/classes/Array.html#method-i-flatten-21","(p1 = v1)","<p>Flattens <code>self</code> in place. Returns <code>nil</code> if no\nmodifications were made (i.e., <em>ary</em> contains no subarrays.) …\n",null,1],["flatten!","Set","Rails/classes/Set.html#method-i-flatten-21","()","<p>Equivalent to Set#flatten, but replaces the receiver with the result in\nplace.  Returns nil if no modifications …\n",null,1],["flock","File","Rails/classes/File.html#method-i-flock","(p1)","<p>Locks or unlocks a file according to <em>locking_constant</em> (a logical\n<em>or</em> of the values in the table below). …\n",null,1],["floor","BigDecimal","Rails/classes/BigDecimal.html#method-i-floor","(p1 = v1)","<p>Return the largest integer less than or equal to the value, as a\nBigDecimal.\n<p>BigDecimal(‘3.14159’).floor …\n",null,1],["floor","Float","Rails/classes/Float.html#method-i-floor","()","<p>Returns the largest integer less than or equal to <em>flt</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1.2</span>.<span class=\"ruby-identifier\">floor</span>      <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-value\">2.0</span>.<span class=\"ruby-identifier\">floor</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n(<span class=\"ruby-value\">-1.2</span>).<span class=\"ruby-identifier\">floor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["floor","Integer","Rails/classes/Integer.html#method-i-floor","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,1],["floor","Numeric","Rails/classes/Numeric.html#method-i-floor","()","<p>Returns the largest integer less than or equal to <em>num</em>.\n<code>Numeric</code> implements this by converting <em>anInteger</em> …\n",null,1],["floor","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-floor","( number )","",null,1],["floor","Rational","Rails/classes/Rational.html#method-i-floor","(*args)","<p>Returns the truncated value (toward negative infinity).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">floor</span>      <span class=\"ruby-comment\">#=&gt; 3</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["flow","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-flow","(str)","<p>Processes <code>str</code> converting attributes, HTML and specials\n",null,1],["flush","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-i-flush","()","",null,0],["flush","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-i-flush","()","",null,0],["flush","Gem::Package::TarWriter","Rails/classes/Gem/Package/TarWriter.html#method-i-flush","()","<p>Flushes the TarWriter’s IO\n",null,1],["flush","IO","Rails/classes/IO.html#method-i-flush","()","<p>Flushes any buffered data within <em>ios</em> to the underlying operating\nsystem (note that this is Ruby internal …\n",null,1],["flush","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-flush","()","<p>Flushes buffered data to the SSLSocket.\n",null,1],["flush","PrettyPrint","Rails/classes/PrettyPrint.html#method-i-flush","()","<p>outputs buffered data.\n",null,1],["flush","PrettyPrint::SingleLine","Rails/classes/PrettyPrint/SingleLine.html#method-i-flush","()","",null,1],["flush","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-flush","()","",null,1],["flush","StringIO","Rails/classes/StringIO.html#method-i-flush","()","",null,1],["flush","WEBrick::HTTPAuth::Htdigest","Rails/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-flush","(output=nil)","<p>Flush the password database.  If <code>output</code> is given the database\nwill be written there instead of to the …\n",null,1],["flush","WEBrick::HTTPAuth::Htgroup","Rails/classes/WEBrick/HTTPAuth/Htgroup.html#method-i-flush","(output=nil)","<p>Flush the group database.  If <code>output</code> is given the database\nwill be written there instead of to the original …\n",null,1],["flush","WEBrick::HTTPAuth::Htpasswd","Rails/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-flush","(output=nil)","<p>Flush the password database.  If <code>output</code> is given the database\nwill be written there instead of to the …\n",null,1],["flush","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-flush","()","<p>Write all the attributes into the registry file.\n",null,1],["flush","Zlib::Deflate","Rails/classes/Zlib/Deflate.html#method-i-flush","(p1 = v1)","<p>This method is equivalent to <code>deflate('', flush)</code>.  If flush is\nomitted, <code>SYNC_FLUSH</code> is used as flush.  ...\n",null,1],["flush","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-flush","(p1 = v1)","<p>Flushes all the internal buffers of the GzipWriter object.  The meaning of\n<code>flush</code> is same as in Zlib::Deflate#deflate …\n",null,1],["flush_all!","ActiveSupport::LogSubscriber","Ruby/classes/ActiveSupport/LogSubscriber.html#method-c-flush_all-21","()","<p>Flush all log_subscribers’ logger.\n",null,0],["flush_cache","ActiveSupport::Memoizable::InstanceMethods","Ruby/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-i-flush_cache","(*syms)","",null,0],["flush_left","RDoc::Text","Rails/classes/RDoc/Text.html#method-i-flush_left","(text)","<p>Flush <code>text</code> left based on the shortest line\n",null,1],["flush_next_in","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-flush_next_in","()","<p>Flushes input buffer and returns all data in that buffer.\n",null,1],["flush_next_out","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-flush_next_out","()","<p>Flushes output buffer and returns all data in that buffer.\n",null,1],["flush_sessions","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-flush_sessions","(p1 = v1)","<p>Removes sessions in the internal cache that have expired at\n<code>time</code>.\n",null,1],["flushable_loggers","ActiveSupport::LogSubscriber","Ruby/classes/ActiveSupport/LogSubscriber.html#method-c-flushable_loggers","()","",null,0],["fnmatch","File","Rails/classes/File.html#method-c-fnmatch","(p1, p2, p3 = v3)","<p>Returns true if <em>path</em> matches against <em>pattern</em> The pattern\nis not a regular expression; instead it follows …\n",null,1],["fnmatch","Pathname","Rails/classes/Pathname.html#method-i-fnmatch","(p1, p2 = v2)","<p>See <code>File.fnmatch</code>.  Return <code>true</code> if the receiver\nmatches the given pattern.\n",null,1],["fnmatch?","File","Rails/classes/File.html#method-c-fnmatch-3F","(p1, p2, p3 = v3)","<p>Returns true if <em>path</em> matches against <em>pattern</em> The pattern\nis not a regular expression; instead it follows …\n",null,1],["fnmatch?","Pathname","Rails/classes/Pathname.html#method-i-fnmatch-3F","(p1, p2 = v2)","<p>See <code>File.fnmatch</code>.  Return <code>true</code> if the receiver\nmatches the given pattern.\n",null,1],["font_path","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-font_path","(source)","<p>Computes the path to a font asset in the public fonts directory. Full paths\nfrom the document root will …\n",null,0],["font_path","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-font_path","(source)","",null,0],["for","RDoc::Parser","Rails/classes/RDoc/Parser.html#method-c-for","(top_level, file_name, body, options, stats)","<p>Find the correct parser for a particular file name. Return a SimpleParser\nfor ones that we don’t know …\n",null,1],["for_cache","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-for_cache","()","<p>Creates a duplicate spec without large blobs that aren’t used at runtime.\n",null,1],["for_class","HTML::Selector","Ruby/classes/HTML/Selector.html#method-c-for_class","(cls)","<p>Creates a new selector for the given class name.\n",null,0],["for_fd","BasicSocket","Rails/classes/BasicSocket.html#method-c-for_fd","(p1)","<p>Returns a socket object which contains the file descriptor, <em>fd</em>.\n\n<pre># If invoked by inetd, STDIN/STDOUT/STDERR ...</pre>\n",null,1],["for_fd","IO","Rails/classes/IO.html#method-c-for_fd","(*args)","<p>Synonym for <code>IO.new</code>.\n",null,1],["for_files","Sys","Rails/classes/Sys.html#method-i-for_files","(*wildcards)","<p>Perform a block with each file matching a set of wildcards.\n",null,1],["for_id","HTML::Selector","Ruby/classes/HTML/Selector.html#method-c-for_id","(id)","<p>Creates a new selector for the given id.\n",null,0],["force_documentation=","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-force_documentation-3D","(value)","<p>Force the documentation of this object unless documentation has been turned\noff by :endoc:\n",null,1],["force_encoding","String","Rails/classes/String.html#method-i-force_encoding","(p1)","<p>Changes the encoding to <code>encoding</code> and returns self.\n",null,1],["force_quotes?","CSV","Rails/classes/CSV.html#method-i-force_quotes-3F","()","<p>Returns <code>true</code> if all output fields are quoted. See CSV::new for\ndetails.\n",null,1],["force_ssl","ActionController::ForceSSL::ClassMethods","Ruby/classes/ActionController/ForceSSL/ClassMethods.html#method-i-force_ssl","(options = {})","<p>Force the request to this particular controller or specified actions to be\nunder HTTPS protocol.\n<p>Note …\n",null,0],["foreach","Addrinfo","Rails/classes/Addrinfo.html#method-c-foreach","(nodename, service, family=nil, socktype=nil, protocol=nil, flags=nil, &block)","<p>iterates over the list of Addrinfo objects obtained by\nAddrinfo.getaddrinfo.\n\n<pre>Addrinfo.foreach(nil, 80) ...</pre>\n",null,1],["foreach","CSV","Rails/classes/CSV.html#method-c-foreach","(path, options = Hash.new, &block)","<p>This method is intended as the primary interface for reading CSV files. \nYou pass a <code>path</code> and any <code>options</code> …\n",null,1],["foreach","Dir","Rails/classes/Dir.html#method-c-foreach","(*args)","<p>Calls the block once for each entry in the named directory, passing the\nfilename of each entry as a parameter …\n",null,1],["foreach","IO","Rails/classes/IO.html#method-c-foreach","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = {})","<p>Executes the block for every line in the named I/O port, where lines are\nseparated by <em>sep</em>.\n<p>If no block …\n",null,1],["foreach","Net::POP3","Rails/classes/Net/POP3.html#method-c-foreach","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Starts a POP3 session and iterates over each POPMail object, yielding it to\nthe <code>block</code>. This method is …\n",null,1],["foreach","Net::POP3","Rails/classes/Net/POP3.html#method-c-foreach","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Starts a POP3 session and iterates over each POPMail object, yielding it to\nthe <code>block</code>. This method is …\n",null,1],["foreach","Net::POP3","Rails/classes/Net/POP3.html#method-c-foreach","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Starts a POP3 session and iterates over each POPMail object, yielding it to\nthe <code>block</code>. This method is …\n",null,1],["foreach","Net::POP3","Rails/classes/Net/POP3.html#method-c-foreach","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Starts a POP3 session and iterates over each POPMail object, yielding it to\nthe <code>block</code>. This method is …\n",null,1],["foreach","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-foreach","(path = nil, *rs)","<p>File related commands Shell#foreach Shell#open Shell#unlink Shell#test\n<p>-\n<p>CommandProcessor#foreach(path, …\n",null,1],["foreign_key","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-foreign_key","(class_name, separate_class_name_and_id_with_underscore = true)","<p>Creates a foreign key name from a class name.\n<code>separate_class_name_and_id_with_underscore</code> sets whether …\n",null,0],["foreign_key","String","Ruby/classes/String.html#method-i-foreign_key","(separate_class_name_and_id_with_underscore = true)","<p>Creates a foreign key name from a class name.\n<code>separate_class_name_and_id_with_underscore</code> sets whether …\n",null,0],["fork","Kernel","Rails/classes/Kernel.html#method-i-fork","()","<p>Creates a subprocess. If a block is specified, that block is run in the\nsubprocess, and the subprocess …\n",null,1],["fork","Process","Rails/classes/Process.html#method-c-fork","()","<p>Creates a subprocess. If a block is specified, that block is run in the\nsubprocess, and the subprocess …\n",null,1],["fork","Thread","Rails/classes/Thread.html#method-c-fork","(*args)","<p>Basically the same as <code>Thread::new</code>. However, if class\n<code>Thread</code> is subclassed, then calling <code>start</code> in that\n…\n",null,1],["form","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-form","(method = \"post\", action = script_name, enctype = \"application/x-www-form-urlencoded\")","<p>Generate a Form element as a string.\n<p><code>method</code> should be either \"get\" or \"post\", and ...\n",null,1],["form_authenticity_param","ActionController::RequestForgeryProtection","Ruby/classes/ActionController/RequestForgeryProtection.html#method-i-form_authenticity_param","()","<p>The form’s authenticity parameter. Override to provide your own.\n",null,0],["form_authenticity_token","ActionController::RequestForgeryProtection","Ruby/classes/ActionController/RequestForgeryProtection.html#method-i-form_authenticity_token","()","<p>Sets the token value for the current session.\n",null,0],["form_data=","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-form_data-3D","(params, sep = '&')","",null,1],["form_data?","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-form_data-3F","()","",null,0],["form_for","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-form_for","(record, options = {}, &block)","<p>Creates a form and a scope around a specific model object that is used as a\nbase for questioning about …\n",null,0],["form_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-form_tag","(url_for_options = {}, options = {}, &block)","<p>Starts a form tag that points the action to an url configured with\n<code>url_for_options</code> just like ActionController::Base#url_for …\n",null,0],["format","ActionDispatch::Http::MimeNegotiation","Ruby/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-format","(view_path = [])","<p>Returns the MIME type for the format used in the request.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">GET</span> <span class=\"ruby-regexp\">/posts/</span><span class=\"ruby-value\">5</span>.<span class=\"ruby-identifier\">xml</span>   <span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">request</span>.<span class=\"ruby-identifier\">format</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">Mime</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">XML</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["format","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-format","()","<p>Returns the current format, default is ActiveResource::Formats::JsonFormat.\n",null,0],["format","Erb::Generators::MailerGenerator","Ruby/classes/Erb/Generators/MailerGenerator.html#method-i-format","()","",null,0],["format","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-i-format","(format = nil, *args)","<p>Returns the contents of this Tms object as a formatted string, according to\na format string like that …\n",null,1],["format","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-format","()","<p>Lazy accessor for the installer’s Gem::Format instance.\n",null,1],["format","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-format","(*opts)","",null,1],["format","Kernel","Rails/classes/Kernel.html#method-i-format","(*args)","<p>Returns the string resulting from applying <em>format_string</em> to any\nadditional arguments.  Within the format …\n",null,1],["format","PrettyPrint","Rails/classes/PrettyPrint.html#method-c-format","(output='', maxwidth=79, newline=\"\\n\", genspace=lambda {|n| ' ' * n})","<p>This is a convenience method which is same as follows:\n\n<pre>begin\n  q = PrettyPrint.new(output, maxwidth, newline, ...</pre>\n",null,1],["format","WEBrick::AccessLog","Rails/classes/WEBrick/AccessLog.html#method-i-format","(format_string, params)","",null,1],["format=","ActionDispatch::Http::MimeNegotiation","Ruby/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-format-3D","(extension)","<p>Sets the format by string extension, which can be used to force custom\nformats that are not controlled …\n",null,0],["format=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-format-3D","(mime_type_reference_or_format)","<p>Sets the format that attributes are sent and received in from a mime type\nreference:\n\n<pre>Person.format = :json ...</pre>\n",null,0],["format_date","Net::IMAP","Rails/classes/Net/IMAP.html#method-c-format_date","(time)","<p>Formats <code>time</code> as an IMAP-style date.\n",null,1],["format_datetime","Net::IMAP","Rails/classes/Net/IMAP.html#method-c-format_datetime","(time)","<p>Formats <code>time</code> as an IMAP-style date-time.\n",null,1],["format_duration","ActiveSupport::LogSubscriber","Ruby/classes/ActiveSupport/LogSubscriber.html#method-i-format_duration","(duration)","",null,0],["format_frame","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-format_frame","(pos)","",null,1],["format_paragraph","ActionMailer::MailHelper","Ruby/classes/ActionMailer/MailHelper.html#method-i-format_paragraph","(text, len = 72, indent = 2)","<p>Returns <code>text</code> wrapped at <code>len</code> columns and indented\n<code>indent</code> spaces.\n<p>Examples\n\n<pre>my_text = &quot;Here is a sample text ...</pre>\n",null,0],["format_text","Gem::Text","Rails/classes/Gem/Text.html#method-i-format_text","(text, wrap, indent=0)","<p>Wraps <code>text</code> to <code>wrap</code> characters and optionally\nindents by <code>indent</code> characters\n",null,1],["formats","ActionDispatch::Http::MimeNegotiation","Ruby/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-formats","()","",null,0],["formatted_offset","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","",null,0],["formatted_offset","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-formatted_offset","(colon=true, alternate_utc_string = nil)","<p>Returns the offset of this time zone as a formatted string, of the format\n“+HH:MM”.\n",null,0],["formatted_offset","DateTime","Ruby/classes/DateTime.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>Returns the <code>utc_offset</code> as an +HH:MM formatted string.\nExamples:\n\n<pre>datetime = DateTime.civil(2000, 1, 1, ...</pre>\n",null,0],["formatted_offset","Time","Ruby/classes/Time.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>Returns the UTC offset as an +HH:MM formatted string.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2000</span>).<span class=\"ruby-identifier\">formatted_offset</span>         <span class=\"ruby-comment\"># =&gt; &quot;-06:00&quot; ...</span>\n</pre>\n",null,0],["formatted_program_filename","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-formatted_program_filename","(filename)","<p>Prefix and suffix the program filename the same as ruby.\n",null,1],["formatted_program_filename","Gem::Uninstaller","Rails/classes/Gem/Uninstaller.html#method-i-formatted_program_filename","(filename)","",null,1],["formatter","RDoc::Generator::Markup","Rails/classes/RDoc/Generator/Markup.html#method-i-formatter","()","<p>Creates an RDoc::Markup::ToHtmlCrossref formatter\n",null,1],["formatter","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-formatter","(io)","<p>Creates a new RDoc::Markup::Formatter.  If a formatter is given with -f,\nuse it.  If we’re outputting …\n",null,1],["fortnight","Numeric","Ruby/classes/Numeric.html#method-i-fortnight","()","",null,0],["fortnights","Numeric","Ruby/classes/Numeric.html#method-i-fortnights","()","",null,0],["forty_two","Array","Ruby/classes/Array.html#method-i-forty_two","()","<p>Equal to <code>self[41]</code>. Also known as accessing “the reddit”.\n",null,0],["fourth","Array","Ruby/classes/Array.html#method-i-fourth","()","<p>Equal to <code>self[3]</code>.\n",null,0],["frac","BigDecimal","Rails/classes/BigDecimal.html#method-i-frac","()","<p>Return the fractional part of the number.\n",null,1],["fragment=","URI::Generic","Rails/classes/URI/Generic.html#method-i-fragment-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["fragment_cache_key","ActionController::Caching::Fragments","Ruby/classes/ActionController/Caching/Fragments.html#method-i-fragment_cache_key","(key)","<p>Given a key (as described in <code>expire_fragment</code>), returns a key\nsuitable for use in reading, writing, or …\n",null,0],["fragment_exist?","ActionController::Caching::Fragments","Ruby/classes/ActionController/Caching/Fragments.html#method-i-fragment_exist-3F","(key, options = nil)","<p>Check if a cached fragment from the location signified by  <code>key</code>\nexists (see <code>expire_fragment</code> for acceptable …\n",null,0],["frame_set_pos","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-frame_set_pos","(file, line)","",null,1],["framework_trace","ActionDispatch::ExceptionWrapper","Ruby/classes/ActionDispatch/ExceptionWrapper.html#method-i-framework_trace","()","",null,0],["framework_version","Rails::Info","Ruby/classes/Rails/Info.html#method-c-framework_version","(framework)","",null,0],["frameworks","Rails::Info","Ruby/classes/Rails/Info.html#method-c-frameworks","()","",null,0],["free","DL","Rails/classes/DL.html#method-c-free","(p1)","<p>Free the memory at address <code>addr</code>\n",null,1],["free","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-free","()","<p>Get the free function for this pointer.  Returns  DL::CFunc or nil.\n",null,1],["free","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-free","()","<p>Get the free function for this pointer.  Returns  DL::CFunc or nil.\n",null,1],["free=","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-free-3D","(p1)","<p>Set the free function for this pointer to the DL::CFunc in\n<code>function</code>.\n",null,1],["free=","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-free-3D","(p1)","<p>Set the free function for this pointer to the DL::CFunc in\n<code>function</code>.\n",null,1],["freeze","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-freeze","()","<p>Freeze the attributes hash such that associations are still accessible,\neven on destroyed records.\n",null,0],["freeze","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-freeze","()","",null,0],["freeze","Delegator","Rails/classes/Delegator.html#method-i-freeze","","<p>Freeze both the object returned by __getobj__ and self.\n",null,1],["freeze","Module","Rails/classes/Module.html#method-i-freeze","()","<p>Prevents further modifications to <em>mod</em>.\n<p>This method returns self.\n",null,1],["freeze","Object","Rails/classes/Object.html#method-i-freeze","()","<p>Prevents further modifications to <em>obj</em>. A <code>RuntimeError</code>\nwill be raised if modification is attempted. There …\n",null,1],["freeze","Pathname","Rails/classes/Pathname.html#method-i-freeze","()","",null,1],["freeze_with_memoizable","ActiveSupport::Memoizable::InstanceMethods","Ruby/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-i-freeze_with_memoizable","()","",null,0],["fresh?","ActionDispatch::Http::Cache::Request","Ruby/classes/ActionDispatch/Http/Cache/Request.html#method-i-fresh-3F","(response)","<p>Check response freshness (Last-Modified and ETag) against request\nIf-Modified-Since and If-None-Match …\n",null,0],["fresh_when","ActionController::ConditionalGet","Ruby/classes/ActionController/ConditionalGet.html#method-i-fresh_when","(record_or_options, additional_options = {})","<p>Sets the etag, last_modified, or both on the response and renders a\n<code>304 Not Modified</code> response if the …\n",null,0],["frexp","Math","Rails/classes/Math.html#method-c-frexp","(p1)","<p>Returns a two-element array containing the normalized fraction (a\n<code>Float</code>) and exponent (a <code>Fixnum</code>) of  …\n",null,1],["friday?","Date","Rails/classes/Date.html#method-i-friday-3F","()","<p>Returns true if the date is Friday.\n",null,1],["friday?","Time","Rails/classes/Time.html#method-i-friday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Friday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">1987</span>, <span class=\"ruby-value\">12</span>, <span class=\"ruby-value\">18</span>)     <span class=\"ruby-comment\">#=&gt; 1987-12-18 00:00:00 -0600 ...</span>\n</pre>\n",null,1],["friendly_path","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-friendly_path","()","<p>Friendly rendition of #path\n",null,1],["from","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-from","(value)","",null,0],["from","Array","Ruby/classes/Array.html#method-i-from","(position)","<p>Returns the tail of the array from <code>position</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">from</span>(<span class=\"ruby-value\">0</span>)  <span class=\"ruby-comment\"># =&gt; %w( a b c d )</span>\n<span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">from</span>(<span class=\"ruby-value\">2</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["from","String","Ruby/classes/String.html#method-i-from","(position)","<p>Returns the remaining of the string from the <code>position</code> treating\nthe string as an array (where 0 is the …\n",null,0],["from","Gem::Package::TarHeader","Rails/classes/Gem/Package/TarHeader.html#method-c-from","(stream)","<p>Creates a tar header from IO <code>stream</code>\n",null,1],["from_array","ActiveResource::Errors","Ruby/classes/ActiveResource/Errors.html#method-i-from_array","(messages, save_cache = false)","<p>Grabs errors from an array of messages (like ActiveRecord::Validations).\nThe second parameter directs …\n",null,0],["from_file_by_path","Gem::Format","Rails/classes/Gem/Format.html#method-c-from_file_by_path","(file_path, security_policy = nil)","<p>Reads the gem <code>file_path</code> using <code>security_policy</code> and\nreturns a Format representing the data in the gem\n",null,1],["from_file_by_path","Gem::OldFormat","Rails/classes/Gem/OldFormat.html#method-c-from_file_by_path","(file_path)","<p>Reads the named gem file and returns a Format object, representing the data\nfrom the gem file\n<p>file_path … &mdash; ",null,1],["from_gems_in","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-c-from_gems_in","(*spec_dirs)","<p>Creates a new SourceIndex from the ruby format gem specifications in\n<code>spec_dirs</code>.\n",null,1],["from_installed_gems","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-c-from_installed_gems","(*deprecated)","<p>Factory method to construct a source index instance for a given path.\n<p>deprecated &mdash; If supplied, from_installed_gems …\n",null,1],["from_io","Gem::Format","Rails/classes/Gem/Format.html#method-c-from_io","(io, gem_path=\"(io)\", security_policy = nil)","<p>Reads a gem from <code>io</code> at <code>gem_path</code> using\n<code>security_policy</code> and returns a Format representing the data\nfrom …\n",null,1],["from_io","Gem::OldFormat","Rails/classes/Gem/OldFormat.html#method-c-from_io","(io, gem_path=\"(io)\")","<p>Reads a gem from an io stream and returns a Format object, representing the\ndata from the gem file\n<p>io … &mdash; ",null,1],["from_json","ActiveModel::Serializers::JSON","Ruby/classes/ActiveModel/Serializers/JSON.html#method-i-from_json","(json, include_root=include_root_in_json)","",null,0],["from_json","ActiveResource::Errors","Ruby/classes/ActiveResource/Errors.html#method-i-from_json","(json, save_cache = false)","<p>Grabs errors from a json response.\n",null,0],["from_module","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-c-from_module","(class_type, mod)","<p>Return a RDoc::ClassModule of class <code>class_type</code> that is a copy\nof module <code>module</code>. Used to promote modules …\n",null,1],["from_now","ActiveSupport::Duration","Ruby/classes/ActiveSupport/Duration.html#method-i-from_now","(time = ::Time.current)","",null,0],["from_now","Numeric","Ruby/classes/Numeric.html#method-i-from_now","(time = ::Time.current)","<p>Reads best without arguments:  10.minutes.from_now\n",null,0],["from_prime_division","Integer","Rails/classes/Integer.html#method-c-from_prime_division","(pd)","<p>Re-composes a prime factorization and returns the product.\n<p>See Prime#int_from_prime_division for more …\n",null,1],["from_rails_root","ActionView::LogSubscriber","Ruby/classes/ActionView/LogSubscriber.html#method-i-from_rails_root","(string)","",null,0],["from_source_index","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-c-from_source_index","(ignored=nil)","<p>Creates a DependencyList from a Gem::SourceIndex <code>source_index</code>\n",null,1],["from_specs","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-c-from_specs","()","<p>Creates a DependencyList from the current specs.\n",null,1],["from_trusted_xml","Hash","Ruby/classes/Hash.html#method-c-from_trusted_xml","(xml)","",null,0],["from_xml","ActiveModel::Serializers::Xml","Ruby/classes/ActiveModel/Serializers/Xml.html#method-i-from_xml","(xml)","",null,0],["from_xml","ActiveResource::Errors","Ruby/classes/ActiveResource/Errors.html#method-i-from_xml","(xml, save_cache = false)","<p>Grabs errors from an XML response.\n",null,0],["from_xml","Hash","Ruby/classes/Hash.html#method-c-from_xml","(xml, disallowed_types = nil)","",null,0],["from_yaml","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-from_yaml","(input)","<p>Special loader for YAML files.  When a Specification object is loaded from\na YAML file, it bypasses the …\n",null,1],["front","DRb","Rails/classes/DRb.html#method-c-front","()","<p>Get the front object of the current server.\n<p>This raises a DRbServerNotFound error if there is no current …\n",null,1],["front","DRb::ExtServ","Rails/classes/DRb/ExtServ.html#method-i-front","()","",null,1],["frozen?","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-frozen-3F","()","<p>Returns <code>true</code> if the attributes hash has been frozen.\n",null,0],["frozen?","Array","Rails/classes/Array.html#method-i-frozen-3F","()","<p>Return <code>true</code> if this array is frozen (or temporarily frozen\nwhile being sorted).\n",null,1],["frozen?","Object","Rails/classes/Object.html#method-i-frozen-3F","()","<p>Returns the freeze status of <em>obj</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span>, <span class=\"ruby-string\">&quot;c&quot;</span> ]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">freeze</span>    <span class=\"ruby-comment\">#=&gt; [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">frozen?</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["fsync","IO","Rails/classes/IO.html#method-i-fsync","()","<p>Immediately writes all buffered data in <em>ios</em> to disk. Note that\n<code>fsync</code> differs from using <code>IO#sync=</code>. The …\n",null,1],["fsync","StringIO","Rails/classes/StringIO.html#method-i-fsync","()","",null,1],["ftype","File","Rails/classes/File.html#method-c-ftype","(p1)","<p>Identifies the type of the named file; the return string is one of\n“<code>file</code>”, “<code>directory</code>”, “<code>character</code> …\n",null,1],["ftype","File::Stat","Rails/classes/File/Stat.html#method-i-ftype","()","<p>Identifies the type of <em>stat</em>. The return string is one of:\n“<code>file</code>”, “<code>directory</code>”,\n“<code>characterSpecial</code> …\n",null,1],["ftype","Pathname","Rails/classes/Pathname.html#method-i-ftype","()","<p>See <code>File.ftype</code>.  Returns “type” of file (“file”, “directory”,\netc).\n",null,1],["full?","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-full-3F","()","",null,0],["full_gem_path","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-full_gem_path","()","<p>The full path to the gem (install path + full name).\n",null,1],["full_message","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-full_message","(attribute, message)","<p>Returns a full message for a given attribute.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">company</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">full_message</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-string\">&quot;is invalid&quot;</span>)  <span class=\"ruby-comment\"># =&gt;</span>\n <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["full_messages","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-full_messages","()","<p>Returns all the full error messages in an array.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Company</span>\n  <span class=\"ruby-identifier\">validates_presence_of</span> :<span class=\"ruby-identifier\">name</span>, :<span class=\"ruby-identifier\">address</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["full_name","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-full_name","()","<p>Full name of the tar entry\n",null,1],["full_name","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-full_name","()","<p>Returns the full name (name-version) of this Gem.  Platform information is\nincluded (name-version-platform) …\n",null,1],["full_name","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-full_name","()","<p>Return the fully qualified name of this class or module\n",null,1],["full_name","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-full_name","()","<p>The full name for this context.  This method is overridden by subclasses.\n",null,1],["full_name","RDoc::Include","Rails/classes/RDoc/Include.html#method-i-full_name","()","<p>Full name based on #module\n",null,1],["full_name","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-full_name","()","<p>Full method/attribute name including namespace\n",null,1],["full_name","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-full_name","()","<p>Returns the relative name of this file\n",null,1],["full_name","RSS::Element","Rails/classes/RSS/Element.html#method-i-full_name","()","",null,1],["full_name","RSS::ITunesChannelModel::ITunesCategory","Rails/classes/RSS/ITunesChannelModel/ITunesCategory.html#method-i-full_name","()","",null,1],["full_name","RSS::ITunesChannelModel::ITunesImage","Rails/classes/RSS/ITunesChannelModel/ITunesImage.html#method-i-full_name","()","",null,1],["full_name","RSS::ITunesChannelModel::ITunesOwner","Rails/classes/RSS/ITunesChannelModel/ITunesOwner.html#method-i-full_name","()","",null,1],["full_name","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-full_name","()","",null,1],["full_name","RSS::ImageFaviconModel::ImageFavicon","Rails/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-i-full_name","()","",null,1],["full_name","RSS::ImageItemModel::ImageItem","Rails/classes/RSS/ImageItemModel/ImageItem.html#method-i-full_name","()","",null,1],["full_name","RSS::RDF","Rails/classes/RSS/RDF.html#method-i-full_name","()","",null,1],["full_name","RSS::RDF::Bag","Rails/classes/RSS/RDF/Bag.html#method-i-full_name","()","",null,1],["full_name","RSS::RDF::Bag","Rails/classes/RSS/RDF/Bag.html#method-i-full_name","()","",null,1],["full_name","RSS::RDF::Li","Rails/classes/RSS/RDF/Li.html#method-i-full_name","()","",null,1],["full_name","RSS::RDF::Li","Rails/classes/RSS/RDF/Li.html#method-i-full_name","()","",null,1],["full_name","RSS::RDF::Li","Rails/classes/RSS/RDF/Li.html#method-i-full_name","()","",null,1],["full_name","RSS::RDF::Seq","Rails/classes/RSS/RDF/Seq.html#method-i-full_name","()","",null,1],["full_name","RSS::RDF::Seq","Rails/classes/RSS/RDF/Seq.html#method-i-full_name","()","",null,1],["full_name","RSS::TaxonomyTopicModel::TaxonomyTopic","Rails/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html#method-i-full_name","()","",null,1],["full_name","RSS::TaxonomyTopicsModel::TaxonomyTopics","Rails/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-i-full_name","()","",null,1],["full_name","RSS::TrackBackModel10::TrackBackAbout","Rails/classes/RSS/TrackBackModel10/TrackBackAbout.html#method-i-full_name","()","",null,1],["full_name","RSS::TrackBackModel10::TrackBackPing","Rails/classes/RSS/TrackBackModel10/TrackBackPing.html#method-i-full_name","()","",null,1],["full_name","RSS::TrackBackModel20::TrackBackAbout","Rails/classes/RSS/TrackBackModel20/TrackBackAbout.html#method-i-full_name","()","",null,1],["full_name","RSS::TrackBackModel20::TrackBackPing","Rails/classes/RSS/TrackBackModel20/TrackBackPing.html#method-i-full_name","()","",null,1],["full_name","RSS::XML::Element","Rails/classes/RSS/XML/Element.html#method-i-full_name","()","",null,1],["full_name=","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-full_name-3D","(full_name)","<p>Sets the full_name overriding any computed full name.\n<p>Set to <code>nil</code> to clear RDoc’s cached value\n",null,1],["full_old_name","RDoc::Alias","Rails/classes/RDoc/Alias.html#method-i-full_old_name","()","<p>Full old name including namespace\n",null,1],["full_trace","ActionDispatch::ExceptionWrapper","Ruby/classes/ActionDispatch/ExceptionWrapper.html#method-i-full_trace","()","",null,0],["fullpath","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-fullpath","()","",null,0],["fully_documented?","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-fully_documented-3F","()","<p>Does this context and its methods and constants all have documentation?\n<p>(Yes, fully documented doesn’t …\n",null,1],["fully_documented?","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-fully_documented-3F","()","<p>The documentation status of this project.  <code>true</code> when 100%,\n<code>false</code> when less than 100% and <code>nil</code> when unknown. …\n",null,1],["fully_expanded_name","REXML::Namespace","Rails/classes/REXML/Namespace.html#method-i-fully_expanded_name","()","<p>Fully expand the name, even if the prefix wasn’t specified in the source\nfile.\n",null,1],["function","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-function","( elements, fname, rest )","",null,1],["future?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-future-3F","()","",null,0],["future?","Date","Ruby/classes/Date.html#method-i-future-3F","()","<p>Returns true if the Date object’s date lies in the future.\n",null,0],["future?","DateTime","Ruby/classes/DateTime.html#method-i-future-3F","()","<p>Tells whether the DateTime object’s datetime lies in the future\n",null,0],["future?","Time","Ruby/classes/Time.html#method-i-future-3F","()","<p>Tells whether the Time object’s time lies in the future\n",null,0],["g_length","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-g_length","()","<p>Returns the number of grapheme clusters in the string.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">'क्षि'</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">length</span>   <span class=\"ruby-comment\"># =&gt; 4</span>\n<span class=\"ruby-string\">'क्षि'</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">g_length</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["g_pack","ActiveSupport::Multibyte::Unicode","Ruby/classes/ActiveSupport/Multibyte/Unicode.html#method-i-g_pack","(unpacked)","<p>Reverse operation of g_unpack.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Unicode</span>.<span class=\"ruby-identifier\">g_pack</span>(<span class=\"ruby-constant\">Unicode</span>.<span class=\"ruby-identifier\">g_unpack</span>(<span class=\"ruby-string\">'क्षि'</span>)) <span class=\"ruby-comment\"># =&gt; 'क्षि'</span>\n</pre>\n",null,0],["g_unpack","ActiveSupport::Multibyte::Unicode","Ruby/classes/ActiveSupport/Multibyte/Unicode.html#method-i-g_unpack","(string)","<p>Unpack the string at grapheme boundaries. Returns a list of character\nlists.\n<p>Example:\n\n<pre>Unicode.g_unpack('क्षि') ...</pre>\n",null,0],["gamma","Math","Rails/classes/Math.html#method-c-gamma","(p1)","<p>Calculates the gamma function of x.\n<p>Note that gamma(n) is same as fact(n-1) for integer n &gt; 0. However …\n",null,1],["garbage_collect","GC","Rails/classes/GC.html#method-i-garbage_collect","()","<p>Initiates garbage collection, unless manually disabled.\n",null,1],["garbage_collect","ObjectSpace","Rails/classes/ObjectSpace.html#method-c-garbage_collect","()","<p>Initiates garbage collection, unless manually disabled.\n",null,1],["gather_dependencies","Gem::DependencyInstaller","Rails/classes/Gem/DependencyInstaller.html#method-i-gather_dependencies","()","<p>Gathers all dependencies necessary for the installation from local and\nremote sources unless the ignore_dependencies …\n",null,1],["gather_files","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-gather_files","(files)","<p>Gathers a set of parseable files from the files and directories listed in\n<code>files</code>.\n",null,1],["gcd","Integer","Rails/classes/Integer.html#method-i-gcd","(p1)","<p>Returns the greatest common divisor (always positive).  0.gcd(x) and\nx.gcd(0) return abs(x).\n<p>For example: …\n",null,1],["gcdlcm","Integer","Rails/classes/Integer.html#method-i-gcdlcm","(p1)","<p>Returns an array; [int.gcd(int2), int.lcm(int2)].\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-value\">2</span>.<span class=\"ruby-identifier\">gcdlcm</span>(<span class=\"ruby-value\">2</span>)                    <span class=\"ruby-comment\">#=&gt; [2, 2] ...</span>\n</pre>\n",null,1],["gem","Build","Ruby/classes/Build.html#method-i-gem","()","",null,0],["gem","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-gem","(*args)","<p>Adds an entry into Gemfile for the supplied gem. If env is specified, add\nthe gem to the given environment. …\n",null,0],["gem","Kernel","Rails/classes/Kernel.html#method-i-gem","(gem_name, *requirements)","<p>Use Kernel#gem to activate a specific version of <code>gem_name</code>.\n<p><code>requirements</code> is a list of version requirements ...\n",null,1],["gem_dir","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-gem_dir","()","<p>Lazy accessor for the spec’s gem directory.\n",null,1],["gem_dir","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-gem_dir","()","<p>Returns the full path to this spec’s gem directory. eg:\n/usr/local/lib/ruby/1.8/gems/mygem-1.0\n",null,1],["gem_file_list","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-gem_file_list","()","<p>List of gem file names to index.\n",null,1],["gem_for_database","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-gem_for_database","()","",null,0],["gem_group","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-gem_group","(*names, &block)","<p>Wraps gem entries inside a group.\n<p>Example\n\n<pre>gem_group :development, :test do\n  gem &quot;rspec-rails&quot;\nend</pre>\n",null,0],["gem_original_require","Kernel","Rails/classes/Kernel.html#method-i-gem_original_require","(p1)","<p>The Kernel#require from before RubyGems was loaded.\n",null,1],["gem_paths","Gem::Commands::WhichCommand","Rails/classes/Gem/Commands/WhichCommand.html#method-i-gem_paths","(spec)","",null,1],["gem_signature","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-gem_signature","(gem_full_name)","<p>The signature for the given gem specification.\n",null,1],["gemdirs","RDoc::RI::Paths","Rails/classes/RDoc/RI/Paths.html#method-c-gemdirs","()","<p>The latest installed gems’ ri directories\n",null,1],["gemfile","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-gemfile","()","",null,0],["gemfile","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-gemfile","()","",null,0],["gems_dir","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-gems_dir","()","<p>Returns the full path to the gems directory containing this spec’s gem\ndirectory. eg: /usr/local/lib/ruby/1.8/gems …\n",null,1],["gemspec","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-gemspec","()","",null,0],["gen_relative_url","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-c-gen_relative_url","(path, target)","<p>Converts a target url to one that is relative to a given path\n",null,1],["gen_sub_directories","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-gen_sub_directories","()","<p>Create the directories the generated docs will live in if they don’t\nalready exist.\n",null,1],["gen_url","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-gen_url","(url, text)","<p>Generate a link for <code>url</code>, labeled with <code>text</code>. \nHandles the special cases for img: and link: described under …\n",null,1],["gen_url","RDoc::Markup::ToHtmlCrossref","Rails/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-gen_url","(url, text)","<p>Generates links for <code>rdoc-ref:</code> scheme URLs and allows\nRDoc::Markup::ToHtml to handle other schemes.\n",null,1],["generate","ActiveSupport::MessageVerifier","Ruby/classes/ActiveSupport/MessageVerifier.html#method-i-generate","(value)","",null,0],["generate","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-generate","(what, *args)","<p>Generate something using a generator from Rails or a plugin. The second\nparameter is the argument string …\n",null,0],["generate","RailsGuides::Generator","Ruby/classes/RailsGuides/Generator.html#method-i-generate","()","",null,0],["generate","CSV","Rails/classes/CSV.html#method-c-generate","(*args)","<p>This method wraps a String you provide, or an empty default String, in a\nCSV object which is passed to …\n",null,1],["generate","JSON","Rails/classes/JSON.html#method-i-generate","(obj, opts = nil)","<p>Generate a JSON document from the Ruby data structure <em>obj</em> and\nreturn it. <em>state</em> is * a JSON::State object, …\n",null,1],["generate","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-c-generate","(p1, p2 = v2)","<p>Creates a new DH instance from scratch by generating the private and public\ncomponents alike.\n<p>Parameters …\n",null,1],["generate","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-c-generate","(p1)","<p>Creates a new DSA instance by generating a private/public key pair from\nscratch.\n<p>Parameters\n<p><code>size</code> is an ...\n",null,1],["generate","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-c-generate","(p1, p2 = v2)","<p>Generates an RSA keypair.  <code>size</code> is an integer representing the\ndesired key size.  Keys smaller than 1024 …\n",null,1],["generate","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-generate","(top_levels)","<p>Build the initial indices and output objects based on an array of TopLevel\nobjects containing the extracted …\n",null,1],["generate","RDoc::Generator::RI","Rails/classes/RDoc/Generator/RI.html#method-i-generate","(top_levels)","<p>Build the initial indices and output objects based on an array of TopLevel\nobjects containing the extracted …\n",null,1],["generate","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-generate","(file_info)","<p>Generates documentation for <code>file_info</code> (from #parse_files) into\nthe output dir using the generator selected …\n",null,1],["generate","RDoc::RubygemsHook","Rails/classes/RDoc/RubygemsHook.html#method-i-generate","()","<p>Generates RDoc and ri data\n",null,1],["generate_bin","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-generate_bin","()","",null,1],["generate_bin_script","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-generate_bin_script","(filename, bindir)","<p>Creates the scripts to run the applications in the gem.\n",null,1],["generate_bin_symlink","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-generate_bin_symlink","(filename, bindir)","<p>Creates the symlinks to run the applications in the gem.  Moves the symlink\nif the gem being installed …\n",null,1],["generate_class_files","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-generate_class_files","()","<p>Generate a documentation file for each class\n",null,1],["generate_default_dirs","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-i-generate_default_dirs","(install_destdir)","",null,1],["generate_event","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-i-generate_event","( event )","",null,1],["generate_file_files","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-generate_file_files","()","<p>Generate a documentation file for each file\n",null,1],["generate_index","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-generate_index","()","<p>Builds and installs indicies.\n",null,1],["generate_index","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-generate_index","()","<p>Generate an index page which lists all the classes which are documented.\n",null,1],["generate_key","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-generate_key","()","<p>See the OpenSSL documentation for EC_KEY_generate_key()\n",null,1],["generate_key!","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-generate_key-21","()","<p>Generates a private and public key unless a private key already exists. If\nthis DH instance was generated …\n",null,1],["generate_line","CSV","Rails/classes/CSV.html#method-c-generate_line","(row, options = Hash.new)","<p>This method is a shortcut for converting a single row (Array) into a CSV\nString.\n<p>The <code>options</code> parameter …\n",null,1],["generate_message","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-generate_message","(attribute, type = :invalid, options = {})","<p>Translates an error message in its default scope\n(<code>activemodel.errors.messages</code>).\n<p>Error messages are first …\n",null,0],["generate_method_for_mime","AbstractController::Collector","Ruby/classes/AbstractController/Collector.html#method-c-generate_method_for_mime","(mime)","",null,0],["generate_prime","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-c-generate_prime","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Parameters\n<p><code>bits</code> - integer\n<p><code>safe</code> - boolean\n",null,1],["generate_railtie_name","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-c-generate_railtie_name","(class_or_module)","",null,0],["generate_rdoc","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-i-generate_rdoc","()","<p>Generate the RDoc documents for this gem spec.\n<p>Note that if both RI and RDoc documents are generated from …\n",null,1],["generate_ri","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-i-generate_ri","()","<p>Generate the RI documents for this gem spec.\n<p>Note that if both RI and RDoc documents are generated from …\n",null,1],["generate_sid","ActionDispatch::Session::Compatibility","Ruby/classes/ActionDispatch/Session/Compatibility.html#method-i-generate_sid","()","",null,0],["generate_test_dummy","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-generate_test_dummy","(force = false)","",null,0],["generate_windows_script","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-generate_windows_script","(filename, bindir)","<p>Creates windows .bat files for easy running of commands\n",null,1],["generated_external_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-generated_external_attribute_methods","()","<p>We will define the methods as instance methods, but will call them as\nsingleton methods. This allows …\n",null,0],["generated_feature_methods","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-generated_feature_methods","()","",null,0],["generation_hook","RDoc::RubygemsHook","Rails/classes/RDoc/RubygemsHook.html#method-c-generation_hook","(installer, specs)","<p>Post installs hook that generates documentation for each specification in\n<code>specs</code>\n",null,1],["generator","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-generator","()","<p>See the OpenSSL documentation for EC_GROUP_get0_generator()\n",null,1],["generator_descriptions","RDoc::Options","Rails/classes/RDoc/Options.html#method-i-generator_descriptions","()","<p>Returns a properly-space list of generators and their descriptions.\n",null,1],["generator_dir","Rails::Generators::GeneratorGenerator","Ruby/classes/Rails/Generators/GeneratorGenerator.html#method-i-generator_dir","()","",null,0],["generator_name","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-generator_name","()","<p>Removes the namespaces and get the generator name. For example,\nRails::Generators::ModelGenerator will …\n",null,0],["generators","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-c-generators","(&blk)","",null,0],["generic?","Complex","Rails/classes/Complex.html#method-c-generic-3F","(other)","",null,1],["get","ActionDispatch::Routing::Mapper::HttpHelpers","Ruby/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-get","(*args, &block)","<p>Define a route that only recognizes HTTP GET. For supported arguments, see\n<code>Base#match</code>.\n<p>Example:\n<p>get ‘bacon’, …\n",null,0],["get","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-get","(key)","<p>Get messages for <code>key</code>\n",null,0],["get","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-get","(klass, primary_key)","",null,0],["get","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-get","(path, headers = {})","<p>Executes a GET request. Used to get (find) resources.\n",null,0],["get","ActiveResource::CustomMethods","Ruby/classes/ActiveResource/CustomMethods.html#method-i-get","(method_name, options = {})","",null,0],["get","ActiveResource::CustomMethods","Ruby/classes/ActiveResource/CustomMethods.html#method-c-get","(custom_method_name, options = {})","<p>Invokes a GET to a given custom REST method. For example:\n\n<pre>Person.get(:active)  # GET /people/active.json ...</pre>\n",null,0],["get","ActiveSupport::Dependencies::ClassCache","Ruby/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-get","(key)","",null,0],["get","GetoptLong","Rails/classes/GetoptLong.html#method-i-get","()","<p>Get next option name and its argument, as an Array of two elements.\n<p>The option name is always converted …\n",null,1],["get","Net::FTP","Rails/classes/Net/FTP.html#method-i-get","(remotefile, localfile = File.basename(remotefile), blocksize = DEFAULT_BLOCKSIZE)","<p>Retrieves <code>remotefile</code> in whatever mode the session is set (text\nor binary).  See #gettextfile and #getbinaryfile …\n",null,1],["get","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-get","(path, initheader = {}, dest = nil)","<p>Gets data from <code>path</code> on the connected-to host.\n<code>initheader</code> must be a Hash like { ‘Accept’ =&gt;\n‘<strong>/</strong>’, … …\n",null,1],["get","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-get","(path, initheader = {}, dest = nil)","<p>Gets data from <code>path</code> on the connected-to host.\n<code>initheader</code> must be a Hash like { ‘Accept’ =&gt;\n‘<strong>/</strong>’, … …\n",null,1],["get","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-get","(uri_or_host, path = nil, port = nil)","<p>Sends a GET request to the target and returns the HTTP response as a\nstring.  The target can either be …\n",null,1],["get","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-get","(uri_or_host, path = nil, port = nil)","<p>Sends a GET request to the target and returns the HTTP response as a\nstring.  The target can either be …\n",null,1],["get","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-get","()","<p>Pulls the next token from the stream.\n",null,1],["get2","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-get2","(path, initheader = nil)","",null,1],["get2","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-get2","(path, initheader = nil)","",null,1],["get?","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-get-3F","()","<p>Is this a GET (or HEAD) request? Equivalent to\n<code>request.request_method_symbol == :get</code>.\n",null,0],["get_all_gem_names","Gem::Command","Rails/classes/Gem/Command.html#method-i-get_all_gem_names","()","<p>Get all gem names from the command line.\n",null,1],["get_attribute","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-get_attribute","( name )","<p>Fetches an attribute\n<p>name &mdash; the name by which to search for the attribute.  Can be a\n<code>prefix:name</code> namespace …\n",null,1],["get_attribute_ns","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-get_attribute_ns","(namespace, name)","<p>The <code>get_attribute_ns</code> method retrieves a method by its\nnamespace and name. Thus it is possible to reliably …\n",null,1],["get_attributes","RSS::Element","Rails/classes/RSS/Element.html#method-c-get_attributes","()","",null,1],["get_bool","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-get_bool","()","<p>Looks for a true or false token.  Returns false if TkFALSE or TkNIL are\nfound.\n",null,1],["get_builder_class","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-get_builder_class","()","",null,0],["get_builder_class","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-get_builder_class","()","",null,0],["get_byte","StringScanner","Rails/classes/StringScanner.html#method-i-get_byte","()","<p>Scans one byte and returns it. This method is not multibyte character\nsensitive. See also: #getch.\n\n<pre>s = ...</pre>\n",null,1],["get_class_or_module","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-get_class_or_module","(container)","<p>Look for the name of a class of module (optionally with a leading  &mdash; or\n<p>with  &mdash; separated named) and return …\n\n",null,1],["get_class_specification","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-get_class_specification","()","<p>Return a superclass, which can be either a constant of an expression\n",null,1],["get_constant","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-get_constant","()","<p>Parse a constant, which might be qualified by one or more class or module\nnames\n",null,1],["get_constant_with_optional_parens","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-get_constant_with_optional_parens","()","<p>Get a constant that may be surrounded by parens\n",null,1],["get_default_handler","XMLRPC::BasicServer","Rails/classes/XMLRPC/BasicServer.html#method-i-get_default_handler","()","",null,1],["get_elements","REXML::Element","Rails/classes/REXML/Element.html#method-i-get_elements","( xpath )","<p>Synonym for Element.to_a This is a little slower than calling elements.each\ndirectly.\n<p>xpath &mdash; any XPath …\n",null,1],["get_fields","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-get_fields","(key)","<p>Ruby 1.8.3 &mdash; Returns an array of header field strings corresponding to the\ncase-insensitive <code>key</code>.  This …\n",null,1],["get_file_and_line_from_caller","RSS::Utils","Rails/classes/RSS/Utils.html#method-i-get_file_and_line_from_caller","(i=0)","",null,1],["get_first","REXML::XPathParser","Rails/classes/REXML/XPathParser.html#method-i-get_first","(path, nodeset)","",null,1],["get_hosts_path","Win32::Resolv","Rails/classes/Win32/Resolv.html#method-c-get_hosts_path","()","",null,1],["get_initial_token","Win32::SSPI::NegotiateAuth","Rails/classes/Win32/SSPI/NegotiateAuth.html#method-i-get_initial_token","()","<p>Gets the initial Negotiate token. Returns it as a base64 encoded string\nsuitable for use in HTTP. Can …\n",null,1],["get_instance","WEBrick::HTTPServlet::AbstractServlet","Rails/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-c-get_instance","(server, *options)","<p>Factory for servlet instances that will handle a request from\n<code>server</code> using <code>options</code> from the mount point. …\n",null,1],["get_instance","WEBrick::HTTPServlet::ProcHandler","Rails/classes/WEBrick/HTTPServlet/ProcHandler.html#method-i-get_instance","(server, *options)","",null,1],["get_instance","XMLRPC::WEBrickServlet","Rails/classes/XMLRPC/WEBrickServlet.html#method-i-get_instance","(config, *options)","",null,1],["get_metadata","Gem::Commands::UnpackCommand","Rails/classes/Gem/Commands/UnpackCommand.html#method-i-get_metadata","(path)","<p>Extracts the Gem::Specification and raw metadata from the .gem file at\n<code>path</code>.\n",null,1],["get_methods","XMLRPC::Service::Interface","Rails/classes/XMLRPC/Service/Interface.html#method-i-get_methods","(obj, delim=\".\")","",null,1],["get_methods","XMLRPC::Service::PublicInstanceMethodsInterface","Rails/classes/XMLRPC/Service/PublicInstanceMethodsInterface.html#method-i-get_methods","(obj, delim=\".\")","",null,1],["get_namespace","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-get_namespace","( node_set = nil )","<p>Helper method.\n",null,1],["get_one_gem_name","Gem::Command","Rails/classes/Gem/Command.html#method-i-get_one_gem_name","()","<p>Get a single gem name from the command line.  Fail if there is no gem name\nor if there is more than one …\n",null,1],["get_one_optional_argument","Gem::Command","Rails/classes/Gem/Command.html#method-i-get_one_optional_argument","()","<p>Get a single optional argument from the command line.  If more than one\nargument is given, return only …\n",null,1],["get_option","GetoptLong","Rails/classes/GetoptLong.html#method-i-get_option","()","<p>`get_option’ is an alias of `get’.\n",null,1],["get_passwd","WEBrick::HTTPAuth::Htdigest","Rails/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-get_passwd","(realm, user, reload_db)","<p>Retrieves a password from the database for <code>user</code> in\n<code>realm</code>.  If <code>reload_db</code> is true the database will be\n…\n",null,1],["get_passwd","WEBrick::HTTPAuth::Htpasswd","Rails/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-get_passwd","(realm, user, reload_db)","<p>Retrieves a password from the database for <code>user</code> in\n<code>realm</code>.  If <code>reload_db</code> is true the database will be\n…\n",null,1],["get_passwd","WEBrick::HTTPAuth::UserDB","Rails/classes/WEBrick/HTTPAuth/UserDB.html#method-i-get_passwd","(realm, user, reload_db=false)","<p>Retrieves a password in <code>realm</code> for <code>user</code> for the\nauth_type of this database.  <code>reload_db</code> is a dummy value. …\n",null,1],["get_path","Gem::Commands::UnpackCommand","Rails/classes/Gem/Commands/UnpackCommand.html#method-i-get_path","(dependency)","<p>Return the full path to the cached gem file matching the given name and\nversion requirement.  Returns …\n",null,1],["get_print","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-get_print","(uri_or_host, path = nil, port = nil)","<p>Gets the body text from the target and outputs it to $stdout.  The target\ncan either be specified as …\n",null,1],["get_print","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-get_print","(uri_or_host, path = nil, port = nil)","<p>Gets the body text from the target and outputs it to $stdout.  The target\ncan either be specified as …\n",null,1],["get_proxy_from_env","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-get_proxy_from_env","()","<p>Returns an HTTP proxy URI if one is set in the environment variables.\n",null,1],["get_readed","RubyLex","Rails/classes/RubyLex.html#method-i-get_readed","()","",null,1],["get_resolv_info","Win32::Resolv","Rails/classes/Win32/Resolv.html#method-c-get_resolv_info","()","",null,1],["get_response","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-get_response","(uri_or_host, path = nil, port = nil, &block)","<p>Sends a GET request to the target and returns the HTTP response as a\nNet::HTTPResponse object.  The target …\n",null,1],["get_response","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-get_response","(uri_or_host, path = nil, port = nil, &block)","<p>Sends a GET request to the target and returns the HTTP response as a\nNet::HTTPResponse object.  The target …\n",null,1],["get_screen_size","Readline","Rails/classes/Readline.html#method-c-get_screen_size","()","<p>Returns the terminal’s rows and columns.\n<p>See GNU Readline’s rl_get_screen_size function.\n<p>Raises NotImplementedError …\n",null,1],["get_service_hook","XMLRPC::BasicServer","Rails/classes/XMLRPC/BasicServer.html#method-i-get_service_hook","()","",null,1],["get_session","ActionDispatch::Session::CacheStore","Ruby/classes/ActionDispatch/Session/CacheStore.html#method-i-get_session","(env, sid)","<p>Get a session from the cache.\n",null,0],["get_sorted_module_list","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-get_sorted_module_list","(classes)","<p>Return a list of the documented modules sorted by salience first, then by\nname.\n",null,1],["get_svninfo","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-get_svninfo","(klass)","<p>Try to extract Subversion information out of the first constant whose value\nlooks like a subversion  …\n",null,1],["get_symbol_or_name","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-get_symbol_or_name","()","<p>Extracts a name or symbol from the token stream.\n",null,1],["get_text","REXML::Element","Rails/classes/REXML/Element.html#method-i-get_text","(path = nil)","<p>Returns the first child Text node, if any, or <code>nil</code> otherwise.\nThis method returns the actual <code>Text</code> node, …\n",null,1],["get_thread","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-get_thread","(num)","",null,1],["get_tk","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-get_tk","()","<p>Fetches the next token from the scanner\n",null,1],["get_tk_until","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-get_tk_until","(*tokens)","<p>Reads and returns all tokens up to one of <code>tokens</code>.  Leaves the\nmatched token in the token list.\n",null,1],["get_tkread","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-get_tkread","()","<p>Retrieves a String representation of the read tokens\n",null,1],["get_valid_ip","XMLRPC::WEBrickServlet","Rails/classes/XMLRPC/WEBrickServlet.html#method-i-get_valid_ip","()","",null,1],["get_value","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-get_value","(section, key)","",null,1],["getacl","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-getacl","(mailbox)","<p>Send the GETACL command along with specified <code>mailbox</code>. If this\nmailbox exists, an array containing objects …\n",null,1],["getaddress","IPSocket","Rails/classes/IPSocket.html#method-c-getaddress","(s)","<p>Returns a <code>String</code> based representation of a valid DNS hostname,\nIPv4 or IPv6 address.\n\n<pre>IPSocket.getaddress ...</pre>\n",null,1],["getaddress","Resolv","Rails/classes/Resolv.html#method-c-getaddress","(name)","<p>Looks up the first IP address for <code>name</code>.\n",null,1],["getaddress","Resolv","Rails/classes/Resolv.html#method-i-getaddress","(name)","<p>Looks up the first IP address for <code>name</code>.\n",null,1],["getaddress","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-i-getaddress","(name)","<p>Gets the IP address of <code>name</code> from the DNS resolver.\n<p><code>name</code> can be a Resolv::DNS::Name or a String.  Retrieved ...\n",null,1],["getaddress","Resolv::Hosts","Rails/classes/Resolv/Hosts.html#method-i-getaddress","(name)","<p>Gets the IP address of <code>name</code> from the hosts file.\n",null,1],["getaddress_orig","IPSocket","Rails/classes/IPSocket.html#method-c-getaddress_orig","(s)","",null,1],["getaddresses","Resolv","Rails/classes/Resolv.html#method-i-getaddresses","(name)","<p>Looks up all IP address for <code>name</code>.\n",null,1],["getaddresses","Resolv","Rails/classes/Resolv.html#method-c-getaddresses","(name)","<p>Looks up all IP address for <code>name</code>.\n",null,1],["getaddresses","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-i-getaddresses","(name)","<p>Gets all IP addresses for <code>name</code> from the DNS resolver.\n<p><code>name</code> can be a Resolv::DNS::Name or a String.  Retrieved ...\n",null,1],["getaddresses","Resolv::Hosts","Rails/classes/Resolv/Hosts.html#method-i-getaddresses","(name)","<p>Gets all IP addresses for <code>name</code> from the hosts file.\n",null,1],["getaddrinfo","Addrinfo","Rails/classes/Addrinfo.html#method-c-getaddrinfo","(p1, p2, p3 = v3, p4 = v4, p5 = v5, p6 = v6)","<p>returns a list of addrinfo objects as an array.\n<p>This method converts nodename (hostname) and service (port) …\n",null,1],["getaddrinfo","Socket","Rails/classes/Socket.html#method-c-getaddrinfo","(p1, p2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7)","<p>Obtains address information for <em>nodename</em>:<em>servname</em>.\n<p><em>family</em> should be an address family such as: :INET, ...\n",null,1],["getbinaryfile","Net::FTP","Rails/classes/Net/FTP.html#method-i-getbinaryfile","(remotefile, localfile = File.basename(remotefile), blocksize = DEFAULT_BLOCKSIZE)","<p>Retrieves <code>remotefile</code> in binary mode, storing the result in\n<code>localfile</code>. If <code>localfile</code> is nil, returns retrieved\n…\n",null,1],["getbkgd","Curses::Window","Rails/classes/Curses/Window.html#method-i-getbkgd","()","<p>Returns an Interer (<code>ch</code>) for the character property in the\ncurrent window.\n",null,1],["getbyte","ARGF","Rails/classes/ARGF.html#method-i-getbyte","()","<p>Gets the next 8-bit byte (0..255) from <code>ARGF</code>. Returns\n<code>nil</code> if called at the end of the stream.\n<p>For example: …\n",null,1],["getbyte","IO","Rails/classes/IO.html#method-i-getbyte","()","<p>Gets the next 8-bit byte (0..255) from <em>ios</em>. Returns\n<code>nil</code> if called at end of file.\n\n<pre>f = File.new(&quot;testfile&quot;) ...</pre>\n",null,1],["getbyte","String","Rails/classes/String.html#method-i-getbyte","(p1)","<p>returns the <em>index</em>th byte as an integer.\n",null,1],["getbyte","StringIO","Rails/classes/StringIO.html#method-i-getbyte","()","<p>See IO#getbyte.\n",null,1],["getbyte","StringScanner","Rails/classes/StringScanner.html#method-i-getbyte","()","<p>Equivalent to #get_byte. This method is obsolete; use #get_byte instead.\n",null,1],["getbyte","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-getbyte","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["getc","ARGF","Rails/classes/ARGF.html#method-i-getc","()","<p>Reads the next character from <code>ARGF</code> and returns it as a\n<code>String</code>. Returns <code>nil</code> at the end of the stream. …\n",null,1],["getc","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-getc","()","<p>Read one byte from the tar entry\n",null,1],["getc","IO","Rails/classes/IO.html#method-i-getc","()","<p>Reads a one-character string from <em>ios</em>. Returns <code>nil</code> if\ncalled at end of file.\n\n<pre>f = File.new(&quot;testfile&quot;) ...</pre>\n",null,1],["getc","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-getc","()","<p>Reads one character from the stream.  Returns nil if called at end of file.\n",null,1],["getc","RubyLex","Rails/classes/RubyLex.html#method-i-getc","()","",null,1],["getc","StringIO","Rails/classes/StringIO.html#method-i-getc","()","<p>See IO#getc.\n",null,1],["getc","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-getc","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["getc_of_rests","RubyLex","Rails/classes/RubyLex.html#method-i-getc_of_rests","()","",null,1],["getch","Curses","Rails/classes/Curses.html#method-c-getch","()","<p>Read and returns a character from the window.\n<p>See Curses::Key to all the function KEY_* available\n",null,1],["getch","Curses::Window","Rails/classes/Curses/Window.html#method-i-getch","()","<p>Read and returns a character from the window.\n<p>See Curses::Key to all the function KEY_* available\n",null,1],["getch","IO","Rails/classes/IO.html#method-i-getch","(*args)","<p>Reads and returns a character in raw mode.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["getch","IO::readable","Rails/classes/IO/readable.html#method-i-getch","(*args)","",null,1],["getch","StringScanner","Rails/classes/StringScanner.html#method-i-getch","()","<p>Scans one character and returns it. This method is multibyte character\nsensitive.\n\n<pre>s = StringScanner.new(&quot;ab&quot;) ...</pre>\n",null,1],["getdir","Net::FTP","Rails/classes/Net/FTP.html#method-i-getdir","()","",null,1],["getegid","Process::Sys","Rails/classes/Process/Sys.html#method-c-getegid","()","<p>Returns the effective group ID for this process. Not available on all\nplatforms.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">egid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,1],["geteuid","Process::Sys","Rails/classes/Process/Sys.html#method-c-geteuid","()","<p>Returns the effective user ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">euid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,1],["getgid","Process::Sys","Rails/classes/Process/Sys.html#method-c-getgid","()","<p>Returns the (real) group ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">gid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,1],["getgm","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-getgm","()","",null,0],["getgm","Time","Rails/classes/Time.html#method-i-getgm","()","<p>Returns a new <code>new_time</code> object representing <em>time</em> in\nUTC.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">20</span>,<span class=\"ruby-value\">15</span>,<span class=\"ruby-value\">1</span>)   <span class=\"ruby-comment\">#=&gt; 2000-01-01 ...</span>\n</pre>\n",null,1],["getgrent","Etc","Rails/classes/Etc.html#method-c-getgrent","()","<p>Returns an entry from the /etc/group file. The first time it is called it\nopens the file and returns …\n",null,1],["getgrgid","Etc","Rails/classes/Etc.html#method-c-getgrgid","(p1 = v1)","<p>Returns information about the group with specified integer group id (gid),\nas found in /etc/group.\n<p>The …\n",null,1],["getgrnam","Etc","Rails/classes/Etc.html#method-c-getgrnam","(p1)","<p>Returns information about the group with specified String name, as found in\n/etc/group.\n<p>The information …\n",null,1],["gethostbyaddr","Socket","Rails/classes/Socket.html#method-c-gethostbyaddr","(p1, p2 = v2)","<p>Obtains the host information for <em>address</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">Socket</span>.<span class=\"ruby-identifier\">gethostbyaddr</span>([<span class=\"ruby-value\">221</span>,<span class=\"ruby-value\">186</span>,<span class=\"ruby-value\">184</span>,<span class=\"ruby-value\">68</span>].<span class=\"ruby-identifier\">pack</span>(<span class=\"ruby-string\">&quot;CCCC&quot;</span>))\n<span class=\"ruby-comment\">#=&gt; [&quot;carbon.ruby-lang.org&quot;, ...</span>\n</pre>\n",null,1],["gethostbyname","Socket","Rails/classes/Socket.html#method-c-gethostbyname","(p1)","<p>Obtains the host information for <em>hostname</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">Socket</span>.<span class=\"ruby-identifier\">gethostbyname</span>(<span class=\"ruby-string\">&quot;hal&quot;</span>) <span class=\"ruby-comment\">#=&gt; [&quot;localhost&quot;, [&quot;hal&quot;], 2, ...</span>\n</pre>\n",null,1],["gethostbyname","TCPSocket","Rails/classes/TCPSocket.html#method-c-gethostbyname","(p1)","<p>Lookups host information by <em>hostname</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">TCPSocket</span>.<span class=\"ruby-identifier\">gethostbyname</span>(<span class=\"ruby-string\">&quot;localhost&quot;</span>)\n<span class=\"ruby-comment\">#=&gt; [&quot;localhost&quot;, [&quot;hal&quot;], ...</span>\n</pre>\n",null,1],["gethostname","Socket","Rails/classes/Socket.html#method-c-gethostname","()","<p>Returns the hostname.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">Socket</span>.<span class=\"ruby-identifier\">gethostname</span> <span class=\"ruby-comment\">#=&gt; &quot;hal&quot;</span>\n</pre>\n<p>Note that it is not guaranteed to be able to convert …\n",null,1],["getlocal","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-getlocal","()","",null,0],["getlocal","Time","Rails/classes/Time.html#method-i-getlocal","(p1 = v1)","<p>Returns a new <code>new_time</code> object representing <em>time</em> in\nlocal time (using the local time zone in effect for …\n",null,1],["getlogin","Etc","Rails/classes/Etc.html#method-c-getlogin","()","<p>Returns the short user name of the currently logged in user. Unfortunately,\nit is often rather easy to …\n",null,1],["getmouse","Curses","Rails/classes/Curses.html#method-c-getmouse","()","<p>Returns coordinates of the mouse.\n<p>This will read and pop the mouse event data off the queue\n<p>See the BUTTON*, …\n",null,1],["getname","Resolv","Rails/classes/Resolv.html#method-i-getname","(address)","<p>Looks up the hostname of <code>address</code>.\n",null,1],["getname","Resolv","Rails/classes/Resolv.html#method-c-getname","(address)","<p>Looks up the hostname of <code>address</code>.\n",null,1],["getname","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-i-getname","(address)","<p>Gets the hostname for <code>address</code> from the DNS resolver.\n<p><code>address</code> must be a Resolv::IPv4, Resolv::IPv6 or a ...\n",null,1],["getname","Resolv::Hosts","Rails/classes/Resolv/Hosts.html#method-i-getname","(address)","<p>Gets the hostname of <code>address</code> from the hosts file.\n",null,1],["getnameinfo","Addrinfo","Rails/classes/Addrinfo.html#method-i-getnameinfo","(p1 = v1)","<p>returns nodename and service as a pair of strings. This converts struct\nsockaddr in addrinfo to textual …\n",null,1],["getnameinfo","Socket","Rails/classes/Socket.html#method-c-getnameinfo","(p1, p2 = v2)","<p>Obtains name information for <em>sockaddr</em>.\n<p><em>sockaddr</em> should be one of follows.\n<p>packed sockaddr string such as …\n",null,1],["getnames","Resolv","Rails/classes/Resolv.html#method-i-getnames","(address)","<p>Looks up all hostnames for <code>address</code>.\n",null,1],["getnames","Resolv","Rails/classes/Resolv.html#method-c-getnames","(address)","<p>Looks up all hostnames for <code>address</code>.\n",null,1],["getnames","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-i-getnames","(address)","<p>Gets all hostnames for <code>address</code> from the DNS resolver.\n<p><code>address</code> must be a Resolv::IPv4, Resolv::IPv6 or ...\n",null,1],["getnames","Resolv::Hosts","Rails/classes/Resolv/Hosts.html#method-i-getnames","(address)","<p>Gets all hostnames for <code>address</code> from the hosts file.\n",null,1],["getopts","OptionParser","Rails/classes/OptionParser.html#method-c-getopts","(*args)","<p>See #getopts.\n",null,1],["getopts","OptionParser","Rails/classes/OptionParser.html#method-i-getopts","(*args)","<p>Wrapper method for getopts.rb.\n\n<pre>params = ARGV.getopts(&quot;ab:&quot;, &quot;foo&quot;, &quot;bar:&quot;)\n# params[:a] = true   # -a ...</pre>\n",null,1],["getopts","OptionParser::Arguable","Rails/classes/OptionParser/Arguable.html#method-i-getopts","(*args)","<p>Substitution of getopts is possible as follows. Also see\nOptionParser#getopts.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">getopts</span>(*<span class=\"ruby-identifier\">args</span>)\n  (<span class=\"ruby-identifier\">$OPT</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["getpeereid","BasicSocket","Rails/classes/BasicSocket.html#method-i-getpeereid","()","<p>Returns the user and group on the peer of the UNIX socket. The result is a\ntwo element array which contains …\n",null,1],["getpeername","BasicSocket","Rails/classes/BasicSocket.html#method-i-getpeername","()","<p>Returns the remote address of the socket as a sockaddr string.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">TCPServer</span>.<span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;127.0.0.1&quot;</span>, <span class=\"ruby-value\">1440</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">serv</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["getpgid","Process","Rails/classes/Process.html#method-c-getpgid","(p1)","<p>Returns the process group ID for the given process id. Not available on all\nplatforms.\n\n<pre>Process.getpgid(Process.ppid()) ...</pre>\n",null,1],["getpgrp","Process","Rails/classes/Process.html#method-c-getpgrp","()","<p>Returns the process group ID for this process. Not available on all\nplatforms.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">getpgid</span>(<span class=\"ruby-value\">0</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["getpriority","Process","Rails/classes/Process.html#method-c-getpriority","(p1, p2)","<p>Gets the scheduling priority for specified process, process group, or user.\n<em>kind</em> indicates the kind of …\n",null,1],["getpty","PTY","Rails/classes/PTY.html#method-c-getpty","(*args)","<p>Spawns the specified command on a newly allocated pty.\n<p>The command’s controlling tty is set to the slave …\n",null,1],["getpwent","Etc","Rails/classes/Etc.html#method-c-getpwent","()","<p>Returns an entry from the /etc/passwd file. The first time it is called it\nopens the file and returns …\n",null,1],["getpwnam","Etc","Rails/classes/Etc.html#method-c-getpwnam","(p1)","<p>Returns the /etc/passwd information for the user with specified login name.\n<p>The information is returned …\n",null,1],["getpwuid","Etc","Rails/classes/Etc.html#method-c-getpwuid","(p1 = v1)","<p>Returns the /etc/passwd information for the user with specified integer\nuser id (uid).\n<p>The information …\n",null,1],["getquota","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-getquota","(mailbox)","<p>Sends the GETQUOTA command along with specified <code>mailbox</code>. If\nthis mailbox exists, then an array containing …\n",null,1],["getquotaroot","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-getquotaroot","(mailbox)","<p>Sends the GETQUOTAROOT command along with specified <code>mailbox</code>.\nThis command is generally available to both …\n",null,1],["getresource","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-i-getresource","(name, typeclass)","<p>Look up the <code>typeclass</code> DNS resource of <code>name</code>.\n<p><code>name</code> must be a Resolv::DNS::Name or a String.\n<p><code>typeclass</code> should ...\n",null,1],["getresources","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-i-getresources","(name, typeclass)","<p>Looks up all <code>typeclass</code> DNS resources for <code>name</code>. \nSee #getresource for argument details.\n",null,1],["getrlimit","Process","Rails/classes/Process.html#method-c-getrlimit","(p1)","<p>Gets the resource limit of the process. <em>cur_limit</em> means current\n(soft) limit and <em>max_limit</em> means maximum …\n",null,1],["gets","ARGF","Rails/classes/ARGF.html#method-i-gets","(*args)","<p>Returns the next line from the current file in <code>ARGF</code>.\n<p>By default lines are assumed to be separated by +$/+; …\n",null,1],["gets","CSV","Rails/classes/CSV.html#method-i-gets","()","",null,1],["gets","IO","Rails/classes/IO.html#method-i-gets","(*args)","<p>Reads the next “line” from the I/O stream; lines are separated by\n<em>sep</em>. A separator of <code>nil</code> reads the …\n",null,1],["gets","IRB::FileInputMethod","Rails/classes/IRB/FileInputMethod.html#method-i-gets","()","",null,1],["gets","IRB::InputMethod","Rails/classes/IRB/InputMethod.html#method-i-gets","()","",null,1],["gets","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-gets","(*rs)","",null,1],["gets","IRB::ReadlineInputMethod","Rails/classes/IRB/ReadlineInputMethod.html#method-i-gets","()","",null,1],["gets","IRB::StdioInputMethod","Rails/classes/IRB/StdioInputMethod.html#method-i-gets","()","",null,1],["gets","Kernel","Rails/classes/Kernel.html#method-i-gets","(*args)","<p>Returns (and assigns to <code>$_</code>) the next line from the list of\nfiles in <code>ARGV</code> (or <code>$*</code>), or from standard input …\n",null,1],["gets","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-gets","(eol=$/, limit=nil)","<p>Reads the next “line+ from the stream.  Lines are separated by\n<code>eol</code>.  If <code>limit</code> is provided the result …\n",null,1],["gets","RubyLex","Rails/classes/RubyLex.html#method-i-gets","()","",null,1],["gets","StringIO","Rails/classes/StringIO.html#method-i-gets","(*args)","<p>See IO#gets.\n",null,1],["gets","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-gets","(eol=LF, size=nil)","",null,1],["gets","WEBrick::NullReader","Rails/classes/WEBrick/NullReader.html#method-c-gets","(*args)","",null,1],["gets","XMP::StringInputMethod","Rails/classes/XMP/StringInputMethod.html#method-i-gets","()","",null,1],["gets","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-gets","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["getservbyname","Socket","Rails/classes/Socket.html#method-c-getservbyname","(p1, p2 = v2)","<p>Obtains the port number for <em>service_name</em>.\n<p>If <em>protocol_name</em> is not given, “tcp” is assumed.\n\n<pre>Socket.getservbyname(&quot;smtp&quot;) ...</pre>\n",null,1],["getservbyport","Socket","Rails/classes/Socket.html#method-c-getservbyport","(p1, p2 = v2)","<p>Obtains the port number for <em>port</em>.\n<p>If <em>protocol_name</em> is not given, “tcp” is assumed.\n\n<pre>Socket.getservbyport(80) ...</pre>\n",null,1],["getservername","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-c-getservername","()","",null,1],["getservername","WEBrick::Utils","Rails/classes/WEBrick/Utils.html#method-c-getservername","()","<p>The server hostname\n",null,1],["getsockname","BasicSocket","Rails/classes/BasicSocket.html#method-i-getsockname","()","<p>Returns the local address of the socket as a sockaddr string.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">TCPServer</span>.<span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;127.0.0.1&quot;</span>, <span class=\"ruby-value\">15120</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">serv</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["getsockopt","BasicSocket","Rails/classes/BasicSocket.html#method-i-getsockopt","(p1, p2)","<p>Gets a socket option. These are protocol and system specific, see your\nlocal system documentation for ...\n",null,1],["getsockopt","OpenSSL::SSL::SocketForwarder","Rails/classes/OpenSSL/SSL/SocketForwarder.html#method-i-getsockopt","(level, optname)","",null,1],["getstr","Curses","Rails/classes/Curses.html#method-c-getstr","()","<p>This is equivalent to a series f Curses::Window.getch calls\n",null,1],["getstr","Curses::Window","Rails/classes/Curses/Window.html#method-i-getstr","()","<p>This is equivalent to a series f Curses::Window.getch calls\n",null,1],["getter","RSS::BaseListener","Rails/classes/RSS/BaseListener.html#method-c-getter","(uri, tag_name)","",null,1],["gettextfile","Net::FTP","Rails/classes/Net/FTP.html#method-i-gettextfile","(remotefile, localfile = File.basename(remotefile))","<p>Retrieves <code>remotefile</code> in ASCII (text) mode, storing the result\nin <code>localfile</code>. If <code>localfile</code> is nil, returns …\n",null,1],["getuid","Process::Sys","Rails/classes/Process/Sys.html#method-c-getuid","()","<p>Returns the (real) user ID of this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">uid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,1],["getutc","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-getutc","()","",null,0],["getutc","DateTime","Ruby/classes/DateTime.html#method-i-getutc","()","",null,0],["getutc","Time","Rails/classes/Time.html#method-i-getutc","()","<p>Returns a new <code>new_time</code> object representing <em>time</em> in\nUTC.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">20</span>,<span class=\"ruby-value\">15</span>,<span class=\"ruby-value\">1</span>)   <span class=\"ruby-comment\">#=&gt; 2000-01-01 ...</span>\n</pre>\n",null,1],["getwd","Dir","Rails/classes/Dir.html#method-c-getwd","()","<p>Returns the path to the current working directory of this process as a\nstring.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">chdir</span>(<span class=\"ruby-string\">&quot;/tmp&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["getwd","FileUtils","Rails/classes/FileUtils.html#method-c-getwd","()","",null,1],["getwd","Pathname","Rails/classes/Pathname.html#method-c-getwd","()","<p>See <code>Dir.getwd</code>.  Returns the current working directory as a\nPathname.\n",null,1],["gid","File::Stat","Rails/classes/File/Stat.html#method-i-gid","()","<p>Returns the numeric group id of the owner of <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">gid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,1],["gid","Process","Rails/classes/Process.html#method-c-gid","()","<p>Returns the (real) group ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">gid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,1],["gid=","Process","Rails/classes/Process.html#method-c-gid-3D","(p1)","<p>Sets the group ID for this process.\n",null,1],["gigabyte","Numeric","Ruby/classes/Numeric.html#method-i-gigabyte","()","",null,0],["gigabytes","Numeric","Ruby/classes/Numeric.html#method-i-gigabytes","()","",null,0],["git","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-git","(commands={})","<p>Run a command in git.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">git</span> :<span class=\"ruby-identifier\">init</span>\n<span class=\"ruby-identifier\">git</span> :<span class=\"ruby-identifier\">add</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;this.file that.rb&quot;</span>\n<span class=\"ruby-identifier\">git</span> :<span class=\"ruby-identifier\">add</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;onefile.rb&quot;</span>, :<span class=\"ruby-identifier\">rm</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["git_keep","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-git_keep","(destination)","",null,0],["git_url?","Plugin","Ruby/classes/Plugin.html#method-i-git_url-3F","()","",null,0],["gitignore","","Ruby/files/rails/railties/lib/rails/generators/rails/app/templates/gitignore.html","","<p># See help.github.com/ignore-files/ for more about ignoring files. # # If\nyou find yourself ignoring …\n",null,0],["gitignore","","Ruby/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/gitignore.html","","<p>.bundle/ log/*.log pkg/ &lt;%= dummy_path %&gt;/db/*.sqlite3 &lt;%=\ndummy_path %&gt;/log/*.log &lt;%= …\n",null,0],["gitignore","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-gitignore","()","",null,0],["gitignore","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-gitignore","()","",null,0],["glob","Dir","Rails/classes/Dir.html#method-c-glob","(p1, p2 = v2)","<p>Returns the filenames found by expanding <em>pattern</em> which is an\n<code>Array</code> of the patterns or the pattern <code>String</code> …\n",null,1],["glob","Pathname","Rails/classes/Pathname.html#method-c-glob","(p1, p2 = v2)","<p>See <code>Dir.glob</code>.  Returns or yields Pathname objects.\n",null,1],["glob","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-glob","(pattern)","<p>def sort(*filenames)\n\n<pre>Sort.new(self, *filenames)</pre>\n<p>end\n",null,1],["global_plugins","Rails::Plugin","Ruby/classes/Rails/Plugin.html#method-c-global_plugins","()","",null,0],["global_variables","Kernel","Rails/classes/Kernel.html#method-i-global_variables","()","<p>Returns an array of the names of global variables.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">global_variables</span>.<span class=\"ruby-identifier\">grep</span> <span class=\"ruby-regexp\">/std/</span>   <span class=\"ruby-comment\">#=&gt; [:$stdin, :$stdout, ...</span>\n</pre>\n",null,1],["gm","Time","Rails/classes/Time.html#method-c-gm","(*args)","<p>Creates a time based on given values, interpreted as UTC (GMT). The year\nmust be specified. Other values …\n",null,1],["gmt?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-gmt-3F","()","",null,0],["gmt?","Time","Rails/classes/Time.html#method-i-gmt-3F","()","<p>Returns <code>true</code> if <em>time</em> represents a time in UTC (GMT).\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>                        <span class=\"ruby-comment\">#=&gt; 2007-11-19 ...</span>\n</pre>\n",null,1],["gmt_offset","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-gmt_offset","()","",null,0],["gmt_offset","Time","Rails/classes/Time.html#method-i-gmt_offset","()","<p>Returns the offset in seconds between the timezone of <em>time</em> and\nUTC.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">gm</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">20</span>,<span class=\"ruby-value\">15</span>,<span class=\"ruby-value\">1</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["gmtime","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-gmtime","()","",null,0],["gmtime","Time","Rails/classes/Time.html#method-i-gmtime","()","<p>Converts <em>time</em> to UTC (GMT), modifying the receiver.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:18:31 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">gmt?</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["gmtoff","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-gmtoff","()","",null,0],["gmtoff","Time","Rails/classes/Time.html#method-i-gmtoff","()","<p>Returns the offset in seconds between the timezone of <em>time</em> and\nUTC.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">gm</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">20</span>,<span class=\"ruby-value\">15</span>,<span class=\"ruby-value\">1</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["grant_privilege","Process::GID","Rails/classes/Process/GID.html#method-c-grant_privilege","(p1)","<p>Set the effective group ID, and if possible, the saved group ID of the\nprocess to the given <em>integer</em>. …\n",null,1],["grant_privilege","Process::UID","Rails/classes/Process/UID.html#method-c-grant_privilege","(p1)","<p>Set the effective user ID, and if possible, the saved user ID of the\nprocess to the given <em>integer</em>. Returns …\n",null,1],["great_job","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-great_job","()","<p>A report that says you did a great job!\n",null,1],["gregorian","Date","Rails/classes/Date.html#method-i-gregorian","()","<p>This method is equivalent to new_start(Date::GREGORIAN).\n",null,1],["gregorian?","Date","Rails/classes/Date.html#method-i-gregorian-3F","()","<p>Retunrs true if the date is on or after the day of calendar reform.\n<p>For example:\n\n<pre>Date.new(1582,10,15).gregorian? ...</pre>\n",null,1],["gregorian_leap?","Date","Rails/classes/Date.html#method-c-gregorian_leap-3F","(p1)","<p>Returns true if the given year is a leap year of the proleptic Gregorian\ncalendar.\n<p>For example:\n\n<pre>Date.gregorian_leap?(1900) ...</pre>\n",null,1],["grep","Enumerable","Rails/classes/Enumerable.html#method-i-grep","(p1)","<p>Returns an array of every element in <em>enum</em> for which <code>Pattern\n=== element</code>. If the optional <em>block</em> is supplied, …\n",null,1],["group","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-group","(*args)","",null,0],["group","Etc","Rails/classes/Etc.html#method-c-group","()","<p>Provides a convenient Ruby iterator which executes a block for each entry\nin the /etc/group file.\n<p>The …\n",null,1],["group","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-group","()","<p>Returns a constant <code>OpenSSL::EC::Group</code> that is tied to the key.\nModifying the returned group can make …\n",null,1],["group","PrettyPrint","Rails/classes/PrettyPrint.html#method-i-group","(indent=0, open_obj='', close_obj='', open_width=open_obj.length, close_width=close_obj.length)","<p>Groups line break hints added in the block. The line break hints are all to\nbe used or not.\n<p>If <code>indent</code> …\n",null,1],["group","PrettyPrint::SingleLine","Rails/classes/PrettyPrint/SingleLine.html#method-i-group","(indent=nil, open_obj='', close_obj='', open_width=nil, close_width=nil)","",null,1],["group","Thread","Rails/classes/Thread.html#method-i-group","()","<p>Returns the <code>ThreadGroup</code> which contains <em>thr</em>, or nil if\nthe thread is not a member of any group.\n\n<pre>Thread.main.group ...</pre>\n",null,1],["group=","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-group-3D","(p1)","<p>Returns the same object passed, not the group object associated with the\nkey. If you wish to access the …\n",null,1],["group_by","Enumerable","Ruby/classes/Enumerable.html#method-i-group_by","()","<p>Collect an enumerable into sets, grouped by the result of a block. Useful,\nfor example, for grouping …\n",null,0],["group_by","Enumerable","Rails/classes/Enumerable.html#method-i-group_by","()","<p>Returns a hash, which keys are evaluated result from the block, and values\nare arrays of elements in …\n",null,1],["group_sub","PrettyPrint","Rails/classes/PrettyPrint.html#method-i-group_sub","()","",null,1],["grouped_collection_select","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-grouped_collection_select","(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","",null,0],["grouped_collection_select","ActionView::Helpers::FormOptionsHelper","Ruby/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-grouped_collection_select","(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","<p>Returns <code>&lt;select&gt;</code>, <code>&lt;optgroup&gt;</code> and\n<code>&lt;option&gt;</code> tags for the collection of existing return …\n",null,0],["grouped_options_for_select","ActionView::Helpers::FormOptionsHelper","Ruby/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-grouped_options_for_select","(grouped_options, selected_key = nil, prompt = nil)","<p>Returns a string of <code>&lt;option&gt;</code> tags, like\n<code>options_for_select</code>, but wraps them with\n<code>&lt;optgroup&gt;</code> …\n",null,0],["groups","Rails","Ruby/classes/Rails.html#method-c-groups","(*groups)","<p>Returns all rails groups for loading based on:\n<p>The Rails environment;\n<p>The environment variable RAILS_GROUPS …\n",null,0],["groups","Process","Rails/classes/Process.html#method-c-groups","()","<p>Get an <code>Array</code> of the gids of groups in the supplemental group\naccess list for this process.\n\n<pre>Process.groups ...</pre>\n",null,1],["groups=","Process","Rails/classes/Process.html#method-c-groups-3D","(p1)","<p>Set the supplemental group access list to the given <code>Array</code> of\ngroup IDs.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">groups</span>   <span class=\"ruby-comment\">#=&gt; [0, 1, 2, ...</span>\n</pre>\n",null,1],["grpowned?","File","Rails/classes/File.html#method-c-grpowned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective group\nid of the calling process is the owner …\n",null,1],["grpowned?","File::Stat","Rails/classes/File/Stat.html#method-i-grpowned-3F","()","<p>Returns true if the effective group id of the process is the same as the\ngroup id of <em>stat</em>. On Windows …\n",null,1],["grpowned?","FileTest","Rails/classes/FileTest.html#method-i-grpowned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective group\nid of the calling process is the owner …\n",null,1],["grpowned?","Pathname","Rails/classes/Pathname.html#method-i-grpowned-3F","()","<p>See <code>FileTest.grpowned?</code>.\n",null,1],["gsub","Kernel","Rails/classes/Kernel.html#method-i-gsub","(*args)","<p>Equivalent to <code>$_.gsub...</code>, except that <code>$_</code> receives\nthe modified result. Available only when -p/-n command …\n",null,1],["gsub","String","Rails/classes/String.html#method-i-gsub","(*args)","<p>Returns a copy of <em>str</em> with the <em>all</em> occurrences of\n<em>pattern</em> substituted for the second argument. The <em>pattern</em>\n…\n",null,1],["gsub!","String","Rails/classes/String.html#method-i-gsub-21","(*args)","<p>Performs the substitutions of <code>String#gsub</code> in place, returning\n<em>str</em>, or <code>nil</code> if no substitutions were performed. …\n",null,1],["guard_inspect_key","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-guard_inspect_key","()","",null,1],["guess","Kconv","Rails/classes/Kconv.html#method-c-guess","(str)","<p>Guess input encoding by NKF.guess\n",null,1],["guess","NKF","Rails/classes/NKF.html#method-c-guess","(p1)","<p>Returns guessed encoding of <em>str</em> by nkf routine.\n",null,1],["guess","OptionParser::Switch","Rails/classes/OptionParser/Switch.html#method-c-guess","(arg)","<p>Guesses argument style from <code>arg</code>.  Returns corresponding\nOptionParser::Switch class (OptionalArgument …\n",null,1],["guid","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-guid","()","<p>Returns GUID.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\nputs tobj.guid ...</pre>\n",null,1],["guid","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-guid","()","<p>Returns guid string which specifies type library.\n\n<pre>tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object ...</pre>\n",null,1],["guide","RailsGuides::Helpers","Ruby/classes/RailsGuides/Helpers.html#method-i-guide","(name, url, options = {}, &block)","",null,0],["gunzip","Gem","Rails/classes/Gem.html#method-c-gunzip","(data)","<p>Zlib::GzipReader wrapper that unzips <code>data</code>.\n",null,1],["gzip","Gem","Rails/classes/Gem.html#method-c-gzip","(data)","<p>Zlib::GzipWriter wrapper that zips <code>data</code>.\n",null,1],["gzip","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-gzip","(filename)","<p>Zlib::GzipWriter wrapper that gzips <code>filename</code> on disk.\n",null,1],["h","ERB::Util","Ruby/classes/ERB/Util.html#method-c-h","(s)","",null,0],["h","ERB::Util","Rails/classes/ERB/Util.html#method-c-h","(s)","",null,1],["h","RSS::Utils","Rails/classes/RSS/Utils.html#method-i-h","(s)","",null,1],["ha1","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-ha1","(credentials, password)","",null,0],["halted_callback","ActionController::LogSubscriber","Ruby/classes/ActionController/LogSubscriber.html#method-i-halted_callback","(event)","",null,0],["handle","RDoc::Markup::PreProcess","Rails/classes/RDoc/Markup/PreProcess.html#method-i-handle","(text, code_object = nil, &block)","<p>Look for directives in a chunk of <code>text</code>.\n<p>Options that we don’t handle are yielded.  If the block returns …\n",null,1],["handle_arguments","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-handle_arguments","(arg_list)","<p>Handle the command arguments.\n",null,1],["handle_attr","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-handle_attr","(var_name, attr_name, read, write)","<p>Creates a new RDoc::Attr <code>attr_name</code> on class\n<code>var_name</code> that is either <code>read</code>, <code>write</code>\nor both\n",null,1],["handle_class_module","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-handle_class_module","(var_name, type, class_name, parent, in_module)","<p>Creates a new RDoc::NormalClass or RDoc::NormalModule based on\n<code>type</code> named <code>class_name</code> in <code>parent</code>\nwhich …\n",null,1],["handle_constants","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-handle_constants","(type, var_name, const_name, definition)","<p>Adds constants.  By providing some_value: at the start of the comment you\ncan override the C value of …\n",null,1],["handle_directive","RDoc::Markup::PreProcess","Rails/classes/RDoc/Markup/PreProcess.html#method-i-handle_directive","(prefix, directive, param, code_object = nil, encoding = nil)","",null,1],["handle_ifdefs_in","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-handle_ifdefs_in","(body)","<p>Removes #ifdefs that would otherwise confuse us\n",null,1],["handle_method","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-handle_method","(type, var_name, meth_name, function, param_count, source_file = nil)","<p>Adds an RDoc::AnyMethod <code>meth_name</code> defined on a class or module\nassigned to <code>var_name</code>.  <code>type</code> is the type …\n",null,1],["handle_options","Gem::Command","Rails/classes/Gem/Command.html#method-i-handle_options","(args)","<p>Handle the given list of arguments by parsing them and recording the\nresults.\n",null,1],["handle_options","Rake::Application","Rails/classes/Rake/Application.html#method-i-handle_options","()","<p>Read and handle the command line options.\n",null,1],["handle_pipe","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-handle_pipe","()","<p>Turns RDoc from stdin into HTML\n",null,1],["handle_singleton","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-handle_singleton","(sclass_var, class_var)","<p>Registers a singleton class <code>sclass_var</code> as a singleton of\n<code>class_var</code>\n",null,1],["handle_special_CROSSREF","RDoc::Markup::ToHtmlCrossref","Rails/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-handle_special_CROSSREF","(special)","<p>We’re invoked when any text matches the CROSSREF pattern.  If we find the\ncorresponding reference, generate …\n",null,1],["handle_special_HYPERLINK","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-handle_special_HYPERLINK","(special)","<p><code>special</code> is a potential link.  The following schemes are\nhandled:\n<p><code>mailto:</code> &mdash; Inserted as-is.\n<p><code>http:</code> &mdash; Links are …\n",null,1],["handle_special_HYPERLINK","RDoc::Markup::ToHtmlCrossref","Rails/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-handle_special_HYPERLINK","(special)","<p>Handles <code>rdoc-ref:</code> scheme links and allows RDoc::Markup::ToHtml\nto handle other schemes.\n",null,1],["handle_special_SUPPRESSED_CROSSREF","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-handle_special_SUPPRESSED_CROSSREF","(special)","<p>Removes preceding \\ from the suppressed crossref <code>special</code>\n",null,1],["handle_special_TIDYLINK","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-handle_special_TIDYLINK","(special)","<p>This <code>special</code> is a link where the label is different from the\nURL <code>label[url]</code> or <code>{long label}[url]</code>\n",null,1],["handle_tab_width","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-handle_tab_width","(body)","<p>Normalizes tabs in <code>body</code>\n",null,1],["handle_unverified_request","ActionController::RequestForgeryProtection","Ruby/classes/ActionController/RequestForgeryProtection.html#method-i-handle_unverified_request","()","<p>This is the method that defines the application behavior when a request is\nfound to be unverified. By …\n",null,0],["handler","DL::Importer","Rails/classes/DL/Importer.html#method-i-handler","()","",null,1],["handler","WIN32OLE_EVENT","Rails/classes/WIN32OLE_EVENT.html#method-i-handler","()","<p>returns handler object.\n",null,1],["handler=","WIN32OLE_EVENT","Rails/classes/WIN32OLE_EVENT.html#method-i-handler-3D","(p1)","<p>sets event handler object. If handler object has onXXX method according to\nXXX event, then onXXX method …\n",null,1],["handler_for_rescue","ActiveSupport::Rescuable","Ruby/classes/ActiveSupport/Rescuable.html#method-i-handler_for_rescue","(exception)","",null,0],["handlers","DL::CompositeHandler","Rails/classes/DL/CompositeHandler.html#method-i-handlers","()","",null,1],["handles?","Gem::Command","Rails/classes/Gem/Command.html#method-i-handles-3F","(args)","<p>True if the command handles the given argument list.\n",null,1],["handles_encoding?","ActionView::Template::Handlers::ERB","Ruby/classes/ActionView/Template/Handlers/ERB.html#method-i-handles_encoding-3F","()","",null,0],["hasChildNodes","NQXML::Node","Rails/classes/NQXML/Node.html#method-i-hasChildNodes","()","",null,1],["has_and_belongs_to_many","ActiveRecord::Associations::ClassMethods","Ruby/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_and_belongs_to_many","(name, options = {}, &extension)","<p>Specifies a many-to-many relationship with another class. This associates\ntwo classes via an intermediate …\n",null,0],["has_attributes?","REXML::Element","Rails/classes/REXML/Element.html#method-i-has_attributes-3F","()","<p>Evaluates to <code>true</code> if this element has any attributes set,\nfalse otherwise.\n",null,1],["has_colors?","Curses","Rails/classes/Curses.html#method-c-has_colors-3F","()","<p>Returns <code>true</code> or <code>false</code> depending on whether the\nterminal has color capbilities.\n",null,1],["has_elements?","REXML::Element","Rails/classes/REXML/Element.html#method-i-has_elements-3F","()","<p>Evaluates to <code>true</code> if this element has at least one child\nElement\n\n<pre>doc = Document.new &quot;&lt;a&gt;&lt;b/&gt;&lt;c&gt;Text&lt;/c&gt;&lt;/a&gt;&quot; ...</pre>\n",null,1],["has_errors?","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-has_errors-3F","()","<p>Check whether the resource has errors.\n",null,0],["has_expires?","Rinda::TupleBag","Rails/classes/Rinda/TupleBag.html#method-i-has_expires-3F","()","<p><code>true</code> if the TupleBag to see if it has any expired entries.\n",null,1],["has_index?","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-i-has_index-3F","()","",null,0],["has_key?","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-has_key-3F","(error)","",null,0],["has_key?","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-has_key-3F","(key)","",null,0],["has_key?","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-has_key-3F","(key)","",null,0],["has_key?","CGI::QueryExtension","Rails/classes/CGI/QueryExtension.html#method-i-has_key-3F","(*args)","<p>Returns true if a given query string parameter exists.\n",null,1],["has_key?","DBM","Rails/classes/DBM.html#method-i-has_key-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n",null,1],["has_key?","ENV","Rails/classes/ENV.html#method-c-has_key-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,1],["has_key?","GDBM","Rails/classes/GDBM.html#method-i-has_key-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n",null,1],["has_key?","Hash","Rails/classes/Hash.html#method-i-has_key-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_key?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["has_key?","SDBM","Rails/classes/SDBM.html#method-i-has_key-3F","(p1)","",null,1],["has_many","ActiveRecord::Associations::ClassMethods","Ruby/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_many","(name, options = {}, &extension)","<p>Specifies a one-to-many association. The following methods for retrieval\nand query of collections of …\n",null,0],["has_migrations?","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-has_migrations-3F","()","",null,0],["has_name?","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-has_name-3F","( name, namespace = '' )","",null,1],["has_name?","REXML::Namespace","Rails/classes/REXML/Namespace.html#method-i-has_name-3F","( other, ns=nil )","<p>Compares names optionally WITH namespaces\n",null,1],["has_next?","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-has_next-3F","()","<p>Returns true if there are more events.  Synonymous with !empty?\n",null,1],["has_one","ActiveRecord::Associations::ClassMethods","Ruby/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_one","(name, options = {})","<p>Specifies a one-to-one association with another class. This method should\nonly be used if the other class …\n",null,0],["has_rdoc","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-has_rdoc","()","<p>Deprecated and ignored, defaults to true.\n<p>Formerly used to indicate this gem was RDoc-capable.\n",null,1],["has_rdoc=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-has_rdoc-3D","(ignored)","<p>Deprecated and ignored.\n<p>Formerly used to indicate this gem was RDoc-capable.\n",null,1],["has_rdoc?","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-has_rdoc-3F","()","",null,1],["has_secure_password","ActiveModel::SecurePassword::ClassMethods","Ruby/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password","()","<p>Adds methods to set and authenticate against a BCrypt password. This\nmechanism requires you to have a …\n",null,0],["has_text?","REXML::Element","Rails/classes/REXML/Element.html#method-i-has_text-3F","()","<p>Evaluates to <code>true</code> if this element has at least one Text child\n",null,1],["has_uniq_index?","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-i-has_uniq_index-3F","()","",null,0],["has_unit_tests?","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-has_unit_tests-3F","()","<p>True if this gem has files in test_files\n",null,1],["has_value?","DBM","Rails/classes/DBM.html#method-i-has_value-3F","(p1)","<p>Returns true if the database contains the specified string value, false\notherwise.\n",null,1],["has_value?","ENV","Rails/classes/ENV.html#method-c-has_value-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>value</code>.\n",null,1],["has_value?","GDBM","Rails/classes/GDBM.html#method-i-has_value-3F","(p1)","<p>Returns true if the given value <em>v</em> exists within the database.\nReturns false otherwise.\n",null,1],["has_value?","Hash","Rails/classes/Hash.html#method-i-has_value-3F","(p1)","<p>Returns <code>true</code> if the given value is present for some key in\n<em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_value?</span>(<span class=\"ruby-value\">100</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["has_value?","SDBM","Rails/classes/SDBM.html#method-i-has_value-3F","(p1)","",null,1],["has_value?","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-has_value-3F","( val )","<p>Returns true if specified value is found in the database.\n",null,1],["hash","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-hash","()","<p>Delegates to id in order to allow two records of the same type and id to\nwork with something like:\n\n<pre>[ Person.find(1), ...</pre>\n",null,0],["hash","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-hash","()","<p>Delegates to id in order to allow two resources of the same type and id to\nwork with something like: …\n",null,0],["hash","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-hash","()","",null,0],["hash","Array","Rails/classes/Array.html#method-i-hash","()","<p>Compute a hash-code for this array. Two arrays with the same content will\nhave the same hash code (and …\n",null,1],["hash","BigDecimal","Rails/classes/BigDecimal.html#method-i-hash","()","",null,1],["hash","Bignum","Rails/classes/Bignum.html#method-i-hash","()","<p>Compute a hash based on the value of <em>big</em>.\n",null,1],["hash","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-i-hash","()","",null,1],["hash","Float","Rails/classes/Float.html#method-i-hash","()","<p>Returns a hash code for this float.\n",null,1],["hash","Hash","Rails/classes/Hash.html#method-i-hash","()","<p>Compute a hash-code for this hash. Two hashes with the same content will\nhave the same hash code (and …\n",null,1],["hash","IPAddr","Rails/classes/IPAddr.html#method-i-hash","()","<p>Returns a hash value used by Hash, Set, and Array classes\n",null,1],["hash","MatchData","Rails/classes/MatchData.html#method-i-hash","()","<p>Produce a hash based on the target string, regexp and matched positions of\nthis matchdata.\n",null,1],["hash","Matrix","Rails/classes/Matrix.html#method-i-hash","()","<p>Returns a hash-code for the matrix.\n",null,1],["hash","Method","Rails/classes/Method.html#method-i-hash","()","<p>Returns a hash value corresponding to the method object.\n",null,1],["hash","Object","Rails/classes/Object.html#method-i-hash","()","<p>Generates a <code>Fixnum</code> hash value for this object. This function\nmust have the property that a.eql?(b) implies …\n",null,1],["hash","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-i-hash","()","<p>The hash value returned is suitable for use as a certificate’s filename in\na CA path.\n",null,1],["hash","Proc","Rails/classes/Proc.html#method-i-hash","()","<p>Returns a hash value corresponding to proc body.\n",null,1],["hash","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-hash","()","<p>An RDoc::TopLevel has the same hash as another with the same absolute_name\n",null,1],["hash","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-hash","()","<p>Creates (and returns) a hash from both the name and value\n",null,1],["hash","Range","Rails/classes/Range.html#method-i-hash","()","<p>Generate a hash value such that two ranges with the same start and end\npoints, and the same value for …\n",null,1],["hash","Regexp","Rails/classes/Regexp.html#method-i-hash","()","<p>Produce a hash based on the text and options of this regular expression.\n",null,1],["hash","String","Rails/classes/String.html#method-i-hash","()","<p>Return a hash based on the string’s length and content.\n",null,1],["hash","Struct","Rails/classes/Struct.html#method-i-hash","()","<p>Return a hash value based on this struct’s contents.\n",null,1],["hash","Time","Rails/classes/Time.html#method-i-hash","()","<p>Return a hash code for this time object.\n",null,1],["hash","URI::Generic","Rails/classes/URI/Generic.html#method-i-hash","()","",null,1],["hash","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-hash","()","<p>Returns a hash value corresponding to the method object.\n",null,1],["hash","Vector","Rails/classes/Vector.html#method-i-hash","()","<p>Return a hash-code for the vector.\n",null,1],["hash_old","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-i-hash_old","()","<p>hash_old returns MD5 based hash used in OpenSSL 0.9.X.\n",null,1],["have_author?","RSS::Atom::Entry","Rails/classes/RSS/Atom/Entry.html#method-i-have_author-3F","()","",null,1],["have_author?","RSS::Atom::Feed","Rails/classes/RSS/Atom/Feed.html#method-i-have_author-3F","()","",null,1],["have_author?","RSS::Atom::Feed::Entry","Rails/classes/RSS/Atom/Feed/Entry.html#method-i-have_author-3F","(check_parent=true)","",null,1],["have_author?","RSS::Atom::Feed::Entry::Source","Rails/classes/RSS/Atom/Feed/Entry/Source.html#method-i-have_author-3F","()","",null,1],["have_children_elements","RSS::Element","Rails/classes/RSS/Element.html#method-c-have_children_elements","()","",null,1],["have_const","Object","Rails/classes/Object.html#method-i-have_const","(const, headers = nil, opt = \"\", &b)","<p>Returns whether or not the constant <code>const</code> is defined.  You may\noptionally pass the <code>type</code> of <code>const</code> as  …\n",null,1],["have_content?","RSS::Element","Rails/classes/RSS/Element.html#method-c-have_content-3F","()","",null,1],["have_framework","Object","Rails/classes/Object.html#method-i-have_framework","(fw, &b)","<p>Returns whether or not the given <code>framework</code> can be found on\nyour system. If found, a macro is passed as …\n",null,1],["have_func","Object","Rails/classes/Object.html#method-i-have_func","(func, headers = nil, &b)","<p>Returns whether or not the function <code>func</code> can be found in the\ncommon header files, or within any <code>headers</code> …\n",null,1],["have_header","Object","Rails/classes/Object.html#method-i-have_header","(header, preheaders = nil, &b)","<p>Returns whether or not the given <code>header</code> file can be found on\nyour system. If found, a macro is passed …\n",null,1],["have_library","Object","Rails/classes/Object.html#method-i-have_library","(lib, func = nil, headers = nil, &b)","<p>Returns whether or not the given entry point <code>func</code> can be found\nwithin <code>lib</code>.  If <code>func</code> is nil, the ‘main()’ …\n",null,1],["have_macro","Object","Rails/classes/Object.html#method-i-have_macro","(macro, headers = nil, opt = \"\", &b)","<p>Returns whether or not <code>macro</code> is defined either in the common\nheader files or within any <code>headers</code> you provide. …\n",null,1],["have_rakefile","Rake::Application","Rails/classes/Rake/Application.html#method-i-have_rakefile","()","<p>True if one of the files in RAKEFILES is in the current directory. If a\nmatch is found, it is copied …\n",null,1],["have_required_elements?","RSS::Element","Rails/classes/RSS/Element.html#method-i-have_required_elements-3F","()","",null,1],["have_required_values?","RSS::Maker::Atom::Feed::Channel","Rails/classes/RSS/Maker/Atom/Feed/Channel.html#method-i-have_required_values-3F","()","",null,1],["have_required_values?","RSS::Maker::Atom::Feed::Items::Item","Rails/classes/RSS/Maker/Atom/Feed/Items/Item.html#method-i-have_required_values-3F","()","",null,1],["have_required_values?","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-i-have_required_values-3F","()","",null,1],["have_required_values?","RSS::Maker::ITunesChannelModel::ITunesCategoriesBase::ITunesCategoryBase","Rails/classes/RSS/Maker/ITunesChannelModel/ITunesCategoriesBase/ITunesCategoryBase.html#method-i-have_required_values-3F","()","",null,1],["have_required_values?","RSS::Maker::ImageFaviconModel::ImageFaviconBase","Rails/classes/RSS/Maker/ImageFaviconModel/ImageFaviconBase.html#method-i-have_required_values-3F","()","",null,1],["have_required_values?","RSS::Maker::ImageItemModel::ImageItemBase","Rails/classes/RSS/Maker/ImageItemModel/ImageItemBase.html#method-i-have_required_values-3F","()","",null,1],["have_required_values?","RSS::Maker::RSS10::Image","Rails/classes/RSS/Maker/RSS10/Image.html#method-i-have_required_values-3F","()","",null,1],["have_required_values?","RSS::Maker::RSS10::Textinput","Rails/classes/RSS/Maker/RSS10/Textinput.html#method-i-have_required_values-3F","()","",null,1],["have_required_values?","RSS::Maker::TaxonomyTopicModel::TaxonomyTopicsBase::TaxonomyTopicBase","Rails/classes/RSS/Maker/TaxonomyTopicModel/TaxonomyTopicsBase/TaxonomyTopicBase.html#method-i-have_required_values-3F","()","",null,1],["have_required_values?","RSS::Maker::TrackBackModel::TrackBackAboutsBase::TrackBackAboutBase","Rails/classes/RSS/Maker/TrackBackModel/TrackBackAboutsBase/TrackBackAboutBase.html#method-i-have_required_values-3F","()","",null,1],["have_struct_member","Object","Rails/classes/Object.html#method-i-have_struct_member","(type, member, headers = nil, &b)","<p>Returns whether or not the struct of type <code>type</code> contains\n<code>member</code>.  If it does not, or the struct type can’t …\n",null,1],["have_type","Object","Rails/classes/Object.html#method-i-have_type","(type, headers = nil, opt = \"\", &b)","<p>Returns whether or not the static type <code>type</code> is defined.  You\nmay optionally pass additional <code>headers</code> to …\n",null,1],["have_var","Object","Rails/classes/Object.html#method-i-have_var","(var, headers = nil, &b)","<p>Returns whether or not the variable <code>var</code> can be found in the\ncommon header files, or within any <code>headers</code> …\n",null,1],["have_xml_content?","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-have_xml_content-3F","()","",null,1],["have_xml_content?","RSS::Atom::TextConstruct","Rails/classes/RSS/Atom/TextConstruct.html#method-i-have_xml_content-3F","()","",null,1],["have_xml_content?","RSS::Element","Rails/classes/RSS/Element.html#method-i-have_xml_content-3F","()","",null,1],["having","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-having","(opts, *rest)","",null,0],["head","ActionController::Head","Ruby/classes/ActionController/Head.html#method-i-head","(status, options = {})","<p>Return a response that has no content (merely headers). The options\nargument is interpreted to be a hash …\n",null,0],["head","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-head","(path, headers = {})","<p>Executes a HEAD request. Used to obtain meta-information about resources,\nsuch as whether they exist …\n",null,0],["head","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-head","(path, initheader = nil)","<p>Gets only the header from <code>path</code> on the connected-to host.\n<code>header</code> is a Hash like { ‘Accept’ =&gt; ‘<strong>/</strong>’, …\n",null,1],["head","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-head","(path, initheader = nil)","<p>Gets only the header from <code>path</code> on the connected-to host.\n<code>header</code> is a Hash like { ‘Accept’ =&gt; ‘<strong>/</strong>’, …\n",null,1],["head2","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-head2","(path, initheader = nil, &block)","",null,1],["head2","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-head2","(path, initheader = nil, &block)","",null,1],["head?","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-head-3F","()","<p>Is this a HEAD request? Equivalent to <code>request.method_symbol ==\n:head</code>.\n",null,0],["header","CGI","Rails/classes/CGI.html#method-i-header","(options='text/html')","<p>Create an HTTP header block as a string.\n<p>Includes the empty line that ends the header block.\n<p><code>content_type_string</code> ... &mdash; ",null,1],["header","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-header","(dest = '')","<p>Fetches the message header.\n<p>The optional <code>dest</code> argument is obsolete.\n<p>This method raises a POPError if an …\n",null,1],["header?","CSV::Row","Rails/classes/CSV/Row.html#method-i-header-3F","(name)","<p>Returns <code>true</code> if <code>name</code> is a header for this row,\nand <code>false</code> otherwise.\n",null,1],["header_convert","CSV","Rails/classes/CSV.html#method-i-header_convert","(name = nil, &converter)","<p>Identical to CSV#convert(), but for header rows.\n<p>Note that this method must be called before header rows …\n",null,1],["header_converters","CSV","Rails/classes/CSV.html#method-i-header_converters","()","<p>Returns the current list of converters in effect for headers.  See CSV::new\nfor details.  Built-in converters …\n",null,1],["header_row?","CSV","Rails/classes/CSV.html#method-i-header_row-3F","()","<p>Returns <code>true</code> if the next row read will be a header row.\n",null,1],["header_row?","CSV::Row","Rails/classes/CSV/Row.html#method-i-header_row-3F","()","<p>Returns <code>true</code> if this is a header row.\n",null,1],["headers","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-headers","()","<p>Provides access to the request’s HTTP headers, for example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">request</span>.<span class=\"ruby-identifier\">headers</span>[<span class=\"ruby-string\">&quot;Content-Type&quot;</span>] <span class=\"ruby-comment\"># =&gt; &quot;text/plain&quot;</span>\n</pre>\n",null,0],["headers","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-i-headers","(args=nil)","<p>Allows you to pass random and unusual headers to the new +Mail::Message+\nobject which will add them to …\n",null,0],["headers","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-headers","()","",null,0],["headers","CSV","Rails/classes/CSV.html#method-i-headers","()","<p>Returns <code>nil</code> if headers will not be used, <code>true</code> if\nthey will but have not yet been read, or the actual …\n",null,1],["headers","CSV::Row","Rails/classes/CSV/Row.html#method-i-headers","()","<p>Returns the headers of this row.\n",null,1],["headers","CSV::Table","Rails/classes/CSV/Table.html#method-i-headers","()","<p>Returns the headers for the first row of this table (assumed to match all\nother rows).  An empty Array …\n",null,1],["headers=","URI::MailTo","Rails/classes/URI/MailTo.html#method-i-headers-3D","(v)","<p>setter for headers <code>v</code>\n",null,1],["heading","Build","Ruby/classes/Build.html#method-i-heading","()","",null,0],["hello","Foo","Rails/classes/Foo.html#method-i-hello","(it)","",null,1],["helo","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-helo","(domain)","",null,1],["helo","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-helo","(domain)","",null,1],["help","Rails::Generators","Ruby/classes/Rails/Generators.html#method-c-help","(command = 'generate')","<p>Show help message with available generators.\n",null,0],["help","Net::FTP","Rails/classes/Net/FTP.html#method-i-help","(arg = nil)","<p>Issues the HELP command.\n",null,1],["help","Object","Rails/classes/Object.html#method-i-help","()","<p>Display help message.\n\n<pre>ruby -run -e help [COMMAND]</pre>\n",null,1],["help","OptionParser","Rails/classes/OptionParser.html#method-i-help","()","<p>Returns option summary string.\n",null,1],["help-message","","Rails/files/ruby/lib/irb/lc/ja/help-message.html","","<p>#   irb/lc/ja/help-message.rb - #       $Release Version: 0.9.6$ #      \n$Revision$ #       by Keiju …\n",null,1],["help-message","","Rails/files/ruby/lib/irb/lc/help-message.html","","<p># #   irb/lc/help-message.rb - #       $Release Version: 0.9.6$ #      \n$Revision$ #       by Keiju ISHITSUKA(keiju@ …\n",null,1],["helpcontext","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-helpcontext","()","<p>Returns help context.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\nmethod ...</pre>\n",null,1],["helpcontext","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-helpcontext","()","<p>Returns helpcontext. If helpcontext is not found, then returns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft ...</pre>\n",null,1],["helper","AbstractController::Helpers::ClassMethods","Ruby/classes/AbstractController/Helpers/ClassMethods.html#method-i-helper","(*args, &block)","<p>The <code>helper</code> class method can take a series of helper module\nnames, a block, or both.\n<p>Parameters\n<p><code>*args</code> - ...\n",null,0],["helper","Rails::ConsoleMethods","Ruby/classes/Rails/ConsoleMethods.html#method-i-helper","()","",null,0],["helper_attr","ActionController::Helpers::ClassMethods","Ruby/classes/ActionController/Helpers/ClassMethods.html#method-i-helper_attr","(*attrs)","<p>Declares helper accessors for controller attributes. For example, the\nfollowing adds new <code>name</code> and <code>name=</code> …\n",null,0],["helper_method","AbstractController::Helpers::ClassMethods","Ruby/classes/AbstractController/Helpers/ClassMethods.html#method-i-helper_method","(*meths)","<p>Declare a controller method as a helper. For example, the following makes\nthe <code>current_user</code> controller …\n",null,0],["helpers","ActionController::Helpers::ClassMethods","Ruby/classes/ActionController/Helpers/ClassMethods.html#method-i-helpers","()","<p>Provides a proxy to access helpers methods from outside the view.\n",null,0],["helpers","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-helpers","()","",null,0],["helpers_paths","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-helpers_paths","()","",null,0],["helpfile","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-helpfile","()","<p>Returns help file. If help file is not found, then the method returns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft ...</pre>\n",null,1],["helpfile","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-helpfile","()","<p>Returns helpfile path. If helpfile is not found, then returns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft ...</pre>\n",null,1],["helpstring","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-helpstring","()","<p>Returns help string of OLE method. If the help string is not found, then\nthe method returns nil.\n\n<pre>tobj ...</pre>\n",null,1],["helpstring","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-helpstring","()","<p>Returns help string.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', 'IWebBrowser')\nputs tobj.helpstring ...</pre>\n",null,1],["here?","DRb","Rails/classes/DRb.html#method-c-here-3F","(uri)","<p>Is <code>uri</code> the URI for the current local server?\n",null,1],["here?","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-i-here-3F","(uri)","",null,1],["hermitian?","Matrix","Rails/classes/Matrix.html#method-i-hermitian-3F","()","<p>Returns <code>true</code> is this is an hermitian matrix. Raises an error\nif matrix is not square.\n",null,1],["hex","SecureRandom","Rails/classes/SecureRandom.html#method-c-hex","(n=nil)","<p>SecureRandom.hex generates a random hex string.\n<p>The argument <em>n</em> specifies the length of the random length. …\n",null,1],["hex","String","Rails/classes/String.html#method-i-hex","()","<p>Treats leading characters from <em>str</em> as a string of hexadecimal\ndigits (with an optional sign and an optional …\n",null,1],["hexdigest","Digest::Class","Rails/classes/Digest/Class.html#method-c-hexdigest","(*args)","<p>Returns the hex-encoded hash value of a given <em>string</em>.  This is\nalmost equivalent to Digest.hexencode …\n",null,1],["hexdigest","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-hexdigest","(p1 = v1)","<p>If none is given, returns the resulting hash value of the digest in a\nhex-encoded form, keeping the digest’s …\n",null,1],["hexdigest","OpenSSL::HMAC","Rails/classes/OpenSSL/HMAC.html#method-i-hexdigest","()","",null,1],["hexdigest","OpenSSL::HMAC","Rails/classes/OpenSSL/HMAC.html#method-c-hexdigest","(p1, p2, p3)","",null,1],["hexdigest!","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-hexdigest-21","()","<p>Returns the resulting hash value in a hex-encoded form and resets the\ndigest to the initial state.\n",null,1],["hexencode","Digest","Rails/classes/Digest.html#method-c-hexencode","(p1)","<p>Generates a hex-encoded version of a given <em>string</em>.\n",null,1],["hidden","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-hidden","(name = \"\", value = nil)","<p>Generate a Hidden Input element as a string.\n<p>The attributes of the element can be specified as two arguments, …\n",null,1],["hidden_actions","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-c-hidden_actions","()","<p>The list of hidden actions to an empty array. Defaults to an empty array.\nThis can be modified by other …\n",null,0],["hidden_field","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-hidden_field","(method, options = {})","",null,0],["hidden_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-hidden_field","(object_name, method, options = {})","<p>Returns a hidden input tag tailored for accessing a specified attribute\n(identified by <code>method</code>) on an …\n",null,0],["hidden_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-hidden_field_tag","(name, value = nil, options = {})","<p>Creates a hidden form input field used to transmit data that would be lost\ndue to HTTP’s statelessness …\n",null,0],["hidden_namespaces","Rails::Generators","Ruby/classes/Rails/Generators.html#method-c-hidden_namespaces","()","",null,0],["hide_action","ActionController::HideActions::ClassMethods","Ruby/classes/ActionController/HideActions/ClassMethods.html#method-i-hide_action","(*args)","<p>Sets all of the actions passed in as hidden actions.\n<p>Parameters\n<p><code>args</code> - A list of actions\n",null,0],["hide_namespace","Rails::Generators","Ruby/classes/Rails/Generators.html#method-c-hide_namespace","(*namespaces)","",null,0],["hide_namespaces","Rails::Generators","Ruby/classes/Rails/Generators.html#method-c-hide_namespaces","(*namespaces)","",null,0],["hierarchical?","URI::Generic","Rails/classes/URI/Generic.html#method-i-hierarchical-3F","()","<p>Checks if URI has a path\n",null,1],["hierarchical?","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-hierarchical-3F","()","<p>Checks if URI has a path For URI::LDAP this will return <code>false</code>\n",null,1],["highlight","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-highlight","(text, phrases, *args)","<p>Highlights one or more <code>phrases</code> everywhere in <code>text</code>\nby inserting it into a <code>:highlighter</code> string. The highlighter …\n",null,0],["history_file","IRB::Context","Rails/classes/IRB/Context.html#method-i-history_file","()","",null,1],["history_file=","IRB::Context","Rails/classes/IRB/Context.html#method-i-history_file-3D","(hist)","",null,1],["home","Dir","Rails/classes/Dir.html#method-c-home","(p1 = v1)","<p>Returns the home directory of the current user or the named user if given.\n",null,1],["home_workspace","IRB::Context","Rails/classes/IRB/Context.html#method-i-home_workspace","()","",null,1],["hook_for","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-hook_for","(*names, &block)","<p>Invoke a generator based on the value supplied by the user to the given\noption named “name”. …\n",null,0],["host","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-host","()","<p>Returns the host for this request, such as example.com.\n",null,0],["host","Gem","Rails/classes/Gem.html#method-c-host","()","<p>Get the default RubyGems API host. This is normally\n<code>https://rubygems.org</code>.\n",null,1],["host","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-host","()","<p>The host this request is for\n",null,1],["host=","Gem","Rails/classes/Gem.html#method-c-host-3D","(host)","<p>Set the default RubyGems API host.\n",null,1],["host=","URI::Generic","Rails/classes/URI/Generic.html#method-i-host-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["host_with_port","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-host_with_port","()","<p>Returns a host:port string for this request, such as “example.com” or\n“example.com:8080”. …\n",null,0],["hostname","URI::Generic","Rails/classes/URI/Generic.html#method-i-hostname","()","<p>extract the host part of the URI and unwrap brackets for IPv6 addresses.\n<p>This method is same as URI::Generic#host …\n",null,1],["hostname=","URI::Generic","Rails/classes/URI/Generic.html#method-i-hostname-3D","(v)","<p>set the host part of the URI as the argument with brackets for IPv6\naddresses.\n<p>This method is same as …\n",null,1],["hour","Numeric","Ruby/classes/Numeric.html#method-i-hour","()","",null,0],["hour","Time","Rails/classes/Time.html#method-i-hour","()","<p>Returns the hour of the day (0..23) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:26:20 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">hour</span>     <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["hour=","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-hour-3D","(hour)","",null,1],["hour=","RSS::Maker::ITunesItemModel::ITunesDurationBase","Rails/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html#method-i-hour-3D","(hour)","",null,1],["hour=","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-hour-3D","(value)","",null,1],["hours","Numeric","Ruby/classes/Numeric.html#method-i-hours","()","",null,0],["href=","RSS::XMLStyleSheet","Rails/classes/RSS/XMLStyleSheet.html#method-i-href-3D","(value)","",null,1],["html","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-html","(attributes = {})","<p>Generate a top-level HTML element as a string.\n<p>The attributes of the element are specified as a hash. …\n",null,1],["html?","Mime::Type","Ruby/classes/Mime/Type.html#method-i-html-3F","()","",null,0],["html_escape","ERB::Util","Ruby/classes/ERB/Util.html#method-c-html_escape","(s)","<p>A utility method for escaping HTML tag characters. This method is also\naliased as <code>h</code>.\n<p>In your ERB templates, …\n",null,0],["html_escape","ERB::Util","Rails/classes/ERB/Util.html#method-c-html_escape","(s)","<p>A utility method for escaping HTML tag characters in <em>s</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&quot;erb&quot;</span>\n<span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ERB</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Util</span>\n\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-identifier\">html_escape</span>(<span class=\"ruby-string\">&quot;is ...\n</span></pre>\n",null,1],["html_escape","RSS::Utils","Rails/classes/RSS/Utils.html#method-i-html_escape","(s)","<p>escape ‘&amp;’, ‘“’, ‘&lt;’ and ‘&gt;’ for use in HTML.\n",null,1],["html_list_name","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-html_list_name","(list_type, open_tag)","<p>Determines the HTML list element for <code>list_type</code> and\n<code>open_tag</code>\n",null,1],["html_name","RDoc::Alias","Rails/classes/RDoc/Alias.html#method-i-html_name","()","<p>HTML id-friendly version of <code>#new_name</code>.\n",null,1],["html_name","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-html_name","()","<p>HTML id-friendly method/attribute name\n",null,1],["html_safe","String","Ruby/classes/String.html#method-i-html_safe","()","",null,0],["html_safe?","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-html_safe-3F","()","",null,0],["html_safe?","Numeric","Ruby/classes/Numeric.html#method-i-html_safe-3F","()","",null,0],["html_safe?","Object","Ruby/classes/Object.html#method-i-html_safe-3F","()","",null,0],["hton","IPAddr","Rails/classes/IPAddr.html#method-i-hton","()","<p>Returns a network byte ordered string form of the IP address.\n",null,1],["http_basic_authenticate_with","ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods","Ruby/classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html#method-i-http_basic_authenticate_with","(options = {})","",null,0],["http_default_port","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-http_default_port","()","<p>The default port to use for HTTP requests; defaults to 80.\n",null,1],["http_default_port","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-http_default_port","()","<p>The default port to use for HTTP requests; defaults to 80.\n",null,1],["http_url","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-http_url","(prefix)","<p>URL for this with a <code>prefix</code>\n",null,1],["http_url","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-http_url","(prefix)","<p>URL for this with a <code>prefix</code>\n",null,1],["httpd","Object","Rails/classes/Object.html#method-i-httpd","()","<p>Run WEBrick HTTP server.\n\n<pre>ruby -run -e httpd -- [OPTION] DocumentRoot\n\n--bind-address=ADDR         address ...</pre>\n",null,1],["httpdate","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-httpdate","()","",null,0],["httpdate","Date","Rails/classes/Date.html#method-i-httpdate","()","<p>This method is equivalent to strftime(‘%a, %d %b %Y %T GMT’). See also RFC\n2616.\n",null,1],["httpdate","Date","Rails/classes/Date.html#method-c-httpdate","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some RFC\n2616 format.\n<p>For example:\n\n<pre>Date.httpdate('Sat, ...</pre>\n",null,1],["httpdate","DateTime","Rails/classes/DateTime.html#method-c-httpdate","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some RFC\n2616 format.\n<p>For example:\n\n<pre>DateTime.httpdate('Sat, ...</pre>\n",null,1],["httpdate","Time","Rails/classes/Time.html#method-i-httpdate","()","<p>Returns a string which represents the time as rfc1123-date of HTTP-date\ndefined by RFC 2616:\n\n<pre>day-of-week, ...</pre>\n",null,1],["httpdate","Time","Rails/classes/Time.html#method-c-httpdate","(date)","<p>Parses <code>date</code> as HTTP-date defined by RFC 2616 and converts it\nto a Time object.\n<p>ArgumentError is raised …\n",null,1],["https?","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-https-3F","(uri)","",null,1],["https_default_port","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-https_default_port","()","<p>The default port to use for HTTPS requests; defaults to 443.\n",null,1],["https_default_port","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-https_default_port","()","<p>The default port to use for HTTPS requests; defaults to 443.\n",null,1],["human","ActiveModel::Name","Ruby/classes/ActiveModel/Name.html#method-i-human","(options={})","<p>Transform the model name into a more humane format, using I18n. By default,\nit will underscore then humanize …\n",null,0],["human","ActiveSupport::Inflector::Inflections","Ruby/classes/ActiveSupport/Inflector/Inflections.html#method-i-human","(rule, replacement)","<p>Specifies a humanized form of a string by a regular expression rule or by a\nstring mapping. When using …\n",null,0],["human_attribute_name","ActiveModel::Translation","Ruby/classes/ActiveModel/Translation.html#method-i-human_attribute_name","(attribute, options = {})","<p>Transforms attribute names into a more human format, such as “First name”\ninstead of “ …\n",null,0],["human_name","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-i-human_name","()","",null,0],["human_name","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-human_name","()","",null,0],["humanize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-humanize","(lower_case_and_underscored_word)","<p>Capitalizes the first word and turns underscores into spaces and strips a\ntrailing “_id”, if …\n",null,0],["humanize","String","Ruby/classes/String.html#method-i-humanize","()","<p>Capitalizes the first word, turns underscores into spaces, and strips\n‘_id’. Like <code>titleize</code>, this is meant …\n",null,0],["hypot","Math","Rails/classes/Math.html#method-c-hypot","(p1, p2)","<p>Returns sqrt(x**2 + y**2), the hypotenuse of a right-angled triangle with\nsides <em>x</em> and <em>y</em>.\n\n<pre>Math.hypot(3, ...</pre>\n",null,1],["i","Numeric","Rails/classes/Numeric.html#method-i-i","()","<p>Returns the corresponding imaginary number. Not available for complex\nnumbers.\n",null,1],["i18n_scope","ActiveModel::Translation","Ruby/classes/ActiveModel/Translation.html#method-i-i18n_scope","()","<p>Returns the <code>i18n_scope</code> for the class. Overwrite if you want\ncustom lookup.\n",null,0],["i18n_scope","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-i18n_scope","()","",null,0],["iPIMethods","XMLRPC","Rails/classes/XMLRPC.html#method-c-iPIMethods","(prefix)","<p>short-cut for creating a PublicInstanceMethodsInterface\n",null,1],["icon","RSS::Maker::ChannelBase","Rails/classes/RSS/Maker/ChannelBase.html#method-i-icon","()","",null,1],["icon=","RSS::Maker::ChannelBase","Rails/classes/RSS/Maker/ChannelBase.html#method-i-icon-3D","(url)","",null,1],["iconv","Iconv","Rails/classes/Iconv.html#method-c-iconv","(*args)","<p>Shorthand for\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Iconv</span>.<span class=\"ruby-identifier\">open</span>(<span class=\"ruby-identifier\">to</span>, <span class=\"ruby-identifier\">from</span>) { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">cd</span><span class=\"ruby-operator\">|</span>\n  (<span class=\"ruby-identifier\">strs</span> <span class=\"ruby-operator\">+</span> [<span class=\"ruby-keyword\">nil</span>]).<span class=\"ruby-identifier\">collect</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">s</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">cd</span>.<span class=\"ruby-identifier\">iconv</span>(<span class=\"ruby-identifier\">s</span>) }\n}\n</pre>\n<p>Parameters\n",null,1],["iconv","Iconv","Rails/classes/Iconv.html#method-i-iconv","(p1, p2 = v2, p3 = v3)","<p>Converts string and returns the result.\n<p>If <code>str</code> is a String, converts <code>str[start, length]</code>\nand returns the ...\n",null,1],["iconv","JSON","Rails/classes/JSON.html#method-c-iconv","(to, from, string)","<p>Encodes string using Ruby’s <em>String.encode</em>\n",null,1],["id","ActiveRecord::AttributeMethods::PrimaryKey","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id","()","<p>Returns the primary key value\n",null,0],["id","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-id","()","<p>Gets the <code>\\id</code> attribute of the resource.\n",null,0],["id","NilClass","Ruby/classes/NilClass.html#method-i-id","()","<p>Raises a RuntimeError when you attempt to call <code>id</code> on\n<code>nil</code>.\n",null,0],["id","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-id","()","",null,1],["id","OpenSSL::SSL::Session","Rails/classes/OpenSSL/SSL/Session.html#method-i-id","()","<p>Returns the Session ID.\n",null,1],["id","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-id","( object )","<p>Since REXML is non-validating, this method is not implemented as it\nrequires a DTD\n",null,1],["id2name","Symbol","Rails/classes/Symbol.html#method-i-id2name","()","<p>Returns the name or string corresponding to <em>sym</em>.\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">fred</span>.<span class=\"ruby-identifier\">id2name</span>   <span class=\"ruby-comment\">#=&gt; &quot;fred&quot;</span>\n</pre>\n",null,1],["id=","ActiveRecord::AttributeMethods::PrimaryKey","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id-3D","(value)","<p>Sets the primary key value\n",null,0],["id=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-id-3D","(id)","<p>Sets the <code>\\id</code> attribute of the resource.\n",null,0],["id?","ActiveRecord::AttributeMethods::PrimaryKey","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id-3F","()","<p>Queries the primary key value\n",null,0],["id_from_response","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-id_from_response","(response)","<p>Takes a response from a typical create post and pulls the ID out\n",null,0],["ident","Syslog","Rails/classes/Syslog.html#method-c-ident","()","<p>Returns the identity string used in the last call to open()\n",null,1],["identical?","File","Rails/classes/File.html#method-c-identical-3F","(p1, p2)","<p>Returns <code>true</code> if the named files are identical.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;w&quot;</span>) {}\n<span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">identical?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;a&quot;</span>)      <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["identical?","FileTest","Rails/classes/FileTest.html#method-i-identical-3F","(p1, p2)","<p>Returns <code>true</code> if the named files are identical.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;w&quot;</span>) {}\n<span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">identical?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;a&quot;</span>)      <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["identical?","FileUtils","Rails/classes/FileUtils.html#method-c-identical-3F","(a, b)","",null,1],["identify","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-c-identify","(label)","<p>Returns a consistent, platform-independent identifier for\n<code>label</code>. Identifiers are positive integers less …\n",null,0],["identify_comment","RubyLex","Rails/classes/RubyLex.html#method-i-identify_comment","()","",null,1],["identify_gvar","RubyLex","Rails/classes/RubyLex.html#method-i-identify_gvar","()","",null,1],["identify_here_document","RubyLex","Rails/classes/RubyLex.html#method-i-identify_here_document","()","",null,1],["identify_identifier","RubyLex","Rails/classes/RubyLex.html#method-i-identify_identifier","()","",null,1],["identify_number","RubyLex","Rails/classes/RubyLex.html#method-i-identify_number","()","",null,1],["identify_quotation","RubyLex","Rails/classes/RubyLex.html#method-i-identify_quotation","()","",null,1],["identify_string","RubyLex","Rails/classes/RubyLex.html#method-i-identify_string","(ltype, quoted = ltype)","",null,1],["identify_string_dvar","RubyLex","Rails/classes/RubyLex.html#method-i-identify_string_dvar","()","",null,1],["identity","ActiveRecord::LogSubscriber","Ruby/classes/ActiveRecord/LogSubscriber.html#method-i-identity","(event)","",null,0],["identity","Matrix","Rails/classes/Matrix.html#method-c-identity","(n)","<p>Creates an <code>n</code> by <code>n</code> identity matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">identity</span>(<span class=\"ruby-value\">2</span>)\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span> <span class=\"ruby-value\">0</span>\n     <span class=\"ruby-value\">0</span> <span class=\"ruby-value\">1</span>\n</pre>\n",null,1],["identity_map?","Build","Ruby/classes/Build.html#method-i-identity_map-3F","()","",null,0],["idle","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-idle","(&response_handler)","<p>Sends an IDLE command that waits for notifications of new or expunged\nmessages.  Yields responses from …\n",null,1],["idle_done","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-idle_done","()","<p>Leaves IDLE.\n",null,1],["idlok","Curses::Window","Rails/classes/Curses/Window.html#method-i-idlok","(p1)","<p>If <code>bool</code> is <code>true</code> curses considers using the\nhardware insert/delete line feature of terminals so equipped. …\n",null,1],["if_modified_since","ActionDispatch::Http::Cache::Request","Ruby/classes/ActionDispatch/Http/Cache/Request.html#method-i-if_modified_since","()","",null,0],["if_none_match","ActionDispatch::Http::Cache::Request","Ruby/classes/ActionDispatch/Http/Cache/Request.html#method-i-if_none_match","()","",null,0],["iflush","IO","Rails/classes/IO.html#method-i-iflush","()","<p>Flushes input buffer in kernel.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["ignore","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-ignore","()","<p>Use this to ignore a CodeObject and all its children until found again\n(#record_location is called). …\n",null,1],["ignore_unknown_element","RSS::BaseParser","Rails/classes/RSS/BaseParser.html#method-i-ignore_unknown_element","()","",null,1],["ignore_unknown_element=","RSS::BaseParser","Rails/classes/RSS/BaseParser.html#method-i-ignore_unknown_element-3D","(new_value)","",null,1],["ignore_whitespace_nodes","REXML::Element","Rails/classes/REXML/Element.html#method-i-ignore_whitespace_nodes","()","",null,1],["ignored?","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-ignored-3F","()","<p>Has this class been ignored?\n",null,1],["imag","Complex","Rails/classes/Complex.html#method-i-imag","()","<p>Returns the imaginary part.\n",null,1],["imag","Matrix","Rails/classes/Matrix.html#method-i-imag","()","",null,1],["imag","Numeric","Rails/classes/Numeric.html#method-i-imag","()","<p>Returns zero.\n",null,1],["image","RSS::Rss","Rails/classes/RSS/Rss.html#method-i-image","()","",null,1],["image_alt","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-image_alt","(src)","",null,0],["image_button","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-image_button","(src = \"\", name = nil, alt = nil)","<p>Generate an Image Button Input element as a string.\n<p><code>src</code> is the URL of the image to use for the button. ...\n",null,1],["image_path","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-image_path","(source)","<p>Computes the path to an image asset in the public images directory. Full\npaths from the document root …\n",null,0],["image_path","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-image_path","(source)","",null,0],["image_size=","RSS::ImageFaviconModel::ImageFavicon","Rails/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-i-image_size-3D","(new_value)","",null,1],["image_submit_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-image_submit_tag","(source, options = {})","<p>Displays an image which when clicked will submit the form.\n<p><code>source</code> is passed to AssetTagHelper#path_to_image ...\n",null,0],["image_tag","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-image_tag","(source, options = {})","<p>Returns an html image tag for the <code>source</code>. The\n<code>source</code> can be a full path or a file that exists in your …\n",null,0],["imaginary","Complex","Rails/classes/Complex.html#method-i-imaginary","()","<p>Returns the imaginary part.\n",null,1],["imaginary","Matrix","Rails/classes/Matrix.html#method-i-imaginary","()","<p>Returns the imaginary part of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">2</span>), <span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">0</span>,<span class=\"ruby-value\">1</span>), <span class=\"ruby-value\">0</span>], [<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span><span class=\"ruby-operator\">+</span><span class=\"ruby-value\">2</span><span class=\"ruby-identifier\">i</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["imaginary","Numeric","Rails/classes/Numeric.html#method-i-imaginary","()","<p>Returns zero.\n",null,1],["img","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-img","(src = \"\", alt = \"\", width = nil, height = nil)","<p>Generate an Image element as a string.\n<p><code>src</code> is the URL of the image.  <code>alt</code> is the\nalternative text for the ...\n",null,1],["implemented_ole_types","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-implemented_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the\nWIN32OLE_TYPE object.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft ...</pre>\n",null,1],["import_function","DL::Importer","Rails/classes/DL/Importer.html#method-i-import_function","(name, ctype, argtype, call_type = nil)","",null,1],["import_symbol","DL::Importer","Rails/classes/DL/Importer.html#method-i-import_symbol","(name)","",null,1],["import_value","DL::Importer","Rails/classes/DL/Importer.html#method-i-import_value","(ty, addr)","",null,1],["in","Date","Ruby/classes/Date.html#method-i-in","(seconds)","",null,0],["in","DateTime","Ruby/classes/DateTime.html#method-i-in","(seconds)","",null,0],["in","Time","Ruby/classes/Time.html#method-i-in","(seconds)","",null,0],["in?","Object","Ruby/classes/Object.html#method-i-in-3F","(*args)","<p>Returns true if this object is included in the argument(s). Argument must\nbe any object which responds …\n",null,0],["in_char_class?","ActiveSupport::Multibyte::Unicode","Ruby/classes/ActiveSupport/Multibyte/Unicode.html#method-i-in_char_class-3F","(codepoint, classes)","<p>Detect whether the codepoint is in a certain character class. Returns\n<code>true</code> when it’s in the specified …\n",null,0],["in_clause_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-in_clause_length","()","<p>Returns the maximum number of elements in an IN (x,y,z) clause. nil means\nno limit.\n",null,0],["in_groups","Array","Ruby/classes/Array.html#method-i-in_groups","(number, fill_with = nil)","<p>Splits or iterates over the array in <code>number</code> of groups, padding\nany remaining slots with <code>fill_with</code> unless …\n",null,0],["in_groups_of","Array","Ruby/classes/Array.html#method-i-in_groups_of","(number, fill_with = nil)","<p>Splits or iterates over the array in groups of size <code>number</code>,\npadding any remaining slots with <code>fill_with</code> …\n",null,0],["in_namespace","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-in_namespace","(name)","<p>Evaluate the block in a nested namespace named <code>name</code>.  Create\nan anonymous namespace if <code>name</code> is nil.\n",null,1],["in_path?","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-in_path-3F","(file)","<p>Is <code>file</code> in ENV?\n",null,1],["in_rails_application?","Rails::ScriptRailsLoader","Ruby/classes/Rails/ScriptRailsLoader.html#method-c-in_rails_application-3F","()","",null,0],["in_rails_application_subdirectory?","Rails::ScriptRailsLoader","Ruby/classes/Rails/ScriptRailsLoader.html#method-c-in_rails_application_subdirectory-3F","(path = Pathname.new(Dir.pwd))","",null,0],["in_service?","GServer","Rails/classes/GServer.html#method-c-in_service-3F","(port, host = DEFAULT_HOST)","<p>Check if a server is running on the given port and host\n<p><code>port</code> &mdash; port, as a FixNum, of the server to check …\n",null,1],["in_time_zone","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-in_time_zone","(new_zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code>, or the specified\nzone.\n",null,0],["in_time_zone","DateTime","Ruby/classes/DateTime.html#method-i-in_time_zone","(zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">zone</span> = <span class=\"ruby-string\">'Hawaii'</span>             <span class=\"ruby-comment\"># =&gt; 'Hawaii'</span>\n<span class=\"ruby-constant\">DateTime</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2000</span>).<span class=\"ruby-identifier\">in_time_zone</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["in_time_zone","Time","Ruby/classes/Time.html#method-i-in_time_zone","(zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">zone</span> = <span class=\"ruby-string\">'Hawaii'</span>         <span class=\"ruby-comment\"># =&gt; 'Hawaii'</span>\n<span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">utc</span>(<span class=\"ruby-value\">2000</span>).<span class=\"ruby-identifier\">in_time_zone</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["in_tt?","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-in_tt-3F","()","<p>Are we currently inside tt tags?\n",null,1],["inactivate","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-c-inactivate","(pc)","",null,1],["inc","OptionParser","Rails/classes/OptionParser.html#method-c-inc","(arg, default = nil)","<p>Returns an incremented value of <code>default</code> according to\n<code>arg</code>.\n",null,1],["inc","OptionParser","Rails/classes/OptionParser.html#method-i-inc","(*args)","",null,1],["inch","Curses","Rails/classes/Curses.html#method-c-inch","()","<p>Returns the character at the current position.\n",null,1],["inch","Curses::Window","Rails/classes/Curses/Window.html#method-i-inch","()","<p>Returns the character at the current position of the window.\n",null,1],["include","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-include","(*filenames)","<p>Add file names defined by glob patterns to the file list.  If an array is\ngiven, add each element of …\n",null,1],["include?","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-include-3F","(error)","<p>Do the error messages include an error with key <code>error</code>?\n",null,0],["include?","ActiveModel::MassAssignmentSecurity::PermissionSet","Ruby/classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#method-i-include-3F","(key)","",null,0],["include?","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-include-3F","(key)","",null,0],["include?","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-include-3F","(key)","",null,0],["include?","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-include-3F","(other)","<p>Returns <code>true</code> if contained string contains <em>other</em>.\nReturns <code>false</code> otherwise.\n<p>Example:\n\n<pre>'Café'.mb_chars.include?('é') ...</pre>\n",null,0],["include?","Array","Rails/classes/Array.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if the given object is present in\n<code>self</code> (that is, if any object <code>==</code>\n<em>anObject</em>), <code>false</code> otherwise. …\n",null,1],["include?","CGI::QueryExtension","Rails/classes/CGI/QueryExtension.html#method-i-include-3F","(*args)","",null,1],["include?","CSV::Row","Rails/classes/CSV/Row.html#method-i-include-3F","(name)","",null,1],["include?","DBM","Rails/classes/DBM.html#method-i-include-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n",null,1],["include?","DRb::TimerIdConv::TimerHolder2","Rails/classes/DRb/TimerIdConv/TimerHolder2.html#method-i-include-3F","(key)","",null,1],["include?","ENV","Rails/classes/ENV.html#method-c-include-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,1],["include?","Enumerable","Rails/classes/Enumerable.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if any member of <em>enum</em> equals\n<em>obj</em>. Equality is tested using <code>==</code>.\n\n<pre>IO.constants.include? :SEEK_SET ...</pre>\n",null,1],["include?","GDBM","Rails/classes/GDBM.html#method-i-include-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n",null,1],["include?","Hash","Rails/classes/Hash.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_key?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["include?","IPAddr","Rails/classes/IPAddr.html#method-i-include-3F","(other)","<p>Returns true if the given ipaddr is in the range.\n<p>e.g.:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'ipaddr'</span>\n<span class=\"ruby-identifier\">net1</span> = <span class=\"ruby-constant\">IPAddr</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;192.168.2.0/24&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["include?","Module","Rails/classes/Module.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <em>module</em> is included in <em>mod</em> or\none of <em>mod</em>’s ancestors.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">A</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">B</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">A</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["include?","REXML::AttlistDecl","Rails/classes/REXML/AttlistDecl.html#method-i-include-3F","(key)","<p>Whether an attlist declaration includes the given attribute definition\n\n<pre>if attlist_decl.include? &quot;xmlns:foobar&quot;</pre>\n",null,1],["include?","Range","Rails/classes/Range.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <em>obj</em> is an element of <em>rng</em>,\n<code>false</code> otherwise.  If beg and end are numeric, comparison is …\n",null,1],["include?","SDBM","Rails/classes/SDBM.html#method-i-include-3F","(p1)","",null,1],["include?","Set","Rails/classes/Set.html#method-i-include-3F","(o)","<p>Returns true if the set contains the given object.\n",null,1],["include?","String","Rails/classes/String.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <em>str</em> contains the given string or\ncharacter.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;hello&quot;</span>.<span class=\"ruby-identifier\">include?</span> <span class=\"ruby-string\">&quot;lo&quot;</span>   <span class=\"ruby-comment\">#=&gt; true</span>\n<span class=\"ruby-string\">&quot;hello&quot;</span>.<span class=\"ruby-identifier\">include?</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["include_all_railties?","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-include_all_railties-3F","()","",null,0],["include_fallbacks_module","I18n::Railtie","Ruby/classes/I18n/Railtie.html#method-c-include_fallbacks_module","()","",null,0],["include_file","RDoc::Markup::PreProcess","Rails/classes/RDoc/Markup/PreProcess.html#method-i-include_file","(name, indent, encoding)","<p>Handles the <code>:include: <em>filename</em></code> directive.\n<p>If the first line of the included file starts with ‘#’, and …\n",null,1],["include_tag","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-i-include_tag","(*sources)","",null,0],["include_with_range?","Range","Ruby/classes/Range.html#method-i-include_with_range-3F","(value)","<p>Extends the default Range#include? to support range comparisons.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">include?</span>(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>) <span class=\"ruby-comment\"># =&gt; true</span>\n(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">include?</span>(<span class=\"ruby-value\">2</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">3</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["included","ActiveRecord::ConnectionAdapters::QueryCache","Ruby/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-c-included","(base)","",null,0],["included","ActiveSupport::Concern","Ruby/classes/ActiveSupport/Concern.html#method-i-included","(base = nil, &block)","",null,0],["included","ActiveSupport::Memoizable::InstanceMethods","Ruby/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-c-included","(base)","",null,0],["included","Rails::Initializable","Ruby/classes/Rails/Initializable.html#method-c-included","(base)","",null,0],["included","RSS::Maker::AtomTextConstructBase::EnsureXMLContent","Rails/classes/RSS/Maker/AtomTextConstructBase/EnsureXMLContent.html#method-c-included","(base)","",null,1],["included_modules","Module","Rails/classes/Module.html#method-i-included_modules","()","<p>Returns the list of modules included in <em>mod</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">Mixin</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">Outer</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">Mixin</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-constant\">Mixin</span>.<span class=\"ruby-identifier\">included_modules</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["includes","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-includes","(*args)","",null,0],["incompatible_argument_styles","OptionParser::Switch","Rails/classes/OptionParser/Switch.html#method-c-incompatible_argument_styles","(arg, t)","",null,1],["incompatible_argument_styles","OptionParser::Switch::NoArgument","Rails/classes/OptionParser/Switch/NoArgument.html#method-c-incompatible_argument_styles","(*)","",null,1],["incomplete_input?","Encoding::InvalidByteSequenceError","Rails/classes/Encoding/InvalidByteSequenceError.html#method-i-incomplete_input-3F","()","<p>Returns true if the invalid byte sequence error is caused by premature end\nof string.\n\n<pre>ec = Encoding::Converter.new(&quot;EUC-JP&quot;, ...</pre>\n",null,1],["increment","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-increment","(attribute, by = 1)","<p>Initializes <code>attribute</code> to zero if <code>nil</code> and adds the\nvalue passed as <code>by</code> (default is 1). The increment is …\n",null,0],["increment","ActiveSupport::Cache::FileStore","Ruby/classes/ActiveSupport/Cache/FileStore.html#method-i-increment","(name, amount = 1, options = nil)","",null,0],["increment","ActiveSupport::Cache::MemoryStore","Ruby/classes/ActiveSupport/Cache/MemoryStore.html#method-i-increment","(name, amount = 1, options = nil)","<p>Increment an integer value in the cache.\n",null,0],["increment","ActiveSupport::Cache::NullStore","Ruby/classes/ActiveSupport/Cache/NullStore.html#method-i-increment","(name, amount = 1, options = nil)","",null,0],["increment","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-increment","(name, amount = 1, options = nil)","<p>Increment an integer value in the cache.\n<p>Options are passed to the underlying cache implementation.\n<p>All …\n",null,0],["increment!","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-increment-21","(attribute, by = 1)","<p>Wrapper around <code>increment</code> that saves the record. This method\ndiffers from its non-bang version in that …\n",null,0],["increment_counter","ActiveRecord::CounterCache","Ruby/classes/ActiveRecord/CounterCache.html#method-i-increment_counter","(counter_name, id)","<p>Increment a number field by one, usually representing a count.\n<p>This is used for caching aggregate values, …\n",null,0],["increment_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-increment_open_transactions","()","",null,0],["indent","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-indent","(content, multiplier = 2)","",null,0],["indent","REXML::Node","Rails/classes/REXML/Node.html#method-i-indent","(to, ind)","",null,1],["indent_text","REXML::Text","Rails/classes/REXML/Text.html#method-i-indent_text","(string, level=1, style=\"\\t\", indentfirstline=true)","",null,1],["indentation","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-indentation","()","<p>Get the indentation level.\n",null,1],["indentation=","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-indentation-3D","(p1)","<p>Set the indentation level to <code>level</code>.  The level must be less\nthan 10 and greater than 1.\n",null,1],["index","ActionController::Middleware","Ruby/classes/ActionController/Middleware.html#method-i-index","()","",null,0],["index","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-index","(column_name, options = {})","<p>Adds a new index to the table. <code>column_name</code> can be a single\nSymbol, or an Array of Symbols. See SchemaStatements#add_index …\n",null,0],["index","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-index","(needle, offset=0)","<p>Returns the position <em>needle</em> in the string, counting in codepoints.\nReturns <code>nil</code> if <em>needle</em> isn’t found. …\n",null,0],["index","HomeController","Ruby/classes/HomeController.html#method-i-index","()","",null,0],["index","PostsController","Ruby/classes/PostsController.html#method-i-index","()","<p>GET /posts GET /posts.json\n",null,0],["index","RailsGuides::Indexer","Ruby/classes/RailsGuides/Indexer.html#method-i-index","()","",null,0],["index","Array","Rails/classes/Array.html#method-i-index","(p1)","<p>Returns the index of the first object in <code>self</code> such that the\nobject is <code>==</code> to <em>obj</em>. If a block is given …\n",null,1],["index","CSV::Row","Rails/classes/CSV/Row.html#method-i-index","(header, minimum_index = 0)","<p>This method will return the index of a field with the provided\n<code>header</code>. The <code>offset</code> can be used to locate …\n",null,1],["index","ENV","Rails/classes/ENV.html#method-c-index","(p1)","<p>Deprecated method that is equivalent to ENV.key\n",null,1],["index","Matrix","Rails/classes/Matrix.html#method-i-index","(*args)","<p>The index method is specialized to return the index as [row, column] It\nalso accepts an optional <code>selector</code> …\n",null,1],["index","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-index","(element)","<p>Returns the index of the supplied child (starting at 1), or -1 if the\nelement is not a child\n<p>element &mdash; ",null,1],["index","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-index","( child )","<p>Fetches the index of a given child @param child the child to get the index\nof @return the index of the …\n",null,1],["index","SDBM","Rails/classes/SDBM.html#method-i-index","(p1)","",null,1],["index","String","Rails/classes/String.html#method-i-index","(p1, p2 = v2)","<p>Returns the index of the first occurrence of the given <em>substring</em>\nor pattern (<em>regexp</em>) in <em>str</em>. Returns …\n",null,1],["index","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-index","( keystr )","<p>Deprecated, used YAML::DBM#key instead.\n",null,1],["index_by","Enumerable","Ruby/classes/Enumerable.html#method-i-index_by","()","<p>Convert an enumerable to a hash. Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">people</span>.<span class=\"ruby-identifier\">index_by</span>(&amp;:<span class=\"ruby-identifier\">login</span>)\n  =<span class=\"ruby-operator\">&gt;</span> { <span class=\"ruby-string\">&quot;nextangle&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">&lt;</span><span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span><span class=\"ruby-operator\">&gt;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["index_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_exists-3F","(table_name, column_name, options = {})","<p>Checks to see if an index exists on a table for a given index definition.\n<p>Examples\n\n<pre># Check an index exists ...</pre>\n",null,0],["index_exists?","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-index_exists-3F","(column_name, options = {})","<p>Checks to see if an index exists. See SchemaStatements#index_exists?\n",null,0],["index_helper","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-index_helper","()","",null,0],["index_in_parent","REXML::Node","Rails/classes/REXML/Node.html#method-i-index_in_parent","()","<p>Returns the position that <code>self</code> holds in its parent’s array,\nindexed from 1.\n",null,1],["index_name","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-i-index_name","()","",null,0],["index_name_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_name_exists-3F","(table_name, index_name, default)","<p>Verify the existence of an index with a given name.\n<p>The default argument is returned if the underlying …\n",null,0],["index_name_for_remove","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_name_for_remove","(table_name, options = {})","",null,0],["index_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-index_name_length","()","<p>Returns the maximum length of an index name.\n",null,0],["index_name_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-index_name_length","()","",null,0],["index_signature","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-index_signature","()","<p>The signature for the source index.  Changes in the signature indicate a\nchange in the index.\n",null,1],["indexes","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-indexes","(table_name, name = nil)","<p>Returns an array of indexes for the given table.\n",null,0],["indexes_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-indexes_per_table","()","<p>Returns the maximum number of indexes per table.\n",null,0],["indir","Sys","Rails/classes/Sys.html#method-i-indir","(dir)","<p>Make <code>dir</code> the current working directory for the duration of\nexecuting the given block.\n",null,1],["infinite?","BigDecimal","Rails/classes/BigDecimal.html#method-i-infinite-3F","()","<p>Returns nil, -1, or +1 depending on whether the value is finite, -infinity,\nor +infinity.\n",null,1],["infinite?","Float","Rails/classes/Float.html#method-i-infinite-3F","()","<p>Returns <code>nil</code>, -1, or +1 depending on whether <em>flt</em> is\nfinite, -infinity, or +infinity.\n\n<pre>(0.0).infinite?   ...</pre>\n",null,1],["infinity?","OpenSSL::PKey::EC::Point","Rails/classes/OpenSSL/PKey/EC/Point.html#method-i-infinity-3F","()","",null,1],["inflate","Gem","Rails/classes/Gem.html#method-c-inflate","(data)","<p>A Zlib::Inflate#inflate wrapper\n",null,1],["inflate","Zlib","Rails/classes/Zlib.html#method-c-inflate","(p1)","<p>Decompresses <code>string</code>. Raises a Zlib::NeedDict exception if a\npreset dictionary is needed for decompression. …\n",null,1],["inflate","Zlib::Inflate","Rails/classes/Zlib/Inflate.html#method-c-inflate","(p1)","<p>Decompresses <code>string</code>. Raises a Zlib::NeedDict exception if a\npreset dictionary is needed for decompression. …\n",null,1],["inflate","Zlib::Inflate","Rails/classes/Zlib/Inflate.html#method-i-inflate","(p1)","<p>Inputs <code>string</code> into the inflate stream and returns the output\nfrom the stream.  Calling this method, both ...\n",null,1],["inflections","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-inflections","()","<p>Yields a singleton instance of Inflector::Inflections so you can specify\nadditional inflector rules. …\n",null,0],["info","Plugin","Ruby/classes/Plugin.html#method-i-info","()","",null,0],["info","Logger","Rails/classes/Logger.html#method-i-info","(progname = nil, &block)","<p>Log an <code>INFO</code> message.\n<p><code>message</code> &mdash; the message to log; does not need to be a String\n<p><code>progname</code> &mdash; in the block form, …\n",null,1],["info","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-info","(msg)","<p>Shortcut for logging an INFO message\n",null,1],["info","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-info","()","<p>Returns key information as Array of: :num_keys\n\n<pre>The number of subkeys.</pre>\n<p>:max_key_length\n",null,1],["info?","Logger","Rails/classes/Logger.html#method-i-info-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>INFO</code> messages.\n",null,1],["info?","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-info-3F","()","<p>Will the logger output INFO messages?\n",null,1],["info?","WEBrick::HTTPStatus","Rails/classes/WEBrick/HTTPStatus.html#method-c-info-3F","(code)","<p>Is <code>code</code> an informational status?\n",null,1],["inheritable_copy","ActiveSupport::InheritableOptions","Ruby/classes/ActiveSupport/InheritableOptions.html#method-i-inheritable_copy","()","",null,0],["inheritance_column","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-inheritance_column","()","<p>The name of the column containing the object’s class when Single Table\nInheritance is used\n",null,0],["inheritance_column=","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-inheritance_column-3D","(value)","<p>Sets the value of inheritance_column\n",null,0],["inherited","AbstractController::Helpers::ClassMethods","Ruby/classes/AbstractController/Helpers/ClassMethods.html#method-i-inherited","(klass)","<p>When a class is inherited, wrap its helper module in a new module. This\nensures that the parent class’s …\n",null,0],["inherited","AbstractController::Layouts::ClassMethods","Ruby/classes/AbstractController/Layouts/ClassMethods.html#method-i-inherited","(klass)","",null,0],["inherited","ActionController::ParamsWrapper::ClassMethods","Ruby/classes/ActionController/ParamsWrapper/ClassMethods.html#method-i-inherited","(klass)","<p>Sets the default wrapper key or model which will be used to determine\nwrapper key and attribute names. …\n",null,0],["inherited","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-c-inherited","(base)","",null,0],["inherited","ActiveModel::Observing::ClassMethods","Ruby/classes/ActiveModel/Observing/ClassMethods.html#method-i-inherited","(subclass)","<p>Notify observers when the observed class is subclassed.\n",null,0],["inherited","ActiveModel::Validations::ClassMethods","Ruby/classes/ActiveModel/Validations/ClassMethods.html#method-i-inherited","(base)","<p>Copy validators on inheritance.\n",null,0],["inherited","ActiveSupport::DescendantsTracker","Ruby/classes/ActiveSupport/DescendantsTracker.html#method-i-inherited","(base)","",null,0],["inherited","Rails::Application","Ruby/classes/Rails/Application.html#method-c-inherited","(base)","",null,0],["inherited","Rails::Engine","Ruby/classes/Rails/Engine.html#method-c-inherited","(base)","",null,0],["inherited","Rails::Plugin","Ruby/classes/Rails/Plugin.html#method-c-inherited","(base)","",null,0],["inherited","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-c-inherited","(base)","",null,0],["inherited","Rails::Railtie::Configurable::ClassMethods","Ruby/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-inherited","(base)","",null,0],["inherited","RSS::Element","Rails/classes/RSS/Element.html#method-c-inherited","(klass)","",null,1],["inherited","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-inherited","(subclass)","",null,1],["inherited_array_reader","RSS::Utils::InheritedReader","Rails/classes/RSS/Utils/InheritedReader.html#method-i-inherited_array_reader","(constant_name)","",null,1],["inherited_base","RSS::Element","Rails/classes/RSS/Element.html#method-c-inherited_base","()","",null,1],["inherited_base","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-inherited_base","()","",null,1],["inherited_hash_reader","RSS::Utils::InheritedReader","Rails/classes/RSS/Utils/InheritedReader.html#method-i-inherited_hash_reader","(constant_name)","",null,1],["inherited_reader","RSS::Utils::InheritedReader","Rails/classes/RSS/Utils/InheritedReader.html#method-i-inherited_reader","(constant_name)","",null,1],["init","Gem::PackageTask","Rails/classes/Gem/PackageTask.html#method-i-init","(gem)","<p>Initialization tasks without the “yield self” or define operations.\n",null,1],["init","IRB::Inspector","Rails/classes/IRB/Inspector.html#method-i-init","()","",null,1],["init","Rake::Application","Rails/classes/Rake/Application.html#method-i-init","(app_name='rake')","<p>Initialize the command line parameters and app name.\n",null,1],["init","Rake::PackageTask","Rails/classes/Rake/PackageTask.html#method-i-init","(name, version)","<p>Initialization that bypasses the “yield self” and “define” step.\n",null,1],["init_color","Curses","Rails/classes/Curses.html#method-c-init_color","(p1, p2, p3, p4)","<p>Changes the definition of a color. It takes four arguments:\n<p>the number of the color to be changed, <code>color</code> …\n",null,1],["init_config","IRB","Rails/classes/IRB.html#method-c-init_config","(ap_path)","<p>@CONF default setting\n",null,1],["init_error","IRB","Rails/classes/IRB.html#method-c-init_error","()","",null,1],["init_fallbacks","I18n::Railtie","Ruby/classes/I18n/Railtie.html#method-c-init_fallbacks","(fallbacks)","",null,0],["init_gemspecs","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-init_gemspecs","()","<p>Return a list of all installed gemspecs, sorted by alphabetical order and\nin reverse version order.  …\n",null,1],["init_pair","Curses","Rails/classes/Curses.html#method-c-init_pair","(p1, p2, p3)","<p>Changes the definition of a color-pair.\n<p>It takes three arguments: the number of the color-pair to be changed …\n",null,1],["init_save_history","IRB::Context","Rails/classes/IRB/Context.html#method-i-init_save_history","()","",null,1],["init_screen","Curses","Rails/classes/Curses.html#method-c-init_screen","()","<p>Initialize a standard screen\n<p>see also Curses.stdscr\n",null,1],["init_tags","RDoc::Markup::ToAnsi","Rails/classes/RDoc/Markup/ToAnsi.html#method-i-init_tags","()","<p>Maps attributes to ANSI sequences\n",null,1],["init_tags","RDoc::Markup::ToBs","Rails/classes/RDoc/Markup/ToBs.html#method-i-init_tags","()","<p>Sets a flag that is picked up by #annotate to do the right thing in\n#convert_string\n",null,1],["init_tags","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-init_tags","()","<p>Maps attributes to HTML tags\n",null,1],["init_tags","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-init_tags","()","<p>Maps attributes to HTML sequences\n",null,1],["init_with","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-init_with","(coder)","<p>Initialize an empty model object from <code>coder</code>.\n<code>coder</code> must contain the attributes necessary for initializing …\n",null,0],["initgroups","Process","Rails/classes/Process.html#method-c-initgroups","(p1, p2)","<p>Initializes the supplemental group access list by reading the system group\ndatabase and using all groups …\n",null,1],["initialize","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-initialize","()","",null,1],["initialize!","Rails","Ruby/classes/Rails.html#method-c-initialize-21","()","",null,0],["initialize_copy","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","Array","Rails/classes/Array.html#method-i-initialize_copy","(p1)","<p>Replaces the contents of <code>self</code> with the contents of\n<em>other_ary</em>, truncating or expanding if necessary.\n\n<pre>a ...</pre>\n",null,1],["initialize_copy","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-initialize_copy","(other_spec)","<p>Duplicates array_attributes from <code>other_spec</code> so state isn’t\nshared.\n",null,1],["initialize_copy","Hash","Rails/classes/Hash.html#method-i-initialize_copy","(p1)","<p>Replaces the contents of <em>hsh</em> with the contents of\n<em>other_hash</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">replace</span>({ <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["initialize_copy","OpenStruct","Rails/classes/OpenStruct.html#method-i-initialize_copy","(orig)","<p>Duplicate an OpenStruct object members.\n",null,1],["initialize_copy","Set","Rails/classes/Set.html#method-i-initialize_copy","(orig)","<p>Copy internal hash.\n",null,1],["initialize_copy","String","Rails/classes/String.html#method-i-initialize_copy","(p1)","<p>Replaces the contents and taintedness of <em>str</em> with the\ncorresponding values in <em>other_str</em>.\n\n<pre>s = &quot;hello&quot;  ...</pre>\n",null,1],["initialize_copy","Zlib::Deflate","Rails/classes/Zlib/Deflate.html#method-i-initialize_copy","(p1)","<p>Duplicates the deflate stream.\n",null,1],["initialize_dup","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-initialize_dup","(other)","",null,0],["initialize_dup","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-initialize_dup","(other)","<p>Duped objects have no id assigned and are treated as new records. Note that\nthis is a “shallow” …\n",null,0],["initialize_dup","ActiveRecord::Timestamp","Ruby/classes/ActiveRecord/Timestamp.html#method-i-initialize_dup","(other)","",null,0],["initialize_generators","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-initialize_generators","()","",null,0],["initialize_http_header","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-initialize_http_header","(initheader)","",null,1],["initialize_i18n","I18n::Railtie","Ruby/classes/I18n/Railtie.html#method-c-initialize_i18n","(app)","<p>Setup i18n configuration\n",null,0],["initialize_input","RubyLex","Rails/classes/RubyLex.html#method-i-initialize_input","()","",null,1],["initialize_methods_etc","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-initialize_methods_etc","()","<p>Sets the defaults for methods and so-forth\n",null,1],["initialize_schema_migrations_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-initialize_schema_migrations_table","()","<p>Should not be called normally, but this operation is non-destructive. The\nmigrations module handles this …\n",null,0],["initialize_sid","ActionDispatch::Session::Compatibility","Ruby/classes/ActionDispatch/Session/Compatibility.html#method-i-initialize_sid","()","",null,0],["initialize_template_class","ActionController::Compatibility","Ruby/classes/ActionController/Compatibility.html#method-i-initialize_template_class","(*)","<p>For old tests\n",null,0],["initialize_tracer","IRB","Rails/classes/IRB.html#method-c-initialize_tracer","()","<p>initialize tracing function\n",null,1],["initialized=","Rails","Ruby/classes/Rails.html#method-c-initialized-3D","(initialized)","",null,0],["initialized?","Rails","Ruby/classes/Rails.html#method-c-initialized-3F","()","",null,0],["initializer","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-initializer","(filename, data=nil, &block)","<p>Create a new initializer with the provided code (either in a block or a\nstring).\n<p>Examples\n\n<pre>initializer(&quot;globals.rb&quot;) ...</pre>\n",null,0],["initializer","Rails::Initializable::ClassMethods","Ruby/classes/Rails/Initializable/ClassMethods.html#method-i-initializer","(name, opts = {}, &blk)","",null,0],["initializers","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-initializers","()","",null,0],["initializers","Rails::Initializable","Ruby/classes/Rails/Initializable.html#method-i-initializers","()","",null,0],["initializers","Rails::Initializable::ClassMethods","Ruby/classes/Rails/Initializable/ClassMethods.html#method-i-initializers","()","",null,0],["initializers_chain","Rails::Initializable::ClassMethods","Ruby/classes/Rails/Initializable/ClassMethods.html#method-i-initializers_chain","()","",null,0],["initializers_for","Rails::Initializable::ClassMethods","Ruby/classes/Rails/Initializable/ClassMethods.html#method-i-initializers_for","(binding)","",null,0],["inject","Enumerable","Rails/classes/Enumerable.html#method-i-inject","(p1 = v1, p2 = v2)","<p>Combines all elements of <em>enum</em> by applying a binary operation,\nspecified by a block or a symbol that names …\n",null,1],["inject","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-inject","( xpath=nil, initial=nil, &block )","",null,1],["inject_index_options","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-i-inject_index_options","()","",null,0],["inject_options","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-i-inject_options","()","",null,0],["inline_html?","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_html-3F","()","",null,1],["inline_html?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_html-3F","()","",null,1],["inline_other?","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_other-3F","()","",null,1],["inline_other?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_other-3F","()","",null,1],["inline_other_base64?","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_other_base64-3F","()","",null,1],["inline_other_base64?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_other_base64-3F","()","",null,1],["inline_other_text?","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_other_text-3F","()","",null,1],["inline_other_text?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_other_text-3F","()","",null,1],["inline_other_xml?","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_other_xml-3F","()","",null,1],["inline_other_xml?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_other_xml-3F","()","",null,1],["inline_text?","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_text-3F","()","",null,1],["inline_text?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_text-3F","()","",null,1],["inline_xhtml?","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_xhtml-3F","()","",null,1],["inline_xhtml?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_xhtml-3F","()","",null,1],["inner_product","Vector","Rails/classes/Vector.html#method-i-inner_product","(v)","<p>Returns the inner product of this vector with the other.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Vector</span>[<span class=\"ruby-value\">4</span>,<span class=\"ruby-value\">7</span>].<span class=\"ruby-identifier\">inner_product</span> <span class=\"ruby-constant\">Vector</span>[<span class=\"ruby-value\">10</span>,<span class=\"ruby-value\">1</span>]  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">47</span>\n</pre>\n",null,1],["ino","File::Stat","Rails/classes/File/Stat.html#method-i-ino","()","<p>Returns the inode number for <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">ino</span>   <span class=\"ruby-comment\">#=&gt; 1083669</span>\n</pre>\n",null,1],["inplace_mode","ARGF","Rails/classes/ARGF.html#method-i-inplace_mode","()","<p>Returns the file extension appended to the names of modified files under\ninplace-edit mode. This value …\n",null,1],["inplace_mode=","ARGF","Rails/classes/ARGF.html#method-i-inplace_mode-3D","(p1)","\n<pre>Sets the filename extension for inplace editing mode to the given String.\nEach file being edited has ...</pre>\n",null,1],["input","Gem::MockGemUi","Rails/classes/Gem/MockGemUi.html#method-i-input","()","",null,1],["input=","Readline","Rails/classes/Readline.html#method-c-input-3D","(p1)","<p>Specifies a File object <code>input</code> that is input stream for\nReadline.readline method.\n<p>Raises SecurityError …\n",null,1],["input=","Shell::AppendFile","Rails/classes/Shell/AppendFile.html#method-i-input-3D","(filter)","",null,1],["input=","Shell::AppendIO","Rails/classes/Shell/AppendIO.html#method-i-input-3D","(filter)","",null,1],["input=","Shell::Filter","Rails/classes/Shell/Filter.html#method-i-input-3D","(filter)","",null,1],["input=","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-input-3D","(inp)","",null,1],["input?","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-i-input-3F","()","<p>Returns true if the parameter is input.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', ...</pre>\n",null,1],["inquiry","String","Ruby/classes/String.html#method-i-inquiry","()","<p>Wraps the current string in the <code>ActiveSupport::StringInquirer</code>\nclass, which gives you a prettier way to …\n",null,0],["insch","Curses","Rails/classes/Curses.html#method-c-insch","(p1)","<p>Insert a character <code>ch</code>, before the cursor.\n",null,1],["insch","Curses::Window","Rails/classes/Curses/Window.html#method-i-insch","(p1)","<p>Insert a character <code>ch</code>, before the cursor, in the current\nwindow\n",null,1],["insensitive_attributes","ActiveModel::MassAssignmentSecurity::StrictSanitizer","Ruby/classes/ActiveModel/MassAssignmentSecurity/StrictSanitizer.html#method-i-insensitive_attributes","()","",null,0],["insert","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-insert","(index, *args, &block)","",null,0],["insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert","(arel, name = nil, pk = nil, id_value = nil, sequence_name = nil, binds = [])","<p>Returns the last auto-generated ID from the affected table.\n<p><code>id_value</code> will be returned unless the value ...\n",null,0],["insert","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-insert","(values)","",null,0],["insert","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-insert","(offset, fragment)","<p>Inserts the passed string at specified codepoint offsets.\n<p>Example:\n\n<pre>'Café'.mb_chars.insert(4, ' périferôl').to_s ...</pre>\n",null,0],["insert","Array","Rails/classes/Array.html#method-i-insert","(*args)","<p>Inserts the given values before the element with the given index (which may\nbe negative).\n\n<pre>a = %w{ a b ...</pre>\n",null,1],["insert","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-insert","(irb)","",null,1],["insert","String","Rails/classes/String.html#method-i-insert","(p1, p2)","<p>Inserts <em>other_str</em> before the character at the given\n<em>index</em>, modifying <em>str</em>. Negative indices count from …\n",null,1],["insert_after","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-insert_after","(index, *args, &block)","",null,0],["insert_after","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-insert_after","( child1, child2 )","<p>Inserts an child after another child @param child1 this is either an xpath\nor an Element.  If an Element …\n",null,1],["insert_before","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-insert_before","(index, *args, &block)","",null,0],["insert_before","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-insert_before","( child1, child2 )","<p>Inserts an child before another child @param child1 this is either an xpath\nor an Element.  If an Element …\n",null,1],["insert_fixture","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert_fixture","(fixture, table_name)","<p>Inserts the given fixture into the table. Overridden in adapters that\nrequire something beyond a simple …\n",null,0],["insert_output","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-insert_output","(p1)","<p>Inserts string into the encoding converter. The string will be converted to\nthe destination encoding …\n",null,1],["insert_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert_sql","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","<p>Returns the last auto-generated ID from the affected table.\n",null,0],["insert_sql","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-insert_sql","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","",null,0],["insert_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-insert_sql","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","<p>Executes an INSERT query and returns the new record’s ID\n",null,0],["insertln","Curses","Rails/classes/Curses.html#method-c-insertln","()","<p>Inserts a line above the cursor, and the bottom line is lost\n",null,1],["insertln","Curses::Window","Rails/classes/Curses/Window.html#method-i-insertln","()","<p>Inserts a line above the cursor, and the bottom line is lost\n",null,1],["inside_template","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-inside_template","()","",null,0],["inside_template?","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-inside_template-3F","()","",null,0],["inspect","ActionDispatch::MiddlewareStack::Middleware","Ruby/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-inspect","()","",null,0],["inspect","ActionView::Template","Ruby/classes/ActionView/Template.html#method-i-inspect","()","",null,0],["inspect","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-inspect","()","<p>Returns the contents of the record as a nicely formatted string.\n",null,0],["inspect","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-inspect","()","<p>Returns a string like ‘Post(id:integer, title:string, body:text)’\n",null,0],["inspect","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-inspect","()","",null,0],["inspect","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-inspect","()","",null,0],["inspect","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-inspect","()","",null,0],["inspect","Date","Ruby/classes/Date.html#method-i-inspect","()","",null,0],["inspect","DateTime","Ruby/classes/DateTime.html#method-i-inspect","()","",null,0],["inspect","Rails::Info","Ruby/classes/Rails/Info.html#method-c-inspect","()","",null,0],["inspect","Addrinfo","Rails/classes/Addrinfo.html#method-i-inspect","()","<p>returns a string which shows addrinfo in human-readable form.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">tcp</span>(<span class=\"ruby-string\">&quot;localhost&quot;</span>, <span class=\"ruby-value\">80</span>).<span class=\"ruby-identifier\">inspect</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["inspect","Array","Rails/classes/Array.html#method-i-inspect","()","<p>Creates a string representation of <code>self</code>.\n",null,1],["inspect","BigDecimal","Rails/classes/BigDecimal.html#method-i-inspect","()","<p>Returns debugging information about the value as a string of\ncomma-separated values in angle brackets …\n",null,1],["inspect","CSV","Rails/classes/CSV.html#method-i-inspect","()","<p>Returns a simplified description of the key CSV attributes in an ASCII\ncompatible String.\n",null,1],["inspect","CSV::Row","Rails/classes/CSV/Row.html#method-i-inspect","()","<p>A summary of fields, by header, in an ASCII compatible String.\n",null,1],["inspect","CSV::Table","Rails/classes/CSV/Table.html#method-i-inspect","()","<p>Shows the mode and size of this table in a US-ASCII String.\n",null,1],["inspect","Complex","Rails/classes/Complex.html#method-i-inspect","()","<p>Returns the value as a string for inspection.\n",null,1],["inspect","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-inspect","()","<p>Returns a string formatted with an easily readable representation of the\ninternal state of the DL::CFunc …\n",null,1],["inspect","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-inspect","()","<p>Returns a string formatted with an easily readable representation of the\ninternal state of the DL::CPtr …\n",null,1],["inspect","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-inspect","()","<p>Returns a string formatted with an easily readable representation of the\ninternal state of the DL::CPtr …\n",null,1],["inspect","Date","Rails/classes/Date.html#method-i-inspect","()","<p>Returns the value as a string for inspection.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">inspect</span>\n          <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Date: ...</span>\n</pre>\n",null,1],["inspect","Digest::HMAC","Rails/classes/Digest/HMAC.html#method-i-inspect","()","<p>Creates a printable version of the hmac object.\n",null,1],["inspect","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-inspect","()","<p>Creates a printable version of the digest object.\n",null,1],["inspect","Dir","Rails/classes/Dir.html#method-i-inspect","()","<p>Return a string describing this Dir object.\n",null,1],["inspect","ENV","Rails/classes/ENV.html#method-c-inspect","()","<p>Returns the contents of the environment as a String.\n",null,1],["inspect","Encoding","Rails/classes/Encoding.html#method-i-inspect","()","<p>Returns a string which represents the encoding for programmers.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">UTF_8</span>.<span class=\"ruby-identifier\">inspect</span>       <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Encoding:UTF-8&gt;&quot; ...</span>\n</pre>\n",null,1],["inspect","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-inspect","()","<p>Returns a printable version of <em>ec</em>\n\n<pre>ec = Encoding::Converter.new(&quot;iso-8859-1&quot;, &quot;utf-8&quot;)\nputs ec.inspect ...</pre>\n",null,1],["inspect","Enumerator","Rails/classes/Enumerator.html#method-i-inspect","()","<p>Creates a printable version of <em>e</em>.\n",null,1],["inspect","Exception","Rails/classes/Exception.html#method-i-inspect","()","<p>Return this exception’s class name an message\n",null,1],["inspect","File::Stat","Rails/classes/File/Stat.html#method-i-inspect","()","<p>Produce a nicely formatted description of <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/etc/passwd&quot;</span>).<span class=\"ruby-identifier\">inspect</span>\n   <span class=\"ruby-comment\">#=&gt; &quot;#&lt;File::Stat ...</span>\n</pre>\n",null,1],["inspect","Gem::Platform","Rails/classes/Gem/Platform.html#method-i-inspect","()","",null,1],["inspect","Hash","Rails/classes/Hash.html#method-i-inspect","()","<p>Return the contents of this hash as a string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;c&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">300</span>, <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;d&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">400</span>, <span class=\"ruby-string\">&quot;c&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">300</span>  } <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["inspect","IO","Rails/classes/IO.html#method-i-inspect","()","<p>Return a string describing this IO object.\n",null,1],["inspect","IPAddr","Rails/classes/IPAddr.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of the ipaddr.\n(“#&lt;IPAddr: family: …\n",null,1],["inspect","IRB::Context","Rails/classes/IRB/Context.html#method-i-inspect","()","",null,1],["inspect","IRB::History","Rails/classes/IRB/History.html#method-i-inspect","()","",null,1],["inspect","IRB::Irb","Rails/classes/IRB/Irb.html#method-i-inspect","()","",null,1],["inspect","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-inspect","()","",null,1],["inspect","IRB::SLex","Rails/classes/IRB/SLex.html#method-i-inspect","()","",null,1],["inspect","Iconv::Failure","Rails/classes/Iconv/Failure.html#method-i-inspect","()","<p>Returns inspected string like as: #&lt;<em>class</em>: <em>success</em>,\n<em>failed</em>&gt;\n",null,1],["inspect","MatchData","Rails/classes/MatchData.html#method-i-inspect","()","<p>Returns a printable version of <em>mtch</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">puts</span> <span class=\"ruby-regexp\">/.$/</span>.<span class=\"ruby-identifier\">match</span>(<span class=\"ruby-string\">&quot;foo&quot;</span>).<span class=\"ruby-identifier\">inspect</span>\n<span class=\"ruby-comment\">#=&gt; #&lt;MatchData &quot;o&quot;&gt;</span>\n\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-regexp\">/(.)(.)(.)/</span>.<span class=\"ruby-identifier\">match</span>(<span class=\"ruby-string\">&quot;foo&quot;</span>).<span class=\"ruby-identifier\">inspect</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["inspect","Matrix","Rails/classes/Matrix.html#method-i-inspect","()","<p>Overrides Object#inspect\n",null,1],["inspect","Method","Rails/classes/Method.html#method-i-inspect","()","<p>Returns the name of the underlying method.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;cat&quot;</span>.<span class=\"ruby-identifier\">method</span>(:<span class=\"ruby-identifier\">count</span>).<span class=\"ruby-identifier\">inspect</span>   <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Method: String#count&gt;&quot;</span>\n</pre>\n",null,1],["inspect","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-inspect","()","",null,1],["inspect","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-inspect","()","",null,1],["inspect","Net::HTTPGenericRequest","Rails/classes/Net/HTTPGenericRequest.html#method-i-inspect","()","",null,1],["inspect","Net::HTTPResponse","Rails/classes/Net/HTTPResponse.html#method-i-inspect","()","",null,1],["inspect","Net::POP3","Rails/classes/Net/POP3.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n",null,1],["inspect","Net::POP3","Rails/classes/Net/POP3.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n",null,1],["inspect","Net::POP3","Rails/classes/Net/POP3.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n",null,1],["inspect","Net::POP3","Rails/classes/Net/POP3.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n",null,1],["inspect","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n",null,1],["inspect","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n",null,1],["inspect","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n",null,1],["inspect","NilClass","Rails/classes/NilClass.html#method-i-inspect","()","<p>Always returns the string “nil”.\n",null,1],["inspect","Object","Rails/classes/Object.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of\n<em>obj</em>. If not overridden and no instance …\n",null,1],["inspect","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-inspect","()","",null,1],["inspect","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-inspect","()","",null,1],["inspect","OpenSSL::HMAC","Rails/classes/OpenSSL/HMAC.html#method-i-inspect","()","",null,1],["inspect","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-inspect","()","",null,1],["inspect","OpenStruct","Rails/classes/OpenStruct.html#method-i-inspect","()","<p>Returns a string containing a detailed summary of the keys and values.\n",null,1],["inspect","OptionParser::ParseError","Rails/classes/OptionParser/ParseError.html#method-i-inspect","()","",null,1],["inspect","Process::Status","Rails/classes/Process/Status.html#method-i-inspect","()","<p>Override the inspection method.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">system</span>(<span class=\"ruby-string\">&quot;false&quot;</span>)\n<span class=\"ruby-identifier\">p</span> <span class=\"ruby-identifier\">$?</span>.<span class=\"ruby-identifier\">inspect</span> <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Process::Status: pid 12861 exit 1&gt;&quot;</span>\n</pre>\n",null,1],["inspect","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-inspect","()","",null,1],["inspect","REXML::Element","Rails/classes/REXML/Element.html#method-i-inspect","()","",null,1],["inspect","REXML::Instruction","Rails/classes/REXML/Instruction.html#method-i-inspect","()","",null,1],["inspect","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-inspect","()","",null,1],["inspect","REXML::Text","Rails/classes/REXML/Text.html#method-i-inspect","()","",null,1],["inspect","REXML::Validation::Choice","Rails/classes/REXML/Validation/Choice.html#method-i-inspect","()","",null,1],["inspect","REXML::Validation::Event","Rails/classes/REXML/Validation/Event.html#method-i-inspect","()","",null,1],["inspect","REXML::Validation::Interleave","Rails/classes/REXML/Validation/Interleave.html#method-i-inspect","()","",null,1],["inspect","REXML::Validation::Ref","Rails/classes/REXML/Validation/Ref.html#method-i-inspect","()","",null,1],["inspect","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-i-inspect","()","",null,1],["inspect","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-i-inspect","()","",null,1],["inspect","Rake::Task","Rails/classes/Rake/Task.html#method-i-inspect","()","",null,1],["inspect","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-i-inspect","()","",null,1],["inspect","Range","Rails/classes/Range.html#method-i-inspect","()","<p>Convert this range object to a printable form (using <code>inspect</code>\nto convert the start and end objects).\n",null,1],["inspect","Rational","Rails/classes/Rational.html#method-i-inspect","()","<p>Returns the value as a string for inspection.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">inspect</span>      <span class=\"ruby-comment\">#=&gt; &quot;(2/1)&quot;</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">-8</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["inspect","Regexp","Rails/classes/Regexp.html#method-i-inspect","()","<p>Produce a nicely formatted string-version of <em>rxp</em>. Perhaps\nsurprisingly, <code>#inspect</code> actually produces the …\n",null,1],["inspect","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-i-inspect","()","",null,1],["inspect","Set","Rails/classes/Set.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of the set.\n(“#&lt;Set: {element1, element2, …\n",null,1],["inspect","Shell","Rails/classes/Shell.html#method-i-inspect","()","",null,1],["inspect","Shell::Filter","Rails/classes/Shell/Filter.html#method-i-inspect","()","",null,1],["inspect","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-inspect","()","<p>returns a string which shows ancillarydata in human-readable form.\n\n<pre>p Socket::AncillaryData.new(:INET6, ...</pre>\n",null,1],["inspect","Socket::Option","Rails/classes/Socket/Option.html#method-i-inspect","()","<p>Returns a string which shows sockopt in human-readable form.\n\n<pre>p Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, ...</pre>\n",null,1],["inspect","String","Rails/classes/String.html#method-i-inspect","()","<p>Returns a printable version of <em>str</em>, surrounded by quote marks,\nwith special characters escaped.\n\n<pre>str = ...</pre>\n",null,1],["inspect","StringScanner","Rails/classes/StringScanner.html#method-i-inspect","()","<p>Returns a string that represents the StringScanner object, showing:\n<p>the current position\n<p>the size of the …\n",null,1],["inspect","Struct","Rails/classes/Struct.html#method-i-inspect","()","<p>Describe the contents of this struct in a string.\n",null,1],["inspect","Symbol","Rails/classes/Symbol.html#method-i-inspect","()","<p>Returns the representation of <em>sym</em> as a symbol literal.\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">fred</span>.<span class=\"ruby-identifier\">inspect</span>   <span class=\"ruby-comment\">#=&gt; &quot;:fred&quot;</span>\n</pre>\n",null,1],["inspect","Syslog","Rails/classes/Syslog.html#method-c-inspect","()","<p>Returns an inspect() string summarizing the object state.\n",null,1],["inspect","Thread","Rails/classes/Thread.html#method-i-inspect","()","<p>Dump the name, id, and status of <em>thr</em> to a string.\n",null,1],["inspect","Time","Rails/classes/Time.html#method-i-inspect","()","<p>Returns a string representing <em>time</em>. Equivalent to calling\n<code>Time#strftime</code> with a format string of “<code>%Y-%m-%d</code> …\n",null,1],["inspect","URI::Generic","Rails/classes/URI/Generic.html#method-i-inspect","()","",null,1],["inspect","URI::Parser","Rails/classes/URI/Parser.html#method-i-inspect","()","",null,1],["inspect","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-inspect","()","<p>Returns the name of the underlying method.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;cat&quot;</span>.<span class=\"ruby-identifier\">method</span>(:<span class=\"ruby-identifier\">count</span>).<span class=\"ruby-identifier\">inspect</span>   <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Method: String#count&gt;&quot;</span>\n</pre>\n",null,1],["inspect","Vector","Rails/classes/Vector.html#method-i-inspect","()","<p>Overrides Object#inspect\n",null,1],["inspect","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-inspect","()","<p>Returns the method name with class name.\n",null,1],["inspect","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-i-inspect","()","<p>Returns the parameter name with class name. If the parameter has default\nvalue, then returns name=value …\n",null,1],["inspect","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-inspect","()","<p>Returns the type name with class name.\n\n<pre>ie = WIN32OLE.new('InternetExplorer.Application')\nie.ole_type.inspect ...</pre>\n",null,1],["inspect","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-inspect","()","<p>Returns the type library name with class name.\n\n<pre>tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object ...</pre>\n",null,1],["inspect","WIN32OLE_VARIABLE","Rails/classes/WIN32OLE_VARIABLE.html#method-i-inspect","()","<p>Returns the OLE variable name and the value with class name.\n",null,1],["inspect","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-inspect","()","",null,1],["inspect","Zlib::GzipFile::Error","Rails/classes/Zlib/GzipFile/Error.html#method-i-inspect","()","<p>Constructs a String of the GzipFile Error\n",null,1],["inspect?","IRB::Context","Rails/classes/IRB/Context.html#method-i-inspect-3F","()","",null,1],["inspect_last_value","IRB::Context","Rails/classes/IRB/Context.html#method-i-inspect_last_value","()","",null,1],["inspect_mode=","IRB::Context","Rails/classes/IRB/Context.html#method-i-inspect_mode-3D","(opt)","",null,1],["inspect_sockaddr","Addrinfo","Rails/classes/Addrinfo.html#method-i-inspect_sockaddr","()","<p>returns a string which shows the sockaddr in <em>addrinfo</em> with\nhuman-readable form.\n\n<pre>Addrinfo.tcp(&quot;localhost&quot;, ...</pre>\n",null,1],["inspect_value","IRB::Inspector","Rails/classes/IRB/Inspector.html#method-i-inspect_value","(v)","",null,1],["install","Plugin","Ruby/classes/Plugin.html#method-i-install","(method=nil, options = {})","",null,0],["install","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-i-install","(name_uri_or_plugin)","",null,0],["install","FileUtils","Rails/classes/FileUtils.html#method-c-install","(src, dest, options = {})","<p>Options: mode preserve noop verbose\n<p>If <code>src</code> is not same as <code>dest</code>, copies it and changes\nthe permission mode …\n",null,1],["install","Gem::DependencyInstaller","Rails/classes/Gem/DependencyInstaller.html#method-i-install","(dep_or_name, version = Gem::Requirement.default)","<p>Installs the gem <code>dep_or_name</code> and all its dependencies. \nReturns an Array of installed gem specifications. …\n",null,1],["install","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-install","()","<p>Installs the gem and returns a loaded Gem::Specification for the installed\ngem.\n<p>The gem will be installed …\n",null,1],["install","Object","Rails/classes/Object.html#method-i-install","()","<p>Copy SOURCE to DEST.\n\n<pre>ruby -run -e install -- [OPTION] SOURCE DEST\n\n-p          apply access/modification ...</pre>\n",null,1],["install","Sys","Rails/classes/Sys.html#method-i-install","(wildcard, dest_dir, mode)","<p>Install all the files matching <code>wildcard</code> into the\n<code>dest_dir</code> directory.  The permission mode is set to  …\n",null,1],["install_acl","DRb","Rails/classes/DRb.html#method-c-install_acl","(acl)","<p>Set the default acl.\n<p>See DRb::DRbServer.default_acl.\n",null,1],["install_alias_method","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-i-install_alias_method","(to, from, override = NO_OVERRIDE)","<p>override = {NO_OVERRIDE, OVERRIDE_PRIVATE_ONLY, OVERRIDE_ALL}\n",null,1],["install_alias_method","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-i-install_alias_method","(to, from, override = NO_OVERRIDE)","<p>override = {NO_OVERRIDE, OVERRIDE_PRIVATE_ONLY, OVERRIDE_ALL}\n",null,1],["install_builtin_commands","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-install_builtin_commands","()","<p>define default builtin commands\n",null,1],["install_class_name","RSS::BaseListener","Rails/classes/RSS/BaseListener.html#method-c-install_class_name","(uri, tag_name, class_name)","<p>record class_name for the supplied uri and tag_name\n",null,1],["install_date_element","RSS::BaseModel","Rails/classes/RSS/BaseModel.html#method-i-install_date_element","(tag_name, uri, occurs, name=nil, type=nil, disp_name=nil)","",null,1],["install_dublin_core","RSS::Maker::DublinCoreModel","Rails/classes/RSS/Maker/DublinCoreModel.html#method-c-install_dublin_core","(klass)","",null,1],["install_executables","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-i-install_executables","(bin_dir)","",null,1],["install_extend_commands","IRB::ContextExtender","Rails/classes/IRB/ContextExtender.html#method-c-install_extend_commands","()","",null,1],["install_extend_commands","IRB::ContextExtender","Rails/classes/IRB/ContextExtender.html#method-c-install_extend_commands","()","",null,1],["install_extend_commands","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-c-install_extend_commands","()","",null,1],["install_extend_commands","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-c-install_extend_commands","()","",null,1],["install_get_attribute","RSS::Element","Rails/classes/RSS/Element.html#method-c-install_get_attribute","(name, uri, required=true, type=nil, disp_name=nil, element_name=nil)","",null,1],["install_get_text_element","RSS::BaseListener","Rails/classes/RSS/BaseListener.html#method-c-install_get_text_element","(uri, name, accessor_base)","",null,1],["install_have_attribute_element","RSS::BaseModel","Rails/classes/RSS/BaseModel.html#method-i-install_have_attribute_element","(tag_name, uri, occurs, name=nil, type=nil)","",null,1],["install_have_child_element","RSS::BaseModel","Rails/classes/RSS/BaseModel.html#method-i-install_have_child_element","(tag_name, uri, occurs, name=nil, type=nil)","",null,1],["install_have_children_element","RSS::BaseModel","Rails/classes/RSS/BaseModel.html#method-i-install_have_children_element","(tag_name, uri, occurs, name=nil, plural_name=nil)","",null,1],["install_id_conv","DRb","Rails/classes/DRb.html#method-c-install_id_conv","(idconv)","<p>Set the default id conv object.\n<p>See DRbServer#default_id_conv.\n",null,1],["install_image_favicon","RSS::Maker::ImageFaviconModel","Rails/classes/RSS/Maker/ImageFaviconModel.html#method-c-install_image_favicon","(klass)","",null,1],["install_image_item","RSS::Maker::ImageItemModel","Rails/classes/RSS/Maker/ImageItemModel.html#method-c-install_image_item","(klass)","",null,1],["install_indicies","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-install_indicies","()","<p>Install generated indicies into the destination directory.\n",null,1],["install_lib","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-i-install_lib","(lib_dir)","",null,1],["install_list","ACL","Rails/classes/ACL.html#method-i-install_list","(list)","<p>Adds <code>list</code> of ACL entries to this ACL.\n",null,1],["install_model","RSS::Element","Rails/classes/RSS/Element.html#method-c-install_model","(tag, uri, occurs=nil, getter=nil, plural=false)","",null,1],["install_must_call_validator","RSS::Element","Rails/classes/RSS/Element.html#method-c-install_must_call_validator","(prefix, uri)","",null,1],["install_ns","RSS::Element","Rails/classes/RSS/Element.html#method-c-install_ns","(prefix, uri)","",null,1],["install_rdoc","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-i-install_rdoc","()","",null,1],["install_rdoc","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-i-install_rdoc","()","<p>Generate and install RDoc into the documentation directory\n",null,1],["install_ri","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-i-install_ri","()","<p>Generate and install RI into the documentation directory\n",null,1],["install_siginfo_handler","RDoc::Generator::RI","Rails/classes/RDoc/Generator/RI.html#method-i-install_siginfo_handler","()","<p>Installs a siginfo handler that prints the current filename.\n",null,1],["install_siginfo_handler","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-install_siginfo_handler","()","<p>Installs a siginfo handler that prints the current filename.\n",null,1],["install_system_commands","Shell","Rails/classes/Shell.html#method-c-install_system_commands","(pre = \"sys_\")","",null,1],["install_system_commands","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-install_system_commands","(pre = \"sys_\")","<p>CommandProcessor.install_system_commands(pre)\n\n<pre>pre: String - command name prefix</pre>\n<p>defines every command which …\n",null,1],["install_taxo_topic","RSS::Maker::TaxonomyTopicModel","Rails/classes/RSS/Maker/TaxonomyTopicModel.html#method-c-install_taxo_topic","(klass)","",null,1],["install_taxo_topics","RSS::Maker::TaxonomyTopicsModel","Rails/classes/RSS/Maker/TaxonomyTopicsModel.html#method-c-install_taxo_topics","(klass)","",null,1],["install_text_element","RSS::BaseModel","Rails/classes/RSS/BaseModel.html#method-i-install_text_element","(tag_name, uri, occurs, name=nil, type=nil, disp_name=nil)","",null,1],["install_update_defaults_str","Gem::InstallUpdateOptions","Rails/classes/Gem/InstallUpdateOptions.html#method-i-install_update_defaults_str","()","<p>Default options for the gem install command.\n",null,1],["installation_path","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-installation_path","()","<p>The directory that this gem was installed into. TODO: rename - horrible.\nthis is the base_dir for a gem …\n",null,1],["installation_satisfies_dependency?","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-installation_satisfies_dependency-3F","(dependency)","<p>True if the gems in the source_index satisfy <code>dependency</code>.\n",null,1],["installed?","Plugin","Ruby/classes/Plugin.html#method-i-installed-3F","()","",null,0],["installed_spec_directories","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-c-installed_spec_directories","()","<p>Returns a list of directories from Gem.path that contain specifications.\n",null,1],["instance","ActiveSupport::Inflector::Inflections","Ruby/classes/ActiveSupport/Inflector/Inflections.html#method-c-instance","()","",null,0],["instance","Rails::Railtie::Configurable::ClassMethods","Ruby/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-instance","()","",null,0],["instance","CSV","Rails/classes/CSV.html#method-c-instance","(data = $stdout, options = Hash.new)","<p>This method will return a CSV instance, just like CSV::new(), but the\ninstance will be cached and returned …\n",null,1],["instance","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-c-instance","()","<p>Return the authoritative instance of the command manager.\n",null,1],["instance","Prime","Rails/classes/Prime.html#method-c-instance","()","<p>Returns the default instance of Prime.\n",null,1],["instance","Syslog","Rails/classes/Syslog.html#method-c-instance","()","<p>Returns self, for backward compatibility.\n",null,1],["instance_attributes","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-instance_attributes","()","<p>Instance attributes\n",null,1],["instance_delegate","Forwardable","Rails/classes/Forwardable.html#method-i-instance_delegate","(hash)","<p>Takes a hash as its argument.  The key is a symbol or an array of symbols. \nThese symbols correspond …\n",null,1],["instance_eval","BasicObject","Rails/classes/BasicObject.html#method-i-instance_eval","(*args)","<p>Evaluates a string containing Ruby source code, or the given block, within\nthe context of the receiver …\n",null,1],["instance_exec","BasicObject","Rails/classes/BasicObject.html#method-i-instance_exec","(*args)","<p>Executes the given block within the context of the receiver (<em>obj</em>).\nIn order to set the context, the variable …\n",null,1],["instance_method","Module","Rails/classes/Module.html#method-i-instance_method","(p1)","<p>Returns an <code>UnboundMethod</code> representing the given instance\nmethod in <em>mod</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Interpreter</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">do_a</span>() <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["instance_method_already_implemented?","ActiveModel::AttributeMethods::ClassMethods","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-instance_method_already_implemented-3F","(method_name)","",null,0],["instance_method_already_implemented?","ActiveRecord::AttributeMethods::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-instance_method_already_implemented-3F","(method_name)","",null,0],["instance_method_list","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-instance_method_list","()","<p>Instance methods\n",null,1],["instance_method_names","Module","Ruby/classes/Module.html#method-i-instance_method_names","(*args)","",null,0],["instance_methods","Module","Rails/classes/Module.html#method-i-instance_methods","(*args)","<p>Returns an array containing the names of the public and protected instance\nmethods in the receiver.  …\n",null,1],["instance_methods","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-instance_methods","()","<p>Instance methods cache accessor.  Maps a class to an Array of its instance\nmethods (not full name).\n",null,1],["instance_of?","Object","Rails/classes/Object.html#method-i-instance_of-3F","(p1)","<p>Returns <code>true</code> if <em>obj</em> is an instance of the given\nclass. See also <code>Object#kind_of?</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">A</span>;     <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["instance_variable_defined?","Object","Rails/classes/Object.html#method-i-instance_variable_defined-3F","(p1)","<p>Returns <code>true</code> if the given instance variable is defined in\n<em>obj</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Fred</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">initialize</span>(<span class=\"ruby-identifier\">p1</span>, <span class=\"ruby-identifier\">p2</span>)\n   <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["instance_variable_get","Object","Rails/classes/Object.html#method-i-instance_variable_get","(p1)","<p>Returns the value of the given instance variable, or nil if the instance\nvariable is not set. The <code>@</code> part …\n",null,1],["instance_variable_names","Object","Ruby/classes/Object.html#method-i-instance_variable_names","()","",null,0],["instance_variable_set","Object","Rails/classes/Object.html#method-i-instance_variable_set","(p1, p2)","<p>Sets the instance variable names by <em>symbol</em> to <em>object</em>,\nthereby frustrating the efforts of the class’s …\n",null,1],["instance_variables","Object","Rails/classes/Object.html#method-i-instance_variables","()","<p>Returns an array of instance variable names for the receiver. Note that\nsimply defining an accessor does …\n",null,1],["instantiate","ActiveRecord::Inheritance::ClassMethods","Ruby/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-instantiate","(record)","<p>Finder methods must instantiate through this method to work with the\nsingle-table inheritance model that …\n",null,0],["instantiate_all_loaded_fixtures","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-c-instantiate_all_loaded_fixtures","(object, load_instances = true)","",null,0],["instantiate_fixtures","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-c-instantiate_fixtures","(object, fixture_set, load_instances = true, rails_3_2_compatibility_argument = true)","<p>The use with parameters  <code>(object, fixture_set_name, fixture_set,\nload_instances = true)</code>  is deprecated, …\n",null,0],["instantiate_observers","ActiveModel::Observing::ClassMethods","Ruby/classes/ActiveModel/Observing/ClassMethods.html#method-i-instantiate_observers","()","<p>Instantiate the global observers.\n",null,0],["instantiator?","ActiveRecord::DynamicFinderMatch","Ruby/classes/ActiveRecord/DynamicFinderMatch.html#method-i-instantiator-3F","()","",null,0],["instruction","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-instruction","(name, instruction)","<p>Called when an instruction is encountered.  EG: &lt;?xsl sheet=‘foo’?&gt;\n@p name the instruction name; …\n",null,1],["instruction","RSS::ListenerMixin","Rails/classes/RSS/ListenerMixin.html#method-i-instruction","(name, content)","",null,1],["instruction?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-instruction-3F","()","<p>Content: [ String text ]\n",null,1],["instructions","REXML::Element","Rails/classes/REXML/Element.html#method-i-instructions","()","<p>Get an array of all Instruction children. IMMUTABLE\n",null,1],["instrument","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-c-instrument","()","",null,0],["instrument","ActiveSupport::Notifications","Ruby/classes/ActiveSupport/Notifications.html#method-c-instrument","(name, payload = {})","",null,0],["instrument","ActiveSupport::Notifications::Instrumenter","Ruby/classes/ActiveSupport/Notifications/Instrumenter.html#method-i-instrument","(name, payload={})","<p>Instrument the given block by measuring the time taken to execute it and\npublish it. Notice that events …\n",null,0],["instrument=","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-c-instrument-3D","(boolean)","<p>Set to true if cache stores should be instrumented. Default is false.\n",null,0],["instrument_fragment_cache","ActionController::Caching::Fragments","Ruby/classes/ActionController/Caching/Fragments.html#method-i-instrument_fragment_cache","(name, key)","",null,0],["instrumenter","ActiveSupport::Notifications","Ruby/classes/ActiveSupport/Notifications.html#method-c-instrumenter","()","",null,0],["int","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-c-int","(p1, p2, p3, p4)","<p>Creates a new Socket::AncillaryData object which contains a int as data.\n<p>The size and endian is dependent …\n",null,1],["int","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-int","()","<p>Returns the data in <em>ancillarydata</em> as an int.\n<p>The size and endian is dependent on the host.\n\n<pre>ancdata = Socket::AncillaryData.int(:UNIX, ...</pre>\n",null,1],["int","Socket::Option","Rails/classes/Socket/Option.html#method-c-int","(p1, p2, p3, p4)","<p>Creates a new Socket::Option object which contains an int as data.\n<p>The size and endian is dependent on …\n",null,1],["int","Socket::Option","Rails/classes/Socket/Option.html#method-i-int","()","<p>Returns the data in <em>sockopt</em> as an int.\n<p>The size and endian is dependent on the platform.\n\n<pre>sockopt = Socket::Option.int(:INET, ...</pre>\n",null,1],["int","XMLRPC::Convert","Rails/classes/XMLRPC/Convert.html#method-c-int","(str)","",null,1],["int_from_prime_division","Prime","Rails/classes/Prime.html#method-i-int_from_prime_division","(pd)","<p>Re-composes a prime factorization and returns the product.\n<p>Parameters\n<p><code>pd</code> &mdash; Array of pairs of integers. The …\n",null,1],["integer?","Integer","Rails/classes/Integer.html#method-i-integer-3F","()","<p>Always returns <code>true</code>.\n",null,1],["integer?","Numeric","Rails/classes/Numeric.html#method-i-integer-3F","()","<p>Returns <code>true</code> if <em>num</em> is an <code>Integer</code>\n(including <code>Fixnum</code> and <code>Bignum</code>).\n",null,1],["interactive","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-interactive","()","<p>Runs ri interactively using Readline if it is available.\n",null,1],["interface","XMLRPC","Rails/classes/XMLRPC.html#method-c-interface","(prefix, &p)","<p>short-form to create a Service::Interface\n",null,1],["intern","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-intern","(task_class, task_name)","<p>Lookup a task.  Return an existing task if found, otherwise create a task\nof the current type.\n",null,1],["intern","String","Rails/classes/String.html#method-i-intern","()","<p>Returns the <code>Symbol</code> corresponding to <em>str</em>, creating the\nsymbol if it did not previously exist. See <code>Symbol#id2name</code> …\n",null,1],["intern","Symbol","Rails/classes/Symbol.html#method-i-intern","()","<p>In general, <code>to_sym</code> returns the <code>Symbol</code>\ncorresponding to an object. As <em>sym</em> is already a symbol,\n<code>self</code> is …\n",null,1],["internal_encoding","ARGF","Rails/classes/ARGF.html#method-i-internal_encoding","()","<p>Returns the internal encoding for strings read from <code>ARGF</code> as an\n<code>Encoding</code> object.\n<p>If <code>ARGF.set_encoding</code> has …\n",null,1],["internal_encoding","IO","Rails/classes/IO.html#method-i-internal_encoding","()","<p>Returns the Encoding of the internal string if conversion is specified. \nOtherwise returns nil.\n",null,1],["internal_encoding","StringIO","Rails/classes/StringIO.html#method-i-internal_encoding","()","<p>Returns the Encoding of the internal string if conversion is specified. \nOtherwise returns nil.\n",null,1],["internal_methods","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-c-internal_methods","()","<p>A list of all internal methods for a controller. This finds the first\nabstract superclass of a controller, …\n",null,0],["interrupt","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-interrupt","()","",null,1],["interrupt","WEBrick::Utils::TimeoutHandler","Rails/classes/WEBrick/Utils/TimeoutHandler.html#method-i-interrupt","(thread, id, exception)","<p>Interrupts the timeout handler <code>id</code> and raises\n<code>exception</code>\n",null,1],["intersection","Set","Rails/classes/Set.html#method-i-intersection","(enum)","",null,1],["inv","Matrix","Rails/classes/Matrix.html#method-i-inv","()","",null,1],["invalid?","ActiveModel::Validations","Ruby/classes/ActiveModel/Validations.html#method-i-invalid-3F","(context = nil)","<p>Performs the opposite of <code>valid?</code>. Returns true if errors were\nadded, false otherwise.\n",null,0],["inverse","ActiveRecord::Migration::CommandRecorder","Ruby/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-inverse","()","<p>Returns a list that represents commands that are the inverse of the\ncommands stored in <code>commands</code>. For …\n",null,0],["inverse","Matrix","Rails/classes/Matrix.html#method-i-inverse","()","<p>Returns the inverse of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">-1</span>, <span class=\"ruby-value\">-1</span>], [<span class=\"ruby-value\">0</span>, <span class=\"ruby-value\">-1</span>]].<span class=\"ruby-identifier\">inverse</span>\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">-1</span>  <span class=\"ruby-value\">1</span>\n      <span class=\"ruby-value\">0</span> <span class=\"ruby-operator\">-</span><span class=\"ruby-value\">1</span>\n</pre>\n",null,1],["invert","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-invert","()","",null,0],["invert","DBM","Rails/classes/DBM.html#method-i-invert","()","<p>Returns a Hash (not a DBM database) created by using each value in the\ndatabase as a key, with the corresponding …\n",null,1],["invert","ENV","Rails/classes/ENV.html#method-c-invert","()","<p>Returns a new hash created by using environment variable names as values\nand values as names.\n",null,1],["invert","GDBM","Rails/classes/GDBM.html#method-i-invert","()","<p>Returns a hash created by using <em>gdbm</em>’s values as keys, and the\nkeys as values.\n",null,1],["invert","Hash","Rails/classes/Hash.html#method-i-invert","()","<p>Returns a new hash created by using <em>hsh</em>’s values as keys, and the\nkeys as values.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;n&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;m&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["invert","SDBM","Rails/classes/SDBM.html#method-i-invert","()","",null,1],["invert","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-invert","()","<p>Returns a Hash (not a DBM database) created by using each value in the\ndatabase as a key, with the corresponding …\n",null,1],["invert!","OpenSSL::PKey::EC::Point","Rails/classes/OpenSSL/PKey/EC/Point.html#method-i-invert-21","()","",null,1],["investigation","Rake::Task","Rails/classes/Rake/Task.html#method-i-investigation","()","<p>Return a string describing the internal state of a task.  Useful for\ndebugging.\n",null,1],["invkind","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-invkind","()","<p>Returns the method invoke kind.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks') ...</pre>\n",null,1],["invoke","Rails::Generators","Ruby/classes/Rails/Generators.html#method-c-invoke","(namespace, args=ARGV, config={})","<p>Receives a namespace, arguments and the behavior to invoke the generator.\nIt’s used as the default entry …\n",null,0],["invoke","Gem::Command","Rails/classes/Gem/Command.html#method-i-invoke","(*args)","<p>Invoke the command with the given list of arguments.\n",null,1],["invoke","Rake::Task","Rails/classes/Rake/Task.html#method-i-invoke","(*args)","<p>Invoke the task if it is needed.  Prerequisites are invoked first.\n",null,1],["invoke","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-invoke","(*args)","<p>Runs OLE method. The first argument specifies the method name of OLE\nAutomation object. The others specify …\n",null,1],["invoke_kind","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-invoke_kind","()","<p>Returns the method kind string. The string is “UNKNOWN” or “PROPERTY” or\n“PROPERTY” …\n",null,1],["invoke_task","Rake::Application","Rails/classes/Rake/Application.html#method-i-invoke_task","(task_string)","<p>private —————————————————————-\n",null,1],["ioctl","IO","Rails/classes/IO.html#method-i-ioctl","(p1, p2 = v2)","<p>Provides a mechanism for issuing low-level commands to control or query I/O\ndevices. Arguments and results …\n",null,1],["ioflush","IO","Rails/classes/IO.html#method-i-ioflush","()","<p>Flushes input and output buffers in kernel.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["ip","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-ip","()","",null,0],["ip","Addrinfo","Rails/classes/Addrinfo.html#method-c-ip","(p1)","<p>returns an addrinfo object for IP address.\n<p>The port, socktype, protocol of the result is filled by zero. …\n",null,1],["ip6_arpa","IPAddr","Rails/classes/IPAddr.html#method-i-ip6_arpa","()","<p>Returns a string for DNS reverse lookup compatible with RFC3172.\n",null,1],["ip6_int","IPAddr","Rails/classes/IPAddr.html#method-i-ip6_int","()","<p>Returns a string for DNS reverse lookup compatible with RFC1886.\n",null,1],["ip?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ip-3F","()","<p>returns true if addrinfo is internet (IPv4/IPv6) address. returns false\notherwise.\n\n<pre>Addrinfo.tcp(&quot;127.0.0.1&quot;, ...</pre>\n",null,1],["ip_address","Addrinfo","Rails/classes/Addrinfo.html#method-i-ip_address","()","<p>Returns the IP address as a string.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">tcp</span>(<span class=\"ruby-string\">&quot;127.0.0.1&quot;</span>, <span class=\"ruby-value\">80</span>).<span class=\"ruby-identifier\">ip_address</span>    <span class=\"ruby-comment\">#=&gt; &quot;127.0.0.1&quot;</span>\n<span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">tcp</span>(<span class=\"ruby-string\">&quot;::1&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ip_address_list","Socket","Rails/classes/Socket.html#method-c-ip_address_list","()","<p>Returns local IP addresses as an array.\n<p>The array contains Addrinfo objects.\n\n<pre>pp Socket.ip_address_list ...</pre>\n",null,1],["ip_pktinfo","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-c-ip_pktinfo","(p1, p2, p3 = v3)","<p>Returns new ancillary data for IP_PKTINFO.\n<p>If spec_dst is not given, addr is used.\n<p>IP_PKTINFO is not standard. …\n",null,1],["ip_pktinfo","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-ip_pktinfo","()","<p>Extracts addr, ifindex and spec_dst from IP_PKTINFO ancillary data.\n<p>IP_PKTINFO is not standard.\n<p>Supported …\n",null,1],["ip_port","Addrinfo","Rails/classes/Addrinfo.html#method-i-ip_port","()","<p>Returns the port number as an integer.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">tcp</span>(<span class=\"ruby-string\">&quot;127.0.0.1&quot;</span>, <span class=\"ruby-value\">80</span>).<span class=\"ruby-identifier\">ip_port</span>    <span class=\"ruby-comment\">#=&gt; 80</span>\n<span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">tcp</span>(<span class=\"ruby-string\">&quot;::1&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ip_unpack","Addrinfo","Rails/classes/Addrinfo.html#method-i-ip_unpack","()","<p>Returns the IP address and port number as 2-element array.\n\n<pre>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ip_unpack    ...</pre>\n",null,1],["ips_from","ActionDispatch::RemoteIp::GetIp","Ruby/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-ips_from","(header, allow_proxies = false)","",null,0],["ipv4?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv4-3F","()","<p>returns true if addrinfo is IPv4 address. returns false otherwise.\n\n<pre>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ipv4? ...</pre>\n",null,1],["ipv4?","IPAddr","Rails/classes/IPAddr.html#method-i-ipv4-3F","()","<p>Returns true if the ipaddr is an IPv4 address.\n",null,1],["ipv4_compat","IPAddr","Rails/classes/IPAddr.html#method-i-ipv4_compat","()","<p>Returns a new ipaddr built by converting the native IPv4 address into an\nIPv4-compatible IPv6 address. …\n",null,1],["ipv4_compat?","IPAddr","Rails/classes/IPAddr.html#method-i-ipv4_compat-3F","()","<p>Returns true if the ipaddr is an IPv4-compatible IPv6 address.\n",null,1],["ipv4_loopback?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv4_loopback-3F","()","<p>Returns true for IPv4 loopback address (127.0.0.0/8). It returns false\notherwise.\n",null,1],["ipv4_mapped","IPAddr","Rails/classes/IPAddr.html#method-i-ipv4_mapped","()","<p>Returns a new ipaddr built by converting the native IPv4 address into an\nIPv4-mapped IPv6 address.\n",null,1],["ipv4_mapped?","IPAddr","Rails/classes/IPAddr.html#method-i-ipv4_mapped-3F","()","<p>Returns true if the ipaddr is an IPv4-mapped IPv6 address.\n",null,1],["ipv4_multicast?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv4_multicast-3F","()","<p>Returns true for IPv4 multicast address (224.0.0.0/4). It returns false\notherwise.\n",null,1],["ipv4_private?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv4_private-3F","()","<p>Returns true for IPv4 private address (10.0.0.0/8, 172.16.0.0/12,\n192.168.0.0/16). It returns false otherwise. …\n",null,1],["ipv6?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6-3F","()","<p>returns true if addrinfo is IPv6 address. returns false otherwise.\n\n<pre>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ipv6? ...</pre>\n",null,1],["ipv6?","IPAddr","Rails/classes/IPAddr.html#method-i-ipv6-3F","()","<p>Returns true if the ipaddr is an IPv6 address.\n",null,1],["ipv6_linklocal?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_linklocal-3F","()","<p>Returns true for IPv6 link local address (ff80::/10). It returns false\notherwise.\n",null,1],["ipv6_loopback?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_loopback-3F","()","<p>Returns true for IPv6 loopback address (::1). It returns false otherwise.\n",null,1],["ipv6_mc_global?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_mc_global-3F","()","<p>Returns true for IPv6 multicast global scope address. It returns false\notherwise.\n",null,1],["ipv6_mc_linklocal?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_mc_linklocal-3F","()","<p>Returns true for IPv6 multicast link-local scope address. It returns false\notherwise.\n",null,1],["ipv6_mc_nodelocal?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_mc_nodelocal-3F","()","<p>Returns true for IPv6 multicast node-local scope address. It returns false\notherwise.\n",null,1],["ipv6_mc_orglocal?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_mc_orglocal-3F","()","<p>Returns true for IPv6 multicast organization-local scope address. It\nreturns false otherwise.\n",null,1],["ipv6_mc_sitelocal?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_mc_sitelocal-3F","()","<p>Returns true for IPv6 multicast site-local scope address. It returns false\notherwise.\n",null,1],["ipv6_multicast?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_multicast-3F","()","<p>Returns true for IPv6 multicast address (ff00::/8). It returns false\notherwise.\n",null,1],["ipv6_pktinfo","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-ipv6_pktinfo","()","<p>Extracts addr and ifindex from IPV6_PKTINFO ancillary data.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre>addr = ...</pre>\n",null,1],["ipv6_pktinfo","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-c-ipv6_pktinfo","(p1, p2)","<p>Returns new ancillary data for IPV6_PKTINFO.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre>addr = Addrinfo.ip(&quot;::1&quot;) ...</pre>\n",null,1],["ipv6_pktinfo_addr","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-ipv6_pktinfo_addr","()","<p>Extracts addr from IPV6_PKTINFO ancillary data.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre>addr = Addrinfo.ip(&quot;::1&quot;) ...</pre>\n",null,1],["ipv6_pktinfo_ifindex","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-ipv6_pktinfo_ifindex","()","<p>Extracts ifindex from IPV6_PKTINFO ancillary data.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre>addr = Addrinfo.ip(&quot;::1&quot;) ...</pre>\n",null,1],["ipv6_sitelocal?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_sitelocal-3F","()","<p>Returns true for IPv6 site local address (ffc0::/10). It returns false\notherwise.\n",null,1],["ipv6_to_ipv4","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_to_ipv4","()","<p>Returns IPv4 address of IPv4 mapped/compatible IPv6 address. It returns nil\nif <code>self</code> is not IPv4 mapped/compatible …\n",null,1],["ipv6_unspecified?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_unspecified-3F","()","<p>Returns true for IPv6 unspecified address (::). It returns false otherwise.\n",null,1],["ipv6_v4compat?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_v4compat-3F","()","<p>Returns true for IPv4-compatible IPv6 address (::/80). It returns false\notherwise.\n",null,1],["ipv6_v4mapped?","Addrinfo","Rails/classes/Addrinfo.html#method-i-ipv6_v4mapped-3F","()","<p>Returns true for IPv4-mapped IPv6 address (::ffff:0:0/80). It returns false\notherwise.\n",null,1],["ipv6only!","Socket","Rails/classes/Socket.html#method-i-ipv6only-21","()","<p>enable the socket option IPV6_V6ONLY if IPV6_V6ONLY is available.\n",null,1],["irb","IRB","Rails/classes/IRB.html#method-c-irb","(file = nil, *main)","<p>invoke multi-irb\n",null,1],["irb","IRB::ExtendCommand::Nop","Rails/classes/IRB/ExtendCommand/Nop.html#method-i-irb","()","",null,1],["irb","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-irb","(key)","",null,1],["irb_abort","IRB","Rails/classes/IRB.html#method-c-irb_abort","(irb, exception = Abort)","",null,1],["irb_at_exit","IRB","Rails/classes/IRB.html#method-c-irb_at_exit","()","",null,1],["irb_context","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-i-irb_context","()","",null,1],["irb_context","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-i-irb_context","()","",null,1],["irb_exit","IRB","Rails/classes/IRB.html#method-c-irb_exit","(irb, ret)","",null,1],["irb_exit","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-i-irb_exit","(ret = 0)","",null,1],["irb_exit","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-i-irb_exit","(ret = 0)","",null,1],["irb_level","IRB::Context","Rails/classes/IRB/Context.html#method-i-irb_level","()","",null,1],["irb_load","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-i-irb_load","(*opts, &b)","",null,1],["irb_load","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-i-irb_load","(*opts, &b)","",null,1],["irb_load","IRB::IrbLoader","Rails/classes/IRB/IrbLoader.html#method-i-irb_load","(fn, priv = nil)","",null,1],["irb_original_method_name","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-c-irb_original_method_name","(method_name)","",null,1],["irb_original_method_name","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-c-irb_original_method_name","(method_name)","",null,1],["irb_require","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-i-irb_require","(*opts, &b)","",null,1],["irb_require","IRB::ExtendCommandBundle","Rails/classes/IRB/ExtendCommandBundle.html#method-i-irb_require","(*opts, &b)","",null,1],["irregular","ActiveSupport::Inflector::Inflections","Ruby/classes/ActiveSupport/Inflector/Inflections.html#method-i-irregular","(singular, plural)","<p>Specifies a new irregular that applies to both pluralization and\nsingularization at the same time. This …\n",null,0],["isEqual","Jacobian","Rails/classes/Jacobian.html#method-i-isEqual","(a,b,zero=0.0,e=1.0e-8)","<p>Determines the equality of two numbers by comparing to zero, or using the\nepsilon value\n",null,1],["is_a?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-is_a-3F","(klass)","<p>Say we’re a Time to thwart type checking.\n",null,0],["is_a?","Object","Rails/classes/Object.html#method-i-is_a-3F","(p1)","<p>Returns <code>true</code> if <em>class</em> is the class of <em>obj</em>,\nor if <em>class</em> is one of the superclasses of <em>obj</em> or modules\nincluded …\n",null,1],["is_a?","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-is_a-3F","(klass)","<p>Lie about our class.\n",null,1],["is_missing?","LoadError","Ruby/classes/LoadError.html#method-i-is_missing-3F","(location)","",null,0],["is_missing?","LoadError","Ruby/classes/LoadError.html#method-i-is_missing-3F","(location)","",null,0],["is_utf8?","String","Ruby/classes/String.html#method-i-is_utf8-3F","()","",null,0],["is_version_1_2?","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-is_version_1_2-3F","()","",null,1],["is_version_1_2?","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-is_version_1_2-3F","()","",null,1],["isatty","IO","Rails/classes/IO.html#method-i-isatty","()","<p>Returns <code>true</code> if <em>ios</em> is associated with a terminal\ndevice (tty), <code>false</code> otherwise.\n\n<pre>File.new(&quot;testfile&quot;).isatty ...</pre>\n",null,1],["isatty","StringIO","Rails/classes/StringIO.html#method-i-isatty","()","",null,1],["isdst","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-isdst","()","",null,0],["isdst","Time","Rails/classes/Time.html#method-i-isdst","()","<p>Returns <code>true</code> if <em>time</em> occurs during Daylight Saving\nTime in its time zone.\n\n<pre># CST6CDT:\n  Time.local(2000, ...</pre>\n",null,1],["iseuc","Kconv","Rails/classes/Kconv.html#method-c-iseuc","(str)","<p>Returns whether input encoding is EUC-JP or not.\n<p><strong>Note</strong> don't expect this return value is MatchData.\n",null,1],["iseuc","String","Rails/classes/String.html#method-i-iseuc","()","<p>Returns whether <code>self</code>‘s encoding is EUC-JP or not.\n",null,1],["isjis","Kconv","Rails/classes/Kconv.html#method-c-isjis","(str)","<p>Returns whether input encoding is ISO-2022-JP or not.\n",null,1],["isjis","String","Rails/classes/String.html#method-i-isjis","()","<p>Returns whether <code>self</code>‘s encoding is ISO-2022-JP or not.\n",null,1],["iso8601","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-iso8601","(fraction_digits = 0)","",null,0],["iso8601","Date","Ruby/classes/Date.html#method-i-iso8601","()","",null,0],["iso8601","Date","Rails/classes/Date.html#method-c-iso8601","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical ISO 8601 formats.\n<p>For example: …\n",null,1],["iso8601","Date","Rails/classes/Date.html#method-i-iso8601","()","<p>This method is equivalent to strftime(‘%F’).\n",null,1],["iso8601","DateTime","Rails/classes/DateTime.html#method-i-iso8601","(p1 = v1)","<p>This method is equivalent to strftime(‘%FT%T’).  The optional argument n is\nlength of fractional seconds. …\n",null,1],["iso8601","DateTime","Rails/classes/DateTime.html#method-c-iso8601","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical ISO 8601 formats.\n<p>For example: …\n",null,1],["iso8601","Time","Rails/classes/Time.html#method-c-iso8601","(date)","",null,1],["iso8601","Time","Rails/classes/Time.html#method-i-iso8601","(fraction_digits=0)","",null,1],["isolate_namespace","Rails::Engine","Ruby/classes/Rails/Engine.html#method-c-isolate_namespace","(mod)","",null,0],["isolated?","Build","Ruby/classes/Build.html#method-i-isolated-3F","()","",null,0],["issetugid","Process::Sys","Rails/classes/Process/Sys.html#method-c-issetugid","()","<p>Returns <code>true</code> if the process was created as a result of an\nexecve(2) system call which had either of the …\n",null,1],["issjis","Kconv","Rails/classes/Kconv.html#method-c-issjis","(str)","<p>Returns whether input encoding is Shift_JIS or not.\n",null,1],["issjis","String","Rails/classes/String.html#method-i-issjis","()","<p>Returns whether <code>self</code>‘s encoding is Shift_JIS or not.\n",null,1],["issuer","OpenSSL::PKCS7::RecipientInfo","Rails/classes/OpenSSL/PKCS7/RecipientInfo.html#method-i-issuer","()","",null,1],["issuer","OpenSSL::PKCS7::SignerInfo","Rails/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-issuer","()","",null,1],["issuer","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-issuer","()","",null,1],["issuer","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-issuer","()","",null,1],["issuer=","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-issuer-3D","(p1)","",null,1],["issuer=","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-issuer-3D","(p1)","",null,1],["issuer_certificate=","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-i-issuer_certificate-3D","(p1)","",null,1],["isutf8","Kconv","Rails/classes/Kconv.html#method-c-isutf8","(str)","<p>Returns whether input encoding is UTF-8 or not.\n",null,1],["isutf8","String","Rails/classes/String.html#method-i-isutf8","()","<p>Returns whether <code>self</code>‘s encoding is UTF-8 or not.\n",null,1],["italy","Date","Rails/classes/Date.html#method-i-italy","()","<p>This method is equivalent to new_start(Date::ITALY).\n",null,1],["items","RSS::Atom::Entry","Rails/classes/RSS/Atom/Entry.html#method-i-items","()","",null,1],["items","RSS::Rss","Rails/classes/RSS/Rss.html#method-i-items","()","",null,1],["iterator?","Kernel","Rails/classes/Kernel.html#method-i-iterator-3F","()","<p>Returns <code>true</code> if <code>yield</code> would execute a block in\nthe current context. The <code>iterator?</code> form is mildly deprecated.\n…\n",null,1],["iv=","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-iv-3D","(p1)","<p>Sets the cipher IV. Please note that since you should never be using ECB\nmode, an IV is always explicitly …\n",null,1],["j","ActionView::Helpers::JavaScriptHelper","Ruby/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-j","(javascript)","",null,0],["j","ERB::Util","Ruby/classes/ERB/Util.html#method-c-j","(s)","",null,0],["jacobian","Jacobian","Rails/classes/Jacobian.html#method-i-jacobian","(f,fx,x)","<p>Computes the Jacobian of f at x. fx is the value of f at x.\n",null,1],["javascript_gemfile_entry","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-javascript_gemfile_entry","()","",null,0],["javascript_include_tag","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html#method-i-javascript_include_tag","(*sources)","<p>Returns an HTML script tag for each of the <code>sources</code> provided.\n<p>Sources may be paths to JavaScript files. …\n",null,0],["javascript_include_tag","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-javascript_include_tag","(*sources)","",null,0],["javascript_path","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html#method-i-javascript_path","(source)","<p>Computes the path to a javascript asset in the public javascripts\ndirectory. If the <code>source</code> filename has …\n",null,0],["javascript_path","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-javascript_path","(source)","",null,0],["javascript_runtime_gemfile_entry","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-javascript_runtime_gemfile_entry","()","",null,0],["javascript_tag","ActionView::Helpers::JavaScriptHelper","Ruby/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-javascript_tag","(content_or_options_with_block = nil, html_options = {}, &block)","<p>Returns a JavaScript tag with the <code>content</code> inside. Example:\n\n<pre>javascript_tag &quot;alert('All is good')&quot;</pre>\n<p>Returns: …\n",null,0],["javascripts","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-javascripts","()","",null,0],["jd","Date","Rails/classes/Date.html#method-i-jd","()","<p>Returns the Julian day number.  This is a whole number, which is adjusted\nby the offset as the local …\n",null,1],["jd","Date","Rails/classes/Date.html#method-c-jd","(p1 = v1, p2 = v2)","<p>Creates a date object denoting the given chronological Julian day number.\n<p>For example:\n\n<pre>Date.jd(2451944) ...</pre>\n",null,1],["jd","DateTime","Rails/classes/DateTime.html#method-c-jd","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6)","<p>Creates a datetime object denoting the given chronological Julian day\nnumber.\n<p>For example:\n\n<pre>DateTime.jd(2451944) ...</pre>\n",null,1],["jisx0301","Date","Rails/classes/Date.html#method-c-jisx0301","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical JIS X 0301 formats.\n<p>For example: …\n",null,1],["jisx0301","Date","Rails/classes/Date.html#method-i-jisx0301","()","<p>Returns a string in a JIS X 0301 format.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">jisx0301</span>       <span class=\"ruby-comment\">#=&gt; &quot;H13.02.03&quot;</span>\n</pre>\n",null,1],["jisx0301","DateTime","Rails/classes/DateTime.html#method-c-jisx0301","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical JIS X 0301 formats.\n<p>For example: …\n",null,1],["jisx0301","DateTime","Rails/classes/DateTime.html#method-i-jisx0301","(p1 = v1)","<p>Returns a string in a JIS X 0301 format.  The optional argument n is length\nof fractional seconds.\n<p>For …\n",null,1],["jobs","Shell","Rails/classes/Shell.html#method-i-jobs","()","<p>process management\n",null,1],["jobs","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-jobs","()","",null,1],["jobs_exist?","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-jobs_exist-3F","()","",null,1],["join","Array","Rails/classes/Array.html#method-i-join","(p1 = v1)","<p>Returns a string created by converting each element of the array to a\nstring, separated by <em>sep</em>.\n\n<pre>[ &quot;a&quot;, ...</pre>\n",null,1],["join","File","Rails/classes/File.html#method-c-join","(*args)","<p>Returns a new string formed by joining the strings using\n<code>File::SEPARATOR</code>.\n\n<pre>File.join(&quot;usr&quot;, &quot;mail&quot;, &quot;gumby&quot;) ...</pre>\n",null,1],["join","GServer","Rails/classes/GServer.html#method-i-join","()","<p>Join with the server thread\n",null,1],["join","Pathname","Rails/classes/Pathname.html#method-i-join","(*args)","<p>Pathname#join joins pathnames.\n<p><code>path0.join(path1, ..., pathN)</code> is the same as <code>path0 +\npath1 + ... + path</code> ...\n",null,1],["join","Shellwords","Rails/classes/Shellwords.html#method-c-join","(array)","",null,1],["join","Thread","Rails/classes/Thread.html#method-i-join","(p1 = v1)","<p>The calling thread will suspend execution and run <em>thr</em>. Does not\nreturn until <em>thr</em> exits or until <em>limit</em> …\n",null,1],["join","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-join","(*threads)","<p>Waits for specified threads to terminate, and returns when one of the\nthreads terminated.\n",null,1],["join","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-join","(*threads)","<p>Waits for specified threads to terminate, and returns when one of the\nthreads terminated.\n",null,1],["join","URI","Rails/classes/URI.html#method-c-join","(*str)","<p>Synopsis\n\n<pre>URI::join(str[, str, ...])</pre>\n<p>Args\n",null,1],["join","URI::Parser","Rails/classes/URI/Parser.html#method-i-join","(*uris)","<p>Args\n<p><code>uris</code> &mdash; an Array of Strings\n\n<p>Description\n",null,1],["join_nowait","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-join_nowait","(*threads)","<p>Specifies the threads that this object will wait for, but does not actually\nwait.\n",null,1],["join_nowait","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-join_nowait","(*threads)","<p>Specifies the threads that this object will wait for, but does not actually\nwait.\n",null,1],["join_tags","PostsHelper","Ruby/classes/PostsHelper.html#method-i-join_tags","(post)","",null,0],["joined_includes_values","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-joined_includes_values","()","<p>Joins that are also marked for preloading. In which case we should just\neager load them. Note that this …\n",null,0],["joins","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-joins","(*args)","",null,0],["joins_per_query","ActiveRecord::ConnectionAdapters::DatabaseLimits","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-joins_per_query","()","<p>Returns maximum number of joins in a single query.\n",null,0],["json_creatable?","Class","Rails/classes/Class.html#method-i-json_creatable-3F","()","<p>Returns true if this class can be used to create an instance from a\nserialised JSON string. The class …\n",null,1],["json_create","Complex","Rails/classes/Complex.html#method-c-json_create","(object)","",null,1],["json_create","Date","Rails/classes/Date.html#method-c-json_create","(object)","<p>Deserializes JSON string by converting Julian year <code>y</code>, month\n<code>m</code>, day <code>d</code> and Day of Calendar Reform\n<code>sg</code> to …\n",null,1],["json_create","DateTime","Rails/classes/DateTime.html#method-c-json_create","(object)","<p>Deserializes JSON string by converting year <code>y</code>, month\n<code>m</code>, day <code>d</code>, hour <code>H</code>, minute\n<code>M</code>, second <code>S</code>, offset <code>of</code> …\n",null,1],["json_create","Exception","Rails/classes/Exception.html#method-c-json_create","(object)","<p>Deserializes JSON string by constructing new Exception object with message\n<code>m</code> and backtrace <code>b</code> serialized …\n",null,1],["json_create","Range","Rails/classes/Range.html#method-c-json_create","(object)","<p>Deserializes JSON string by constructing new Range object with arguments\n<code>a</code> serialized by <code>to_json</code>.\n",null,1],["json_create","Rational","Rails/classes/Rational.html#method-c-json_create","(object)","",null,1],["json_create","Regexp","Rails/classes/Regexp.html#method-c-json_create","(object)","<p>Deserializes JSON string by constructing new Regexp object with source\n<code>s</code> (Regexp or String) and options …\n",null,1],["json_create","Struct","Rails/classes/Struct.html#method-c-json_create","(object)","<p>Deserializes JSON string by constructing new Struct object with values\n<code>v</code> serialized by <code>to_json</code>.\n",null,1],["json_create","Symbol","Rails/classes/Symbol.html#method-c-json_create","(o)","<p>Deserializes JSON string by converting the <code>string</code> value stored\nin the object to a Symbol\n",null,1],["json_create","Time","Rails/classes/Time.html#method-c-json_create","(object)","<p>Deserializes JSON string by converting time since epoch to Time\n",null,1],["json_escape","ERB::Util","Ruby/classes/ERB/Util.html#method-c-json_escape","(s)","<p>A utility method for escaping HTML entities in JSON strings using uXXXX\nJavaScript escape sequences for …\n",null,0],["json_resource_errors","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-json_resource_errors","()","",null,0],["julian","Date","Rails/classes/Date.html#method-i-julian","()","<p>This method is equivalent to new_start(Date::JULIAN).\n",null,1],["julian?","Date","Rails/classes/Date.html#method-i-julian-3F","()","<p>Retruns true if the date is before the day of calendar reform.\n<p>For example:\n\n<pre>Date.new(1582,10,15).julian? ...</pre>\n",null,1],["julian_leap?","Date","Rails/classes/Date.html#method-c-julian_leap-3F","(p1)","<p>Returns true if the given year is a leap year of the proleptic Julian\ncalendar.\n<p>For example:\n\n<pre>Date.julian_leap?(1900) ...</pre>\n",null,1],["kconv","Kconv","Rails/classes/Kconv.html#method-c-kconv","(str, to_enc, from_enc=nil)","<p>Convert <code>str</code> to <code>to_enc</code>. <code>to_enc</code> and\n<code>from_enc</code> are given as constants of Kconv or Encoding objects.\n",null,1],["kconv","String","Rails/classes/String.html#method-i-kconv","(to_enc, from_enc=nil)","<p>Convert <code>self</code> to <code>to_enc</code>. <code>to_enc</code> and\n<code>from_enc</code> are given as constants of Kconv or Encoding objects.\n",null,1],["keep","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-keep","(k = nil)","<p>Keeps either the entire current flash or a specific flash entry available\nfor the next action:\n\n<pre>flash.keep ...</pre>\n",null,0],["keep_alive?","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-keep_alive-3F","()","<p>Should the connection this request was made on be kept alive?\n",null,1],["keep_alive?","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-keep_alive-3F","()","<p>Will this response’s connection be kept alive?\n",null,1],["keep_if","Array","Rails/classes/Array.html#method-i-keep_if","()","<p>Deletes every element of <code>self</code> for which <em>block</em>\nevaluates to false. See also <code>Array#select!</code>\n<p>If no block is …\n",null,1],["keep_if","ENV","Rails/classes/ENV.html#method-c-keep_if","()","<p>Deletes every environment variable where the block evaluates to\n<code>false</code>.\n<p>Returns an enumerator if no block …\n",null,1],["keep_if","Hash","Rails/classes/Hash.html#method-i-keep_if","()","<p>Deletes every key-value pair from <em>hsh</em> for which <em>block</em>\nevaluates to false.\n<p>If no block is given, an enumerator …\n",null,1],["keep_if","Set","Rails/classes/Set.html#method-i-keep_if","()","<p>Deletes every element of the set for which block evaluates to false, and\nreturns self.\n",null,1],["key","Build","Ruby/classes/Build.html#method-i-key","()","",null,0],["key","DBM","Rails/classes/DBM.html#method-i-key","(p1)","<p>Returns the key for the specified value.\n",null,1],["key","ENV","Rails/classes/ENV.html#method-c-key","(p1)","<p>Returns the name of the environment variable with <code>value</code>.  If\nthe value is not found <code>nil</code> is returned. …\n",null,1],["key","GDBM","Rails/classes/GDBM.html#method-i-key","(p1)","<p>Returns the <em>key</em> for a given <em>value</em>. If several keys may\nmap to the same value, the key that is found first …\n",null,1],["key","Hash","Rails/classes/Hash.html#method-i-key","(p1)","<p>Returns the key of an occurrence of a given value. If the value is not\nfound, returns <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["key","SDBM","Rails/classes/SDBM.html#method-i-key","(p1)","",null,1],["key=","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-key-3D","(p1)","<p>Sets the cipher key. To generate a key, you should either use a secure\nrandom byte string or, if the …\n",null,1],["key?","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-key-3F","(name)","",null,0],["key?","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-key-3F","(key)","",null,0],["key?","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-key-3F","(key)","",null,0],["key?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-key-3F","(key)","",null,0],["key?","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-key-3F","(key)","",null,0],["key?","ActiveRecord::ConnectionAdapters::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-key-3F","(key)","",null,0],["key?","ActiveSupport::Dependencies::ClassCache","Ruby/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-key-3F","(key)","",null,0],["key?","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-key-3F","(key)","<p>Checks the hash for a key matching the argument passed in:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[&quot;key&quot;] ...</pre>\n",null,0],["key?","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-key-3F","(key)","<p>Checks the hash for a key matching the argument passed in:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[&quot;key&quot;] ...</pre>\n",null,0],["key?","CGI::QueryExtension","Rails/classes/CGI/QueryExtension.html#method-i-key-3F","(*args)","",null,1],["key?","DBM","Rails/classes/DBM.html#method-i-key-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n",null,1],["key?","ENV","Rails/classes/ENV.html#method-c-key-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,1],["key?","GDBM","Rails/classes/GDBM.html#method-i-key-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n",null,1],["key?","Hash","Rails/classes/Hash.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_key?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["key?","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-key-3F","(key)","<p>true if <code>key</code> header exists.\n",null,1],["key?","SDBM","Rails/classes/SDBM.html#method-i-key-3F","(p1)","",null,1],["key?","Thread","Rails/classes/Thread.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if the given string (or symbol) exists as a\nthread-local variable.\n\n<pre>me = Thread.current\nme[:oliver] ...</pre>\n",null,1],["key_len=","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-key_len-3D","(p1)","<p>Sets the key length of the cipher.  If the cipher is a fixed length cipher\nthen attempting to set the …\n",null,1],["key_matcher","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-key_matcher","(pattern, options)","<p>Add the namespace defined in the options to a pattern designed to match\nkeys. Implementations that support …\n",null,0],["key_value","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-key_value","(key, value)","<p>Returns Ruby 1.9 style key-value pair if current code is running on Ruby\n1.9.x. Returns the old-style …\n",null,0],["key_value","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-key_value","(key, value)","<p>Returns Ruby 1.9 style key-value pair if current code is running on Ruby\n1.9.x. Returns the old-style …\n",null,0],["keyname","Curses","Rails/classes/Curses.html#method-c-keyname","(p1)","<p>Returns the character string corresponding to key <code>c</code>\n",null,1],["keypad","Curses::Window","Rails/classes/Curses/Window.html#method-i-keypad","(p1)","<p>Enables the keypad of the user’s terminal.\n<p>If enabled (<code>bool</code> is <code>true</code>), the user can press a\nfunction key …\n",null,1],["keypad=","Curses::Window","Rails/classes/Curses/Window.html#method-i-keypad-3D","(p1)","<p>Enables the keypad of the user’s terminal.\n<p>If enabled (<code>bool</code> is <code>true</code>), the user can press a\nfunction key …\n",null,1],["keys","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-keys","()","",null,0],["keys","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-keys","()","<p>Returns all message keys\n",null,0],["keys","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-keys","()","",null,0],["keys","CGI::QueryExtension","Rails/classes/CGI/QueryExtension.html#method-i-keys","(*args)","<p>Return all query parameter names as an array of String.\n",null,1],["keys","DBM","Rails/classes/DBM.html#method-i-keys","()","<p>Returns an array of all the string keys in the database.\n",null,1],["keys","ENV","Rails/classes/ENV.html#method-c-keys","()","<p>Returns every environment variable name in an Array\n",null,1],["keys","GDBM","Rails/classes/GDBM.html#method-i-keys","()","<p>Returns an array of all keys of this database.\n",null,1],["keys","Hash","Rails/classes/Hash.html#method-i-keys","()","<p>Returns a new array populated with the keys from this hash. See also\n<code>Hash#values</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["keys","SDBM","Rails/classes/SDBM.html#method-i-keys","()","",null,1],["keys","Thread","Rails/classes/Thread.html#method-i-keys","()","<p>Returns an an array of the names of the thread-local variables (as\nSymbols).\n\n<pre>thr = Thread.new do\n  Thread.current[:cat] ...</pre>\n",null,1],["keys","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-keys","()","<p>return keys as an array\n",null,1],["keys_with_inspector","IRB::INSPECTORS","Rails/classes/IRB/INSPECTORS.html#method-c-keys_with_inspector","(inspector)","",null,1],["kill","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-kill","(*keys)","",null,1],["kill","Process","Rails/classes/Process.html#method-c-kill","(*args)","<p>Sends the given signal to the specified process id(s), or to the current\nprocess if <em>pid</em> is zero. <em>signal</em> …\n",null,1],["kill","Shell","Rails/classes/Shell.html#method-i-kill","(sig, command)","",null,1],["kill","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-kill","(sig)","",null,1],["kill","Thread","Rails/classes/Thread.html#method-i-kill","()","<p>Terminates <em>thr</em> and schedules another thread to be run. If this\nthread is already marked to be killed, …\n",null,1],["kill","Thread","Rails/classes/Thread.html#method-c-kill","(p1)","<p>Causes the given <em>thread</em> to exit (see <code>Thread::exit</code>).\n\n<pre>count = 0\na = Thread.new { loop { count += 1 } }\nsleep(0.1) ...</pre>\n",null,1],["kill_job","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-kill_job","(sig, command)","<p>kill a job\n",null,1],["kilobyte","Numeric","Ruby/classes/Numeric.html#method-i-kilobyte","()","",null,0],["kilobytes","Numeric","Ruby/classes/Numeric.html#method-i-kilobytes","()","",null,0],["kind","ActiveModel::Validator","Ruby/classes/ActiveModel/Validator.html#method-c-kind","()","<p>Returns the kind of the validator. Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">PresenceValidator</span>.<span class=\"ruby-identifier\">kind</span>   <span class=\"ruby-comment\"># =&gt; :presence</span>\n<span class=\"ruby-constant\">UniquenessValidator</span>.<span class=\"ruby-identifier\">kind</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["kind","ActiveModel::Validator","Ruby/classes/ActiveModel/Validator.html#method-i-kind","()","<p>Return the kind for this validator.\n",null,0],["kind_of?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-kind_of-3F","(klass)","",null,0],["kind_of?","Object","Rails/classes/Object.html#method-i-kind_of-3F","(p1)","<p>Returns <code>true</code> if <em>class</em> is the class of <em>obj</em>,\nor if <em>class</em> is one of the superclasses of <em>obj</em> or modules\nincluded …\n",null,1],["kind_of?","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-kind_of-3F","(klass)","",null,1],["klass","ActionDispatch::MiddlewareStack::Middleware","Ruby/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-klass","()","",null,0],["klass","ActiveRecord::Reflection::MacroReflection","Ruby/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-klass","()","<p>Returns the class for the macro.\n<p><code>composed_of :balance, :class_name =&gt; 'Money'</code> returns the\nMoney class ...\n",null,0],["known_attributes","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-known_attributes","()","<p>This is a list of known attributes for this resource. Either gathered from\nthe provided <code>schema</code>, or from …\n",null,0],["known_attributes","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-known_attributes","()","<p>Returns the list of known attributes for this resource, gathered from the\nprovided <code>schema</code> Attributes …\n",null,0],["l","AbstractController::Translation","Ruby/classes/AbstractController/Translation.html#method-i-l","(*args)","",null,0],["l","ActionView::Helpers::TranslationHelper","Ruby/classes/ActionView/Helpers/TranslationHelper.html#method-i-l","(*args)","",null,0],["l","Matrix::LUPDecomposition","Rails/classes/Matrix/LUPDecomposition.html#method-i-l","()","",null,1],["label","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-label","(method, text = nil, options = {}, &block)","",null,0],["label","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-label","(object_name, method, content_or_options = nil, options = nil, &block)","<p>Returns a label tag tailored for labelling an input field for a specified\nattribute (identified by <code>method</code> …\n",null,0],["label_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-label_tag","(name = nil, content_or_options = nil, options = nil, &block)","<p>Creates a label element. Accepts a block.\n<p>Options\n<p>Creates standard HTML attributes for the tag.\n",null,0],["lambda","Kernel","Rails/classes/Kernel.html#method-i-lambda","()","<p>Equivalent to <code>Proc.new</code>, except the resulting Proc objects\ncheck the number of parameters passed when …\n",null,1],["lambda?","Proc","Rails/classes/Proc.html#method-i-lambda-3F","()","<p>Returns <code>true</code> for a Proc object for which argument handling is\nrigid. Such procs are typically generated …\n",null,1],["lang","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-lang","( language )","<p>UNTESTED\n",null,1],["last","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-last","()","",null,0],["last","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-last","(*args)","<p>A convenience wrapper for <code>find(:last, *args)</code>. You can pass in\nall the same arguments to this method as …\n",null,0],["last","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-last","(*args)","<p>A convenience wrapper for <code>find(:last, *args)</code>. You can pass in\nall the same arguments to this method as …\n",null,0],["last","Rails::Paths::Path","Ruby/classes/Rails/Paths/Path.html#method-i-last","()","",null,0],["last","String","Ruby/classes/String.html#method-i-last","(limit = 1)","<p>Returns the last character of the string or the last <code>limit</code>\ncharacters.\n<p>Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;hello&quot;</span>.<span class=\"ruby-identifier\">last</span>     <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,0],["last","Array","Rails/classes/Array.html#method-i-last","(*args)","<p>Returns the last element(s) of <code>self</code>. If the array is empty,\nthe first form returns <code>nil</code>.\n\n<pre>a = [ &quot;w&quot;, &quot;x&quot;, ...</pre>\n",null,1],["last","RDoc::Markup::List","Rails/classes/RDoc/Markup/List.html#method-i-last","()","<p>Returns the last item in the list\n",null,1],["last","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-last","( )","<p>Returns the last node of the given list of nodes.\n",null,1],["last","Range","Rails/classes/Range.html#method-i-last","(*args)","<p>Returns the last object in <em>rng</em>, or the last <code>n</code>\nelements.\n",null,1],["last!","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-last-21","()","<p>Same as <code>last</code> but raises\n<code>ActiveRecord::RecordNotFound</code> if no record is found. Note that\n<code>last!</code> accepts no …\n",null,0],["lastBuildDate=","RSS::Maker::ChannelBase","Rails/classes/RSS/Maker/ChannelBase.html#method-i-lastBuildDate-3D","(_date)","",null,1],["last_error","DL::CFunc","Rails/classes/DL/CFunc.html#method-c-last_error","()","<p>Returns the last error for the current executing thread\n",null,1],["last_error","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-last_error","()","<p>Returns an exception object for the last conversion. Returns nil if the\nlast conversion did not produce …\n",null,1],["last_error","Fiddle","Rails/classes/Fiddle.html#method-c-last_error","()","<p>Returns the last <code>Error</code> of the current executing\n<code>Thread</code> or nil if none\n",null,1],["last_error=","Fiddle","Rails/classes/Fiddle.html#method-c-last_error-3D","(error)","<p>Sets the last <code>Error</code> of the current executing\n<code>Thread</code> to <code>error</code>\n",null,1],["last_inserted_id","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-last_inserted_id","(result)","",null,0],["last_inserted_id","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-last_inserted_id","(result)","",null,0],["last_inserted_id","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-last_inserted_id","(result)","",null,0],["last_inserted_id","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-last_inserted_id","(result)","",null,0],["last_match","Regexp","Rails/classes/Regexp.html#method-c-last_match","(p1 = v1)","<p>The first form returns the <code>MatchData</code> object generated by the\nlast successful pattern match. Equivalent …\n",null,1],["last_modified","ActionDispatch::Http::Cache::Response","Ruby/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified","()","",null,0],["last_modified","OpenURI::Meta","Rails/classes/OpenURI/Meta.html#method-i-last_modified","()","<p>returns a Time that represents the Last-Modified field.\n",null,1],["last_modified","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-last_modified","()","<p>Time this file was last modified, if known\n",null,1],["last_modified=","ActionDispatch::Http::Cache::Response","Ruby/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified-3D","(utc_time)","",null,0],["last_modified?","ActionDispatch::Http::Cache::Response","Ruby/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified-3F","()","",null,0],["last_update","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-last_update","()","",null,1],["last_update=","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-last_update-3D","(p1)","",null,1],["latest_load_paths","Gem","Rails/classes/Gem.html#method-c-latest_load_paths","()","<p>Return a list of all possible load paths for the latest version for all\ngems in the Gem installation. …\n",null,1],["latest_rubygems_version","Gem","Rails/classes/Gem.html#method-c-latest_rubygems_version","()","",null,1],["latest_spec_for","Gem","Rails/classes/Gem.html#method-c-latest_spec_for","(name)","",null,1],["latest_specs","Gem::Server","Rails/classes/Gem/Server.html#method-i-latest_specs","(req, res)","",null,1],["latest_specs","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-latest_specs","(include_prerelease=false)","<p>Returns an Array specifications for the latest released versions of each\ngem in this index.\n",null,1],["latest_specs","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-latest_specs","(prerelease = false)","<p>Return the latest specs, optionally including prerelease specs if\n<code>prerelease</code> is true.\n",null,1],["latest_version_for","Gem","Rails/classes/Gem.html#method-c-latest_version_for","(name)","",null,1],["launch","Gem::Server","Rails/classes/Gem/Server.html#method-i-launch","()","",null,1],["layout","AbstractController::Layouts::ClassMethods","Ruby/classes/AbstractController/Layouts/ClassMethods.html#method-i-layout","(layout, conditions = {})","<p>Specify the layout to use for this class.\n<p>If the specified layout is a:\n<p>String &mdash; the String is the template …\n",null,0],["lchmod","File","Rails/classes/File.html#method-c-lchmod","(p1, *args)","<p>Equivalent to <code>File::chmod</code>, but does not follow symbolic links\n(so it will change the permissions associated …\n",null,1],["lchmod","Pathname","Rails/classes/Pathname.html#method-i-lchmod","(p1)","<p>See <code>File.lchmod</code>.\n",null,1],["lchown","File","Rails/classes/File.html#method-c-lchown","(p1, p2, *args)","<p>Equivalent to <code>File::chown</code>, but does not follow symbolic links\n(so it will change the owner associated …\n",null,1],["lchown","Pathname","Rails/classes/Pathname.html#method-i-lchown","(p1, p2)","<p>See <code>File.lchown</code>.\n",null,1],["lcm","Integer","Rails/classes/Integer.html#method-i-lcm","(p1)","<p>Returns the least common multiple (always positive).  0.lcm(x) and x.lcm(0)\nreturn zero.\n<p>For example: …\n",null,1],["ld","Date","Rails/classes/Date.html#method-i-ld","()","<p>Returns the Lilian day number.  This is a whole number, which is adjusted\nby the offset as the local …\n",null,1],["ldexp","Math","Rails/classes/Math.html#method-c-ldexp","(p1, p2)","<p>Returns the value of <em>flt</em>*(2**<em>int</em>).\n\n<pre>fraction, exponent = Math.frexp(1234)\nMath.ldexp(fraction, exponent) ...</pre>\n",null,1],["leap?","Date","Rails/classes/Date.html#method-c-leap-3F","(p1)","<p>Returns true if the given year is a leap year of the proleptic Gregorian\ncalendar.\n<p>For example:\n\n<pre>Date.gregorian_leap?(1900) ...</pre>\n",null,1],["leap?","Date","Rails/classes/Date.html#method-i-leap-3F","()","<p>Returns true if the year is a leap year.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2000</span>).<span class=\"ruby-identifier\">leap?</span>      <span class=\"ruby-comment\">#=&gt; true</span>\n<span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>).<span class=\"ruby-identifier\">leap?</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["lease","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-lease","()","",null,0],["length","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-length","()","",null,0],["length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-length","()","",null,0],["length","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-length","()","",null,0],["length","ActiveRecord::ConnectionAdapters::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-length","()","",null,0],["length","Array","Rails/classes/Array.html#method-i-length","()","<p>Returns the number of elements in <code>self</code>. May be zero.\n\n<pre class=\"ruby\">[ <span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">5</span> ].<span class=\"ruby-identifier\">length</span>   <span class=\"ruby-comment\">#=&gt; 5</span>\n</pre>\n",null,1],["length","DBM","Rails/classes/DBM.html#method-i-length","()","<p>Returns the number of entries in the database.\n",null,1],["length","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-length","()","<p>Returns digest_obj.digest_length().\n",null,1],["length","ENV","Rails/classes/ENV.html#method-c-length","()","<p>Returns the number of environment variables.\n",null,1],["length","GDBM","Rails/classes/GDBM.html#method-i-length","()","<p>Returns the number of key-value pairs in this database.\n",null,1],["length","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-length","()","",null,1],["length","Hash","Rails/classes/Hash.html#method-i-length","()","<p>Returns the number of key-value pairs in the hash.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;d&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span>, <span class=\"ruby-string\">&quot;v&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">300</span>, <span class=\"ruby-string\">&quot;e&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">400</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["length","MatchData","Rails/classes/MatchData.html#method-i-length","()","<p>Returns the number of elements in the match array.\n\n<pre>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.length   ...</pre>\n",null,1],["length","Queue","Rails/classes/Queue.html#method-i-length","()","<p>Returns the length of the queue.\n",null,1],["length","RDoc::Markup::ListItem","Rails/classes/RDoc/Markup/ListItem.html#method-i-length","()","<p>Length of parts in the ListItem\n",null,1],["length","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-length","()","<p>Returns the number of attributes the owning Element contains.\n\n<pre>doc = Document &quot;&lt;a x='1' y='2' foo:x='3'/&gt;&quot; ...</pre>\n",null,1],["length","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-length","()","",null,1],["length","REXML::SyncEnumerator","Rails/classes/REXML/SyncEnumerator.html#method-i-length","()","<p>Returns the number of enumerated Enumerable objects, i.e. the size of each\nrow.\n",null,1],["length","SDBM","Rails/classes/SDBM.html#method-i-length","()","",null,1],["length","Set","Rails/classes/Set.html#method-i-length","()","",null,1],["length","String","Rails/classes/String.html#method-i-length","()","<p>Returns the character length of <em>str</em>.\n",null,1],["length","StringIO","Rails/classes/StringIO.html#method-i-length","()","<p>Returns the size of the buffer string.\n",null,1],["length","Struct","Rails/classes/Struct.html#method-i-length","()","<p>Returns the number of instance variables.\n\n<pre>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</pre>\n",null,1],["length","Symbol","Rails/classes/Symbol.html#method-i-length","()","<p>Same as <code>sym.to_s.length</code>.\n",null,1],["length","Tempfile","Rails/classes/Tempfile.html#method-i-length","()","",null,1],["level","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-i-level","()","",null,0],["level","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-level","()","<p>returns the cmsg level as an integer.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">Socket</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">AncillaryData</span>.<span class=\"ruby-identifier\">new</span>(:<span class=\"ruby-constant\">INET6</span>, :<span class=\"ruby-constant\">IPV6</span>, :<span class=\"ruby-constant\">PKTINFO</span>, <span class=\"ruby-string\">&quot;&quot;</span>).<span class=\"ruby-identifier\">level</span>\n<span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["level","Socket::Option","Rails/classes/Socket/Option.html#method-i-level","()","<p>returns the socket level as an integer.\n\n<pre>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).level ...</pre>\n",null,1],["level","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-level","()","<p>Returns compression level.\n",null,1],["level=","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-i-level-3D","(l)","",null,0],["level=","IRB::Notifier::CompositeNotifier","Rails/classes/IRB/Notifier/CompositeNotifier.html#method-i-level-3D","(value)","",null,1],["level=","Logger::Application","Rails/classes/Logger/Application.html#method-i-level-3D","(level)","<p>Set the logging threshold, just like <code>Logger#level=</code>.\n",null,1],["level_notifier=","IRB::Notifier::CompositeNotifier","Rails/classes/IRB/Notifier/CompositeNotifier.html#method-i-level_notifier-3D","(value)","",null,1],["levenshtein_distance","Gem::Text","Rails/classes/Gem/Text.html#method-i-levenshtein_distance","(str1, str2)","<p>This code is based directly on the Text gem implementation Returns a value\nrepresenting the “cost” …\n",null,1],["lex","Ripper","Rails/classes/Ripper.html#method-c-lex","(src, filename = '-', lineno = 1)","<p>Tokenizes Ruby program and returns an Array of Array, which is formatted\nlike [[lineno, column], type, …\n",null,1],["lex","RubyLex","Rails/classes/RubyLex.html#method-i-lex","()","",null,1],["lex_init","RubyLex","Rails/classes/RubyLex.html#method-i-lex_init","()","",null,1],["lex_int2","RubyLex","Rails/classes/RubyLex.html#method-i-lex_int2","()","",null,1],["lgamma","Math","Rails/classes/Math.html#method-c-lgamma","(p1)","<p>Calculates the logarithmic gamma of x and the sign of gamma of x.\n<p>Math.lgamma(x) is same as\n\n<pre>[Math.log(Math.gamma(x).abs), ...</pre>\n",null,1],["lib","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-lib","()","",null,0],["lib","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-lib","(filename, data=nil, &block)","<p>Create a new file in the lib/ directory. Code can be specified in a block\nor a data string can be given. …\n",null,0],["lib","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-lib","()","",null,0],["lib_dirs_for","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-lib_dirs_for","(spec)","<p>Returns library directories glob for a gemspec.  For example,\n\n<pre>'/usr/local/lib/ruby/gems/1.8/gems/foobar-1.0/{lib,ext}'</pre>\n",null,1],["lib_dirs_glob","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-lib_dirs_glob","()","<p>Returns a string usable in Dir.glob to match all requirable paths for this\nspec.\n",null,1],["lib_files","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-lib_files","()","<p>Files in the Gem under one of the require_paths\n",null,1],["library_name","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-library_name","()","<p>Returns library name. If the method fails to access library name,\nWIN32OLERuntimeError is raised.\n\n<pre>tlib ...</pre>\n",null,1],["libyaml_version","Psych","Rails/classes/Psych.html#method-c-libyaml_version","()","<p>Returns the version of libyaml being used\n",null,1],["license","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-license","()","",null,0],["license","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-license","()","<p>Singular accessor for #licenses\n",null,1],["license=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-license-3D","(o)","<p>Singular accessor for #licenses\n",null,1],["licenses","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-licenses","()","<p>The license(s) for the library.  Each license must be a short name, no more\nthan 64 characters.\n",null,1],["licenses=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-licenses-3D","(licenses)","<p>Set licenses to <code>licenses</code>, ensuring it is an array.\n",null,1],["limit","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-limit","(value)","",null,0],["limit","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-limit","(limit)","<p>Limit the byte size of the string to a number of bytes without breaking\ncharacters. Usable when the storage …\n",null,0],["limit","BigDecimal","Rails/classes/BigDecimal.html#method-c-limit","(p1 = v1)","<p>Limit the number of significant digits in newly created BigDecimal numbers\nto the specified value. Rounding …\n",null,1],["limited_update_conditions","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-limited_update_conditions","(where_sql, quoted_table_name, quoted_primary_key)","",null,0],["limited_update_conditions","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-limited_update_conditions","(where_sql, quoted_table_name, quoted_primary_key)","",null,0],["line","IRB::ReadlineInputMethod","Rails/classes/IRB/ReadlineInputMethod.html#method-i-line","(line_no)","",null,1],["line","IRB::StdioInputMethod","Rails/classes/IRB/StdioInputMethod.html#method-i-line","(line_no)","",null,1],["line","REXML::ParseException","Rails/classes/REXML/ParseException.html#method-i-line","()","",null,1],["line_at","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-line_at","(file, line)","",null,1],["line_buffer","Readline","Rails/classes/Readline.html#method-c-line_buffer","()","<p>Returns the full line that is being edited. This is useful from within the\ncomplete_proc for determining …\n",null,1],["line_width","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-line_width","()","<p>Get the preferred line width.\n",null,1],["line_width=","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-line_width-3D","(p1)","<p>Set the preferred line with to <code>width</code>.\n",null,1],["lineno","ARGF","Rails/classes/ARGF.html#method-i-lineno","()","<p>Returns the current line number of ARGF as a whole. This value can be set\nmanually with <code>ARGF.lineno=</code> …\n",null,1],["lineno","IO","Rails/classes/IO.html#method-i-lineno","()","<p>Returns the current line number in <em>ios</em>.  The stream must be opened\nfor reading. <code>lineno</code> counts the number …\n",null,1],["lineno","Ripper::Filter","Rails/classes/Ripper/Filter.html#method-i-lineno","()","<p>The line number of the current token. This value starts from 1. This method\nis valid only in event handlers. …\n",null,1],["lineno","StringIO","Rails/classes/StringIO.html#method-i-lineno","()","<p>Returns the current line number in <strong>strio</strong>. The stringio\nmust be opened for reading. <code>lineno</code> counts the …\n",null,1],["lineno","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-lineno","()","<p>The line number of the last row read from this file.\n",null,1],["lineno=","ARGF","Rails/classes/ARGF.html#method-i-lineno-3D","(p1)","<p>Sets the line number of <code>ARGF</code> as a whole to the given\n<code>Integer</code>.\n<p><code>ARGF</code> sets the line number automatically ...\n",null,1],["lineno=","IO","Rails/classes/IO.html#method-i-lineno-3D","(p1)","<p>Manually sets the current line number to the given value. <code>$.</code>\nis updated only on the next read.\n\n<pre>f = File.new(&quot;testfile&quot;) ...</pre>\n",null,1],["lineno=","StringIO","Rails/classes/StringIO.html#method-i-lineno-3D","(p1)","<p>Manually sets the current line number to the given value. <code>$.</code>\nis updated only on the next read.\n",null,1],["lineno=","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-lineno-3D","(p1)","<p>Specify line number of the last row read from this file.\n",null,1],["lines","ARGF","Rails/classes/ARGF.html#method-i-lines","(*args)","<p>Returns an enumerator which iterates over each line (separated by\n<em>sep</em>, which defaults to your platform’s …\n",null,1],["lines","Curses","Rails/classes/Curses.html#method-c-lines","()","<p>Returns the number of lines on the screen\n",null,1],["lines","IO","Rails/classes/IO.html#method-i-lines","(*args)","<p>Executes the block for every line in <em>ios</em>, where lines are\nseparated by <em>sep</em>. <em>ios</em> must be opened for reading …\n",null,1],["lines","String","Rails/classes/String.html#method-i-lines","(p1 = v1)","<p>Splits <em>str</em> using the supplied parameter as the record separator\n(<code>$/</code> by default), passing each substring …\n",null,1],["lines","StringIO","Rails/classes/StringIO.html#method-i-lines","(*args)","<p>See IO#each.\n",null,1],["lines","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-lines","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["linger","Socket::Option","Rails/classes/Socket/Option.html#method-c-linger","(p1, p2)","<p>Creates a new Socket::Option object for SOL_SOCKET/SO_LINGER.\n<p><em>onoff</em> should be an integer or a boolean. ...\n",null,1],["linger","Socket::Option","Rails/classes/Socket/Option.html#method-i-linger","()","<p>Returns the linger data in <em>sockopt</em> as a pair of boolean and\ninteger.\n\n<pre>sockopt = Socket::Option.linger(true, ...</pre>\n",null,1],["link","File","Rails/classes/File.html#method-c-link","(p1, p2)","<p>Creates a new name for an existing file using a hard link. Will not\noverwrite <em>new_name</em> if it already …\n",null,1],["link","FileUtils","Rails/classes/FileUtils.html#method-c-link","(src, dest, options = {})","",null,1],["link","RDoc::Markup::ToHtmlCrossref","Rails/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-link","(name, text)","<p>Creates an HTML link to <code>name</code> with the given <code>text</code>.\n",null,1],["link","RSS::Maker::ImageBase","Rails/classes/RSS/Maker/ImageBase.html#method-i-link","()","",null,1],["link","Sys","Rails/classes/Sys.html#method-i-link","(file_name, dest_file)","<p>Link <code>file_name</code> to <code>dest_file</code>.\n",null,1],["link_files","Sys","Rails/classes/Sys.html#method-i-link_files","(wildcard, dest_dir)","<p>Link all files matching <code>wildcard</code> into the directory\n<code>dest_dir</code>.\n",null,1],["link_to","ActionView::Helpers::UrlHelper","Ruby/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to","(*args, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code>. See the valid options …\n",null,0],["link_to_function","ActionView::Helpers::JavaScriptHelper","Ruby/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-link_to_function","(name, function, html_options={})","<p>Returns a link whose <code>onclick</code> handler triggers the passed\nJavaScript.\n<p>The helper receives a name, JavaScript …\n",null,0],["link_to_if","ActionView::Helpers::UrlHelper","Ruby/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_if","(condition, name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code> if <code>condition</code> is true, …\n",null,0],["link_to_unless","ActionView::Helpers::UrlHelper","Ruby/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_unless","(condition, name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code> unless <code>condition</code> is true, …\n",null,0],["link_to_unless_current","ActionView::Helpers::UrlHelper","Ruby/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_unless_current","(name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code> unless the current request …\n",null,0],["links","RecursiveHTTPFetcher","Ruby/classes/RecursiveHTTPFetcher.html#method-i-links","(base_url, contents)","",null,0],["list","Encoding","Rails/classes/Encoding.html#method-c-list","()","<p>Returns the list of loaded encodings.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span>.<span class=\"ruby-identifier\">list</span>\n<span class=\"ruby-comment\">#=&gt; [#&lt;Encoding:ASCII-8BIT&gt;, #&lt;Encoding:UTF-8&gt;,</span>\n  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["list","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-i-list","(all = false, prerelease = false)","<p>Returns a list of gems available for each source in Gem::sources.  If\n<code>all</code> is true, all released versions …\n",null,1],["list","Iconv","Rails/classes/Iconv.html#method-c-list","()","<p>Iterates each alias sets.\n",null,1],["list","Net::FTP","Rails/classes/Net/FTP.html#method-i-list","(*args)","<p>Returns an array of file information in the directory (the output is like\n`ls -l`).  If a block is given, …\n",null,1],["list","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-list","(refname, mailbox)","<p>Sends a LIST command, and returns a subset of names from the complete set\nof all names available to the …\n",null,1],["list","Signal","Rails/classes/Signal.html#method-c-list","()","<p>Returns a list of signal names mapped to the corresponding underlying\nsignal numbers.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Signal</span>.<span class=\"ruby-identifier\">list</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["list","Thread","Rails/classes/Thread.html#method-c-list","()","<p>Returns an array of <code>Thread</code> objects for all threads that are\neither runnable or stopped.\n\n<pre>Thread.new { sleep(200) ...</pre>\n",null,1],["list","ThreadGroup","Rails/classes/ThreadGroup.html#method-i-list","()","<p>Returns an array of all existing <code>Thread</code> objects that belong to\nthis group.\n\n<pre>ThreadGroup::Default.list  ...</pre>\n",null,1],["list","WEBrick::HTTPUtils::FormData","Rails/classes/WEBrick/HTTPUtils/FormData.html#method-i-list","()","",null,1],["list_end_for","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-list_end_for","(list_type)","<p>Returns the HTML end-tag for <code>list_type</code>\n",null,1],["list_files_in_directory","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-list_files_in_directory","(dir)","<p>Return a list of the files to be processed in a directory. We know that\nthis directory doesn’t have a …\n",null,1],["list_item_start","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-list_item_start","(list_item, list_type)","<p>Returns the HTML tag for <code>list_type</code>, possible using a label\nfrom <code>list_item</code>\n",null,1],["list_known_classes","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-list_known_classes","(names = [])","<p>Lists classes known to ri starting with <code>names</code>.  If\n<code>names</code> is empty all known classes are shown.\n",null,1],["list_methods_matching","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-list_methods_matching","(name)","<p>Returns an Array of methods matching <code>name</code>\n",null,1],["listen","Addrinfo","Rails/classes/Addrinfo.html#method-i-listen","(backlog=5)","<p>creates a listening socket bound to self.\n",null,1],["listen","Gem::Server","Rails/classes/Gem/Server.html#method-i-listen","(addresses = @addresses)","<p>Creates server sockets based on the addresses option.  If no addresses were\ngiven a server socket for …\n",null,1],["listen","OpenSSL::SSL::SSLServer","Rails/classes/OpenSSL/SSL/SSLServer.html#method-i-listen","(backlog=5)","",null,1],["listen","REXML::Parsers::SAX2Parser","Rails/classes/REXML/Parsers/SAX2Parser.html#method-i-listen","( *args, &blok )","<p>Listen arguments:\n<p>Symbol, Array, Block\n\n<pre>Listen to Symbol events on Array elements</pre>\n",null,1],["listen","Socket","Rails/classes/Socket.html#method-i-listen","(p1)","<p>Listens for connections, using the specified <code>int</code> as the\nbacklog. A call to <em>listen</em> only applies if the …\n",null,1],["listen","TCPServer","Rails/classes/TCPServer.html#method-i-listen","(p1)","<p>Listens for connections, using the specified <code>int</code> as the\nbacklog. A call to <em>listen</em> only applies if the …\n",null,1],["listen","UNIXServer","Rails/classes/UNIXServer.html#method-i-listen","(p1)","<p>Listens for connections, using the specified <code>int</code> as the\nbacklog. A call to <em>listen</em> only applies if the …\n",null,1],["listen","WEBrick::GenericServer","Rails/classes/WEBrick/GenericServer.html#method-i-listen","(address, port)","",null,1],["listener","RSS::REXMLParser","Rails/classes/RSS/REXMLParser.html#method-c-listener","()","",null,1],["listener","RSS::XMLParserParser","Rails/classes/RSS/XMLParserParser.html#method-c-listener","()","",null,1],["listener","RSS::XMLScanParser","Rails/classes/RSS/XMLScanParser.html#method-c-listener","()","",null,1],["listener=","RSS::REXMLLikeXMLParser","Rails/classes/RSS/REXMLLikeXMLParser.html#method-i-listener-3D","(listener)","",null,1],["listeners_for","ActiveSupport::Notifications::Fanout","Ruby/classes/ActiveSupport/Notifications/Fanout.html#method-i-listeners_for","(name)","",null,0],["listening?","ActiveSupport::Notifications::Fanout","Ruby/classes/ActiveSupport/Notifications/Fanout.html#method-i-listening-3F","(name)","",null,0],["ljust","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-ljust","(integer, padstr=' ')","<p>Works just like <code>String#ljust</code>, only integer specifies\ncharacters instead of bytes.\n<p>Example:\n\n<pre>&quot;¾ cup&quot;.mb_chars.rjust(8).to_s ...</pre>\n",null,0],["ljust","String","Rails/classes/String.html#method-i-ljust","(*args)","<p>If <em>integer</em> is greater than the length of <em>str</em>, returns a\nnew <code>String</code> of length <em>integer</em> with <em>str</em> left\njustified …\n",null,1],["ln","FileUtils","Rails/classes/FileUtils.html#method-c-ln","(src, dest, options = {})","<p>Options: force noop verbose\n<p><strong><code>ln(old, new, options = {})</code></strong>\n<p>Creates a hard link <code>new</code> which points to <code>old</code>. If …\n",null,1],["ln","Object","Rails/classes/Object.html#method-i-ln","()","<p>Create a link to the specified TARGET with LINK_NAME.\n\n<pre>ruby -run -e ln -- [OPTION] TARGET LINK_NAME\n\n-s ...</pre>\n",null,1],["ln_s","FileUtils","Rails/classes/FileUtils.html#method-c-ln_s","(src, dest, options = {})","<p>Options: force noop verbose\n<p><strong><code>ln_s(old, new, options = {})</code></strong>\n<p>Creates a symbolic link <code>new</code> which points to <code>old</code> …\n",null,1],["ln_sf","FileUtils","Rails/classes/FileUtils.html#method-c-ln_sf","(src, dest, options = {})","<p>Options: noop verbose\n<p>Same as\n\n<pre>#ln_s(src, dest, :force)</pre>\n",null,1],["load","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-load","(attributes, remove_root = false)","<p>A method to manually load attributes from a hash. Recursively loads\ncollections of resources.  This method …\n",null,0],["load","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Ruby/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-i-load","()","<p>Loads the Unicode database and returns all the internal objects of\nUnicodeDatabase.\n",null,0],["load","CSV","Rails/classes/CSV.html#method-c-load","(io_or_str, options = Hash.new)","<p>This method is the reading counterpart to CSV::dump().  See that method for\na detailed description of …\n",null,1],["load","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-load","(file)","<p>Loads Ruby format gemspec from <code>file</code>.\n",null,1],["load","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-load","(file, priv=nil)","",null,1],["load","JSON","Rails/classes/JSON.html#method-i-load","(source, proc = nil, options = {})","<p>Load a ruby data structure from a JSON <em>source</em> and return it. A\nsource can either be a string-like object, …\n",null,1],["load","Kernel","Rails/classes/Kernel.html#method-i-load","(p1, p2 = v2)","<p>Loads and executes the Ruby program in the file <em>filename</em>. If the\nfilename does not resolve to an absolute …\n",null,1],["load","Marshal","Rails/classes/Marshal.html#method-c-load","(p1, p2 = v2)","<p>Returns the result of converting the serialized data in source into a Ruby\nobject (possibly with associated …\n",null,1],["load","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-c-load","(p1 = v1)","",null,1],["load","OptionParser","Rails/classes/OptionParser.html#method-i-load","(filename = nil)","<p>Loads options from file names as <code>filename</code>. Does nothing when\nthe file is not present. Returns whether …\n",null,1],["load","Psych","Rails/classes/Psych.html#method-c-load","(yaml, filename = nil)","<p>Load <code>yaml</code> in to a Ruby data structure.  If multiple documents\nare provided, the object contained in the …\n",null,1],["load","Rake::DefaultLoader","Rails/classes/Rake/DefaultLoader.html#method-i-load","(fn)","",null,1],["load","Rake::MakefileLoader","Rails/classes/Rake/MakefileLoader.html#method-i-load","(fn)","<p>Load the makefile dependencies in <code>fn</code>.\n",null,1],["load","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-c-load","(p1, p2 = v2)","",null,1],["load","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-c-load","( stringOrReadable )","",null,1],["load_all!","ActiveSupport","Ruby/classes/ActiveSupport.html#method-c-load_all-21","()","",null,0],["load_api_keys","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-load_api_keys","()","",null,1],["load_attributes_from_response","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-load_attributes_from_response","(response)","",null,0],["load_cache","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-load_cache","()","<p>Loads cache file for this store\n",null,1],["load_call","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-i-load_call","( stringOrReadable )","<p>returns [ methodname, params ]\n",null,1],["load_call","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-c-load_call","( stringOrReadable )","",null,1],["load_class","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-load_class","(klass_name)","<p>Loads ri data for <code>klass_name</code>\n",null,1],["load_console","Rails::Application","Ruby/classes/Rails/Application.html#method-i-load_console","(app=self)","<p>Load the application console and invoke the registered hooks. Check\n<code>Rails::Railtie.console</code> for more info. …\n",null,0],["load_console","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-load_console","(app=self)","",null,0],["load_console","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-i-load_console","(app=self)","",null,0],["load_documents","Psych","Rails/classes/Psych.html#method-c-load_documents","(yaml, &block)","",null,1],["load_env_plugins","Gem","Rails/classes/Gem.html#method-c-load_env_plugins","()","<p>Find all ‘rubygems_plugin’ files in $LOAD_PATH and load them\n",null,1],["load_file","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-load_file","(filename)","",null,1],["load_file","IRB::IrbLoader","Rails/classes/IRB/IrbLoader.html#method-i-load_file","(path, priv = nil)","",null,1],["load_file","Psych","Rails/classes/Psych.html#method-c-load_file","(filename)","<p>Load the document contained in <code>filename</code>.  Returns the yaml\ncontained in <code>filename</code> as a ruby object\n",null,1],["load_gems_in","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-load_gems_in","(*spec_dirs)","<p>Reconstruct the source index from the specifications in\n<code>spec_dirs</code>.\n",null,1],["load_gemspec","Gem::Commands::BuildCommand","Rails/classes/Gem/Commands/BuildCommand.html#method-i-load_gemspec","(filename)","",null,1],["load_generators","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-load_generators","(app=self)","",null,0],["load_generators","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-i-load_generators","(app=self)","",null,0],["load_history","IRB::HistorySavingAbility","Rails/classes/IRB/HistorySavingAbility.html#method-i-load_history","()","",null,1],["load_imports","Rake::Application","Rails/classes/Rake/Application.html#method-i-load_imports","()","<p>Load the pending list of imported files.\n",null,1],["load_method","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-load_method","(store, cache, klass, type, name)","<p>Loads RI data for method <code>name</code> on <code>klass</code> from\n<code>store</code>.  <code>type</code> and <code>cache</code> indicate if\nit is a class or instance …\n",null,1],["load_method","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-load_method","(klass_name, method_name)","<p>Loads ri data for <code>method_name</code> in <code>klass_name</code>\n",null,1],["load_methods_matching","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-load_methods_matching","(name)","<p>Returns an Array of RI data for methods matching <code>name</code>\n",null,1],["load_mime_types","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-load_mime_types","(file)","<p>Load Apache compatible mime.types file.\n",null,1],["load_modules","IRB","Rails/classes/IRB.html#method-c-load_modules","()","<p>loading modules\n",null,1],["load_path_insert_index","Gem","Rails/classes/Gem.html#method-c-load_path_insert_index","()","<p>The index to insert activated gem paths into the $LOAD_PATH.\n<p>Defaults to the site lib directory unless …\n",null,1],["load_paths","Rails::Paths::Root","Ruby/classes/Rails/Paths/Root.html#method-i-load_paths","()","",null,0],["load_plugin_files","Gem","Rails/classes/Gem.html#method-c-load_plugin_files","(plugins)","<p>Load <code>plugins</code> as ruby files\n",null,1],["load_plugins","Gem","Rails/classes/Gem.html#method-c-load_plugins","()","<p>Find all ‘rubygems_plugin’ files in installed gems and load them\n",null,1],["load_private_key","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-load_private_key","(p1 = v1, p2 = v2)","",null,1],["load_public_key","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-load_public_key","(p1 = v1, p2 = v2)","",null,1],["load_rakefile","Rake","Rails/classes/Rake.html#method-c-load_rakefile","(path)","<p>Load a rakefile.\n",null,1],["load_rakefile","Rake::Application","Rails/classes/Rake/Application.html#method-i-load_rakefile","()","<p>Find the rakefile and then load it and any pending imports.\n",null,1],["load_rdoc","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-c-load_rdoc","()","<p>Load RDoc from a gem if it is available, otherwise from Ruby’s stdlib\n",null,1],["load_rdoc","RDoc::RubygemsHook","Rails/classes/RDoc/RubygemsHook.html#method-c-load_rdoc","()","<p>Loads the RDoc generator\n",null,1],["load_response","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-c-load_response","( stringOrReadable )","",null,1],["load_response","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-i-load_response","( stringOrReadable )","<p>returns paramOrFault\n",null,1],["load_runner","Rails::Application","Ruby/classes/Rails/Application.html#method-i-load_runner","(app=self)","<p>Load the application runner and invoke the registered hooks. Check\n<code>Rails::Railtie.runner</code> for more info. …\n",null,0],["load_runner","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-load_runner","(app=self)","",null,0],["load_runner","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-i-load_runner","(app=self)","",null,0],["load_seed","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-load_seed","()","<p>Load data from db/seeds.rb file. It can be used in to load engines’ seeds,\ne.g.:\n<p>Blog::Engine.load_seed …\n",null,0],["load_session","ActionDispatch::Session::StaleSessionCheck","Ruby/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-load_session","(env)","",null,0],["load_specification","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-c-load_specification","(file_name)","<p>Loads a ruby-format specification from <code>file_name</code> and returns\nthe loaded spec.\n",null,1],["load_specs","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-i-load_specs","(source_uri, file)","<p>Loads specs in <code>file</code>, fetching from <code>source_uri</code> if\nthe on-disk cache is out of date.\n",null,1],["load_stream","Psych","Rails/classes/Psych.html#method-c-load_stream","(yaml, filename = nil)","<p>Load multiple documents given in <code>yaml</code>.  Returns the parsed\ndocuments as a list.  If a block is given, …\n",null,1],["load_tasks","Rails::Application","Ruby/classes/Rails/Application.html#method-i-load_tasks","(app=self)","<p>Load the application and its railties tasks and invoke the registered\nhooks. Check <code>Rails::Railtie.rake_tasks</code> …\n",null,0],["load_tasks","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-load_tasks","(app=self)","",null,0],["load_tasks","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-i-load_tasks","(app=self)","",null,0],["load_yaml","Gem","Rails/classes/Gem.html#method-c-load_yaml","()","<p>Loads YAML, preferring Psych\n",null,1],["loaded?","ActiveRecord::SessionStore::Session","Ruby/classes/ActiveRecord/SessionStore/Session.html#method-i-loaded-3F","()","<p>Has the session been loaded yet?\n",null,0],["loaded?","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-i-loaded-3F","()","",null,0],["loaded_from=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-loaded_from-3D","(path)","<p>Set the location a Specification was loaded from. <code>obj</code> is\nconverted to a String.\n",null,1],["loaded_path?","Gem","Rails/classes/Gem.html#method-c-loaded_path-3F","(path)","",null,1],["local","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-local","(*args)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone\nof <code>self</code> from given values. …\n",null,0],["local","Gem::Platform","Rails/classes/Gem/Platform.html#method-c-local","()","",null,1],["local","Time","Rails/classes/Time.html#method-c-local","(*args)","<p>Same as <code>Time::gm</code>, but interprets the values in the local time\nzone.\n\n<pre>Time.local(2000,&quot;jan&quot;,1,20,15,1)  ...</pre>\n",null,1],["local?","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-local-3F","()","<p>True if the request came from localhost, 127.0.0.1.\n",null,0],["local?","Gem::LocalRemoteOptions","Rails/classes/Gem/LocalRemoteOptions.html#method-i-local-3F","()","<p>Is local fetching enabled?\n",null,1],["local_address","BasicSocket","Rails/classes/BasicSocket.html#method-i-local_address","()","<p>Returns an Addrinfo object for local address obtained by getsockname.\n<p>Note that addrinfo.protocol is filled …\n",null,1],["local_constant_names","Module","Ruby/classes/Module.html#method-i-local_constant_names","()","<p>Returns the names of the constants defined locally rather than the\nconstants themselves. See <code>local_constants</code> …\n",null,0],["local_constants","Module","Ruby/classes/Module.html#method-i-local_constants","()","<p>Returns the constants that have been defined locally by this object and not\nin an ancestor. This method …\n",null,0],["local_name","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-local_name","( node_set=nil )","<p>UNTESTED\n",null,1],["local_name","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-local_name","()","",null,1],["local_name=","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-local_name-3D","( name_str )","",null,1],["local_offset","DateTime","Ruby/classes/DateTime.html#method-c-local_offset","()","<p>DateTimes aren’t aware of DST rules, so use a consistent non-DST offset\nwhen creating a DateTime with …\n",null,0],["local_time","Time","Ruby/classes/Time.html#method-c-local_time","(*args)","<p>Wraps class method <code>time_with_datetime_fallback</code> with\n<code>utc_or_local</code> set to <code>:local</code>.\n",null,0],["local_to_utc","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-local_to_utc","(time, dst=true)","<p>Adjust the given time to the simultaneous time in UTC. Returns a Time.utc()\ninstance.\n",null,0],["local_variables","Kernel","Rails/classes/Kernel.html#method-i-local_variables","()","<p>Returns the names of the current local variables.\n\n<pre>fred = 1\nfor i in 1..10\n   # ...\nend\nlocal_variables ...</pre>\n",null,1],["locale","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-locale","()","<p>Returns current locale id (lcid). The default locale is\nLOCALE_SYSTEM_DEFAULT.\n\n<pre>lcid = WIN32OLE.locale</pre>\n",null,1],["locale=","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-locale-3D","(p1)","<p>Sets current locale id (lcid).\n\n<pre>WIN32OLE.locale = 1033 # set locale English(U.S)\nobj = WIN32OLE_VARIANT.new(&quot;$100,000&quot;, ...</pre>\n",null,1],["locale_charmap","Encoding","Rails/classes/Encoding.html#method-c-locale_charmap","()","<p>Returns the locale charmap name. It returns nil if no appropriate\ninformation.\n\n<pre>Debian GNU/Linux\n  LANG=C ...</pre>\n",null,1],["localize","AbstractController::Translation","Ruby/classes/AbstractController/Translation.html#method-i-localize","(*args)","",null,0],["localize","ActionView::Helpers::TranslationHelper","Ruby/classes/ActionView/Helpers/TranslationHelper.html#method-i-localize","(*args)","<p>Delegates to <code>I18n.localize</code> with no additional functionality.\n",null,0],["localtime","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-localtime","()","<p>Returns a <code>Time.local()</code> instance of the simultaneous time in\nyour system’s <code>ENV['TZ']</code> zone\n",null,0],["localtime","Time","Rails/classes/Time.html#method-i-localtime","(p1 = v1)","<p>Converts <em>time</em> to local time (using the local time zone in effect\nfor this process) modifying the receiver. …\n",null,1],["location","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-location","()","",null,0],["location","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-location","()","",null,0],["location=","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-location-3D","(url)","",null,0],["location=","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-location-3D","(url)","",null,0],["location_of_caller","Gem","Rails/classes/Gem.html#method-c-location_of_caller","()","<p>The file name and line number of the caller of the caller of this method.\n",null,1],["lock","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-lock","(locks = true)","",null,0],["lock","Mutex","Rails/classes/Mutex.html#method-i-lock","()","<p>Attempts to grab the lock and waits if it isn’t available. Raises\n<code>ThreadError</code> if <code>mutex</code> was locked by …\n",null,1],["lock","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-lock","(path, body, initheader = nil)","<p>Sends a LOCK request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["lock","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-lock","(path, body, initheader = nil)","<p>Sends a LOCK request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["lock!","ActiveRecord::Locking::Pessimistic","Ruby/classes/ActiveRecord/Locking/Pessimistic.html#method-i-lock-21","(lock = true)","<p>Obtain a row lock on this record. Reloads the record to obtain the\nrequested lock. Pass an SQL locking …\n",null,0],["locked?","Mutex","Rails/classes/Mutex.html#method-i-locked-3F","()","<p>Returns <code>true</code> if this lock is currently held by some thread.\n",null,1],["locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Ruby/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_column","()","<p>The version column used for optimistic locking. Defaults to\n<code>lock_version</code>.\n",null,0],["locking_column=","ActiveRecord::Locking::Optimistic::ClassMethods","Ruby/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_column-3D","(value)","",null,0],["locking_enabled?","ActiveRecord::Locking::Optimistic::ClassMethods","Ruby/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_enabled-3F","()","<p>Returns true if the <code>lock_optimistically</code> flag is set to true\n(which it is, by default) and the table includes …\n",null,0],["log","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-log","(sql, name = \"SQL\", binds = [])","",null,0],["log","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-log","()","",null,0],["log","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-log","(*args)","<p>Define log for backwards compatibility. If just one argument is sent,\ninvoke say, otherwise invoke say_status. …\n",null,0],["log","BigMath","Rails/classes/BigMath.html#method-c-log","(p1, p2)","<p>Computes the natural logarithm of x to the specified number of digits of\nprecision.\n<p>If x is zero or negative, …\n",null,1],["log","CMath","Rails/classes/CMath.html#method-c-log","(*args)","<p>Returns the natural logarithm of Complex.  If a second argument is given,\nit will be the base of logarithm. …\n",null,1],["log","GServer","Rails/classes/GServer.html#method-i-log","(msg)","<p>Log a message to #stdlog, if it’s defined.  This implementation outputs the\ntimestamp and message to …\n",null,1],["log","Logger","Rails/classes/Logger.html#method-i-log","(severity, message = nil, progname = nil, &block)","",null,1],["log","Logger::Application","Rails/classes/Logger/Application.html#method-i-log","(severity, message = nil, &block)","<p>See Logger#add.  This application’s <code>appname</code> is used.\n",null,1],["log","Math","Rails/classes/Math.html#method-c-log","(p1, p2 = v2)","<p>Returns the natural logarithm of <em>numeric</em>. If additional second\nargument is given, it will be the base …\n",null,1],["log","Sys","Rails/classes/Sys.html#method-i-log","(msg)","<p>Write a message to standard error if $verbose is enabled.\n",null,1],["log","Syslog","Rails/classes/Syslog.html#method-c-log","(*args)","<p>Log a message with the specified priority. Example:\n\n<pre>Syslog.log(Syslog::LOG_CRIT, &quot;Out of disk space&quot;) ...</pre>\n",null,1],["log","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-log","(level, data)","<p>Logs <code>data</code> at <code>level</code> if the given level is above\nthe current log level.\n",null,1],["log","WEBrick::Log","Rails/classes/WEBrick/Log.html#method-i-log","(level, data)","<p>Same as BasicLog#log\n",null,1],["log!","CMath","Rails/classes/CMath.html#method-c-log-21","(*args)","",null,1],["log10","CMath","Rails/classes/CMath.html#method-c-log10","(z)","<p>returns the base 10 logarithm of <code>z</code>\n",null,1],["log10","Math","Rails/classes/Math.html#method-c-log10","(p1)","<p>Returns the base 10 logarithm of <em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log10</span>(<span class=\"ruby-value\">1</span>)       <span class=\"ruby-comment\">#=&gt; 0.0</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log10</span>(<span class=\"ruby-value\">10</span>)      <span class=\"ruby-comment\">#=&gt; 1.0</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log10</span>(<span class=\"ruby-value\">10</span><span class=\"ruby-operator\">**</span><span class=\"ruby-value\">100</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["log10!","CMath","Rails/classes/CMath.html#method-c-log10-21","(z)","",null,1],["log2","CMath","Rails/classes/CMath.html#method-c-log2","(z)","<p>returns the base 2 logarithm of <code>z</code>\n",null,1],["log2","Math","Rails/classes/Math.html#method-c-log2","(p1)","<p>Returns the base 2 logarithm of <em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log2</span>(<span class=\"ruby-value\">1</span>)      <span class=\"ruby-comment\">#=&gt; 0.0</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log2</span>(<span class=\"ruby-value\">2</span>)      <span class=\"ruby-comment\">#=&gt; 1.0</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log2</span>(<span class=\"ruby-value\">32768</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["log2!","CMath","Rails/classes/CMath.html#method-c-log2-21","(z)","",null,1],["log=","Logger::Application","Rails/classes/Logger/Application.html#method-i-log-3D","(logdev)","",null,1],["log_level","Rails::Application::Configuration","Ruby/classes/Rails/Application/Configuration.html#method-i-log_level","()","",null,0],["log_path","Rails::Server","Ruby/classes/Rails/Server.html#method-i-log_path","()","",null,0],["log_process_action","ActiveRecord::Railties::ControllerRuntime::ClassMethods","Ruby/classes/ActiveRecord/Railties/ControllerRuntime/ClassMethods.html#method-i-log_process_action","(payload)","",null,0],["log_subscribers","ActiveSupport::LogSubscriber","Ruby/classes/ActiveSupport/LogSubscriber.html#method-c-log_subscribers","()","",null,0],["logger","ActionController::LogSubscriber","Ruby/classes/ActionController/LogSubscriber.html#method-i-logger","()","",null,0],["logger","ActionMailer::LogSubscriber","Ruby/classes/ActionMailer/LogSubscriber.html#method-i-logger","()","",null,0],["logger","ActionView::LogSubscriber","Ruby/classes/ActionView/LogSubscriber.html#method-i-logger","()","<p>TODO: Ideally, ActionView should have its own logger so it does not depend\non AC.logger\n",null,0],["logger","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-logger","","<p>Accepts a logger conforming to the interface of Log4r or the default Ruby\n1.8+ Logger class, which is …\n",null,0],["logger","ActiveRecord::LogSubscriber","Ruby/classes/ActiveRecord/LogSubscriber.html#method-i-logger","()","",null,0],["logger","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-logger","","<p>The logger for diagnosing and tracing Active Resource calls.\n",null,0],["logger","ActiveResource::LogSubscriber","Ruby/classes/ActiveResource/LogSubscriber.html#method-i-logger","()","",null,0],["logger","ActiveSupport::LogSubscriber","Ruby/classes/ActiveSupport/LogSubscriber.html#method-c-logger","()","",null,0],["logger","Rails","Ruby/classes/Rails.html#method-c-logger","()","",null,0],["logger","Logger::Application","Rails/classes/Logger/Application.html#method-i-logger","()","<p>Logger for this application.  See the class Logger for an explanation.\n",null,1],["logger=","Rails","Ruby/classes/Rails.html#method-c-logger-3D","(logger)","",null,0],["logger=","Logger::Application","Rails/classes/Logger/Application.html#method-i-logger-3D","(logger)","<p>Sets the logger for this application.  See the class Logger for an\nexplanation.\n",null,1],["logger?","ActiveModel::MassAssignmentSecurity::LoggerSanitizer","Ruby/classes/ActiveModel/MassAssignmentSecurity/LoggerSanitizer.html#method-i-logger-3F","()","",null,0],["logging","Net::POP3","Rails/classes/Net/POP3.html#method-i-logging","(msg)","<p>deguging output for <code>msg</code>\n",null,1],["logging","Net::POP3","Rails/classes/Net/POP3.html#method-i-logging","(msg)","<p>deguging output for <code>msg</code>\n",null,1],["logging","Net::POP3","Rails/classes/Net/POP3.html#method-i-logging","(msg)","<p>deguging output for <code>msg</code>\n",null,1],["logging","Net::POP3","Rails/classes/Net/POP3.html#method-i-logging","(msg)","<p>deguging output for <code>msg</code>\n",null,1],["login","Net::FTP","Rails/classes/Net/FTP.html#method-i-login","(user = \"anonymous\", passwd = nil, acct = nil)","<p>Logs in to the remote host. The session must have been previously\nconnected.  If <code>user</code> is the string “anonymous” …\n",null,1],["login","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-login","(user, password)","<p>Sends a LOGIN command to identify the client and carries the plaintext\n<code>password</code> authenticating this  …\n",null,1],["login","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-login","(options, password = nil)","<p>Login to the host with a given username and password.\n<p>The username and password can either be provided …\n",null,1],["logo","RSS::Maker::ChannelBase","Rails/classes/RSS/Maker/ChannelBase.html#method-i-logo","()","",null,1],["logo=","RSS::Maker::ChannelBase","Rails/classes/RSS/Maker/ChannelBase.html#method-i-logo-3D","(url)","",null,1],["logout","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-logout","()","<p>Sends a LOGOUT command to inform the server that the client is done with\nthe connection.\n",null,1],["look_for_directives_in","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-look_for_directives_in","(context, comment)","<p>Look for directives in a normal comment block:\n\n<pre>* :title: My Awesome Project</pre>\n<p>This method modifies the <code>comment</code> …\n",null,1],["look_for_directives_in","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-look_for_directives_in","(context, comment)","<p>Look for directives in a normal comment block:\n\n<pre># :stopdoc:\n# Don't display comment from this point forward</pre>\n",null,1],["lookup","Mime::Type","Ruby/classes/Mime/Type.html#method-c-lookup","(string)","",null,0],["lookup","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-i-lookup","(name)","",null,1],["lookup","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-lookup","(task_name, initial_scope=nil)","<p>Lookup a task, using scope and the scope hints in the task name. This\nmethod performs straight lookups …\n",null,1],["lookup_ancestors","ActiveModel::Translation","Ruby/classes/ActiveModel/Translation.html#method-i-lookup_ancestors","()","<p>When localizing a string, it goes through the lookup returned by this\nmethod, which is used in ActiveModel::Name#human …\n",null,0],["lookup_by_extension","Mime::Type","Ruby/classes/Mime/Type.html#method-c-lookup_by_extension","(extension)","",null,0],["lookup_context","AbstractController::ViewPaths","Ruby/classes/AbstractController/ViewPaths.html#method-i-lookup_context","()","<p>LookupContext is the object responsible to hold all information required to\nlookup templates, i.e. view …\n",null,0],["lookup_ring","Rinda::RingFinger","Rails/classes/Rinda/RingFinger.html#method-i-lookup_ring","(timeout=5, &block)","<p>Looks up RingServers waiting <code>timeout</code> seconds.  RingServers\nwill be given <code>block</code> as a callback, which will …\n",null,1],["lookup_ring_any","Rinda::RingFinger","Rails/classes/Rinda/RingFinger.html#method-i-lookup_ring_any","(timeout=5)","<p>Returns the first found remote TupleSpace.  Any further recovered\nTupleSpaces can be found by calling …\n",null,1],["lookup_server","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-lookup_server","(req)","<p>Finds the appropriate virtual host to handle <code>req</code>\n",null,1],["lookup_store","ActiveSupport::Cache","Ruby/classes/ActiveSupport/Cache.html#method-c-lookup_store","(*store_option)","<p>Creates a new CacheStore object according to the given options.\n<p>If no arguments are passed to this method, …\n",null,0],["loop","Kernel","Rails/classes/Kernel.html#method-i-loop","()","<p>Repeatedly executes the block.\n<p>If no block is given, an enumerator is returned instead.\n\n<pre>loop do\n  print ...</pre>\n",null,1],["lower","Win32::SSPI::SecurityHandle","Rails/classes/Win32/SSPI/SecurityHandle.html#method-i-lower","()","",null,1],["lower_triangular?","Matrix","Rails/classes/Matrix.html#method-i-lower_triangular-3F","()","<p>Returns <code>true</code> is this is a lower triangular matrix.\n",null,1],["ls","RecursiveHTTPFetcher","Ruby/classes/RecursiveHTTPFetcher.html#method-i-ls","()","",null,0],["ls","Net::FTP","Rails/classes/Net/FTP.html#method-i-ls","(*args)","",null,1],["lstat","File","Rails/classes/File.html#method-i-lstat","()","<p>Same as <code>IO#stat</code>, but does not follow the last symbolic link.\nInstead, reports on the link itself.\n\n<pre>File.symlink(&quot;testfile&quot;, ...</pre>\n",null,1],["lstat","File","Rails/classes/File.html#method-c-lstat","(p1)","<p>Same as <code>File::stat</code>, but does not follow the last symbolic\nlink. Instead, reports on the link itself. …\n",null,1],["lstat","Pathname","Rails/classes/Pathname.html#method-i-lstat","()","<p>See <code>File.lstat</code>.\n",null,1],["lstrip","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-lstrip","()","<p>Strips entire range of Unicode whitespace from the left of the string.\n",null,0],["lstrip","String","Rails/classes/String.html#method-i-lstrip","()","<p>Returns a copy of <em>str</em> with leading whitespace removed. See also\n<code>String#rstrip</code> and <code>String#strip</code>.\n\n<pre>&quot;  hello ...</pre>\n",null,1],["lstrip!","String","Rails/classes/String.html#method-i-lstrip-21","()","<p>Removes leading whitespace from <em>str</em>, returning <code>nil</code> if\nno change was made. See also <code>String#rstrip!</code> and …\n",null,1],["lsub","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-lsub","(refname, mailbox)","<p>Sends a LSUB command, and returns a subset of names from the set of names\nthat the user has declared …\n",null,1],["ludecomp","LUSolve","Rails/classes/LUSolve.html#method-i-ludecomp","(a,n,zero=0,one=1)","<p>Performs LU decomposition of the n by n matrix a.\n",null,1],["lup","Matrix","Rails/classes/Matrix.html#method-i-lup","()","<p>Returns the LUP decomposition of the matrix; see\n<code>LUPDecomposition</code>.\n\n<pre>a = Matrix[[1, 2], [3, 4]]\nl, u, p ...</pre>\n",null,1],["lup_decomposition","Matrix","Rails/classes/Matrix.html#method-i-lup_decomposition","()","",null,1],["lusolve","LUSolve","Rails/classes/LUSolve.html#method-i-lusolve","(a,b,ps,zero=0.0)","<p>Solves a*x = b for x, using LU decomposition.\n<p>a is a matrix, b is a constant vector, x is the solution …\n",null,1],["magnitude","Bignum","Rails/classes/Bignum.html#method-i-magnitude","()","<p>Returns the absolute value of <em>big</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-1234567890987654321</span>.<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 1234567890987654321</span>\n</pre>\n",null,1],["magnitude","Complex","Rails/classes/Complex.html#method-i-magnitude","()","<p>Returns the absolute part of its polar form.\n",null,1],["magnitude","Fixnum","Rails/classes/Fixnum.html#method-i-magnitude","()","<p>Returns the absolute value of <em>fix</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-12345</span>.<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 12345</span>\n<span class=\"ruby-value\">12345</span>.<span class=\"ruby-identifier\">abs</span>    <span class=\"ruby-comment\">#=&gt; 12345</span>\n</pre>\n",null,1],["magnitude","Float","Rails/classes/Float.html#method-i-magnitude","()","<p>Returns the absolute value of <em>flt</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">-34.56</span>).<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 34.56</span>\n<span class=\"ruby-value\">-34.56</span>.<span class=\"ruby-identifier\">abs</span>     <span class=\"ruby-comment\">#=&gt; 34.56</span>\n</pre>\n",null,1],["magnitude","Numeric","Rails/classes/Numeric.html#method-i-magnitude","()","<p>Returns the absolute value of <em>num</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">12</span>.<span class=\"ruby-identifier\">abs</span>         <span class=\"ruby-comment\">#=&gt; 12</span>\n(<span class=\"ruby-value\">-34.56</span>).<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 34.56</span>\n<span class=\"ruby-value\">-34.56</span>.<span class=\"ruby-identifier\">abs</span>     <span class=\"ruby-comment\">#=&gt; 34.56</span>\n</pre>\n",null,1],["magnitude","Vector","Rails/classes/Vector.html#method-i-magnitude","()","<p>Returns the modulus (Pythagorean distance) of the vector.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Vector</span>[<span class=\"ruby-value\">5</span>,<span class=\"ruby-value\">8</span>,<span class=\"ruby-value\">2</span>].<span class=\"ruby-identifier\">r</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">9.643650761</span>\n</pre>\n",null,1],["mail","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-i-mail","(headers={}, &block)","<p>The main method that creates the message and renders the email templates.\nThere are two ways to call …\n",null,0],["mail","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-mail","( dest = '' )","",null,1],["mail_to","ActionView::Helpers::UrlHelper","Ruby/classes/ActionView/Helpers/UrlHelper.html#method-i-mail_to","(email_address, name = nil, html_options = {})","<p>Creates a mailto link tag to the specified <code>email_address</code>,\nwhich is also used as the name of the link …\n",null,0],["mailer","ActionMailer::MailHelper","Ruby/classes/ActionMailer/MailHelper.html#method-i-mailer","()","<p>Access the mailer instance.\n",null,0],["mailer_name","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-c-mailer_name","()","",null,0],["mailer_name","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-i-mailer_name","()","",null,0],["mailfrom","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-mailfrom","(from_addr)","",null,1],["mailfrom","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-mailfrom","(from_addr)","",null,1],["mails","Net::POP3","Rails/classes/Net/POP3.html#method-i-mails","()","<p>Returns an array of Net::POPMail objects, representing all the messages on\nthe server.  This array is …\n",null,1],["mails","Net::POP3","Rails/classes/Net/POP3.html#method-i-mails","()","<p>Returns an array of Net::POPMail objects, representing all the messages on\nthe server.  This array is …\n",null,1],["mails","Net::POP3","Rails/classes/Net/POP3.html#method-i-mails","()","<p>Returns an array of Net::POPMail objects, representing all the messages on\nthe server.  This array is …\n",null,1],["mails","Net::POP3","Rails/classes/Net/POP3.html#method-i-mails","()","<p>Returns an array of Net::POPMail objects, representing all the messages on\nthe server.  This array is …\n",null,1],["main","IRB::Context","Rails/classes/IRB/Context.html#method-i-main","()","",null,1],["main","Thread","Rails/classes/Thread.html#method-c-main","()","<p>Returns the main thread.\n",null,1],["main_irb","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-main_irb","()","",null,1],["main_thread","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-main_thread","()","",null,1],["main_type","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-main_type","()","<p>Returns a content type string such as “text”. This method returns nil if\nContent-Type: header …\n",null,1],["major_version","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-major_version","()","<p>Returns major version.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Word 10.0 Object Library', 'Documents')\nputs ...</pre>\n",null,1],["major_version","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-major_version","()","<p>Returns the type library major version.\n\n<pre>tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library') ...</pre>\n",null,1],["make","Gem::Ext::Builder","Rails/classes/Gem/Ext/Builder.html#method-c-make","(dest_path, results)","",null,1],["make","RSS::Maker","Rails/classes/RSS/Maker.html#method-c-make","(version, &block)","",null,1],["make","RSS::Maker::RSSBase","Rails/classes/RSS/Maker/RSSBase.html#method-i-make","()","",null,1],["make","RSS::Maker::RSSBase","Rails/classes/RSS/Maker/RSSBase.html#method-c-make","(*args, &block)","",null,1],["make_affine!","OpenSSL::PKey::EC::Point","Rails/classes/OpenSSL/PKey/EC/Point.html#method-i-make_affine-21","()","",null,1],["make_destination_dirs","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-i-make_destination_dirs","(install_destdir)","",null,1],["make_expires","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-make_expires","(sec=nil)","<p>Returns an expiry Time based on <code>sec</code> which can be one of:\n<p>Numeric &mdash; <code>sec</code> seconds into the future\n<p><code>true</code> &mdash; the expiry …\n",null,1],["make_link","Pathname","Rails/classes/Pathname.html#method-i-make_link","(p1)","<p>See <code>File.link</code>.  Creates a hard link at <em>pathname</em>.\n",null,1],["make_message","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-make_message","(message)","<p>Adds useful info about the parser to <code>message</code>\n",null,1],["make_partial_content","WEBrick::HTTPServlet::DefaultFileHandler","Rails/classes/WEBrick/HTTPServlet/DefaultFileHandler.html#method-i-make_partial_content","(req, res, filename, filesize)","",null,1],["make_passwd","WEBrick::HTTPAuth::BasicAuth","Rails/classes/WEBrick/HTTPAuth/BasicAuth.html#method-c-make_passwd","(realm, user, pass)","<p>Used by UserDB to create a basic password entry\n",null,1],["make_passwd","WEBrick::HTTPAuth::DigestAuth","Rails/classes/WEBrick/HTTPAuth/DigestAuth.html#method-c-make_passwd","(realm, user, pass)","<p>Used by UserDB to create a digest password entry\n",null,1],["make_passwd","WEBrick::HTTPAuth::UserDB","Rails/classes/WEBrick/HTTPAuth/UserDB.html#method-i-make_passwd","(realm, user, pass)","<p>Creates an obscured password in <code>realm</code> with <code>user</code>\nand <code>password</code> using the auth_type of this database.\n",null,1],["make_regexp","URI::Parser","Rails/classes/URI/Parser.html#method-i-make_regexp","(schemes = nil)","<p>returns Regexp that is default self.regexp, unless <code>schemes</code> is\nprovided. Then it is a Regexp.union with …\n",null,1],["make_switch","OptionParser","Rails/classes/OptionParser.html#method-i-make_switch","(opts, block = nil)","<p>Creates an OptionParser::Switch from the parameters. The parsed argument\nvalue is passed to the given …\n",null,1],["make_symlink","Pathname","Rails/classes/Pathname.html#method-i-make_symlink","(p1)","<p>See <code>File.symlink</code>.  Creates a symbolic link.\n",null,1],["make_temp_directories","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-make_temp_directories","()","<p>Make directories for index generation\n",null,1],["make_thread_list","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-make_thread_list","()","",null,1],["make_tuple","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-make_tuple","(ary)","<p>Creates a Rinda::Tuple for <code>ary</code>.\n",null,1],["makedirs","FileUtils","Rails/classes/FileUtils.html#method-c-makedirs","(list, options = {})","",null,1],["makedirs","Rake::FtpUploader","Rails/classes/Rake/FtpUploader.html#method-i-makedirs","(path)","<p>Create the directory <code>path</code> in the uploader root path.\n",null,1],["makedirs","Sys","Rails/classes/Sys.html#method-i-makedirs","(*dirs)","<p>Make the directories given in <code>dirs</code>.\n",null,1],["maker_target","RSS::Atom::ContentModel","Rails/classes/RSS/Atom/ContentModel.html#method-i-maker_target","(target)","",null,1],["maker_target","RSS::Atom::Feed::Logo","Rails/classes/RSS/Atom/Feed/Logo.html#method-i-maker_target","(target)","",null,1],["maker_target","RSS::Atom::PersonConstruct","Rails/classes/RSS/Atom/PersonConstruct.html#method-i-maker_target","(target)","",null,1],["maker_target","RSS::TaxonomyTopicModel::TaxonomyTopic","Rails/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html#method-i-maker_target","(target)","",null,1],["maker_target","RSS::TaxonomyTopicsModel::TaxonomyTopics","Rails/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-i-maker_target","(target)","",null,1],["makers","RSS::Maker","Rails/classes/RSS/Maker.html#method-c-makers","()","",null,1],["malloc","DL","Rails/classes/DL.html#method-c-malloc","(p1)","<p>Allocate <code>size</code> bytes of memory and return the integer memory\naddress for the allocated memory.\n",null,1],["malloc","DL::CPtr","Rails/classes/DL/CPtr.html#method-c-malloc","(p1, p2 = v2)","<p>Allocate <code>size</code> bytes of memory and associate it with an\noptional <code>freefunc</code> that will be called when the …\n",null,1],["malloc","DL::CPtr","Rails/classes/DL/CPtr.html#method-c-malloc","(p1, p2 = v2)","<p>Allocate <code>size</code> bytes of memory and associate it with an\noptional <code>freefunc</code> that will be called when the …\n",null,1],["malloc","DL::CStructEntity","Rails/classes/DL/CStructEntity.html#method-c-malloc","(types, func = nil)","",null,1],["malloc","DL::CUnionEntity","Rails/classes/DL/CUnionEntity.html#method-c-malloc","(types, func=nil)","",null,1],["malloc_allocated_size","GC","Rails/classes/GC.html#method-c-malloc_allocated_size","()","<p>The allocated size by malloc().\n<p>It returns the allocated size by malloc().\n",null,1],["malloc_allocations","GC","Rails/classes/GC.html#method-c-malloc_allocations","()","<p>The number of allocated memory object by malloc().\n<p>It returns the number of allocated memory object by …\n",null,1],["manage_owners","Gem::Commands::OwnerCommand","Rails/classes/Gem/Commands/OwnerCommand.html#method-i-manage_owners","(method, name, owners)","",null,1],["many?","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-many-3F","()","",null,0],["many?","Enumerable","Ruby/classes/Enumerable.html#method-i-many-3F","()","<p>Returns true if the enumerable has more than 1 element. Functionally\nequivalent to enum.to_a.size &gt; …\n",null,0],["map","Array","Rails/classes/Array.html#method-i-map","()","<p>Invokes <em>block</em> once for each element of <code>self</code>. Creates\na new array containing the values returned by the …\n",null,1],["map","Enumerable","Rails/classes/Enumerable.html#method-i-map","()","<p>Returns a new array with the results of running <em>block</em> once for\nevery element in <em>enum</em>.\n<p>If no block is given, …\n",null,1],["map","Matrix","Rails/classes/Matrix.html#method-i-map","()","",null,1],["map","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-map","(tag = @tag, style = @style)","<p>Emit a map.  The coder will be yielded to the block.\n",null,1],["map","Vector","Rails/classes/Vector.html#method-i-map","()","",null,1],["map!","Array","Rails/classes/Array.html#method-i-map-21","()","<p>Invokes the block once for each element of <code>self</code>, replacing the\nelement with the value returned by <em>block</em> …\n",null,1],["map!","Set","Rails/classes/Set.html#method-i-map-21","()","",null,1],["map2","Vector","Rails/classes/Vector.html#method-i-map2","(v)","<p>Like Vector#collect2, but returns a Vector instead of an Array.\n",null,1],["map=","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-map-3D","(map)","<p>Emit a map with <code>value</code>\n",null,1],["map_gems_to_specs","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-map_gems_to_specs","(gems)","",null,1],["mark","Psych::Parser","Rails/classes/Psych/Parser.html#method-i-mark","()","<p>Returns a Psych::Parser::Mark object that contains line, column, and index\ninformation.\n",null,1],["mark_for_destruction","ActiveRecord::AutosaveAssociation","Ruby/classes/ActiveRecord/AutosaveAssociation.html#method-i-mark_for_destruction","()","<p>Marks this record to be destroyed as part of the parents save transaction.\nThis does <em>not</em> actually destroy …\n",null,0],["mark_version","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-mark_version","()","<p>Sets the rubygems_version to the current RubyGems version.\n",null,1],["marked_for_destruction?","ActiveRecord::AutosaveAssociation","Ruby/classes/ActiveRecord/AutosaveAssociation.html#method-i-marked_for_destruction-3F","()","<p>Returns whether or not this record will be destroyed as part of the parents\nsave transaction.\n<p>Only useful …\n",null,0],["markup","RDoc::Text","Rails/classes/RDoc/Text.html#method-i-markup","(text)","<p>Convert a string in markup format into HTML.\n<p>Requires the including class to implement #formatter\n",null,1],["markup_code","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-i-markup_code","()","<p>Turns the method’s token stream into HTML.\n<p>Prepends line numbers if <code>add_line_numbers</code> is true.\n",null,1],["marshal_dump","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-marshal_dump","()","",null,0],["marshal_dump","Delegator","Rails/classes/Delegator.html#method-i-marshal_dump","()","<p>Serialization support for the object returned by __getobj__.\n",null,1],["marshal_dump","Gem::Version","Rails/classes/Gem/Version.html#method-i-marshal_dump","()","<p>Dump only the raw version string, not the complete object. It’s a string\nfor backwards (RubyGems 1.3.5 …\n",null,1],["marshal_dump","OpenStruct","Rails/classes/OpenStruct.html#method-i-marshal_dump","()","<p>Provides marshalling support for use by the Marshal library. Returning the\nunderlying Hash table that …\n",null,1],["marshal_dump","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-i-marshal_dump","()","<p>Dumps this AnyMethod for use by ri.  See also #marshal_load\n",null,1],["marshal_dump","RDoc::Attr","Rails/classes/RDoc/Attr.html#method-i-marshal_dump","()","<p>Dumps this Attr for use by ri.  See also #marshal_load\n",null,1],["marshal_dump","Time","Rails/classes/Time.html#method-i-marshal_dump","()","<p>undocumented\n",null,1],["marshal_load","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-marshal_load","(variables)","",null,0],["marshal_load","Delegator","Rails/classes/Delegator.html#method-i-marshal_load","(data)","<p>Reinitializes delegation from a serialized object.\n",null,1],["marshal_load","Gem::Version","Rails/classes/Gem/Version.html#method-i-marshal_load","(array)","<p>Load custom marshal format. It’s a string for backwards (RubyGems 1.3.5 and\nearlier) compatibility.\n",null,1],["marshal_load","OpenStruct","Rails/classes/OpenStruct.html#method-i-marshal_load","(x)","<p>Provides marshalling support for use by the Marshal library. Accepting a\nHash of keys and values which …\n",null,1],["marshal_load","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-i-marshal_load","(array)","<p>Loads this AnyMethod from <code>array</code>.  For a loaded AnyMethod the\nfollowing methods will return cached values: …\n",null,1],["marshal_load","RDoc::Attr","Rails/classes/RDoc/Attr.html#method-i-marshal_load","(array)","<p>Loads this Attr from <code>array</code>.  For a loaded Attr the following\nmethods will return cached values:\n<p>#full_name …\n",null,1],["marshal_load","Time","Rails/classes/Time.html#method-i-marshal_load","(p1)","<p>undocumented\n",null,1],["marshal_version","Gem","Rails/classes/Gem.html#method-c-marshal_version","()","<p>The version of the Marshal format for your Ruby.\n",null,1],["mask","IPAddr","Rails/classes/IPAddr.html#method-i-mask","(prefixlen)","<p>Returns a new ipaddr built by masking IP address with the given\nprefixlen/netmask. (e.g. 8, 64, “ …\n",null,1],["mask","Syslog","Rails/classes/Syslog.html#method-c-mask","()","<p>Returns the log priority mask in effect. The mask is not reset by opening\nor closing syslog.\n",null,1],["mask!","IPAddr","Rails/classes/IPAddr.html#method-i-mask-21","(mask)","<p>Set current netmask to given mask.\n",null,1],["mask=","Syslog","Rails/classes/Syslog.html#method-c-mask-3D","(p1)","<p>Sets the log priority mask. A method LOG_UPTO is defined to make it easier\nto set mask values. Example: …\n",null,1],["mask_protected_sequences","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-mask_protected_sequences","()","<p>Escapes special sequences of text to prevent conversion to RDoc\n",null,1],["mass_assignment_authorizer","ActiveModel::MassAssignmentSecurity","Ruby/classes/ActiveModel/MassAssignmentSecurity.html#method-i-mass_assignment_authorizer","(role)","",null,0],["mass_assignment_options","ActiveRecord::AttributeAssignment","Ruby/classes/ActiveRecord/AttributeAssignment.html#method-i-mass_assignment_options","()","",null,0],["mass_assignment_role","ActiveRecord::AttributeAssignment","Ruby/classes/ActiveRecord/AttributeAssignment.html#method-i-mass_assignment_role","()","",null,0],["mass_assignment_sanitizer=","ActiveModel::MassAssignmentSecurity::ClassMethods","Ruby/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-mass_assignment_sanitizer-3D","(value)","",null,0],["match","ActionDispatch::Routing::Mapper::Base","Ruby/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-match","(path, options=nil)","<p>Matches a url pattern to one or more routes. Any symbols in a pattern are\ninterpreted as url query parameters …\n",null,0],["match","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-match","(path, *rest)","",null,0],["match","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#method-i-match","(method_name)","",null,0],["match","ActiveRecord::DynamicFinderMatch","Ruby/classes/ActiveRecord/DynamicFinderMatch.html#method-c-match","(method)","",null,0],["match","ActiveRecord::DynamicScopeMatch","Ruby/classes/ActiveRecord/DynamicScopeMatch.html#method-c-match","(method)","",null,0],["match","HTML::Selector","Ruby/classes/HTML/Selector.html#method-i-match","(element, first_only = false)","<p>Matches an element against the selector.\n<p>For a simple selector this method returns an array with the element …\n",null,0],["match","ACL::ACLEntry","Rails/classes/ACL/ACLEntry.html#method-i-match","(addr)","<p>Matches <code>addr</code> against this entry.\n",null,1],["match","ACL::ACLList","Rails/classes/ACL/ACLList.html#method-i-match","(addr)","<p>Matches <code>addr</code> against each ACLEntry in this list.\n",null,1],["match","Gem::Platform","Rails/classes/Gem/Platform.html#method-c-match","(platform)","",null,1],["match","IRB::SLex","Rails/classes/IRB/SLex.html#method-i-match","(token)","",null,1],["match","IRB::SLex::Node","Rails/classes/IRB/SLex/Node.html#method-i-match","(chrs, op = \"\")","<p>chrs: String\n\n<pre>character array\nio must have getc()/ungetc(); and ungetc() must be\nable to be called arbitrary ...</pre>\n",null,1],["match","OptionParser::CompletingHash","Rails/classes/OptionParser/CompletingHash.html#method-i-match","(key)","<p>Completion for hash key.\n",null,1],["match","REXML::IOSource","Rails/classes/REXML/IOSource.html#method-i-match","( pattern, cons=false )","",null,1],["match","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-match","(element, path, namespaces=EMPTY_HASH)","",null,1],["match","REXML::Source","Rails/classes/REXML/Source.html#method-i-match","(pattern, cons=false)","",null,1],["match","REXML::XPath","Rails/classes/REXML/XPath.html#method-c-match","(element, path=nil, namespaces=nil, variables={})","<p>Returns an array of nodes matching a given XPath.\n",null,1],["match","REXML::XPathParser","Rails/classes/REXML/XPathParser.html#method-i-match","( path_stack, nodeset )","",null,1],["match","Regexp","Rails/classes/Regexp.html#method-i-match","(p1, p2 = v2)","<p>Returns a <code>MatchData</code> object describing the match, or\n<code>nil</code> if there was no match. This is equivalent to …\n",null,1],["match","Rinda::Template","Rails/classes/Rinda/Template.html#method-i-match","(tuple)","<p>Matches this template against <code>tuple</code>.  The <code>tuple</code>\nmust be the same size as the template.  An element with …\n",null,1],["match","Rinda::TemplateEntry","Rails/classes/Rinda/TemplateEntry.html#method-i-match","(tuple)","<p>Matches this TemplateEntry against <code>tuple</code>.  See Template#match\nfor details on how a Template matches a …\n",null,1],["match","String","Rails/classes/String.html#method-i-match","(*args)","<p>Converts <em>pattern</em> to a <code>Regexp</code> (if it isn’t already\none), then invokes its <code>match</code> method on <em>str</em>.  If the …\n",null,1],["match","Symbol","Rails/classes/Symbol.html#method-i-match","(p1)","<p>Returns <code>sym.to_s =~ obj</code>.\n",null,1],["match?","ActionDispatch::FileHandler","Ruby/classes/ActionDispatch/FileHandler.html#method-i-match-3F","(path)","",null,0],["match?","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-match-3F","(name, version)","",null,1],["match?","StringScanner","Rails/classes/StringScanner.html#method-i-match-3F","(p1)","<p>Tests whether the given <code>pattern</code> is matched from the current\nscan pointer. Returns the length of the match, …\n",null,1],["match_io","IRB::SLex::Node","Rails/classes/IRB/SLex/Node.html#method-i-match_io","(io, op = \"\")","",null,1],["match_to","REXML::Source","Rails/classes/REXML/Source.html#method-i-match_to","( char, pattern )","",null,1],["match_to_consume","REXML::Source","Rails/classes/REXML/Source.html#method-i-match_to_consume","( char, pattern )","",null,1],["matched","StringScanner","Rails/classes/StringScanner.html#method-i-matched","()","<p>Returns the last matched string.\n\n<pre>s = StringScanner.new('test string')\ns.match?(/\\w+/)     # -&gt; 4\ns.matched ...</pre>\n",null,1],["matched?","StringScanner","Rails/classes/StringScanner.html#method-i-matched-3F","()","<p>Returns <code>true</code> iff the last match was successful.\n\n<pre>s = StringScanner.new('test string')\ns.match?(/\\w+/)  ...</pre>\n",null,1],["matched_size","StringScanner","Rails/classes/StringScanner.html#method-i-matched_size","()","<p>Returns the size of the most recent match (see #matched), or\n<code>nil</code> if there was no recent match.\n\n<pre>s = StringScanner.new('test ...</pre>\n",null,1],["matches?","REXML::Entity","Rails/classes/REXML/Entity.html#method-c-matches-3F","(string)","<p>Evaluates whether the given string matchs an entity definition, returning\ntrue if so, and false otherwise. …\n",null,1],["matches?","REXML::Validation::Choice","Rails/classes/REXML/Validation/Choice.html#method-i-matches-3F","( event )","",null,1],["matches?","REXML::Validation::Event","Rails/classes/REXML/Validation/Event.html#method-i-matches-3F","( event )","",null,1],["matches?","REXML::Validation::Interleave","Rails/classes/REXML/Validation/Interleave.html#method-i-matches-3F","( event )","",null,1],["matches?","REXML::Validation::OneOrMore","Rails/classes/REXML/Validation/OneOrMore.html#method-i-matches-3F","( event )","",null,1],["matches?","REXML::Validation::Optional","Rails/classes/REXML/Validation/Optional.html#method-i-matches-3F","(event)","",null,1],["matches?","REXML::Validation::Sequence","Rails/classes/REXML/Validation/Sequence.html#method-i-matches-3F","(event)","",null,1],["matches_for_glob","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-matches_for_glob","(glob)","<p>Return all files in this gem that match for <code>glob</code>.\n",null,1],["matches_spec?","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-matches_spec-3F","(spec)","",null,1],["matching_file?","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-matching_file-3F","(spec, path)","<p>Attempts to find a matching path using the require_paths of the given\n<code>spec</code>.\n",null,1],["matching_files","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-matching_files","(spec, path)","<p>Returns files matching <code>path</code> in <code>spec</code>.\n",null,1],["matching_paths","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-i-matching_paths","(spec, path)","",null,1],["matching_specs","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-matching_specs","(platform_only = false)","",null,1],["math_mode=","IRB::Context","Rails/classes/IRB/Context.html#method-i-math_mode-3D","(opt)","",null,1],["mattr_accessor","Module","Ruby/classes/Module.html#method-i-mattr_accessor","(*syms)","<p>Extends the module object with module and instance accessors for class\nattributes, just like the native …\n",null,0],["mattr_reader","Module","Ruby/classes/Module.html#method-i-mattr_reader","(*syms)","",null,0],["mattr_writer","Module","Ruby/classes/Module.html#method-i-mattr_writer","(*syms)","",null,0],["max","Enumerable","Rails/classes/Enumerable.html#method-i-max","()","<p>Returns the object in <em>enum</em> with the maximum value. The first form\nassumes all objects implement <code>Comparable</code> …\n",null,1],["max","Range","Rails/classes/Range.html#method-i-max","()","<p>Returns the maximum value in <em>rng</em>. The second uses the block to\ncompare values.  Returns nil if the first …\n",null,1],["max","SizedQueue","Rails/classes/SizedQueue.html#method-i-max","()","<p>Returns the maximum size of the queue.\n",null,1],["max=","SizedQueue","Rails/classes/SizedQueue.html#method-i-max-3D","(max)","<p>Sets the maximum size of the queue.\n",null,1],["max_by","Enumerable","Rails/classes/Enumerable.html#method-i-max_by","()","<p>Returns the object in <em>enum</em> that gives the maximum value from the\ngiven block.\n<p>If no block is given, an …\n",null,1],["max_flag_count","Net::IMAP","Rails/classes/Net/IMAP.html#method-c-max_flag_count","()","<p>Returns the max number of flags interned to symbols.\n",null,1],["max_flag_count=","Net::IMAP","Rails/classes/Net/IMAP.html#method-c-max_flag_count-3D","(count)","<p>Sets the max number of flags interned to symbols.\n",null,1],["maxgroups","Process","Rails/classes/Process.html#method-c-maxgroups","()","<p>Returns the maximum number of gids allowed in the supplemental group access\nlist.\n\n<pre>Process.maxgroups   ...</pre>\n",null,1],["maxgroups=","Process","Rails/classes/Process.html#method-c-maxgroups-3D","(p1)","<p>Sets the maximum number of gids allowed in the supplemental group access\nlist.\n",null,1],["maximum","ActiveRecord::Calculations","Ruby/classes/ActiveRecord/Calculations.html#method-i-maximum","(column_name, options = {})","<p>Calculates the maximum value on a given column. The value is returned with\nthe same data type of the …\n",null,0],["maxx","Curses::Window","Rails/classes/Curses/Window.html#method-i-maxx","()","<p>A getter for the maximum columns for the window\n",null,1],["maxy","Curses::Window","Rails/classes/Curses/Window.html#method-i-maxy","()","<p>A getter for the maximum lines for the window\n",null,1],["mb_chars","String","Ruby/classes/String.html#method-i-mb_chars","()","<p>Multibyte proxy\n<p><code>mb_chars</code> is a multibyte safe proxy for string methods.\n<p>In Ruby 1.8 and older it creates …\n",null,0],["mday","Date","Rails/classes/Date.html#method-i-mday","()","<p>Returns the day of the month (1-31).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">mday</span>           <span class=\"ruby-comment\">#=&gt; 3</span>\n</pre>\n",null,1],["mday","Time","Rails/classes/Time.html#method-i-mday","()","<p>Returns the day of the month (1..n) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:27:03 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">day</span>      <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["mdtm","Net::FTP","Rails/classes/Net/FTP.html#method-i-mdtm","(filename)","<p>Issues the MDTM command.  TODO: more info.\n",null,1],["measure","Benchmark","Rails/classes/Benchmark.html#method-c-measure","(label = \"\")","<p>Returns the time used to execute the given block as a Benchmark::Tms\nobject.\n",null,1],["media_subtype","Net::IMAP::BodyTypeBasic","Rails/classes/Net/IMAP/BodyTypeBasic.html#method-i-media_subtype","()","<p>Obsolete: use <code>subtype</code> instead.  Calling this will generate a\nwarning message to <code>stderr</code>, then return the …\n",null,1],["media_subtype","Net::IMAP::BodyTypeMessage","Rails/classes/Net/IMAP/BodyTypeMessage.html#method-i-media_subtype","()","<p>Obsolete: use <code>subtype</code> instead.  Calling this will generate a\nwarning message to <code>stderr</code>, then return the …\n",null,1],["media_subtype","Net::IMAP::BodyTypeMultipart","Rails/classes/Net/IMAP/BodyTypeMultipart.html#method-i-media_subtype","()","<p>Obsolete: use <code>subtype</code> instead.  Calling this will generate a\nwarning message to <code>stderr</code>, then return the …\n",null,1],["media_subtype","Net::IMAP::BodyTypeText","Rails/classes/Net/IMAP/BodyTypeText.html#method-i-media_subtype","()","<p>Obsolete: use <code>subtype</code> instead.  Calling this will generate a\nwarning message to <code>stderr</code>, then return the …\n",null,1],["media_type","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-media_type","()","",null,0],["megabyte","Numeric","Ruby/classes/Numeric.html#method-i-megabyte","()","",null,0],["megabytes","Numeric","Ruby/classes/Numeric.html#method-i-megabytes","()","",null,0],["member","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-member","()","<p>To add a member route, add a member block into the resource block:\n\n<pre>resources :photos do\n  member do\n  ...</pre>\n",null,0],["member?","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-member-3F","(key)","",null,0],["member?","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-member-3F","(key)","",null,0],["member?","DBM","Rails/classes/DBM.html#method-i-member-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n",null,1],["member?","ENV","Rails/classes/ENV.html#method-c-member-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,1],["member?","Enumerable","Rails/classes/Enumerable.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if any member of <em>enum</em> equals\n<em>obj</em>. Equality is tested using <code>==</code>.\n\n<pre>IO.constants.include? :SEEK_SET ...</pre>\n",null,1],["member?","GDBM","Rails/classes/GDBM.html#method-i-member-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n",null,1],["member?","Hash","Rails/classes/Hash.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_key?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["member?","Rake::InvocationChain","Rails/classes/Rake/InvocationChain.html#method-i-member-3F","(obj)","",null,1],["member?","Rake::InvocationChain::EmptyInvocationChain","Rails/classes/Rake/InvocationChain/EmptyInvocationChain.html#method-i-member-3F","(obj)","",null,1],["member?","Range","Rails/classes/Range.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if <em>obj</em> is an element of <em>rng</em>,\n<code>false</code> otherwise.  If beg and end are numeric, comparison is …\n",null,1],["member?","SDBM","Rails/classes/SDBM.html#method-i-member-3F","(p1)","",null,1],["member?","Set","Rails/classes/Set.html#method-i-member-3F","(o)","",null,1],["members","Struct","Rails/classes/Struct.html#method-i-members","()","<p>Returns an array of strings representing the names of the instance\nvariables.\n\n<pre>Customer = Struct.new(:name, ...</pre>\n",null,1],["members","WEBrick::HTTPAuth::Htgroup","Rails/classes/WEBrick/HTTPAuth/Htgroup.html#method-i-members","(group)","<p>Retrieve the list of members from <code>group</code>\n",null,1],["memberwise","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-i-memberwise","(op, x)","<p>Returns a new Tms object obtained by memberwise operation <code>op</code>\nof the individual times for this Tms object …\n",null,1],["memoize","ActiveSupport::Memoizable","Ruby/classes/ActiveSupport/Memoizable.html#method-i-memoize","(*symbols)","",null,0],["memoize_all","ActiveSupport::Memoizable::InstanceMethods","Ruby/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-i-memoize_all","()","",null,0],["memoized_ivar_for","ActiveSupport::Memoizable","Ruby/classes/ActiveSupport/Memoizable.html#method-c-memoized_ivar_for","(symbol)","",null,0],["merge","ActiveRecord::SpawnMethods","Ruby/classes/ActiveRecord/SpawnMethods.html#method-i-merge","(r)","",null,0],["merge","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge","(hash)","<p>Merges the instantized and the specified hashes together, giving precedence\nto the values from the second …\n",null,0],["merge","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge","(hash)","<p>Merges the instantized and the specified hashes together, giving precedence\nto the values from the second …\n",null,0],["merge","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-merge","(other_hash, &block)","",null,0],["merge","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-merge","(other)","<p>Merges the requirements of <code>other</code> into this dependency\n",null,1],["merge","Hash","Rails/classes/Hash.html#method-i-merge","(p1)","<p>Returns a new hash containing the contents of <em>other_hash</em> and the\ncontents of <em>hsh</em>. If no block is specified, …\n",null,1],["merge","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-merge","(class_module)","<p>Merges <code>class_module</code> into this ClassModule.\n<p>The data in <code>class_module</code> is preferred over the receiver.\n",null,1],["merge","RDoc::Markup::Document","Rails/classes/RDoc/Markup/Document.html#method-i-merge","(other)","<p>When this is a collection of documents (#file is not set and this document\ncontains only other documents …\n",null,1],["merge","RDoc::Markup::Raw","Rails/classes/RDoc/Markup/Raw.html#method-i-merge","(other)","<p>Appends <code>other</code>‘s parts\n",null,1],["merge","Set","Rails/classes/Set.html#method-i-merge","(enum)","<p>Merges the elements of the given enumerable object to the set and returns\nself.\n",null,1],["merge","URI::Generic","Rails/classes/URI/Generic.html#method-i-merge","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,1],["merge!","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge-21","(other_hash)","",null,0],["merge!","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge-21","(other_hash)","",null,0],["merge!","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-merge-21","(other_hash)","",null,0],["merge!","Hash","Rails/classes/Hash.html#method-i-merge-21","(p1)","<p>Adds the contents of <em>other_hash</em> to <em>hsh</em>.  If no block is\nspecified, entries with duplicate keys are overwritten …\n",null,1],["merge!","URI::Generic","Rails/classes/URI/Generic.html#method-i-merge-21","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,1],["merge_options","Gem::Command","Rails/classes/Gem/Command.html#method-i-merge_options","(new_options)","<p>Merge a set of command options with the set of default options (without\nmodifying the default option …\n",null,1],["merged?","RDoc::Markup::Document","Rails/classes/RDoc/Markup/Document.html#method-i-merged-3F","()","<p>Does this Document contain other Documents?\n",null,1],["message","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-message","()","",null,0],["message","ActionMailer::MailHelper","Ruby/classes/ActionMailer/MailHelper.html#method-i-message","()","<p>Access the message instance.\n",null,0],["message","ActiveRecord::StaleObjectError","Ruby/classes/ActiveRecord/StaleObjectError.html#method-i-message","()","",null,0],["message","ActiveRecord::UnknownPrimaryKey","Ruby/classes/ActiveRecord/UnknownPrimaryKey.html#method-i-message","()","",null,0],["message","Exception","Rails/classes/Exception.html#method-i-message","()","<p>Returns the result of invoking <code>exception.to_s</code>. Normally this\nreturns the exception’s message or name. …\n",null,1],["message","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-message","(klass, exp)","",null,1],["message","Exception2MessageMapper","Rails/classes/Exception2MessageMapper.html#method-c-message","(klass, exp)","",null,1],["message","Net::SMTP::Response","Rails/classes/Net/SMTP/Response.html#method-i-message","()","<p>The first line of the human readable reply text\n",null,1],["message","OptionParser::ParseError","Rails/classes/OptionParser/ParseError.html#method-i-message","()","<p>Default stringizing method to emit standard error message.\n",null,1],["message","Rake::RuleRecursionOverflowError","Rails/classes/Rake/RuleRecursionOverflowError.html#method-i-message","()","",null,1],["message_loop","WIN32OLE_EVENT","Rails/classes/WIN32OLE_EVENT.html#method-c-message_loop","()","<p>Translates and dispatches Windows message.\n",null,1],["meta_vars","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-meta_vars","()","<p>This method provides the metavariables defined by the revision 3 of “The\nWWW Common Gateway Interface …\n",null,1],["method","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-method","()","<p>Returns the original value of the environment’s REQUEST_METHOD, even if it\nwas overridden by middleware. …\n",null,0],["method","Object","Rails/classes/Object.html#method-i-method","(p1)","<p>Looks up the named method as a receiver in <em>obj</em>, returning a\n<code>Method</code> object (or raising <code>NameError</code>). The …\n",null,1],["methodCall","XMLRPC::Create","Rails/classes/XMLRPC/Create.html#method-i-methodCall","(name, *params)","",null,1],["methodResponse","XMLRPC::Create","Rails/classes/XMLRPC/Create.html#method-i-methodResponse","(is_ret, *params)","<p>generates a XML-RPC methodResponse document\n<p>if is_ret == false then the params array must contain only …\n",null,1],["method_added","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-c-method_added","(name)","",null,0],["method_added","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-method_added","(id)","",null,1],["method_defined?","Module","Rails/classes/Module.html#method-i-method_defined-3F","(p1)","<p>Returns <code>true</code> if the named method is defined by <em>mod</em>\n(or its included modules and, if <em>mod</em> is a class, its …\n",null,1],["method_defined_within?","ActiveRecord::AttributeMethods::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-method_defined_within-3F","(name, klass, sup = klass.superclass)","",null,0],["method_document","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-method_document","(name, filtered)","<p>Builds a RDoc::Markup::Document from <code>found</code>,\n<code>klasess</code> and <code>includes</code>\n",null,1],["method_file","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-method_file","(klass_name, method_name)","<p>Path to the ri data for <code>method_name</code> in <code>klass_name</code>\n",null,1],["method_for_action","ActionController::Compatibility","Ruby/classes/ActionController/Compatibility.html#method-i-method_for_action","(action_name)","",null,0],["method_for_action","ActionController::ImplicitRender","Ruby/classes/ActionController/ImplicitRender.html#method-i-method_for_action","(action_name)","",null,0],["method_missing","AbstractController::Collector","Ruby/classes/AbstractController/Collector.html#method-i-method_missing","(symbol, &block)","",null,0],["method_missing","ActionDispatch::BodyProxy","Ruby/classes/ActionDispatch/BodyProxy.html#method-i-method_missing","(*args, &block)","",null,0],["method_missing","ActiveModel::AttributeMethods","Ruby/classes/ActiveModel/AttributeMethods.html#method-i-method_missing","(method, *args, &block)","<p>Allows access to the object attributes, which are held in the\n<code>@attributes</code> hash, as though they were first-class …\n",null,0],["method_missing","ActiveRecord::Delegation","Ruby/classes/ActiveRecord/Delegation.html#method-i-method_missing","(method, *args, &block)","",null,0],["method_missing","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-method_missing","(method, *arguments, &block)","",null,0],["method_missing","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-method_missing","(method, *args, &block)","<p>Forward all undefined methods to the wrapped string.\n",null,0],["method_missing","ActiveSupport::OrderedOptions","Ruby/classes/ActiveSupport/OrderedOptions.html#method-i-method_missing","(name, *args)","",null,0],["method_missing","ActiveSupport::StringInquirer","Ruby/classes/ActiveSupport/StringInquirer.html#method-i-method_missing","(method_name, *arguments)","",null,0],["method_missing","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-i-method_missing","(method, *args)","",null,0],["method_missing","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-method_missing","(sym, *args, &block)","<p>Send the missing method to <code>time</code> instance, and wrap result in a\nnew TimeWithZone with the existing <code>time_zone</code> …\n",null,0],["method_missing","Rails::Railtie::Configurable::ClassMethods","Ruby/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-method_missing","(*args, &block)","",null,0],["method_missing","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-i-method_missing","(msg_id, *a, &b)","<p>Routes method calls to the referenced object.\n",null,1],["method_missing","Delegator","Rails/classes/Delegator.html#method-i-method_missing","(m, *args, &block)","<p>Handles the magic of delegation through __getobj__.\n",null,1],["method_missing","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-method_missing","( id )","",null,1],["method_missing","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-method_missing","( id, *args )","",null,1],["method_missing","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-i-method_missing","(sym, *args, &block)","",null,1],["method_missing","WEBrick::FakeProxyURI","Rails/classes/WEBrick/FakeProxyURI.html#method-c-method_missing","(meth, *args)","",null,1],["method_missing","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-method_missing","(*args)","<p>Calls WIN32OLE#invoke method.\n",null,1],["method_missing","XMLRPC::Client::Proxy","Rails/classes/XMLRPC/Client/Proxy.html#method-i-method_missing","(mid, *args)","",null,1],["method_missing","XMLRPC::XMLParser::REXMLStreamParser::StreamListener","Rails/classes/XMLRPC/XMLParser/REXMLStreamParser/StreamListener.html#method-i-method_missing","(*a)","",null,1],["method_missing","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-method_missing","(*a)","",null,1],["method_name","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#method-i-method_name","(attr_name)","",null,0],["method_names","Module","Ruby/classes/Module.html#method-i-method_names","(*args)","",null,0],["method_symbol","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-method_symbol","()","<p>Returns a symbol form of the #method\n",null,0],["method_type","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-method_type","(selector)","<p>Returns the type of method (:both, :instance, :class) for\n<code>selector</code>\n",null,1],["methods","Delegator","Rails/classes/Delegator.html#method-i-methods","()","<p>Returns the methods available to this delegate object as the union of this\nobject’s and __getobj__ methods. …\n",null,1],["methods","Object","Rails/classes/Object.html#method-i-methods","(p1)","<p>Returns a list of the names of public and protected methods of\n<em>obj</em>. This will include all the methods …\n",null,1],["methods_by_type","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-methods_by_type","(section = nil)","<p>Breaks method_list into a nested hash by type (<code>'class'</code> or\n<code>'instance'</code>) and visibility (<code>:public</code>,\n<code>:protected</code> …\n",null,1],["methods_matching","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-methods_matching","(methods, singleton = false, &block)","<p>Yields AnyMethod and Attr entries matching the list of names in\n<code>methods</code>.\n",null,1],["middleware","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-c-middleware","()","<p>Alias for middleware_stack\n",null,0],["middleware","ActiveSupport::Cache::Strategy::LocalCache","Ruby/classes/ActiveSupport/Cache/Strategy/LocalCache.html#method-i-middleware","()","<p>Middleware class can be inserted as a Rack handler to be local cache for\nthe duration of request.\n",null,0],["middleware","Rails::Engine::Configuration","Ruby/classes/Rails/Engine/Configuration.html#method-i-middleware","()","<p>Returns the middleware stack for the engine.\n",null,0],["middleware","Rails::Server","Ruby/classes/Rails/Server.html#method-i-middleware","()","",null,0],["midnight","Date","Ruby/classes/Date.html#method-i-midnight","()","",null,0],["midnight","DateTime","Ruby/classes/DateTime.html#method-i-midnight","()","",null,0],["midnight","Time","Ruby/classes/Time.html#method-i-midnight","()","",null,0],["migrate","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-c-migrate","(direction)","",null,0],["migrate","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-migrate","(direction)","<p>Execute this migration in the named direction\n",null,0],["migration_template","Rails::Generators::Migration","Ruby/classes/Rails/Generators/Migration.html#method-i-migration_template","(source, destination=nil, config={})","<p>Creates a migration template at the given destination. The difference to\nthe default template method …\n",null,0],["migrations_paths","ActiveRecord::Schema","Ruby/classes/ActiveRecord/Schema.html#method-i-migrations_paths","()","",null,0],["mime_split","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-mime_split","()","",null,1],["mime_type","ActionView::Template","Ruby/classes/ActionView/Template.html#method-i-mime_type","()","",null,0],["mime_type","ActiveResource::Formats::JsonFormat","Ruby/classes/ActiveResource/Formats/JsonFormat.html#method-i-mime_type","()","",null,0],["mime_type","ActiveResource::Formats::XmlFormat","Ruby/classes/ActiveResource/Formats/XmlFormat.html#method-i-mime_type","()","",null,0],["mime_type","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-mime_type","(filename, mime_tab)","",null,1],["min","Enumerable","Rails/classes/Enumerable.html#method-i-min","()","<p>Returns the object in <em>enum</em> with the minimum value. The first form\nassumes all objects implement <code>Comparable</code> …\n",null,1],["min","Range","Rails/classes/Range.html#method-i-min","()","<p>Returns the minimum value in <em>rng</em>. The second uses the block to\ncompare values.  Returns nil if the first …\n",null,1],["min","Time","Rails/classes/Time.html#method-i-min","()","<p>Returns the minute of the hour (0..59) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:25:51 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">min</span>   <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["min=","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-min-3D","(value)","",null,1],["min_by","Enumerable","Rails/classes/Enumerable.html#method-i-min_by","()","<p>Returns the object in <em>enum</em> that gives the minimum value from the\ngiven block.\n<p>If no block is given, an …\n",null,1],["minimum","ActiveRecord::Calculations","Ruby/classes/ActiveRecord/Calculations.html#method-i-minimum","(column_name, options = {})","<p>Calculates the minimum value on a given column. The value is returned with\nthe same data type of the …\n",null,0],["minmax","Enumerable","Rails/classes/Enumerable.html#method-i-minmax","()","<p>Returns two elements array which contains the minimum and the maximum value\nin the enumerable.  The first …\n",null,1],["minmax_by","Enumerable","Rails/classes/Enumerable.html#method-i-minmax_by","()","<p>Returns two elements array array containing the objects in <em>enum</em>\nthat gives the minimum and maximum values …\n",null,1],["minor","Matrix","Rails/classes/Matrix.html#method-i-minor","(*param)","<p>Returns a section of the matrix.  The parameters are either:\n<p>start_row, nrows, start_col, ncols; OR\n<p>row_range …\n",null,1],["minor_version","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-minor_version","()","<p>Returns minor version.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Word 10.0 Object Library', 'Documents')\nputs ...</pre>\n",null,1],["minor_version","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-minor_version","()","<p>Returns the type library minor version.\n\n<pre>tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library') ...</pre>\n",null,1],["minus_with_coercion","Time","Ruby/classes/Time.html#method-i-minus_with_coercion","(other)","<p>Time#- can also be used to determine the number of seconds between two Time\ninstances. We’re layering …\n",null,0],["minus_without_coercion","Time","Ruby/classes/Time.html#method-i-minus_without_coercion","(other)","",null,0],["minus_without_duration","Time","Ruby/classes/Time.html#method-i-minus_without_duration","(other)","",null,0],["minute","Numeric","Ruby/classes/Numeric.html#method-i-minute","()","",null,0],["minute=","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-minute-3D","(minute)","",null,1],["minute=","RSS::Maker::ITunesItemModel::ITunesDurationBase","Rails/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html#method-i-minute-3D","(minute)","",null,1],["minutes","Numeric","Ruby/classes/Numeric.html#method-i-minutes","()","",null,0],["missing_name","NameError","Ruby/classes/NameError.html#method-i-missing_name","()","<p>Extract the name of the missing constant from the exception message.\n",null,0],["missing_name?","NameError","Ruby/classes/NameError.html#method-i-missing_name-3F","(name)","<p>Was this exception raised because the given name was missing?\n",null,0],["mjd","Date","Rails/classes/Date.html#method-i-mjd","()","<p>Returns the modified Julian day number.  This is a whole number, which is\nadjusted by the offset as the …\n",null,1],["mkcol","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-mkcol","(path, body = nil, initheader = nil)","<p>Sends a MKCOL request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["mkcol","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-mkcol","(path, body = nil, initheader = nil)","<p>Sends a MKCOL request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["mkdir","Dir","Rails/classes/Dir.html#method-c-mkdir","(p1, p2 = v2)","<p>Makes a new directory named by <em>string</em>, with permissions specified\nby the optional parameter <em>anInteger</em> …\n",null,1],["mkdir","FileUtils","Rails/classes/FileUtils.html#method-c-mkdir","(list, options = {})","<p>Options: mode noop verbose\n<p>Creates one or more directories.\n\n<pre>FileUtils.mkdir 'test'\nFileUtils.mkdir %w( ...</pre>\n",null,1],["mkdir","Gem::Package::TarWriter","Rails/classes/Gem/Package/TarWriter.html#method-i-mkdir","(name, mode)","<p>Creates a new directory in the tar file <code>name</code> with\n<code>mode</code>\n",null,1],["mkdir","Net::FTP","Rails/classes/Net/FTP.html#method-i-mkdir","(dirname)","<p>Creates a remote directory.\n",null,1],["mkdir","Object","Rails/classes/Object.html#method-i-mkdir","()","<p>Create the DIR, if they do not already exist.\n\n<pre>ruby -run -e mkdir -- [OPTION] DIR\n\n-p          no error ...</pre>\n",null,1],["mkdir","Pathname","Rails/classes/Pathname.html#method-i-mkdir","(p1 = v1)","<p>See <code>Dir.mkdir</code>.  Create the referenced directory.\n",null,1],["mkdir","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-mkdir","(*path)","<p>Dir related methods\n<p>Shell#mkdir Shell#rmdir\n",null,1],["mkdir_p","FileUtils","Rails/classes/FileUtils.html#method-c-mkdir_p","(list, options = {})","<p>Options: mode noop verbose\n<p>Creates a directory and all its parent directories. For example,\n\n<pre>FileUtils.mkdir_p ...</pre>\n",null,1],["mkmf","Object","Rails/classes/Object.html#method-i-mkmf","()","<p>Create makefile using mkmf.\n\n<pre>ruby -run -e mkmf -- [OPTION] EXTNAME [OPTION]\n\n-d ARGS     run dir_config ...</pre>\n",null,1],["mkpath","FileUtils","Rails/classes/FileUtils.html#method-c-mkpath","(list, options = {})","",null,1],["mkpath","Pathname","Rails/classes/Pathname.html#method-i-mkpath","()","<p>See <code>FileUtils.mkpath</code>.  Creates a full path, including any\nintermediate directories that don’t yet exist. …\n",null,1],["mktime","Time","Rails/classes/Time.html#method-c-mktime","(*args)","<p>Same as <code>Time::gm</code>, but interprets the values in the local time\nzone.\n\n<pre>Time.local(2000,&quot;jan&quot;,1,20,15,1)  ...</pre>\n",null,1],["mktmpdir","Dir","Rails/classes/Dir.html#method-c-mktmpdir","(prefix_suffix=nil, *rest)","<p>Dir.mktmpdir creates a temporary directory.\n<p>The directory is created with 0700 permission.\n<p>The prefix and …\n",null,1],["mode","BigDecimal","Rails/classes/BigDecimal.html#method-c-mode","(p1, p2 = v2)","<p>Controls handling of arithmetic exceptions and rounding. If no value is\nsupplied, the current value is …\n",null,1],["mode","File::Stat","Rails/classes/File/Stat.html#method-i-mode","()","<p>Returns an integer representing the permission bits of <em>stat</em>. The\nmeaning of the bits is platform dependent; …\n",null,1],["mode","Rake::FtpFile","Rails/classes/Rake/FtpFile.html#method-i-mode","()","",null,1],["model_name","ActiveModel::Naming","Ruby/classes/ActiveModel/Naming.html#method-i-model_name","()","<p>Returns an ActiveModel::Name object for module. It can be used to retrieve\nall kinds of naming-related …\n",null,0],["models","RSS::Element","Rails/classes/RSS/Element.html#method-c-models","()","",null,1],["modifiable","OpenStruct","Rails/classes/OpenStruct.html#method-i-modifiable","()","<p>#modifiable is used internally to check if the OpenStruct is able to be\nmodified before granting access …\n",null,1],["module","RDoc::Include","Rails/classes/RDoc/Include.html#method-i-module","()","<p>Attempts to locate the included module object.  Returns the name if not\nknown.\n<p>The scoping rules of Ruby …\n",null,1],["module?","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-module-3F","()","<p>Does this object represent a module?\n",null,1],["module?","RDoc::NormalModule","Rails/classes/RDoc/NormalModule.html#method-i-module-3F","()","<p>This is a module, returns true\n",null,1],["module_eval","Module","Rails/classes/Module.html#method-i-module_eval","(*args)","<p>Evaluates the string or block in the context of <em>mod</em>. This can be\nused to add methods to a class. <code>module_eval</code> …\n",null,1],["module_exec","Module","Rails/classes/Module.html#method-i-module_exec","(*args)","<p>Evaluates the given block in the context of the class/module. The method\ndefined in the block will belong …\n",null,1],["module_namespacing","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-module_namespacing","(&block)","<p>Wrap block with namespace of current application if namespace exists and is\nnot skipped\n",null,0],["modules","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-modules","()","<p>Array of modules in this context\n",null,1],["modules","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-modules","()","<p>Modules cache accessor.  An Array of all the modules (and classes) in the\nstore.\n",null,1],["modules","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-modules","()","",null,1],["modules_for_helpers","AbstractController::Helpers::ClassMethods","Ruby/classes/AbstractController/Helpers/ClassMethods.html#method-i-modules_for_helpers","(args)","<p>Returns a list of modules, normalized from the acceptable kinds of helpers\nwith the following behavior: …\n",null,0],["modules_for_helpers","ActionController::Helpers::ClassMethods","Ruby/classes/ActionController/Helpers/ClassMethods.html#method-i-modules_for_helpers","(args)","<p>Overwrite modules_for_helpers to accept :all as argument, which loads all\nhelpers in helpers_path.\n<p>Parameters …\n",null,0],["modules_hash","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-modules_hash","()","<p>Hash of modules keyed by module name\n",null,1],["modules_hash","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-modules_hash","()","",null,1],["modulo","BigDecimal","Rails/classes/BigDecimal.html#method-i-modulo","(p1)","<p>Returns the modulus from dividing by b. See divmod.\n",null,1],["modulo","Bignum","Rails/classes/Bignum.html#method-i-modulo","(p1)","<p>Returns big modulo other. See Numeric.divmod for more information.\n",null,1],["modulo","Fixnum","Rails/classes/Fixnum.html#method-i-modulo","(p1)","<p>Returns <code>fix</code> modulo <code>other</code>. See\n<code>numeric.divmod</code> for more information.\n",null,1],["modulo","Float","Rails/classes/Float.html#method-i-modulo","(p1)","<p>Return the modulo after division of <code>flt</code> by <code>other</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">6543.21</span>.<span class=\"ruby-identifier\">modulo</span>(<span class=\"ruby-value\">137</span>)      <span class=\"ruby-comment\">#=&gt; 104.21</span>\n<span class=\"ruby-value\">6543.21</span>.<span class=\"ruby-identifier\">modulo</span>(<span class=\"ruby-value\">137.24</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["modulo","Numeric","Rails/classes/Numeric.html#method-i-modulo","(p1)","\n<pre>x.modulo(y) means x-y*(x/y).floor</pre>\n<p>Equivalent to <em>num.divmod(aNumeric)</em>.\n<p>See <code>Numeric#divmod</code>.\n",null,1],["mon","Date","Rails/classes/Date.html#method-i-mon","()","<p>Returns the month (1-12).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">mon</span>            <span class=\"ruby-comment\">#=&gt; 2</span>\n</pre>\n",null,1],["mon","Time","Rails/classes/Time.html#method-i-mon","()","<p>Returns the month of the year (1..12) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:27:30 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">mon</span>    <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["mon=","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-mon-3D","(value)","",null,1],["mon_enter","MonitorMixin","Rails/classes/MonitorMixin.html#method-i-mon_enter","()","<p>Enters exclusive section.\n",null,1],["mon_exit","MonitorMixin","Rails/classes/MonitorMixin.html#method-i-mon_exit","()","<p>Leaves exclusive section.\n",null,1],["mon_synchronize","MonitorMixin","Rails/classes/MonitorMixin.html#method-i-mon_synchronize","()","<p>Enters exclusive section and executes the block.  Leaves the exclusive\nsection automatically when the …\n",null,1],["mon_try_enter","MonitorMixin","Rails/classes/MonitorMixin.html#method-i-mon_try_enter","()","<p>Attempts to enter exclusive section.  Returns <code>false</code> if lock\nfails.\n",null,1],["monday","Date","Ruby/classes/Date.html#method-i-monday","()","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the\nstart of this week. Week is assumed to start on a Monday …\n",null,0],["monday","Time","Ruby/classes/Time.html#method-i-monday","()","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the\nstart of this week. Week is assumed to start on a Monday …\n",null,0],["monday?","Date","Rails/classes/Date.html#method-i-monday-3F","()","<p>Returns true if the date is Monday.\n",null,1],["monday?","Time","Rails/classes/Time.html#method-i-monday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Monday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2003</span>, <span class=\"ruby-value\">8</span>, <span class=\"ruby-value\">4</span>)       <span class=\"ruby-comment\">#=&gt; 2003-08-04 00:00:00 -0500 ...</span>\n</pre>\n",null,1],["month","Integer","Ruby/classes/Integer.html#method-i-month","()","",null,0],["month","Date","Rails/classes/Date.html#method-i-month","()","<p>Returns the month (1-12).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">mon</span>            <span class=\"ruby-comment\">#=&gt; 2</span>\n</pre>\n",null,1],["month","Time","Rails/classes/Time.html#method-i-month","()","<p>Returns the month of the year (1..12) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:27:30 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">mon</span>    <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["month=","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-month-3D","(value)","",null,1],["months","Integer","Ruby/classes/Integer.html#method-i-months","()","<p>Enables the use of time calculations and declarations, like 45.minutes +\n2.hours + 4.years.\n<p>These methods …\n",null,0],["months_ago","Date","Ruby/classes/Date.html#method-i-months_ago","(months)","<p>Returns a new Date/DateTime representing the time a number of specified\nmonths ago.\n",null,0],["months_ago","Time","Ruby/classes/Time.html#method-i-months_ago","(months)","<p>Returns a new Time representing the time a number of specified months ago\n",null,0],["months_since","Date","Ruby/classes/Date.html#method-i-months_since","(months)","<p>Returns a new Date/DateTime representing the time a number of specified\nmonths in the future.\n",null,0],["months_since","Time","Ruby/classes/Time.html#method-i-months_since","(months)","<p>Returns a new Time representing the time a number of specified months in\nthe future\n",null,0],["mount","ActionDispatch::Routing::Mapper::Base","Ruby/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-mount","(app, options = nil)","<p>Mount a Rack-based application to be used within the application.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">mount</span> <span class=\"ruby-constant\">SomeRackApp</span>, :<span class=\"ruby-identifier\">at</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;some_route&quot;</span>\n</pre>\n",null,0],["mount","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-mount","(dir, servlet, *options)","<p>Mounts <code>servlet</code> on <code>dir</code> passing\n<code>options</code> to the servlet at creation time\n",null,1],["mount_proc","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-mount_proc","(dir, proc=nil, &block)","<p>Mounts <code>proc</code> or <code>block</code> on <code>dir</code> and\ncalls it with a WEBrick::HTTPRequest and WEBrick::HTTPResponse\n",null,1],["mountable?","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-mountable-3F","()","",null,0],["mountpoint?","Pathname","Rails/classes/Pathname.html#method-i-mountpoint-3F","()","<p>mountpoint? returns <code>true</code> if <code>self</code> points to a\nmountpoint.\n",null,1],["mouseinterval","Curses","Rails/classes/Curses.html#method-c-mouseinterval","(p1)","<p>The Curses.mouseinterval function sets the maximum time (in thousands of a\nsecond) that can elapse between …\n",null,1],["mousemask","Curses","Rails/classes/Curses.html#method-c-mousemask","(p1)","<p>Returns the <code>mask</code> of the reportable events\n",null,1],["move","Curses::Window","Rails/classes/Curses/Window.html#method-i-move","(p1, p2)","<p>Moves the window so that the upper left-hand corner is at position\n(<code>y</code>, <code>x</code>)\n",null,1],["move","FileUtils","Rails/classes/FileUtils.html#method-c-move","(src, dest, options = {})","",null,1],["move","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-move","(path, initheader = nil)","<p>Sends a MOVE request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["move","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-move","(path, initheader = nil)","<p>Sends a MOVE request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["move","Rinda::TupleSpace","Rails/classes/Rinda/TupleSpace.html#method-i-move","(port, tuple, sec=nil)","<p>Moves <code>tuple</code> to <code>port</code>.\n",null,1],["ms","Benchmark","Ruby/classes/Benchmark.html#method-c-ms","()","",null,0],["mtime","File","Rails/classes/File.html#method-i-mtime","()","<p>Returns the modification time for <em>file</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">mtime</span>   <span class=\"ruby-comment\">#=&gt; Wed Apr 09 08:53:14 CDT 2003</span>\n</pre>\n",null,1],["mtime","File","Rails/classes/File.html#method-c-mtime","(p1)","<p>Returns the modification time for the named file as a Time object.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">mtime</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)   <span class=\"ruby-comment\">#=&gt; Tue Apr ...</span>\n</pre>\n",null,1],["mtime","File::Stat","Rails/classes/File/Stat.html#method-i-mtime","()","<p>Returns the modification time of <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">mtime</span>   <span class=\"ruby-comment\">#=&gt; Wed Apr 09 08:53:14 CDT 2003</span>\n</pre>\n",null,1],["mtime","Net::FTP","Rails/classes/Net/FTP.html#method-i-mtime","(filename, local = false)","<p>Returns the last modification time of the (remote) file.  If\n<code>local</code> is <code>true</code>, it is returned as a local …\n",null,1],["mtime","Pathname","Rails/classes/Pathname.html#method-i-mtime","()","<p>See <code>File.mtime</code>.  Returns last modification time.\n",null,1],["mtime","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-mtime","()","<p>Returns last modification time recorded in the gzip file header.\n",null,1],["mtime=","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-mtime-3D","(p1)","<p>Specify the modification time (<code>mtime</code>) in the gzip header.\nUsing a Fixnum or Integer\n",null,1],["mu_extended","Mutex_m","Rails/classes/Mutex_m.html#method-i-mu_extended","()","",null,1],["mu_lock","Mutex_m","Rails/classes/Mutex_m.html#method-i-mu_lock","()","",null,1],["mu_locked?","Mutex_m","Rails/classes/Mutex_m.html#method-i-mu_locked-3F","()","",null,1],["mu_synchronize","Mutex_m","Rails/classes/Mutex_m.html#method-i-mu_synchronize","(&block)","<p>locking\n",null,1],["mu_try_lock","Mutex_m","Rails/classes/Mutex_m.html#method-i-mu_try_lock","()","",null,1],["mu_unlock","Mutex_m","Rails/classes/Mutex_m.html#method-i-mu_unlock","()","",null,1],["mult","BigDecimal","Rails/classes/BigDecimal.html#method-i-mult","(p1, p2)","",null,1],["multicall","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-multicall","(*methods)","<p>Multicall methods ————————————————————–\n",null,1],["multicall2","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-multicall2","(*methods)","",null,1],["multicall2_async","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-multicall2_async","(*methods)","",null,1],["multicall_async","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-multicall_async","(*methods)","",null,1],["multipart=","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-multipart-3D","(multipart)","",null,0],["multipart?","CGI::QueryExtension","Rails/classes/CGI/QueryExtension.html#method-i-multipart-3F","()","<p>Returns whether the form contained multipart/form-data\n",null,1],["multipart?","Net::IMAP::BodyTypeBasic","Rails/classes/Net/IMAP/BodyTypeBasic.html#method-i-multipart-3F","()","",null,1],["multipart?","Net::IMAP::BodyTypeMessage","Rails/classes/Net/IMAP/BodyTypeMessage.html#method-i-multipart-3F","()","",null,1],["multipart?","Net::IMAP::BodyTypeMultipart","Rails/classes/Net/IMAP/BodyTypeMultipart.html#method-i-multipart-3F","()","",null,1],["multipart?","Net::IMAP::BodyTypeText","Rails/classes/Net/IMAP/BodyTypeText.html#method-i-multipart-3F","()","",null,1],["multipart_form","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-multipart_form","(action = nil, enctype = \"multipart/form-data\")","<p>Generate a Form element with multipart encoding as a String.\n<p>Multipart encoding is used for forms that …\n",null,1],["multiple_of?","Integer","Ruby/classes/Integer.html#method-i-multiple_of-3F","(number)","<p>Check whether the integer is evenly divisible by the argument.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">0</span>.<span class=\"ruby-identifier\">multiple_of?</span>(<span class=\"ruby-value\">0</span>)  <span class=\"ruby-comment\">#=&gt; true</span>\n<span class=\"ruby-value\">6</span>.<span class=\"ruby-identifier\">multiple_of?</span>(<span class=\"ruby-value\">5</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["must_C_version","StringScanner","Rails/classes/StringScanner.html#method-c-must_C_version","()","<p>This method is defined for backward compatibility.\n",null,1],["must_call_validators","RSS::Element","Rails/classes/RSS/Element.html#method-c-must_call_validators","()","",null,1],["mute","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-mute","()","<p>Silence the logger within a block.\n",null,0],["mute","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-mute","(&block)","",null,0],["mutex","DRb","Rails/classes/DRb.html#method-c-mutex","()","",null,1],["mv","FileUtils","Rails/classes/FileUtils.html#method-c-mv","(src, dest, options = {})","<p>Options: force noop verbose\n<p>Moves file(s) <code>src</code> to <code>dest</code>.  If <code>file</code>\nand <code>dest</code> exist on the different disk partition, …\n",null,1],["mv","Object","Rails/classes/Object.html#method-i-mv","()","<p>Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\n\n<pre>ruby -run -e mv -- [OPTION] SOURCE DEST\n\n-v    ...</pre>\n",null,1],["mysql2_connection","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-mysql2_connection","(config)","<p>Establishes a connection to the database that’s used by all Active Record\nobjects.\n",null,0],["mysql_socket","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-mysql_socket","()","",null,0],["n_bytes","Net::POP3","Rails/classes/Net/POP3.html#method-i-n_bytes","()","<p>Returns the total size in bytes of all the messages on the POP server.\n",null,1],["n_bytes","Net::POP3","Rails/classes/Net/POP3.html#method-i-n_bytes","()","<p>Returns the total size in bytes of all the messages on the POP server.\n",null,1],["n_bytes","Net::POP3","Rails/classes/Net/POP3.html#method-i-n_bytes","()","<p>Returns the total size in bytes of all the messages on the POP server.\n",null,1],["n_bytes","Net::POP3","Rails/classes/Net/POP3.html#method-i-n_bytes","()","<p>Returns the total size in bytes of all the messages on the POP server.\n",null,1],["n_jobs","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-n_jobs","()","",null,1],["n_mails","Net::POP3","Rails/classes/Net/POP3.html#method-i-n_mails","()","<p>Returns the number of messages on the POP server.\n",null,1],["n_mails","Net::POP3","Rails/classes/Net/POP3.html#method-i-n_mails","()","<p>Returns the number of messages on the POP server.\n",null,1],["n_mails","Net::POP3","Rails/classes/Net/POP3.html#method-i-n_mails","()","<p>Returns the number of messages on the POP server.\n",null,1],["n_mails","Net::POP3","Rails/classes/Net/POP3.html#method-i-n_mails","()","<p>Returns the number of messages on the POP server.\n",null,1],["name","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-c-name","()","",null,0],["name","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-name","()","",null,0],["name","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-name","()","<p>Get the name of this function\n",null,1],["name","DL::Function","Rails/classes/DL/Function.html#method-i-name","()","",null,1],["name","Encoding","Rails/classes/Encoding.html#method-i-name","()","<p>Returns the name of the encoding.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">UTF_8</span>.<span class=\"ruby-identifier\">name</span>      <span class=\"ruby-comment\">#=&gt; &quot;UTF-8&quot;</span>\n</pre>\n",null,1],["name","Method","Rails/classes/Method.html#method-i-name","()","<p>Returns the name of the method.\n",null,1],["name","Module","Rails/classes/Module.html#method-i-name","()","<p>Returns the name of the module <em>mod</em>.  Returns nil for anonymous\nmodules.\n",null,1],["name","NameError","Rails/classes/NameError.html#method-i-name","()","<p>Return the name associated with this NameError exception.\n",null,1],["name","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-name","()","<p>Returns the name of the cipher which may differ slightly from the original\nname provided.\n",null,1],["name","OpenSSL::Digest","Rails/classes/OpenSSL/Digest.html#method-i-name","()","<p>Returns the sn of this Digest instance.\n<p>Example\n\n<pre>digest = OpenSSL::Digest::SHA512.new\nputs digest.name # ...</pre>\n",null,1],["name","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-name","()","",null,1],["name","OpenSSL::PKCS7::SignerInfo","Rails/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-name","()","",null,1],["name","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-i-name","()","<p>Method name\n<p>If the method has no assigned name, it extracts it from #call_seq.\n",null,1],["name","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-name","()","",null,1],["name","REXML::Document","Rails/classes/REXML/Document.html#method-i-name","()","",null,1],["name","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-name","( node_set=nil )","",null,1],["name","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-name","()","",null,1],["name","REXML::NotationDecl","Rails/classes/REXML/NotationDecl.html#method-i-name","()","<p>This method retrieves the name of the notation.\n<p>Method contributed by Henrik Martensson\n",null,1],["name","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-name","()","",null,1],["name","Rake::Task","Rails/classes/Rake/Task.html#method-i-name","()","<p>Name of the task, including any namespace qualifiers.\n",null,1],["name","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-name","()","<p>Returns the name of the method.\n",null,1],["name","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-name","()","<p>call-seq\n\n<pre>WIN32OLE_METHOD#name</pre>\n<p>Returns the name of the method.\n",null,1],["name","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-i-name","()","<p>Returns name.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\nmethod = WIN32OLE_METHOD.new(tobj, ...</pre>\n",null,1],["name","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-name","()","<p>Returns OLE type name.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\nputs ...</pre>\n",null,1],["name","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-name","()","<p>Returns the type library name.\n\n<pre>tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\nname ...</pre>\n",null,1],["name","WIN32OLE_VARIABLE","Rails/classes/WIN32OLE_VARIABLE.html#method-i-name","()","<p>Returns the name of variable.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType') ...</pre>\n",null,1],["name","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-name","()","<p>Full path of key such as ‘HKEY_CURRENT_USERSOFTWAREfoobar’.\n",null,1],["name=","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-name-3D","(new_name)","<p>Allows overriding the initial name.\n<p>Used for modules and classes that are constant aliases.\n",null,1],["name=","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-name-3D","( name_str, ns=nil )","",null,1],["name=","REXML::Namespace","Rails/classes/REXML/Namespace.html#method-i-name-3D","( name )","<p>Sets the name and the expanded name\n",null,1],["name_for_path","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-name_for_path","()","<p>Name to use to generate the url: modules and classes that are aliases for\nanother module or class return …\n",null,1],["name_for_path","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-name_for_path","()","<p>Name to use to generate the url. <code>#full_name</code> by default.\n",null,1],["name_list","Encoding","Rails/classes/Encoding.html#method-c-name_list","()","<p>Returns the list of available encoding names.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span>.<span class=\"ruby-identifier\">name_list</span>\n<span class=\"ruby-comment\">#=&gt; [&quot;US-ASCII&quot;, &quot;ASCII-8BIT&quot;, &quot;UTF-8&quot;, ...</span>\n</pre>\n",null,1],["name_prefix","RDoc::Alias","Rails/classes/RDoc/Alias.html#method-i-name_prefix","()","<p>‘::’ for the alias of a singleton method/attribute, ‘#’ for instance-level.\n",null,1],["name_prefix","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-name_prefix","()","<p>‘::’ for a class method/attribute, ‘#’ for an instance method.\n",null,1],["name_regexp","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-name_regexp","(name)","<p>Returns a regular expression for <code>name</code> that will match an\nRDoc::AnyMethod’s name.\n",null,1],["named_captures","Regexp","Rails/classes/Regexp.html#method-i-named_captures","()","<p>Returns a hash representing information about named captures of\n<em>rxp</em>.\n<p>A key of the hash is a name of the …\n",null,1],["names","QualifiedConstUtils","Ruby/classes/QualifiedConstUtils.html#method-c-names","(path)","",null,0],["names","Encoding","Rails/classes/Encoding.html#method-i-names","()","<p>Returns the list of name and aliases of the encoding.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">WINDOWS_31J</span>.<span class=\"ruby-identifier\">names</span>  <span class=\"ruby-comment\">#=&gt; [&quot;Windows-31J&quot;, ...</span>\n</pre>\n",null,1],["names","MatchData","Rails/classes/MatchData.html#method-i-names","()","<p>Returns a list of names of captures as an array of strings. It is same as\nmtch.regexp.names.\n\n<pre>/(?&lt;foo&gt;.)(?&lt;bar&gt;.)(?&lt;baz&gt;.)/.match(&quot;hoge&quot;).names ...</pre>\n",null,1],["names","Regexp","Rails/classes/Regexp.html#method-i-names","()","<p>Returns a list of names of captures as an array of strings.\n\n<pre class=\"ruby\"><span class=\"ruby-regexp\">/(?&lt;foo&gt;.)(?&lt;bar&gt;.)(?&lt;baz&gt;.)/</span>.<span class=\"ruby-identifier\">names</span>\n<span class=\"ruby-comment\">#=&gt; [&quot;foo&quot;, ...</span>\n</pre>\n",null,1],["namespace","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-namespace","(path, options = {})","<p>See ActionDispatch::Routing::Mapper::Scoping#namespace\n",null,0],["namespace","ActionDispatch::Routing::Mapper::Scoping","Ruby/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-namespace","(path, options = {})","<p>Scopes routes to a specific namespace. For example:\n\n<pre>namespace :admin do\n  resources :posts\nend</pre>\n<p>This generates …\n",null,0],["namespace","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-namespace","(name=nil)","<p>Convenience method to get the namespace from the class name. It’s the same\nas Thor default except that …\n",null,0],["namespace","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-namespace","()","",null,0],["namespace","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-namespace","(arg=nil)","<p>Returns the namespace URL, if defined, or nil otherwise\n\n<pre>e = Element.new(&quot;el&quot;)\ne.add_attributes({&quot;xmlns:ns&quot;, ...</pre>\n",null,1],["namespace","REXML::Element","Rails/classes/REXML/Element.html#method-i-namespace","(prefix=nil)","<p>Evalutas to the URI for a prefix, or the empty string if no such namespace\nis declared for this element. …\n",null,1],["namespace","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-namespace","( prefix=prefix() )","",null,1],["namespace=","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-namespace-3D","( namespace )","",null,1],["namespace_context","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-namespace_context","()","",null,1],["namespace_context=","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-namespace_context-3D","(x)","",null,1],["namespace_uri","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-namespace_uri","( node_set=nil )","",null,1],["namespaced?","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-namespaced-3F","()","",null,0],["namespaced_class_path","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-namespaced_class_path","()","",null,0],["namespaced_file_path","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-namespaced_file_path","()","",null,0],["namespaces","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-namespaces","()","",null,1],["namespaces","REXML::Element","Rails/classes/REXML/Element.html#method-i-namespaces","()","",null,1],["namespaces=","REXML::Parsers::XPathParser","Rails/classes/REXML/Parsers/XPathParser.html#method-i-namespaces-3D","( namespaces )","",null,1],["namespaces=","REXML::XPathParser","Rails/classes/REXML/XPathParser.html#method-i-namespaces-3D","( namespaces={} )","",null,1],["nan?","BigDecimal","Rails/classes/BigDecimal.html#method-i-nan-3F","()","<p>Returns True if the value is Not a Number\n",null,1],["nan?","Float","Rails/classes/Float.html#method-i-nan-3F","()","<p>Returns <code>true</code> if <em>flt</em> is an invalid IEEE floating point\nnumber.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = <span class=\"ruby-value\">-1.0</span>      <span class=\"ruby-comment\">#=&gt; -1.0</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">nan?</span>        <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["native","IPAddr","Rails/classes/IPAddr.html#method-i-native","()","<p>Returns a new ipaddr built by converting the IPv6 address into a native\nIPv4 address.  If the IP address …\n",null,1],["native_database_types","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-native_database_types","()","",null,0],["native_database_types","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-native_database_types","()","<p>Returns a Hash of mappings from the abstract data types to the native\ndatabase types. See TableDefinition#column …\n",null,0],["navigation_behavior","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-navigation_behavior","(error)","<p>This is the common behavior for formats associated with browsing, like\n:html, :iphone and so forth.\n",null,0],["navigation_location","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-navigation_location","()","",null,0],["need_base64_encode?","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-need_base64_encode-3F","()","",null,1],["need_base64_encode?","RSS::Element","Rails/classes/RSS/Element.html#method-i-need_base64_encode-3F","()","",null,1],["need_initialize_variables","RSS::Element","Rails/classes/RSS/Element.html#method-c-need_initialize_variables","()","",null,1],["need_initialize_variables","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-need_initialize_variables","()","",null,1],["need_parent?","RSS::Atom::CommonModel","Rails/classes/RSS/Atom/CommonModel.html#method-c-need_parent-3F","()","",null,1],["need_parent?","RSS::Element","Rails/classes/RSS/Element.html#method-c-need_parent-3F","()","",null,1],["needed?","Rake::FileCreationTask","Rails/classes/Rake/FileCreationTask.html#method-i-needed-3F","()","<p>Is this file task needed?  Yes if it doesn’t exist.\n",null,1],["needed?","Rake::FileTask","Rails/classes/Rake/FileTask.html#method-i-needed-3F","()","<p>Is this file task needed?  Yes if it doesn’t exist, or if its time stamp is\nout of date.\n",null,1],["needed?","Rake::Task","Rails/classes/Rake/Task.html#method-i-needed-3F","()","<p>Is this task needed?\n",null,1],["negotiate_mime","ActionDispatch::Http::MimeNegotiation","Ruby/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-negotiate_mime","(order)","<p>Receives an array of mimes and return the first user sent mime that matches\nthe order array.\n",null,0],["nest","PrettyPrint","Rails/classes/PrettyPrint.html#method-i-nest","(indent)","<p>Increases left margin after newline with <code>indent</code> for line\nbreaks added in the block.\n",null,1],["nest","PrettyPrint::SingleLine","Rails/classes/PrettyPrint/SingleLine.html#method-i-nest","(indent)","",null,1],["nested","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-nested","()","",null,0],["nested_under_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-nested_under_indifferent_access","()","",null,0],["nested_under_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-nested_under_indifferent_access","()","",null,0],["nested_under_indifferent_access","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-nested_under_indifferent_access","()","",null,0],["nested_under_indifferent_access","Hash","Ruby/classes/Hash.html#method-i-nested_under_indifferent_access","()","<p>Called when object is nested under an object that receives\n#with_indifferent_access. This method will …\n",null,0],["nesting","Module","Rails/classes/Module.html#method-c-nesting","()","<p>Returns the list of <code>Modules</code> nested at the point of call.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M1</span>\n  <span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M2</span>\n    <span class=\"ruby-identifier\">$a</span> = <span class=\"ruby-constant\">Module</span>.<span class=\"ruby-identifier\">nesting</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["new","AbstractController::DoubleRenderError","Ruby/classes/AbstractController/DoubleRenderError.html#method-c-new","(message = nil)","",null,0],["new","AbstractController::Layouts","Ruby/classes/AbstractController/Layouts.html#method-c-new","(*)","",null,0],["new","ActionController::Caching::Actions::ActionCachePath","Ruby/classes/ActionController/Caching/Actions/ActionCachePath.html#method-c-new","(controller, options = {}, infer_extension = true)","<p>If <code>infer_extension</code> is true, the cache path extension is looked\nup from the request’s path and format. …\n",null,0],["new","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-c-new","()","",null,0],["new","ActionController::Middleware","Ruby/classes/ActionController/Middleware.html#method-c-new","(app)","",null,0],["new","ActionController::Middleware","Ruby/classes/ActionController/Middleware.html#method-c-new","(app)","",null,0],["new","ActionController::Middleware::ActionMiddleware","Ruby/classes/ActionController/Middleware/ActionMiddleware.html#method-c-new","(controller, app)","",null,0],["new","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-c-new","(controller, resources, options={})","",null,0],["new","ActionDispatch::BestStandardsSupport","Ruby/classes/ActionDispatch/BestStandardsSupport.html#method-c-new","(app, type = true)","",null,0],["new","ActionDispatch::BodyProxy","Ruby/classes/ActionDispatch/BodyProxy.html#method-c-new","(body, &block)","",null,0],["new","ActionDispatch::Callbacks","Ruby/classes/ActionDispatch/Callbacks.html#method-c-new","(app)","",null,0],["new","ActionDispatch::Cookies","Ruby/classes/ActionDispatch/Cookies.html#method-c-new","(app)","",null,0],["new","ActionDispatch::DebugExceptions","Ruby/classes/ActionDispatch/DebugExceptions.html#method-c-new","(app)","",null,0],["new","ActionDispatch::ExceptionWrapper","Ruby/classes/ActionDispatch/ExceptionWrapper.html#method-c-new","(env, exception)","",null,0],["new","ActionDispatch::FileHandler","Ruby/classes/ActionDispatch/FileHandler.html#method-c-new","(root, cache_control)","",null,0],["new","ActionDispatch::Flash","Ruby/classes/ActionDispatch/Flash.html#method-c-new","(app)","",null,0],["new","ActionDispatch::Head","Ruby/classes/ActionDispatch/Head.html#method-c-new","(app)","",null,0],["new","ActionDispatch::Http::Headers","Ruby/classes/ActionDispatch/Http/Headers.html#method-c-new","(*args)","",null,0],["new","ActionDispatch::Http::ParameterFilter","Ruby/classes/ActionDispatch/Http/ParameterFilter.html#method-c-new","(filters)","",null,0],["new","ActionDispatch::Http::UploadedFile","Ruby/classes/ActionDispatch/Http/UploadedFile.html#method-c-new","(hash)","",null,0],["new","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-c-new","(*args)","",null,0],["new","ActionDispatch::MiddlewareStack::Middleware","Ruby/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-c-new","(klass_or_name, *args, &block)","",null,0],["new","ActionDispatch::ParamsParser","Ruby/classes/ActionDispatch/ParamsParser.html#method-c-new","(app, parsers = {})","",null,0],["new","ActionDispatch::PublicExceptions","Ruby/classes/ActionDispatch/PublicExceptions.html#method-c-new","(public_path)","",null,0],["new","ActionDispatch::RailsEntityStore","Ruby/classes/ActionDispatch/RailsEntityStore.html#method-c-new","(store = RAILS_CACHE)","",null,0],["new","ActionDispatch::RailsMetaStore","Ruby/classes/ActionDispatch/RailsMetaStore.html#method-c-new","(store = RAILS_CACHE)","<p>TODO: Finally deal with the RAILS_CACHE global\n",null,0],["new","ActionDispatch::Reloader","Ruby/classes/ActionDispatch/Reloader.html#method-c-new","(app, condition=nil)","",null,0],["new","ActionDispatch::RemoteIp","Ruby/classes/ActionDispatch/RemoteIp.html#method-c-new","(app, check_ip_spoofing = true, custom_proxies = nil)","",null,0],["new","ActionDispatch::RemoteIp::GetIp","Ruby/classes/ActionDispatch/RemoteIp/GetIp.html#method-c-new","(env, middleware)","",null,0],["new","ActionDispatch::RequestId","Ruby/classes/ActionDispatch/RequestId.html#method-c-new","(app)","",null,0],["new","ActionDispatch::Rescue","Ruby/classes/ActionDispatch/Rescue.html#method-c-new","(app, rescuers = {}, &block)","",null,0],["new","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-c-new","(status = 200, header = {}, body = [])","",null,0],["new","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-new","()","",null,0],["new","ActionDispatch::Routing::UrlFor","Ruby/classes/ActionDispatch/Routing/UrlFor.html#method-c-new","(*)","",null,0],["new","ActionDispatch::Session::CacheStore","Ruby/classes/ActionDispatch/Session/CacheStore.html#method-c-new","(app, options = {})","<p>Create a new store. The cache to use can be passed in the\n<code>:cache</code> option. If it is not specified,\n<code>Rails.cache</code> …\n",null,0],["new","ActionDispatch::Session::Compatibility","Ruby/classes/ActionDispatch/Session/Compatibility.html#method-c-new","(app, options = {})","",null,0],["new","ActionDispatch::Session::MemCacheStore","Ruby/classes/ActionDispatch/Session/MemCacheStore.html#method-c-new","(app, options = {})","",null,0],["new","ActionDispatch::ShowExceptions","Ruby/classes/ActionDispatch/ShowExceptions.html#method-c-new","(app, exceptions_app = nil)","",null,0],["new","ActionDispatch::Static","Ruby/classes/ActionDispatch/Static.html#method-c-new","(app, path, cache_control=nil)","",null,0],["new","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-c-new","(method_name=nil, *args)","<p>Instantiate a new mailer object. If <code>method_name</code> is not\n<code>nil</code>, the mailer will be initialized according …\n",null,0],["new","ActionMailer::Collector","Ruby/classes/ActionMailer/Collector.html#method-c-new","(context, &block)","",null,0],["new","ActionView::FileSystemResolver","Ruby/classes/ActionView/FileSystemResolver.html#method-c-new","(path, pattern=nil)","",null,0],["new","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Ruby/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-c-new","(config, asset_paths)","",null,0],["new","ActionView::Helpers::AtomFeedHelper::AtomBuilder","Ruby/classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html#method-c-new","(xml)","",null,0],["new","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","Ruby/classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#method-c-new","(xml, view, feed_options = {})","",null,0],["new","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-c-new","(object_name, object, template, options, proc)","",null,0],["new","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-c-new","(object_name, method_name, template_object, object = nil)","",null,0],["new","ActionView::Helpers::NumberHelper::InvalidNumberError","Ruby/classes/ActionView/Helpers/NumberHelper/InvalidNumberError.html#method-c-new","(number)","",null,0],["new","ActionView::PartialRenderer","Ruby/classes/ActionView/PartialRenderer.html#method-c-new","(*)","",null,0],["new","ActionView::Renderer","Ruby/classes/ActionView/Renderer.html#method-c-new","(lookup_context)","",null,0],["new","ActionView::Resolver","Ruby/classes/ActionView/Resolver.html#method-c-new","()","",null,0],["new","ActionView::Resolver::Path","Ruby/classes/ActionView/Resolver/Path.html#method-c-new","(name, prefix, partial, virtual)","",null,0],["new","ActionView::Template","Ruby/classes/ActionView/Template.html#method-c-new","(source, identifier, handler, details)","",null,0],["new","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#method-c-new","(options = {})","",null,0],["new","ActiveModel::BlockValidator","Ruby/classes/ActiveModel/BlockValidator.html#method-c-new","(options, &block)","",null,0],["new","ActiveModel::EachValidator","Ruby/classes/ActiveModel/EachValidator.html#method-c-new","(options)","<p>Returns a new validator instance. All options will be available via the\n<code>options</code> reader, however the  …\n",null,0],["new","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-c-new","(base)","<p>Pass in the instance of the object that is using the errors object.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">initialize</span>\n    <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["new","ActiveModel::MassAssignmentSecurity::LoggerSanitizer","Ruby/classes/ActiveModel/MassAssignmentSecurity/LoggerSanitizer.html#method-c-new","(target)","",null,0],["new","ActiveModel::MassAssignmentSecurity::Sanitizer","Ruby/classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#method-c-new","(target=nil)","",null,0],["new","ActiveModel::Name","Ruby/classes/ActiveModel/Name.html#method-c-new","(klass, namespace = nil, name = nil)","",null,0],["new","ActiveModel::Observer","Ruby/classes/ActiveModel/Observer.html#method-c-new","()","<p>Start observing the declared classes and their subclasses.\n",null,0],["new","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-c-new","(model_class, *args)","",null,0],["new","ActiveModel::Validations::AcceptanceValidator","Ruby/classes/ActiveModel/Validations/AcceptanceValidator.html#method-c-new","(options)","",null,0],["new","ActiveModel::Validations::LengthValidator","Ruby/classes/ActiveModel/Validations/LengthValidator.html#method-c-new","(options)","",null,0],["new","ActiveModel::Validator","Ruby/classes/ActiveModel/Validator.html#method-c-new","(options)","<p>Accepts options that will be made available through the\n<code>options</code> reader.\n",null,0],["new","ActiveRecord::AttributeAssignmentError","Ruby/classes/ActiveRecord/AttributeAssignmentError.html#method-c-new","(message, exception, attribute)","",null,0],["new","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-new","(attributes = nil, options = {})","<p>New objects can be instantiated as either empty (pass no construction\nparameter) or pre-set with attributes …\n",null,0],["new","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-c-new","(connection, logger, connection_options, config)","<p>FIXME: Make the first parameter more similar for the two adapters\n",null,0],["new","ActiveRecord::ConnectionAdapters::ConnectionHandler","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-c-new","(pools = {})","",null,0],["new","ActiveRecord::ConnectionAdapters::ConnectionManagement","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html#method-c-new","(app)","",null,0],["new","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-c-new","(spec)","<p>Creates a new ConnectionPool object. <code>spec</code> is a\nConnectionSpecification object which describes database …\n",null,0],["new","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-c-new","(connection, logger, connection_options, config)","",null,0],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-c-new","(connection, logger, connection_options, config)","",null,0],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-c-new","(connection, max = 1000)","",null,0],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-c-new","(connection, logger, connection_parameters, config)","<p>Initializes and connects a PostgreSQL adapter.\n",null,0],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-c-new","(connection, max)","",null,0],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-c-new","(connection, logger, config)","",null,0],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-c-new","(connection, max)","",null,0],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html#method-c-new","(version_string)","",null,0],["new","ActiveRecord::ConnectionAdapters::SchemaCache","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-c-new","(conn)","",null,0],["new","ActiveRecord::ConnectionAdapters::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-c-new","(connection, max = 1000)","",null,0],["new","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-c-new","(table_name, base)","",null,0],["new","ActiveRecord::ConnectionAdapters::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-c-new","(base)","",null,0],["new","ActiveRecord::DynamicFinderMatch","Ruby/classes/ActiveRecord/DynamicFinderMatch.html#method-c-new","(finder, instantiator, bang, attribute_names)","",null,0],["new","ActiveRecord::DynamicScopeMatch","Ruby/classes/ActiveRecord/DynamicScopeMatch.html#method-c-new","(scope, attribute_names)","",null,0],["new","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-c-new","(connection, table_name, class_name, fixture_path)","",null,0],["new","ActiveRecord::Fixtures::File","Ruby/classes/ActiveRecord/Fixtures/File.html#method-c-new","(file)","",null,0],["new","ActiveRecord::IdentityMap::Middleware","Ruby/classes/ActiveRecord/IdentityMap/Middleware.html#method-c-new","(app)","",null,0],["new","ActiveRecord::LogSubscriber","Ruby/classes/ActiveRecord/LogSubscriber.html#method-c-new","()","",null,0],["new","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-c-new","()","",null,0],["new","ActiveRecord::Migration::CommandRecorder","Ruby/classes/ActiveRecord/Migration/CommandRecorder.html#method-c-new","(delegate = nil)","",null,0],["new","ActiveRecord::MigrationProxy","Ruby/classes/ActiveRecord/MigrationProxy.html#method-c-new","(name, version, filename, scope)","",null,0],["new","ActiveRecord::MultiparameterAssignmentErrors","Ruby/classes/ActiveRecord/MultiparameterAssignmentErrors.html#method-c-new","(errors)","",null,0],["new","ActiveRecord::QueryCache","Ruby/classes/ActiveRecord/QueryCache.html#method-c-new","(app)","",null,0],["new","ActiveRecord::RecordInvalid","Ruby/classes/ActiveRecord/RecordInvalid.html#method-c-new","(record)","",null,0],["new","ActiveRecord::Reflection::MacroReflection","Ruby/classes/ActiveRecord/Reflection/MacroReflection.html#method-c-new","(macro, name, options, active_record)","",null,0],["new","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-c-new","(klass, table)","",null,0],["new","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-new","(*args, &block)","",null,0],["new","ActiveRecord::Result","Ruby/classes/ActiveRecord/Result.html#method-c-new","(columns, rows)","",null,0],["new","ActiveRecord::SessionStore::Session","Ruby/classes/ActiveRecord/SessionStore/Session.html#method-c-new","(attributes = nil, options = {})","",null,0],["new","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-new","(attributes)","<p>Look for normal and marshaled data, self.find_by_session_id’s way of\ntelling us to postpone unmarshaling …\n",null,0],["new","ActiveRecord::StaleObjectError","Ruby/classes/ActiveRecord/StaleObjectError.html#method-c-new","(record, attempted_action)","",null,0],["new","ActiveRecord::UnknownPrimaryKey","Ruby/classes/ActiveRecord/UnknownPrimaryKey.html#method-c-new","(model)","",null,0],["new","ActiveRecord::Validations::UniquenessValidator","Ruby/classes/ActiveRecord/Validations/UniquenessValidator.html#method-c-new","(options)","",null,0],["new","ActiveRecord::WrappedDatabaseException","Ruby/classes/ActiveRecord/WrappedDatabaseException.html#method-c-new","(message, original_exception)","",null,0],["new","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-new","(attributes = {}, persisted = false)","<p>Constructor method for new resources; the optional <code>attributes</code>\nparameter takes a hash of attributes for …\n",null,0],["new","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-c-new","(site, format = ActiveResource::Formats::JsonFormat)","<p>The <code>site</code> parameter is required and will set the\n<code>site</code> attribute to the URI for the remote resource service. …\n",null,0],["new","ActiveResource::Request","Ruby/classes/ActiveResource/Request.html#method-c-new","(method, path, body = nil, headers = {})","",null,0],["new","ActiveResource::Response","Ruby/classes/ActiveResource/Response.html#method-c-new","(body, message = 200, headers = {})","",null,0],["new","ActiveResource::SSLError","Ruby/classes/ActiveResource/SSLError.html#method-c-new","(message)","",null,0],["new","ActiveResource::TimeoutError","Ruby/classes/ActiveResource/TimeoutError.html#method-c-new","(message)","",null,0],["new","ActiveSupport::BacktraceCleaner","Ruby/classes/ActiveSupport/BacktraceCleaner.html#method-c-new","()","",null,0],["new","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-c-new","(log, level = DEBUG)","",null,0],["new","ActiveSupport::Cache::Entry","Ruby/classes/ActiveSupport/Cache/Entry.html#method-c-new","(value, options = {})","<p>Create a new cache entry for the specified value. Options supported are\n<code>:compress</code>, <code>:compress_threshold</code> …\n",null,0],["new","ActiveSupport::Cache::FileStore","Ruby/classes/ActiveSupport/Cache/FileStore.html#method-c-new","(cache_path, options = nil)","",null,0],["new","ActiveSupport::Cache::MemCacheStore","Ruby/classes/ActiveSupport/Cache/MemCacheStore.html#method-c-new","(*addresses)","<p>Creates a new MemCacheStore object, with the given memcached server\naddresses. Each address is either …\n",null,0],["new","ActiveSupport::Cache::MemoryStore","Ruby/classes/ActiveSupport/Cache/MemoryStore.html#method-c-new","(options = nil)","",null,0],["new","ActiveSupport::Cache::NullStore","Ruby/classes/ActiveSupport/Cache/NullStore.html#method-c-new","(options = nil)","",null,0],["new","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-c-new","(options = nil)","<p>Create a new cache. The options will be passed to any write method calls\nexcept for :namespace which …\n",null,0],["new","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Ruby/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-c-new","()","",null,0],["new","ActiveSupport::Dependencies::ClassCache","Ruby/classes/ActiveSupport/Dependencies/ClassCache.html#method-c-new","()","",null,0],["new","ActiveSupport::Dependencies::WatchStack","Ruby/classes/ActiveSupport/Dependencies/WatchStack.html#method-c-new","()","<p>@watching is a stack of lists of constants being watched. For instance, if\nparent.rb is autoloaded, the …\n",null,0],["new","ActiveSupport::FileUpdateChecker","Ruby/classes/ActiveSupport/FileUpdateChecker.html#method-c-new","(files, dirs={}, &block)","<p>It accepts two parameters on initialization. The first is an array of files\nand the second is an optional …\n",null,0],["new","ActiveSupport::FileWatcher","Ruby/classes/ActiveSupport/FileWatcher.html#method-c-new","()","",null,0],["new","ActiveSupport::FileWatcher::Backend","Ruby/classes/ActiveSupport/FileWatcher/Backend.html#method-c-new","(path, watcher)","",null,0],["new","ActiveSupport::Gzip::Stream","Ruby/classes/ActiveSupport/Gzip/Stream.html#method-c-new","(*)","",null,0],["new","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new","(constructor = {})","",null,0],["new","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new","(constructor = {})","",null,0],["new","ActiveSupport::Inflector::Inflections","Ruby/classes/ActiveSupport/Inflector/Inflections.html#method-c-new","()","",null,0],["new","ActiveSupport::InheritableOptions","Ruby/classes/ActiveSupport/InheritableOptions.html#method-c-new","(parent = nil)","",null,0],["new","ActiveSupport::JSON::Encoding::Encoder","Ruby/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-c-new","(options = nil)","",null,0],["new","ActiveSupport::MessageEncryptor","Ruby/classes/ActiveSupport/MessageEncryptor.html#method-c-new","(secret, options = {})","",null,0],["new","ActiveSupport::MessageVerifier","Ruby/classes/ActiveSupport/MessageVerifier.html#method-c-new","(secret, options = {})","",null,0],["new","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-c-new","(string)","<p>Creates a new Chars instance by wrapping <em>string</em>.\n",null,0],["new","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Ruby/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-c-new","()","",null,0],["new","ActiveSupport::Notifications::Event","Ruby/classes/ActiveSupport/Notifications/Event.html#method-c-new","(name, start, ending, transaction_id, payload)","",null,0],["new","ActiveSupport::Notifications::Fanout","Ruby/classes/ActiveSupport/Notifications/Fanout.html#method-c-new","()","",null,0],["new","ActiveSupport::Notifications::Instrumenter","Ruby/classes/ActiveSupport/Notifications/Instrumenter.html#method-c-new","(notifier)","",null,0],["new","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-c-new","(*args, &block)","<p>In MRI the Hash class is core and written in C. In particular, methods are\nprogrammed with explicit  …\n",null,0],["new","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-c-new","(*)","",null,0],["new","ActiveSupport::SafeBuffer::SafeConcatError","Ruby/classes/ActiveSupport/SafeBuffer/SafeConcatError.html#method-c-new","()","",null,0],["new","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-c-new","(logger)","",null,0],["new","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-c-new","(utc_time, time_zone, local_time = nil, period = nil)","",null,0],["new","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-c-new","(name, utc_offset = nil, tzinfo = nil)","<p>Create a new TimeZone object with the given name and offset. The offset is\nthe number of seconds that …\n",null,0],["new","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-c-new","(name)","<p>Return a TimeZone instance with the given name, or <code>nil</code> if no\nsuch TimeZone instance exists. (This exists …\n",null,0],["new","ArJdbcMySQL::Error","Ruby/classes/ArJdbcMySQL/Error.html#method-c-new","(msg)","",null,0],["new","Build","Ruby/classes/Build.html#method-c-new","(component, options = {})","",null,0],["new","HTML::Selector","Ruby/classes/HTML/Selector.html#method-c-new","(selector, *values)","<p>Creates a new selector from a CSS 2 selector expression.\n<p>The first argument is the selector expression. …\n",null,0],["new","Mime::Type","Ruby/classes/Mime/Type.html#method-c-new","(string, symbol = nil, synonyms = [])","",null,0],["new","Plugin","Ruby/classes/Plugin.html#method-c-new","(uri, name = nil)","",null,0],["new","PostsController","Ruby/classes/PostsController.html#method-i-new","()","<p>GET /posts/new GET /posts/new.json\n",null,0],["new","Rails::ActionMethods","Ruby/classes/Rails/ActionMethods.html#method-c-new","(generator)","",null,0],["new","Rails::Application","Ruby/classes/Rails/Application.html#method-c-new","()","",null,0],["new","Rails::Application::Configuration","Ruby/classes/Rails/Application/Configuration.html#method-c-new","(*)","",null,0],["new","Rails::Application::RoutesReloader","Ruby/classes/Rails/Application/RoutesReloader.html#method-c-new","()","",null,0],["new","Rails::BacktraceCleaner","Ruby/classes/Rails/BacktraceCleaner.html#method-c-new","()","",null,0],["new","Rails::Commands::Info","Ruby/classes/Rails/Commands/Info.html#method-c-new","(base_command)","",null,0],["new","Rails::Commands::Install","Ruby/classes/Rails/Commands/Install.html#method-c-new","(base_command)","",null,0],["new","Rails::Commands::Plugin","Ruby/classes/Rails/Commands/Plugin.html#method-c-new","()","",null,0],["new","Rails::Commands::Remove","Ruby/classes/Rails/Commands/Remove.html#method-c-new","(base_command)","",null,0],["new","Rails::Console","Ruby/classes/Rails/Console.html#method-c-new","(app)","",null,0],["new","Rails::DBConsole","Ruby/classes/Rails/DBConsole.html#method-c-new","(app)","",null,0],["new","Rails::Engine::Configuration","Ruby/classes/Rails/Engine/Configuration.html#method-c-new","(root=nil)","",null,0],["new","Rails::Engine::Railties","Ruby/classes/Rails/Engine/Railties.html#method-c-new","(config)","<p>TODO Write tests for this behavior extracted from Application\n",null,0],["new","Rails::Generators::ActiveModel","Ruby/classes/Rails/Generators/ActiveModel.html#method-c-new","(name)","",null,0],["new","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-c-new","(*args)","",null,0],["new","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-c-new","(*args)","",null,0],["new","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-c-new","(name, type=nil, index_type=false, attr_options={})","",null,0],["new","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-c-new","(*args)","",null,0],["new","Rails::Initializable::Initializer","Ruby/classes/Rails/Initializable/Initializer.html#method-c-new","(name, context, options, &block)","",null,0],["new","Rails::Paths::Path","Ruby/classes/Rails/Paths/Path.html#method-c-new","(root, current, *paths)","",null,0],["new","Rails::Paths::Root","Ruby/classes/Rails/Paths/Root.html#method-c-new","(path)","",null,0],["new","Rails::Plugin","Ruby/classes/Rails/Plugin.html#method-c-new","(root)","",null,0],["new","Rails::Rack::Debugger","Ruby/classes/Rails/Rack/Debugger.html#method-c-new","(app)","",null,0],["new","Rails::Rack::LogTailer","Ruby/classes/Rails/Rack/LogTailer.html#method-c-new","(app, log = nil)","",null,0],["new","Rails::Rack::Logger","Ruby/classes/Rails/Rack/Logger.html#method-c-new","(app, taggers = nil)","",null,0],["new","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-c-new","()","",null,0],["new","Rails::Server","Ruby/classes/Rails/Server.html#method-c-new","(*)","",null,0],["new","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-c-new","(dir)","",null,0],["new","RailsGuides::Generator","Ruby/classes/RailsGuides/Generator.html#method-c-new","(output=nil)","",null,0],["new","RailsGuides::Indexer","Ruby/classes/RailsGuides/Indexer.html#method-c-new","(body, warnings)","",null,0],["new","RecursiveHTTPFetcher","Ruby/classes/RecursiveHTTPFetcher.html#method-c-new","(urls_to_fetch, level = 1, cwd = \".\")","",null,0],["new","SourceAnnotationExtractor","Ruby/classes/SourceAnnotationExtractor.html#method-c-new","(tag)","",null,0],["new","Sprockets::Bootstrap","Ruby/classes/Sprockets/Bootstrap.html#method-c-new","(app)","",null,0],["new","Sprockets::StaticCompiler","Ruby/classes/Sprockets/StaticCompiler.html#method-c-new","(env, target, paths, options = {})","",null,0],["new","ACL","Rails/classes/ACL.html#method-c-new","(list=nil, order = DENY_ALLOW)","<p>Creates a new ACL from <code>list</code> with an evaluation\n<code>order</code> of DENY_ALLOW or ALLOW_DENY.\n<p>An ACL <code>list</code> is an Array …\n",null,1],["new","ACL::ACLEntry","Rails/classes/ACL/ACLEntry.html#method-c-new","(str)","<p>Creates a new entry using <code>str</code>.\n<p><code>str</code> may be \"*\" or \"all\" to match any address, an IP ...\n",null,1],["new","ACL::ACLList","Rails/classes/ACL/ACLList.html#method-c-new","()","<p>Creates an empty ACLList\n",null,1],["new","Addrinfo","Rails/classes/Addrinfo.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>returns a new instance of Addrinfo. The instance contains sockaddr, family,\nsocktype, protocol. sockaddr …\n",null,1],["new","Array","Rails/classes/Array.html#method-c-new","(p1 = v1, p2 = v2)","<p>Returns a new array.\n<p>In the first form, if no arguments are sent, the new array will be empty.\nWhen a …\n",null,1],["new","BasicObject","Rails/classes/BasicObject.html#method-c-new","()","<p>Not documented\n",null,1],["new","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-c-new","(utime = 0.0, stime = 0.0, cutime = 0.0, cstime = 0.0, real = 0.0, label = nil)","<p>Returns an initialized Tms object which has <em>utime</em> as the user CPU\ntime, <em>stime</em> as the system CPU time, …\n",null,1],["new","BigDecimal","Rails/classes/BigDecimal.html#method-c-new","(p1, p2 = v2)","<p>Create a new BigDecimal object.\n<p>initial &mdash; The initial value, as an Integer, a Float, a Rational, a BigDecimal …\n",null,1],["new","CGI","Rails/classes/CGI.html#method-c-new","(options = {})","<p>Create a new CGI instance.\n<p><code>tag_maker</code> &mdash; This is the same as using the <code>options_hash</code> form with the value\n<code>{</code> …\n",null,1],["new","CGI::Cookie","Rails/classes/CGI/Cookie.html#method-c-new","(name = \"\", *value)","<p>Create a new CGI::Cookie object.\n<p><code>name_string</code> &mdash; The name of the cookie; in this form, there is no #domain …\n",null,1],["new","CGI::Session","Rails/classes/CGI/Session.html#method-c-new","(request, option={})","<p>Create a new CGI::Session object for <code>request</code>.\n<p><code>request</code> is an instance of the <code>CGI</code> class (see\ncgi.rb). <code>option</code> ...\n",null,1],["new","CGI::Session::FileStore","Rails/classes/CGI/Session/FileStore.html#method-c-new","(session, option={})","<p>Create a new FileStore instance.\n<p>This constructor is used internally by CGI::Session.  The user does not …\n",null,1],["new","CGI::Session::MemoryStore","Rails/classes/CGI/Session/MemoryStore.html#method-c-new","(session, option=nil)","<p>Create a new MemoryStore instance.\n<p><code>session</code> is the session this instance is associated with.\n<code>option</code> is ...\n",null,1],["new","CGI::Session::NullStore","Rails/classes/CGI/Session/NullStore.html#method-c-new","(session, option=nil)","<p>Create a new NullStore instance.\n<p><code>session</code> is the session this instance is associated with.\n<code>option</code> is a ...\n",null,1],["new","CGI::Session::PStore","Rails/classes/CGI/Session/PStore.html#method-c-new","(session, option={})","<p>Create a new CGI::Session::PStore instance\n<p>This constructor is used internally by CGI::Session.  The user …\n",null,1],["new","CSV","Rails/classes/CSV.html#method-c-new","(data, options = Hash.new)","<p>This constructor will wrap either a String or IO object passed in\n<code>data</code> for reading and/or writing.   …\n",null,1],["new","CSV::Row","Rails/classes/CSV/Row.html#method-c-new","(headers, fields, header_row = false)","<p>Construct a new CSV::Row from <code>headers</code> and <code>fields</code>,\nwhich are expected to be Arrays.  If one Array is shorter …\n",null,1],["new","CSV::Table","Rails/classes/CSV/Table.html#method-c-new","(array_of_rows)","<p>Construct a new CSV::Table from <code>array_of_rows</code>, which are\nexpected to be CSV::Row objects.  All rows are …\n",null,1],["new","Class","Rails/classes/Class.html#method-c-new","(p1 = v1)","<p>Creates a new anonymous (unnamed) class with the given superclass (or\n<code>Object</code> if no parameter is given). …\n",null,1],["new","Class","Rails/classes/Class.html#method-i-new","(*args)","<p>Calls <code>allocate</code> to create a new object of <em>class</em>’s\nclass, then invokes that object’s <code>initialize</code> method, …\n",null,1],["new","CompositePublisher","Rails/classes/CompositePublisher.html#method-c-new","()","",null,1],["new","ConditionVariable","Rails/classes/ConditionVariable.html#method-c-new","()","<p>Creates a new ConditionVariable\n",null,1],["new","Curses::Window","Rails/classes/Curses/Window.html#method-c-new","(p1, p2, p3, p4)","<p>Contruct a new Curses::Window with constraints of <code>height</code>\nlines, <code>width</code> columns, begin at <code>top</code> line, and …\n",null,1],["new","DBM","Rails/classes/DBM.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Open a dbm database with the specified name, which can include a directory\npath. Any file extensions …\n",null,1],["new","DEBUGGER__::Context","Rails/classes/DEBUGGER__/Context.html#method-c-new","()","",null,1],["new","DL::CFunc","Rails/classes/DL/CFunc.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Create a new function that points to <code>address</code> with an optional\nreturn type of <code>type</code>, a name of <code>name</code> and …\n",null,1],["new","DL::CPtr","Rails/classes/DL/CPtr.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Create a new pointer to <code>address</code> with an optional\n<code>size</code> and <code>freefunc</code>. <code>freefunc</code> will be\ncalled when the …\n",null,1],["new","DL::CPtr","Rails/classes/DL/CPtr.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Create a new pointer to <code>address</code> with an optional\n<code>size</code> and <code>freefunc</code>. <code>freefunc</code> will be\ncalled when the …\n",null,1],["new","DL::CStructEntity","Rails/classes/DL/CStructEntity.html#method-c-new","(addr, types, func = nil)","",null,1],["new","DL::CarriedFunction","Rails/classes/DL/CarriedFunction.html#method-c-new","(cfunc, argtypes, n)","",null,1],["new","DL::CompositeHandler","Rails/classes/DL/CompositeHandler.html#method-c-new","(handlers)","",null,1],["new","DL::Function","Rails/classes/DL/Function.html#method-c-new","(cfunc, argtypes, abi = nil, &block)","",null,1],["new","DL::Handle","Rails/classes/DL/Handle.html#method-c-new","(p1 = v1, p2 = v2)","<p>Create a new handler that opens library named <code>lib</code> with\n<code>flags</code>.  If no library is specified, RTLD_DEFAULT …\n",null,1],["new","DL::Packer","Rails/classes/DL/Packer.html#method-c-new","(types)","",null,1],["new","DL::Stack","Rails/classes/DL/Stack.html#method-c-new","(types)","",null,1],["new","DRb::DRbArray","Rails/classes/DRb/DRbArray.html#method-c-new","(ary)","",null,1],["new","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-c-new","(obj, uri=nil)","<p>Create a new remote object stub.\n<p><code>obj</code> is the (local) object we want to create a stub for. \nNormally this ...\n",null,1],["new","DRb::DRbRemoteError","Rails/classes/DRb/DRbRemoteError.html#method-c-new","(error)","",null,1],["new","DRb::DRbSSLSocket","Rails/classes/DRb/DRbSSLSocket.html#method-c-new","(uri, soc, config, is_established)","",null,1],["new","DRb::DRbSSLSocket::SSLConfig","Rails/classes/DRb/DRbSSLSocket/SSLConfig.html#method-c-new","(config)","",null,1],["new","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-c-new","(uri=nil, front=nil, config_or_acl=nil)","<p>Create a new DRbServer instance.\n<p><code>uri</code> is the URI to bind to.  This is normally of the form\n'druby://&lt;hostname&gt;:&lt;port&gt;' ...\n",null,1],["new","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-c-new","(uri, soc, config={})","<p>Create a new DRbTCPSocket instance.\n<p><code>uri</code> is the URI we are connected to. <code>soc</code> is the\ntcp socket we are bound ...\n",null,1],["new","DRb::DRbUNIXSocket","Rails/classes/DRb/DRbUNIXSocket.html#method-c-new","(uri, soc, config={}, server_mode = false)","",null,1],["new","DRb::DRbUnknown","Rails/classes/DRb/DRbUnknown.html#method-c-new","(err, buf)","<p>Create a new DRbUnknown object.\n<p><code>buf</code> is a string containing a marshalled object that could not\nbe unmarshalled. ...\n",null,1],["new","DRb::DRbUnknownError","Rails/classes/DRb/DRbUnknownError.html#method-c-new","(unknown)","<p>Create a new DRbUnknownError for the DRb::DRbUnknown object\n<code>unknown</code>\n",null,1],["new","DRb::ExtServ","Rails/classes/DRb/ExtServ.html#method-c-new","(there, name, server=nil)","",null,1],["new","DRb::ExtServManager","Rails/classes/DRb/ExtServManager.html#method-c-new","()","",null,1],["new","DRb::GW","Rails/classes/DRb/GW.html#method-c-new","()","",null,1],["new","DRb::TimerIdConv","Rails/classes/DRb/TimerIdConv.html#method-c-new","(timeout=600)","",null,1],["new","DRb::TimerIdConv::TimerHolder2","Rails/classes/DRb/TimerIdConv/TimerHolder2.html#method-c-new","(timeout=600)","",null,1],["new","Date","Rails/classes/Date.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Creates a date object denoting the given calendar date.\n<p>In this class, BCE years are counted astronomically. …\n",null,1],["new","DateTime","Rails/classes/DateTime.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7, p8 = v8)","<p>Creates a date-time object denoting the given calendar date.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">DateTime</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>)    <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["new","Delegator","Rails/classes/Delegator.html#method-c-new","(obj)","<p>Pass in the <em>obj</em> to delegate method calls to.  All methods\nsupported by <em>obj</em> will be delegated to.\n",null,1],["new","Digest::HMAC","Rails/classes/Digest/HMAC.html#method-c-new","(key, digester)","<p>Creates a Digest::HMAC instance.\n",null,1],["new","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-new","()","<p>Returns a new, initialized copy of the digest object.  Equivalent to\ndigest_obj.clone().reset().\n",null,1],["new","Dir","Rails/classes/Dir.html#method-c-new","(p1, p2 = {})","<p>Returns a new directory object for the named directory.\n",null,1],["new","ERB","Rails/classes/ERB.html#method-c-new","(str, safe_level=nil, trim_mode=nil, eoutvar='_erbout')","<p>Constructs a new ERB object with the template specified in <em>str</em>.\n<p>An ERB object works by building a chunk …\n",null,1],["new","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-c-new","(*args)","<p>possible options elements:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">hash</span> <span class=\"ruby-identifier\">form</span><span class=\"ruby-operator\">:</span>\n  :<span class=\"ruby-identifier\">invalid</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">nil</span>            <span class=\"ruby-comment\"># raise error on invalid byte sequence ...</span>\n</pre>\n",null,1],["new","Enumerator","Rails/classes/Enumerator.html#method-c-new","(*args)","<p>Creates a new Enumerator object, which can be used as an Enumerable.\n<p>In the first form, iteration is defined …\n",null,1],["new","Exception","Rails/classes/Exception.html#method-c-new","(p1 = v1)","<p>Construct a new Exception object, optionally passing in a message.\n",null,1],["new","Fiddle::Closure","Rails/classes/Fiddle/Closure.html#method-c-new","(p1, p2, p3 = v3)","<p>Construct a new Closure object.\n<p><code>ret</code> is the C type to be returned\n<p><code>args</code> are passed the callback\n",null,1],["new","Fiddle::Closure::BlockCaller","Rails/classes/Fiddle/Closure/BlockCaller.html#method-c-new","(ctype, args, abi = Fiddle::Function::DEFAULT, &block)","<p>Description\n<p>Construct a new BlockCaller object.\n<p><code>ctype</code> is the C type to be returned\n",null,1],["new","Fiddle::Function","Rails/classes/Fiddle/Function.html#method-c-new","(p1, p2, p3, p4 = v4)","<p>Constructs a Function object.\n<p><code>ptr</code> is a referenced function, of a DL::Handle\n<p><code>args</code> is an Array of arguments, ...\n",null,1],["new","File","Rails/classes/File.html#method-c-new","(*args)","<p>Opens the file named by <code>filename</code> according to\n<code>mode</code> (default is “r”) and returns a new <code>File</code> …\n",null,1],["new","File::Stat","Rails/classes/File/Stat.html#method-c-new","(p1)","<p>Create a File::Stat object for the given file name (raising an exception if\nthe file doesn’t exist). …\n",null,1],["new","Foo","Rails/classes/Foo.html#method-c-new","(str)","",null,1],["new","GDBM","Rails/classes/GDBM.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Creates a new GDBM instance by opening a gdbm file named <em>filename</em>.\nIf the file does not exist, a new …\n",null,1],["new","GServer","Rails/classes/GServer.html#method-c-new","(port, host = DEFAULT_HOST, maxConnections = 4, stdlog = $stderr, audit = false, debug = false)","<p>Create a new server\n<p><code>port</code> &mdash; the port, as a FixNum, on which to listen.\n<p><code>host</code> &mdash; the host to bind to\n",null,1],["new","Gem::Builder","Rails/classes/Gem/Builder.html#method-c-new","(spec)","<p>Constructs a builder instance for the provided specification\n<p>spec &mdash; <p>Gem::Specification &mdash; The specification …\n\n\n",null,1],["new","Gem::Command","Rails/classes/Gem/Command.html#method-c-new","(command, summary=nil, defaults={})","<p>Initializes a generic gem command named <code>command</code>. \n<code>summary</code> is a short description displayed in `gem help …\n",null,1],["new","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-c-new","()","<p>Register all the subcommands supported by the gem command.\n",null,1],["new","Gem::Commands::BuildCommand","Rails/classes/Gem/Commands/BuildCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::CertCommand","Rails/classes/Gem/Commands/CertCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::CheckCommand","Rails/classes/Gem/Commands/CheckCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::CleanupCommand","Rails/classes/Gem/Commands/CleanupCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::ContentsCommand","Rails/classes/Gem/Commands/ContentsCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::DependencyCommand","Rails/classes/Gem/Commands/DependencyCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::EnvironmentCommand","Rails/classes/Gem/Commands/EnvironmentCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::FetchCommand","Rails/classes/Gem/Commands/FetchCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::GenerateIndexCommand","Rails/classes/Gem/Commands/GenerateIndexCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::HelpCommand","Rails/classes/Gem/Commands/HelpCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::InstallCommand","Rails/classes/Gem/Commands/InstallCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::ListCommand","Rails/classes/Gem/Commands/ListCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::LockCommand","Rails/classes/Gem/Commands/LockCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::OutdatedCommand","Rails/classes/Gem/Commands/OutdatedCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::OwnerCommand","Rails/classes/Gem/Commands/OwnerCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::PristineCommand","Rails/classes/Gem/Commands/PristineCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::PushCommand","Rails/classes/Gem/Commands/PushCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::QueryCommand","Rails/classes/Gem/Commands/QueryCommand.html#method-c-new","(name = 'query', summary = 'Query gem information in local or remote repositories')","",null,1],["new","Gem::Commands::RdocCommand","Rails/classes/Gem/Commands/RdocCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::SearchCommand","Rails/classes/Gem/Commands/SearchCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::ServerCommand","Rails/classes/Gem/Commands/ServerCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::SourcesCommand","Rails/classes/Gem/Commands/SourcesCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::SpecificationCommand","Rails/classes/Gem/Commands/SpecificationCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::StaleCommand","Rails/classes/Gem/Commands/StaleCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::UninstallCommand","Rails/classes/Gem/Commands/UninstallCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::UnpackCommand","Rails/classes/Gem/Commands/UnpackCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::UpdateCommand","Rails/classes/Gem/Commands/UpdateCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::WhichCommand","Rails/classes/Gem/Commands/WhichCommand.html#method-c-new","()","",null,1],["new","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-c-new","(arg_list)","<p>Create the config file object.  <code>args</code> is the list of arguments\nfrom the command line.\n<p>The following command …\n",null,1],["new","Gem::ConsoleUI","Rails/classes/Gem/ConsoleUI.html#method-c-new","()","",null,1],["new","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-c-new","(name, *requirements)","<p>Constructs a dependency with <code>name</code> and\n<code>requirements</code>. The last argument can optionally be the\ndependency …\n",null,1],["new","Gem::DependencyInstaller","Rails/classes/Gem/DependencyInstaller.html#method-c-new","(options = {})","<p>Creates a new installer instance.\n<p>Options are:\n<p>:cache_dir &mdash; Alternate repository path to store .gem files …\n",null,1],["new","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-c-new","(development = false)","<p>Creates a new DependencyList.  If <code>development</code> is true,\ndevelopment dependencies will be included.\n",null,1],["new","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-c-new","(spec, rdoc_args=\"\")","<p>Create a document manager for <code>spec</code>. <code>rdoc_args</code>\ncontains arguments for RDoc (template etc.) as a String …\n",null,1],["new","Gem::FilePermissionError","Rails/classes/Gem/FilePermissionError.html#method-c-new","(path)","",null,1],["new","Gem::Format","Rails/classes/Gem/Format.html#method-c-new","(gem_path)","<p>Constructs a Format representing the gem’s data which came from\n<code>gem_path</code>\n",null,1],["new","Gem::GemNotFoundException","Rails/classes/Gem/GemNotFoundException.html#method-c-new","(msg, name=nil, version=nil, errors=nil)","",null,1],["new","Gem::GemPathSearcher","Rails/classes/Gem/GemPathSearcher.html#method-c-new","()","<p>Initialise the data we need to make searches later.\n",null,1],["new","Gem::GemRunner","Rails/classes/Gem/GemRunner.html#method-c-new","(options={})","",null,1],["new","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-c-new","(directory, options = {})","<p>Create an indexer that will index the gems in <code>directory</code>.\n",null,1],["new","Gem::Installer","Rails/classes/Gem/Installer.html#method-c-new","(gem, options={})","<p>Constructs an Installer instance that will install the gem located at\n<code>gem</code>.  <code>options</code> is a Hash with the …\n",null,1],["new","Gem::MockGemUi","Rails/classes/Gem/MockGemUi.html#method-c-new","(input = \"\")","",null,1],["new","Gem::MockGemUi::TermError","Rails/classes/Gem/MockGemUi/TermError.html#method-c-new","(exit_code)","",null,1],["new","Gem::OldFormat","Rails/classes/Gem/OldFormat.html#method-c-new","(gem_path)","<p>Constructs an instance of a Format object, representing the gem’s data\nstructure.\n<p>gem &mdash; <p>String &mdash; The file …\n\n\n",null,1],["new","Gem::Package::FormatError","Rails/classes/Gem/Package/FormatError.html#method-c-new","(message, path = nil)","",null,1],["new","Gem::Package::TarHeader","Rails/classes/Gem/Package/TarHeader.html#method-c-new","(vals)","<p>Creates a new TarHeader using <code>vals</code>\n",null,1],["new","Gem::Package::TarOutput","Rails/classes/Gem/Package/TarOutput.html#method-c-new","(io, signer)","<p>Creates a new TarOutput that will write a gem-format tar file to\n<code>io</code>.  If <code>signer</code> is given, the data.tar.gz …\n",null,1],["new","Gem::Package::TarReader","Rails/classes/Gem/Package/TarReader.html#method-c-new","(io)","<p>Creates a new TarReader on <code>io</code> and yields it to the block, if\ngiven.\n",null,1],["new","Gem::Package::TarReader","Rails/classes/Gem/Package/TarReader.html#method-c-new","(io)","<p>Creates a new tar file reader on <code>io</code> which needs to respond to\n#pos, #eof?, #read, #getc and #pos=\n",null,1],["new","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-c-new","(header, io)","<p>Creates a new tar entry for <code>header</code> that will be read from\n<code>io</code>\n",null,1],["new","Gem::Package::TarWriter","Rails/classes/Gem/Package/TarWriter.html#method-c-new","(io)","<p>Creates a new TarWriter, yielding it if a block is given\n",null,1],["new","Gem::Package::TarWriter","Rails/classes/Gem/Package/TarWriter.html#method-c-new","(io)","<p>Creates a new TarWriter that will write to <code>io</code>\n",null,1],["new","Gem::Package::TarWriter::BoundedStream","Rails/classes/Gem/Package/TarWriter/BoundedStream.html#method-c-new","(io, limit)","<p>Wraps <code>io</code> and allows up to <code>limit</code> bytes to be\nwritten\n",null,1],["new","Gem::Package::TarWriter::RestrictedStream","Rails/classes/Gem/Package/TarWriter/RestrictedStream.html#method-c-new","(io)","<p>Creates a new RestrictedStream wrapping <code>io</code>\n",null,1],["new","Gem::PackageTask","Rails/classes/Gem/PackageTask.html#method-c-new","(gem_spec)","<p>Create a Gem Package task library.  Automatically define the gem if a block\nis given.  If no block is …\n",null,1],["new","Gem::PathSupport","Rails/classes/Gem/PathSupport.html#method-c-new","(env=ENV)","<p>Constructor. Takes a single argument which is to be treated like a\nhashtable, or defaults to ENV, the …\n",null,1],["new","Gem::Platform","Rails/classes/Gem/Platform.html#method-c-new","(arch)","",null,1],["new","Gem::PlatformMismatch","Rails/classes/Gem/PlatformMismatch.html#method-c-new","(name, version)","",null,1],["new","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-c-new","(proxy = nil)","<p>Initialize a remote fetcher using the source URI and possible proxy\ninformation.\n<p><code>proxy</code>\n<p>[String]: explicit …\n",null,1],["new","Gem::RemoteFetcher::FetchError","Rails/classes/Gem/RemoteFetcher/FetchError.html#method-c-new","(message, uri)","",null,1],["new","Gem::Requirement","Rails/classes/Gem/Requirement.html#method-c-new","(*requirements)","<p>Constructs a requirement from <code>requirements</code>. Requirements can\nbe Strings, Gem::Versions, or Arrays of …\n",null,1],["new","Gem::Security::Policy","Rails/classes/Gem/Security/Policy.html#method-c-new","(policy = {}, opt = {})","<p>Create a new Gem::Security::Policy object with the given mode and options.\n",null,1],["new","Gem::Security::Signer","Rails/classes/Gem/Security/Signer.html#method-c-new","(key, cert_chain)","",null,1],["new","Gem::Server","Rails/classes/Gem/Server.html#method-c-new","(gem_dirs, port, daemon, launch = nil, addresses = nil)","<p>Only the first directory in gem_dirs is used for serving gems\n",null,1],["new","Gem::SilentUI","Rails/classes/Gem/SilentUI.html#method-c-new","()","",null,1],["new","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-c-new","(specs_or_dirs = [])","<p>Constructs a source index instance from the provided specifications, which\nis a Hash of gem full names …\n",null,1],["new","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-c-new","()","",null,1],["new","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-new","(name = nil, version = nil)","<p>Specification constructor. Assigns the default values to the attributes and\nyields itself for further …\n",null,1],["new","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-c-new","(in_stream, out_stream, err_stream=STDERR, usetty=true)","",null,1],["new","Gem::StreamUI::SilentDownloadReporter","Rails/classes/Gem/StreamUI/SilentDownloadReporter.html#method-c-new","(out_stream, *args)","",null,1],["new","Gem::StreamUI::SilentProgressReporter","Rails/classes/Gem/StreamUI/SilentProgressReporter.html#method-c-new","(out_stream, size, initial_message, terminal_message = nil)","",null,1],["new","Gem::StreamUI::SimpleProgressReporter","Rails/classes/Gem/StreamUI/SimpleProgressReporter.html#method-c-new","(out_stream, size, initial_message, terminal_message = \"complete\")","",null,1],["new","Gem::StreamUI::VerboseDownloadReporter","Rails/classes/Gem/StreamUI/VerboseDownloadReporter.html#method-c-new","(out_stream, *args)","",null,1],["new","Gem::StreamUI::VerboseProgressReporter","Rails/classes/Gem/StreamUI/VerboseProgressReporter.html#method-c-new","(out_stream, size, initial_message, terminal_message = 'complete')","",null,1],["new","Gem::SystemExitException","Rails/classes/Gem/SystemExitException.html#method-c-new","(exit_code)","",null,1],["new","Gem::Uninstaller","Rails/classes/Gem/Uninstaller.html#method-c-new","(gem, options = {})","<p>Constructs an uninstaller that will uninstall <code>gem</code>\n",null,1],["new","Gem::Validator","Rails/classes/Gem/Validator.html#method-c-new","()","",null,1],["new","Gem::Version","Rails/classes/Gem/Version.html#method-c-new","(version)","<p>Constructs a Version from the <code>version</code> string.  A version\nstring is a series of digits or ASCII letters …\n",null,1],["new","GetoptLong","Rails/classes/GetoptLong.html#method-c-new","(*arguments)","<p>Set up option processing.\n<p>The options to support are passed to new() as an array of arrays. Each\nsub-array …\n",null,1],["new","Hash","Rails/classes/Hash.html#method-c-new","(p1 = v1)","<p>Returns a new, empty hash. If this hash is subsequently accessed by a key\nthat doesn’t correspond to …\n",null,1],["new","HttpServer","Rails/classes/HttpServer.html#method-c-new","(handle_obj, port = 8080, host = DEFAULT_HOST, maxConnections = 4, stdlog = $stdout, audit = true, debug = true)","<p>handle_obj specifies the object, that receives calls to request_handler and\nip_auth_handler\n",null,1],["new","HttpServer::Request","Rails/classes/HttpServer/Request.html#method-c-new","(data, method=nil, path=nil, proto=nil)","",null,1],["new","HttpServer::Response","Rails/classes/HttpServer/Response.html#method-c-new","(status=200)","",null,1],["new","HttpServer::Table","Rails/classes/HttpServer/Table.html#method-c-new","(hash={})","",null,1],["new","IO","Rails/classes/IO.html#method-c-new","(p1, p2 = v2, p3 = {})","<p>Returns a new IO object (a stream) for the given IO object or integer file\ndescriptor and mode string. …\n",null,1],["new","IPAddr","Rails/classes/IPAddr.html#method-c-new","(addr = '::', family = Socket::AF_UNSPEC)","<p>Creates a new ipaddr object either from a human readable IP address\nrepresentation in string, or from …\n",null,1],["new","IRB::Context","Rails/classes/IRB/Context.html#method-c-new","(irb, workspace = nil, input_method = nil, output_method = nil)","<p>Arguments:\n\n<pre>input_method: nil -- stdin or readline\n              String -- File\n              other -- ...</pre>\n",null,1],["new","IRB::ExtendCommand::Nop","Rails/classes/IRB/ExtendCommand/Nop.html#method-c-new","(conf)","",null,1],["new","IRB::FileInputMethod","Rails/classes/IRB/FileInputMethod.html#method-c-new","(file)","",null,1],["new","IRB::Frame","Rails/classes/IRB/Frame.html#method-c-new","()","",null,1],["new","IRB::History","Rails/classes/IRB/History.html#method-c-new","(size = 16)","",null,1],["new","IRB::InputMethod","Rails/classes/IRB/InputMethod.html#method-c-new","(file = STDIN_FILE_NAME)","",null,1],["new","IRB::Inspector","Rails/classes/IRB/Inspector.html#method-c-new","(inspect_proc, init_proc = nil)","",null,1],["new","IRB::Irb","Rails/classes/IRB/Irb.html#method-c-new","(workspace = nil, input_method = nil, output_method = nil)","",null,1],["new","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-c-new","()","",null,1],["new","IRB::Locale","Rails/classes/IRB/Locale.html#method-c-new","(locale = nil)","",null,1],["new","IRB::Notifier::AbstractNotifier","Rails/classes/IRB/Notifier/AbstractNotifier.html#method-c-new","(prefix, base_notifier)","",null,1],["new","IRB::Notifier::CompositeNotifier","Rails/classes/IRB/Notifier/CompositeNotifier.html#method-c-new","(prefix, base_notifier)","",null,1],["new","IRB::Notifier::LeveledNotifier","Rails/classes/IRB/Notifier/LeveledNotifier.html#method-c-new","(base, level, prefix)","",null,1],["new","IRB::Notifier::NoMsgNotifier","Rails/classes/IRB/Notifier/NoMsgNotifier.html#method-c-new","()","",null,1],["new","IRB::ReadlineInputMethod","Rails/classes/IRB/ReadlineInputMethod.html#method-c-new","()","",null,1],["new","IRB::SLex","Rails/classes/IRB/SLex.html#method-c-new","()","",null,1],["new","IRB::SLex::Node","Rails/classes/IRB/SLex/Node.html#method-c-new","(preproc = nil, postproc = nil)","<p>if postproc is nil, this node is an abstract node. if postproc is non-nil,\nthis node is a real node. …\n",null,1],["new","IRB::StdioInputMethod","Rails/classes/IRB/StdioInputMethod.html#method-c-new","()","",null,1],["new","IRB::WorkSpace","Rails/classes/IRB/WorkSpace.html#method-c-new","(*main)","<p>create new workspace. set self to main if specified, otherwise inherit main\nfrom TOPLEVEL_BINDING.\n",null,1],["new","Iconv","Rails/classes/Iconv.html#method-c-new","(p1, p2, p3 = v3)","<p>Creates new code converter from a coding-system designated with\n<code>from</code> to another one designated with  ...\n",null,1],["new","Iconv::Failure","Rails/classes/Iconv/Failure.html#method-c-new","(p1, p2, p3)","<p>Creates new code converter from a coding-system designated with\n<code>from</code> to another one designated with  ...\n",null,1],["new","Logger","Rails/classes/Logger.html#method-c-new","(logdev, shift_age = 0, shift_size = 1048576)","<p>Synopsis\n\n<pre>Logger.new(name, shift_age = 7, shift_size = 1048576)\nLogger.new(name, shift_age = 'weekly')</pre>\n",null,1],["new","Logger::Application","Rails/classes/Logger/Application.html#method-c-new","(appname = nil)","<p>Synopsis\n\n<pre>Application.new(appname = '')</pre>\n<p>Args\n",null,1],["new","Logger::Formatter","Rails/classes/Logger/Formatter.html#method-c-new","()","",null,1],["new","Logger::LogDevice","Rails/classes/Logger/LogDevice.html#method-c-new","(log = nil, opt = {})","",null,1],["new","Matrix","Rails/classes/Matrix.html#method-c-new","(rows, column_size = rows[0].size)","<p>Matrix.new is private; use Matrix.rows, columns, [], etc… to create.\n",null,1],["new","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-c-new","(a)","<p>Constructs the eigenvalue decomposition for a square matrix <code>A</code>\n",null,1],["new","Matrix::LUPDecomposition","Rails/classes/Matrix/LUPDecomposition.html#method-c-new","(a)","",null,1],["new","Module","Rails/classes/Module.html#method-c-new","()","<p>Creates a new anonymous module. If a block is given, it is passed the\nmodule object, and the block is …\n",null,1],["new","MonitorMixin","Rails/classes/MonitorMixin.html#method-c-new","(*args)","<p>Use <code>extend MonitorMixin</code> or <code>include MonitorMixin</code>\ninstead of this constructor.  Have look at the examples …\n",null,1],["new","MonitorMixin::ConditionVariable","Rails/classes/MonitorMixin/ConditionVariable.html#method-c-new","(monitor)","",null,1],["new","Mutex","Rails/classes/Mutex.html#method-c-new","()","<p>Creates a new Mutex\n",null,1],["new","Mutex_m","Rails/classes/Mutex_m.html#method-c-new","(*args)","",null,1],["new","NameError","Rails/classes/NameError.html#method-c-new","(*args)","<p>Construct a new NameError exception. If given the <em>name</em> parameter\nmay subsequently be examined using the …\n",null,1],["new","Net::FTP","Rails/classes/Net/FTP.html#method-c-new","(host = nil, user = nil, passwd = nil, acct = nil)","<p>Creates and returns a new <code>FTP</code> object. If a <code>host</code>\nis given, a connection is made. Additionally, if the …\n",null,1],["new","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-new","(address, port = nil)","<p>Creates a new Net::HTTP object for the specified server address, without\nopening the TCP connection or …\n",null,1],["new","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-new","(address, port = nil, p_addr = nil, p_port = nil, p_user = nil, p_pass = nil)","<p>Creates a new Net::HTTP object without opening a TCP connection or HTTP\nsession. The <code>address</code> should be …\n",null,1],["new","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-new","(address, port = nil, p_addr = nil, p_port = nil, p_user = nil, p_pass = nil)","<p>Creates a new Net::HTTP object without opening a TCP connection or HTTP\nsession. The <code>address</code> should be …\n",null,1],["new","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-new","(address, port = nil)","<p>Creates a new Net::HTTP object for the specified server address, without\nopening the TCP connection or …\n",null,1],["new","Net::HTTPGenericRequest","Rails/classes/Net/HTTPGenericRequest.html#method-c-new","(m, reqbody, resbody, path, initheader = nil)","",null,1],["new","Net::HTTPRequest","Rails/classes/Net/HTTPRequest.html#method-c-new","(path, initheader = nil)","<p>Creates HTTP request object.\n",null,1],["new","Net::IMAP","Rails/classes/Net/IMAP.html#method-c-new","(host, port_or_options = {}, usessl = false, certs = nil, verify = true)","<p>Creates a new Net::IMAP object and connects it to the specified\n<code>host</code>.\n<p><code>options</code> is an option hash, each ...\n",null,1],["new","Net::IMAP::CramMD5Authenticator","Rails/classes/Net/IMAP/CramMD5Authenticator.html#method-c-new","(user, password)","",null,1],["new","Net::IMAP::DigestMD5Authenticator","Rails/classes/Net/IMAP/DigestMD5Authenticator.html#method-c-new","(user, password, authname = nil)","",null,1],["new","Net::IMAP::LoginAuthenticator","Rails/classes/Net/IMAP/LoginAuthenticator.html#method-c-new","(user, password)","",null,1],["new","Net::IMAP::PlainAuthenticator","Rails/classes/Net/IMAP/PlainAuthenticator.html#method-c-new","(user, password)","",null,1],["new","Net::IMAP::ResponseError","Rails/classes/Net/IMAP/ResponseError.html#method-c-new","(response)","",null,1],["new","Net::POP3","Rails/classes/Net/POP3.html#method-c-new","(addr, port = nil, isapop = false)","<p>Creates a new POP3 object.\n<p><code>address</code> is the hostname or ip address of your POP3 server.\n<p>The optional <code>port</code> …\n",null,1],["new","Net::POP3","Rails/classes/Net/POP3.html#method-c-new","(addr, port = nil, isapop = false)","<p>Creates a new POP3 object.\n<p><code>address</code> is the hostname or ip address of your POP3 server.\n<p>The optional <code>port</code> …\n",null,1],["new","Net::POP3","Rails/classes/Net/POP3.html#method-c-new","(addr, port = nil, isapop = false)","<p>Creates a new POP3 object.\n<p><code>address</code> is the hostname or ip address of your POP3 server.\n<p>The optional <code>port</code> …\n",null,1],["new","Net::POP3","Rails/classes/Net/POP3.html#method-c-new","(addr, port = nil, isapop = false)","<p>Creates a new POP3 object.\n<p><code>address</code> is the hostname or ip address of your POP3 server.\n<p>The optional <code>port</code> …\n",null,1],["new","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-new","(address, port = nil)","<p>Creates a new Net::SMTP object.\n<p><code>address</code> is the hostname or ip address of your SMTP server. \n<code>port</code> is the ...\n",null,1],["new","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-new","(address, port = nil)","<p>Creates a new Net::SMTP object.\n<p><code>address</code> is the hostname or ip address of your SMTP server. \n<code>port</code> is the ...\n",null,1],["new","Net::SMTP::Response","Rails/classes/Net/SMTP/Response.html#method-c-new","(status, string)","<p>Creates a new instance of the Response class and sets the status and string\nattributes\n",null,1],["new","Net::Telnet","Rails/classes/Net/Telnet.html#method-c-new","(options)","<p>Creates a new Net::Telnet object.\n<p>Attempts to connect to the host (unless the Proxy option is provided: …\n",null,1],["new","NoMethodError","Rails/classes/NoMethodError.html#method-c-new","(*args)","<p>Construct a NoMethodError exception for a method of the given name called\nwith the given arguments.  …\n",null,1],["new","OLEProperty","Rails/classes/OLEProperty.html#method-c-new","(obj, dispid, gettypes, settypes)","",null,1],["new","OpenSSL::ASN1::ASN1Data","Rails/classes/OpenSSL/ASN1/ASN1Data.html#method-c-new","(p1, p2, p3)","<p><code>value</code>: Please have a look at Constructive and Primitive to see\nhow Ruby types are mapped to ASN.1 types ...\n",null,1],["new","OpenSSL::ASN1::Constructive","Rails/classes/OpenSSL/ASN1/Constructive.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p><code>value</code>: is mandatory.\n<p><code>tag</code>: optional, may be specified for tagged values. If no\n<code>tag</code> is specified, the UNIVERSAL ...\n",null,1],["new","OpenSSL::ASN1::Primitive","Rails/classes/OpenSSL/ASN1/Primitive.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p><code>value</code>: is mandatory.\n<p><code>tag</code>: optional, may be specified for tagged values. If no\n<code>tag</code> is specified, the UNIVERSAL ...\n",null,1],["new","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-c-new","(p1, p2 = v2)","",null,1],["new","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-c-new","(*args)","",null,1],["new","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-c-new","(p1)","<p>The string must contain a valid cipher name like “AES-128-CBC” or “3DES”.\n<p>A list of …\n",null,1],["new","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-c-new","(filename = nil)","",null,1],["new","OpenSSL::Digest","Rails/classes/OpenSSL/Digest.html#method-c-new","(p1, p2 = v2)","<p>Creates a Digest instance based on <code>string</code>, which is either the\nln (long name) or sn (short name) of a …\n",null,1],["new","OpenSSL::Digest::Digest","Rails/classes/OpenSSL/Digest/Digest.html#method-c-new","(*args)","",null,1],["new","OpenSSL::HMAC","Rails/classes/OpenSSL/HMAC.html#method-c-new","(p1, p2)","",null,1],["new","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-c-new","(p1 = v1)","",null,1],["new","OpenSSL::OCSP::BasicResponse","Rails/classes/OpenSSL/OCSP/BasicResponse.html#method-c-new","(*args)","",null,1],["new","OpenSSL::OCSP::CertificateId","Rails/classes/OpenSSL/OCSP/CertificateId.html#method-c-new","(p1, p2, p3 = v3)","",null,1],["new","OpenSSL::OCSP::Request","Rails/classes/OpenSSL/OCSP/Request.html#method-c-new","(p1 = v1)","",null,1],["new","OpenSSL::OCSP::Response","Rails/classes/OpenSSL/OCSP/Response.html#method-c-new","(p1 = v1)","",null,1],["new","OpenSSL::PKCS12","Rails/classes/OpenSSL/PKCS12.html#method-c-new","(p1 = v1, p2 = v2)","<p>Parameters\n<p><code>str</code> - Must be a DER encoded PKCS12 string.\n<p><code>pass</code> - string\n",null,1],["new","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-c-new","(p1 = v1)","<p>Many methods in this class aren’t documented.\n",null,1],["new","OpenSSL::PKCS7::RecipientInfo","Rails/classes/OpenSSL/PKCS7/RecipientInfo.html#method-c-new","(p1)","",null,1],["new","OpenSSL::PKCS7::SignerInfo","Rails/classes/OpenSSL/PKCS7/SignerInfo.html#method-c-new","(p1, p2, p3)","",null,1],["new","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-c-new","(p1 = v1, p2 = v2)","<p>Either generates a DH instance from scratch or by reading already existing\nDH parameters from <code>string</code> …\n",null,1],["new","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-c-new","(p1 = v1, p2 = v2)","<p>Creates a new DSA instance by reading an existing key from\n<code>string</code>.\n<p>Parameters\n<p><code>size</code> is an integer representing ...\n",null,1],["new","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-c-new","(p1 = v1, p2 = v2)","<p>See the OpenSSL documentation for:\n\n<pre>EC_KEY_*</pre>\n",null,1],["new","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>See the OpenSSL documentation for EC_GROUP_*\n",null,1],["new","OpenSSL::PKey::EC::Point","Rails/classes/OpenSSL/PKey/EC/Point.html#method-c-new","(p1, p2 = v2)","<p>See the OpenSSL documentation for EC_POINT_*\n",null,1],["new","OpenSSL::PKey::PKey","Rails/classes/OpenSSL/PKey/PKey.html#method-c-new","()","<p>Because PKey is an abstract class, actually calling this method explicitly\nwill raise a <code>NotImplementedError</code> …\n",null,1],["new","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-c-new","(p1 = v1, p2 = v2)","<p>Generates or loads an RSA keypair.  If an integer <code>key_size</code> is\ngiven it represents the desired key size. …\n",null,1],["new","OpenSSL::SSL::Nonblock","Rails/classes/OpenSSL/SSL/Nonblock.html#method-c-new","(*args)","",null,1],["new","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-c-new","(p1 = v1)","<p>You can get a list of valid methods with OpenSSL::SSL::SSLContext::METHODS\n",null,1],["new","OpenSSL::SSL::SSLServer","Rails/classes/OpenSSL/SSL/SSLServer.html#method-c-new","(svr, ctx)","",null,1],["new","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-c-new","(p1, p2 = v2)","<p>Creates a new SSL socket from <code>io</code> which must be a real ruby\nobject (not an IO-like object that responds …\n",null,1],["new","OpenSSL::SSL::Session","Rails/classes/OpenSSL/SSL/Session.html#method-c-new","(p1)","<p>Parameters\n<p><code>SSLSocket</code> is an OpenSSL::SSL::SSLSocket <code>string</code>\nmust be a DER or PEM encoded Session.\n",null,1],["new","OpenSSL::X509::Attribute","Rails/classes/OpenSSL/X509/Attribute.html#method-c-new","(p1, p2 = v2)","",null,1],["new","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-c-new","(p1 = v1)","",null,1],["new","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-c-new","(p1 = v1)","",null,1],["new","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Creates an X509 extension.\n<p>The extension may be created from <code>asn1</code> data or from an\nextension <code>name</code> and  …\n",null,1],["new","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","",null,1],["new","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-c-new","(p1 = v1, p2 = v2)","",null,1],["new","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-c-new","(p1 = v1)","",null,1],["new","OpenSSL::X509::Revoked","Rails/classes/OpenSSL/X509/Revoked.html#method-c-new","(*args)","",null,1],["new","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-c-new","(*args)","",null,1],["new","OpenStruct","Rails/classes/OpenStruct.html#method-c-new","(hash=nil)","<p>Creates a new OpenStruct object.  By default, the resulting OpenStruct\nobject will have no attributes. …\n",null,1],["new","OpenURI::HTTPError","Rails/classes/OpenURI/HTTPError.html#method-c-new","(message, io)","",null,1],["new","OpenURI::HTTPRedirect","Rails/classes/OpenURI/HTTPRedirect.html#method-c-new","(message, io, uri)","",null,1],["new","OptionParser","Rails/classes/OptionParser.html#method-i-new","()","<p>Pushes a new List.\n",null,1],["new","OptionParser","Rails/classes/OptionParser.html#method-c-new","(banner = nil, width = 32, indent = ' ' * 4)","<p>Initializes the instance and yields itself if called with a block.\n<p><code>banner</code> &mdash; Banner message.\n<p><code>width</code> &mdash; Summary …\n",null,1],["new","OptionParser::Arguable","Rails/classes/OptionParser/Arguable.html#method-c-new","(*args)","",null,1],["new","OptionParser::List","Rails/classes/OptionParser/List.html#method-c-new","()","<p>Just initializes all instance variables.\n",null,1],["new","OptionParser::ParseError","Rails/classes/OptionParser/ParseError.html#method-c-new","(*args)","",null,1],["new","OptionParser::Switch","Rails/classes/OptionParser/Switch.html#method-c-new","(pattern = nil, conv = nil, short = nil, long = nil, arg = nil, desc = ([] if short or long), block = Proc.new)","",null,1],["new","PStore","Rails/classes/PStore.html#method-c-new","(file, thread_safe = false)","<p>To construct a PStore object, pass in the <em>file</em> path where you\nwould like the data to be stored.\n<p>PStore …\n",null,1],["new","Pathname","Rails/classes/Pathname.html#method-c-new","(p1)","<p>Create a Pathname object from the given String (or String-like object). If\n<code>path</code> contains a NUL character …\n",null,1],["new","PrettyPrint","Rails/classes/PrettyPrint.html#method-c-new","(output='', maxwidth=79, newline=\"\\n\", &genspace)","<p>Creates a buffer for pretty printing.\n<p><code>output</code> is an output target. If it is not specified, \" is\nassumed. ...\n",null,1],["new","PrettyPrint::Breakable","Rails/classes/PrettyPrint/Breakable.html#method-c-new","(sep, width, q)","",null,1],["new","PrettyPrint::Group","Rails/classes/PrettyPrint/Group.html#method-c-new","(depth)","",null,1],["new","PrettyPrint::GroupQueue","Rails/classes/PrettyPrint/GroupQueue.html#method-c-new","(*groups)","",null,1],["new","PrettyPrint::SingleLine","Rails/classes/PrettyPrint/SingleLine.html#method-c-new","(output, maxwidth=nil, newline=nil)","",null,1],["new","PrettyPrint::Text","Rails/classes/PrettyPrint/Text.html#method-c-new","()","",null,1],["new","Prime","Rails/classes/Prime.html#method-c-new","()","<p>obsolete. Use <code>Prime</code>::<code>instance</code> or class methods of\n<code>Prime</code>.\n",null,1],["new","Prime::EratosthenesGenerator","Rails/classes/Prime/EratosthenesGenerator.html#method-c-new","()","",null,1],["new","Prime::Generator23","Rails/classes/Prime/Generator23.html#method-c-new","()","",null,1],["new","Prime::PseudoPrimeGenerator","Rails/classes/Prime/PseudoPrimeGenerator.html#method-c-new","(ubound = nil)","",null,1],["new","Prime::TrialDivisionGenerator","Rails/classes/Prime/TrialDivisionGenerator.html#method-c-new","()","",null,1],["new","Proc","Rails/classes/Proc.html#method-c-new","(*args)","<p>Creates a new <code>Proc</code> object, bound to the current context.\n<code>Proc::new</code> may be called without a block only …\n",null,1],["new","Psych::Coder","Rails/classes/Psych/Coder.html#method-c-new","(tag)","",null,1],["new","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-c-new","(p1, p2 = v2)","<p>Create a new Psych::Emitter that writes to <code>io</code>.\n",null,1],["new","Psych::Handler::DumperOptions","Rails/classes/Psych/Handler/DumperOptions.html#method-c-new","()","",null,1],["new","Psych::Nodes::Alias","Rails/classes/Psych/Nodes/Alias.html#method-c-new","(anchor)","<p>Create a new Alias that points to an <code>anchor</code>\n",null,1],["new","Psych::Nodes::Document","Rails/classes/Psych/Nodes/Document.html#method-c-new","(version = [], tag_directives = [], implicit = false)","<p>Create a new Psych::Nodes::Document object.\n<p><code>version</code> is a list indicating the YAML version.\n<code>tags_directives</code> ...\n",null,1],["new","Psych::Nodes::Mapping","Rails/classes/Psych/Nodes/Mapping.html#method-c-new","(anchor = nil, tag = nil, implicit = true, style = BLOCK)","<p>Create a new Psych::Nodes::Mapping object.\n<p><code>anchor</code> is the anchor associated with the map or\n<code>nil</code>. <code>tag</code> is ...\n",null,1],["new","Psych::Nodes::Node","Rails/classes/Psych/Nodes/Node.html#method-c-new","()","<p>Create a new Psych::Nodes::Node\n",null,1],["new","Psych::Nodes::Scalar","Rails/classes/Psych/Nodes/Scalar.html#method-c-new","(value, anchor = nil, tag = nil, plain = true, quoted = false, style = ANY)","<p>Create a new Psych::Nodes::Scalar object.\n<p><code>value</code> is the string value of the scalar <code>anchor</code> is\nan associated ...\n",null,1],["new","Psych::Nodes::Sequence","Rails/classes/Psych/Nodes/Sequence.html#method-c-new","(anchor = nil, tag = nil, implicit = true, style = BLOCK)","<p>Create a new object representing a YAML sequence.\n<p><code>anchor</code> is the anchor associated with the sequence or ...\n",null,1],["new","Psych::Nodes::Stream","Rails/classes/Psych/Nodes/Stream.html#method-c-new","(encoding = UTF8)","<p>Create a new Psych::Nodes::Stream node with an <code>encoding</code> that\ndefaults to Psych::Nodes::Stream::UTF8. …\n",null,1],["new","Psych::Parser","Rails/classes/Psych/Parser.html#method-c-new","(handler = Handler.new)","<p>Creates a new Psych::Parser instance with <code>handler</code>.  YAML\nevents will be called on <code>handler</code>.  See Psych::Parser …\n",null,1],["new","Psych::ScalarScanner","Rails/classes/Psych/ScalarScanner.html#method-c-new","()","<p>Create a new scanner\n",null,1],["new","Psych::Streaming","Rails/classes/Psych/Streaming.html#method-c-new","(io)","<p>Create a new streaming emitter.  Emitter will print to <code>io</code>. \nSee Psych::Stream for an example.\n",null,1],["new","Psych::SyntaxError","Rails/classes/Psych/SyntaxError.html#method-c-new","(file, line, col, offset, problem, context)","",null,1],["new","Psych::TreeBuilder","Rails/classes/Psych/TreeBuilder.html#method-c-new","()","<p>Create a new TreeBuilder instance\n",null,1],["new","Psych::Visitors::DepthFirst","Rails/classes/Psych/Visitors/DepthFirst.html#method-c-new","(block)","",null,1],["new","Psych::Visitors::Emitter","Rails/classes/Psych/Visitors/Emitter.html#method-c-new","(io, options = {})","",null,1],["new","Psych::Visitors::JSONTree","Rails/classes/Psych/Visitors/JSONTree.html#method-c-new","(options = {})","",null,1],["new","Psych::Visitors::ToRuby","Rails/classes/Psych/Visitors/ToRuby.html#method-c-new","(ss = ScalarScanner.new)","",null,1],["new","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-c-new","(options = {})","",null,1],["new","Queue","Rails/classes/Queue.html#method-c-new","()","<p>Creates a new queue.\n",null,1],["new","RDoc::Alias","Rails/classes/RDoc/Alias.html#method-c-new","(text, old_name, new_name, comment, singleton = false)","<p>Creates a new Alias with a token stream of <code>text</code> that aliases\n<code>old_name</code> to <code>new_name</code>, has <code>comment</code>\nand is …\n",null,1],["new","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-c-new","(text, name)","<p>Creates a new AnyMethod with a token stream <code>text</code> and\n<code>name</code>\n",null,1],["new","RDoc::Attr","Rails/classes/RDoc/Attr.html#method-c-new","(text, name, rw, comment, singleton = false)","<p>Creates a new Attr with body <code>text</code>, <code>name</code>,\nread/write status <code>rw</code> and <code>comment</code>. \n<code>singleton</code> marks this as a …\n",null,1],["new","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-c-new","(name, superclass = nil)","<p>Creates a new ClassModule with <code>name</code> with optional\n<code>superclass</code>\n<p>This is a constructor for subclasses, and …\n",null,1],["new","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-c-new","()","<p>Creates a new CodeObject that will document itself and its children\n",null,1],["new","RDoc::Constant","Rails/classes/RDoc/Constant.html#method-c-new","(name, value, comment)","<p>Creates a new constant with <code>name</code>, <code>value</code> and\n<code>comment</code>\n",null,1],["new","RDoc::Context","Rails/classes/RDoc/Context.html#method-c-new","()","<p>Creates an unnamed empty context with public current visibility\n",null,1],["new","RDoc::Context::Section","Rails/classes/RDoc/Context/Section.html#method-c-new","(parent, title, comment)","<p>Creates a new section with <code>title</code> and <code>comment</code>\n",null,1],["new","RDoc::CrossReference","Rails/classes/RDoc/CrossReference.html#method-c-new","(context)","<p>Allows cross-references to be created based on the given\n<code>context</code> (RDoc::Context).\n",null,1],["new","RDoc::ERBIO","Rails/classes/RDoc/ERBIO.html#method-c-new","(str, safe_level = nil, trim_mode = nil, eoutvar = 'io')","<p>Defaults <code>eoutvar</code> to ‘io’, otherwise is identical to ERB’s\ninitialize\n",null,1],["new","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-c-new","(options)","<p>Initialize a few instance variables before we start\n",null,1],["new","RDoc::Generator::RI","Rails/classes/RDoc/Generator/RI.html#method-c-new","(options)","<p>Set up a new ri generator\n",null,1],["new","RDoc::Include","Rails/classes/RDoc/Include.html#method-c-new","(name, comment)","<p>Creates a new Include for <code>name</code> with <code>comment</code>\n",null,1],["new","RDoc::Markup","Rails/classes/RDoc/Markup.html#method-c-new","(attribute_manager = nil)","<p>Take a block of text and use various heuristics to determine its structure\n(paragraphs, lists, and so …\n",null,1],["new","RDoc::Markup::AttrSpan","Rails/classes/RDoc/Markup/AttrSpan.html#method-c-new","(length)","<p>Creates a new AttrSpan for <code>length</code> characters\n",null,1],["new","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-c-new","()","<p>Creates a new attribute manager that understands bold, emphasized and\nteletype text.\n",null,1],["new","RDoc::Markup::BlankLine","Rails/classes/RDoc/Markup/BlankLine.html#method-c-new","()","<p>RDoc::Markup::BlankLine is a singleton\n",null,1],["new","RDoc::Markup::Document","Rails/classes/RDoc/Markup/Document.html#method-c-new","(*parts)","<p>Creates a new Document with <code>parts</code>\n",null,1],["new","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-c-new","(markup = nil)","<p>Creates a new Formatter\n",null,1],["new","RDoc::Markup::IndentedParagraph","Rails/classes/RDoc/Markup/IndentedParagraph.html#method-c-new","(indent, *parts)","<p>Creates a new IndentedParagraph containing <code>parts</code> indented with\n<code>indent</code> spaces\n",null,1],["new","RDoc::Markup::List","Rails/classes/RDoc/Markup/List.html#method-c-new","(type = nil, *items)","<p>Creates a new list of <code>type</code> with <code>items</code>\n",null,1],["new","RDoc::Markup::ListItem","Rails/classes/RDoc/Markup/ListItem.html#method-c-new","(label = nil, *parts)","<p>Creates a new ListItem with an optional <code>label</code> containing\n<code>parts</code>\n",null,1],["new","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-c-new","()","<p>Creates a new Parser.  See also ::parse\n",null,1],["new","RDoc::Markup::PreProcess","Rails/classes/RDoc/Markup/PreProcess.html#method-c-new","(input_file_name, include_path)","<p>Creates a new pre-processor for <code>input_file_name</code> that will look\nfor included files in <code>include_path</code>\n",null,1],["new","RDoc::Markup::Raw","Rails/classes/RDoc/Markup/Raw.html#method-c-new","(*parts)","<p>Creates a new Raw containing <code>parts</code>\n",null,1],["new","RDoc::Markup::Special","Rails/classes/RDoc/Markup/Special.html#method-c-new","(type, text)","<p>Creates a new special sequence of <code>type</code> with <code>text</code>\n",null,1],["new","RDoc::Markup::ToAnsi","Rails/classes/RDoc/Markup/ToAnsi.html#method-c-new","(markup = nil)","<p>Creates a new ToAnsi visitor that is ready to output vibrant ANSI color!\n",null,1],["new","RDoc::Markup::ToBs","Rails/classes/RDoc/Markup/ToBs.html#method-c-new","(markup = nil)","<p>Returns a new ToBs that is ready for hot backspace action!\n",null,1],["new","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-c-new","(markup = nil)","<p>Creates a new formatter that will output HTML\n",null,1],["new","RDoc::Markup::ToHtmlCrossref","Rails/classes/RDoc/Markup/ToHtmlCrossref.html#method-c-new","(from_path, context, show_hash, hyperlink_all = false, markup = nil)","<p>Creates a new crossref resolver that generates links relative to\n<code>context</code> which lives at <code>from_path</code> in …\n",null,1],["new","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-c-new","(markup = nil)","<p>Creates a new formatter that will output (mostly) RDoc markup\n",null,1],["new","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-c-new","(markup = nil)","<p>Creates a new tt-only formatter.\n",null,1],["new","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-c-new","(text, name)","<p>Creates a new MethodAttr from token stream <code>text</code> and method or\nattribute name <code>name</code>.\n<p>Usually this is called …\n",null,1],["new","RDoc::Parser","Rails/classes/RDoc/Parser.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Creates a new Parser storing <code>top_level</code>,\n<code>file_name</code>, <code>content</code>, <code>options</code> and\n<code>stats</code> in instance variables. …\n",null,1],["new","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Prepare to parse a C file\n",null,1],["new","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Creates a new Ruby parser.\n",null,1],["new","RDoc::Parser::Simple","Rails/classes/RDoc/Parser/Simple.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Prepare to parse a plain file\n",null,1],["new","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-c-new","()","<p>Creates a new RDoc::RDoc instance.  Call #document to parse files and\ngenerate documentation.\n",null,1],["new","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-c-new","(initial_options = {})","<p>Creates a new driver using <code>initial_options</code> from ::process_args\n",null,1],["new","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-c-new","(path, type = nil)","<p>Creates a new Store of <code>type</code> that will load or save to\n<code>path</code>\n",null,1],["new","RDoc::Require","Rails/classes/RDoc/Require.html#method-c-new","(name, comment)","<p>Creates a new Require that loads <code>name</code> with\n<code>comment</code>\n",null,1],["new","RDoc::RubygemsHook","Rails/classes/RDoc/RubygemsHook.html#method-c-new","(spec, generate_rdoc = true, generate_ri = true)","<p>Creates a new documentation generator for <code>spec</code>.  RDoc and ri\ndata generation can be disabled through …\n",null,1],["new","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-c-new","(num_files, verbosity = 1)","<p>Creates a new Stats that will have <code>num_files</code>. \n<code>verbosity</code> defaults to 1 which will create an\nRDoc::Stats::Normal …\n",null,1],["new","RDoc::Stats::Quiet","Rails/classes/RDoc/Stats/Quiet.html#method-c-new","(num_files)","<p>Creates a new Quiet that will print nothing\n",null,1],["new","RDoc::Task","Rails/classes/RDoc/Task.html#method-c-new","(name = :rdoc)","<p>Create an RDoc task with the given name. See the RDoc::Task class overview\nfor documentation.\n",null,1],["new","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-new","(file_name)","<p>Creates a new TopLevel for <code>file_name</code>\n",null,1],["new","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-new","(file_name)","<p>Creates a new RDoc::TopLevel with <code>file_name</code> only if one with\nthe same name does not exist in all_files. …\n",null,1],["new","REXML::AttlistDecl","Rails/classes/REXML/AttlistDecl.html#method-c-new","(source)","<p>Create an AttlistDecl, pulling the information from a Source.  Notice that\nthis isn’t very convenient; …\n",null,1],["new","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-c-new","( first, second=nil, parent=nil )","<p>Constructor. FIXME: The parser doesn’t catch illegal characters in\nattributes\n<p>first &mdash; Either: an Attribute …\n",null,1],["new","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-c-new","(element)","<p>Constructor\n<p>element &mdash; the Element of which this is an Attribute\n\n",null,1],["new","REXML::CData","Rails/classes/REXML/CData.html#method-c-new","( first, whitespace=true, parent=nil )","\n<pre>Constructor.  CData is data between &lt;![CDATA[ ... ]]&gt;</pre>\n<p><em>Examples</em>\n\n<pre>CData.new( source )\nCData.new( &quot;Here is ...</pre>\n",null,1],["new","REXML::Child","Rails/classes/REXML/Child.html#method-c-new","( parent = nil )","<p>Constructor.  Any inheritors of this class should call super to make sure\nthis method is called.\n<p>parent … &mdash; ",null,1],["new","REXML::Comment","Rails/classes/REXML/Comment.html#method-c-new","( first, second = nil )","<p>Constructor.  The first argument can be one of three types: @param first If\nString, the contents of this …\n",null,1],["new","REXML::DTD::ElementDecl","Rails/classes/REXML/DTD/ElementDecl.html#method-c-new","(match)","<p>s*(((([“‘]).*?5)|[^/’”>]*)*?)(/)?&gt;/um, true)\n",null,1],["new","REXML::DTD::EntityDecl","Rails/classes/REXML/DTD/EntityDecl.html#method-c-new","(src)","<p>&lt;!ENTITY name SYSTEM “…”&gt; &lt;!ENTITY name “…”&gt;\n",null,1],["new","REXML::DTD::NotationDecl","Rails/classes/REXML/DTD/NotationDecl.html#method-c-new","(src)","",null,1],["new","REXML::Declaration","Rails/classes/REXML/Declaration.html#method-c-new","(src)","",null,1],["new","REXML::DocType","Rails/classes/REXML/DocType.html#method-c-new","( first, parent=nil )","<p>Constructor\n\n<pre>dt = DocType.new( 'foo', '-//I/Hate/External/IDs' )\n# &lt;!DOCTYPE foo '-//I/Hate/External/IDs'&gt; ...</pre>\n",null,1],["new","REXML::Document","Rails/classes/REXML/Document.html#method-c-new","( source = nil, context = {} )","<p>Constructor @param source if supplied, must be a Document, String, or IO.\nDocuments have their context …\n",null,1],["new","REXML::Element","Rails/classes/REXML/Element.html#method-c-new","( arg = UNDEFINED, parent=nil, context=nil )","<p>Constructor\n<p>arg &mdash; if not supplied, will be set to the default value. If a String, the name of\nthis object …\n",null,1],["new","REXML::ElementDecl","Rails/classes/REXML/ElementDecl.html#method-c-new","( src )","",null,1],["new","REXML::Elements","Rails/classes/REXML/Elements.html#method-c-new","(parent)","<p>Constructor\n<p>parent &mdash; the parent Element\n\n",null,1],["new","REXML::Entity","Rails/classes/REXML/Entity.html#method-c-new","(stream, value=nil, parent=nil, reference=false)","<p>Create a new entity.  Simple entities can be constructed by passing a name,\nvalue to the constructor; …\n",null,1],["new","REXML::ExternalEntity","Rails/classes/REXML/ExternalEntity.html#method-c-new","( src )","",null,1],["new","REXML::Formatters::Default","Rails/classes/REXML/Formatters/Default.html#method-c-new","( ie_hack=false )","<p>Prints out the XML document with no formatting – except if id_hack is set.\n<p>ie_hack &mdash; If set to true, then …\n\n",null,1],["new","REXML::Formatters::Pretty","Rails/classes/REXML/Formatters/Pretty.html#method-c-new","( indentation=2, ie_hack=false )","<p>Create a new pretty printer.\n<p>output &mdash; An object implementing ‘&lt;&lt;(String)’, to which the output will …\n",null,1],["new","REXML::Formatters::Transitive","Rails/classes/REXML/Formatters/Transitive.html#method-c-new","( indentation=2, ie_hack=false )","",null,1],["new","REXML::IOSource","Rails/classes/REXML/IOSource.html#method-c-new","(arg, block_size=500, encoding=nil)","<p>block_size has been deprecated\n",null,1],["new","REXML::Instruction","Rails/classes/REXML/Instruction.html#method-c-new","(target, content=nil)","<p>Constructs a new Instruction @param target can be one of a number of\nthings.  If String, then the target …\n",null,1],["new","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-c-new","(node=nil)","<p>Create a new element.\n",null,1],["new","REXML::NotationDecl","Rails/classes/REXML/NotationDecl.html#method-c-new","(name, middle, pub, sys)","",null,1],["new","REXML::Output","Rails/classes/REXML/Output.html#method-c-new","(real_IO, encd=\"iso-8859-1\")","",null,1],["new","REXML::Parent","Rails/classes/REXML/Parent.html#method-c-new","(parent=nil)","<p>Constructor @param parent if supplied, will be set as the parent of this\nobject\n",null,1],["new","REXML::ParseException","Rails/classes/REXML/ParseException.html#method-c-new","( message, source=nil, parser=nil, exception=nil )","",null,1],["new","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-c-new","( source )","",null,1],["new","REXML::Parsers::LightParser","Rails/classes/REXML/Parsers/LightParser.html#method-c-new","(stream)","",null,1],["new","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-c-new","(arg)","<p>The type of this event.  Will be one of :tag_start, :tag_end, :text,\n:processing_instruction, :comment, …\n",null,1],["new","REXML::Parsers::PullParser","Rails/classes/REXML/Parsers/PullParser.html#method-c-new","(stream)","",null,1],["new","REXML::Parsers::SAX2Parser","Rails/classes/REXML/Parsers/SAX2Parser.html#method-c-new","(source)","",null,1],["new","REXML::Parsers::StreamParser","Rails/classes/REXML/Parsers/StreamParser.html#method-c-new","(source, listener)","",null,1],["new","REXML::Parsers::TreeParser","Rails/classes/REXML/Parsers/TreeParser.html#method-c-new","( source, build_context = Document.new )","",null,1],["new","REXML::Parsers::UltraLightParser","Rails/classes/REXML/Parsers/UltraLightParser.html#method-c-new","(stream)","",null,1],["new","REXML::Source","Rails/classes/REXML/Source.html#method-c-new","(arg, encoding=nil)","<p>Constructor @param arg must be a String, and should be a valid XML document\n@param encoding if non-null, …\n",null,1],["new","REXML::SyncEnumerator","Rails/classes/REXML/SyncEnumerator.html#method-c-new","(*enums)","<p>Creates a new SyncEnumerator which enumerates rows of given Enumerable\nobjects.\n",null,1],["new","REXML::Text","Rails/classes/REXML/Text.html#method-c-new","(arg, respect_whitespace=false, parent=nil, raw=nil, entity_filter=nil, illegal=NEEDS_A_SECOND_CHECK )","<p>Constructor <code>arg</code> if a String, the content is set to the String.\nIf a Text, the object is shallowly cloned. …\n",null,1],["new","REXML::UndefinedNamespaceException","Rails/classes/REXML/UndefinedNamespaceException.html#method-c-new","( prefix, source, parser )","",null,1],["new","REXML::Validation::Choice","Rails/classes/REXML/Validation/Choice.html#method-c-new","(context)","",null,1],["new","REXML::Validation::Event","Rails/classes/REXML/Validation/Event.html#method-c-new","(event_type, event_arg=nil )","",null,1],["new","REXML::Validation::Interleave","Rails/classes/REXML/Validation/Interleave.html#method-c-new","(context)","",null,1],["new","REXML::Validation::OneOrMore","Rails/classes/REXML/Validation/OneOrMore.html#method-c-new","(context)","",null,1],["new","REXML::Validation::Ref","Rails/classes/REXML/Validation/Ref.html#method-c-new","(value)","",null,1],["new","REXML::Validation::RelaxNG","Rails/classes/REXML/Validation/RelaxNG.html#method-c-new","(source)","<p>FIXME: Namespaces\n",null,1],["new","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-c-new","( context )","",null,1],["new","REXML::Validation::ValidationException","Rails/classes/REXML/Validation/ValidationException.html#method-c-new","(msg)","",null,1],["new","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-c-new","(version=DEFAULT_VERSION, encoding=nil, standalone=nil)","",null,1],["new","REXML::XPathParser","Rails/classes/REXML/XPathParser.html#method-c-new","( )","",null,1],["new","RSS::Atom::Entry","Rails/classes/RSS/Atom/Entry.html#method-c-new","(version=nil, encoding=nil, standalone=nil)","",null,1],["new","RSS::Atom::Feed","Rails/classes/RSS/Atom/Feed.html#method-c-new","(version=nil, encoding=nil, standalone=nil)","",null,1],["new","RSS::BaseParser","Rails/classes/RSS/BaseParser.html#method-c-new","(rss)","",null,1],["new","RSS::ConversionError","Rails/classes/RSS/ConversionError.html#method-c-new","(string, to, from)","",null,1],["new","RSS::Converter","Rails/classes/RSS/Converter.html#method-c-new","(to_enc, from_enc=nil)","",null,1],["new","RSS::Element","Rails/classes/RSS/Element.html#method-c-new","(do_validate=true, attrs=nil)","",null,1],["new","RSS::ITunesChannelModel::ITunesCategory","Rails/classes/RSS/ITunesChannelModel/ITunesCategory.html#method-c-new","(*args)","",null,1],["new","RSS::ITunesChannelModel::ITunesImage","Rails/classes/RSS/ITunesChannelModel/ITunesImage.html#method-c-new","(*args)","",null,1],["new","RSS::ITunesChannelModel::ITunesOwner","Rails/classes/RSS/ITunesChannelModel/ITunesOwner.html#method-c-new","(*args)","",null,1],["new","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-c-new","(*args)","",null,1],["new","RSS::ImageFaviconModel::ImageFavicon","Rails/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-c-new","(*args)","",null,1],["new","RSS::ImageItemModel::ImageItem","Rails/classes/RSS/ImageItemModel/ImageItem.html#method-c-new","(*args)","",null,1],["new","RSS::ListenerMixin","Rails/classes/RSS/ListenerMixin.html#method-c-new","()","",null,1],["new","RSS::Maker::Atom::Entry","Rails/classes/RSS/Maker/Atom/Entry.html#method-c-new","(feed_version=\"1.0\")","",null,1],["new","RSS::Maker::Atom::Feed","Rails/classes/RSS/Maker/Atom/Feed.html#method-c-new","(feed_version=\"1.0\")","",null,1],["new","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-new","(maker)","",null,1],["new","RSS::Maker::ItemsBase","Rails/classes/RSS/Maker/ItemsBase.html#method-c-new","(maker)","",null,1],["new","RSS::Maker::RSS09","Rails/classes/RSS/Maker/RSS09.html#method-c-new","(feed_version)","",null,1],["new","RSS::Maker::RSS091","Rails/classes/RSS/Maker/RSS091.html#method-c-new","(feed_version=\"0.91\")","",null,1],["new","RSS::Maker::RSS092","Rails/classes/RSS/Maker/RSS092.html#method-c-new","(feed_version=\"0.92\")","",null,1],["new","RSS::Maker::RSS10","Rails/classes/RSS/Maker/RSS10.html#method-c-new","(feed_version=\"1.0\")","",null,1],["new","RSS::Maker::RSS20","Rails/classes/RSS/Maker/RSS20.html#method-c-new","(feed_version=\"2.0\")","",null,1],["new","RSS::Maker::RSSBase","Rails/classes/RSS/Maker/RSSBase.html#method-c-new","(feed_version)","",null,1],["new","RSS::MissingAttributeError","Rails/classes/RSS/MissingAttributeError.html#method-c-new","(tag, attribute)","",null,1],["new","RSS::MissingTagError","Rails/classes/RSS/MissingTagError.html#method-c-new","(tag, parent)","",null,1],["new","RSS::NSError","Rails/classes/RSS/NSError.html#method-c-new","(tag, prefix, require_uri)","",null,1],["new","RSS::NotAvailableValueError","Rails/classes/RSS/NotAvailableValueError.html#method-c-new","(tag, value, attribute=nil)","",null,1],["new","RSS::NotExpectedTagError","Rails/classes/RSS/NotExpectedTagError.html#method-c-new","(tag, uri, parent)","",null,1],["new","RSS::NotExpectedTagError","Rails/classes/RSS/NotExpectedTagError.html#method-c-new","(tag, uri, parent)","",null,1],["new","RSS::NotSetError","Rails/classes/RSS/NotSetError.html#method-c-new","(name, variables)","",null,1],["new","RSS::NotValidXMLParser","Rails/classes/RSS/NotValidXMLParser.html#method-c-new","(parser)","",null,1],["new","RSS::NotWellFormedError","Rails/classes/RSS/NotWellFormedError.html#method-c-new","(line=nil, element=nil)","<p>Create a new NotWellFormedError for an error at <code>line</code> in\n<code>element</code>.  If a block is given the return value …\n",null,1],["new","RSS::OverlappedPrefixError","Rails/classes/RSS/OverlappedPrefixError.html#method-c-new","(prefix)","",null,1],["new","RSS::Parser","Rails/classes/RSS/Parser.html#method-c-new","(rss, parser_class=self.class.default_parser)","",null,1],["new","RSS::RDF","Rails/classes/RSS/RDF.html#method-c-new","(version=nil, encoding=nil, standalone=nil)","",null,1],["new","RSS::RDF::Bag","Rails/classes/RSS/RDF/Bag.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Bag","Rails/classes/RSS/RDF/Bag.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Channel","Rails/classes/RSS/RDF/Channel.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Channel::Image","Rails/classes/RSS/RDF/Channel/Image.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Channel::Items","Rails/classes/RSS/RDF/Channel/Items.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Channel::Textinput","Rails/classes/RSS/RDF/Channel/Textinput.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Image","Rails/classes/RSS/RDF/Image.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Item","Rails/classes/RSS/RDF/Item.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Li","Rails/classes/RSS/RDF/Li.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Li","Rails/classes/RSS/RDF/Li.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Li","Rails/classes/RSS/RDF/Li.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Seq","Rails/classes/RSS/RDF/Seq.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Seq","Rails/classes/RSS/RDF/Seq.html#method-c-new","(*args)","",null,1],["new","RSS::RDF::Textinput","Rails/classes/RSS/RDF/Textinput.html#method-c-new","(*args)","",null,1],["new","RSS::RootElementMixin","Rails/classes/RSS/RootElementMixin.html#method-c-new","(feed_version, version=nil, encoding=nil, standalone=nil)","",null,1],["new","RSS::Rss","Rails/classes/RSS/Rss.html#method-c-new","(feed_version, version=nil, encoding=nil, standalone=nil)","",null,1],["new","RSS::Rss::Channel::Cloud","Rails/classes/RSS/Rss/Channel/Cloud.html#method-c-new","(*args)","",null,1],["new","RSS::Rss::Channel::Image","Rails/classes/RSS/Rss/Channel/Image.html#method-c-new","(*args)","",null,1],["new","RSS::Rss::Channel::Item::Category","Rails/classes/RSS/Rss/Channel/Item/Category.html#method-c-new","(*args)","",null,1],["new","RSS::Rss::Channel::Item::Enclosure","Rails/classes/RSS/Rss/Channel/Item/Enclosure.html#method-c-new","(*args)","",null,1],["new","RSS::Rss::Channel::Item::Guid","Rails/classes/RSS/Rss/Channel/Item/Guid.html#method-c-new","(*args)","",null,1],["new","RSS::Rss::Channel::Item::Source","Rails/classes/RSS/Rss/Channel/Item/Source.html#method-c-new","(*args)","",null,1],["new","RSS::Rss::Channel::SkipDays::Day","Rails/classes/RSS/Rss/Channel/SkipDays/Day.html#method-c-new","(*args)","",null,1],["new","RSS::Rss::Channel::SkipHours::Hour","Rails/classes/RSS/Rss/Channel/SkipHours/Hour.html#method-c-new","(*args)","",null,1],["new","RSS::Rss::Channel::TextInput","Rails/classes/RSS/Rss/Channel/TextInput.html#method-c-new","(*args)","",null,1],["new","RSS::TaxonomyTopicModel::TaxonomyTopic","Rails/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html#method-c-new","(*args)","",null,1],["new","RSS::TaxonomyTopicsModel::TaxonomyTopics","Rails/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-c-new","(*args)","",null,1],["new","RSS::TooMuchTagError","Rails/classes/RSS/TooMuchTagError.html#method-c-new","(tag, parent)","",null,1],["new","RSS::TrackBackModel10::TrackBackAbout","Rails/classes/RSS/TrackBackModel10/TrackBackAbout.html#method-c-new","(*args)","",null,1],["new","RSS::TrackBackModel10::TrackBackPing","Rails/classes/RSS/TrackBackModel10/TrackBackPing.html#method-c-new","(*args)","",null,1],["new","RSS::TrackBackModel20::TrackBackAbout","Rails/classes/RSS/TrackBackModel20/TrackBackAbout.html#method-c-new","(*args)","",null,1],["new","RSS::TrackBackModel20::TrackBackPing","Rails/classes/RSS/TrackBackModel20/TrackBackPing.html#method-c-new","(*args)","",null,1],["new","RSS::UnknownConversionMethodError","Rails/classes/RSS/UnknownConversionMethodError.html#method-c-new","(to, from)","",null,1],["new","RSS::UnknownConversionMethodError","Rails/classes/RSS/UnknownConversionMethodError.html#method-c-new","(to, from)","",null,1],["new","RSS::UnknownTagError","Rails/classes/RSS/UnknownTagError.html#method-c-new","(tag, uri)","",null,1],["new","RSS::UnsupportedMakerVersionError","Rails/classes/RSS/UnsupportedMakerVersionError.html#method-c-new","(version)","",null,1],["new","RSS::XML::Element","Rails/classes/RSS/XML/Element.html#method-c-new","(name, prefix=nil, uri=nil, attributes={}, children=[])","",null,1],["new","RSS::XMLParserNotFound","Rails/classes/RSS/XMLParserNotFound.html#method-c-new","()","",null,1],["new","RSS::XMLStyleSheet","Rails/classes/RSS/XMLStyleSheet.html#method-c-new","(*attrs)","",null,1],["new","RSS::XMLStyleSheetMixin","Rails/classes/RSS/XMLStyleSheetMixin.html#method-c-new","(*args)","",null,1],["new","Rake::Application","Rails/classes/Rake/Application.html#method-c-new","()","<p>Initialize a Rake::Application object.\n",null,1],["new","Rake::CompositePublisher","Rails/classes/Rake/CompositePublisher.html#method-c-new","()","",null,1],["new","Rake::FileList","Rails/classes/Rake/FileList.html#method-c-new","(*patterns)","<p>Create a file list from the globbable patterns given.  If you wish to\nperform multiple includes or excludes …\n",null,1],["new","Rake::FtpFile","Rails/classes/Rake/FtpFile.html#method-c-new","(path, entry)","",null,1],["new","Rake::FtpUploader","Rails/classes/Rake/FtpUploader.html#method-c-new","(path, host, account, password)","<p>Create an FTP uploader targeting the directory <code>path</code> on\n<code>host</code> using the given account and password.  <code>path</code>\n…\n",null,1],["new","Rake::InvocationChain","Rails/classes/Rake/InvocationChain.html#method-c-new","(value, tail)","",null,1],["new","Rake::NameSpace","Rails/classes/Rake/NameSpace.html#method-c-new","(task_manager, scope_list)","<p>Create a namespace lookup object using the given task manager and the list\nof scopes.\n",null,1],["new","Rake::PackageTask","Rails/classes/Rake/PackageTask.html#method-c-new","(name=nil, version=nil)","<p>Create a Package Task with the given name and version.  Use\n<code>:noversion</code> as the version to build a package …\n",null,1],["new","Rake::PseudoStatus","Rails/classes/Rake/PseudoStatus.html#method-c-new","(code=0)","",null,1],["new","Rake::RubyForgePublisher","Rails/classes/Rake/RubyForgePublisher.html#method-c-new","(projname, user)","",null,1],["new","Rake::RuleRecursionOverflowError","Rails/classes/Rake/RuleRecursionOverflowError.html#method-c-new","(*args)","",null,1],["new","Rake::SshDirPublisher","Rails/classes/Rake/SshDirPublisher.html#method-c-new","(host, remote_dir, local_dir)","",null,1],["new","Rake::SshFilePublisher","Rails/classes/Rake/SshFilePublisher.html#method-c-new","(host, remote_dir, local_dir, *files)","<p>Create a publisher using the give host information.\n",null,1],["new","Rake::Task","Rails/classes/Rake/Task.html#method-c-new","(task_name, app)","<p>Create a task named <code>task_name</code> with no actions or\nprerequisites. Use <code>enhance</code> to add actions and prerequisites. …\n",null,1],["new","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-c-new","(names, values, parent=nil)","<p>Create a TaskArgument object with a list of named arguments (given by\n:names) and a set of associated …\n",null,1],["new","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-c-new","()","",null,1],["new","Random","Rails/classes/Random.html#method-c-new","(p1 = v1)","<p>Creates new Mersenne Twister based pseudorandom number generator with seed.\nWhen the argument seed is …\n",null,1],["new","Range","Rails/classes/Range.html#method-c-new","(p1, p2, p3 = v3)","<p>Constructs a range using the given <em>start</em> and <em>end</em>. If the\nthird parameter is omitted or is <code>false</code>, the …\n",null,1],["new","Regexp","Rails/classes/Regexp.html#method-c-new","(*args)","<p>Constructs a new regular expression from <em>pattern</em>, which can be\neither a <code>String</code> or a <code>Regexp</code> (in which …\n",null,1],["new","Resolv","Rails/classes/Resolv.html#method-c-new","(resolvers=[Hosts.new, DNS.new])","<p>Creates a new Resolv using <code>resolvers</code>.\n",null,1],["new","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-c-new","(config_info=nil)","<p>Creates a new DNS resolver.\n<p><code>config_info</code> can be:\n<p>nil &mdash; Uses /etc/resolv.conf.\n",null,1],["new","Resolv::DNS::Resource::DomainName","Rails/classes/Resolv/DNS/Resource/DomainName.html#method-c-new","(name)","<p>Creates a new DomainName from <code>name</code>.\n",null,1],["new","Resolv::DNS::Resource::Generic","Rails/classes/Resolv/DNS/Resource/Generic.html#method-c-new","(data)","<p>Creates a new generic resource.\n",null,1],["new","Resolv::DNS::Resource::HINFO","Rails/classes/Resolv/DNS/Resource/HINFO.html#method-c-new","(cpu, os)","<p>Creates a new HINFO running <code>os</code> on <code>cpu</code>.\n",null,1],["new","Resolv::DNS::Resource::IN::A","Rails/classes/Resolv/DNS/Resource/IN/A.html#method-c-new","(address)","<p>Creates a new A for <code>address</code>.\n",null,1],["new","Resolv::DNS::Resource::IN::AAAA","Rails/classes/Resolv/DNS/Resource/IN/AAAA.html#method-c-new","(address)","<p>Creates a new AAAA for <code>address</code>.\n",null,1],["new","Resolv::DNS::Resource::IN::SRV","Rails/classes/Resolv/DNS/Resource/IN/SRV.html#method-c-new","(priority, weight, port, target)","<p>Create a SRV resource record.\n<p>See the documentation for #priority, #weight, #port and #target for\n<code>priority</code> …\n",null,1],["new","Resolv::DNS::Resource::IN::WKS","Rails/classes/Resolv/DNS/Resource/IN/WKS.html#method-c-new","(address, protocol, bitmap)","",null,1],["new","Resolv::DNS::Resource::MINFO","Rails/classes/Resolv/DNS/Resource/MINFO.html#method-c-new","(rmailbx, emailbx)","",null,1],["new","Resolv::DNS::Resource::MX","Rails/classes/Resolv/DNS/Resource/MX.html#method-c-new","(preference, exchange)","<p>Creates a new MX record with <code>preference</code>, accepting mail at\n<code>exchange</code>.\n",null,1],["new","Resolv::DNS::Resource::SOA","Rails/classes/Resolv/DNS/Resource/SOA.html#method-c-new","(mname, rname, serial, refresh, retry_, expire, minimum)","<p>Creates a new SOA record.  See the attr documentation for the details of\neach argument.\n",null,1],["new","Resolv::DNS::Resource::TXT","Rails/classes/Resolv/DNS/Resource/TXT.html#method-c-new","(first_string, *rest_strings)","",null,1],["new","Resolv::Hosts","Rails/classes/Resolv/Hosts.html#method-c-new","(filename = DefaultFileName)","<p>Creates a new Resolv::Hosts, using <code>filename</code> for its data\nsource.\n",null,1],["new","Rinda::DRbObjectTemplate","Rails/classes/Rinda/DRbObjectTemplate.html#method-c-new","(uri=nil, ref=nil)","<p>Creates a new DRbObjectTemplate that will match against <code>uri</code>\nand <code>ref</code>.\n",null,1],["new","Rinda::NotifyTemplateEntry","Rails/classes/Rinda/NotifyTemplateEntry.html#method-c-new","(place, event, tuple, expires=nil)","<p>Creates a new NotifyTemplateEntry that watches <code>place</code> for\n+event+s that match <code>tuple</code>.\n",null,1],["new","Rinda::RingFinger","Rails/classes/Rinda/RingFinger.html#method-c-new","(broadcast_list=@@broadcast_list, port=Ring_PORT)","<p>Creates a new RingFinger that will look for RingServers at\n<code>port</code> on the addresses in <code>broadcast_list</code>.\n",null,1],["new","Rinda::RingProvider","Rails/classes/Rinda/RingProvider.html#method-c-new","(klass, front, desc, renewer = nil)","<p>Creates a RingProvider that will provide a <code>klass</code> service\nrunning on <code>front</code>, with a <code>description</code>. \n<code>renewer</code> …\n",null,1],["new","Rinda::RingServer","Rails/classes/Rinda/RingServer.html#method-c-new","(ts, port=Ring_PORT)","<p>Advertises <code>ts</code> on the UDP broadcast address at\n<code>port</code>.\n",null,1],["new","Rinda::SimpleRenewer","Rails/classes/Rinda/SimpleRenewer.html#method-c-new","(sec=180)","<p>Creates a new SimpleRenewer that keeps an object alive for another\n<code>sec</code> seconds.\n",null,1],["new","Rinda::Tuple","Rails/classes/Rinda/Tuple.html#method-c-new","(ary_or_hash)","<p>Creates a new Tuple from <code>ary_or_hash</code> which must be an Array or\nHash.\n",null,1],["new","Rinda::TupleBag::TupleBin","Rails/classes/Rinda/TupleBag/TupleBin.html#method-c-new","()","",null,1],["new","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-c-new","(ary, sec=nil)","<p>Creates a TupleEntry based on <code>ary</code> with an optional renewer or\nexpiry time <code>sec</code>.\n<p>A renewer must implement …\n",null,1],["new","Rinda::TupleSpace","Rails/classes/Rinda/TupleSpace.html#method-c-new","(period=60)","<p>Creates a new TupleSpace.  <code>period</code> is used to control how often\nto look for dead tuples after modifications …\n",null,1],["new","Rinda::TupleSpaceProxy","Rails/classes/Rinda/TupleSpaceProxy.html#method-c-new","(ts)","<p>Creates a new TupleSpaceProxy to wrap <code>ts</code>.\n",null,1],["new","Rinda::WaitTemplateEntry","Rails/classes/Rinda/WaitTemplateEntry.html#method-c-new","(place, ary, expires=nil)","",null,1],["new","Ripper::Filter","Rails/classes/Ripper/Filter.html#method-c-new","(src, filename = '-', lineno = 1)","",null,1],["new","Ripper::TokenPattern::MatchData","Rails/classes/Ripper/TokenPattern/MatchData.html#method-c-new","(tokens, match)","",null,1],["new","RubyLex","Rails/classes/RubyLex.html#method-c-new","()","",null,1],["new","RubyToken::TkId","Rails/classes/RubyToken/TkId.html#method-c-new","(seek, line_no, char_no, name)","",null,1],["new","RubyToken::TkNode","Rails/classes/RubyToken/TkNode.html#method-c-new","(seek, line_no, char_no)","",null,1],["new","RubyToken::TkOPASGN","Rails/classes/RubyToken/TkOPASGN.html#method-c-new","(seek, line_no, char_no, op)","",null,1],["new","RubyToken::TkUnknownChar","Rails/classes/RubyToken/TkUnknownChar.html#method-c-new","(seek, line_no, char_no, id)","",null,1],["new","RubyToken::TkVal","Rails/classes/RubyToken/TkVal.html#method-c-new","(seek, line_no, char_no, value = nil)","",null,1],["new","RubyToken::Token","Rails/classes/RubyToken/Token.html#method-c-new","(seek, line_no, char_no)","",null,1],["new","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = v5)","",null,1],["new","SDBM","Rails/classes/SDBM.html#method-c-new","(p1, p2 = v2)","",null,1],["new","SOCKSSocket","Rails/classes/SOCKSSocket.html#method-c-new","(host, serv)","",null,1],["new","SOCKSSocket","Rails/classes/SOCKSSocket.html#method-c-new","(p1, p2)","<p>Opens a SOCKS connection to <code>host</code> via the SOCKS server\n<code>serv</code>.\n",null,1],["new","Set","Rails/classes/Set.html#method-c-new","(enum = nil)","<p>Creates a new set containing the elements of the given enumerable object.\n<p>If a block is given, the elements …\n",null,1],["new","Shell","Rails/classes/Shell.html#method-c-new","(pwd = Dir.pwd, umask = nil)","",null,1],["new","Shell::AppendFile","Rails/classes/Shell/AppendFile.html#method-c-new","(sh, to_filename, filter)","",null,1],["new","Shell::AppendIO","Rails/classes/Shell/AppendIO.html#method-c-new","(sh, io, filter)","",null,1],["new","Shell::Cat","Rails/classes/Shell/Cat.html#method-c-new","(sh, *filenames)","",null,1],["new","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-new","(shell)","",null,1],["new","Shell::Concat","Rails/classes/Shell/Concat.html#method-c-new","(sh, *jobs)","",null,1],["new","Shell::Echo","Rails/classes/Shell/Echo.html#method-c-new","(sh, *strings)","",null,1],["new","Shell::Filter","Rails/classes/Shell/Filter.html#method-c-new","(sh)","",null,1],["new","Shell::Glob","Rails/classes/Shell/Glob.html#method-c-new","(sh, pattern)","",null,1],["new","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-c-new","(shell)","",null,1],["new","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-c-new","(sh, command, *opts)","",null,1],["new","Shell::Tee","Rails/classes/Shell/Tee.html#method-c-new","(sh, filename)","",null,1],["new","Shell::Void","Rails/classes/Shell/Void.html#method-c-new","(sh, *opts)","",null,1],["new","SignalException","Rails/classes/SignalException.html#method-c-new","(*args)","<p>Construct a new SignalException object.  <code>sig_name</code> should be a\nknown signal name.\n",null,1],["new","SizedQueue","Rails/classes/SizedQueue.html#method-c-new","(max)","<p>Creates a fixed-length queue with a maximum size of <code>max</code>.\n",null,1],["new","Socket","Rails/classes/Socket.html#method-c-new","(p1, p2, p3 = v3)","<p>Creates a new socket object.\n<p><em>domain</em> should be a communications domain such as: :INET, :INET6,\n:UNIX, etc. ...\n",null,1],["new","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-c-new","(p1, p2, p3, p4)","<p><em>family</em> should be an integer, a string or a symbol.\n<p>Socket::AF_INET, “AF_INET”, “INET”, …\n",null,1],["new","Socket::Option","Rails/classes/Socket/Option.html#method-c-new","(p1, p2, p3, p4)","<p>Returns a new Socket::Option object.\n\n<pre>sockopt = Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, [1].pack(&quot;i&quot;)) ...</pre>\n",null,1],["new","Socket::UDPSource","Rails/classes/Socket/UDPSource.html#method-c-new","(remote_address, local_address, &reply_proc)","<p><code>remote_adress</code> is an Addrinfo object.\n<p><code>local_adress</code> is an Addrinfo object.\n<p><code>reply_proc</code> is a Proc used to send ...\n",null,1],["new","SshDirPublisher","Rails/classes/SshDirPublisher.html#method-c-new","(host, remote_dir, local_dir)","",null,1],["new","SshFilePublisher","Rails/classes/SshFilePublisher.html#method-c-new","(host, remote_dir, local_dir, *files)","<p>Create a publisher using the give host information.\n",null,1],["new","String","Rails/classes/String.html#method-c-new","(p1 = v1)","<p>Returns a new string object containing a copy of <em>str</em>.\n",null,1],["new","StringIO","Rails/classes/StringIO.html#method-c-new","(*args)","<p>Creates new StringIO instance from with <em>string</em> and <em>mode</em>.\n",null,1],["new","StringScanner","Rails/classes/StringScanner.html#method-c-new","(p1, p2 = v2)","<p>Creates a new StringScanner object to scan over the given\n<code>string</code>. <code>dup</code> argument is obsolete and not used …\n",null,1],["new","Struct","Rails/classes/Struct.html#method-c-new","(p1, *args)","<p>Creates a new class, named by <em>aString</em>, containing accessor methods\nfor the given symbols. If the name …\n",null,1],["new","Sync_m","Rails/classes/Sync_m.html#method-c-new","(*args)","",null,1],["new","Sync_m","Rails/classes/Sync_m.html#method-c-new","(*args)","",null,1],["new","SystemCallError","Rails/classes/SystemCallError.html#method-c-new","(p1, p2 = v2)","<p>If <em>errno</em> corresponds to a known system error code, constructs the\nappropriate <code>Errno</code> class for that error, …\n",null,1],["new","SystemExit","Rails/classes/SystemExit.html#method-c-new","(*args)","<p>Create a new <code>SystemExit</code> exception with the given status.\n",null,1],["new","TCPServer","Rails/classes/TCPServer.html#method-c-new","(p1 = v1, p2)","<p>Creates a new server socket bound to <em>port</em>.\n<p>If <em>hostname</em> is given, the socket is bound to it.\n\n<pre>serv = TCPServer.new(&quot;127.0.0.1&quot;, ...</pre>\n",null,1],["new","TCPSocket","Rails/classes/TCPSocket.html#method-c-new","(host, serv, *rest)","",null,1],["new","TCPSocket","Rails/classes/TCPSocket.html#method-c-new","(p1, p2, p3 = v3, p4 = v4)","<p>Opens a TCP connection to <code>remote_host</code> on\n<code>remote_port</code>.  If <code>local_host</code> and\n<code>local_port</code> are specified, then …\n",null,1],["new","Tempfile","Rails/classes/Tempfile.html#method-c-new","(basename, *rest)","<p>Creates a temporary file with permissions 0600 (= only readable and\nwritable by the owner) and opens …\n",null,1],["new","Thread","Rails/classes/Thread.html#method-c-new","(*arg, &block)","",null,1],["new","ThreadsWait","Rails/classes/ThreadsWait.html#method-c-new","(*threads)","<p>Creates a ThreadsWait object, specifying the threads to wait on.\nNon-blocking.\n",null,1],["new","ThreadsWait","Rails/classes/ThreadsWait.html#method-c-new","(*threads)","<p>Creates a ThreadsWait object, specifying the threads to wait on.\nNon-blocking.\n",null,1],["new","Time","Rails/classes/Time.html#method-c-new","(*args)","<p>Returns a <code>Time</code> object.\n<p>It is initialized to the current system time if no argument.\n<strong>Note:</strong> The object created …\n",null,1],["new","UDPSocket","Rails/classes/UDPSocket.html#method-c-new","(p1 = v1)","<p>Creates a new UDPSocket object.\n<p><em>address_family</em> should be an integer, a string or a symbol:\nSocket::AF_INET ...\n",null,1],["new","UNIXServer","Rails/classes/UNIXServer.html#method-c-new","(p1)","<p>Creates a new UNIX server socket bound to <em>path</em>.\n\n<pre>serv = UNIXServer.new(&quot;/tmp/sock&quot;)\ns = serv.accept\np s.read</pre>\n",null,1],["new","UNIXSocket","Rails/classes/UNIXSocket.html#method-c-new","(p1)","<p>Creates a new UNIX client socket connected to <em>path</em>.\n\n<pre>s = UNIXSocket.new(&quot;/tmp/sock&quot;)\ns.send &quot;hello&quot;, 0</pre>\n",null,1],["new","URI::FTP","Rails/classes/URI/FTP.html#method-c-new","(*arg)","<p>Description\n<p>Creates a new URI::FTP object from generic URL components with no syntax\nchecking.\n<p>Unlike build(), …\n",null,1],["new","URI::Generic","Rails/classes/URI/Generic.html#method-c-new","(scheme, userinfo, host, port, registry, path, opaque, query, fragment, parser = DEFAULT_PARSER, arg_check = false)","<p>Args\n<p><code>scheme</code> &mdash; Protocol scheme, i.e. ‘http’,‘ftp’,‘mailto’ and so on.\n<p><code>userinfo</code> &mdash; User name and password, i.e. …\n",null,1],["new","URI::HTTP","Rails/classes/URI/HTTP.html#method-c-new","(*arg)","<p>Description\n<p>Create a new URI::HTTP object from generic URI components as per RFC 2396.\nNo HTTP-specific …\n",null,1],["new","URI::LDAP","Rails/classes/URI/LDAP.html#method-c-new","(*arg)","<p>Description\n<p>Create a new URI::LDAP object from generic URI components as per RFC 2396.\nNo LDAP-specific …\n",null,1],["new","URI::MailTo","Rails/classes/URI/MailTo.html#method-c-new","(*arg)","<p>Description\n<p>Creates a new URI::MailTo object from generic URL components with no syntax\nchecking.\n<p>This …\n",null,1],["new","URI::Parser","Rails/classes/URI/Parser.html#method-c-new","(opts = {})","<p>Synopsis\n\n<pre>URI::Parser.new([opts])</pre>\n<p>Args\n",null,1],["new","Vector","Rails/classes/Vector.html#method-c-new","(array)","<p>Vector.new is private; use Vector[] or Vector.elements to create.\n",null,1],["new","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-c-new","(log_file=nil, level=nil)","<p>Initializes a new logger for <code>log_file</code> that outputs messages at\n<code>level</code> or higher.  <code>log_file</code> can be a filename, …\n",null,1],["new","WEBrick::CGI","Rails/classes/WEBrick/CGI.html#method-c-new","(*args)","",null,1],["new","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-c-new","(config, env, stdin, stdout)","",null,1],["new","WEBrick::Cookie","Rails/classes/WEBrick/Cookie.html#method-c-new","(name, value)","<p>attr_accessor :comment_url, :discard, :port\n",null,1],["new","WEBrick::GenericServer","Rails/classes/WEBrick/GenericServer.html#method-c-new","(config={}, default=Config::General)","",null,1],["new","WEBrick::HTTPAuth::BasicAuth","Rails/classes/WEBrick/HTTPAuth/BasicAuth.html#method-c-new","(config, default=Config::BasicAuth)","<p>Creates a new BasicAuth instance.\n<p>See WEBrick::Config::BasicAuth for default configuration entries\n<p>You …\n",null,1],["new","WEBrick::HTTPAuth::DigestAuth","Rails/classes/WEBrick/HTTPAuth/DigestAuth.html#method-c-new","(config, default=Config::DigestAuth)","<p>Creates a new DigestAuth instance.  Be sure to use the same DigestAuth\ninstance for multiple requests …\n",null,1],["new","WEBrick::HTTPAuth::Htdigest","Rails/classes/WEBrick/HTTPAuth/Htdigest.html#method-c-new","(path)","<p>Open a digest password database at <code>path</code>\n",null,1],["new","WEBrick::HTTPAuth::Htgroup","Rails/classes/WEBrick/HTTPAuth/Htgroup.html#method-c-new","(path)","<p>Open a group database at <code>path</code>\n",null,1],["new","WEBrick::HTTPAuth::Htpasswd","Rails/classes/WEBrick/HTTPAuth/Htpasswd.html#method-c-new","(path)","<p>Open a password database at <code>path</code>\n",null,1],["new","WEBrick::HTTPProxyServer","Rails/classes/WEBrick/HTTPProxyServer.html#method-c-new","(config={}, default=Config::HTTP)","<p>Proxy server configurations.  The proxy server handles the following\nconfiguration items in addition …\n",null,1],["new","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-c-new","(config)","",null,1],["new","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-c-new","(config)","<p>Creates a new HTTP response object\n",null,1],["new","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-c-new","(config={}, default=Config::HTTP)","<p>Creates a new HTTP server according to <code>config</code>\n<p>An HTTP server uses the following attributes:\n<p>:AccessLog … &mdash; ",null,1],["new","WEBrick::HTTPServer::MountTable","Rails/classes/WEBrick/HTTPServer/MountTable.html#method-c-new","()","",null,1],["new","WEBrick::HTTPServlet::AbstractServlet","Rails/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-c-new","(server, *options)","<p>Initializes a new servlet for <code>server</code> using\n<code>options</code> which are stored as-is in +@options+.  +@logger+ is …\n",null,1],["new","WEBrick::HTTPServlet::CGIHandler","Rails/classes/WEBrick/HTTPServlet/CGIHandler.html#method-c-new","(server, name)","",null,1],["new","WEBrick::HTTPServlet::DefaultFileHandler","Rails/classes/WEBrick/HTTPServlet/DefaultFileHandler.html#method-c-new","(server, local_path)","",null,1],["new","WEBrick::HTTPServlet::ERBHandler","Rails/classes/WEBrick/HTTPServlet/ERBHandler.html#method-c-new","(server, name)","<p>Creates a new ERBHandler on <code>server</code> that will evaluate and\nserve the ERB file <code>name</code>\n",null,1],["new","WEBrick::HTTPServlet::FileHandler","Rails/classes/WEBrick/HTTPServlet/FileHandler.html#method-c-new","(server, root, options={}, default=Config::FileHandler)","<p>Creates a FileHandler servlet on <code>server</code> that serves files\nstarting at directory <code>root</code>\n<p>If <code>options</code> is a  …\n",null,1],["new","WEBrick::HTTPServlet::ProcHandler","Rails/classes/WEBrick/HTTPServlet/ProcHandler.html#method-c-new","(proc)","",null,1],["new","WEBrick::HTTPUtils::FormData","Rails/classes/WEBrick/HTTPUtils/FormData.html#method-c-new","(*args)","",null,1],["new","WEBrick::HTTPVersion","Rails/classes/WEBrick/HTTPVersion.html#method-c-new","(version)","",null,1],["new","WEBrick::Log","Rails/classes/WEBrick/Log.html#method-c-new","(log_file=nil, level=nil)","<p>Same as BasicLog#initialize\n<p>You can set the timestamp format through #time_format\n",null,1],["new","WEBrick::Utils::TimeoutHandler","Rails/classes/WEBrick/Utils/TimeoutHandler.html#method-c-new","()","",null,1],["new","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-new","(p1, p2 = v2, *args)","<p>Returns a new WIN32OLE object(OLE Automation object). The first argument\nserver specifies OLE Automation …\n",null,1],["new","WIN32OLE_EVENT","Rails/classes/WIN32OLE_EVENT.html#method-c-new","(*args)","<p>Returns OLE event object. The first argument specifies WIN32OLE object. The\nsecond argument specifies …\n",null,1],["new","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-c-new","(p1, p2)","<p>Returns a new WIN32OLE_METHOD object which represents the information about\nOLE method. The first argument …\n",null,1],["new","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-c-new","(p1, p2)","",null,1],["new","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-c-new","(p1, p2)","<p>Returns a new WIN32OLE_TYPE object. The first argument <em>typelib</em>\nspecifies OLE type library name. The second …\n",null,1],["new","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-c-new","(*args)","<p>Returns a new WIN32OLE_TYPELIB object.\n<p>The first argument <em>typelib</em>  specifies OLE type library name or …\n",null,1],["new","WIN32OLE_VARIANT","Rails/classes/WIN32OLE_VARIANT.html#method-c-new","(*args)","<p>Returns Ruby object wrapping OLE variant. The first argument specifies Ruby\nobject to convert OLE variant …\n",null,1],["new","WeakRef","Rails/classes/WeakRef.html#method-c-new","(orig)","<p>Creates a weak reference to <code>orig</code>\n",null,1],["new","Win32::Registry","Rails/classes/Win32/Registry.html#method-c-new","(hkey, parent, keyname, disposition)","<p>initialize\n",null,1],["new","Win32::Registry::Error","Rails/classes/Win32/Registry/Error.html#method-c-new","(code)","",null,1],["new","Win32::Registry::PredefinedKey","Rails/classes/Win32/Registry/PredefinedKey.html#method-c-new","(hkey, keyname)","",null,1],["new","Win32::SSPI::Identity","Rails/classes/Win32/SSPI/Identity.html#method-c-new","(user = nil, domain = nil, password = nil)","",null,1],["new","Win32::SSPI::NegotiateAuth","Rails/classes/Win32/SSPI/NegotiateAuth.html#method-c-new","(user = nil, domain = nil)","<p>Creates a new instance ready for authentication as the given user in the\ngiven domain. Defaults to current …\n",null,1],["new","Win32::SSPI::SSPIResult","Rails/classes/Win32/SSPI/SSPIResult.html#method-c-new","(value)","",null,1],["new","Win32::SSPI::SecurityBuffer","Rails/classes/Win32/SSPI/SecurityBuffer.html#method-c-new","(buffer = nil)","",null,1],["new","Win32API","Rails/classes/Win32API.html#method-c-new","(dllname, func, import, export = \"0\", calltype = :stdcall)","",null,1],["new","XMLRPC::Base64","Rails/classes/XMLRPC/Base64.html#method-c-new","(str, state = :dec)","",null,1],["new","XMLRPC::BasicServer","Rails/classes/XMLRPC/BasicServer.html#method-c-new","(class_delim=\".\")","",null,1],["new","XMLRPC::CGIServer","Rails/classes/XMLRPC/CGIServer.html#method-c-new","(*a)","",null,1],["new","XMLRPC::CGIServer","Rails/classes/XMLRPC/CGIServer.html#method-c-new","(*a)","",null,1],["new","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-c-new","(host=nil, path=nil, port=nil, proxy_host=nil, proxy_port=nil, user=nil, password=nil, use_ssl=nil, timeout=nil)","<p>Constructors ——————————————————————-\n",null,1],["new","XMLRPC::Client::Proxy","Rails/classes/XMLRPC/Client/Proxy.html#method-c-new","(server, prefix, args=[], meth=:call, delim=\".\")","",null,1],["new","XMLRPC::Create","Rails/classes/XMLRPC/Create.html#method-c-new","(xml_writer = nil)","",null,1],["new","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-c-new","(year, month, day, hour, min, sec)","",null,1],["new","XMLRPC::FaultException","Rails/classes/XMLRPC/FaultException.html#method-c-new","(faultCode, faultString)","",null,1],["new","XMLRPC::Marshal","Rails/classes/XMLRPC/Marshal.html#method-c-new","( parser = nil, writer = nil )","<p>instance methods —————————-\n",null,1],["new","XMLRPC::ModRubyServer","Rails/classes/XMLRPC/ModRubyServer.html#method-c-new","(*a)","",null,1],["new","XMLRPC::Server","Rails/classes/XMLRPC/Server.html#method-c-new","(port=8080, host=\"127.0.0.1\", maxConnections=4, stdlog=$stdout, audit=true, debug=true, *a)","",null,1],["new","XMLRPC::Service::BasicInterface","Rails/classes/XMLRPC/Service/BasicInterface.html#method-c-new","(prefix)","",null,1],["new","XMLRPC::Service::Interface","Rails/classes/XMLRPC/Service/Interface.html#method-c-new","(prefix, &p)","",null,1],["new","XMLRPC::Service::PublicInstanceMethodsInterface","Rails/classes/XMLRPC/Service/PublicInstanceMethodsInterface.html#method-c-new","(prefix)","",null,1],["new","XMLRPC::WEBrickServlet","Rails/classes/XMLRPC/WEBrickServlet.html#method-c-new","(*a)","",null,1],["new","XMLRPC::XMLParser::NQXMLStreamParser","Rails/classes/XMLRPC/XMLParser/NQXMLStreamParser.html#method-c-new","()","",null,1],["new","XMLRPC::XMLParser::NQXMLTreeParser","Rails/classes/XMLRPC/XMLParser/NQXMLTreeParser.html#method-c-new","()","",null,1],["new","XMLRPC::XMLParser::NQXMLTreeParser","Rails/classes/XMLRPC/XMLParser/NQXMLTreeParser.html#method-c-new","()","",null,1],["new","XMLRPC::XMLParser::REXMLStreamParser","Rails/classes/XMLRPC/XMLParser/REXMLStreamParser.html#method-c-new","()","",null,1],["new","XMLRPC::XMLParser::StreamParserMixin","Rails/classes/XMLRPC/XMLParser/StreamParserMixin.html#method-c-new","(*a)","",null,1],["new","XMLRPC::XMLParser::XMLScanStreamParser","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser.html#method-c-new","()","",null,1],["new","XMLRPC::XMLParser::XMLStreamParser","Rails/classes/XMLRPC/XMLParser/XMLStreamParser.html#method-c-new","()","",null,1],["new","XMLRPC::XMLParser::XMLTreeParser","Rails/classes/XMLRPC/XMLParser/XMLTreeParser.html#method-c-new","()","",null,1],["new","XMLRPC::XMLParser::XMLTreeParser","Rails/classes/XMLRPC/XMLParser/XMLTreeParser.html#method-c-new","()","",null,1],["new","XMLRPC::XMLWriter::XMLParser","Rails/classes/XMLRPC/XMLWriter/XMLParser.html#method-c-new","()","",null,1],["new","XMP","Rails/classes/XMP.html#method-c-new","(bind = nil)","",null,1],["new","XMP::StringInputMethod","Rails/classes/XMP/StringInputMethod.html#method-c-new","()","",null,1],["new","YAML::Store","Rails/classes/YAML/Store.html#method-c-new","( *o )","<p>Creates a new YAML::Store object, which will store data in\n<code>file_name</code>. If the file does not already exist, …\n",null,1],["new","Zlib::Deflate","Rails/classes/Zlib/Deflate.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Arguments\n<p><code>level</code> &mdash; An Integer compression level between BEST_SPEED and BEST_COMPRESSION\n<p><code>windowBits</code> &mdash; An Integer …\n",null,1],["new","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-c-new","(p1, p2 = {})","<p>Creates a GzipReader object associated with <code>io</code>. The GzipReader\nobject reads gzipped data from <code>io</code>, and …\n",null,1],["new","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Creates a GzipWriter object associated with <code>io</code>.\n<code>level</code> and <code>strategy</code> should be the same as the\narguments …\n",null,1],["new","Zlib::Inflate","Rails/classes/Zlib/Inflate.html#method-c-new","(p1 = v1)","<p>Arguments\n<p><code>windowBits</code> &mdash; An Integer for the windowBits size. Should be in the range 8..15, larger\nvalues of …\n\n",null,1],["new2","URI::FTP","Rails/classes/URI/FTP.html#method-c-new2","(user, password, host, port, path, typecode = nil, arg_check = true)","<p>alternate initialization Creates a new URI::FTP object.\n<p>Unlike build(), this method does not escape the …\n",null,1],["new2","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-c-new2","(uri, proxy=nil, timeout=nil)","",null,1],["new3","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-c-new3","(hash={})","",null,1],["new?","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-new-3F","()","<p>Returns <code>true</code> if this object hasn’t yet been saved, otherwise,\nreturns <code>false</code>.\n<p>Examples\n\n<pre>not_new = Computer.create(:brand ...</pre>\n",null,0],["new_alias_name","IRB::MethodExtender","Rails/classes/IRB/MethodExtender.html#method-i-new_alias_name","(name, prefix = \"__alias_of__\", postfix = \"__\")","<p>return #{prefix}#{name}#{postfix}&lt;num&gt;\n",null,1],["new_cond","MonitorMixin","Rails/classes/MonitorMixin.html#method-i-new_cond","()","<p>Creates a new MonitorMixin::ConditionVariable associated with the receiver.\n",null,1],["new_constants","ActiveSupport::Dependencies::WatchStack","Ruby/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-new_constants","()","<p>return a list of new constants found since the last call to\nwatch_namespaces\n",null,0],["new_element_path","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-new_element_path","()","",null,0],["new_element_path","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-new_element_path","(prefix_options = {})","<p>Gets the new element path for REST resources.\n<p>Options\n<p><code>prefix_options</code> - A hash to add a prefix to the request ...\n",null,0],["new_from_hash","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-c-new_from_hash","(hash={})","",null,1],["new_from_hash_copying_default","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new_from_hash_copying_default","(hash)","",null,0],["new_from_hash_copying_default","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new_from_hash_copying_default","(hash)","",null,0],["new_from_uri","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-c-new_from_uri","(uri, proxy=nil, timeout=nil)","",null,1],["new_ntoh","IPAddr","Rails/classes/IPAddr.html#method-c-new_ntoh","(addr)","<p>Creates a new ipaddr containing the given network byte ordered string form\nof an IP address.\n",null,1],["new_ostruct_member","OpenStruct","Rails/classes/OpenStruct.html#method-i-new_ostruct_member","(name)","<p>new_ostruct_member is used internally to defined properties on the\nOpenStruct. It does this by using …\n",null,1],["new_record?","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-new_record-3F","()","<p>Returns true if this object hasn’t been saved yet – that is, a record for\nthe object doesn’t exist in …\n",null,0],["new_record?","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-new_record-3F","()","",null,0],["new_scope","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-i-new_scope","(names)","<p>Create a new argument scope using the prerequisite argument names.\n",null,1],["new_seed","Random","Rails/classes/Random.html#method-c-new_seed","()","<p>Returns arbitrary value for seed.\n",null,1],["new_session","Rails::ConsoleMethods","Ruby/classes/Rails/ConsoleMethods.html#method-i-new_session","()","<p>create a new session. If a block is given, the new session will be yielded\nto the block before being …\n",null,0],["new_start","Date","Rails/classes/Date.html#method-i-new_start","(p1 = v1)","<p>Duplicates self and resets its the day of calendar reform.\n<p>For example:\n\n<pre>d = Date.new(1582,10,15)\nd.new_start(Date::JULIAN) ...</pre>\n",null,1],["new_with","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-c-new_with","(uri, ref)","",null,1],["new_with_uri","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-c-new_with_uri","(uri)","<p>Create a new DRbObject from a URI alone.\n",null,1],["new_with_value_if_need","RSS::Utils","Rails/classes/RSS/Utils.html#method-i-new_with_value_if_need","(klass, value)","<p>If <code>value</code> is an instance of class <code>klass</code>, return\nit, else create a new instance of <code>klass</code> with value\n<code>value</code> …\n",null,1],["newobj","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-newobj","(address, port = nil, p_addr = nil, p_port = nil, p_user = nil, p_pass = nil)","",null,1],["newobj","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-newobj","(address, port = nil, p_addr = nil, p_port = nil, p_user = nil, p_pass = nil)","",null,1],["next","Date","Rails/classes/Date.html#method-i-next","()","<p>Returns a date object denoting the following day.\n",null,1],["next","Enumerator","Rails/classes/Enumerator.html#method-i-next","()","<p>Returns the next object in the enumerator, and move the internal position\nforward.  When the position …\n",null,1],["next","Integer","Rails/classes/Integer.html#method-i-next","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">next</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n(<span class=\"ruby-value\">-1</span>).<span class=\"ruby-identifier\">next</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n</pre>\n",null,1],["next","Prime::EratosthenesGenerator","Rails/classes/Prime/EratosthenesGenerator.html#method-i-next","()","",null,1],["next","Prime::Generator23","Rails/classes/Prime/Generator23.html#method-i-next","()","",null,1],["next","Prime::OldCompatibility","Rails/classes/Prime/OldCompatibility.html#method-i-next","()","",null,1],["next","Prime::PseudoPrimeGenerator","Rails/classes/Prime/PseudoPrimeGenerator.html#method-i-next","()","<p>alias of <code>succ</code>.\n",null,1],["next","Prime::TrialDivisionGenerator","Rails/classes/Prime/TrialDivisionGenerator.html#method-i-next","()","",null,1],["next","REXML::Validation::Choice","Rails/classes/REXML/Validation/Choice.html#method-i-next","( event )","",null,1],["next","REXML::Validation::Interleave","Rails/classes/REXML/Validation/Interleave.html#method-i-next","( event )","",null,1],["next","REXML::Validation::OneOrMore","Rails/classes/REXML/Validation/OneOrMore.html#method-i-next","( event )","",null,1],["next","REXML::Validation::Optional","Rails/classes/REXML/Validation/Optional.html#method-i-next","( event )","",null,1],["next","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-i-next","( event )","",null,1],["next","REXML::Validation::ZeroOrMore","Rails/classes/REXML/Validation/ZeroOrMore.html#method-i-next","( event )","",null,1],["next","String","Rails/classes/String.html#method-i-next","()","<p>Returns the successor to <em>str</em>. The successor is calculated by\nincrementing characters starting from the …\n",null,1],["next","Symbol","Rails/classes/Symbol.html#method-i-next","()","<p>Same as <code>sym.to_s.succ.intern</code>.\n",null,1],["next!","String","Rails/classes/String.html#method-i-next-21","()","<p>Equivalent to <code>String#succ</code>, but modifies the receiver in place.\n",null,1],["next_current","REXML::Validation::Interleave","Rails/classes/REXML/Validation/Interleave.html#method-i-next_current","( event )","",null,1],["next_day","Date","Rails/classes/Date.html#method-i-next_day","(p1 = v1)","<p>This method is equivalent to d + n.\n",null,1],["next_element","HTML::Selector","Ruby/classes/HTML/Selector.html#method-i-next_element","(element, name = nil)","<p>Return the next element after this one. Skips sibling text nodes.\n<p>With the <code>name</code> argument, returns the …\n",null,0],["next_element","REXML::Element","Rails/classes/REXML/Element.html#method-i-next_element","()","<p>Returns the next sibling that is an element, or nil if there is no Element\nsibling after this one\n\n<pre>doc ...</pre>\n",null,1],["next_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-next_key","()","",null,0],["next_migration_number","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-next_migration_number","(number)","",null,0],["next_month","Date","Ruby/classes/Date.html#method-i-next_month","()","<p>Shorthand for months_since(1)\n",null,0],["next_month","Time","Ruby/classes/Time.html#method-i-next_month","()","<p>Short-hand for months_since(1)\n",null,0],["next_month","Date","Rails/classes/Date.html#method-i-next_month","(p1 = v1)","<p>This method is equivalent to d &gt;&gt; n\n",null,1],["next_selector","HTML::Selector","Ruby/classes/HTML/Selector.html#method-i-next_selector","(statement, values)","<p>Called to create a dependent selector (sibling, descendant, etc). Passes\nthe remainder of the statement …\n",null,0],["next_sibling=","REXML::Child","Rails/classes/REXML/Child.html#method-i-next_sibling-3D","( other )","<p>Sets the next sibling of this child.  This can be used to insert a child\nafter some other child.\n\n<pre>a = Element.new(&quot;a&quot;) ...</pre>\n",null,1],["next_sibling_node","REXML::Node","Rails/classes/REXML/Node.html#method-i-next_sibling_node","()","<p>@return the next sibling (nil if unset)\n",null,1],["next_to","Prime::EratosthenesSieve","Rails/classes/Prime/EratosthenesSieve.html#method-i-next_to","(n)","<p>returns the least odd prime number which is greater than <code>n</code>.\n",null,1],["next_update","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-next_update","()","",null,1],["next_update=","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-next_update-3D","(p1)","",null,1],["next_values","Enumerator","Rails/classes/Enumerator.html#method-i-next_values","()","<p>Returns the next object as an array in the enumerator, and move the\ninternal position forward.  When …\n",null,1],["next_wait","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-next_wait","(nonblock = nil)","<p>Waits until any of the specified threads has terminated, and returns the\none that does.\n<p>If there is no …\n",null,1],["next_wait","ThreadsWait","Rails/classes/ThreadsWait.html#method-i-next_wait","(nonblock = nil)","<p>Waits until any of the specified threads has terminated, and returns the\none that does.\n<p>If there is no …\n",null,1],["next_week","Date","Ruby/classes/Date.html#method-i-next_week","(day = :monday)","<p>Returns a new Date/DateTime representing the start of the given day in next\nweek (default is :monday). …\n",null,0],["next_week","Time","Ruby/classes/Time.html#method-i-next_week","(day = :monday)","<p>Returns a new Time representing the start of the given day in next week\n(default is :monday).\n",null,0],["next_year","Date","Ruby/classes/Date.html#method-i-next_year","()","<p>Shorthand for years_since(1)\n",null,0],["next_year","Time","Ruby/classes/Time.html#method-i-next_year","()","<p>Short-hand for years_since(1)\n",null,0],["next_year","Date","Rails/classes/Date.html#method-i-next_year","(p1 = v1)","<p>This method is equivalent to d &gt;&gt; (n * 12)\n",null,1],["nil?","NilClass","Rails/classes/NilClass.html#method-i-nil-3F","()","<p>call_seq:\n\n<pre>nil.nil?               -&gt; true</pre>\n<p>Only the object <em>nil</em> responds <code>true</code> to\n<code>nil?</code>.\n",null,1],["nil?","Object","Rails/classes/Object.html#method-i-nil-3F","()","<p>call_seq:\n\n<pre>nil.nil?               -&gt; true\n&lt;anything_else&gt;.nil?   -&gt; false</pre>\n<p>Only the object <em>nil</em> responds  …\n",null,1],["nkf","NKF","Rails/classes/NKF.html#method-c-nkf","(p1, p2)","<p>Convert <em>str</em> and return converted result. Conversion details are\nspecified by <em>opt</em> as String.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'nkf'</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["nl","Curses","Rails/classes/Curses.html#method-c-nl","()","<p>Enable the underlying display device to translate the return key into\nnewline on input, and whether it …\n",null,1],["nlink","File::Stat","Rails/classes/File/Stat.html#method-i-nlink","()","<p>Returns the number of hard links to <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">nlink</span>             <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">link</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["nlsolve","Newton","Rails/classes/Newton.html#method-i-nlsolve","(f,x)","",null,1],["nlst","Net::FTP","Rails/classes/Net/FTP.html#method-i-nlst","(dir = nil)","<p>Returns an array of filenames in the remote directory.\n",null,1],["no_color!","Rails::Generators","Ruby/classes/Rails/Generators.html#method-c-no_color-21","()","<p>Remove the color from output.\n",null,0],["nocbreak","Curses","Rails/classes/Curses.html#method-c-nocbreak","()","<p>Put the terminal into normal mode (out of cbreak mode).\n<p>See Curses.cbreak for more detail.\n",null,1],["nocrmode","Curses","Rails/classes/Curses.html#method-c-nocrmode","()","<p>Put the terminal into normal mode (out of cbreak mode).\n<p>See Curses.cbreak for more detail.\n",null,1],["nodeName","NQXML::Node","Rails/classes/NQXML/Node.html#method-i-nodeName","()","",null,1],["nodeType","NQXML::Node","Rails/classes/NQXML/Node.html#method-i-nodeType","()","",null,1],["nodeValue","NQXML::Node","Rails/classes/NQXML/Node.html#method-i-nodeValue","()","",null,1],["node_type","REXML::AttlistDecl","Rails/classes/REXML/AttlistDecl.html#method-i-node_type","()","",null,1],["node_type","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-node_type","()","",null,1],["node_type","REXML::Comment","Rails/classes/REXML/Comment.html#method-i-node_type","()","",null,1],["node_type","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-node_type","()","",null,1],["node_type","REXML::Document","Rails/classes/REXML/Document.html#method-i-node_type","()","",null,1],["node_type","REXML::Element","Rails/classes/REXML/Element.html#method-i-node_type","()","",null,1],["node_type","REXML::Instruction","Rails/classes/REXML/Instruction.html#method-i-node_type","()","",null,1],["node_type","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-node_type","()","",null,1],["node_type","REXML::Text","Rails/classes/REXML/Text.html#method-i-node_type","()","",null,1],["node_type","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-i-node_type","()","",null,1],["nodelay=","Curses::Window","Rails/classes/Curses/Window.html#method-i-nodelay-3D","(p1)","<p>Causes Curses::Window.getch to be a non-blocking call.  If no input is\nready, getch returns ERR.\n<p>If disabled …\n",null,1],["nodoc","RDoc::Stats::Verbose","Rails/classes/RDoc/Stats/Verbose.html#method-i-nodoc","(co)","<p>Returns a marker for RDoc::CodeObject <code>co</code> being undocumented\n",null,1],["noecho","Curses","Rails/classes/Curses.html#method-c-noecho","()","<p>Disables characters typed by the user to be echoed by Curses.getch as they\nare typed.\n",null,1],["noecho","Gem::MockGemUi::TTY","Rails/classes/Gem/MockGemUi/TTY.html#method-i-noecho","()","",null,1],["noecho","IO","Rails/classes/IO.html#method-i-noecho","()","<p>Yields <code>self</code> with disabling echo back.\n\n<pre>STDIN.noecho(&amp;:gets)</pre>\n<p>will read and return a line without echo back. …\n",null,1],["non_aliases","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-non_aliases","()","<p>Returns the classes and modules that are not constants aliasing another\nclass or module. For use by formatters …\n",null,1],["non_nil_attributes","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-non_nil_attributes","()","<p>Specification attributes that must be non-nil\n",null,1],["nonce","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-nonce","(secret_key, time = Time.now)","<p>Uses an MD5 digest based on time to generate a value to be used only once.\n<p>A server-specified data string …\n",null,0],["none?","Enumerable","Rails/classes/Enumerable.html#method-i-none-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block never …\n",null,1],["none?","Gem::Requirement","Rails/classes/Gem/Requirement.html#method-i-none-3F","()","",null,1],["nonl","Curses","Rails/classes/Curses.html#method-c-nonl","()","<p>Disable the underlying display device to translate the return key into\nnewline on input\n<p>See Curses.nl …\n",null,1],["nonzero?","BigDecimal","Rails/classes/BigDecimal.html#method-i-nonzero-3F","()","<p>Returns self if the value is non-zero, nil otherwise.\n",null,1],["nonzero?","Numeric","Rails/classes/Numeric.html#method-i-nonzero-3F","()","<p>Returns <code>self</code> if <em>num</em> is not zero, <code>nil</code>\notherwise. This behavior is useful when chaining comparisons:\n\n<pre>a = ...</pre>\n",null,1],["noop","Net::FTP","Rails/classes/Net/FTP.html#method-i-noop","()","<p>Issues a NOOP command.\n<p>Does nothing except return a response.\n",null,1],["noop","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-noop","()","<p>Sends a NOOP command to the server. It does nothing.\n",null,1],["noraw","Curses","Rails/classes/Curses.html#method-c-noraw","()","<p>Put the terminal out of raw mode.\n<p>see Curses.raw for more detail\n",null,1],["norm","Newton","Rails/classes/Newton.html#method-i-norm","(fv,zero=0.0)","",null,1],["norm","Vector","Rails/classes/Vector.html#method-i-norm","()","",null,1],["normal?","Matrix","Rails/classes/Matrix.html#method-i-normal-3F","()","<p>Returns <code>true</code> is this is a normal matrix. Raises an error if\nmatrix is not square.\n",null,1],["normalize","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-normalize","(form = nil)","<p>Returns the KC normalization of the string by default. NFKC is considered\nthe best normalization form …\n",null,0],["normalize","ActiveSupport::Multibyte::Unicode","Ruby/classes/ActiveSupport/Multibyte/Unicode.html#method-i-normalize","(string, form=nil)","<p>Returns the KC normalization of the string by default. NFKC is considered\nthe best normalization form …\n",null,0],["normalize","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-normalize","()","<p>Normalize the list of files so that:\n<p>All file lists have redundancies removed.\n<p>Files referenced in the …\n",null,1],["normalize","RDoc::Markup::Verbatim","Rails/classes/RDoc/Markup/Verbatim.html#method-i-normalize","()","<p>Collapses 3+ newlines into two newlines\n",null,1],["normalize","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-normalize","( input, entities=nil, entity_filter=nil )","<p>Escapes all possible entities\n",null,1],["normalize","REXML::Text","Rails/classes/REXML/Text.html#method-c-normalize","( input, doctype=nil, entity_filter=nil )","<p>Escapes all possible entities\n",null,1],["normalize","RSS::Maker::ItemsBase","Rails/classes/RSS/Maker/ItemsBase.html#method-i-normalize","()","",null,1],["normalize","Rake::Win32","Rails/classes/Rake/Win32.html#method-c-normalize","(path)","<p>Normalize a win32 path so that the slashes are all forward slashes.\n",null,1],["normalize","URI::Generic","Rails/classes/URI/Generic.html#method-i-normalize","()","<p>Returns normalized URI\n",null,1],["normalize","Vector","Rails/classes/Vector.html#method-i-normalize","()","<p>Returns a new vector with the same direction but with norm 1.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">v</span> = <span class=\"ruby-constant\">Vector</span>[<span class=\"ruby-value\">5</span>,<span class=\"ruby-value\">8</span>,<span class=\"ruby-value\">2</span>].<span class=\"ruby-identifier\">normalize</span>\n<span class=\"ruby-comment\"># =&gt; Vector[0.5184758473652127, ...</span>\n</pre>\n",null,1],["normalize!","URI::Generic","Rails/classes/URI/Generic.html#method-i-normalize-21","()","<p>Destructive version of #normalize\n",null,1],["normalize_comment","RDoc::Text","Rails/classes/RDoc/Text.html#method-i-normalize_comment","(text)","<p>Strips hashes, expands tabs then flushes <code>text</code> to the left\n",null,1],["normalize_name","ActionDispatch::Routing::Mapper","Ruby/classes/ActionDispatch/Routing/Mapper.html#method-c-normalize_name","(name)","",null,0],["normalize_path","ActionDispatch::Routing::Mapper","Ruby/classes/ActionDispatch/Routing/Mapper.html#method-c-normalize_path","(path)","<p>Invokes Rack::Mount::Utils.normalize path and ensure that (:locale) becomes\n(/:locale) instead of /(:locale). …\n",null,0],["normalize_path","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-normalize_path","(path)","",null,1],["normalize_space","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-normalize_space","( string=nil )","<p>UNTESTED\n",null,1],["normalize_uri","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-normalize_uri","(uri)","<p>Normalize the URI by adding “http://” if it is missing.\n",null,1],["normalize_yaml_input","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-normalize_yaml_input","(input)","<p>Make sure the YAML specification is properly formatted with dashes\n",null,1],["normalized","REXML::Entity","Rails/classes/REXML/Entity.html#method-i-normalized","()","<p>Returns the value of this entity unprocessed – raw.  This is the normalized\nvalue; that is, with all …\n",null,1],["normalized_file_list","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-normalized_file_list","(relative_files, force_doc = false, exclude_pattern = nil)","<p>Given a list of files and directories, create a list of all the Ruby files\nthey contain.\n<p>If <code>force_doc</code> …\n",null,1],["not","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-not","( object )","<p>UNTESTED\n",null,1],["not_after","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-not_after","()","",null,1],["not_after=","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-not_after-3D","(p1)","",null,1],["not_before","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-not_before","()","",null,1],["not_before=","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-not_before-3D","(p1)","",null,1],["not_modified?","ActionDispatch::Http::Cache::Request","Ruby/classes/ActionDispatch/Http/Cache/Request.html#method-i-not_modified-3F","(modified_at)","",null,0],["not_modified?","WEBrick::HTTPServlet::DefaultFileHandler","Rails/classes/WEBrick/HTTPServlet/DefaultFileHandler.html#method-i-not_modified-3F","(req, res, mtime, etag)","",null,1],["not_set_name","RSS::Maker::Atom::Entry::Channel::Generator","Rails/classes/RSS/Maker/Atom/Entry/Channel/Generator.html#method-c-not_set_name","()","",null,1],["not_set_name","RSS::Maker::Atom::Feed::Channel::Categories::Category","Rails/classes/RSS/Maker/Atom/Feed/Channel/Categories/Category.html#method-c-not_set_name","()","",null,1],["not_set_name","RSS::Maker::Atom::Feed::Channel::Generator","Rails/classes/RSS/Maker/Atom/Feed/Channel/Generator.html#method-c-not_set_name","()","",null,1],["not_set_name","RSS::Maker::Atom::Feed::Channel::Links::Link","Rails/classes/RSS/Maker/Atom/Feed/Channel/Links/Link.html#method-c-not_set_name","()","",null,1],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Categories::Category","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Categories/Category.html#method-c-not_set_name","()","",null,1],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Links::Link","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Links/Link.html#method-c-not_set_name","()","",null,1],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Source::Categories::Category","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Categories/Category.html#method-c-not_set_name","()","",null,1],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Source::Generator","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Generator.html#method-c-not_set_name","()","",null,1],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Source::Links::Link","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Links/Link.html#method-c-not_set_name","()","",null,1],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Source::Logo","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Logo.html#method-c-not_set_name","()","",null,1],["notation","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-notation","(name)","<p>Retrieves a named notation. Only notations declared in the internal DTD\nsubset can be retrieved.\n<p>Method …\n",null,1],["notationdecl","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-notationdecl","(content)","<p>&lt;!NOTATION …&gt;\n",null,1],["notationdecl","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-notationdecl","(content)","<p>&lt;!NOTATION …&gt;\n",null,1],["notationdecl?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-notationdecl-3F","()","<p>Content: [ String text ]\n",null,1],["notations","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-notations","()","<p>This method returns a list of notations that have been declared in the\n<em>internal</em> DTD subset. Notations …\n",null,1],["notestuff","RailsGuides::TextileExtensions","Ruby/classes/RailsGuides/TextileExtensions.html#method-i-notestuff","(body)","",null,0],["notice","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-notice","()","<p>Convenience accessor for flash\n",null,0],["notice=","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-notice-3D","(message)","<p>Convenience accessor for flash=\n",null,0],["notify","Rinda::NotifyTemplateEntry","Rails/classes/Rinda/NotifyTemplateEntry.html#method-i-notify","(ev)","<p>Called by TupleSpace to notify this NotifyTemplateEntry of a new event.\n",null,1],["notify","Rinda::TupleSpace","Rails/classes/Rinda/TupleSpace.html#method-i-notify","(event, tuple, sec=nil)","<p>Registers for notifications of <code>event</code>.  Returns a\nNotifyTemplateEntry. See NotifyTemplateEntry for examples …\n",null,1],["notify","Rinda::TupleSpaceProxy","Rails/classes/Rinda/TupleSpaceProxy.html#method-i-notify","(ev, tuple, sec=nil)","<p>Registers for notifications of event <code>ev</code> on the proxied\nTupleSpace. See TupleSpace#notify\n",null,1],["notify","Shell","Rails/classes/Shell.html#method-c-notify","(*opts, &block)","",null,1],["notify","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-notify","(*opts, &block)","<p>%pwd, %cwd -&gt; @pwd\n",null,1],["notify","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-notify","(*opts, &block)","<p>ex)\n\n<pre>if you wish to output:\n   &quot;shell: job(#{@command}:#{@pid}) close pipe-out.&quot;\nthen\n   mes: &quot;job(%id) ...</pre>\n",null,1],["notify?","IRB::Notifier::AbstractNotifier","Rails/classes/IRB/Notifier/AbstractNotifier.html#method-i-notify-3F","()","",null,1],["notify?","IRB::Notifier::LeveledNotifier","Rails/classes/IRB/Notifier/LeveledNotifier.html#method-i-notify-3F","()","",null,1],["notify?","IRB::Notifier::NoMsgNotifier","Rails/classes/IRB/Notifier/NoMsgNotifier.html#method-i-notify-3F","()","",null,1],["notify_observers","ActiveModel::Observing::ClassMethods","Ruby/classes/ActiveModel/Observing/ClassMethods.html#method-i-notify_observers","(*arg)","<p>Notify list of observers of a change.\n",null,0],["notify_observers","DRb::DRbObservable","Rails/classes/DRb/DRbObservable.html#method-i-notify_observers","(*arg)","",null,1],["notify_observers","Observable","Rails/classes/Observable.html#method-i-notify_observers","(*arg)","<p>Notify observers of a change in state <strong>if</strong> this object’s\nchanged state is <code>true</code>.\n<p>This will invoke the method …\n",null,1],["noutrefresh","Curses::Window","Rails/classes/Curses/Window.html#method-i-noutrefresh","()","<p>Refreshes the windows and lines.\n<p>Curses::Window.noutrefresh allows multiple updates with more efficiency …\n",null,1],["now","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-now","()","<p>Sets a flash that will not be available to the next action, only to the\ncurrent.\n\n<pre>flash.now[:message] = ...</pre>\n",null,0],["now","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-now","()","<p>Returns an ActiveSupport::TimeWithZone instance representing the current\ntime in the time zone represented …\n",null,0],["now","DateTime","Rails/classes/DateTime.html#method-c-now","(p1 = v1)","<p>Creates a date-time object denoting the present time.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">DateTime</span>.<span class=\"ruby-identifier\">now</span>              <span class=\"ruby-comment\">#=&gt; #&lt;DateTime: ...</span>\n</pre>\n",null,1],["now","Time","Rails/classes/Time.html#method-c-now","()","<p>Synonym for <code>Time.new</code>. Returns a <code>Time</code> object\ninitialized to the current system time.\n",null,1],["now_is_loaded?","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-now_is_loaded-3F","()","",null,0],["nowrite","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-i-nowrite","()","",null,1],["nowrite","Rake::FileUtilsExt","Rails/classes/Rake/FileUtilsExt.html#method-i-nowrite","(value=nil)","<p>Get/set the nowrite flag controlling output from the FileUtils utilities. \nIf verbose is true, then the …\n",null,1],["nread","IO","Rails/classes/IO.html#method-i-nread","()","<p>Returns number of bytes that can be read without blocking. Returns zero if\nno information available. …\n",null,1],["nsec","Time","Rails/classes/Time.html#method-i-nsec","()","<p>Returns just the number of nanoseconds for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>        <span class=\"ruby-comment\">#=&gt; 2007-11-17 15:18:03 +0900</span>\n<span class=\"ruby-string\">&quot;%10.9f&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["nth_child","HTML::Selector","Ruby/classes/HTML/Selector.html#method-i-nth_child","(a, b, of_type, reverse)","<p>Returns a lambda that can match an element against the nth-child pseudo\nclass, given the following arguments: …\n",null,0],["ntop","IPAddr","Rails/classes/IPAddr.html#method-c-ntop","(addr)","<p>Convert a network byte ordered string form of an IP address into human\nreadable form.\n",null,1],["null?","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-null-3F","()","<p>Returns true if this is a null pointer.\n",null,1],["null?","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-null-3F","()","<p>Returns true if this is a null pointer.\n",null,1],["num_waiting","Queue","Rails/classes/Queue.html#method-i-num_waiting","()","<p>Returns the number of threads waiting on the queue.\n",null,1],["num_waiting","SizedQueue","Rails/classes/SizedQueue.html#method-i-num_waiting","()","<p>Returns the number of threads waiting on the queue.\n",null,1],["number","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-number","( object=nil )","<p>a string that consists of optional whitespace followed by an optional minus\nsign followed by a Number …\n",null,1],["number_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-number_field","(object_name, method, options = {})","<p>Returns an input tag of type “number”.\n<p>Options\n<p>Accepts same options as number_field_tag\n",null,0],["number_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-number_field_tag","(name, value = nil, options = {})","<p>Creates a number field.\n<p>Options\n<p><code>:min</code> - The minimum acceptable value.\n",null,0],["number_to_currency","ActionView::Helpers::NumberHelper","Ruby/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_currency","(number, options = {})","<p>Formats a <code>number</code> into a currency string (e.g., $13.65). You\ncan customize the format in the <code>options</code> hash. …\n",null,0],["number_to_human","ActionView::Helpers::NumberHelper","Ruby/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_human","(number, options = {})","<p>Pretty prints (formats and approximates) a number in a way it is more\nreadable by humans (eg.: 1200000000 …\n",null,0],["number_to_human_size","ActionView::Helpers::NumberHelper","Ruby/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_human_size","(number, options = {})","<p>Formats the bytes in <code>number</code> into a more understandable\nrepresentation (e.g., giving it 1500 yields 1.5 …\n",null,0],["number_to_percentage","ActionView::Helpers::NumberHelper","Ruby/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_percentage","(number, options = {})","<p>Formats a <code>number</code> as a percentage string (e.g., 65%). You can\ncustomize the format in the <code>options</code> hash. …\n",null,0],["number_to_phone","ActionView::Helpers::NumberHelper","Ruby/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_phone","(number, options = {})","<p>Formats a <code>number</code> into a US phone number (e.g., (555)\n123-9876). You can customize the format in the  …\n",null,0],["number_with_delimiter","ActionView::Helpers::NumberHelper","Ruby/classes/ActionView/Helpers/NumberHelper.html#method-i-number_with_delimiter","(number, options = {})","<p>Formats a <code>number</code> with grouped thousands using\n<code>delimiter</code> (e.g., 12,324). You can customize the format …\n",null,0],["number_with_precision","ActionView::Helpers::NumberHelper","Ruby/classes/ActionView/Helpers/NumberHelper.html#method-i-number_with_precision","(number, options = {})","<p>Formats a <code>number</code> with the specified level of\n<code>:precision</code> (e.g., 112.32 has a precision of 2 if\n<code>:significant</code> …\n",null,0],["numerator","Complex","Rails/classes/Complex.html#method-i-numerator","()","<p>Returns the numerator.\n<p>For example:\n\n<pre>    1   2       3+4i  &lt;-  numerator\n    - + -i  -&gt;  ----\n    2   3 ...</pre>\n",null,1],["numerator","Float","Rails/classes/Float.html#method-i-numerator","()","<p>Returns the numerator.  The result is machine dependent.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">n</span> = <span class=\"ruby-value\">0.3</span>.<span class=\"ruby-identifier\">numerator</span>    <span class=\"ruby-comment\">#=&gt; 5404319552844595 ...</span>\n</pre>\n",null,1],["numerator","Integer","Rails/classes/Integer.html#method-i-numerator","()","<p>Returns self.\n",null,1],["numerator","Numeric","Rails/classes/Numeric.html#method-i-numerator","()","<p>Returns the numerator.\n",null,1],["numerator","Rational","Rails/classes/Rational.html#method-i-numerator","()","<p>Returns the numerator.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">7</span>).<span class=\"ruby-identifier\">numerator</span>        <span class=\"ruby-comment\">#=&gt; 7</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">7</span>, <span class=\"ruby-value\">1</span>).<span class=\"ruby-identifier\">numerator</span>     <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["object","ActionView::Helpers::ActiveModelInstanceTag","Ruby/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-object","()","",null,0],["object_address_group","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-object_address_group","(obj, &block)","",null,1],["object_class","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-object_class","()","<p>Returns the NormalClass “Object”, creating it if not found.\n<p>Records <code>self</code> as a location in “Object”. …\n",null,1],["object_group","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-object_group","(obj)","<p>A convenience method which is same as follows:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">group</span>(<span class=\"ruby-value\">1</span>, <span class=\"ruby-string\">'#&lt;'</span> <span class=\"ruby-operator\">+</span> <span class=\"ruby-identifier\">obj</span>.<span class=\"ruby-identifier\">class</span>.<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-string\">'&gt;'</span>) { <span class=\"ruby-operator\">...</span> }\n</pre>\n",null,1],["object_id","Object","Rails/classes/Object.html#method-i-object_id","()","<p>Returns an integer identifier for <em>obj</em>. The same number will be\nreturned on all calls to <code>id</code> for a given ...\n",null,1],["object_maker","Psych","Rails/classes/Psych.html#method-c-object_maker","(klass, hash)","",null,1],["observe","ActiveModel::Observer","Ruby/classes/ActiveModel/Observer.html#method-c-observe","(*models)","<p>Attaches the observer to the supplied model classes.\n",null,0],["observed_class","ActiveModel::Observer","Ruby/classes/ActiveModel/Observer.html#method-c-observed_class","()","<p>The class observed by default is inferred from the observer’s class name:\n\n<pre>assert_equal Person, PersonObserver.observed_class</pre>\n",null,0],["observed_classes","ActiveModel::Observer","Ruby/classes/ActiveModel/Observer.html#method-c-observed_classes","()","<p>Returns an array of Classes to observe.\n<p>You can override this instead of using the <code>observe</code> helper.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["observed_classes","ActiveRecord::Observer","Ruby/classes/ActiveRecord/Observer.html#method-i-observed_classes","()","",null,0],["observer_class_for","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-observer_class_for","(observer)","",null,0],["observer_instances","ActiveModel::Observing::ClassMethods","Ruby/classes/ActiveModel/Observing/ClassMethods.html#method-i-observer_instances","()","<p>Gets the current observer instances.\n",null,0],["observers","ActiveModel::Observing::ClassMethods","Ruby/classes/ActiveModel/Observing/ClassMethods.html#method-i-observers","()","<p>Gets an array of observers observing this model. The array also provides\n<code>enable</code> and <code>disable</code> methods that …\n",null,0],["observers=","ActiveModel::Observing::ClassMethods","Ruby/classes/ActiveModel/Observing/ClassMethods.html#method-i-observers-3D","(*values)","<p>Active Model Observers Activation\n<p>Activates the observers assigned. Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">ORM</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Observing</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["oct","String","Rails/classes/String.html#method-i-oct","()","<p>Treats leading characters of <em>str</em> as a string of octal digits (with\nan optional sign) and returns the …\n",null,1],["odd?","ActiveRecord::LogSubscriber","Ruby/classes/ActiveRecord/LogSubscriber.html#method-i-odd-3F","()","",null,0],["odd?","Bignum","Rails/classes/Bignum.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <em>big</em> is an odd number.\n",null,1],["odd?","Fixnum","Rails/classes/Fixnum.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <em>fix</em> is an odd number.\n",null,1],["odd?","Integer","Rails/classes/Integer.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <em>int</em> is an odd number.\n",null,1],["off","Tracer","Rails/classes/Tracer.html#method-c-off","()","<p>Disable tracing\n",null,1],["off_event","WIN32OLE_EVENT","Rails/classes/WIN32OLE_EVENT.html#method-i-off_event","(p1 = v1)","<p>removes the callback of event.\n\n<pre>ie = WIN32OLE.new('InternetExplorer.Application')\nev = WIN32OLE_EVENT.new(ie) ...</pre>\n",null,1],["off_tags","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-off_tags","(res, item)","<p>Turns off tags for <code>item</code> on <code>res</code>\n",null,1],["offset","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-offset","(value)","",null,0],["offset","MatchData","Rails/classes/MatchData.html#method-i-offset","(p1)","<p>Returns a two-element array containing the beginning and ending offsets of\nthe <em>n</em>th match. <em>n</em> can be a …\n",null,1],["offset_vtbl","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-offset_vtbl","()","<p>Returns the offset ov VTBL.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks') ...</pre>\n",null,1],["oflush","IO","Rails/classes/IO.html#method-i-oflush","()","<p>Flushes output buffer in kernel.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["oid","OpenSSL::X509::Attribute","Rails/classes/OpenSSL/X509/Attribute.html#method-i-oid","()","",null,1],["oid","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-i-oid","()","",null,1],["oid=","OpenSSL::X509::Attribute","Rails/classes/OpenSSL/X509/Attribute.html#method-i-oid-3D","(p1)","",null,1],["oid=","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-i-oid-3D","(p1)","",null,1],["ok?","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-ok-3F","()","<p>Are all the dependencies in the list satisfied?\n",null,1],["ok?","Win32::SSPI::SSPIResult","Rails/classes/Win32/SSPI/SSPIResult.html#method-i-ok-3F","()","",null,1],["ok_to_remove?","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-ok_to_remove-3F","(full_name)","<p>Is is ok to remove a gemspec from the dependency list?\n<p>If removing the gemspec creates breaks a currently …\n",null,1],["old","IRB::IrbLoader","Rails/classes/IRB/IrbLoader.html#method-i-old","()","",null,1],["old_enc=","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-i-old_enc-3D","( enc )","",null,1],["ole_activex_initialize","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_activex_initialize","()","<p>Initialize WIN32OLE object(ActiveX Control) by calling\nIPersistMemory::InitNew.\n<p>Before calling OLE method, …\n",null,1],["ole_classes","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-c-ole_classes","(p1)","<p>Returns array of WIN32OLE_TYPE objects defined by the <em>typelib</em> type\nlibrary. This method will be OBSOLETE …\n",null,1],["ole_classes","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-ole_classes","()","",null,1],["ole_free","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_free","()","<p>invokes Release method of Dispatch interface of WIN32OLE object. Usually,\nyou do not need to call this …\n",null,1],["ole_free","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-ole_free","(p1)","<p>Invokes Release method of Dispatch interface of WIN32OLE object. You should\nnot use this method because …\n",null,1],["ole_func_methods","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_func_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is\nproperty (settable) of WIN32OLE …\n",null,1],["ole_get_methods","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_get_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is\nproperty (gettable) of WIN32OLE …\n",null,1],["ole_initialize","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-ole_initialize","()","<p>:nodoc\n",null,1],["ole_method","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_method","(p1)","<p>Returns WIN32OLE_METHOD object corresponding with method specified by 1st\nargument.\n\n<pre>excel = WIN32OLE.new('Excel.Application') ...</pre>\n",null,1],["ole_method_help","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_method_help","(p1)","",null,1],["ole_methods","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_methods","()","<p>Returns the array of WIN32OLE_METHOD object. The element is OLE method of\nWIN32OLE object.\n\n<pre>excel = WIN32OLE.new('Excel.Application') ...</pre>\n",null,1],["ole_methods","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-ole_methods","()","<p>Returns array of WIN32OLE_METHOD objects which represent OLE method defined\nin OLE type library.\n\n<pre>tobj ...</pre>\n",null,1],["ole_obj_help","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_obj_help","()","",null,1],["ole_put_methods","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_put_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is\nproperty (settable) of WIN32OLE …\n",null,1],["ole_query_interface","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_query_interface","(p1)","<p>Returns WIN32OLE object for a specific dispatch or dual interface specified\nby iid.\n\n<pre>ie = WIN32OLE.new('InternetExplorer.Application') ...</pre>\n",null,1],["ole_reference_count","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-ole_reference_count","(p1)","<p>Returns reference counter of Dispatch interface of WIN32OLE object. You\nshould not use this method because …\n",null,1],["ole_respond_to?","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_respond_to-3F","(p1)","<p>Returns true when OLE object has OLE method, otherwise returns false.\n\n<pre>ie = WIN32OLE.new('InternetExplorer.Application') ...</pre>\n",null,1],["ole_show_help","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-ole_show_help","(p1, p2 = v2)","<p>Displays helpfile. The 1st argument specifies WIN32OLE_TYPE object or\nWIN32OLE_METHOD object or helpfile. …\n",null,1],["ole_type","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_type","()","<p>Returns WIN32OLE_TYPE object.\n\n<pre>excel = WIN32OLE.new('Excel.Application')\ntobj = excel.ole_type</pre>\n",null,1],["ole_type","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-i-ole_type","()","<p>Returns OLE type of WIN32OLE_PARAM object(parameter of OLE method).\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft ...</pre>\n",null,1],["ole_type","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-ole_type","()","<p>returns type of OLE class.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application') ...</pre>\n",null,1],["ole_type","WIN32OLE_VARIABLE","Rails/classes/WIN32OLE_VARIABLE.html#method-i-ole_type","()","<p>Returns OLE type string.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType') ...</pre>\n",null,1],["ole_type_detail","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-i-ole_type_detail","()","<p>Returns detail information of type of argument.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', ...</pre>\n",null,1],["ole_type_detail","WIN32OLE_VARIABLE","Rails/classes/WIN32OLE_VARIABLE.html#method-i-ole_type_detail","()","<p>Returns detail information of type. The information is array of type.\n\n<pre>tobj = WIN32OLE_TYPE.new('DirectX ...</pre>\n",null,1],["ole_typelib","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-ole_typelib","()","<p>Returns the WIN32OLE_TYPELIB object. The object represents the type library\nwhich contains the WIN32OLE …\n",null,1],["ole_typelib","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-ole_typelib","()","<p>Returns the WIN32OLE_TYPELIB object which is including the WIN32OLE_TYPE\nobject. If it is not found, …\n",null,1],["ole_types","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-ole_types","()","<p>Returns the type library file path.\n\n<pre>tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library') ...</pre>\n",null,1],["ole_uninitialize","WIN32OLE","Rails/classes/WIN32OLE.html#method-c-ole_uninitialize","()","<p>:nodoc\n",null,1],["on","OptionParser","Rails/classes/OptionParser.html#method-i-on","(*opts, &block)","<p>Add option switch and handler. See #make_switch for an explanation of\nparameters.\n",null,1],["on","Tracer","Rails/classes/Tracer.html#method-c-on","()","<p>Start tracing\n<p>Example\n\n<pre>Tracer.on\n# code to trace here\nTracer.off</pre>\n",null,1],["on_attr_charref","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_attr_charref","(code)","",null,1],["on_attr_charref_hex","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_attr_charref_hex","(code)","",null,1],["on_attr_entityref","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_attr_entityref","(ref)","",null,1],["on_attr_value","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_attr_value","(str)","",null,1],["on_attribute","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_attribute","(name)","",null,1],["on_cdata","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_cdata","(str)","",null,1],["on_cdata_block","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_cdata_block","(string)","",null,0],["on_characters","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_characters","(string)","",null,0],["on_chardata","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_chardata","(str)","",null,1],["on_charref","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_charref","(code)","",null,1],["on_charref","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_charref","(code)","",null,1],["on_charref_hex","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_charref_hex","(code)","",null,1],["on_charref_hex","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_charref_hex","(code)","",null,1],["on_curve?","OpenSSL::PKey::EC::Point","Rails/classes/OpenSSL/PKey/EC/Point.html#method-i-on_curve-3F","()","",null,1],["on_end_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_end_document","()","",null,0],["on_end_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_end_element","(name)","",null,0],["on_entityref","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_entityref","(ref)","",null,1],["on_entityref","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_entityref","(ent)","",null,1],["on_etag","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_etag","(name)","",null,1],["on_event","WIN32OLE_EVENT","Rails/classes/WIN32OLE_EVENT.html#method-i-on_event","(*args)","<p>Defines the callback event. If argument is omitted, this method defines the\ncallback of all events.  …\n",null,1],["on_event_with_outargs","WIN32OLE_EVENT","Rails/classes/WIN32OLE_EVENT.html#method-i-on_event_with_outargs","(*args)","<p>Defines the callback of event. If you want modify argument in callback, you\ncould use this method instead …\n",null,1],["on_head","OptionParser","Rails/classes/OptionParser.html#method-i-on_head","(*opts, &block)","<p>Add option switch like with #on, but at head of summary.\n",null,1],["on_load","ActiveSupport","Ruby/classes/ActiveSupport.html#method-c-on_load","(name, options = {}, &block)","",null,0],["on_load_all","ActiveSupport","Ruby/classes/ActiveSupport.html#method-c-on_load_all","(&hook)","",null,0],["on_stag","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_stag","(name)","",null,1],["on_stag_end","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_stag_end","(name)","",null,1],["on_stag_end","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_stag_end","(name)","",null,1],["on_stag_end_empty","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_stag_end_empty","(name)","",null,1],["on_stag_end_empty","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_stag_end_empty","(name)","",null,1],["on_start_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_start_document","()","",null,0],["on_start_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_start_element","(name, attrs = {})","",null,0],["on_tags","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-on_tags","(res, item)","<p>Turns on tags for <code>item</code> on <code>res</code>\n",null,1],["on_tail","OptionParser","Rails/classes/OptionParser.html#method-i-on_tail","(*opts, &block)","<p>Add option switch like with #on, but at tail of summary.\n",null,1],["on_xmldecl_encoding","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_xmldecl_encoding","(str)","",null,1],["on_xmldecl_end","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_xmldecl_end","()","",null,1],["on_xmldecl_standalone","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_xmldecl_standalone","(str)","",null,1],["on_xmldecl_version","RSS::XMLScanListener","Rails/classes/RSS/XMLScanListener.html#method-i-on_xmldecl_version","(str)","",null,1],["one?","Enumerable","Rails/classes/Enumerable.html#method-i-one-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block returns …\n",null,1],["ongoing_visibility=","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-ongoing_visibility-3D","(visibility)","<p>Changes the visibility for new methods to <code>visibility</code>\n",null,1],["only","ActiveRecord::SpawnMethods","Ruby/classes/ActiveRecord/SpawnMethods.html#method-i-only","(*onlies)","<p>Removes any condition from the query other than the one(s) specified in\n<code>onlies</code>.\n<p>Example:\n\n<pre>Post.order('id ...</pre>\n",null,0],["only_child","HTML::Selector","Ruby/classes/HTML/Selector.html#method-i-only_child","(of_type)","<p>Creates a only child lambda. Pass <code>of-type</code> to only look at\nelements of its type.\n",null,0],["opaque","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-opaque","(secret_key)","<p>Opaque based on random generation - but changing each request?\n",null,0],["opaque=","URI::Generic","Rails/classes/URI/Generic.html#method-i-opaque-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["open","ActionDispatch::RailsEntityStore","Ruby/classes/ActionDispatch/RailsEntityStore.html#method-i-open","(key)","",null,0],["open","ActiveRecord::Fixtures::File","Ruby/classes/ActiveRecord/Fixtures/File.html#method-c-open","(file)","<p>Open a fixture file named <code>file</code>.  When called with a block, the\nblock is called with the filehandle and …\n",null,0],["open","CSV","Rails/classes/CSV.html#method-c-open","(*args)","<p>This method opens an IO object, and wraps that with CSV.  This is intended\nas the primary interface for …\n",null,1],["open","DBM","Rails/classes/DBM.html#method-c-open","(*args)","<p>Open a dbm database and yields it if a block is given. See also\n<code>DBM.new</code>.\n",null,1],["open","DRb::DRbProtocol","Rails/classes/DRb/DRbProtocol.html#method-c-open","(uri, config, first=true)","<p>Open a client connection to <code>uri</code> with the configuration\n<code>config</code>.\n<p>The DRbProtocol module asks each registered …\n",null,1],["open","DRb::DRbSSLSocket","Rails/classes/DRb/DRbSSLSocket.html#method-c-open","(uri, config)","",null,1],["open","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-c-open","(uri, config)","<p>Open a client connection to <code>uri</code> using configuration\n<code>config</code>.\n",null,1],["open","DRb::DRbUNIXSocket","Rails/classes/DRb/DRbUNIXSocket.html#method-c-open","(uri, config)","",null,1],["open","Dir","Rails/classes/Dir.html#method-c-open","(*args)","<p>With no block, <code>open</code> is a synonym for <code>Dir::new</code>. If\na block is present, it is passed <em>aDir</em> as a parameter. …\n",null,1],["open","File","Rails/classes/File.html#method-c-open","(*args)","<p>With no associated block, <code>File.open</code> is a synonym for File.new.\nIf the optional code block is given, it ...\n",null,1],["open","GDBM","Rails/classes/GDBM.html#method-c-open","(*args)","<p>If called without a block, this is synonymous to GDBM::new. If a block is\ngiven, the new GDBM instance …\n",null,1],["open","Gem::Package","Rails/classes/Gem/Package.html#method-c-open","(io, mode = \"r\", signer = nil, &block)","<p>FIX: zenspider said: does it really take an IO? passed to a method called\nopen?!? that seems stupid. …\n",null,1],["open","Gem::Package::TarOutput","Rails/classes/Gem/Package/TarOutput.html#method-c-open","(io, signer = nil)","<p>Creates a new TarOutput which will yield a TarWriter object for the\ndata.tar.gz portion of a gem-format …\n",null,1],["open","IO","Rails/classes/IO.html#method-c-open","(*args)","<p>With no associated block, <code>IO.open</code> is a synonym for IO.new. If\nthe optional code block is given, it will ...\n",null,1],["open","Iconv","Rails/classes/Iconv.html#method-c-open","(p1, p2, p3 = v3)","<p>Equivalent to Iconv.new except that when it is called with a block, it\nyields with the new instance and ...\n",null,1],["open","Kernel","Rails/classes/Kernel.html#method-c-open","(*args)","<p>Creates an <code>IO</code> object connected to the given stream, file, or\nsubprocess.\n<p>If <em>path</em> does not start with a …\n",null,1],["open","Net::FTP","Rails/classes/Net/FTP.html#method-c-open","(host, user = nil, passwd = nil, acct = nil)","<p>A synonym for <code>FTP.new</code>, but with a mandatory host parameter.\n<p>If a block is given, it is passed the <code>FTP</code> …\n",null,1],["open","OpenURI::OpenRead","Rails/classes/OpenURI/OpenRead.html#method-i-open","(*rest, &block)","<p>OpenURI::OpenRead#open provides `open’ for URI::HTTP and URI::FTP.\n<p>OpenURI::OpenRead#open takes optional …\n",null,1],["open","PTY","Rails/classes/PTY.html#method-c-open","()","<p>Allocates a pty (pseudo-terminal).\n<p>In the non-block form, returns a two element array, <code>[master_io,\nslave_file</code> …\n",null,1],["open","Pathname","Rails/classes/Pathname.html#method-i-open","(p1 = v1, p2 = v2, p3 = v3)","<p>See <code>File.open</code>.  Opens the file for reading or writing.\n",null,1],["open","Resolv::DNS","Rails/classes/Resolv/DNS.html#method-c-open","(*args)","<p>Creates a new DNS resolver.  See Resolv::DNS.new for argument details.\n<p>Yields the created DNS resolver …\n",null,1],["open","SDBM","Rails/classes/SDBM.html#method-c-open","(*args)","",null,1],["open","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-open","(path, mode = nil, perm = 0666, &b)","<p>CommandProcessor#open(path, mode)\n\n<pre>  path:   String\n  mode:   String\n  return: File or Dir\nSame as:\n  File#open ...</pre>\n",null,1],["open","StringIO","Rails/classes/StringIO.html#method-c-open","(*args)","<p>Equivalent to StringIO.new except that when it is called with a block, it\nyields with the new instance …\n",null,1],["open","Syslog","Rails/classes/Syslog.html#method-c-open","(p1 = v1, p2 = v2, p3 = v3)","<p>Open the syslog facility. Raises a runtime exception if it is already open.\n<p>Can be called with or without …\n",null,1],["open","Tempfile","Rails/classes/Tempfile.html#method-c-open","(*args)","<p>Creates a new Tempfile.\n<p>If no block is given, this is a synonym for Tempfile.new.\n<p>If a block is given, …\n",null,1],["open","Tempfile","Rails/classes/Tempfile.html#method-i-open","()","<p>Opens or reopens the file with mode “r+”.\n",null,1],["open","Win32::Registry","Rails/classes/Win32/Registry.html#method-c-open","(hkey, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)","<p>— Registry.open(key, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)\n<p>— Registry.open(key, subkey, …\n",null,1],["open","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-open","(subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED, &blk)","<p>Same as Win32::Registry.open (self, subkey, desired, opt)\n",null,1],["open","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-c-open","(*args)","<p>Opens a file specified by <code>filename</code> as a gzipped file, and\nreturns a GzipReader object associated with …\n",null,1],["open","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-c-open","(*args)","<p>Opens a file specified by <code>filename</code> for writing gzip compressed\ndata, and returns a GzipWriter object …\n",null,1],["open!","Syslog","Rails/classes/Syslog.html#method-c-open-21","(*args)","<p>Closes and then reopens the syslog.\n<p>Arguments are the same as for open().\n",null,1],["open?","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-open-3F","()","<p>Returns if key is not closed.\n",null,1],["open_log","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-i-open_log","(log, mode)","",null,0],["open_message_stream","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-open_message_stream","(from_addr, *to_addrs)","<p>Opens a message writer stream and gives it to the block. The stream is\nvalid only in the block, and has …\n",null,1],["open_message_stream","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-open_message_stream","(from_addr, *to_addrs)","<p>Opens a message writer stream and gives it to the block. The stream is\nvalid only in the block, and has …\n",null,1],["open_server","DRb::DRbProtocol","Rails/classes/DRb/DRbProtocol.html#method-c-open_server","(uri, config, first=true)","<p>Open a server listening for connections at <code>uri</code> with\nconfiguration <code>config</code>.\n<p>The DRbProtocol module asks …\n",null,1],["open_server","DRb::DRbSSLSocket","Rails/classes/DRb/DRbSSLSocket.html#method-c-open_server","(uri, config)","",null,1],["open_server","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-c-open_server","(uri, config)","<p>Open a server listening for connections at <code>uri</code> using\nconfiguration <code>config</code>.\n",null,1],["open_server","DRb::DRbUNIXSocket","Rails/classes/DRb/DRbUNIXSocket.html#method-c-open_server","(uri, config)","",null,1],["open_server_inaddr_any","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-c-open_server_inaddr_any","(host, port)","",null,1],["open_uri_or_path","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-open_uri_or_path","(uri, last_modified = nil, head = false, depth = 0)","<p>Read the data from the (source based) URI, but if it is a file:// URI, read\nfrom the filesystem instead. …\n",null,1],["opendir","Pathname","Rails/classes/Pathname.html#method-i-opendir","()","<p>See <code>Dir.open</code>.\n",null,1],["opened?","Syslog","Rails/classes/Syslog.html#method-c-opened-3F","()","<p>Returns true if the syslog is open.\n",null,1],["opt_parser","Rails::Server","Ruby/classes/Rails/Server.html#method-i-opt_parser","()","",null,0],["option_groups_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","Ruby/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-option_groups_from_collection_for_select","(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = nil)","<p>Returns a string of <code>&lt;option&gt;</code> tags, like\n<code>options_from_collection_for_select</code>, but groups them by …\n",null,0],["option_list","RDoc::Task","Rails/classes/RDoc/Task.html#method-i-option_list","()","<p>List of options that will be supplied to RDoc\n",null,1],["optional?","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-i-optional-3F","()","<p>Returns true if argument is optional.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook') ...</pre>\n",null,1],["optional_port","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-optional_port","()","<p>Returns a number port suffix like 8080 if the port number of this request\nis not the default HTTP port …\n",null,0],["options","Object","Ruby/classes/Object.html#method-i-options","()","",null,0],["options","Rails::Commands::Info","Ruby/classes/Rails/Commands/Info.html#method-i-options","()","",null,0],["options","Rails::Commands::Install","Ruby/classes/Rails/Commands/Install.html#method-i-options","()","",null,0],["options","Rails::Commands::Plugin","Ruby/classes/Rails/Commands/Plugin.html#method-i-options","()","",null,0],["options","Rails::Commands::Remove","Ruby/classes/Rails/Commands/Remove.html#method-i-options","()","",null,0],["options","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-options","(path, initheader = nil)","<p>Sends a OPTIONS request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["options","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-options","(path, initheader = nil)","<p>Sends a OPTIONS request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["options","OptionParser::Arguable","Rails/classes/OptionParser/Arguable.html#method-i-options","()","<p>Actual OptionParser object, automatically created if nonexistent.\n<p>If called with a block, yields the  …\n",null,1],["options","Rake::Application","Rails/classes/Rake/Application.html#method-i-options","()","<p>Application options from the command line\n",null,1],["options","Regexp","Rails/classes/Regexp.html#method-i-options","()","<p>Returns the set of bits corresponding to the options used when creating\nthis Regexp (see <code>Regexp::new</code> …\n",null,1],["options","Syslog","Rails/classes/Syslog.html#method-c-options","()","<p>Returns the options bitmask used in the last call to open()\n",null,1],["options=","OptionParser::Arguable","Rails/classes/OptionParser/Arguable.html#method-i-options-3D","(opt)","<p>Sets OptionParser object, when <code>opt</code> is <code>false</code> or\n<code>nil</code>, methods OptionParser::Arguable#options and\nOptionParser::Arguable#options= …\n",null,1],["options_for","ActiveSupport::JSON::Encoding::Encoder","Ruby/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-options_for","(value)","",null,0],["options_for_select","ActionView::Helpers::FormOptionsHelper","Ruby/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-options_for_select","(container, selected = nil)","<p>Accepts a container (hash, array, enumerable, your type) and returns a\nstring of option tags. Given a …\n",null,0],["options_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","Ruby/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-options_from_collection_for_select","(collection, value_method, text_method, selected = nil)","<p>Returns a string of option tags that have been compiled by iterating over\nthe <code>collection</code> and assigning …\n",null,0],["options_include_default?","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-options_include_default-3F","(options)","",null,0],["optname","Socket::Option","Rails/classes/Socket/Option.html#method-i-optname","()","<p>returns the socket option name as an integer.\n\n<pre>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).optname ...</pre>\n",null,1],["ord","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-ord","()","<p>Returns the codepoint of the first character in the string.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">'こんにちは'</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">ord</span> <span class=\"ruby-comment\"># =&gt; 12371</span>\n</pre>\n",null,0],["ord","String","Ruby/classes/String.html#method-i-ord","()","<p>Returns the codepoint of the first character of the string, assuming a\nsingle-byte character encoding: …\n",null,0],["ord","Integer","Rails/classes/Integer.html#method-i-ord","()","<p>Returns the int itself.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">a</span>.<span class=\"ruby-identifier\">ord</span>    <span class=\"ruby-comment\">#=&gt; 97</span>\n</pre>\n<p>This method is intended for compatibility to character constant …\n",null,1],["ord","String","Rails/classes/String.html#method-i-ord","()","<p>Return the <code>Integer</code> ordinal of a one-character string.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;a&quot;</span>.<span class=\"ruby-identifier\">ord</span>         <span class=\"ruby-comment\">#=&gt; 97</span>\n</pre>\n",null,1],["order","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-order","(*args)","",null,0],["order","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-order","()","<p>See the OpenSSL documentation for EC_GROUP_get_order()\n",null,1],["order","OptionParser","Rails/classes/OptionParser.html#method-i-order","(*argv, &block)","<p>Parses command line arguments <code>argv</code> in order. When a block is\ngiven, each non-option argument is yielded. …\n",null,1],["order!","OptionParser","Rails/classes/OptionParser.html#method-i-order-21","(argv = default_argv, &nonopt)","<p>Same as #order, but removes switches destructively.\n",null,1],["order!","OptionParser::Arguable","Rails/classes/OptionParser/Arguable.html#method-i-order-21","(&blk)","<p>Parses <code>self</code> destructively in order and returns\n<code>self</code> containing the rest arguments left unparsed.\n",null,1],["ordered_railties","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-ordered_railties","()","",null,0],["ordering=","GetoptLong","Rails/classes/GetoptLong.html#method-i-ordering-3D","(ordering)","<p>Set the handling of the ordering of options and arguments. A RuntimeError\nis raised if option processing …\n",null,1],["ordinal","Date","Rails/classes/Date.html#method-c-ordinal","(p1 = v1, p2 = v2, p3 = v3)","<p>Creates a date object denoting the given ordinal date.\n<p>The day of year should be a negative or a positive …\n",null,1],["ordinal","DateTime","Rails/classes/DateTime.html#method-c-ordinal","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7)","<p>Creates a date-time object denoting the given ordinal date.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">DateTime</span>.<span class=\"ruby-identifier\">ordinal</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">34</span>) <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["ordinalize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-ordinalize","(number)","<p>Turns a number into an ordinal string used to denote the position in an\nordered sequence such as 1st, …\n",null,0],["ordinalize","Integer","Ruby/classes/Integer.html#method-i-ordinalize","()","<p>Ordinalize turns a number into an ordinal string used to denote the\nposition in an ordered sequence such …\n",null,0],["org_initialize","Thread","Rails/classes/Thread.html#method-i-org_initialize","(*arg, &block)","",null,1],["orig_delete","ActiveResource::CustomMethods","Ruby/classes/ActiveResource/CustomMethods.html#method-c-orig_delete","(custom_method_name, options = {})","",null,0],["orig_meta_vars","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-orig_meta_vars","()","",null,1],["orig_name","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-orig_name","()","<p>Returns original filename recorded in the gzip file header, or\n<code>nil</code> if original filename is not present. ...\n",null,1],["orig_name=","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-orig_name-3D","(p1)","<p>Specify the original name (<code>str</code>) in the gzip header.\n",null,1],["orig_parse","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-orig_parse","(socket=nil)","",null,1],["orig_parse_uri","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-orig_parse_uri","(str, scheme=\"http\")","",null,1],["original_concat","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-original_concat","(value)","",null,0],["original_dir","Rake","Rails/classes/Rake.html#method-c-original_dir","()","<p>Return the original directory where the Rake application was started.\n",null,1],["original_fullpath","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-original_fullpath","()","",null,0],["original_name","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-original_name","()","",null,0],["original_url","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-original_url","()","",null,0],["orm_class","Rails::Generators::ResourceHelpers","Ruby/classes/Rails/Generators/ResourceHelpers.html#method-i-orm_class","()","<p>Loads the ORM::Generators::ActiveModel class. This class is responsible to\ntell scaffold entities how …\n",null,0],["orm_instance","Rails::Generators::ResourceHelpers","Ruby/classes/Rails/Generators/ResourceHelpers.html#method-i-orm_instance","(name=singular_table_name)","<p>Initialize ORM::Generators::ActiveModel to access instance methods.\n",null,0],["orthogonal?","Matrix","Rails/classes/Matrix.html#method-i-orthogonal-3F","()","<p>Returns <code>true</code> is this is an orthogonal matrix Raises an error\nif matrix is not square.\n",null,1],["os_code","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-os_code","()","<p>Returns OS code number recorded in the gzip file header.\n",null,1],["other_elements","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-c-other_elements","()","",null,1],["out","CGI","Rails/classes/CGI.html#method-i-out","(options = \"text/html\")","<p>Print an HTTP header and body to $DEFAULT_OUTPUT ($&gt;)\n<p><code>content_type_string</code> &mdash; If a string is passed, it …\n",null,1],["out","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-out","(dev = STDOUT, &block)","<p>internal commands\n",null,1],["out_of_line?","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-out_of_line-3F","()","",null,1],["out_of_line?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-out_of_line-3F","()","",null,1],["outdated","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-outdated","()","<p>Returns an Array of Gem::Specifications that are not up to date.\n",null,1],["outdated","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-outdated","()","<p>Return a list of all outdated specifications. This method is HEAVY as it\nmust go fetch specifications …\n",null,1],["output","Gem::MockGemUi","Rails/classes/Gem/MockGemUi.html#method-i-output","()","",null,1],["output","PrettyPrint::Breakable","Rails/classes/PrettyPrint/Breakable.html#method-i-output","(out, output_width)","",null,1],["output","PrettyPrint::Text","Rails/classes/PrettyPrint/Text.html#method-i-output","(out, output_width)","",null,1],["output=","Readline","Rails/classes/Readline.html#method-c-output-3D","(p1)","<p>Specifies a File object <code>output</code> that is output stream for\nReadline.readline method.\n<p>Raises SecurityError …\n",null,1],["output?","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-i-output-3F","()","<p>Returns true if argument is output.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', 'DWebBrowserEvents') ...</pre>\n",null,1],["output_encoding=","RSS::RootElementMixin","Rails/classes/RSS/RootElementMixin.html#method-i-output_encoding-3D","(enc)","",null,1],["output_flag_file","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-output_flag_file","(op_dir)","<p>Return the path name of the flag file in an output directory.\n",null,1],["output_value","IRB::Irb","Rails/classes/IRB/Irb.html#method-i-output_value","()","",null,1],["outside_transaction?","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-outside_transaction-3F","()","<p>Checks whether there is currently no transaction active. This is done by\nquerying the database driver, …\n",null,0],["outside_transaction?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-outside_transaction-3F","()","",null,0],["overlaps?","Range","Ruby/classes/Range.html#method-i-overlaps-3F","(other)","<p>Compare two ranges and see if they overlap each other\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">overlaps?</span>(<span class=\"ruby-value\">4</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">6</span>) <span class=\"ruby-comment\"># =&gt; true</span>\n(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">overlaps?</span>(<span class=\"ruby-value\">7</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">9</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["owned?","File","Rails/classes/File.html#method-c-owned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective used\nid of the calling process is the owner of …\n",null,1],["owned?","File::Stat","Rails/classes/File/Stat.html#method-i-owned-3F","()","<p>Returns <code>true</code> if the effective user id of the process is the\nsame as the owner of <em>stat</em>.\n\n<pre>File.stat(&quot;testfile&quot;).owned? ...</pre>\n",null,1],["owned?","FileTest","Rails/classes/FileTest.html#method-i-owned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective used\nid of the calling process is the owner of …\n",null,1],["owned?","Pathname","Rails/classes/Pathname.html#method-i-owned-3F","()","<p>See <code>FileTest.owned?</code>.\n",null,1],["owner","Method","Rails/classes/Method.html#method-i-owner","()","<p>Returns the class or module that defines the method.\n",null,1],["owner","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-owner","()","<p>Returns the class or module that defines the method.\n",null,1],["p","Kernel","Rails/classes/Kernel.html#method-i-p","(*args)","<p>For each object, directly writes <em>obj</em>.<code>inspect</code> followed\nby a newline to the program’s standard output. …\n",null,1],["p","Matrix::LUPDecomposition","Rails/classes/Matrix/LUPDecomposition.html#method-i-p","()","<p>Returns the permutation matrix <code>P</code>\n",null,1],["pack","Array","Rails/classes/Array.html#method-i-pack","(p1)","<p>Packs the contents of <em>arr</em> into a binary sequence according to the\ndirectives in <em>aTemplateString</em> (see …\n",null,1],["pack","DL::Packer","Rails/classes/DL/Packer.html#method-i-pack","(ary)","",null,1],["pack","DL::Stack","Rails/classes/DL/Stack.html#method-i-pack","(ary)","",null,1],["pack","Gem::Package","Rails/classes/Gem/Package.html#method-c-pack","(src, destname, signer = nil)","",null,1],["pack_sockaddr_in","Socket","Rails/classes/Socket.html#method-c-pack_sockaddr_in","(p1, p2)","<p>Packs <em>port</em> and <em>host</em> as an AF_INET/AF_INET6 sockaddr\nstring.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Socket</span>.<span class=\"ruby-identifier\">sockaddr_in</span>(<span class=\"ruby-value\">80</span>, <span class=\"ruby-string\">&quot;127.0.0.1&quot;</span>)\n<span class=\"ruby-comment\">#=&gt; &quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&quot; ...</span>\n</pre>\n",null,1],["pack_sockaddr_un","Socket","Rails/classes/Socket.html#method-c-pack_sockaddr_un","(p1)","<p>Packs <em>path</em> as an AF_UNIX sockaddr string.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Socket</span>.<span class=\"ruby-identifier\">sockaddr_un</span>(<span class=\"ruby-string\">&quot;/tmp/sock&quot;</span>) <span class=\"ruby-comment\">#=&gt; &quot;\\x01\\x00/tmp/sock\\x00\\x00...&quot;</span>\n</pre>\n",null,1],["package_dir_path","Rake::PackageTask","Rails/classes/Rake/PackageTask.html#method-i-package_dir_path","()","",null,1],["package_name","Rake::PackageTask","Rails/classes/Rake/PackageTask.html#method-i-package_name","()","",null,1],["packdw","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-packdw","(dw)","",null,1],["packqw","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-packqw","(qw)","",null,1],["padding=","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-padding-3D","(p1)","<p>Enables or disables padding. By default encryption operations are padded\nusing standard block padding …\n",null,1],["page","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-page","()","<p>Paginates output through a pager program.\n",null,1],["paging?","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-paging-3F","()","<p>Are we using a pager?\n",null,1],["pair","Socket","Rails/classes/Socket.html#method-c-pair","(p1, p2, p3 = v3)","<p>Creates a pair of sockets connected each other.\n<p><em>domain</em> should be a communications domain such as: :INET ...\n",null,1],["pair","UNIXSocket","Rails/classes/UNIXSocket.html#method-c-pair","(p1 = v1, p2 = v2)","<p>Creates a pair of sockets connected each other.\n<p><em>socktype</em> should be a socket type such as: :STREAM, :DGRAM ...\n",null,1],["pair_content","Curses","Rails/classes/Curses.html#method-c-pair_content","(p1)","<p>Returns a 2 item Array, with the foreground and background color, in\n<code>pair</code>\n",null,1],["pair_number","Curses","Rails/classes/Curses.html#method-c-pair_number","(p1)","<p>Returns the Fixnum color pair number of attributes <code>attrs</code>.\n",null,1],["param_key","ActiveModel::Naming","Ruby/classes/ActiveModel/Naming.html#method-c-param_key","(record_or_class)","<p>Returns string to use for params names. It differs for namespaced models\nregarding whether it’s inside …\n",null,0],["param_list","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-i-param_list","()","<p>A list of this method’s method and yield parameters.  <code>call-seq</code>\nparams are preferred over parsed method …\n",null,1],["param_seq","RDoc::AnyMethod","Rails/classes/RDoc/AnyMethod.html#method-i-param_seq","()","<p>Pretty parameter list for this method.  If the method’s parameters were\ngiven by <code>call-seq</code> it is preferred …\n",null,1],["parameter_filter","ActionDispatch::Http::FilterParameters","Ruby/classes/ActionDispatch/Http/FilterParameters.html#method-i-parameter_filter","()","",null,0],["parameter_filter_for","ActionDispatch::Http::FilterParameters","Ruby/classes/ActionDispatch/Http/FilterParameters.html#method-i-parameter_filter_for","(filters)","",null,0],["parameterize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-parameterize","(string, sep = '-')","<p>Replaces special characters in a string so that it may be used as part of a\n‘pretty’ URL.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["parameterize","String","Ruby/classes/String.html#method-i-parameterize","(sep = '-')","<p>Replaces special characters in a string so that it may be used as part of a\n‘pretty’ URL.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["parameters","ActionDispatch::Http::Parameters","Ruby/classes/ActionDispatch/Http/Parameters.html#method-i-parameters","()","<p>Returns both GET and POST parameters in a single hash.\n",null,0],["parameters","Method","Rails/classes/Method.html#method-i-parameters","()","<p>Returns the parameter information of this method.\n",null,1],["parameters","Proc","Rails/classes/Proc.html#method-i-parameters","()","<p>Returns the parameter information of this proc.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">prc</span> = <span class=\"ruby-identifier\">lambda</span>{<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">x</span>, <span class=\"ruby-identifier\">y</span>=<span class=\"ruby-value\">42</span>, *<span class=\"ruby-identifier\">other</span><span class=\"ruby-operator\">|</span>}\n<span class=\"ruby-identifier\">prc</span>.<span class=\"ruby-identifier\">parameters</span>  <span class=\"ruby-comment\">#=&gt; [[:req, ...</span>\n</pre>\n",null,1],["parameters","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-parameters","()","<p>Returns the parameter information of this method.\n",null,1],["params","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-params","()","",null,0],["params","ActionDispatch::Http::Parameters","Ruby/classes/ActionDispatch/Http/Parameters.html#method-i-params","()","",null,0],["params","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-params","()","<p>Stores all parameters of key to the hash INSECURE: PRIVATE INFORMATIONS CAN\nLEAK OUT!!! Don’t use :-)) …\n",null,1],["params","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-params","()","<p>Stores all parameters of key to the hash INSECURE: PRIVATE INFORMATIONS CAN\nLEAK OUT!!! Don’t use :-)) …\n",null,1],["params","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-params","()","<p>THIS METHOD IS INSECURE, PRIVATE INFORMATION CAN LEAK OUT!!!\n<p>Stores all parameters of key to the hash. …\n",null,1],["params","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-params","()","<p>returns array of WIN32OLE_PARAM object corresponding with method\nparameters.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft ...</pre>\n",null,1],["params","Zlib::Deflate","Rails/classes/Zlib/Deflate.html#method-i-params","(p1, p2)","<p>Changes the parameters of the deflate stream. See zlib.h for details. The\noutput from the stream by changing …\n",null,1],["params=","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-params-3D","(val)","",null,0],["params=","CGI::QueryExtension","Rails/classes/CGI/QueryExtension.html#method-i-params-3D","(hash)","<p>Set all the parameters.\n",null,1],["params_ok?","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-params_ok-3F","()","<p>Validates the Diffie-Hellman parameters associated with this instance. It\nchecks whether a safe prime …\n",null,1],["paranoid","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-paranoid","(path, extension)","<p>Ensure <code>path</code> and path with <code>extension</code> are\nidentical.\n",null,1],["parent","Module","Ruby/classes/Module.html#method-i-parent","()","<p>Returns the module which contains this one according to its name.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M</span>\n  <span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">N</span>\n  <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-constant\">X</span> = <span class=\"ruby-constant\">M</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">N</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["parent","Pathname","Rails/classes/Pathname.html#method-i-parent","()","<p>#parent returns the parent directory.\n<p>This is same as <code>self + '..'</code>.\n",null,1],["parent","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-parent","()","",null,1],["parent=","REXML::Child","Rails/classes/REXML/Child.html#method-i-parent-3D","( other )","<p>Sets the parent of this child to the supplied argument.\n<p>other &mdash; Must be a Parent object.  If this object …\n",null,1],["parent=","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-parent-3D","( node )","",null,1],["parent=","REXML::Text","Rails/classes/REXML/Text.html#method-i-parent-3D","(parent)","",null,1],["parent?","REXML::Node","Rails/classes/REXML/Node.html#method-i-parent-3F","()","",null,1],["parent?","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-parent-3F","()","",null,1],["parent_class_name","ActiveRecord::Generators::ModelGenerator","Ruby/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-parent_class_name","()","",null,0],["parent_file_name","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-parent_file_name","()","<p>File name of our parent\n",null,1],["parent_name","Module","Ruby/classes/Module.html#method-i-parent_name","()","<p>Returns the name of the module containing this one.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">M</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">N</span>.<span class=\"ruby-identifier\">parent_name</span> <span class=\"ruby-comment\"># =&gt; &quot;M&quot;</span>\n</pre>\n",null,0],["parent_name","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-parent_name","()","<p>Name of our parent\n",null,1],["parent_name","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-parent_name","()","<p>Name of our parent with special handling for un-marshaled methods\n",null,1],["parent_of?","ActiveSupport::Notifications::Event","Ruby/classes/ActiveSupport/Notifications/Event.html#method-i-parent_of-3F","(event)","",null,0],["parent_prefixes","AbstractController::ViewPaths::ClassMethods","Ruby/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-parent_prefixes","()","",null,0],["parents","Module","Ruby/classes/Module.html#method-i-parents","()","<p>Returns all the parents of this module according to its name, ordered from\nnested outwards. The receiver …\n",null,0],["parse","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-parse","(str, now=now)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone\nof <code>self</code> from parsed string. …\n",null,0],["parse","ActiveSupport::XmlMini_LibXMLSAX","Ruby/classes/ActiveSupport/XmlMini_LibXMLSAX.html#method-i-parse","(data)","",null,0],["parse","ActiveSupport::XmlMini_NokogiriSAX","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX.html#method-i-parse","(data)","",null,0],["parse","Mime::Type","Ruby/classes/Mime/Type.html#method-c-parse","(accept_header)","",null,0],["parse","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-c-parse","(column_definition)","",null,0],["parse","CGI","Rails/classes/CGI.html#method-c-parse","(query)","<p>Parse an HTTP query string into a hash of key=&gt;value pairs.\n\n<pre>params = CGI::parse(&quot;query_string&quot;)\n  # ...</pre>\n",null,1],["parse","CGI::Cookie","Rails/classes/CGI/Cookie.html#method-c-parse","(raw_cookie)","<p>Parse a raw cookie string into a hash of cookie-name=&gt;Cookie pairs.\n\n<pre>cookies = CGI::Cookie::parse(&quot;raw_cookie_string&quot;) ...</pre>\n",null,1],["parse","CSV","Rails/classes/CSV.html#method-c-parse","(*args, &block)","<p>This method can be used to easily parse CSV out of a String.  You may\neither provide a <code>block</code> which will …\n",null,1],["parse","Date","Rails/classes/Date.html#method-c-parse","(p1 = v1, p2 = v2, p3 = v3)","<p>Parses the given representation of date and time, and creates a date\nobject.\n<p>If the optional second argument …\n",null,1],["parse","DateTime","Rails/classes/DateTime.html#method-c-parse","(p1 = v1, p2 = v2, p3 = v3)","<p>Parses the given representation of date and time, and creates a date\nobject.\n<p>If the optional second argument …\n",null,1],["parse","Gem::Requirement","Rails/classes/Gem/Requirement.html#method-c-parse","(obj)","<p>Parse <code>obj</code>, returning an <code>[op, version]</code> pair.\n<code>obj</code> can be a String or a Gem::Version.\n<p>If <code>obj</code> is a String …\n",null,1],["parse","JSON","Rails/classes/JSON.html#method-i-parse","(source, opts = {})","<p>Parse the JSON document <em>source</em> into a Ruby data structure and\nreturn it.\n<p><em>opts</em> can have the following keys: ...\n",null,1],["parse","Net::SMTP::Response","Rails/classes/Net/SMTP/Response.html#method-c-parse","(str)","<p>Parses the received response and separates the reply code and the human\nreadable reply text\n",null,1],["parse","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-c-parse","(str)","",null,1],["parse","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-c-parse","(str, template=OBJECT_TYPE_TEMPLATE)","",null,1],["parse","OptionParser","Rails/classes/OptionParser.html#method-i-parse","(*argv)","<p>Parses command line arguments <code>argv</code> in order when environment\nvariable POSIXLY_CORRECT is set, and in …\n",null,1],["parse","OptionParser::Switch::NoArgument","Rails/classes/OptionParser/Switch/NoArgument.html#method-i-parse","(arg, argv)","<p>Raises an exception if any arguments given.\n",null,1],["parse","OptionParser::Switch::OptionalArgument","Rails/classes/OptionParser/Switch/OptionalArgument.html#method-i-parse","(arg, argv, &error)","<p>Parses argument if given, or uses default value.\n",null,1],["parse","OptionParser::Switch::PlacedArgument","Rails/classes/OptionParser/Switch/PlacedArgument.html#method-i-parse","(arg, argv, &error)","<p>Returns nil if argument is not present or begins with ‘-’.\n",null,1],["parse","OptionParser::Switch::RequiredArgument","Rails/classes/OptionParser/Switch/RequiredArgument.html#method-i-parse","(arg, argv)","<p>Raises an exception if argument is not present.\n",null,1],["parse","Psych","Rails/classes/Psych.html#method-c-parse","(yaml, filename = nil)","<p>Parse a YAML string in <code>yaml</code>.  Returns the first object of a\nYAML AST. <code>filename</code> is used in the exception …\n",null,1],["parse","Psych::Parser","Rails/classes/Psych/Parser.html#method-i-parse","(p1, p2 = v2)","<p>Parse the YAML document contained in <code>yaml</code>.  Events will be\ncalled on the handler set on the parser instance. …\n",null,1],["parse","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-parse","(comment_location)","<p>Parses <code>comment_location</code> into an RDoc::Markup::Document\ncomposed of multiple RDoc::Markup::Documents with …\n",null,1],["parse","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-c-parse","(str)","<p>Parses <code>str</code> into a Document\n",null,1],["parse","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-parse","(parent, indent = 0)","<p>Parses the tokens into an array of RDoc::Markup::XXX objects, and appends\nthem to the passed <code>parent</code>  …\n",null,1],["parse","RDoc::Options","Rails/classes/RDoc/Options.html#method-i-parse","(argv)","<p>Parses command line options.\n",null,1],["parse","RDoc::Text","Rails/classes/RDoc/Text.html#method-i-parse","(text)","<p>Normalizes <code>text</code> then builds a RDoc::Markup::Document from it\n",null,1],["parse","REXML::DTD::Parser","Rails/classes/REXML/DTD/Parser.html#method-c-parse","( input )","",null,1],["parse","REXML::Parsers::LightParser","Rails/classes/REXML/Parsers/LightParser.html#method-i-parse","()","",null,1],["parse","REXML::Parsers::SAX2Parser","Rails/classes/REXML/Parsers/SAX2Parser.html#method-i-parse","()","",null,1],["parse","REXML::Parsers::StreamParser","Rails/classes/REXML/Parsers/StreamParser.html#method-i-parse","()","",null,1],["parse","REXML::Parsers::TreeParser","Rails/classes/REXML/Parsers/TreeParser.html#method-i-parse","()","",null,1],["parse","REXML::Parsers::UltraLightParser","Rails/classes/REXML/Parsers/UltraLightParser.html#method-i-parse","()","",null,1],["parse","REXML::Parsers::XPathParser","Rails/classes/REXML/Parsers/XPathParser.html#method-i-parse","(path)","",null,1],["parse","REXML::XPathParser","Rails/classes/REXML/XPathParser.html#method-i-parse","(path, nodeset)","",null,1],["parse","RSS::BaseParser","Rails/classes/RSS/BaseParser.html#method-i-parse","()","",null,1],["parse","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-c-parse","(duration, do_validate=true)","",null,1],["parse","RSS::Parser","Rails/classes/RSS/Parser.html#method-c-parse","(rss, do_validate=true, ignore_unknown_element=true, parser_class=default_parser)","",null,1],["parse","RSS::Utils::CSV","Rails/classes/RSS/Utils/CSV.html#method-i-parse","(value, &block)","",null,1],["parse","RSS::Utils::YesCleanOther","Rails/classes/RSS/Utils/YesCleanOther.html#method-i-parse","(value)","",null,1],["parse","RSS::Utils::YesOther","Rails/classes/RSS/Utils/YesOther.html#method-i-parse","(value)","",null,1],["parse","Ripper","Rails/classes/Ripper.html#method-c-parse","(src, filename = '(ripper)', lineno = 1)","<p>Parses Ruby program read from <em>src</em>. <em>src</em> must be a String\nor a IO or a object which has #gets method.\n",null,1],["parse","Ripper::Filter","Rails/classes/Ripper/Filter.html#method-i-parse","(init = nil)","<p>Starts parsing.  <em>init</em> is a data accumulator. It is passed to the\nnext event handler (as of Enumerable#inject …\n",null,1],["parse","Time","Rails/classes/Time.html#method-c-parse","(date, now=self.now)","<p>Parses <code>date</code> using Date._parse and converts it to a Time\nobject.\n<p>If a block is given, the year described …\n",null,1],["parse","URI","Rails/classes/URI.html#method-c-parse","(uri)","<p>Synopsis\n\n<pre>URI::parse(uri_str)</pre>\n<p>Args\n",null,1],["parse","URI::Parser","Rails/classes/URI/Parser.html#method-i-parse","(uri)","<p>Args\n<p><code>uri</code> &mdash; String\n\n<p>Description\n",null,1],["parse","WEBrick::Cookie","Rails/classes/WEBrick/Cookie.html#method-c-parse","(str)","<p>Cookie::parse()\n\n<pre>It parses Cookie field sent from the user agent.</pre>\n",null,1],["parse","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-parse","(socket=nil)","",null,1],["parse","XMLRPC::XMLParser::NQXMLStreamParser::XMLRPCParser","Rails/classes/XMLRPC/XMLParser/NQXMLStreamParser/XMLRPCParser.html#method-i-parse","(str)","",null,1],["parse","XMLRPC::XMLParser::REXMLStreamParser::StreamListener","Rails/classes/XMLRPC/XMLParser/REXMLStreamParser/StreamListener.html#method-i-parse","(str)","",null,1],["parse","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Rails/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-parse","(str)","",null,1],["parse!","Rails::Commands::Info","Ruby/classes/Rails/Commands/Info.html#method-i-parse-21","(args)","",null,0],["parse!","Rails::Commands::Install","Ruby/classes/Rails/Commands/Install.html#method-i-parse-21","(args)","",null,0],["parse!","Rails::Commands::Plugin","Ruby/classes/Rails/Commands/Plugin.html#method-i-parse-21","(args=ARGV)","",null,0],["parse!","Rails::Commands::Plugin","Ruby/classes/Rails/Commands/Plugin.html#method-c-parse-21","(args=ARGV)","",null,0],["parse!","Rails::Commands::Remove","Ruby/classes/Rails/Commands/Remove.html#method-i-parse-21","(args)","",null,0],["parse!","Rails::Server::Options","Ruby/classes/Rails/Server/Options.html#method-i-parse-21","(args)","",null,0],["parse!","JSON","Rails/classes/JSON.html#method-i-parse-21","(source, opts = {})","<p>Parse the JSON document <em>source</em> into a Ruby data structure and\nreturn it. The bang version of the parse …\n",null,1],["parse!","OptionParser","Rails/classes/OptionParser.html#method-i-parse-21","(argv = default_argv)","<p>Same as #parse, but removes switches destructively.\n",null,1],["parse!","OptionParser::Arguable","Rails/classes/OptionParser/Arguable.html#method-i-parse-21","()","<p>Parses <code>self</code> destructively and returns <code>self</code>\ncontaining the rest arguments left unparsed.\n",null,1],["parseMethodCall","XMLRPC::XMLParser::AbstractStreamParser","Rails/classes/XMLRPC/XMLParser/AbstractStreamParser.html#method-i-parseMethodCall","(str)","",null,1],["parseMethodCall","XMLRPC::XMLParser::AbstractTreeParser","Rails/classes/XMLRPC/XMLParser/AbstractTreeParser.html#method-i-parseMethodCall","(str)","",null,1],["parseMethodResponse","XMLRPC::XMLParser::AbstractStreamParser","Rails/classes/XMLRPC/XMLParser/AbstractStreamParser.html#method-i-parseMethodResponse","(str)","",null,1],["parseMethodResponse","XMLRPC::XMLParser::AbstractTreeParser","Rails/classes/XMLRPC/XMLParser/AbstractTreeParser.html#method-i-parseMethodResponse","(str)","",null,1],["parse_alias","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_alias","(context, single, tk, comment)","<p>Parses an <code>alias</code> in <code>context</code> with\n<code>comment</code>\n",null,1],["parse_args","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-parse_args","( element, string )","",null,1],["parse_attr","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_attr","(context, single, tk, comment)","<p>Creates an RDoc::Attr for the name following <code>tk</code>, setting the\ncomment to <code>comment</code>.\n",null,1],["parse_attr_accessor","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_attr_accessor","(context, single, tk, comment)","<p>Creates an RDoc::Attr for each attribute listed after <code>tk</code>,\nsetting the comment for each to <code>comment</code>.\n",null,1],["parse_call_parameters","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_call_parameters","(tk)","<p>Extracts call parameters from the token stream.\n",null,1],["parse_class","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_class","(container, single, tk, comment)","<p>Parses a class in <code>context</code> with <code>comment</code>\n",null,1],["parse_comment","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_comment","(container, tk, comment)","<p>Generates an RDoc::Method or RDoc::Attr from <code>comment</code> by\nlooking for :method: or :attr: directives in …\n",null,1],["parse_config","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-c-parse_config","(io)","",null,1],["parse_constant","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_constant","(container, tk, comment)","<p>Parses a constant in <code>context</code> with <code>comment</code>\n",null,1],["parse_content_type","XMLRPC::ParseContentType","Rails/classes/XMLRPC/ParseContentType.html#method-i-parse_content_type","(str)","",null,1],["parse_csv","String","Rails/classes/String.html#method-i-parse_csv","(options = Hash.new)","<p>Equivalent to <code>CSV::parse_line(self, options)</code>.\n",null,1],["parse_ctype","DL::CParser","Rails/classes/DL/CParser.html#method-i-parse_ctype","(ty, tymap=nil)","",null,1],["parse_data_with_trailing_star","Mime::Type","Ruby/classes/Mime/Type.html#method-c-parse_data_with_trailing_star","(input)","<p>input: ‘text’ returned value:  [Mime::JSON, Mime::XML, Mime::ICS,\nMime::HTML, Mime::CSS, Mime::CSV,  …\n",null,0],["parse_dot_doc_file","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-parse_dot_doc_file","(in_dir, filename)","<p>The .document file contains a list of file and directory name patterns,\nrepresenting candidates for documentation. …\n",null,1],["parse_error","ActiveSupport::JSON","Ruby/classes/ActiveSupport/JSON.html#method-c-parse_error","()","",null,0],["parse_file","Psych","Rails/classes/Psych.html#method-c-parse_file","(filename)","<p>Parse a file at <code>filename</code>. Returns the YAML AST.\n<p>Raises a Psych::SyntaxError when a YAML syntax error is …\n",null,1],["parse_file","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-parse_file","(filename)","<p>Parses <code>filename</code> and returns an RDoc::TopLevel\n",null,1],["parse_files","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-parse_files","(files)","<p>Parse each file on the command line, recursively entering directories.\n",null,1],["parse_files_matching","RDoc::Parser","Rails/classes/RDoc/Parser.html#method-c-parse_files_matching","(regexp)","<p>Record which file types this parser can understand.\n<p>It is ok to call this multiple times.\n",null,1],["parse_form_data","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-parse_form_data","(io, boundary)","",null,1],["parse_header","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-parse_header","(raw)","",null,1],["parse_helper","REXML::DTD::Parser","Rails/classes/REXML/DTD/Parser.html#method-c-parse_helper","( input )","<p>Takes a String and parses it out\n",null,1],["parse_include","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_include","(context, comment)","<p>Parses an <code>include</code> in <code>context</code> with\n<code>comment</code>\n",null,1],["parse_line","CSV","Rails/classes/CSV.html#method-c-parse_line","(line, options = Hash.new)","<p>This method is a shortcut for converting a single line of a CSV String into\na into an Array.  Note that …\n",null,1],["parse_meta_attr","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_meta_attr","(context, single, tk, comment)","<p>Parses a meta-programmed attribute and creates an RDoc::Attr.\n<p>To create foo and bar attributes on class …\n",null,1],["parse_meta_method","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_meta_method","(container, single, tk, comment)","<p>Parses a meta-programmed method\n",null,1],["parse_method","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_method","(container, single, tk, comment)","<p>Parses a normal method defined by <code>def</code>\n",null,1],["parse_method_or_yield_parameters","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_method_or_yield_parameters","(method = nil, modifiers = RDoc::METHOD_MODIFIERS)","<p>Extracts <code>yield</code> parameters from <code>method</code>\n",null,1],["parse_method_parameters","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_method_parameters","(method)","<p>Capture the method’s parameters. Along the way, look for a comment\ncontaining:\n\n<pre># yields: ....</pre>\n<p>and add this …\n",null,1],["parse_module","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_module","(container, single, tk, comment)","<p>Parses an RDoc::NormalModule in <code>container</code> with\n<code>comment</code>\n",null,1],["parse_name","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-parse_name","(name)","<p>Extracts the class, selector and method name parts from <code>name</code>\nlike Foo::Bar#baz.\n<p>NOTE: Given Foo::Bar, …\n",null,1],["parse_openssl","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-c-parse_openssl","(str, template=OBJECT_TYPE_TEMPLATE)","",null,1],["parse_opts","IRB","Rails/classes/IRB.html#method-c-parse_opts","()","<p>option analyzing\n",null,1],["parse_printf_format","IRB::OutputMethod","Rails/classes/IRB/OutputMethod.html#method-i-parse_printf_format","(format, opts)","<p>% &lt;flag&gt;  [#0- +] &lt;minimum field width&gt; (*|*[1-9]*$|[1-9]*)\n&lt;precision>.(*|*[0-9]*$| …\n",null,1],["parse_query","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-parse_query","(qs)","",null,0],["parse_query","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-parse_query","(str)","",null,1],["parse_qvalues","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-parse_qvalues","(value)","",null,1],["parse_range_header","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-parse_range_header","(ranges_specifier)","",null,1],["parse_raw_value_as_a_number","ActiveModel::Validations::NumericalityValidator","Ruby/classes/ActiveModel/Validations/NumericalityValidator.html#method-i-parse_raw_value_as_a_number","(raw_value)","",null,0],["parse_raw_value_as_an_integer","ActiveModel::Validations::NumericalityValidator","Ruby/classes/ActiveModel/Validations/NumericalityValidator.html#method-i-parse_raw_value_as_an_integer","(raw_value)","",null,0],["parse_require","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_require","(context, comment)","<p>Parses an RDoc::Require in <code>context</code> containing\n<code>comment</code>\n",null,1],["parse_rfc2253","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-c-parse_rfc2253","(str, template=OBJECT_TYPE_TEMPLATE)","",null,1],["parse_set_cookie","WEBrick::Cookie","Rails/classes/WEBrick/Cookie.html#method-c-parse_set_cookie","(str)","",null,1],["parse_set_cookies","WEBrick::Cookie","Rails/classes/WEBrick/Cookie.html#method-c-parse_set_cookies","(str)","",null,1],["parse_signature","DL::CParser","Rails/classes/DL/CParser.html#method-i-parse_signature","(signature, tymap=nil)","",null,1],["parse_source","REXML::DTD::EntityDecl","Rails/classes/REXML/DTD/EntityDecl.html#method-c-parse_source","(source, listener)","",null,1],["parse_source","REXML::DTD::NotationDecl","Rails/classes/REXML/DTD/NotationDecl.html#method-c-parse_source","(source, listener)","",null,1],["parse_statements","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_statements","(container, single = NORMAL, current_method = nil, comment = '')","<p>The core of the ruby parser.\n",null,1],["parse_stream","Psych","Rails/classes/Psych.html#method-c-parse_stream","(yaml, filename = nil, &block)","<p>Parse a YAML string in <code>yaml</code>.  Returns the full AST for the\nYAML document. This method can handle multiple …\n",null,1],["parse_stream","REXML::Document","Rails/classes/REXML/Document.html#method-c-parse_stream","( source, listener )","",null,1],["parse_struct_signature","DL::CParser","Rails/classes/DL/CParser.html#method-i-parse_struct_signature","(signature, tymap=nil)","",null,1],["parse_symbol_arg","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_symbol_arg","(no = nil)","<p>Parse up to <code>no</code> symbol arguments\n",null,1],["parse_symbol_in_arg","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_symbol_in_arg","()","<p>Returns symbol text from the next token\n",null,1],["parse_task_string","Rake::Application","Rails/classes/Rake/Application.html#method-i-parse_task_string","(string)","",null,1],["parse_time","Psych::ScalarScanner","Rails/classes/Psych/ScalarScanner.html#method-i-parse_time","(string)","<p>Parse and return a Time from <code>string</code>\n",null,1],["parse_top_level_statements","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_top_level_statements","(container)","<p>Parses statements in the top-level <code>container</code>\n",null,1],["parse_uri","DRb::DRbSSLSocket","Rails/classes/DRb/DRbSSLSocket.html#method-c-parse_uri","(uri)","",null,1],["parse_uri","DRb::DRbUNIXSocket","Rails/classes/DRb/DRbUNIXSocket.html#method-c-parse_uri","(uri)","",null,1],["parse_visibility","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_visibility","(container, single, tk)","<p>Determines the visibility in <code>container</code> from <code>tk</code>\n",null,1],["parse_yield","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-parse_yield","(context, single, tk, method)","<p>Determines the block parameter for <code>context</code>\n",null,1],["parser","URI","Ruby/classes/URI.html#method-c-parser","()","",null,0],["parser","Psych","Rails/classes/Psych.html#method-c-parser","()","<p>Returns a default parser\n",null,1],["parser","URI::Generic","Rails/classes/URI/Generic.html#method-i-parser","()","<p>returns the parser to be used.\n<p>Unless a URI::Parser is defined, then DEFAULT_PARSER is used.\n",null,1],["partition","Enumerable","Rails/classes/Enumerable.html#method-i-partition","()","<p>Returns two arrays, the first containing the elements of <em>enum</em> for\nwhich the block evaluates to true, …\n",null,1],["partition","String","Rails/classes/String.html#method-i-partition","(p1)","<p>Searches <em>sep</em> or pattern (<em>regexp</em>) in the string and\nreturns the part before it, the match, and the part …\n",null,1],["pass","Thread","Rails/classes/Thread.html#method-c-pass","()","<p>Give the thread scheduler a hint to pass execution to another thread. A\nrunning thread may or may not …\n",null,1],["passwd","Etc","Rails/classes/Etc.html#method-c-passwd","()","<p>Provides a convenient Ruby iterator which executes a block for each entry\nin the /etc/passwd file.\n<p>The …\n",null,1],["password","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-password","()","<p>Gets the password for REST HTTP authentication.\n",null,0],["password","URI::Generic","Rails/classes/URI/Generic.html#method-i-password","()","<p>returns the password component\n",null,1],["password=","ActiveModel::SecurePassword::InstanceMethodsOnActivation","Ruby/classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html#method-i-password-3D","(unencrypted_password)","<p>Encrypts the password into the password_digest attribute.\n",null,0],["password=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-password-3D","(password)","<p>Sets the password for REST HTTP authentication.\n",null,0],["password=","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-password-3D","(password)","<p>Sets the password for remote service.\n",null,0],["password=","URI::Generic","Rails/classes/URI/Generic.html#method-i-password-3D","(password)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["password=","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-password-3D","(new_password)","",null,1],["password_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-password_field","(object_name, method, options = {})","<p>Returns an input tag of the “password” type tailored for accessing a\nspecified attribute (identified …\n",null,0],["password_field","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-password_field","(name = \"\", value = nil, size = 40, maxlength = nil)","<p>Generate a Password Input element as a string.\n<p><code>name</code> is the name of the input field.  <code>value</code> is\nits default ...\n",null,1],["password_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-password_field_tag","(name = \"password\", value = nil, options = {})","<p>Creates a password field, a masked text field that will hide the users\ninput behind a mask character. …\n",null,0],["past?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-past-3F","()","",null,0],["past?","Date","Ruby/classes/Date.html#method-i-past-3F","()","<p>Returns true if the Date object’s date lies in the past. Otherwise returns\nfalse.\n",null,0],["past?","DateTime","Ruby/classes/DateTime.html#method-i-past-3F","()","<p>Tells whether the DateTime object’s datetime lies in the past\n",null,0],["past?","Time","Ruby/classes/Time.html#method-i-past-3F","()","<p>Tells whether the Time object’s time lies in the past\n",null,0],["patch","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-patch","(path, data, initheader = nil, dest = nil)","<p>Sends a PATCH request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["patch","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-patch","(path, data, initheader = nil, dest = nil)","<p>Sends a PATCH request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["path","LoadError","Ruby/classes/LoadError.html#method-i-path","()","",null,0],["path","LoadError","Ruby/classes/LoadError.html#method-i-path","()","",null,0],["path","ARGF","Rails/classes/ARGF.html#method-i-path","()","<p>Returns the current filename. “-” is returned when the current file is\nSTDIN.\n<p>For example:\n\n<pre>$ ...</pre>\n",null,1],["path","Dir","Rails/classes/Dir.html#method-i-path","()","<p>Returns the path parameter passed to <em>dir</em>’s constructor.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;..&quot;</span>)\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">path</span>   <span class=\"ruby-comment\">#=&gt; &quot;..&quot;</span>\n</pre>\n",null,1],["path","File","Rails/classes/File.html#method-i-path","()","<p>Returns the pathname used to create <em>file</em> as a string. Does not\nnormalize the name.\n\n<pre>File.new(&quot;testfile&quot;).path ...</pre>\n",null,1],["path","File","Rails/classes/File.html#method-c-path","(p1)","<p>Returns the string representation of the path\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">path</span>(<span class=\"ruby-string\">&quot;/dev/null&quot;</span>)          <span class=\"ruby-comment\">#=&gt; &quot;/dev/null&quot;</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">path</span>(<span class=\"ruby-constant\">Pathname</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;/tmp&quot;</span>)) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["path","Gem","Rails/classes/Gem.html#method-c-path","()","",null,1],["path","PStore","Rails/classes/PStore.html#method-i-path","()","<p>Returns the path to the data store file.\n",null,1],["path","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-path","()","<p>Path to this class or module\n",null,1],["path","RDoc::Constant","Rails/classes/RDoc/Constant.html#method-i-path","()","<p>Path to this constant\n",null,1],["path","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-path","()","<p>Path to this method\n",null,1],["path","RDoc::RI::Paths","Rails/classes/RDoc/RI/Paths.html#method-c-path","(system, site, home, gems, *extra_dirs)","<p>Returns existing directories from the selected documentation directories as\nan Array.\n<p>See also ::each …\n",null,1],["path","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-i-path","()","<p>Path to this file\n",null,1],["path","Rake::FtpFile","Rails/classes/Rake/FtpFile.html#method-i-path","()","",null,1],["path","Tempfile","Rails/classes/Tempfile.html#method-i-path","()","<p>Returns the full path name of the temporary file. This will be nil if\n#unlink has been called.\n",null,1],["path","UNIXSocket","Rails/classes/UNIXSocket.html#method-i-path","()","<p>Returns the path of the local address of unixsocket.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">s</span> = <span class=\"ruby-constant\">UNIXServer</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;/tmp/sock&quot;</span>)\n<span class=\"ruby-identifier\">p</span> <span class=\"ruby-identifier\">s</span>.<span class=\"ruby-identifier\">path</span> <span class=\"ruby-comment\">#=&gt; &quot;/tmp/sock&quot;</span>\n</pre>\n",null,1],["path","URI::FTP","Rails/classes/URI/FTP.html#method-i-path","()","<p>Returns the path from an FTP URI.\n<p>RFC 1738 specifically states that the path for an FTP URI does not include\n…\n",null,1],["path","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-path","()","<p>Returns the type library file path.\n\n<pre>tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library') ...</pre>\n",null,1],["path=","URI::Generic","Rails/classes/URI/Generic.html#method-i-path-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["path_for","Sprockets::StaticCompiler","Ruby/classes/Sprockets/StaticCompiler.html#method-i-path_for","(asset)","",null,0],["path_ok?","Gem::Uninstaller","Rails/classes/Gem/Uninstaller.html#method-i-path_ok-3F","(gem_dir, spec)","<p>Is <code>spec</code> in <code>gem_dir</code>?\n",null,1],["path_parameters","ActionDispatch::Http::Parameters","Ruby/classes/ActionDispatch/Http/Parameters.html#method-i-path_parameters","()","<p>Returns a hash with the parameters used to form the path of the request.\nReturned hash keys are strings: …\n",null,0],["path_to_asset","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-path_to_asset","(source, options = {})","",null,0],["path_to_audio","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-path_to_audio","(source)","",null,0],["path_to_font","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-path_to_font","(source)","",null,0],["path_to_font","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-path_to_font","(source)","",null,0],["path_to_image","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-path_to_image","(source)","",null,0],["path_to_image","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-path_to_image","(source)","",null,0],["path_to_javascript","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html#method-i-path_to_javascript","(source)","",null,0],["path_to_javascript","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-path_to_javascript","(source)","",null,0],["path_to_stylesheet","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html#method-i-path_to_stylesheet","(source)","",null,0],["path_to_stylesheet","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-path_to_stylesheet","(source)","",null,0],["path_to_video","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-path_to_video","(source)","",null,0],["pathmap","String","Rails/classes/String.html#method-i-pathmap","(spec=nil, &block)","<p>Map the path according to the given specification.  The specification\ncontrols the details of the mapping. …\n",null,1],["pathmap_explode","String","Rails/classes/String.html#method-i-pathmap_explode","()","<p>Explode a path into individual components.  Used by <code>pathmap</code>.\n",null,1],["pathmap_partial","String","Rails/classes/String.html#method-i-pathmap_partial","(n)","<p>Extract a partial path from the path.  Include <code>n</code> directories\nfrom the front end (left hand side) if  …\n",null,1],["pathmap_replace","String","Rails/classes/String.html#method-i-pathmap_replace","(patterns, &block)","<p>Preform the pathmap replacement operations on the given path. The patterns\ntake the form ‘pat1,rep1;pat2, …\n",null,1],["paths","Rails::Application::Configuration","Ruby/classes/Rails/Application/Configuration.html#method-i-paths","()","",null,0],["paths","Rails::Engine::Configuration","Ruby/classes/Rails/Engine/Configuration.html#method-i-paths","()","",null,0],["paths","Gem","Rails/classes/Gem.html#method-c-paths","()","",null,1],["paths=","Gem","Rails/classes/Gem.html#method-c-paths-3D","(env)","",null,1],["pattern","OptionParser::Switch","Rails/classes/OptionParser/Switch.html#method-c-pattern","()","",null,1],["pattern","OptionParser::Switch::NoArgument","Rails/classes/OptionParser/Switch/NoArgument.html#method-c-pattern","()","",null,1],["pbkdf2_hmac","OpenSSL::PKCS5","Rails/classes/OpenSSL/PKCS5.html#method-c-pbkdf2_hmac","(p1, p2, p3, p4, p5)","<p>Parameters\n<p><code>pass</code> - string\n<p><code>salt</code> - string\n",null,1],["pbkdf2_hmac_sha1","OpenSSL::PKCS5","Rails/classes/OpenSSL/PKCS5.html#method-c-pbkdf2_hmac_sha1","(p1, p2, p3, p4)","<p>Parameters\n<p><code>pass</code> - string\n<p><code>salt</code> - string\n",null,1],["peek","DRb::TimerIdConv::TimerHolder2","Rails/classes/DRb/TimerIdConv/TimerHolder2.html#method-i-peek","(key)","",null,1],["peek","Enumerator","Rails/classes/Enumerator.html#method-i-peek","()","<p>Returns the next object in the enumerator, but doesn’t move the internal\nposition forward.  If the position …\n",null,1],["peek","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-peek","(depth=0)","<p>Peek at the <code>depth</code> event in the stack.  The first element on\nthe stack is at depth 0.  If <code>depth</code> is -1, …\n",null,1],["peek","REXML::Parsers::PullParser","Rails/classes/REXML/Parsers/PullParser.html#method-i-peek","(depth=0)","",null,1],["peek","RubyLex","Rails/classes/RubyLex.html#method-i-peek","(i = 0)","",null,1],["peek","StringScanner","Rails/classes/StringScanner.html#method-i-peek","(p1)","<p>Extracts a string corresponding to <code>string[pos,len]</code>, without\nadvancing the scan pointer.\n\n<pre>s = StringScanner.new('test ...</pre>\n",null,1],["peek_equal?","RubyLex","Rails/classes/RubyLex.html#method-i-peek_equal-3F","(str)","",null,1],["peek_match?","RubyLex","Rails/classes/RubyLex.html#method-i-peek_match-3F","(regexp)","",null,1],["peek_read","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-peek_read","()","<p>Peek equivalent for get_tkread\n",null,1],["peek_tk","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-peek_tk","()","<p>Peek at the next token, but don’t remove it from the stream\n",null,1],["peek_token","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-peek_token","()","<p>Returns the next token on the stream without modifying the stream\n",null,1],["peek_values","Enumerator","Rails/classes/Enumerator.html#method-i-peek_values","()","<p>Returns the next object as an array, similar to Enumerator#next_values, but\ndoesn’t move the internal …\n",null,1],["peep","StringScanner","Rails/classes/StringScanner.html#method-i-peep","(p1)","<p>Equivalent to #peek. This method is obsolete; use #peek instead.\n",null,1],["peer_cert","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-peer_cert","()","<p>Returns the X.509 certificates the server presented.\n",null,1],["peer_cert","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-peer_cert","()","<p>Returns the X.509 certificates the server presented.\n",null,1],["peer_cert","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-peer_cert","()","<p>The X509 certificate for this socket’s peer.\n",null,1],["peer_cert","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-peer_cert","()","",null,1],["peer_cert_chain","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-peer_cert_chain","()","<p>The X509 certificate chain for this socket’s peer.\n",null,1],["peer_cert_chain","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-peer_cert_chain","()","",null,1],["peeraddr","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-i-peeraddr","()","<p>Get the address of our TCP peer (the other end of the socket we are bound\nto.\n",null,1],["peeraddr","IPSocket","Rails/classes/IPSocket.html#method-i-peeraddr","(*args)","<p>Returns the remote address as an array which contains address_family, port,\nhostname and numeric_address. …\n",null,1],["peeraddr","OpenSSL::SSL::SocketForwarder","Rails/classes/OpenSSL/SSL/SocketForwarder.html#method-i-peeraddr","()","",null,1],["peeraddr","UNIXSocket","Rails/classes/UNIXSocket.html#method-i-peeraddr","()","<p>Returns the remote address as an array which contains address_family and\nunix_path.\n<p>Example\n\n<pre>serv = UNIXServer.new(&quot;/tmp/sock&quot;) ...</pre>\n",null,1],["peeraddr","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-peeraddr","()","",null,1],["pending","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-pending","()","<p>The number of bytes that are immediately available for reading\n",null,1],["percent_doc","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-percent_doc","()","<p>Calculates the percentage of items documented.\n",null,1],["perform_validations","ActiveRecord::Validations","Ruby/classes/ActiveRecord/Validations.html#method-i-perform_validations","(options={})","",null,0],["perform_with_block","DRb::DRbServer::InvokeMethod18Mixin","Rails/classes/DRb/DRbServer/InvokeMethod18Mixin.html#method-i-perform_with_block","()","",null,1],["performed?","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-performed-3F","()","",null,0],["period","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-period","()","<p>Returns the underlying TZInfo::TimezonePeriod.\n",null,0],["period_for_local","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-period_for_local","(time, dst=true)","<p>Available so that TimeZone instances respond like TZInfo::Timezone\ninstances\n",null,0],["period_for_utc","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-period_for_utc","(time)","<p>Available so that TimeZone instances respond like TZInfo::Timezone\ninstances\n",null,0],["permanent_link=","RSS::Maker::ItemsBase::ItemBase::GuidBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/GuidBase.html#method-i-permanent_link-3D","(bool)","",null,1],["permanent_link?","RSS::Maker::ItemsBase::ItemBase::GuidBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/GuidBase.html#method-i-permanent_link-3F","()","",null,1],["permutation","Array","Rails/classes/Array.html#method-i-permutation","(p1 = v1)","<p>When invoked with a block, yield all permutations of length <em>n</em> of\nthe elements of <em>ary</em>, then return the …\n",null,1],["permutation?","Matrix","Rails/classes/Matrix.html#method-i-permutation-3F","()","<p>Returns <code>true</code> is this is a permutation matrix Raises an error\nif matrix is not square.\n",null,1],["permute","OptionParser","Rails/classes/OptionParser.html#method-i-permute","(*argv)","<p>Parses command line arguments <code>argv</code> in permutation mode and\nreturns list of non-option arguments.\n",null,1],["permute!","OptionParser","Rails/classes/OptionParser.html#method-i-permute-21","(argv = default_argv)","<p>Same as #permute, but removes switches destructively.\n",null,1],["permute!","OptionParser::Arguable","Rails/classes/OptionParser/Arguable.html#method-i-permute-21","()","<p>Parses <code>self</code> destructively in permutation mode and returns\n<code>self</code> containing the rest arguments left unparsed. …\n",null,1],["persisted?","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-persisted-3F","()","<p>Returns if the record is persisted, i.e. it’s not a new record and it was\nnot destroyed.\n",null,0],["persisted?","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-persisted-3F","()","<p>Returns <code>true</code> if this object has been saved, otherwise returns\n<code>false</code>.\n<p>Examples\n\n<pre>persisted = Computer.create(:brand ...</pre>\n",null,0],["petabyte","Numeric","Ruby/classes/Numeric.html#method-i-petabyte","()","",null,0],["petabytes","Numeric","Ruby/classes/Numeric.html#method-i-petabytes","()","",null,0],["pfamily","Addrinfo","Rails/classes/Addrinfo.html#method-i-pfamily","()","<p>returns the protocol family as an integer.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">tcp</span>(<span class=\"ruby-string\">&quot;localhost&quot;</span>, <span class=\"ruby-value\">80</span>).<span class=\"ruby-identifier\">pfamily</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-constant\">Socket</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PF_INET</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["phase","Complex","Rails/classes/Complex.html#method-i-phase","()","<p>Returns the angle part of its polar form.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>.<span class=\"ruby-identifier\">polar</span>(<span class=\"ruby-value\">3</span>, <span class=\"ruby-constant\">Math</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PI</span><span class=\"ruby-operator\">/</span><span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">arg</span> <span class=\"ruby-comment\">#=&gt; 1.5707963267948966</span>\n</pre>\n",null,1],["phase","Float","Rails/classes/Float.html#method-i-phase","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,1],["phase","Numeric","Rails/classes/Numeric.html#method-i-phase","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,1],["phone_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-phone_field","(object_name, method, options = {})","",null,0],["phone_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-phone_field_tag","(name, value = nil, options = {})","",null,0],["pi","XMLRPC::XMLWriter::Simple","Rails/classes/XMLRPC/XMLWriter/Simple.html#method-i-pi","(name, *params)","",null,1],["pi","XMLRPC::XMLWriter::XMLParser","Rails/classes/XMLRPC/XMLWriter/XMLParser.html#method-i-pi","(name, *params)","",null,1],["pid","IO","Rails/classes/IO.html#method-i-pid","()","<p>Returns the process ID of a child process associated with <em>ios</em>.\nThis will be set by <code>IO.popen</code>.\n\n<pre>pipe = IO.popen(&quot;-&quot;) ...</pre>\n",null,1],["pid","Process","Rails/classes/Process.html#method-c-pid","()","<p>Returns the process id of this process. Not available on all platforms.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">pid</span>   <span class=\"ruby-comment\">#=&gt; 27415</span>\n</pre>\n",null,1],["pid","Process::Status","Rails/classes/Process/Status.html#method-i-pid","()","<p>Returns the process ID that this status object represents.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">fork</span> { <span class=\"ruby-identifier\">exit</span> }   <span class=\"ruby-comment\">#=&gt; 26569</span>\n<span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">wait</span>    <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["pid","StringIO","Rails/classes/StringIO.html#method-i-pid","()","",null,1],["pipe","IO","Rails/classes/IO.html#method-c-pipe","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a pair of pipe endpoints (connected to each other) and returns them\nas a two-element array of …\n",null,1],["pipe?","File","Rails/classes/File.html#method-c-pipe-3F","(p1)","<p>Returns <code>true</code> if the named file is a pipe.\n",null,1],["pipe?","File::Stat","Rails/classes/File/Stat.html#method-i-pipe-3F","()","<p>Returns <code>true</code> if the operating system supports pipes and\n<em>stat</em> is a pipe; <code>false</code> otherwise.\n",null,1],["pipe?","FileTest","Rails/classes/FileTest.html#method-i-pipe-3F","(p1)","<p>Returns <code>true</code> if the named file is a pipe.\n",null,1],["pipe?","Pathname","Rails/classes/Pathname.html#method-i-pipe-3F","()","<p>See <code>FileTest.pipe?</code>.\n",null,1],["pipeline","Open3","Rails/classes/Open3.html#method-c-pipeline","(*cmds)","<p>Open3.pipeline starts a list of commands as a pipeline. It waits the finish\nof the commands. No pipe …\n",null,1],["pipeline_r","Open3","Rails/classes/Open3.html#method-c-pipeline_r","(*cmds, &block)","<p>Open3.pipeline_r starts a list of commands as a pipeline with a pipe which\nconnects stdout of the last …\n",null,1],["pipeline_rw","Open3","Rails/classes/Open3.html#method-c-pipeline_rw","(*cmds, &block)","<p>Open3.pipeline_rw starts a list of commands as a pipeline with pipes which\nconnects stdin of the first …\n",null,1],["pipeline_start","Open3","Rails/classes/Open3.html#method-c-pipeline_start","(*cmds, &block)","<p>Open3.pipeline_start starts a list of commands as a pipeline. No pipe made\nfor stdin of the first command …\n",null,1],["pipeline_w","Open3","Rails/classes/Open3.html#method-c-pipeline_w","(*cmds, &block)","<p>Open3.pipeline_w starts a list of commands as a pipeline with a pipe which\nconnects stdin of the first …\n",null,1],["pk_and_sequence_for","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-pk_and_sequence_for","(table)","<p>Returns a table’s primary key and belonging sequence.\n",null,0],["pkcs5_keyivgen","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-pkcs5_keyivgen","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Generates and sets the key/IV based on a password.\n<p>WARNING: This method is only PKCS5 v1.5 compliant when …\n",null,1],["plain?","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#method-i-plain-3F","()","",null,0],["platform","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-platform","()","<p>The platform this gem runs on.  See Gem::Platform for details.\n",null,1],["platform=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-platform-3D","(platform)","<p>The platform this gem runs on.  See Gem::Platform for details.\n<p>Setting this to any value other than Gem::Platform::RUBY …\n",null,1],["platforms","Gem","Rails/classes/Gem.html#method-c-platforms","()","<p>Array of platforms this RubyGems supports.\n",null,1],["platforms=","Gem","Rails/classes/Gem.html#method-c-platforms-3D","(platforms)","<p>Set array of platforms this RubyGems supports (primarily for testing).\n",null,1],["pluck","ActiveRecord::Calculations","Ruby/classes/ActiveRecord/Calculations.html#method-i-pluck","(column_name)","<p>This method is designed to perform select by a single column as direct SQL\nquery Returns <code>Array</code> with values …\n",null,0],["plugin","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-plugin","(name, options)","<p>Install a plugin. You must provide either a Subversion url or Git url.\n<p>For a Git-hosted plugin, you can …\n",null,0],["plugins","Rails::Engine::Railties","Ruby/classes/Rails/Engine/Railties.html#method-i-plugins","()","",null,0],["plural","ActiveModel::Naming","Ruby/classes/ActiveModel/Naming.html#method-c-plural","(record_or_class)","<p>Returns the plural class name of a record or class. Examples:\n\n<pre>ActiveModel::Naming.plural(post)        ...</pre>\n",null,0],["plural","ActiveSupport::Inflector::Inflections","Ruby/classes/ActiveSupport/Inflector/Inflections.html#method-i-plural","(rule, replacement)","<p>Specifies a new pluralization rule and its replacement. The rule can either\nbe a string or a regular …\n",null,0],["plural_file_name","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-plural_file_name","()","",null,0],["plural_forms","RSS::Element","Rails/classes/RSS/Element.html#method-c-plural_forms","()","",null,1],["plural_name","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-plural_name","()","",null,0],["plural_table_name","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-plural_table_name","()","",null,0],["pluralize","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-pluralize","(count, singular, plural = nil)","<p>Attempts to pluralize the <code>singular</code> word unless\n<code>count</code> is 1. If <code>plural</code> is supplied, it will use\nthat when …\n",null,0],["pluralize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-pluralize","(word)","<p>Returns the plural form of the word in the string.\n<p>Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;post&quot;</span>.<span class=\"ruby-identifier\">pluralize</span>             <span class=\"ruby-comment\"># =&gt; &quot;posts&quot; ...</span>\n</pre>\n",null,0],["pluralize","String","Ruby/classes/String.html#method-i-pluralize","(count = nil)","<p>Returns the plural form of the word in the string.\n<p>If the optional parameter <code>count</code> is specified, the singular …\n",null,0],["pluralize_table_names?","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-pluralize_table_names-3F","()","",null,0],["plusplus","RailsGuides::TextileExtensions","Ruby/classes/RailsGuides/TextileExtensions.html#method-i-plusplus","(body)","",null,0],["point","Readline","Rails/classes/Readline.html#method-c-point","()","<p>Returns the index of the current cursor position in\n<code>Readline.line_buffer</code>.\n<p>The index in <code>Readline.line_buffer</code> …\n",null,1],["point_conversion_form","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-point_conversion_form","()","<p>See the OpenSSL documentation for EC_GROUP_get_point_conversion_form()\n",null,1],["point_conversion_form=","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-point_conversion_form-3D","(p1)","<p>See the OpenSSL documentation for EC_GROUP_set_point_conversion_form()\n",null,1],["pointer","StringScanner","Rails/classes/StringScanner.html#method-i-pointer","()","<p>Returns the byte position of the scan pointer.  In the ‘reset’ position,\nthis value is zero.  In the …\n",null,1],["pointer=","StringScanner","Rails/classes/StringScanner.html#method-i-pointer-3D","(p1)","<p>Set the byte position of the scan pointer.\n\n<pre>s = StringScanner.new('test string')\ns.pos = 7            # ...</pre>\n",null,1],["polar","Complex","Rails/classes/Complex.html#method-c-polar","(p1, p2 = v2)","<p>Returns a complex object which denotes the given polar form.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>.<span class=\"ruby-identifier\">polar</span>(<span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">0</span>)           <span class=\"ruby-comment\">#=&gt; (3.0+0.0i) ...</span>\n</pre>\n",null,1],["polar","Complex","Rails/classes/Complex.html#method-i-polar","()","<p>Returns an array; [cmp.abs, cmp.arg].\n",null,1],["polar","Numeric","Rails/classes/Numeric.html#method-i-polar","()","<p>Returns an array; [num.abs, num.arg].\n",null,1],["polymorphic_path","ActionDispatch::Routing::PolymorphicRoutes","Ruby/classes/ActionDispatch/Routing/PolymorphicRoutes.html#method-i-polymorphic_path","(record_or_hash_or_array, options = {})","<p>Returns the path component of a URL for the given record. It uses\n<code>polymorphic_url</code> with <code>:routing_type</code> …\n",null,0],["polymorphic_url","ActionDispatch::Routing::PolymorphicRoutes","Ruby/classes/ActionDispatch/Routing/PolymorphicRoutes.html#method-i-polymorphic_url","(record_or_hash_or_array, options = {})","<p>Constructs a call to a named RESTful route for the given record and returns\nthe resulting URL string. …\n",null,0],["pop","Array","Rails/classes/Array.html#method-i-pop","(*args)","<p>Removes the last element from <code>self</code> and returns it, or\n<code>nil</code> if the array is empty.\n<p>If a number <em>n</em> is given, …\n",null,1],["pop","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-pop","( dest = '' )","<p>This method fetches the message.  If called with a block, the message is\nyielded to the block one chunk …\n",null,1],["pop","Queue","Rails/classes/Queue.html#method-i-pop","(non_block=false)","<p>Retrieves data from the queue.  If the queue is empty, the calling thread\nis suspended until data is …\n",null,1],["pop","Rinda::NotifyTemplateEntry","Rails/classes/Rinda/NotifyTemplateEntry.html#method-i-pop","()","<p>Retrieves a notification.  Raises RequestExpiredError when this\nNotifyTemplateEntry expires.\n",null,1],["pop","SizedQueue","Rails/classes/SizedQueue.html#method-i-pop","(*args)","<p>Retrieves data from the queue and runs a waiting thread, if any.\n",null,1],["pop_d","RecursiveHTTPFetcher","Ruby/classes/RecursiveHTTPFetcher.html#method-i-pop_d","()","",null,0],["pop_inspect_key","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-pop_inspect_key","(id)","",null,1],["pop_tags","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-i-pop_tags","(size = 1)","",null,0],["pop_token","RDoc::TokenStream","Rails/classes/RDoc/TokenStream.html#method-i-pop_token","()","<p>Remove the last token from the collected tokens\n",null,1],["pop_workspace","IRB::Context","Rails/classes/IRB/Context.html#method-i-pop_workspace","()","",null,1],["popd","Shell","Rails/classes/Shell.html#method-i-popd","()","",null,1],["popdir","Shell","Rails/classes/Shell.html#method-i-popdir","()","",null,1],["popen","IO","Rails/classes/IO.html#method-c-popen","(p1, p2 = v2, p3 = {})","<p>Runs the specified command as a subprocess; the subprocess’s standard input\nand output will be connected …\n",null,1],["popen2","Open3","Rails/classes/Open3.html#method-c-popen2","(*cmd, &block)","<p>Open3.popen2 is similer to Open3.popen3 except it doesn’t make a pipe for\nthe standard error stream. …\n",null,1],["popen2e","Open3","Rails/classes/Open3.html#method-c-popen2e","(*cmd, &block)","<p>Open3.popen2e is similer to Open3.popen3 except it merges the standard\noutput stream and the standard …\n",null,1],["popen3","Open3","Rails/classes/Open3.html#method-c-popen3","(*cmd, &block)","<p>Open stdin, stdout, and stderr streams and start external executable. In\naddition, a thread for waiting …\n",null,1],["populate_with_current_scope_attributes","ActiveRecord::Scoping","Ruby/classes/ActiveRecord/Scoping.html#method-i-populate_with_current_scope_attributes","()","",null,0],["popup_menu","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-popup_menu","(name = \"\", *values)","<p>Generate a Select element as a string.\n<p><code>name</code> is the name of the element.  The <code>values</code> are\nthe options that ...\n",null,1],["port","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-port","()","<p>Returns the port number of this request as an integer.\n",null,0],["port","Net::POP3","Rails/classes/Net/POP3.html#method-i-port","()","<p>The port number to connect to.\n",null,1],["port","Net::POP3","Rails/classes/Net/POP3.html#method-i-port","()","<p>The port number to connect to.\n",null,1],["port","Net::POP3","Rails/classes/Net/POP3.html#method-i-port","()","<p>The port number to connect to.\n",null,1],["port","Net::POP3","Rails/classes/Net/POP3.html#method-i-port","()","<p>The port number to connect to.\n",null,1],["port","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-port","()","<p>The port this request is for\n",null,1],["port=","URI::Generic","Rails/classes/URI/Generic.html#method-i-port-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["port_string","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-port_string","()","<p>Returns a string port suffix, including colon, like “:8080” if the port\nnumber of this request …\n",null,0],["pos","ARGF","Rails/classes/ARGF.html#method-i-pos","()","<p>Returns the current offset (in bytes) of the current file in\n<code>ARGF</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">pos</span>    <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; &quot;This ...</span>\n</pre>\n",null,1],["pos","Dir","Rails/classes/Dir.html#method-i-pos","()","<p>Returns the current position in <em>dir</em>. See also\n<code>Dir#seek</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testdir&quot;</span>)\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">tell</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">read</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["pos","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-pos","()","<p>The position in the tar entry\n",null,1],["pos","IO","Rails/classes/IO.html#method-i-pos","()","<p>Returns the current offset (in bytes) of <em>ios</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">f</span> = <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">pos</span>    <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; &quot;This ...</span>\n</pre>\n",null,1],["pos","StringIO","Rails/classes/StringIO.html#method-i-pos","()","<p>Returns the current offset (in bytes) of <strong>strio</strong>.\n",null,1],["pos","StringScanner","Rails/classes/StringScanner.html#method-i-pos","()","<p>Returns the byte position of the scan pointer.  In the ‘reset’ position,\nthis value is zero.  In the …\n",null,1],["pos","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-pos","()","<p>Total number of output bytes output so far.\n",null,1],["pos","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-pos","()","<p>Total number of input bytes read so far.\n",null,1],["pos=","ARGF","Rails/classes/ARGF.html#method-i-pos-3D","(p1)","<p>Seeks to the position given by <em>position</em> (in bytes) in\n<code>ARGF</code>.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">pos</span> = <span class=\"ruby-value\">17</span>\n<span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["pos=","Dir","Rails/classes/Dir.html#method-i-pos-3D","(p1)","<p>Synonym for <code>Dir#seek</code>, but returns the position parameter.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testdir&quot;</span>)   <span class=\"ruby-comment\">#=&gt; #&lt;Dir:0x401b3c40&gt; ...</span>\n</pre>\n",null,1],["pos=","IO","Rails/classes/IO.html#method-i-pos-3D","(p1)","<p>Seeks to the given position (in bytes) in <em>ios</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">f</span> = <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">pos</span> = <span class=\"ruby-value\">17</span>\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; &quot;This ...</span>\n</pre>\n",null,1],["pos=","StringIO","Rails/classes/StringIO.html#method-i-pos-3D","(p1)","<p>Seeks to the given position (in bytes) in <strong>strio</strong>.\n",null,1],["pos=","StringScanner","Rails/classes/StringScanner.html#method-i-pos-3D","(p1)","<p>Set the byte position of the scan pointer.\n\n<pre>s = StringScanner.new('test string')\ns.pos = 7            # ...</pre>\n",null,1],["position","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-position","( )","",null,1],["position","REXML::IOSource","Rails/classes/REXML/IOSource.html#method-i-position","()","",null,1],["position","REXML::ParseException","Rails/classes/REXML/ParseException.html#method-i-position","()","",null,1],["position","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-position","()","",null,1],["position","REXML::Source","Rails/classes/REXML/Source.html#method-i-position","()","",null,1],["post","ActionDispatch::Routing::Mapper::HttpHelpers","Ruby/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-post","(*args, &block)","<p>Define a route that only recognizes HTTP POST. For supported arguments, see\n<code>Base#match</code>.\n<p>Example:\n<p>post ‘bacon’, …\n",null,0],["post","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-post","(path, body = '', headers = {})","<p>Executes a POST request. Used to create new resources.\n",null,0],["post","ActiveResource::CustomMethods","Ruby/classes/ActiveResource/CustomMethods.html#method-i-post","(method_name, options = {}, body = nil)","",null,0],["post","ActiveResource::CustomMethods","Ruby/classes/ActiveResource/CustomMethods.html#method-c-post","(custom_method_name, options = {}, body = '')","",null,0],["post","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-post","(path, data, initheader = nil, dest = nil)","<p>Posts <code>data</code> (must be a String) to <code>path</code>.\n<code>header</code> must be a Hash like { ‘Accept’ =&gt;\n‘<strong>/</strong>’, … }.\n<p>This method …\n",null,1],["post","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-post","(path, data, initheader = nil, dest = nil)","<p>Posts <code>data</code> (must be a String) to <code>path</code>.\n<code>header</code> must be a Hash like { ‘Accept’ =&gt;\n‘<strong>/</strong>’, … }.\n<p>This method …\n",null,1],["post2","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-post2","(path, data, initheader = nil)","",null,1],["post2","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-post2","(path, data, initheader = nil)","",null,1],["post?","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-post-3F","()","<p>Is this a POST request? Equivalent to <code>request.request_method_symbol\n== :post</code>.\n",null,0],["post_build","Gem","Rails/classes/Gem.html#method-c-post_build","(&hook)","<p>Adds a post-build hook that will be passed an Gem::Installer instance when\nGem::Installer#install is …\n",null,1],["post_connection_check","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-post_connection_check","(hostname)","",null,1],["post_form","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-post_form","(url, params)","<p>Posts HTML form data to the specified URI object. The form data must be\nprovided as a Hash mapping from …\n",null,1],["post_form","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-post_form","(url, params)","<p>Posts HTML form data to the specified URI object. The form data must be\nprovided as a Hash mapping from …\n",null,1],["post_install","Gem","Rails/classes/Gem.html#method-c-post_install","(&hook)","<p>Adds a post-install hook that will be passed an Gem::Installer instance\nwhen Gem::Installer#install is …\n",null,1],["post_match","MatchData","Rails/classes/MatchData.html#method-i-post_match","()","<p>Returns the portion of the original string after the current match.\nEquivalent to the special variable …\n",null,1],["post_match","StringScanner","Rails/classes/StringScanner.html#method-i-post_match","()","<p>Return the <strong><em>post</strong>-match</em> (in the regular expression\nsense) of the last scan.\n\n<pre>s = StringScanner.new('test ...</pre>\n",null,1],["post_reset","Gem","Rails/classes/Gem.html#method-c-post_reset","(&hook)","<p>Adds a hook that will get run after Gem::Specification.reset is run.\n",null,1],["post_uninstall","Gem","Rails/classes/Gem.html#method-c-post_uninstall","(&hook)","<p>Adds a post-uninstall hook that will be passed a Gem::Uninstaller instance\nand the spec that was uninstalled …\n",null,1],["postgresql_version","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-postgresql_version","()","<p>Returns the version of the connected PostgreSQL server.\n",null,0],["postproc","IRB::SLex","Rails/classes/IRB/SLex.html#method-i-postproc","(token)","<p>\u001b$BMW%A%‘%C%/\u001b(B?\n",null,1],["power","BigDecimal","Rails/classes/BigDecimal.html#method-i-power","(p1, p2 = v2)","<p>Returns the value raised to the power of n. Note that n must be an Integer.\n<p>Also available as the operator …\n",null,1],["power!","Bignum","Rails/classes/Bignum.html#method-i-power-21","(p1)","",null,1],["power!","Fixnum","Rails/classes/Fixnum.html#method-i-power-21","(p1)","",null,1],["power!","Float","Rails/classes/Float.html#method-i-power-21","(p1)","",null,1],["pp","IRB::Notifier::AbstractNotifier","Rails/classes/IRB/Notifier/AbstractNotifier.html#method-i-pp","(*objs)","",null,1],["pp","IRB::OutputMethod","Rails/classes/IRB/OutputMethod.html#method-i-pp","(*objs)","",null,1],["pp","Kernel","Rails/classes/Kernel.html#method-c-pp","(*objs)","<p>prints arguments in pretty form.\n<p>pp returns argument(s).\n",null,1],["pp","Kernel","Rails/classes/Kernel.html#method-i-pp","(*objs)","<p>prints arguments in pretty form.\n<p>pp returns argument(s).\n",null,1],["pp","PP","Rails/classes/PP.html#method-c-pp","(obj, out=$>, width=79)","<p>Outputs <code>obj</code> to <code>out</code> in pretty printed format of\n<code>width</code> columns in width.\n<p>If <code>out</code> is omitted, +$&gt;+ is assumed. …\n",null,1],["pp","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-pp","(obj)","<p>Adds <code>obj</code> to the pretty printing buffer using\nObject#pretty_print or Object#pretty_print_cycle.\n<p>Object#pretty_print_cycle …\n",null,1],["pp_hash","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-pp_hash","(obj)","",null,1],["pp_object","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-pp_object","(obj)","",null,1],["ppid","Process","Rails/classes/Process.html#method-c-ppid","()","<p>Returns the process id of the parent of this process. Returns untrustworthy\nvalue on Win32/64. Not available …\n",null,1],["ppx","IRB::Notifier::AbstractNotifier","Rails/classes/IRB/Notifier/AbstractNotifier.html#method-i-ppx","(prefix, *objs)","",null,1],["ppx","IRB::OutputMethod","Rails/classes/IRB/OutputMethod.html#method-i-ppx","(prefix, *objs)","",null,1],["pre_install","Gem","Rails/classes/Gem.html#method-c-pre_install","(&hook)","<p>Adds a pre-install hook that will be passed an Gem::Installer instance when\nGem::Installer#install is …\n",null,1],["pre_match","MatchData","Rails/classes/MatchData.html#method-i-pre_match","()","<p>Returns the portion of the original string before the current match.\nEquivalent to the special variable …\n",null,1],["pre_match","StringScanner","Rails/classes/StringScanner.html#method-i-pre_match","()","<p>Return the <strong><em>pre</strong>-match</em> (in the regular expression\nsense) of the last scan.\n\n<pre>s = StringScanner.new('test string') ...</pre>\n",null,1],["pre_reset","Gem","Rails/classes/Gem.html#method-c-pre_reset","(&hook)","<p>Adds a hook that will get run before Gem::Specification.reset is run.\n",null,1],["pre_uninstall","Gem","Rails/classes/Gem.html#method-c-pre_uninstall","(&hook)","<p>Adds a pre-uninstall hook that will be passed an Gem::Uninstaller instance\nand the spec that will be …\n",null,1],["precisionless_round","Float","Ruby/classes/Float.html#method-i-precisionless_round","(precision = nil)","",null,0],["precs","BigDecimal","Rails/classes/BigDecimal.html#method-i-precs","()","<p>Returns an Array of two Integer values.\n<p>The first value is the current number of significant digits in …\n",null,1],["pred","Integer","Rails/classes/Integer.html#method-i-pred","()","<p>Returns the <code>Integer</code> equal to <em>int</em> - 1.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">pred</span>      <span class=\"ruby-comment\">#=&gt; 0</span>\n(<span class=\"ruby-value\">-1</span>).<span class=\"ruby-identifier\">pred</span>   <span class=\"ruby-comment\">#=&gt; -2</span>\n</pre>\n",null,1],["predicate","REXML::Parsers::XPathParser","Rails/classes/REXML/Parsers/XPathParser.html#method-i-predicate","(path)","",null,1],["predicate","REXML::QuickPath","Rails/classes/REXML/QuickPath.html#method-c-predicate","( elements, path )","<p>A predicate filters a node-set with respect to an axis to produce a new\nnode-set. For each node in the …\n",null,1],["predicate","REXML::XPathParser","Rails/classes/REXML/XPathParser.html#method-i-predicate","(path, nodeset)","",null,1],["predicate_to_string","REXML::Parsers::XPathParser","Rails/classes/REXML/Parsers/XPathParser.html#method-i-predicate_to_string","( path, &block )","",null,1],["prefetch_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-prefetch_primary_key-3F","(table_name = nil)","<p>Should primary key values be selected from their corresponding sequence\nbefore the insert statement? …\n",null,0],["prefix","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-prefix","(options={})","<p>Gets the prefix for a resource’s nested URL (e.g.,\n<code>prefix/collectionname/1.json</code>) This method is regenerated …\n",null,0],["prefix","Gem","Rails/classes/Gem.html#method-c-prefix","()","<p>The directory prefix this RubyGems was installed at. If your prefix is in a\nstandard location (ie, rubygems …\n",null,1],["prefix","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-prefix","()","<p>Returns the namespace of the attribute.\n\n<pre>e = Element.new( &quot;elns:myelement&quot; )\ne.add_attribute( &quot;nsa:a&quot;, ...</pre>\n",null,1],["prefix","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-prefix","( namespace=nil )","",null,1],["prefix=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-prefix-3D","(value = '/')","<p>Sets the prefix for a resource’s nested URL (e.g.,\n<code>prefix/collectionname/1.json</code>). Default value is\n<code>site.path</code> …\n",null,0],["prefix_source","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-prefix_source","()","<p>An attribute reader for the source string for the resource path prefix. \nThis method is regenerated at …\n",null,0],["prefixes","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-prefixes","()","<p>Returns an array of Strings containing all of the prefixes declared by this\nset of # attributes.  The …\n",null,1],["prefixes","REXML::Element","Rails/classes/REXML/Element.html#method-i-prefixes","()","<p>Evaluates to an <code>Array</code> containing the prefixes (names) of all\ndefined namespaces at this context node. …\n",null,1],["preload","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-preload","(*args)","",null,0],["prepare!","ActionDispatch::Reloader","Ruby/classes/ActionDispatch/Reloader.html#method-c-prepare-21","()","<p>Execute all prepare callbacks.\n",null,0],["prepare!","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-prepare-21","()","",null,0],["prepare_backtrace","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-c-prepare_backtrace","(uri, result)","",null,1],["prepare_range","WEBrick::HTTPServlet::DefaultFileHandler","Rails/classes/WEBrick/HTTPServlet/DefaultFileHandler.html#method-i-prepare_range","(range, filesize)","",null,1],["prepend","OptionParser::List","Rails/classes/OptionParser/List.html#method-i-prepend","(*args)","<p>Inserts <code>switch</code> at the head of the list, and associates short,\nlong and negated long options. Arguments …\n",null,1],["prepend","String","Rails/classes/String.html#method-i-prepend","(p1)","<p>Prepend—Prepend the given string to <em>str</em>.\n<p>a = “world” a.prepend(“hello ”) #=&gt; …\n",null,1],["prepend_after_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_after_filter","","<p>Prepend an after filter. See _insert_callbacks for parameter details.\n",null,0],["prepend_around_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_around_filter","","<p>Prepend an around filter. See _insert_callbacks for parameter details.\n",null,0],["prepend_before_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_before_filter","","<p>Prepend a before filter. See _insert_callbacks for parameter details.\n",null,0],["prepend_view_path","AbstractController::ViewPaths","Ruby/classes/AbstractController/ViewPaths.html#method-i-prepend_view_path","(path)","",null,0],["prepend_view_path","AbstractController::ViewPaths::ClassMethods","Ruby/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-prepend_view_path","(path)","<p>Prepend a path to the list of view paths for this controller.\n<p>Parameters\n<p><code>path</code> - If a String is provided, ...\n",null,0],["preproc","IRB::SLex","Rails/classes/IRB/SLex.html#method-i-preproc","(token, proc)","",null,1],["preprocess","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-preprocess","(string)","<p>Preprocess received data from the host.\n<p>Performs newline conversion and detects telnet command sequences. …\n",null,1],["prerelease?","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-prerelease-3F","()","<p>Does this dependency require a prerelease?\n",null,1],["prerelease?","Gem::Requirement","Rails/classes/Gem/Requirement.html#method-i-prerelease-3F","()","",null,1],["prerelease?","Gem::Version","Rails/classes/Gem/Version.html#method-i-prerelease-3F","()","<p>A version is considered a prerelease if it contains a letter.\n",null,1],["prerelease_gems","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-prerelease_gems","()","",null,1],["prerelease_specs","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-prerelease_specs","()","<p>An array including only the prerelease gemspecs\n",null,1],["prerequisite_tasks","Rake::Task","Rails/classes/Rake/Task.html#method-i-prerequisite_tasks","()","<p>List of prerequisite tasks\n",null,1],["presence","Object","Ruby/classes/Object.html#method-i-presence","()","<p>Returns object if it’s <code>present?</code> otherwise returns\n<code>nil</code>. <code>object.presence</code> is equivalent to\n<code>object.present</code> …\n",null,0],["present?","Object","Ruby/classes/Object.html#method-i-present-3F","()","<p>An object is present if it’s not <code>blank?</code>.\n",null,0],["pretty","CGI","Rails/classes/CGI.html#method-c-pretty","(string, shift = \" \")","<p>Prettify (indent) an HTML string.\n<p><code>string</code> is the HTML string to indent.  <code>shift</code> is\nthe indentation unit ...\n",null,1],["pretty_generate","JSON","Rails/classes/JSON.html#method-i-pretty_generate","(obj, opts = nil)","<p>Generate a JSON document from the Ruby data structure <em>obj</em> and\nreturn it. The returned document is a prettier …\n",null,1],["pretty_inspect","Kernel","Rails/classes/Kernel.html#method-i-pretty_inspect","()","<p>returns a pretty printed object as a string.\n",null,1],["pretty_name","RDoc::Alias","Rails/classes/RDoc/Alias.html#method-i-pretty_name","()","",null,1],["pretty_name","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-pretty_name","()","<p>Method/attribute name with class/instance indicator\n",null,1],["pretty_new_name","RDoc::Alias","Rails/classes/RDoc/Alias.html#method-i-pretty_new_name","()","<p>New name with prefix ‘::’ or ‘#’.\n",null,1],["pretty_old_name","RDoc::Alias","Rails/classes/RDoc/Alias.html#method-i-pretty_old_name","()","<p>Old name with prefix ‘::’ or ‘#’.\n",null,1],["pretty_print","Array","Rails/classes/Array.html#method-i-pretty_print","(q)","",null,1],["pretty_print","ENV","Rails/classes/ENV.html#method-c-pretty_print","(q)","",null,1],["pretty_print","File::Stat","Rails/classes/File/Stat.html#method-i-pretty_print","(q)","",null,1],["pretty_print","Hash","Rails/classes/Hash.html#method-i-pretty_print","(q)","",null,1],["pretty_print","MatchData","Rails/classes/MatchData.html#method-i-pretty_print","(q)","",null,1],["pretty_print","Object","Rails/classes/Object.html#method-i-pretty_print","(q)","",null,1],["pretty_print","PP::ObjectMixin","Rails/classes/PP/ObjectMixin.html#method-i-pretty_print","(q)","<p>A default pretty printing method for general objects. It calls\n#pretty_print_instance_variables to list …\n",null,1],["pretty_print","Range","Rails/classes/Range.html#method-i-pretty_print","(q)","",null,1],["pretty_print","Struct","Rails/classes/Struct.html#method-i-pretty_print","(q)","",null,1],["pretty_print_cycle","Array","Rails/classes/Array.html#method-i-pretty_print_cycle","(q)","",null,1],["pretty_print_cycle","Hash","Rails/classes/Hash.html#method-i-pretty_print_cycle","(q)","",null,1],["pretty_print_cycle","Object","Rails/classes/Object.html#method-i-pretty_print_cycle","(q)","",null,1],["pretty_print_cycle","PP::ObjectMixin","Rails/classes/PP/ObjectMixin.html#method-i-pretty_print_cycle","(q)","<p>A default pretty printing method for general objects that are detected as\npart of a cycle.\n",null,1],["pretty_print_cycle","Struct","Rails/classes/Struct.html#method-i-pretty_print_cycle","(q)","",null,1],["pretty_print_inspect","PP::ObjectMixin","Rails/classes/PP/ObjectMixin.html#method-i-pretty_print_inspect","()","<p>Is #inspect implementation using #pretty_print. If you implement\n#pretty_print, it can be used as follows. …\n",null,1],["pretty_print_instance_variables","PP::ObjectMixin","Rails/classes/PP/ObjectMixin.html#method-i-pretty_print_instance_variables","()","<p>Returns a sorted array of instance variable names.\n<p>This method should return an array of names of instance …\n",null,1],["prev_day","Date","Rails/classes/Date.html#method-i-prev_day","(p1 = v1)","<p>This method is equivalent to d - n.\n",null,1],["prev_month","Date","Ruby/classes/Date.html#method-i-prev_month","()","<p>Shorthand for months_ago(1)\n",null,0],["prev_month","Time","Ruby/classes/Time.html#method-i-prev_month","()","<p>Short-hand for months_ago(1)\n",null,0],["prev_month","Date","Rails/classes/Date.html#method-i-prev_month","(p1 = v1)","<p>This method is equivalent to d &lt;&lt; n\n",null,1],["prev_week","Date","Ruby/classes/Date.html#method-i-prev_week","(day = :monday)","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the\ngiven <code>day</code> in the previous week. Default is\n<code>:monday</code>. <code>DateTime</code> …\n",null,0],["prev_week","Time","Ruby/classes/Time.html#method-i-prev_week","(day = :monday)","<p>Returns a new Time representing the start of the given day in the previous\nweek (default is :monday). …\n",null,0],["prev_year","Date","Ruby/classes/Date.html#method-i-prev_year","()","<p>Shorthand for years_ago(1)\n",null,0],["prev_year","Time","Ruby/classes/Time.html#method-i-prev_year","()","<p>Short-hand for years_ago(1)\n",null,0],["prev_year","Date","Rails/classes/Date.html#method-i-prev_year","(p1 = v1)","<p>This method is equivalent to d &lt;&lt; (n * 12)\n",null,1],["previous=","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-i-previous-3D","( previous )","",null,1],["previous_changes","ActiveModel::Dirty","Ruby/classes/ActiveModel/Dirty.html#method-i-previous_changes","()","<p>Map of attributes that were changed when the model was saved.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-comment\"># =&gt; 'bob'</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> = <span class=\"ruby-string\">'robert'</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["previous_element","REXML::Element","Rails/classes/REXML/Element.html#method-i-previous_element","()","<p>Returns the previous sibling that is an element, or nil if there is no\nElement sibling prior to this …\n",null,1],["previous_sibling=","REXML::Child","Rails/classes/REXML/Child.html#method-i-previous_sibling-3D","(other)","<p>Sets the previous sibling of this child.  This can be used to insert a\nchild before some other child. …\n",null,1],["previous_sibling_node","REXML::Node","Rails/classes/REXML/Node.html#method-i-previous_sibling_node","()","<p>@return the previous sibling (nil if unset)\n",null,1],["primary","Rinda::RingFinger","Rails/classes/Rinda/RingFinger.html#method-c-primary","()","<p>Returns the first advertised TupleSpace.\n",null,1],["primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-primary_key","()","<p>Defines the primary key field – can be overridden in subclasses.\nOverwriting will negate any effect …\n",null,0],["primary_key","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-primary_key","(table)","<p>Returns just a table’s primary key\n",null,0],["primary_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-primary_key","(table)","<p>Returns just a table’s primary key\n",null,0],["primary_key","ActiveRecord::ConnectionAdapters::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-primary_key","(name)","<p>Appends a primary key definition to the table definition. Can be called\nmultiple times, but this is probably …\n",null,0],["primary_key","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-primary_key","()","",null,0],["primary_key=","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-primary_key-3D","(value)","<p>Sets the name of the primary key column.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Project</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">primary_key</span> = <span class=\"ruby-string\">&quot;sysid&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["primary_keys","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-primary_keys","()","",null,0],["prime?","Integer","Rails/classes/Integer.html#method-i-prime-3F","()","<p>Returns true if <code>self</code> is a prime number, false for a composite.\n",null,1],["prime?","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-prime-3F","(p1 = v1)","<p>Parameters\n<p><code>checks</code> - integer\n\n",null,1],["prime?","Prime","Rails/classes/Prime.html#method-i-prime-3F","(value, generator = Prime::Generator23.new)","<p>Returns true if <code>value</code> is prime, false for a composite.\n<p>Parameters\n<p><code>value</code> &mdash; an arbitrary integer to be checked. …\n",null,1],["prime_cache","ActiveSupport::Memoizable::InstanceMethods","Ruby/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-i-prime_cache","(*syms)","",null,0],["prime_division","Integer","Rails/classes/Integer.html#method-i-prime_division","(generator = Prime::Generator23.new)","<p>Returns the factorization of <code>self</code>.\n<p>See Prime#prime_division for more details.\n",null,1],["prime_division","Prime","Rails/classes/Prime.html#method-i-prime_division","(value, generator= Prime::Generator23.new)","<p>Returns the factorization of <code>value</code>.\n<p>Parameters\n<p><code>value</code> &mdash; An arbitrary integer.\n",null,1],["prime_fasttest?","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-prime_fasttest-3F","(p1 = v1, p2 = v2)","<p>Parameters\n<p><code>checks</code> - integer\n<p><code>trial_div</code> - boolean\n",null,1],["primes","Prime::TrialDivision","Rails/classes/Prime/TrialDivision.html#method-i-primes","()","",null,1],["primes_so_far","Prime::TrialDivision","Rails/classes/Prime/TrialDivision.html#method-i-primes_so_far","()","",null,1],["primitive_convert","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-primitive_convert","(p1, p2, p3 = v3, p4 = v4, p5 = v5, p6 = {})","<p>possible opt elements:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">hash</span> <span class=\"ruby-identifier\">form</span><span class=\"ruby-operator\">:</span>\n  :<span class=\"ruby-identifier\">partial_input</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">true</span>           <span class=\"ruby-comment\"># source buffer may be part of larger ...</span>\n</pre>\n",null,1],["primitive_errinfo","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-primitive_errinfo","()","<p>primitive_errinfo returns important information regarding the last error as\na 5-element array:\n\n<pre>[result, ...</pre>\n",null,1],["print","ARGF","Rails/classes/ARGF.html#method-i-print","(*args)","<p>Writes the given object(s) to <em>ios</em>. The stream must be opened for\nwriting. If the output field separator …\n",null,1],["print","CGI","Rails/classes/CGI.html#method-i-print","(*options)","<p>Print an argument or list of arguments to the default output stream\n\n<pre>cgi = CGI.new\ncgi.print    # default: ...</pre>\n",null,1],["print","IO","Rails/classes/IO.html#method-i-print","(*args)","<p>Writes the given object(s) to <em>ios</em>. The stream must be opened for\nwriting. If the output field separator …\n",null,1],["print","IO::writable","Rails/classes/IO/writable.html#method-i-print","(*args)","<p>See IO#print.\n",null,1],["print","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-print","(*opts)","",null,1],["print","IRB::Notifier::AbstractNotifier","Rails/classes/IRB/Notifier/AbstractNotifier.html#method-i-print","(*opts)","",null,1],["print","IRB::OutputMethod","Rails/classes/IRB/OutputMethod.html#method-i-print","(*opts)","",null,1],["print","IRB::StdioOutputMethod","Rails/classes/IRB/StdioOutputMethod.html#method-i-print","(*opts)","",null,1],["print","Kernel","Rails/classes/Kernel.html#method-i-print","(*args)","<p>Prints each object in turn to <code>$stdout</code>. If the output field\nseparator (<code>$,</code>) is not <code>nil</code>, its contents will …\n",null,1],["print","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-print","(string)","<p>Sends a string to the host.\n<p>This does <em>not</em> automatically append a newline to the string. \nEmbedded newlines …\n",null,1],["print","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-print","(*args)","<p>Writes <code>args</code> to the stream.\n<p>See IO#print for full details.\n",null,1],["print","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-print","(*args)","<p>Same as IO.\n",null,1],["print_alias","RDoc::Stats::Quiet","Rails/classes/RDoc/Stats/Quiet.html#method-i-print_alias","(*)","<p>Prints when an alias is added\n",null,1],["print_attribute","RDoc::Stats::Quiet","Rails/classes/RDoc/Stats/Quiet.html#method-i-print_attribute","(*)","<p>Prints when an attribute is added\n",null,1],["print_class","RDoc::Stats::Quiet","Rails/classes/RDoc/Stats/Quiet.html#method-i-print_class","(*)","<p>Prints when a class is added\n",null,1],["print_constant","RDoc::Stats::Quiet","Rails/classes/RDoc/Stats/Quiet.html#method-i-print_constant","(*)","<p>Prints when a constant is added\n",null,1],["print_dependencies","Gem::Commands::DependencyCommand","Rails/classes/Gem/Commands/DependencyCommand.html#method-i-print_dependencies","(spec, level = 0)","",null,1],["print_file","RDoc::Stats::Normal","Rails/classes/RDoc/Stats/Normal.html#method-i-print_file","(files_so_far, filename)","<p>Prints a file with a progress bar\n",null,1],["print_file","RDoc::Stats::Quiet","Rails/classes/RDoc/Stats/Quiet.html#method-i-print_file","(*)","<p>Prints when a file is added\n",null,1],["print_method","RDoc::Stats::Quiet","Rails/classes/RDoc/Stats/Quiet.html#method-i-print_method","(*)","<p>Prints when a method is added\n",null,1],["print_module","RDoc::Stats::Quiet","Rails/classes/RDoc/Stats/Quiet.html#method-i-print_module","(*)","<p>Prints when a module is added\n",null,1],["print_profile","Profiler__","Rails/classes/Profiler__.html#method-i-print_profile","(f)","",null,1],["print_rakefile_directory","Rake::Application","Rails/classes/Rake/Application.html#method-i-print_rakefile_directory","(location)","",null,1],["print_usage","IRB","Rails/classes/IRB.html#method-c-print_usage","()","",null,1],["printf","ARGF","Rails/classes/ARGF.html#method-i-printf","(*args)","<p>Formats and writes to <em>ios</em>, converting parameters under control of\nthe format string. See <code>Kernel#sprintf</code> …\n",null,1],["printf","IO","Rails/classes/IO.html#method-i-printf","(*args)","<p>Formats and writes to <em>ios</em>, converting parameters under control of\nthe format string. See <code>Kernel#sprintf</code> …\n",null,1],["printf","IO::writable","Rails/classes/IO/writable.html#method-i-printf","(*args)","<p>See IO#printf.\n",null,1],["printf","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-printf","(*opts)","",null,1],["printf","IRB::Notifier::AbstractNotifier","Rails/classes/IRB/Notifier/AbstractNotifier.html#method-i-printf","(format, *opts)","",null,1],["printf","IRB::OutputMethod","Rails/classes/IRB/OutputMethod.html#method-i-printf","(format, *opts)","<p>extend printf\n",null,1],["printf","Kernel","Rails/classes/Kernel.html#method-i-printf","(*args)","<p>Equivalent to:\n\n<pre>io.write(sprintf(string, obj, ...)</pre>\n<p>or\n",null,1],["printf","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-printf","(s, *args)","<p>Formats and writes to the stream converting parameters under control of the\nformat string.\n<p>See Kernel#sprintf …\n",null,1],["printf","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-printf","(*args)","<p>Same as IO.\n",null,1],["printn","IRB::Notifier::AbstractNotifier","Rails/classes/IRB/Notifier/AbstractNotifier.html#method-i-printn","(*opts)","",null,1],["printn","IRB::OutputMethod","Rails/classes/IRB/OutputMethod.html#method-i-printn","(*opts)","",null,1],["priority","Thread","Rails/classes/Thread.html#method-i-priority","()","<p>Returns the priority of <em>thr</em>. Default is inherited from the current\nthread which creating the new thread, …\n",null,1],["priority=","Thread","Rails/classes/Thread.html#method-i-priority-3D","(p1)","<p>Sets the priority of <em>thr</em> to <em>integer</em>. Higher-priority\nthreads will run more frequently than lower-priority …\n",null,1],["private?","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-private-3F","()","<p>Indicates whether this DH instance has a private key associated with it or\nnot. The private key may be …\n",null,1],["private?","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-private-3F","()","<p>Indicates whether this DSA instance has a private key associated with it or\nnot. The private key may …\n",null,1],["private?","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-private-3F","()","<p>Does this keypair contain a private key?\n",null,1],["private_class_method","Module","Rails/classes/Module.html#method-i-private_class_method","(*args)","<p>Makes existing class methods private. Often used to hide the default\nconstructor <code>new</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">SimpleSingleton</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["private_decrypt","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-private_decrypt","(p1, p2 = v2)","<p>Decrypt <code>string</code>, which has been encrypted with the public key,\nwith the private key.  <code>padding</code> defaults …\n",null,1],["private_encrypt","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-private_encrypt","(p1, p2 = v2)","<p>Encrypt <code>string</code> with the private key.  <code>padding</code>\ndefaults to PKCS1_PADDING. The encrypted string output …\n",null,1],["private_instance_methods","Module","Rails/classes/Module.html#method-i-private_instance_methods","(*args)","<p>Returns a list of the private instance methods defined in <em>mod</em>. If\nthe optional parameter is not <code>false</code> …\n",null,1],["private_key","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-private_key","()","<p>See the OpenSSL documentation for EC_KEY_get0_private_key()\n",null,1],["private_key=","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-private_key-3D","(p1)","<p>See the OpenSSL documentation for EC_KEY_set_private_key()\n",null,1],["private_key?","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-private_key-3F","()","<p>Both public_key? and private_key? may return false at the same time unlike\nother PKey classes.\n",null,1],["private_method_defined?","Module","Rails/classes/Module.html#method-i-private_method_defined-3F","(p1)","<p>Returns <code>true</code> if the named private method is defined by _ mod_\n(or its included modules and, if <em>mod</em> is …\n",null,1],["private_methods","Object","Rails/classes/Object.html#method-i-private_methods","(*args)","<p>Returns the list of private methods accessible to <em>obj</em>. If the\n<em>all</em> parameter is set to <code>false</code>, only those …\n",null,1],["proc","Kernel","Rails/classes/Kernel.html#method-i-proc","()","<p>Equivalent to <code>Proc.new</code>.\n",null,1],["process","AbstractController::Base","Ruby/classes/AbstractController/Base.html#method-i-process","(action, *args)","<p>Calls the action going through the entire action dispatch stack.\n<p>The actual method that is called is determined …\n",null,0],["process","ActionController::Middleware","Ruby/classes/ActionController/Middleware.html#method-i-process","(action)","",null,0],["process","Net::IMAP::CramMD5Authenticator","Rails/classes/Net/IMAP/CramMD5Authenticator.html#method-i-process","(challenge)","",null,1],["process","Net::IMAP::DigestMD5Authenticator","Rails/classes/Net/IMAP/DigestMD5Authenticator.html#method-i-process","(challenge)","",null,1],["process","Net::IMAP::LoginAuthenticator","Rails/classes/Net/IMAP/LoginAuthenticator.html#method-i-process","(data)","",null,1],["process","Net::IMAP::PlainAuthenticator","Rails/classes/Net/IMAP/PlainAuthenticator.html#method-i-process","(data)","",null,1],["process","XMLRPC::BasicServer","Rails/classes/XMLRPC/BasicServer.html#method-i-process","(data)","",null,1],["process_action","AbstractController::Callbacks","Ruby/classes/AbstractController/Callbacks.html#method-i-process_action","(*args)","<p>Override AbstractController::Base’s process_action to run the\nprocess_action callbacks around the normal …\n",null,0],["process_action","ActionController::Instrumentation","Ruby/classes/ActionController/Instrumentation.html#method-i-process_action","(*args)","",null,0],["process_action","ActionController::LogSubscriber","Ruby/classes/ActionController/LogSubscriber.html#method-i-process_action","(event)","",null,0],["process_action","ActionController::ParamsWrapper","Ruby/classes/ActionController/ParamsWrapper.html#method-i-process_action","(*args)","<p>Performs parameters wrapping upon the request. Will be called automatically\nby the metal call stack. …\n",null,0],["process_args","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-i-process_args","(args)","",null,1],["process_args","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-c-process_args","(argv)","<p>Parses <code>argv</code> and returns a Hash of options\n",null,1],["process_attributes_for","HTML::WhiteListSanitizer","Ruby/classes/HTML/WhiteListSanitizer.html#method-i-process_attributes_for","(node, options)","",null,0],["process_directive","RDoc::Parser","Rails/classes/RDoc/Parser.html#method-c-process_directive","(code_object, directive, value)","<p>Processes common directives for CodeObjects for the C and Ruby parsers.\n<p>Applies <code>directive</code>‘s <code>value</code> to  …\n",null,1],["process_node","HTML::FullSanitizer","Ruby/classes/HTML/FullSanitizer.html#method-i-process_node","(node, result, options)","",null,0],["process_node","HTML::LinkSanitizer","Ruby/classes/HTML/LinkSanitizer.html#method-i-process_node","(node, result, options)","",null,0],["process_node","HTML::Sanitizer","Ruby/classes/HTML/Sanitizer.html#method-i-process_node","(node, result, options)","",null,0],["process_node","HTML::WhiteListSanitizer","Ruby/classes/HTML/WhiteListSanitizer.html#method-i-process_node","(node, result, options)","",null,0],["process_options","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-process_options","()","",null,1],["process_removed_attributes","ActiveModel::MassAssignmentSecurity::LoggerSanitizer","Ruby/classes/ActiveModel/MassAssignmentSecurity/LoggerSanitizer.html#method-i-process_removed_attributes","(attrs)","",null,0],["process_removed_attributes","ActiveModel::MassAssignmentSecurity::Sanitizer","Ruby/classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#method-i-process_removed_attributes","(attrs)","",null,0],["process_removed_attributes","ActiveModel::MassAssignmentSecurity::StrictSanitizer","Ruby/classes/ActiveModel/MassAssignmentSecurity/StrictSanitizer.html#method-i-process_removed_attributes","(attrs)","",null,0],["process_view_paths","ActionView::Base","Ruby/classes/ActionView/Base.html#method-c-process_view_paths","(value)","",null,0],["processingInstruction","RSS::REXMLLikeXMLParser","Rails/classes/RSS/REXMLLikeXMLParser.html#method-i-processingInstruction","(target, content)","",null,1],["processing_instruction","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-processing_instruction","( node )","",null,1],["processing_instruction","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-processing_instruction","(target, data)","",null,1],["product","Array","Rails/classes/Array.html#method-i-product","(*args)","<p>Returns an array of all combinations of elements from all arrays. The\nlength of the returned array is …\n",null,1],["progid","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-progid","()","<p>Returns ProgID if it exists. If not found, then returns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel ...</pre>\n",null,1],["progids","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-c-progids","()","<p>Returns array of ProgID.\n",null,1],["program_name","OptionParser","Rails/classes/OptionParser.html#method-i-program_name","()","<p>Program name to be emitted in error message and default banner, defaults to\n$0.\n",null,1],["progress","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-progress","(position)","",null,1],["progress_reporter","Gem::SilentUI","Rails/classes/Gem/SilentUI.html#method-i-progress_reporter","(*args)","",null,1],["progress_reporter","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-progress_reporter","(*args)","<p>Return a progress reporter object chosen from the current verbosity.\n",null,1],["promote_load_path","Gem","Rails/classes/Gem.html#method-c-promote_load_path","(gem_name, over_name)","<p>Promotes the load paths of the <code>gem_name</code> over the load paths of\n<code>over_name</code>.  Useful for allowing one gem …\n",null,1],["prompt","IRB::Irb","Rails/classes/IRB/Irb.html#method-i-prompt","(prompt, ltype, indent, line_no)","",null,1],["prompt","RubyLex","Rails/classes/RubyLex.html#method-i-prompt","()","",null,1],["prompt_mode=","IRB::Context","Rails/classes/IRB/Context.html#method-i-prompt_mode-3D","(mode)","",null,1],["prompting?","IRB::Context","Rails/classes/IRB/Context.html#method-i-prompting-3F","()","",null,1],["proper_subset?","Set","Rails/classes/Set.html#method-i-proper_subset-3F","(set)","<p>Returns true if the set is a proper subset of the given set.\n",null,1],["proper_superset?","Set","Rails/classes/Set.html#method-i-proper_superset-3F","(set)","<p>Returns true if the set is a proper superset of the given set.\n",null,1],["properties","Rails::InfoController","Ruby/classes/Rails/InfoController.html#method-i-properties","()","",null,0],["property","Rails::Info","Ruby/classes/Rails/Info.html#method-c-property","(name, value = nil)","",null,0],["propfind","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-propfind","(path, body = nil, initheader = {'Depth' => '0'})","<p>Sends a PROPFIND request to the <code>path</code> and gets a response, as\nan HTTPResponse object.\n",null,1],["propfind","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-propfind","(path, body = nil, initheader = {'Depth' => '0'})","<p>Sends a PROPFIND request to the <code>path</code> and gets a response, as\nan HTTPResponse object.\n",null,1],["proppatch","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proppatch","(path, body, initheader = nil)","<p>Sends a PROPPATCH request to the <code>path</code> and gets a response, as\nan HTTPResponse object.\n",null,1],["proppatch","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proppatch","(path, body, initheader = nil)","<p>Sends a PROPPATCH request to the <code>path</code> and gets a response, as\nan HTTPResponse object.\n",null,1],["protect_against_forgery?","ActionController::RequestForgeryProtection","Ruby/classes/ActionController/RequestForgeryProtection.html#method-i-protect_against_forgery-3F","()","",null,0],["protect_from_forgery","ActionController::RequestForgeryProtection::ClassMethods","Ruby/classes/ActionController/RequestForgeryProtection/ClassMethods.html#method-i-protect_from_forgery","(options = {})","<p>Turn on request forgery protection. Bear in mind that only non-GET,\nHTML/JavaScript requests are checked. …\n",null,0],["protected_attributes","ActiveModel::MassAssignmentSecurity::ClassMethods","Ruby/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-protected_attributes","(role = :default)","",null,0],["protected_instance_methods","Module","Rails/classes/Module.html#method-i-protected_instance_methods","(*args)","<p>Returns a list of the protected instance methods defined in <em>mod</em>.\nIf the optional parameter is not <code>false</code> …\n",null,1],["protected_method_defined?","Module","Rails/classes/Module.html#method-i-protected_method_defined-3F","(p1)","<p>Returns <code>true</code> if the named protected method is defined by\n<em>mod</em> (or its included modules and, if <em>mod</em> is …\n",null,1],["protected_methods","Delegator","Rails/classes/Delegator.html#method-i-protected_methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this\nobject’s and __getobj__ protected …\n",null,1],["protected_methods","Object","Rails/classes/Object.html#method-i-protected_methods","(*args)","<p>Returns the list of protected methods accessible to <em>obj</em>. If the\n<em>all</em> parameter is set to <code>false</code>, only those …\n",null,1],["protocol","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-protocol","()","<p>Returns ‘https://’ if this is an SSL request and ‘http://’ otherwise.\n",null,0],["protocol","Addrinfo","Rails/classes/Addrinfo.html#method-i-protocol","()","<p>returns the socket type as an integer.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">tcp</span>(<span class=\"ruby-string\">&quot;localhost&quot;</span>, <span class=\"ruby-value\">80</span>).<span class=\"ruby-identifier\">protocol</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-constant\">Socket</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">IPPROTO_TCP</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["provide","ActionView::Helpers::CaptureHelper","Ruby/classes/ActionView/Helpers/CaptureHelper.html#method-i-provide","(name, content = nil, &block)","<p>The same as <code>content_for</code> but when used with streaming flushes\nstraight back to the layout. In other words, …\n",null,0],["provide","Rinda::RingProvider","Rails/classes/Rinda/RingProvider.html#method-i-provide","()","<p>Advertises this service on the primary remote TupleSpace.\n",null,1],["proxy","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-proxy","()","<p>Gets the proxy variable if a proxy is required\n",null,0],["proxy","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-proxy","(prefix=nil, *args)","<p>Proxy generating methods ——————————————\n",null,1],["proxy2","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-proxy2","(prefix=nil, *args)","",null,1],["proxy2_async","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-proxy2_async","(prefix=nil, *args)","",null,1],["proxy=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-proxy-3D","(proxy)","<p>Sets the URI of the http proxy to the value in the <code>proxy</code>\nargument.\n",null,0],["proxy=","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-proxy-3D","(proxy)","<p>Set the proxy for remote service.\n",null,0],["proxy?","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxy-3F","()","<p>True if self is a HTTP proxy class.\n",null,1],["proxy?","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxy-3F","()","<p>True if self is a HTTP proxy class.\n",null,1],["proxy_address","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxy_address","()","<p>A convenience method for accessing value of proxy_address from Net::HTTP.\n",null,1],["proxy_address","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxy_address","()","<p>A convenience method for accessing value of proxy_address from Net::HTTP.\n",null,1],["proxy_async","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-proxy_async","(prefix=nil, *args)","",null,1],["proxy_auth","WEBrick::HTTPProxyServer","Rails/classes/WEBrick/HTTPProxyServer.html#method-i-proxy_auth","(req, res)","",null,1],["proxy_auth_get","Win32::SSPI::NegotiateAuth","Rails/classes/Win32/SSPI/NegotiateAuth.html#method-c-proxy_auth_get","(http, path, user = nil, domain = nil)","<p>Given a connection and a request path, performs authentication as the\ncurrent user and returns the response …\n",null,1],["proxy_basic_auth","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-proxy_basic_auth","(account, password)","<p>Set Proxy-Authorization: header for “Basic” authorization.\n",null,1],["proxy_basic_auth","WEBrick::HTTPAuth","Rails/classes/WEBrick/HTTPAuth.html#method-i-proxy_basic_auth","(req, res, realm)","<p>Simple wrapper for providing basic authentication for a proxied request.\nWhen called with a request  …\n",null,1],["proxy_class","ActiveSupport::Multibyte","Ruby/classes/ActiveSupport/Multibyte.html#method-c-proxy_class","()","<p>Returns the current proxy class\n",null,0],["proxy_class=","ActiveSupport::Multibyte","Ruby/classes/ActiveSupport/Multibyte.html#method-c-proxy_class-3D","(klass)","<p>The proxy class returned when calling mb_chars. You can use this accessor\nto configure your own proxy …\n",null,0],["proxy_class?","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-proxy_class-3F","()","<p>returns true if self is a class which was created by HTTP::Proxy.\n",null,1],["proxy_class?","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-proxy_class-3F","()","<p>returns true if self is a class which was created by HTTP::Proxy.\n",null,1],["proxy_pass","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxy_pass","()","<p>A convenience method for accessing value of proxy_pass from Net::HTTP.\n",null,1],["proxy_pass","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxy_pass","()","<p>A convenience method for accessing value of proxy_pass from Net::HTTP.\n",null,1],["proxy_port","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxy_port","()","<p>A convenience method for accessing value of proxy_port from Net::HTTP.\n",null,1],["proxy_port","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxy_port","()","<p>A convenience method for accessing value of proxy_port from Net::HTTP.\n",null,1],["proxy_service","WEBrick::HTTPProxyServer","Rails/classes/WEBrick/HTTPProxyServer.html#method-i-proxy_service","(req, res)","",null,1],["proxy_uri","WEBrick::HTTPProxyServer","Rails/classes/WEBrick/HTTPProxyServer.html#method-i-proxy_uri","(req, res)","",null,1],["proxy_user","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxy_user","()","<p>A convenience method for accessing value of proxy_user from Net::HTTP.\n",null,1],["proxy_user","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxy_user","()","<p>A convenience method for accessing value of proxy_user from Net::HTTP.\n",null,1],["proxyaddr","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxyaddr","()","",null,1],["proxyaddr","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxyaddr","()","",null,1],["proxyport","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxyport","()","",null,1],["proxyport","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-proxyport","()","",null,1],["prune","ActiveSupport::Cache::MemoryStore","Ruby/classes/ActiveSupport/Cache/MemoryStore.html#method-i-prune","(target_size, max_time = nil)","<p>To ensure entries fit within the specified memory prune the cache by\nremoving the least recently accessed …\n",null,0],["prune","Find","Rails/classes/Find.html#method-c-prune","()","<p>Skips the current file or directory, restarting the loop with the next\nentry. If the current file is …\n",null,1],["pruning?","ActiveSupport::Cache::MemoryStore","Ruby/classes/ActiveSupport/Cache/MemoryStore.html#method-i-pruning-3F","()","<p>Returns true if the cache is currently being pruned.\n",null,0],["psych_to_yaml","Object","Rails/classes/Object.html#method-i-psych_to_yaml","(options = {})","<p>Convert an object to YAML.  See Psych.dump for more information on the\navailable <code>options</code>.\n",null,1],["psych_y","Kernel","Rails/classes/Kernel.html#method-i-psych_y","(*objects)","",null,1],["psych_yaml_as","Module","Rails/classes/Module.html#method-i-psych_yaml_as","(url)","",null,1],["ptr","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-ptr","()","<p>Get the underlying function pointer as a DL::CPtr object.\n",null,1],["ptr","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-ptr","()","<p>Returns a DL::CPtr that is a dereferenced pointer for this DL::CPtr.\nAnalogous to the star operator in …\n",null,1],["ptr","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-ptr","()","<p>Returns a DL::CPtr that is a dereferenced pointer for this DL::CPtr.\nAnalogous to the star operator in …\n",null,1],["ptr=","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-ptr-3D","(p1)","<p>Set the underlying function pointer to a DL::CPtr named\n<code>pointer</code>.\n",null,1],["pubDate","RSS::Maker::ChannelBase","Rails/classes/RSS/Maker/ChannelBase.html#method-i-pubDate","()","",null,1],["pubDate","RSS::Maker::ItemsBase::ItemBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-pubDate","()","",null,1],["pubDate=","RSS::Maker::ChannelBase","Rails/classes/RSS/Maker/ChannelBase.html#method-i-pubDate-3D","(date)","",null,1],["pubDate=","RSS::Maker::ItemsBase::ItemBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-pubDate-3D","(date)","",null,1],["public","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-public","()","<p>This method retrieves the public identifier identifying the document’s DTD.\n<p>Method contributed by Henrik …\n",null,1],["public?","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-public-3F","()","<p>Indicates whether this DH instance has a public key associated with it or\nnot. The public key may be …\n",null,1],["public?","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-public-3F","()","<p>Indicates whether this DSA instance has a public key associated with it or\nnot. The public key may be …\n",null,1],["public?","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-public-3F","()","<p>The return value is always true since every private key is also a public\nkey.\n",null,1],["public_class_method","Module","Rails/classes/Module.html#method-i-public_class_method","(*args)","<p>Makes a list of existing class methods public.\n",null,1],["public_decrypt","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-public_decrypt","(p1, p2 = v2)","<p>Decrypt <code>string</code>, which has been encrypted with the private key,\nwith the public key.  <code>padding</code> defaults …\n",null,1],["public_directory","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-public_directory","()","",null,0],["public_encrypt","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-public_encrypt","(p1, p2 = v2)","<p>Encrypt <code>string</code> with the public key.  <code>padding</code>\ndefaults to PKCS1_PADDING. The encrypted string output can …\n",null,1],["public_instance_method","Module","Rails/classes/Module.html#method-i-public_instance_method","(p1)","<p>Similar to <em>instance_method</em>, searches public method only.\n",null,1],["public_instance_methods","Module","Rails/classes/Module.html#method-i-public_instance_methods","(*args)","<p>Returns a list of the public instance methods defined in <em>mod</em>. If\nthe optional parameter is not <code>false</code> …\n",null,1],["public_key","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-i-public_key","()","",null,1],["public_key","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-public_key","()","<p>Returns a new DH instance that carries just the public information, i.e.\nthe prime <code>p</code> and the generator …\n",null,1],["public_key","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-public_key","()","<p>Returns a new DSA instance that carries just the public key information. If\nthe current instance has …\n",null,1],["public_key","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-public_key","()","<p>See the OpenSSL documentation for EC_KEY_get0_public_key()\n",null,1],["public_key","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-public_key","()","<p>Makes new RSA instance containing the public key from the private key.\n",null,1],["public_key","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-public_key","()","",null,1],["public_key","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-public_key","()","",null,1],["public_key=","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-i-public_key-3D","(p1)","",null,1],["public_key=","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-public_key-3D","(p1)","<p>See the OpenSSL documentation for EC_KEY_set_public_key()\n",null,1],["public_key=","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-public_key-3D","(p1)","",null,1],["public_key=","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-public_key-3D","(p1)","",null,1],["public_key?","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-public_key-3F","()","<p>Both public_key? and private_key? may return false at the same time unlike\nother PKey classes.\n",null,1],["public_method","Object","Rails/classes/Object.html#method-i-public_method","(p1)","<p>Similar to <em>method</em>, searches public method only.\n",null,1],["public_method_defined?","Module","Rails/classes/Module.html#method-i-public_method_defined-3F","(p1)","<p>Returns <code>true</code> if the named public method is defined by\n<em>mod</em> (or its included modules and, if <em>mod</em> is a class, …\n",null,1],["public_methods","Delegator","Rails/classes/Delegator.html#method-i-public_methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this\nobject’s and __getobj__ public …\n",null,1],["public_methods","Object","Rails/classes/Object.html#method-i-public_methods","(*args)","<p>Returns the list of public methods accessible to <em>obj</em>. If the\n<em>all</em> parameter is set to <code>false</code>, only those …\n",null,1],["public_path","Rails","Ruby/classes/Rails.html#method-c-public_path","()","",null,0],["public_send","Object","Rails/classes/Object.html#method-i-public_send","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments\nspecified. Unlike send, public_send …\n",null,1],["publish","ActiveSupport::Notifications","Ruby/classes/ActiveSupport/Notifications.html#method-c-publish","(name, *args)","",null,0],["publish","ActiveSupport::Notifications::Fanout","Ruby/classes/ActiveSupport/Notifications/Fanout.html#method-i-publish","(name, *args)","",null,0],["pull","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-pull","()","<p>Returns the next event.  This is a <code>PullEvent</code> object.\n",null,1],["pull","REXML::Parsers::PullParser","Rails/classes/REXML/Parsers/PullParser.html#method-i-pull","()","",null,1],["purpose=","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-purpose-3D","(p1)","",null,1],["push","Array","Rails/classes/Array.html#method-i-push","(*args)","<p>Append—Pushes the given object(s) on to the end of this array. This\nexpression returns the array itself, …\n",null,1],["push","CSV::Row","Rails/classes/CSV/Row.html#method-i-push","(*args)","<p>A shortcut for appending multiple fields.  Equivalent to:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">args</span>.<span class=\"ruby-identifier\">each</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">arg</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">csv_row</span> <span class=\"ruby-operator\">&lt;&lt;</span> <span class=\"ruby-identifier\">arg</span> }\n</pre>\n<p>This method …\n",null,1],["push","CSV::Table","Rails/classes/CSV/Table.html#method-i-push","(*rows)","<p>A shortcut for appending multiple rows.  Equivalent to:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">rows</span>.<span class=\"ruby-identifier\">each</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">row</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-keyword\">self</span> <span class=\"ruby-operator\">&lt;&lt;</span> <span class=\"ruby-identifier\">row</span> }\n</pre>\n<p>This method returns …\n",null,1],["push","IRB::History","Rails/classes/IRB/History.html#method-i-push","(no, val)","",null,1],["push","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-push","(object)","",null,1],["push","Queue","Rails/classes/Queue.html#method-i-push","(obj)","<p>Pushes <code>obj</code> to the queue.\n",null,1],["push","RDoc::Markup::Document","Rails/classes/RDoc/Markup/Document.html#method-i-push","(*parts)","<p>Appends <code>parts</code> to the document\n",null,1],["push","RDoc::Markup::List","Rails/classes/RDoc/Markup/List.html#method-i-push","(*items)","<p>Appends <code>items</code> to the list\n",null,1],["push","RDoc::Markup::ListItem","Rails/classes/RDoc/Markup/ListItem.html#method-i-push","(*parts)","<p>Adds <code>parts</code> to the ListItem\n",null,1],["push","RDoc::Markup::Raw","Rails/classes/RDoc/Markup/Raw.html#method-i-push","(*texts)","<p>Appends <code>texts</code> onto this Paragraph\n",null,1],["push","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-push","( object )","",null,1],["push","Rinda::TupleBag","Rails/classes/Rinda/TupleBag.html#method-i-push","(tuple)","<p>Add <code>tuple</code> to the TupleBag.\n",null,1],["push","SizedQueue","Rails/classes/SizedQueue.html#method-i-push","(obj)","<p>Pushes <code>obj</code> to the queue.  If there is no space left in the\nqueue, waits until space becomes available. …\n",null,1],["push_d","RecursiveHTTPFetcher","Ruby/classes/RecursiveHTTPFetcher.html#method-i-push_d","(dir)","",null,0],["push_inspect_key","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-push_inspect_key","(id)","",null,1],["push_tags","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-i-push_tags","(*tags)","",null,0],["push_workspace","IRB::Context","Rails/classes/IRB/Context.html#method-i-push_workspace","(*_main)","",null,1],["pushd","Shell","Rails/classes/Shell.html#method-i-pushd","(path = nil, verbose = @verbose)","",null,1],["pushdir","Shell","Rails/classes/Shell.html#method-i-pushdir","(path = nil, verbose = @verbose)","",null,1],["put","ActionDispatch::Routing::Mapper::HttpHelpers","Ruby/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-put","(*args, &block)","<p>Define a route that only recognizes HTTP PUT. For supported arguments, see\n<code>Base#match</code>.\n<p>Example:\n<p>put ‘bacon’, …\n",null,0],["put","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-put","(path, body = '', headers = {})","<p>Executes a PUT request (see HTTP protocol documentation if unfamiliar).\nUsed to update resources.\n",null,0],["put","ActiveResource::CustomMethods","Ruby/classes/ActiveResource/CustomMethods.html#method-i-put","(method_name, options = {}, body = '')","",null,0],["put","ActiveResource::CustomMethods","Ruby/classes/ActiveResource/CustomMethods.html#method-c-put","(custom_method_name, options = {}, body = '')","",null,0],["put","Net::FTP","Rails/classes/Net/FTP.html#method-i-put","(localfile, remotefile = File.basename(localfile), blocksize = DEFAULT_BLOCKSIZE, &block)","<p>Transfers <code>localfile</code> to the server in whatever mode the session\nis set (text or binary).  See #puttextfile …\n",null,1],["put?","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-put-3F","()","<p>Is this a PUT request? Equivalent to <code>request.request_method_symbol ==\n:put</code>.\n",null,0],["putback","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-putback","(p1 = v1)","<p>call-seq\n\n<pre>ec.putback                    -&gt; string\nec.putback(max_numbytes)      -&gt; string</pre>\n<p>Put back the bytes …\n",null,1],["putbinaryfile","Net::FTP","Rails/classes/Net/FTP.html#method-i-putbinaryfile","(localfile, remotefile = File.basename(localfile), blocksize = DEFAULT_BLOCKSIZE)","<p>Transfers <code>localfile</code> to the server in binary mode, storing the\nresult in <code>remotefile</code>. If a block is supplied, …\n",null,1],["putc","ARGF","Rails/classes/ARGF.html#method-i-putc","(p1)","<p>If <em>obj</em> is <code>Numeric</code>, write the character whose code is\nthe least-significant byte of <em>obj</em>, otherwise write …\n",null,1],["putc","IO","Rails/classes/IO.html#method-i-putc","(p1)","<p>If <em>obj</em> is <code>Numeric</code>, write the character whose code is\nthe least-significant byte of <em>obj</em>, otherwise write …\n",null,1],["putc","Kernel","Rails/classes/Kernel.html#method-i-putc","(p1)","\n<pre>Equivalent to:\n\n  $stdout.putc(int)</pre>\n<p>Refer to the documentation for IO#putc for important information regarding\n…\n",null,1],["putc","StringIO","Rails/classes/StringIO.html#method-i-putc","(p1)","<p>See IO#putc.\n",null,1],["putc","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-putc","(p1)","<p>Same as IO.\n",null,1],["puts","ARGF","Rails/classes/ARGF.html#method-i-puts","(*args)","<p>Writes the given objects to <em>ios</em> as with <code>IO#print</code>.\nWrites a record separator (typically a newline) after …\n",null,1],["puts","CSV","Rails/classes/CSV.html#method-i-puts","(row)","",null,1],["puts","IO","Rails/classes/IO.html#method-i-puts","(*args)","<p>Writes the given objects to <em>ios</em> as with <code>IO#print</code>.\nWrites a record separator (typically a newline) after …\n",null,1],["puts","IO::writable","Rails/classes/IO/writable.html#method-i-puts","(*args)","<p>See IO#puts.\n",null,1],["puts","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-puts","(*opts)","",null,1],["puts","IRB::Notifier::AbstractNotifier","Rails/classes/IRB/Notifier/AbstractNotifier.html#method-i-puts","(*objs)","",null,1],["puts","IRB::OutputMethod","Rails/classes/IRB/OutputMethod.html#method-i-puts","(*objs)","",null,1],["puts","Kernel","Rails/classes/Kernel.html#method-i-puts","(*args)","<p>Equivalent to\n\n<pre>$stdout.puts(obj, ...)</pre>\n",null,1],["puts","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-puts","(string)","<p>Sends a string to the host.\n<p>Same as #print(), but appends a newline to the string.\n",null,1],["puts","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-puts","(*args)","<p>Writes <code>args</code> to the stream along with a record separator.\n<p>See IO#puts for full details.\n",null,1],["puts","XMP","Rails/classes/XMP.html#method-i-puts","(exps)","",null,1],["puts","XMP::StringInputMethod","Rails/classes/XMP/StringInputMethod.html#method-i-puts","(exps)","",null,1],["puts","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-puts","(*args)","<p>Same as IO.\n",null,1],["puttextfile","Net::FTP","Rails/classes/Net/FTP.html#method-i-puttextfile","(localfile, remotefile = File.basename(localfile))","<p>Transfers <code>localfile</code> to the server in ASCII (text) mode,\nstoring the result in <code>remotefile</code>. If callback …\n",null,1],["pwd","Dir","Rails/classes/Dir.html#method-c-pwd","()","<p>Returns the path to the current working directory of this process as a\nstring.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">chdir</span>(<span class=\"ruby-string\">&quot;/tmp&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["pwd","FileUtils","Rails/classes/FileUtils.html#method-c-pwd","()","<p>Options: (none)\n<p>Returns the name of the current directory.\n",null,1],["pwd","Net::FTP","Rails/classes/Net/FTP.html#method-i-pwd","()","<p>Returns the current remote directory.\n",null,1],["pwd","Pathname","Rails/classes/Pathname.html#method-c-pwd","()","<p>See <code>Dir.getwd</code>.  Returns the current working directory as a\nPathname.\n",null,1],["qualified_const_defined?","Module","Ruby/classes/Module.html#method-i-qualified_const_defined-3F","(path)","",null,0],["qualified_const_get","Module","Ruby/classes/Module.html#method-i-qualified_const_get","(path)","",null,0],["qualified_const_set","Module","Ruby/classes/Module.html#method-i-qualified_const_set","(path, value)","",null,0],["query","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-query","()","<p>Request query as a Hash\n",null,1],["query=","URI::Generic","Rails/classes/URI/Generic.html#method-i-query-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["query_attribute","ActiveRecord::AttributeMethods::Query","Ruby/classes/ActiveRecord/AttributeMethods/Query.html#method-i-query_attribute","(attr_name)","",null,0],["query_parameters","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-query_parameters","()","",null,0],["quick","Gem::Server","Rails/classes/Gem/Server.html#method-i-quick","(req, res)","",null,1],["quick_emit","Psych","Rails/classes/Psych.html#method-c-quick_emit","(thing, opts = {})","",null,1],["quiet","RDoc::Options","Rails/classes/RDoc/Options.html#method-i-quiet","()","<p>Don’t display progress as we process the files\n",null,1],["quiet","Sys","Rails/classes/Sys.html#method-i-quiet","(&block)","<p>Perform a block with $verbose disabled.\n",null,1],["quiet=","RDoc::Options","Rails/classes/RDoc/Options.html#method-i-quiet-3D","(bool)","<p>Set quietness to <code>bool</code>\n",null,1],["quietly","Kernel","Ruby/classes/Kernel.html#method-i-quietly","()","<p>Silences both STDOUT and STDERR, even for subprocesses.\n\n<pre>quietly { system 'bundle install' }</pre>\n",null,0],["quit","Net::FTP","Rails/classes/Net/FTP.html#method-i-quit","()","<p>Exits the FTP session.\n",null,1],["quit","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-quit","()","",null,1],["quit","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-quit","()","",null,1],["quo","BigDecimal","Rails/classes/BigDecimal.html#method-i-quo","(p1)","<p>Divide by the specified value.\n<p>e.g.\n\n<pre>c = a.div(b,n)</pre>\n",null,1],["quo","Complex","Rails/classes/Complex.html#method-i-quo","(p1)","<p>Performs division.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">10.0</span>) <span class=\"ruby-operator\">/</span> <span class=\"ruby-value\">3</span>  <span class=\"ruby-comment\">#=&gt; (3.3333333333333335+(0/1)*i)</span>\n<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">10</span>)   <span class=\"ruby-operator\">/</span> <span class=\"ruby-value\">3</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["quo","Float","Rails/classes/Float.html#method-i-quo","(p1)","<p>Returns float / numeric.\n",null,1],["quo","Numeric","Rails/classes/Numeric.html#method-i-quo","(p1)","<p>Returns most exact division (rational for integers, float for floats).\n",null,1],["quo","Rational","Rails/classes/Rational.html#method-i-quo","(p1)","<p>Performs division.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">/</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; (1/1)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">900</span>)   <span class=\"ruby-operator\">/</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["quote","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quote","(value, column = nil)","<p>QUOTING ==================================================\n",null,0],["quote","ActiveRecord::ConnectionAdapters::Quoting","Ruby/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote","(value, column = nil)","<p>Quotes the column value to help prevent SQL injection attacks.\n",null,0],["quote","Regexp","Rails/classes/Regexp.html#method-c-quote","(p1)","<p>Escapes any characters that would have special meaning in a regular\nexpression. Returns a new escaped …\n",null,1],["quote","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-quote","(str)","",null,1],["quote_column_name","ActiveRecord::ConnectionAdapters::Quoting","Ruby/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_column_name","(column_name)","<p>Quotes the column name. Defaults to no quoting.\n",null,0],["quote_string","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-quote_string","(string)","<p>QUOTING ==================================================\n",null,0],["quote_string","ActiveRecord::ConnectionAdapters::Quoting","Ruby/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_string","(s)","<p>Quotes a string, escaping any ‘ (single quote) and \\ (backslash)\ncharacters.\n",null,0],["quote_table_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-quote_table_name","(name)","<p>Override to return the quoted table name. Defaults to column quoting.\n",null,0],["quote_table_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-quote_table_name","(name)","<p>Checks the following cases:\n<p>table_name\n<p>“table.name”\n",null,0],["quote_table_name","ActiveRecord::ConnectionAdapters::Quoting","Ruby/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_table_name","(table_name)","<p>Quotes the table name. Defaults to column name quoting.\n",null,0],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quoted_columns_for_index","(column_names, options = {})","",null,0],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-quoted_columns_for_index","(column_names, options = {})","<p>Overridden by the mysql adapter for supporting index lengths\n",null,0],["quoted_date","ActiveRecord::ConnectionAdapters::Quoting","Ruby/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_date","(value)","",null,0],["quoted_false","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quoted_false","()","",null,0],["quoted_false","ActiveRecord::ConnectionAdapters::Quoting","Ruby/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_false","()","",null,0],["quoted_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Ruby/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-quoted_locking_column","()","<p>Quote the column name used for optimistic locking.\n",null,0],["quoted_primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-quoted_primary_key","()","<p>Returns a quoted version of the primary key name, used to construct SQL\nstatements.\n",null,0],["quoted_table_name","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-quoted_table_name","()","<p>Returns a quoted version of the table name, used to construct SQL\nstatements.\n",null,0],["quoted_true","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quoted_true","()","",null,0],["quoted_true","ActiveRecord::ConnectionAdapters::Quoting","Ruby/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_true","()","",null,0],["r","Vector","Rails/classes/Vector.html#method-i-r","()","",null,1],["racc_runtime_type","Racc::Parser","Rails/classes/Racc/Parser.html#method-c-racc_runtime_type","()","",null,1],["radio_button","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-radio_button","(method, tag_value, options = {})","",null,0],["radio_button","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-radio_button","(object_name, method, tag_value, options = {})","<p>Returns a radio button tag for accessing a specified attribute (identified\nby <code>method</code>) on an object assigned …\n",null,0],["radio_button","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-radio_button","(name = \"\", value = nil, checked = nil)","<p>Generates a radio-button Input element.\n<p><code>name</code> is the name of the input field.  <code>value</code> is\nthe value of the ...\n",null,1],["radio_button_checked?","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-c-radio_button_checked-3F","(value, checked_value)","",null,0],["radio_button_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-radio_button_tag","(name, value, checked = false, options = {})","<p>Creates a radio button; use groups of radio buttons named the same to allow\nusers to select from a group …\n",null,0],["radio_group","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-radio_group","(name = \"\", *values)","<p>Generate a sequence of radio button Input elements, as a String.\n<p>This works the same as #checkbox_group() …\n",null,1],["rails","","Ruby/files/rails/railties/lib/rails/generators/rails/app/templates/script/rails.html","","<p># This command will automatically be run when you run “rails” with Rails 3\ngems installed from …\n",null,0],["rails_gemfile_entry","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-rails_gemfile_entry","()","",null,0],["railtie_name","Rails::Plugin","Ruby/classes/Rails/Plugin.html#method-i-railtie_name","()","",null,0],["railtie_name","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-c-railtie_name","(name = nil)","",null,0],["railtie_namespace","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-i-railtie_namespace","()","",null,0],["railties","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-railties","()","",null,0],["railties","Rails::Engine::Railties","Ruby/classes/Rails/Engine/Railties.html#method-c-railties","()","",null,0],["raise","ActiveSupport::BasicObject","Ruby/classes/ActiveSupport/BasicObject.html#method-i-raise","(*args)","<p>Let ActiveSupport::BasicObject at least raise exceptions.\n",null,0],["raise","Kernel","Rails/classes/Kernel.html#method-i-raise","(*args)","<p>With no arguments, raises the exception in <code>$!</code> or raises a\n<code>RuntimeError</code> if <code>$!</code> is <code>nil</code>. With a\nsingle <code>String</code> …\n",null,1],["raise","Thread","Rails/classes/Thread.html#method-i-raise","(*args)","<p>Raises an exception (see <code>Kernel::raise</code>) from <em>thr</em>. The\ncaller does not have to be <em>thr</em>.\n\n<pre>Thread.abort_on_exception ...</pre>\n",null,1],["raise_for_undefined_entity?","RSS::BaseListener","Rails/classes/RSS/BaseListener.html#method-c-raise_for_undefined_entity-3F","()","",null,1],["raise_for_undefined_entity?","RSS::BaseParser","Rails/classes/RSS/BaseParser.html#method-c-raise_for_undefined_entity-3F","()","",null,1],["raise_for_undefined_entity?","RSS::REXMLListener","Rails/classes/RSS/REXMLListener.html#method-c-raise_for_undefined_entity-3F","()","",null,1],["raise_if_absolute","QualifiedConstUtils","Ruby/classes/QualifiedConstUtils.html#method-c-raise_if_absolute","(path)","",null,0],["raise_if_conflicts","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-raise_if_conflicts","()","<p>Check the spec for possible conflicts and freak out if there are any.\n",null,1],["rake","Build","Ruby/classes/Build.html#method-i-rake","(*tasks)","",null,0],["rake","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-rake","(command, options={})","<p>Runs the supplied rake task\n<p>Example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">rake</span>(<span class=\"ruby-string\">&quot;db:migrate&quot;</span>)\n<span class=\"ruby-identifier\">rake</span>(<span class=\"ruby-string\">&quot;db:migrate&quot;</span>, :<span class=\"ruby-identifier\">env</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;production&quot;</span>)\n<span class=\"ruby-identifier\">rake</span>(<span class=\"ruby-string\">&quot;gems:install&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["rake_check_options","Rake::FileUtilsExt","Rails/classes/Rake/FileUtilsExt.html#method-i-rake_check_options","(options, *optdecl)","<p>Check that the options do not contain options not listed in\n<code>optdecl</code>.  An ArgumentError exception is thrown …\n",null,1],["rake_extension","Module","Rails/classes/Module.html#method-i-rake_extension","(method)","<p>Check for an existing method in the current class before extending.  IF the\nmethod already exists, then …\n",null,1],["rake_merge_option","Rake::FileUtilsExt","Rails/classes/Rake/FileUtilsExt.html#method-i-rake_merge_option","(args, defaults)","<p>Merge the given options with the default values.\n",null,1],["rake_original_const_missing","Module","Rails/classes/Module.html#method-i-rake_original_const_missing","(p1)","<p>Rename the original handler to make it available.\n",null,1],["rake_original_time_compare","Time","Rails/classes/Time.html#method-i-rake_original_time_compare","(p1)","",null,1],["rake_output_message","Rake::FileUtilsExt","Rails/classes/Rake/FileUtilsExt.html#method-i-rake_output_message","(message)","<p>Send the message to the default rake output (which is $stderr).\n",null,1],["rake_require","Rake::Application","Rails/classes/Rake/Application.html#method-i-rake_require","(file_name, paths=$LOAD_PATH, loaded=$\")","<p>Similar to the regular Ruby <code>require</code> command, but will check\nfor *.rake files in addition to *.rb files. …\n",null,1],["rake_system","Rake::Win32","Rails/classes/Rake/Win32.html#method-c-rake_system","(*cmd)","<p>Run a command line on windows.\n",null,1],["rake_tasks","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-c-rake_tasks","(&blk)","",null,0],["rakefile","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-rakefile","()","",null,0],["rakefile","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-rakefile","(filename, data=nil, &block)","<p>Create a new Rakefile with the provided code (either in a block or a\nstring).\n<p>Examples\n\n<pre>rakefile(&quot;bootstrap.rake&quot;) ...</pre>\n",null,0],["rakefile","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-rakefile","()","",null,0],["rakefile_location","Rake::Application","Rails/classes/Rake/Application.html#method-i-rakefile_location","(backtrace = caller)","",null,1],["rakefile_test_tasks","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-rakefile_test_tasks","()","",null,0],["rand","Kernel","Rails/classes/Kernel.html#method-i-rand","(p1 = v1)","<p>If <em>max</em> is <code>Range</code>, returns a pseudorandom number where\nrange.member(number) == true.\n<p>Or else converts <em>max</em> …\n",null,1],["rand","Random","Rails/classes/Random.html#method-c-rand","(*args)","<p>Alias of _Random::DEFAULT.rand_.\n",null,1],["rand","Random","Rails/classes/Random.html#method-i-rand","(*args)","<p>When the argument is an <code>Integer</code> or a <code>Bignum</code>, it\nreturns a random integer greater than or equal to zero …\n",null,1],["random_bytes","SecureRandom","Rails/classes/SecureRandom.html#method-c-random_bytes","(n=nil)","<p>SecureRandom.random_bytes generates a random binary string.\n<p>The argument <em>n</em> specifies the length of the …\n",null,1],["random_iv","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-random_iv","()","<p>Generate, set, and return a random iv. You must call cipher.encrypt or\ncipher.decrypt before calling …\n",null,1],["random_key","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-random_key","()","<p>Generate, set, and return a random key. You must call cipher.encrypt or\ncipher.decrypt before calling …\n",null,1],["random_number","SecureRandom","Rails/classes/SecureRandom.html#method-c-random_number","(n=0)","<p>SecureRandom.random_number generates a random number.\n<p>If a positive integer is given as <em>n</em>, SecureRandom.random_number …\n",null,1],["random_string","WEBrick::Utils","Rails/classes/WEBrick/Utils.html#method-c-random_string","(len)","<p>Generates a random string of length <code>len</code>\n",null,1],["range","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-range","()","<p>Returns an Array of Range objects which represent the Range: HTTP header\nfield, or <code>nil</code> if there is no …\n",null,1],["range=","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-range-3D","(r, e = nil)","",null,1],["range_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-range_field","(object_name, method, options = {})","<p>Returns an input tag of type “range”.\n<p>Options\n<p>Accepts same options as range_field_tag\n",null,0],["range_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-range_field_tag","(name, value = nil, options = {})","<p>Creates a range form element.\n<p>Options\n<p>Accepts the same options as number_field_tag.\n",null,0],["range_length","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-range_length","()","<p>The length of the range represented in Content-Range: header.\n",null,1],["rank","Matrix","Rails/classes/Matrix.html#method-i-rank","()","<p>Returns the rank of the matrix. Beware that using Float values can yield\nerroneous results because of …\n",null,1],["rank_e","Matrix","Rails/classes/Matrix.html#method-i-rank_e","()","<p>deprecated; use Matrix#rank\n",null,1],["rassoc","Array","Rails/classes/Array.html#method-i-rassoc","(p1)","<p>Searches through the array whose elements are also arrays. Compares\n<em>obj</em> with the second element of each …\n",null,1],["rassoc","ENV","Rails/classes/ENV.html#method-c-rassoc","(p1)","<p>Returns an Array of the name and value of the environment variable with\n<code>value</code> or <code>nil</code> if the value cannot …\n",null,1],["rassoc","Hash","Rails/classes/Hash.html#method-i-rassoc","(p1)","<p>Searches through the hash comparing <em>obj</em> with the value using\n<code>==</code>. Returns the first key-value pair (two-element …\n",null,1],["rationalize","Complex","Rails/classes/Complex.html#method-i-rationalize","(p1 = v1)","<p>If the imaginary part is exactly 0, returns the real part as a Rational,\notherwise a RangeError is raised. …\n",null,1],["rationalize","Float","Rails/classes/Float.html#method-i-rationalize","(p1 = v1)","<p>Returns a simpler approximation of the value (flt-|eps| &lt;= result &lt;=\nflt+|eps|).  if eps is not …\n",null,1],["rationalize","Integer","Rails/classes/Integer.html#method-i-rationalize","(p1 = v1)","<p>Returns the value as a rational.  An optional argument eps is always\nignored.\n",null,1],["rationalize","NilClass","Rails/classes/NilClass.html#method-i-rationalize","(p1 = v1)","<p>Returns zero as a rational.  An optional argument eps is always ignored.\n",null,1],["rationalize","Rational","Rails/classes/Rational.html#method-i-rationalize","(p1 = v1)","<p>Returns a simpler approximation of the value if an optional argument eps is\ngiven (rat-|eps| &lt;= result …\n",null,1],["raw","ActionView::Helpers::OutputSafetyHelper","Ruby/classes/ActionView/Helpers/OutputSafetyHelper.html#method-i-raw","(stringish)","<p>This method outputs without escaping a string. Since escaping tags is now\ndefault, this can be used when …\n",null,0],["raw","Curses","Rails/classes/Curses.html#method-c-raw","()","<p>Put the terminal into raw mode.\n<p>Raw mode is similar to Curses.cbreak mode, in that characters typed are …\n",null,1],["raw","IO","Rails/classes/IO.html#method-i-raw","(*args)","<p>Yields <code>self</code> within raw mode.\n\n<pre>STDIN.raw(&amp;:gets)</pre>\n<p>will read and return a line without echo back and line editing. …\n",null,1],["raw","REXML::Element","Rails/classes/REXML/Element.html#method-i-raw","()","<p>Evaluates to <code>true</code> if raw mode is set for this element.  This\nis the case if the context has :<code>raw</code> set …\n",null,1],["raw!","IO","Rails/classes/IO.html#method-i-raw-21","(*args)","<p>Enables raw mode.\n<p>If the terminal mode needs to be back, use io.raw { … }.\n<p>You must require ‘io/console …\n",null,1],["raw_connection","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-raw_connection","()","<p>Provides access to the underlying database driver for this adapter. For\nexample, this method returns …\n",null,0],["raw_cookie","CGI::QueryExtension","Rails/classes/CGI/QueryExtension.html#method-i-raw_cookie","()","<p>Get the raw cookies as a string.\n",null,1],["raw_cookie2","CGI::QueryExtension","Rails/classes/CGI/QueryExtension.html#method-i-raw_cookie2","()","<p>Get the raw RFC2965 cookies as a string.\n",null,1],["raw_host_with_port","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-raw_host_with_port","()","<p>Returns the host for this request, such as “example.com”.\n",null,0],["raw_path","RDoc::RI::Paths","Rails/classes/RDoc/RI/Paths.html#method-c-raw_path","(system, site, home, gems, *extra_dirs)","<p>Returns selected documentation directories including nonexistent\ndirectories.\n<p>See also ::each\n",null,1],["raw_post","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-raw_post","()","<p>Read the request body. This is useful for web services that need to work\nwith raw requests directly. …\n",null,0],["raw_value","ActiveSupport::Cache::Entry","Ruby/classes/ActiveSupport/Cache/Entry.html#method-i-raw_value","()","<p>Get the raw value. This value may be serialized and compressed.\n",null,0],["raw_write_attribute","ActiveRecord::AttributeMethods::Write","Ruby/classes/ActiveRecord/AttributeMethods/Write.html#method-i-raw_write_attribute","(attr_name, value)","",null,0],["rb_scan_args","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-rb_scan_args","(method_body)","<p>Extracts parameters from the <code>method_body</code> and returns a method\nparameter string.  Follows 1.9.3dev’s scan-arg-spec, …\n",null,1],["rc_file","IRB","Rails/classes/IRB.html#method-c-rc_file","(ext = IRBRC_EXT)","",null,1],["rc_file_generators","IRB","Rails/classes/IRB.html#method-c-rc_file_generators","()","<p>enumerate possible rc-file base name generators\n",null,1],["rcptto","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-rcptto","(to_addr)","",null,1],["rcptto","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-rcptto","(to_addr)","",null,1],["rcptto_list","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-rcptto_list","(to_addrs)","",null,1],["rcptto_list","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-rcptto_list","(to_addrs)","",null,1],["rdev","File::Stat","Rails/classes/File/Stat.html#method-i-rdev","()","<p>Returns an integer representing the device type on which <em>stat</em>\nresides. Returns <code>nil</code> if the operating system …\n",null,1],["rdev_major","File::Stat","Rails/classes/File/Stat.html#method-i-rdev_major","()","<p>Returns the major part of <code>File_Stat#rdev</code> or <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/fd1&quot;</span>).<span class=\"ruby-identifier\">rdev_major</span>   <span class=\"ruby-comment\">#=&gt; 2</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/tty&quot;</span>).<span class=\"ruby-identifier\">rdev_major</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["rdev_minor","File::Stat","Rails/classes/File/Stat.html#method-i-rdev_minor","()","<p>Returns the minor part of <code>File_Stat#rdev</code> or <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/fd1&quot;</span>).<span class=\"ruby-identifier\">rdev_minor</span>   <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/tty&quot;</span>).<span class=\"ruby-identifier\">rdev_minor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["rdoc","Gem::Server","Rails/classes/Gem/Server.html#method-i-rdoc","(req, res)","<p>Can be used for quick navigation to the rdoc documentation.  You can then\ndefine a search shortcut for …\n",null,1],["rdoc_installed?","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-i-rdoc_installed-3F","()","<p>Is the RDoc documentation installed?\n",null,1],["rdoc_installed?","RDoc::RubygemsHook","Rails/classes/RDoc/RubygemsHook.html#method-i-rdoc_installed-3F","()","<p>Is rdoc documentation installed?\n",null,1],["rdoc_options","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-rdoc_options","()","<p>An ARGV style array of options to RDoc\n",null,1],["rdoc_options=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-rdoc_options-3D","(options)","<p>Sets rdoc_options to <code>value</code>, ensuring it is an array. Don’t use\nthis, push onto the array instead.\n",null,1],["rdoc_task_description","RDoc::Task","Rails/classes/RDoc/Task.html#method-i-rdoc_task_description","()","<p>Task description for the rdoc task or its renamed equivalent\n",null,1],["rdoc_version","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-c-rdoc_version","()","",null,1],["re","","Rails/files/ruby/doc/re_rdoc.html","","<p>Regular expressions (<em>regexp</em>s) are patterns which describe the\ncontents of a string. They’re used for …\n",null,1],["re_exchange","Process::GID","Rails/classes/Process/GID.html#method-c-re_exchange","()","<p>Exchange real and effective group IDs and return the new effective group\nID. Not available on all platforms. …\n",null,1],["re_exchange","Process::UID","Rails/classes/Process/UID.html#method-c-re_exchange","()","<p>Exchange real and effective user IDs and return the new effective user ID.\nNot available on all platforms. …\n",null,1],["re_exchangeable?","Process::GID","Rails/classes/Process/GID.html#method-c-re_exchangeable-3F","()","<p>Returns <code>true</code> if the real and effective group IDs of a process\nmay be exchanged on the current platform. …\n",null,1],["re_exchangeable?","Process::UID","Rails/classes/Process/UID.html#method-c-re_exchangeable-3F","()","<p>Returns <code>true</code> if the real and effective user IDs of a process\nmay be exchanged on the current platform. …\n",null,1],["read","ActionDispatch::Http::UploadedFile","Ruby/classes/ActionDispatch/Http/UploadedFile.html#method-i-read","(*args)","",null,0],["read","ActionDispatch::RailsEntityStore","Ruby/classes/ActionDispatch/RailsEntityStore.html#method-i-read","(key)","",null,0],["read","ActionDispatch::RailsMetaStore","Ruby/classes/ActionDispatch/RailsMetaStore.html#method-i-read","(key)","",null,0],["read","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-read","(name, options = nil)","<p>Fetches data from the cache, using the given key. If there is data in the\ncache with the given key, then …\n",null,0],["read","ARGF","Rails/classes/ARGF.html#method-i-read","(p1 = v1, p2 = v2)","\n<pre>Reads _length_ bytes from ARGF. The files named on the command line\nare concatenated and treated as a ...</pre>\n",null,1],["read","CSV","Rails/classes/CSV.html#method-c-read","(path, *options)","<p>Use to slurp a CSV file into an Array of Arrays.  Pass the\n<code>path</code> to the file and any <code>options</code> CSV::new() …\n",null,1],["read","CSV","Rails/classes/CSV.html#method-i-read","()","<p>Slurps the remaining rows and returns an Array of Arrays.\n<p>The data source must be open for reading.\n",null,1],["read","Dir","Rails/classes/Dir.html#method-i-read","()","<p>Reads the next entry from <em>dir</em> and returns it as a string. Returns\n<code>nil</code> at the end of the stream.\n\n<pre>d = Dir.new(&quot;testdir&quot;) ...</pre>\n",null,1],["read","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-read","(len = nil)","<p>Reads <code>len</code> bytes from the tar file entry, or the rest of the\nentry if nil\n",null,1],["read","IO","Rails/classes/IO.html#method-i-read","(p1 = v1, p2 = v2)","<p>Reads <em>length</em> bytes from the I/O stream.\n<p><em>length</em> must be a non-negative integer or <code>nil</code>.\n<p>If <em>length</em> is a positive …\n",null,1],["read","IO","Rails/classes/IO.html#method-c-read","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = {})","<p>Opens the file, optionally seeks to the given <em>offset</em>, then returns\n<em>length</em> bytes (defaulting to the rest …\n",null,1],["read","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-read","(size=nil, buf=nil)","<p>Reads <code>size</code> bytes from the stream.  If <code>buf</code> is\nprovided it must reference a string which will receive the …\n",null,1],["read","OpenSSL::PKey","Rails/classes/OpenSSL/PKey.html#method-c-read","(p1, p2 = v2)","<p>Parameters\n<p><code>string</code> is a DER- or PEM-encoded string containing an arbitrary\nprivate\n\n<p>or public key.\n",null,1],["read","OpenURI::OpenRead","Rails/classes/OpenURI/OpenRead.html#method-i-read","(options={})","<p>OpenURI::OpenRead#read() reads a content referenced by self and returns the\ncontent as string. The string …\n",null,1],["read","Pathname","Rails/classes/Pathname.html#method-i-read","(p1 = v1, p2 = v2, p3 = v3)","<p>See <code>IO.read</code>.  Returns all data from the file, or the first\n<code>N</code> bytes if specified.\n",null,1],["read","REXML::IOSource","Rails/classes/REXML/IOSource.html#method-i-read","()","",null,1],["read","REXML::Source","Rails/classes/REXML/Source.html#method-i-read","()","",null,1],["read","Rinda::TupleSpace","Rails/classes/Rinda/TupleSpace.html#method-i-read","(tuple, sec=nil)","<p>Reads <code>tuple</code>, but does not remove it.\n",null,1],["read","Rinda::TupleSpaceProxy","Rails/classes/Rinda/TupleSpaceProxy.html#method-i-read","(tuple, sec=nil, &block)","<p>Reads <code>tuple</code> from the proxied TupleSpace.  See TupleSpace#read.\n",null,1],["read","Rinda::WaitTemplateEntry","Rails/classes/Rinda/WaitTemplateEntry.html#method-i-read","(tuple)","",null,1],["read","StringIO","Rails/classes/StringIO.html#method-i-read","(*args)","<p>See IO#read.\n",null,1],["read","WEBrick::CGI::Socket","Rails/classes/WEBrick/CGI/Socket.html#method-i-read","(size=nil)","",null,1],["read","WEBrick::NullReader","Rails/classes/WEBrick/NullReader.html#method-c-read","(*args)","",null,1],["read","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-read","(name, *rtype)","<p>Read a registry value named name and return array of [ type, data ]. When\nname is nil, the `default’ …\n",null,1],["read","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-read","(p1 = v1)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["read_all","Rinda::TupleSpace","Rails/classes/Rinda/TupleSpace.html#method-i-read_all","(tuple)","<p>Returns all tuples matching <code>tuple</code>.  Does not remove the found\ntuples.\n",null,1],["read_all","Rinda::TupleSpaceProxy","Rails/classes/Rinda/TupleSpaceProxy.html#method-i-read_all","(tuple)","<p>Reads all tuples matching <code>tuple</code> from the proxied TupleSpace. \nSee TupleSpace#read_all.\n",null,1],["read_attribute","ActiveRecord::AttributeMethods::Read","Ruby/classes/ActiveRecord/AttributeMethods/Read.html#method-i-read_attribute","(attr_name)","<p>Returns the value of the attribute identified by <code>attr_name</code>\nafter it has been typecast (for example, “2004-12-12” …\n",null,0],["read_attribute_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","Ruby/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#method-i-read_attribute_before_type_cast","(attr_name)","",null,0],["read_attribute_before_type_cast","ActiveRecord::AttributeMethods::Serialization","Ruby/classes/ActiveRecord/AttributeMethods/Serialization.html#method-i-read_attribute_before_type_cast","(attr_name)","",null,0],["read_bin","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-read_bin","(name)","<p>Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin) registry\nvalue named name.\n<p>If the values …\n",null,1],["read_binary","Gem","Rails/classes/Gem.html#method-c-read_binary","(path)","<p>Safely read a file in binary mode on all platforms.\n",null,1],["read_body","Net::HTTPResponse","Rails/classes/Net/HTTPResponse.html#method-i-read_body","(dest = nil, &block)","<p>Gets the entity body returned by the remote HTTP server.\n<p>If a block is given, the body is passed to the …\n",null,1],["read_directive","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-read_directive","(allowed)","<p>Directives are modifier comments that can appear after class, module, or\nmethod names. For example:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["read_documentation_modifiers","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-read_documentation_modifiers","(context, allow)","<p>Handles the directive for <code>context</code> if the directive is listed\nin <code>allow</code>. This method is called for directives …\n",null,1],["read_entry","ActiveSupport::Cache::FileStore","Ruby/classes/ActiveSupport/Cache/FileStore.html#method-i-read_entry","(key, options)","",null,0],["read_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Ruby/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-read_entry","(key, options)","",null,0],["read_escape","RubyLex","Rails/classes/RubyLex.html#method-i-read_escape","()","",null,1],["read_file","RDoc::Encoding","Rails/classes/RDoc/Encoding.html#method-c-read_file","(filename, encoding, force_transcode = false)","<p>Reads the contents of <code>filename</code> and handles any encoding\ndirectives in the file.\n<p>The content will be converted …\n",null,1],["read_fragment","ActionController::Caching::Fragments","Ruby/classes/ActionController/Caching/Fragments.html#method-i-read_fragment","(key, options = nil)","<p>Reads a cached fragment from the location signified by <code>key</code>\n(see <code>expire_fragment</code> for acceptable formats). …\n",null,0],["read_i","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-read_i","(name)","<p>Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin) registry\nvalue named name.\n<p>If the values …\n",null,1],["read_multi","ActiveSupport::Cache::MemCacheStore","Ruby/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-read_multi","(*names)","<p>Reads multiple values from the cache using a single call to the servers for\nall keys. Options can be …\n",null,0],["read_multi","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-read_multi","(*names)","<p>Read multiple values at once from the cache. Options can be passed in the\nlast argument.\n<p>Some cache implementation …\n",null,0],["read_nonblock","ARGF","Rails/classes/ARGF.html#method-i-read_nonblock","(*args)","<p>Reads at most <em>maxlen</em> bytes from the ARGF stream in non-blocking\nmode.\n",null,1],["read_nonblock","IO","Rails/classes/IO.html#method-i-read_nonblock","(*args)","<p>Reads at most <em>maxlen</em> bytes from <em>ios</em> using the read(2)\nsystem call after O_NONBLOCK is set for the underlying …\n",null,1],["read_nonblock","IO::readable","Rails/classes/IO/readable.html#method-i-read_nonblock","(*args)","<p>Similar to #read, but raises <code>EOFError</code> at end of string instead\nof returning <code>nil</code>, as well as IO#sysread …\n",null,1],["read_nonblock","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-read_nonblock","(maxlen, buf=nil)","<p>Reads at most <code>maxlen</code> bytes in the non-blocking manner.\n<p>When no data can be read without blocking it raises …\n",null,1],["read_s","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-read_s","(name)","<p>Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin) registry\nvalue named name.\n<p>If the values …\n",null,1],["read_s_expand","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-read_s_expand","(name)","<p>Read a REG_SZ or REG_EXPAND_SZ registry value named name.\n<p>If the value type is REG_EXPAND_SZ, environment …\n",null,1],["read_smime","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-c-read_smime","(p1)","",null,1],["read_timeout=","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-read_timeout-3D","(sec)","<p>Setter for the read_timeout attribute.\n",null,1],["read_timeout=","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-read_timeout-3D","(sec)","<p>Setter for the read_timeout attribute.\n",null,1],["read_timeout=","Net::POP3","Rails/classes/Net/POP3.html#method-i-read_timeout-3D","(sec)","<p>Set the read timeout.\n",null,1],["read_timeout=","Net::POP3","Rails/classes/Net/POP3.html#method-i-read_timeout-3D","(sec)","<p>Set the read timeout.\n",null,1],["read_timeout=","Net::POP3","Rails/classes/Net/POP3.html#method-i-read_timeout-3D","(sec)","<p>Set the read timeout.\n",null,1],["read_timeout=","Net::POP3","Rails/classes/Net/POP3.html#method-i-read_timeout-3D","(sec)","<p>Set the read timeout.\n",null,1],["read_timeout=","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-read_timeout-3D","(sec)","<p>Set the number of seconds to wait until timing-out a read(2) call.\n",null,1],["read_timeout=","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-read_timeout-3D","(sec)","<p>Set the number of seconds to wait until timing-out a read(2) call.\n",null,1],["read_type_class","Psych","Rails/classes/Psych.html#method-c-read_type_class","(type, reference)","",null,1],["read_with_substitution","REXML::Text","Rails/classes/REXML/Text.html#method-c-read_with_substitution","( input, illegal=nil )","<p>Reads text, substituting entities\n",null,1],["readable?","File","Rails/classes/File.html#method-c-readable-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the effective\nuser id of this process.\n",null,1],["readable?","File::Stat","Rails/classes/File/Stat.html#method-i-readable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is readable by the effective\nuser id of this process.\n\n<pre>File.stat(&quot;testfile&quot;).readable? ...</pre>\n",null,1],["readable?","FileTest","Rails/classes/FileTest.html#method-i-readable-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the effective\nuser id of this process.\n",null,1],["readable?","Pathname","Rails/classes/Pathname.html#method-i-readable-3F","()","<p>See <code>FileTest.readable?</code>.\n",null,1],["readable_atfer_eof?","IRB::InputMethod","Rails/classes/IRB/InputMethod.html#method-i-readable_atfer_eof-3F","()","",null,1],["readable_atfer_eof?","IRB::ReadlineInputMethod","Rails/classes/IRB/ReadlineInputMethod.html#method-i-readable_atfer_eof-3F","()","",null,1],["readable_atfer_eof?","IRB::StdioInputMethod","Rails/classes/IRB/StdioInputMethod.html#method-i-readable_atfer_eof-3F","()","",null,1],["readable_inspect","Date","Ruby/classes/Date.html#method-i-readable_inspect","()","<p>Overrides the default inspect method with a human readable one, e.g., “Mon,\n21 Feb 2005”\n",null,0],["readable_inspect","DateTime","Ruby/classes/DateTime.html#method-i-readable_inspect","()","<p>Overrides the default inspect method with a human readable one, e.g., “Mon,\n21 Feb 2005 14:30:00 …\n",null,0],["readable_real?","File","Rails/classes/File.html#method-c-readable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the real user id\nof this process.\n",null,1],["readable_real?","File::Stat","Rails/classes/File/Stat.html#method-i-readable_real-3F","()","<p>Returns <code>true</code> if <em>stat</em> is readable by the real user id\nof this process.\n\n<pre>File.stat(&quot;testfile&quot;).readable_real? ...</pre>\n",null,1],["readable_real?","FileTest","Rails/classes/FileTest.html#method-i-readable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the real user id\nof this process.\n",null,1],["readable_real?","Pathname","Rails/classes/Pathname.html#method-i-readable_real-3F","()","<p>See <code>FileTest.readable_real?</code>.\n",null,1],["readagain_bytes","Encoding::InvalidByteSequenceError","Rails/classes/Encoding/InvalidByteSequenceError.html#method-i-readagain_bytes","()","<p>Returns the bytes to be read again when Encoding::InvalidByteSequenceError\noccurs.\n",null,1],["readbyte","ARGF","Rails/classes/ARGF.html#method-i-readbyte","()","<p>Reads the next 8-bit byte from ARGF and returns it as a\n<code>Fixnum</code>. Raises an <code>EOFError</code> after the last byte …\n",null,1],["readbyte","IO","Rails/classes/IO.html#method-i-readbyte","()","<p>Reads a byte as with <code>IO#getbyte</code>, but raises an\n<code>EOFError</code> on end of file.\n",null,1],["readbyte","IO::readable","Rails/classes/IO/readable.html#method-i-readbyte","()","<p>See IO#readbyte.\n",null,1],["readbyte","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-readbyte","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["readchar","ARGF","Rails/classes/ARGF.html#method-i-readchar","()","<p>Reads the next character from <code>ARGF</code> and returns it as a\n<code>String</code>. Raises an <code>EOFError</code> after the last\ncharacter …\n",null,1],["readchar","IO","Rails/classes/IO.html#method-i-readchar","()","<p>Reads a one-character string from <em>ios</em>. Raises an\n<code>EOFError</code> on end of file.\n\n<pre>f = File.new(&quot;testfile&quot;)\nf.readchar ...</pre>\n",null,1],["readchar","IO::readable","Rails/classes/IO/readable.html#method-i-readchar","()","<p>See IO#readchar.\n",null,1],["readchar","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-readchar","()","<p>Reads a one-character string from the stream.  Raises an EOFError at end of\nfile.\n",null,1],["readchar","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-readchar","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["readline","ARGF","Rails/classes/ARGF.html#method-i-readline","(*args)","<p>Returns the next line from the current file in <code>ARGF</code>.\n<p>By default lines are assumed to be separated by +$/+; …\n",null,1],["readline","CSV","Rails/classes/CSV.html#method-i-readline","()","",null,1],["readline","DEBUGGER__::Context","Rails/classes/DEBUGGER__/Context.html#method-i-readline","(prompt, hist)","",null,1],["readline","IO","Rails/classes/IO.html#method-i-readline","(*args)","<p>Reads a line as with <code>IO#gets</code>, but raises an\n<code>EOFError</code> on end of file.\n",null,1],["readline","IO::readable","Rails/classes/IO/readable.html#method-i-readline","(*args)","<p>See IO#readline.\n",null,1],["readline","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-readline","(*rs)","",null,1],["readline","Kernel","Rails/classes/Kernel.html#method-i-readline","(*args)","<p>Equivalent to <code>Kernel::gets</code>, except <code>readline</code>\nraises <code>EOFError</code> at end of file.\n",null,1],["readline","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-readline","(eol=$/)","<p>Reads a line from the stream which is separated by <code>eol</code>.\n<p>Raises EOFError if at end of file.\n",null,1],["readline","Readline","Rails/classes/Readline.html#method-c-readline","(p1 = v1, p2 = v2)","<p>Shows the <code>prompt</code> and reads the inputted line with line\nediting. The inputted line is added to the history …\n",null,1],["readline","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-readline","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["readlines","ARGF","Rails/classes/ARGF.html#method-i-readlines","(*args)","<p>Reads <code>ARGF</code>‘s current file in its entirety, returning an\n<code>Array</code> of its lines, one line per element. Lines …\n",null,1],["readlines","CSV","Rails/classes/CSV.html#method-i-readlines","()","",null,1],["readlines","CSV","Rails/classes/CSV.html#method-c-readlines","(*args)","<p>Alias for CSV::read().\n",null,1],["readlines","IO","Rails/classes/IO.html#method-c-readlines","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = {})","<p>Reads the entire file specified by <em>name</em> as individual lines, and\nreturns those lines in an array. Lines …\n",null,1],["readlines","IO","Rails/classes/IO.html#method-i-readlines","(*args)","<p>Reads all of the lines in <em>ios</em>, and returns them in\n<em>anArray</em>. Lines are separated by the optional <em>sep</em>. …\n",null,1],["readlines","Kernel","Rails/classes/Kernel.html#method-i-readlines","(*args)","<p>Returns an array containing the lines returned by calling\n<code>Kernel.gets(<em>sep</em>)</code> until the end of file.\n",null,1],["readlines","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-readlines","(eol=$/)","<p>Reads lines from the stream which are separated by <code>eol</code>.\n<p>See also #gets\n",null,1],["readlines","Pathname","Rails/classes/Pathname.html#method-i-readlines","(p1 = v1, p2 = v2, p3 = v3)","<p>See <code>IO.readlines</code>.  Returns all the lines from the file.\n",null,1],["readlines","StringIO","Rails/classes/StringIO.html#method-i-readlines","(*args)","<p>See IO#readlines.\n",null,1],["readlines","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-readlines","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["readlink","File","Rails/classes/File.html#method-c-readlink","(p1)","<p>Returns the name of the file referenced by the given link. Not available on\nall platforms.\n\n<pre>File.symlink(&quot;testfile&quot;, ...</pre>\n",null,1],["readlink","Pathname","Rails/classes/Pathname.html#method-i-readlink","()","<p>See <code>File.readlink</code>.  Read symbolic link.\n",null,1],["readme","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-readme","()","",null,0],["readme","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-readme","(path)","<p>Reads the given file at the source root and prints it in the console.\n<p>Example\n\n<pre>readme &quot;README&quot;</pre>\n",null,0],["readme","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-readme","()","",null,0],["readonly","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-readonly","(value = true)","",null,0],["readonly!","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-readonly-21","()","<p>Marks this record as read only.\n",null,0],["readonly?","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-i-readonly-3F","()","<p>Returns <code>true</code> if the record is read only. Records loaded\nthrough joins with piggy-back attributes will …\n",null,0],["readonly_attributes","ActiveRecord::ReadonlyAttributes::ClassMethods","Ruby/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html#method-i-readonly_attributes","()","<p>Returns an array of all the attributes that have been specified as\nreadonly.\n",null,0],["readpartial","ARGF","Rails/classes/ARGF.html#method-i-readpartial","(*args)","<p>Reads at most <em>maxlen</em> bytes from the ARGF stream. It blocks only if\n<code>ARGF</code> has no data immediately available. …\n",null,1],["readpartial","IO","Rails/classes/IO.html#method-i-readpartial","(*args)","<p>Reads at most <em>maxlen</em> bytes from the I/O stream. It blocks only if\n<em>ios</em> has no data immediately available. …\n",null,1],["readpartial","IO::readable","Rails/classes/IO/readable.html#method-i-readpartial","(*args)","<p>Similar to #read, but raises <code>EOFError</code> at end of string instead\nof returning <code>nil</code>, as well as IO#sysread …\n",null,1],["readpartial","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-readpartial","(maxlen, buf=nil)","<p>Reads at most <code>maxlen</code> bytes from the stream.  If\n<code>buf</code> is provided it must reference a string which will …\n",null,1],["readpartial","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-readpartial","(p1, p2 = v2)","<p>Reads at most <em>maxlen</em> bytes from the gziped stream but it blocks\nonly if <em>gzipreader</em> has no data immediately ...\n",null,1],["ready","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-ready","(from_addr, *to_addrs)","",null,1],["ready","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-ready","(from_addr, *to_addrs)","",null,1],["ready?","IO","Rails/classes/IO.html#method-i-ready-3F","()","<p>Returns true if input available without blocking, or false. Returns nil if\nno information available. …\n",null,1],["real","Complex","Rails/classes/Complex.html#method-i-real","()","<p>Returns the real part.\n",null,1],["real","Matrix","Rails/classes/Matrix.html#method-i-real","()","<p>Returns the real part of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">2</span>), <span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">0</span>,<span class=\"ruby-value\">1</span>), <span class=\"ruby-value\">0</span>], [<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span><span class=\"ruby-operator\">+</span><span class=\"ruby-value\">2</span><span class=\"ruby-identifier\">i</span>  <span class=\"ruby-identifier\">i</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["real","Numeric","Rails/classes/Numeric.html#method-i-real","()","<p>Returns self.\n",null,1],["real?","Complex","Rails/classes/Complex.html#method-i-real-3F","()","<p>Returns false.\n",null,1],["real?","Matrix","Rails/classes/Matrix.html#method-i-real-3F","()","<p>Returns <code>true</code> if all entries of the matrix are real.\n",null,1],["real?","Numeric","Rails/classes/Numeric.html#method-i-real-3F","()","<p>Returns <code>true</code> if <em>num</em> is a <code>Real</code> (i.e. non\n<code>Complex</code>).\n",null,1],["real_inspect","IRB::History","Rails/classes/IRB/History.html#method-i-real_inspect","()","",null,1],["realdirpath","File","Rails/classes/File.html#method-c-realdirpath","(p1, p2 = v2)","<p>Returns the real (absolute) pathname of <em>pathname</em> in the actual\nfilesystem. The real pathname doesn’t …\n",null,1],["realdirpath","Pathname","Rails/classes/Pathname.html#method-i-realdirpath","(p1 = v1)","<p>Returns the real (absolute) pathname of <code>self</code> in the actual\nfilesystem. The real pathname doesn’t contain …\n",null,1],["realloc","DL","Rails/classes/DL.html#method-c-realloc","(p1, p2)","<p>Change the size of the memory allocated at the memory location\n<code>addr</code> to <code>size</code> bytes.  Returns the memory …\n",null,1],["really_verbose","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-really_verbose","()","<p>Really verbose mode gives you extra output.\n",null,1],["realpath","File","Rails/classes/File.html#method-c-realpath","(p1, p2 = v2)","<p>Returns the real (absolute) pathname of <em>pathname</em> in the actual\nfilesystem not containing symlinks or …\n",null,1],["realpath","Pathname","Rails/classes/Pathname.html#method-i-realpath","(p1 = v1)","<p>Returns the real (absolute) pathname of <code>self</code> in the actual\nfilesystem not containing symlinks or useless …\n",null,1],["realtime","Benchmark","Rails/classes/Benchmark.html#method-c-realtime","()","<p>Returns the elapsed real time used to execute the given block.\n",null,1],["reason","LocalJumpError","Rails/classes/LocalJumpError.html#method-i-reason","()","<p>The reason this block was terminated: :break, :redo, :retry, :next,\n:return, or :noreason.\n",null,1],["reason","OptionParser::ParseError","Rails/classes/OptionParser/ParseError.html#method-i-reason","()","<p>Returns error reason. Override this for I18N.\n",null,1],["reason_phrase","WEBrick::HTTPStatus","Rails/classes/WEBrick/HTTPStatus.html#method-c-reason_phrase","(code)","<p>Returns the description corresponding to the HTTP status <code>code</code>\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">WEBrick</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">HTTPStatus</span>.<span class=\"ruby-identifier\">reason_phrase</span> <span class=\"ruby-value\">404</span>\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["reason_phrase","WEBrick::HTTPStatus::Status","Rails/classes/WEBrick/HTTPStatus/Status.html#method-i-reason_phrase","()","<p>Returns the HTTP status description\n",null,1],["receive","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-c-receive","(raw_mail)","<p>Receives a raw email, parses it into an email object, decodes it,\ninstantiates a new mailer, and passes …\n",null,0],["receive","ActionMailer::LogSubscriber","Ruby/classes/ActionMailer/LogSubscriber.html#method-i-receive","(event)","",null,0],["receive","REXML::Validation::RelaxNG","Rails/classes/REXML/Validation/RelaxNG.html#method-i-receive","(event)","",null,1],["receiver","Method","Rails/classes/Method.html#method-i-receiver","()","<p>Returns the bound receiver of the method object.\n",null,1],["recipients","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-recipients","()","",null,1],["reconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-reconnect-21","()","<p>Disconnects from the database if already connected, and establishes a new\nconnection with the database. …\n",null,0],["reconnect!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-reconnect-21","()","",null,0],["reconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-reconnect-21","()","",null,0],["reconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-reconnect-21","()","<p>Close then reopen the connection.\n",null,0],["record","ActiveRecord::Migration::CommandRecorder","Ruby/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-record","(*command)","<p>record <code>command</code>. <code>command</code> should be a method name\nand arguments. For example:\n\n<pre>recorder.record(:method_name, ...</pre>\n",null,0],["record_entity_expansion","REXML::Document","Rails/classes/REXML/Document.html#method-i-record_entity_expansion","()","",null,1],["record_key_for_dom_id","ActionController::RecordIdentifier","Ruby/classes/ActionController/RecordIdentifier.html#method-i-record_key_for_dom_id","(record)","<p>Returns a string representation of the key attribute(s) that is suitable\nfor use in an HTML DOM id.  …\n",null,0],["record_location","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-record_location","(top_level)","<p>Records the RDoc::TopLevel (file) where this code object was defined\n",null,1],["record_location","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-record_location","(top_level)","<p>Record <code>top_level</code> as a file <code>self</code> is in.\n",null,1],["recover","OptionParser::ParseError","Rails/classes/OptionParser/ParseError.html#method-i-recover","(argv)","<p>Pushes back erred argument(s) to <code>argv</code>.\n",null,1],["recreate_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-recreate_database","(name, options = {})","<p>Drops the database specified on the <code>name</code> attribute and creates\nit again using the provided <code>options</code>.\n",null,0],["rect","Complex","Rails/classes/Complex.html#method-i-rect","()","<p>Returns an array; [cmp.real, cmp.imag].\n",null,1],["rect","Complex","Rails/classes/Complex.html#method-c-rect","(p1, p2 = v2)","<p>Returns a complex object which denotes the given rectangular form.\n",null,1],["rect","Matrix","Rails/classes/Matrix.html#method-i-rect","()","<p>Returns an array containing matrices corresponding to the real and\nimaginary parts of the matrix\n<p>m.rect …\n",null,1],["rect","Numeric","Rails/classes/Numeric.html#method-i-rect","()","<p>Returns an array; [num, 0].\n",null,1],["rectangular","Complex","Rails/classes/Complex.html#method-c-rectangular","(p1, p2 = v2)","<p>Returns a complex object which denotes the given rectangular form.\n",null,1],["rectangular","Complex","Rails/classes/Complex.html#method-i-rectangular","()","<p>Returns an array; [cmp.real, cmp.imag].\n",null,1],["rectangular","Matrix","Rails/classes/Matrix.html#method-i-rectangular","()","",null,1],["rectangular","Numeric","Rails/classes/Numeric.html#method-i-rectangular","()","<p>Returns an array; [num, 0].\n",null,1],["recurse_proc","JSON","Rails/classes/JSON.html#method-i-recurse_proc","(result, &proc)","<p>Recursively calls passed <em>Proc</em> if the parsed data structure is an\n<em>Array</em> or <em>Hash</em>\n",null,1],["recv","BasicSocket","Rails/classes/BasicSocket.html#method-i-recv","(*args)","<p>Receives a message.\n<p><em>maxlen</em> is the maximum number of bytes to receive.\n<p><em>flags</em> should be a bitwise OR of Socket::MSG_* ...\n",null,1],["recv_io","UNIXSocket","Rails/classes/UNIXSocket.html#method-i-recv_io","(p1 = v1, p2 = v2)","<p>UNIXServer.open(“/tmp/sock”) {|serv|\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">UNIXSocket</span>.<span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;/tmp/sock&quot;</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">c</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">s</span> = <span class=\"ruby-identifier\">serv</span>.<span class=\"ruby-identifier\">accept</span>\n\n  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["recv_nonblock","BasicSocket","Rails/classes/BasicSocket.html#method-i-recv_nonblock","(*args)","<p>Receives up to <em>maxlen</em> bytes from <code>socket</code> using\nrecvfrom(2) after O_NONBLOCK is set for the underlying …\n",null,1],["recv_reply","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-i-recv_reply","()","<p>On the client side, receive a reply from the server.\n",null,1],["recv_request","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-i-recv_request","()","<p>On the server side, receive a request from the client.\n",null,1],["recvfrom","IPSocket","Rails/classes/IPSocket.html#method-i-recvfrom","(*args)","<p>Receives a message and return the message as a string and an address which\nthe message come from.\n<p><em>maxlen</em> ...\n",null,1],["recvfrom","Socket","Rails/classes/Socket.html#method-i-recvfrom","(*args)","<p>Receives up to <em>maxlen</em> bytes from <code>socket</code>.\n<em>flags</em> is zero or more of the <code>MSG_</code> options. The first\nelement …\n",null,1],["recvfrom","UNIXSocket","Rails/classes/UNIXSocket.html#method-i-recvfrom","(*args)","<p>Receives a message via <em>unixsocket</em>.\n<p><em>maxlen</em> is the maximum number of bytes to receive.\n<p><em>flags</em> should be a ...\n",null,1],["recvfrom_nonblock","Socket","Rails/classes/Socket.html#method-i-recvfrom_nonblock","(*args)","<p>Receives up to <em>maxlen</em> bytes from <code>socket</code> using\nrecvfrom(2) after O_NONBLOCK is set for the underlying …\n",null,1],["recvfrom_nonblock","UDPSocket","Rails/classes/UDPSocket.html#method-i-recvfrom_nonblock","(*args)","<p>Receives up to <em>maxlen</em> bytes from <code>udpsocket</code> using\nrecvfrom(2) after O_NONBLOCK is set for the underlying …\n",null,1],["recvmsg","BasicSocket","Rails/classes/BasicSocket.html#method-i-recvmsg","(*args)","<p>recvmsg receives a message using recvmsg(2) system call in blocking manner.\n<p><em>maxmesglen</em> is the maximum ...\n",null,1],["recvmsg_nonblock","BasicSocket","Rails/classes/BasicSocket.html#method-i-recvmsg_nonblock","(*args)","<p>recvmsg receives a message using recvmsg(2) system call in non-blocking\nmanner.\n<p>It is similar to BasicSocket#recvmsg …\n",null,1],["redefine_method","Module","Ruby/classes/Module.html#method-i-redefine_method","(method, &block)","",null,0],["redirect","ActionDispatch::Routing::Redirection","Ruby/classes/ActionDispatch/Routing/Redirection.html#method-i-redirect","(*args, &block)","<p>Redirect any path to another path:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">match</span> <span class=\"ruby-string\">&quot;/stories&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">redirect</span>(<span class=\"ruby-string\">&quot;/posts&quot;</span>)\n</pre>\n<p>You can also use interpolation …\n",null,0],["redirect?","WEBrick::HTTPStatus","Rails/classes/WEBrick/HTTPStatus.html#method-c-redirect-3F","(code)","<p>Is <code>code</code> a redirection status?\n",null,1],["redirect_to","ActionController::Flash","Ruby/classes/ActionController/Flash.html#method-i-redirect_to","(options = {}, response_status_and_flash = {})","",null,0],["redirect_to","ActionController::Instrumentation","Ruby/classes/ActionController/Instrumentation.html#method-i-redirect_to","(*args)","",null,0],["redirect_to","ActionController::LogSubscriber","Ruby/classes/ActionController/LogSubscriber.html#method-i-redirect_to","(event)","",null,0],["redirect_to","ActionController::Redirecting","Ruby/classes/ActionController/Redirecting.html#method-i-redirect_to","(options = {}, response_status = {})","<p>Redirects the browser to the target specified in <code>options</code>. This\nparameter can take one of three forms: …\n",null,0],["redirect_url","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-redirect_url","()","",null,0],["redirector","Gem::Ext::Builder","Rails/classes/Gem/Ext/Builder.html#method-c-redirector","()","",null,1],["reduce","Enumerable","Rails/classes/Enumerable.html#method-i-reduce","(p1 = v1, p2 = v2)","<p>Combines all elements of <em>enum</em> by applying a binary operation,\nspecified by a block or a symbol that names …\n",null,1],["reenable","Rake::Task","Rails/classes/Rake/Task.html#method-i-reenable","()","<p>Reenable the task, allowing its tasks to be executed if the task is invoked\nagain.\n",null,1],["ref","Mime::Type","Ruby/classes/Mime/Type.html#method-i-ref","()","",null,0],["ref","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-ref","()","<p>Returns a DL::CPtr that is a reference pointer for this DL::CPtr. Analogous\nto the ampersand operator …\n",null,1],["ref","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-ref","()","<p>Returns a DL::CPtr that is a reference pointer for this DL::CPtr. Analogous\nto the ampersand operator …\n",null,1],["reference?","Rails::Generators::GeneratedAttribute","Ruby/classes/Rails/Generators/GeneratedAttribute.html#method-i-reference-3F","()","",null,0],["references","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-references","(*args)","<p>Adds a reference. Optionally adds a <code>type</code> column, if\n<code>:polymorphic</code> option is provided. <code>references</code> and \n…\n",null,0],["references","ActiveRecord::ConnectionAdapters::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-references","(*args)","",null,0],["reflect_on_aggregation","ActiveRecord::Reflection::ClassMethods","Ruby/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_aggregation","(aggregation)","<p>Returns the AggregateReflection object for the named\n<code>aggregation</code> (use the symbol).\n\n<pre>Account.reflect_on_aggregation(:balance) ...</pre>\n",null,0],["reflect_on_all_aggregations","ActiveRecord::Reflection::ClassMethods","Ruby/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_aggregations","()","<p>Returns an array of AggregateReflection objects for all the aggregations in\nthe class.\n",null,0],["reflect_on_all_associations","ActiveRecord::Reflection::ClassMethods","Ruby/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_associations","(macro = nil)","<p>Returns an array of AssociationReflection objects for all the associations\nin the class. If you only …\n",null,0],["reflect_on_all_autosave_associations","ActiveRecord::Reflection::ClassMethods","Ruby/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_autosave_associations","()","<p>Returns an array of AssociationReflection objects for all associations\nwhich have <code>:autosave</code> enabled. …\n",null,0],["reflect_on_association","ActiveRecord::Reflection::ClassMethods","Ruby/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_association","(association)","<p>Returns the AssociationReflection object for the <code>association</code>\n(use the symbol).\n\n<pre>Account.reflect_on_association(:owner) ...</pre>\n",null,0],["refresh","ActionView::Template","Ruby/classes/ActionView/Template.html#method-i-refresh","(view)","<p>Receives a view object and return a template similar to self by using\n@virtual_path.\n<p>This method is useful …\n",null,0],["refresh","Curses","Rails/classes/Curses.html#method-c-refresh","()","<p>Refreshes the windows and lines.\n",null,1],["refresh","Curses::Window","Rails/classes/Curses/Window.html#method-i-refresh","()","<p>Refreshes the windows and lines.\n",null,1],["refresh","Gem","Rails/classes/Gem.html#method-c-refresh","()","<p>Refresh source_index from disk and clear searcher.\n",null,1],["refresh!","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-refresh-21","()","<p>Replaces the gems in the source index from specifications in the\ndirectories this source index was created …\n",null,1],["refresh_line","Readline","Rails/classes/Readline.html#method-c-refresh_line","()","<p>Clear the current input line.\n<p>Raises SecurityError exception if $SAFE is 4.\n",null,1],["regexp","MatchData","Rails/classes/MatchData.html#method-i-regexp","()","<p>Returns the regexp.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">m</span> = <span class=\"ruby-regexp\">/a.*b/</span>.<span class=\"ruby-identifier\">match</span>(<span class=\"ruby-string\">&quot;abc&quot;</span>)\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">regexp</span> <span class=\"ruby-comment\">#=&gt; /a.*b/</span>\n</pre>\n",null,1],["regexp","OptionParser::Completion","Rails/classes/OptionParser/Completion.html#method-c-regexp","(key, icase)","",null,1],["regexp","URI","Rails/classes/URI.html#method-c-regexp","(schemes = nil)","<p>Synopsis\n\n<pre>URI::regexp([match_schemes])</pre>\n<p>Args\n",null,1],["regist","DRb::ExtServManager","Rails/classes/DRb/ExtServManager.html#method-i-regist","(name, ro)","",null,1],["regist_server","DRb","Rails/classes/DRb.html#method-c-regist_server","(server)","",null,1],["register","Mime::Type","Ruby/classes/Mime/Type.html#method-c-register","(string, symbol, mime_type_synonyms = [], extension_synonyms = [], skip_lookup = false)","",null,0],["register","Gem::NoAliasYAMLTree","Rails/classes/Gem/NoAliasYAMLTree.html#method-i-register","(target, obj)","<p>Noop this out so there are no anchors\n",null,1],["register","RDoc::Markup::PreProcess","Rails/classes/RDoc/Markup/PreProcess.html#method-c-register","(directive, &block)","<p>Registers <code>directive</code> as one handled by RDoc.  If a block is\ngiven the directive will be replaced by the …\n",null,1],["register","WEBrick::Utils::TimeoutHandler","Rails/classes/WEBrick/Utils/TimeoutHandler.html#method-i-register","(thread, time, exception)","<p>Registers a new timeout handler\n<p><code>time</code> &mdash; Timeout in seconds\n<p><code>exception</code> &mdash; Exception to raise when timeout elapsed …\n",null,1],["register","WEBrick::Utils::TimeoutHandler","Rails/classes/WEBrick/Utils/TimeoutHandler.html#method-c-register","(seconds, exception)","<p>Registers a new timeout handler\n<p><code>time</code> &mdash; Timeout in seconds\n<p><code>exception</code> &mdash; Exception to raise when timeout elapsed …\n",null,1],["register_alias","Mime::Type","Ruby/classes/Mime/Type.html#method-c-register_alias","(string, symbol, extension_synonyms = [])","<p>Registers an alias that’s not used on mime type lookup, but can be\nreferenced directly. Especially useful …\n",null,0],["register_command","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-i-register_command","(command)","<p>Register the Symbol <code>command</code> as a gem command.\n",null,1],["register_css_compressor","Sprockets::Compressors","Ruby/classes/Sprockets/Compressors.html#method-c-register_css_compressor","(name, klass, options = {})","",null,0],["register_interceptor","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-c-register_interceptor","(interceptor)","<p>Register an Interceptor which will be called before mail is sent. Either a\nclass or a string can be passed …\n",null,0],["register_interceptors","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-c-register_interceptors","(*interceptors)","<p>Register one or more Interceptors which will be called before mail is sent.\n",null,0],["register_javascript_expansion","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers::ClassMethods","Ruby/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers/ClassMethods.html#method-i-register_javascript_expansion","(expansions)","<p>Register one or more javascript files to be included when\n<code>symbol</code> is passed to <code>javascript_include_tag</code> …\n",null,0],["register_js_compressor","Sprockets::Compressors","Ruby/classes/Sprockets/Compressors.html#method-c-register_js_compressor","(name, klass, options = {})","",null,0],["register_kindle_mime_types","RailsGuides::Generator","Ruby/classes/RailsGuides/Generator.html#method-i-register_kindle_mime_types","()","",null,0],["register_observer","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-c-register_observer","(observer)","<p>Register an Observer which will be notified when mail is delivered. Either\na class or a string can be …\n",null,0],["register_observers","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-c-register_observers","(*observers)","<p>Register one or more Observers which will be notified when mail is\ndelivered.\n",null,0],["register_stylesheet_expansion","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers::ClassMethods","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers/ClassMethods.html#method-i-register_stylesheet_expansion","(expansions)","<p>Register one or more stylesheet files to be included when\n<code>symbol</code> is passed to <code>stylesheet_link_tag</code>. This …\n",null,0],["register_uri","RSS::BaseListener","Rails/classes/RSS/BaseListener.html#method-c-register_uri","(uri, name)","<p>register uri against this name.\n",null,1],["registered","RDoc::Markup::PreProcess","Rails/classes/RDoc/Markup/PreProcess.html#method-c-registered","()","<p>Registered directives\n",null,1],["registered_css_compressor","Sprockets::Compressors","Ruby/classes/Sprockets/Compressors.html#method-c-registered_css_compressor","(name)","",null,0],["registered_js_compressor","Sprockets::Compressors","Ruby/classes/Sprockets/Compressors.html#method-c-registered_js_compressor","(name)","",null,0],["registry=","URI::Generic","Rails/classes/URI/Generic.html#method-i-registry-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["regular?","Matrix","Rails/classes/Matrix.html#method-i-regular-3F","()","<p>Returns <code>true</code> if this is a regular (i.e. non-singular) matrix.\n",null,1],["regular_class_path","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-regular_class_path","()","",null,0],["regular_update","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_update","(other_hash)","",null,0],["regular_update","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_update","(other_hash)","",null,0],["regular_writer","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_writer","(key, value)","",null,0],["regular_writer","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_writer","(key, value)","",null,0],["rehash","ENV","Rails/classes/ENV.html#method-c-rehash","()","<p>Re-hashing the environment variables does nothing.  It is provided for\ncompatibility with Hash.\n",null,1],["rehash","Hash","Rails/classes/Hash.html#method-i-rehash","()","<p>Rebuilds the hash based on the current hash values for each key. If values\nof key objects have changed …\n",null,1],["rehash","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-rehash","()","<p>ProcessCommand#rehash\n\n<pre>clear command hash table.</pre>\n",null,1],["reinit_with","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-i-reinit_with","(coder)","<p>Reinitialize an Identity Map model object from <code>coder</code>.\n<code>coder</code> must contain the attributes necessary for …\n",null,0],["reject","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-reject","(&block)","",null,0],["reject","Array","Rails/classes/Array.html#method-i-reject","()","<p>Returns a new array containing the items in <code>self</code> for which the\nblock is not true. See also <code>Array#delete_if</code> …\n",null,1],["reject","DBM","Rails/classes/DBM.html#method-i-reject","()","<p>Converts the contents of the database to an in-memory Hash, then calls\nHash#reject with the specified …\n",null,1],["reject","ENV","Rails/classes/ENV.html#method-c-reject","()","<p>Same as ENV#delete_if, but works on (and returns) a copy of the\nenvironment.\n",null,1],["reject","Enumerable","Rails/classes/Enumerable.html#method-i-reject","()","<p>Returns an array for all elements of <em>enum</em> for which <em>block</em>\nis false (see also <code>Enumerable#find_all</code>).\n<p>If …\n",null,1],["reject","GDBM","Rails/classes/GDBM.html#method-i-reject","()","<p>Returns a hash copy of <em>gdbm</em> where all key-value pairs from\n<em>gdbm</em> for which <em>block</em> evaluates to true are …\n",null,1],["reject","Hash","Rails/classes/Hash.html#method-i-reject","()","<p>Same as <code>Hash#delete_if</code>, but works on (and returns) a copy of\nthe <em>hsh</em>. Equivalent to <code><em>hsh</em>.dup.delete_if</code> …\n",null,1],["reject","OptionParser","Rails/classes/OptionParser.html#method-i-reject","(*args, &blk)","<p>Directs to reject specified class argument.\n<p><code>t</code> &mdash; Argument class specifier, any object including Class.\n\n\n<pre>reject(t)</pre>\n",null,1],["reject","OptionParser","Rails/classes/OptionParser.html#method-c-reject","(*args, &blk)","<p>See #reject.\n",null,1],["reject","OptionParser::List","Rails/classes/OptionParser/List.html#method-i-reject","(t)","<p>See OptionParser.reject.\n",null,1],["reject","SDBM","Rails/classes/SDBM.html#method-i-reject","()","",null,1],["reject","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-reject","()","<p>Converts the contents of the database to an in-memory Hash, then calls\nHash#reject with the specified …\n",null,1],["reject!","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-reject-21","()","",null,0],["reject!","Array","Rails/classes/Array.html#method-i-reject-21","()","<p>Equivalent to <code>Array#delete_if</code>, deleting elements from\n<code>self</code> for which the block evaluates to true, but …\n",null,1],["reject!","DBM","Rails/classes/DBM.html#method-i-reject-21","()","<p>Deletes all entries for which the code block returns true. Returns self.\n",null,1],["reject!","ENV","Rails/classes/ENV.html#method-c-reject-21","()","<p>Equivalent to ENV#delete_if but returns <code>nil</code> if no changes were\nmade.\n<p>Returns an Enumerator if no block …\n",null,1],["reject!","GDBM","Rails/classes/GDBM.html#method-i-reject-21","()","<p>Deletes every key-value pair from <em>gdbm</em> for which <em>block</em>\nevaluates to true.\n",null,1],["reject!","Hash","Rails/classes/Hash.html#method-i-reject-21","()","<p>Equivalent to <code>Hash#delete_if</code>, but returns <code>nil</code> if\nno changes were made.\n",null,1],["reject!","SDBM","Rails/classes/SDBM.html#method-i-reject-21","()","",null,1],["reject!","Set","Rails/classes/Set.html#method-i-reject-21","()","<p>Equivalent to Set#delete_if, but returns nil if no changes were made.\n",null,1],["relative?","Pathname","Rails/classes/Pathname.html#method-i-relative-3F","()","<p>The opposite of #absolute?\n",null,1],["relative?","URI::Generic","Rails/classes/URI/Generic.html#method-i-relative-3F","()","<p>Checks if URI is relative\n",null,1],["relative_path_from","Pathname","Rails/classes/Pathname.html#method-i-relative_path_from","(base_directory)","<p>#relative_path_from returns a relative path from the argument to the\nreceiver.  If <code>self</code> is absolute, …\n",null,1],["release","Gem::Version","Rails/classes/Gem/Version.html#method-i-release","()","<p>The release for this version (e.g. 1.2.0.a -&gt; 1.2.0). Non-prerelease\nversions return themselves.\n",null,1],["release","OptionParser","Rails/classes/OptionParser.html#method-i-release","()","<p>Release code\n",null,1],["release_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-release_connection","(with_id = current_connection_id)","<p>Signal that the thread is finished with the current connection.\n#release_connection releases the connection-thread …\n",null,0],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-release_savepoint","()","",null,0],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-release_savepoint","()","",null,0],["release_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-release_savepoint","()","",null,0],["release_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-release_savepoint","()","",null,0],["released_gems","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-released_gems","()","",null,1],["released_specs","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-released_specs","()","<p>An array including only the released gemspecs\n",null,1],["reload","ActiveRecord::AutosaveAssociation","Ruby/classes/ActiveRecord/AutosaveAssociation.html#method-i-reload","(options = nil)","<p>Reloads the attributes of the object as usual and clears\n<code>marked_for_destruction</code> flag.\n",null,0],["reload","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-reload","(options = nil)","<p>Reloads the attributes of this object from the database. The optional\noptions argument is passed to find …\n",null,0],["reload","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-reload","()","",null,0],["reload","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-reload","()","<p>A method to reload the attributes of this object from the remote web\nservice.\n<p>Examples\n\n<pre>my_branch = Branch.find(:first) ...</pre>\n",null,0],["reload","DRb::DRbUnknown","Rails/classes/DRb/DRbUnknown.html#method-i-reload","()","<p>Attempt to load the wrapped marshalled object again.\n<p>If the class of the object is now known locally, …\n",null,1],["reload","WEBrick::HTTPAuth::Htdigest","Rails/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-reload","()","<p>Reloads passwords from the database\n",null,1],["reload","WEBrick::HTTPAuth::Htgroup","Rails/classes/WEBrick/HTTPAuth/Htgroup.html#method-i-reload","()","<p>Reload groups from the database\n",null,1],["reload","WEBrick::HTTPAuth::Htpasswd","Rails/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-reload","()","<p>Reload passwords from the database\n",null,1],["reload!","Rails::Application::RoutesReloader","Ruby/classes/Rails/Application/RoutesReloader.html#method-i-reload-21","()","",null,0],["reload!","Rails::ConsoleMethods","Ruby/classes/Rails/ConsoleMethods.html#method-i-reload-21","(print=true)","<p>reloads the environment\n",null,0],["reload_dependencies?","Rails::Application","Ruby/classes/Rails/Application.html#method-i-reload_dependencies-3F","()","",null,0],["reload_routes!","Rails::Application","Ruby/classes/Rails/Application.html#method-i-reload_routes-21","()","<p>Reload application routes regardless if they changed or not.\n",null,0],["reloader","I18n::Railtie","Ruby/classes/I18n/Railtie.html#method-c-reloader","()","",null,0],["reloader_paths","I18n::Railtie","Ruby/classes/I18n/Railtie.html#method-c-reloader_paths","()","",null,0],["remainder","BigDecimal","Rails/classes/BigDecimal.html#method-i-remainder","(p1)","<p>Returns the remainder from dividing by the value.\n<p>x.remainder(y) means x-y*(x/y).truncate\n",null,1],["remainder","Bignum","Rails/classes/Bignum.html#method-i-remainder","(p1)","<p>Returns the remainder after dividing <em>big</em> by <em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-1234567890987654321</span>.<span class=\"ruby-identifier\">remainder</span>(<span class=\"ruby-value\">13731</span>)      <span class=\"ruby-comment\">#=&gt; -6966 ...</span>\n</pre>\n",null,1],["remainder","Numeric","Rails/classes/Numeric.html#method-i-remainder","(p1)","\n<pre>x.remainder(y) means x-y*(x/y).truncate</pre>\n<p>See <code>Numeric#divmod</code>.\n",null,1],["remote?","Gem::LocalRemoteOptions","Rails/classes/Gem/LocalRemoteOptions.html#method-i-remote-3F","()","<p>Is remote fetching enabled?\n",null,1],["remote_address","BasicSocket","Rails/classes/BasicSocket.html#method-i-remote_address","()","<p>Returns an Addrinfo object for remote address obtained by getpeername.\n<p>Note that addrinfo.protocol is …\n",null,1],["remote_ip","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-remote_ip","()","<p>Originating IP address, usually set by the RemoteIp middleware.\n",null,0],["remote_ip","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-remote_ip","()","<p>The client’s IP address\n",null,1],["remove","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove","(*column_names)","<p>Removes the column(s) from the table definition.\n<p>Examples\n\n<pre>t.remove(:qualification)\nt.remove(:qualification, ...</pre>\n",null,0],["remove","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-remove","(record)","",null,0],["remove","FileUtils","Rails/classes/FileUtils.html#method-c-remove","(list, options = {})","",null,1],["remove","Gem::Uninstaller","Rails/classes/Gem/Uninstaller.html#method-i-remove","(spec)","<p>spec &mdash; the spec of the gem to be uninstalled\n<p>list &mdash; the list of all such gems\n\n<p>Warning: this method modifies …\n",null,1],["remove","OptionParser","Rails/classes/OptionParser.html#method-i-remove","()","<p>Removes the last List.\n",null,1],["remove","RDoc::RubygemsHook","Rails/classes/RDoc/RubygemsHook.html#method-i-remove","()","<p>Removes generated RDoc and ri data\n",null,1],["remove","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-remove","()","<p>Removes this Attribute from the tree, and returns true if successfull\n<p>This method is usually not called …\n",null,1],["remove","REXML::Child","Rails/classes/REXML/Child.html#method-i-remove","()","<p>Removes this child from the parent.\n<p>Returns &mdash; self\n\n",null,1],["removeChild","NQXML::Node","Rails/classes/NQXML/Node.html#method-i-removeChild","(node)","",null,1],["remove_all","Gem::Uninstaller","Rails/classes/Gem/Uninstaller.html#method-i-remove_all","(list)","<p>Removes all gems in <code>list</code>.\n<p>NOTE: removes uninstalled gems from <code>list</code>.\n",null,1],["remove_belongs_to","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_belongs_to","(*args)","",null,0],["remove_by_id","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-remove_by_id","(symbolized_sti_name, id)","",null,0],["remove_by_name","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-remove_by_name","(full_name)","<p>Removes the gemspec matching <code>full_name</code> from the dependency\nlist\n",null,1],["remove_callback","DL","Rails/classes/DL.html#method-i-remove_callback","(addr, ctype = nil)","",null,1],["remove_callback_internal","DL","Rails/classes/DL.html#method-i-remove_callback_internal","(proc_entry, addr_entry, addr, ctype = nil)","",null,1],["remove_cdecl_callback","DL","Rails/classes/DL.html#method-i-remove_cdecl_callback","(addr, ctype = nil)","",null,1],["remove_class_variable","Module","Rails/classes/Module.html#method-i-remove_class_variable","(p1)","<p>Removes the definition of the <em>sym</em>, returning that constant’s\nvalue.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Dummy</span>\n  <span class=\"ruby-identifier\">@@var</span> = <span class=\"ruby-value\">99</span>\n  <span class=\"ruby-identifier\">puts</span> <span class=\"ruby-identifier\">@@var</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["remove_coding_comment","RDoc::Parser::Simple","Rails/classes/RDoc/Parser/Simple.html#method-i-remove_coding_comment","(text)","<p>Removes the encoding magic comment from <code>text</code>\n",null,1],["remove_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_column","(table_name, *column_names)","<p>Removes the column(s) from the table definition.\n<p>Examples\n\n<pre>remove_column(:suppliers, :qualification)\nremove_columns(:suppliers, ...</pre>\n",null,0],["remove_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-remove_column_sql","(table_name, *column_names)","",null,0],["remove_columns","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_columns","(table_name, *column_names)","",null,0],["remove_commented_out_lines","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-remove_commented_out_lines","()","<p>Removes lines that are commented out that might otherwise get picked up\nwhen scanning for classes and …\n",null,1],["remove_connection","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-remove_connection","(klass = self)","",null,0],["remove_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-remove_connection","(klass)","<p>Remove the connection for this class. This will close the active connection\nand the defined connection …\n",null,0],["remove_dir","FileUtils","Rails/classes/FileUtils.html#method-c-remove_dir","(path, force = false)","<p>Removes a directory <code>dir</code> and its contents recursively. This\nmethod ignores StandardError if <code>force</code> is true. …\n",null,1],["remove_entry","FileUtils","Rails/classes/FileUtils.html#method-c-remove_entry","(path, force = false)","<p>This method removes a file system entry <code>path</code>.\n<code>path</code> might be a regular file, a directory, or something. …\n",null,1],["remove_entry_secure","FileUtils","Rails/classes/FileUtils.html#method-c-remove_entry_secure","(path, force = false)","<p>This method removes a file system entry <code>path</code>. \n<code>path</code> shall be a regular file, a directory, or something. …\n",null,1],["remove_executables","Gem::Uninstaller","Rails/classes/Gem/Uninstaller.html#method-i-remove_executables","(spec)","<p>Removes installed executables and batch files (windows only) for\n<code>gemspec</code>.\n",null,1],["remove_file","FileUtils","Rails/classes/FileUtils.html#method-c-remove_file","(path, force = false)","<p>Removes a file <code>path</code>. This method ignores StandardError if\n<code>force</code> is true.\n",null,1],["remove_filters!","ActiveSupport::BacktraceCleaner","Ruby/classes/ActiveSupport/BacktraceCleaner.html#method-i-remove_filters-21","()","",null,0],["remove_from_documentation?","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-remove_from_documentation-3F","()","<p>Should we remove this context from the documentation?\n<p>The answer is yes if:\n<p>#received_nodoc is <code>true</code>\n",null,1],["remove_handler","WEBrick::HTTPServlet::FileHandler","Rails/classes/WEBrick/HTTPServlet/FileHandler.html#method-c-remove_handler","(suffix)","<p>Remove custom handling of requests for files with <code>suffix</code>\n",null,1],["remove_hook_for","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-remove_hook_for","(*names)","<p>Remove a previously added hook.\n<p>Examples\n\n<pre>remove_hook_for :orm</pre>\n",null,0],["remove_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_index","(table_name, options = {})","<p>Remove the given index from the table.\n<p>Remove the index_accounts_on_column in the accounts table.\n\n<pre>remove_index ...</pre>\n",null,0],["remove_index","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_index","(options = {})","<p>Removes the given index from the table.\n<p>Examples\n<p>Remove the index_table_name_on_column in the table_name …\n",null,0],["remove_index_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-remove_index_sql","(table_name, options = {})","",null,0],["remove_invisible","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-remove_invisible","(min_visibility)","<p>Removes methods and attributes with a visibility less than\n<code>min_visibility</code>.\n",null,1],["remove_leading_dot_dir","Gem::Validator","Rails/classes/Gem/Validator.html#method-i-remove_leading_dot_dir","(path)","",null,1],["remove_multiparameter_id","ActiveModel::MassAssignmentSecurity::PermissionSet","Ruby/classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#method-i-remove_multiparameter_id","(key)","",null,0],["remove_nodoc","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-remove_nodoc","(all_hash)","<p>Removes from <code>all_hash</code> the contexts that are nodoc or have no\ncontent.\n<p>See RDoc::Context#remove_from_documentation? …\n",null,1],["remove_nodoc_children","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-remove_nodoc_children","()","<p>Updates the child modules or classes of class/module <code>parent</code> by\ndeleting the ones that have been removed …\n",null,1],["remove_old_bin_files","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-i-remove_old_bin_files","(bin_dir)","",null,1],["remove_option","Gem::Command","Rails/classes/Gem/Command.html#method-i-remove_option","(name)","<p>Remove previously defined command-line argument <code>name</code>.\n",null,1],["remove_owners","Gem::Commands::OwnerCommand","Rails/classes/Gem/Commands/OwnerCommand.html#method-i-remove_owners","(name, owners)","",null,1],["remove_possible_method","Module","Ruby/classes/Module.html#method-i-remove_possible_method","(method)","",null,0],["remove_private_comments","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-remove_private_comments","(comment)","<p>Removes private comments from <code>comment</code>\n",null,1],["remove_private_comments","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-remove_private_comments","(comment)","<p>Removes private comments from <code>comment</code>\n",null,1],["remove_private_comments","RDoc::Parser::Simple","Rails/classes/RDoc/Parser/Simple.html#method-i-remove_private_comments","(text)","<p>Removes comments wrapped in <code>--/++</code>\n",null,1],["remove_references","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_references","(*args)","<p>Removes a reference. Optionally removes a <code>type</code> column.\n<code>remove_references</code> and <code>remove_belongs_to</code> are\nacceptable. …\n",null,0],["remove_response_handler","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-remove_response_handler","(handler)","<p>Removes the response handler.\n",null,1],["remove_root","ActiveResource::Formats","Ruby/classes/ActiveResource/Formats.html#method-c-remove_root","(data)","",null,0],["remove_server","DRb","Rails/classes/DRb.html#method-c-remove_server","(server)","",null,1],["remove_siginfo_handler","RDoc::Generator::RI","Rails/classes/RDoc/Generator/RI.html#method-i-remove_siginfo_handler","()","<p>Removes a siginfo handler and replaces the previous\n",null,1],["remove_siginfo_handler","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-remove_siginfo_handler","()","<p>Removes a siginfo handler and replaces the previous\n",null,1],["remove_silencers!","ActiveSupport::BacktraceCleaner","Ruby/classes/ActiveSupport/BacktraceCleaner.html#method-i-remove_silencers-21","()","<p>Will remove all silencers, but leave in the filters. This is useful if your\ncontext of debugging suddenly …\n",null,0],["remove_spec","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-remove_spec","(full_name)","<p>Remove a gem specification named <code>full_name</code>.\n",null,1],["remove_spec","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-remove_spec","(spec)","<p>Removes <code>spec</code> from the known specs.\n",null,1],["remove_specs_unsatisfied_by","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-remove_specs_unsatisfied_by","(dependencies)","<p>Remove everything in the DependencyList that matches but doesn’t satisfy\nitems in <code>dependencies</code> (a hash …\n",null,1],["remove_stdcall_callback","DL","Rails/classes/DL.html#method-i-remove_stdcall_callback","(addr, ctype = nil)","",null,1],["remove_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_timestamps","(table_name)","<p>Removes the timestamp columns (created_at and updated_at) from the table\ndefinition.\n<p>Examples\n\n<pre>remove_timestamps(:suppliers)</pre>\n",null,0],["remove_timestamps","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_timestamps","()","<p>Removes the timestamp columns (<code>created_at</code> and\n<code>updated_at</code>) from the table.\n<p>Example\n\n<pre>t.remove_timestamps</pre>\n",null,0],["remove_timestamps_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-remove_timestamps_sql","(table_name)","",null,0],["remove_token_listener","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-remove_token_listener","(obj)","<p>Removes the token listener <code>obj</code>\n",null,1],["remove_unparseable","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-remove_unparseable","(files)","<p>Removes file extensions known to be unparseable from <code>files</code>\n",null,1],["rename","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-rename","(column_name, new_column_name)","<p>Renames a column.\n<p>Example\n\n<pre>t.rename(:description, :name)</pre>\n",null,0],["rename","File","Rails/classes/File.html#method-c-rename","(p1, p2)","<p>Renames the given file to the new name. Raises a\n<code>SystemCallError</code> if the file cannot be renamed.\n\n<pre>File.rename(&quot;afile&quot;, ...</pre>\n",null,1],["rename","Net::FTP","Rails/classes/Net/FTP.html#method-i-rename","(fromname, toname)","<p>Renames a file on the server.\n",null,1],["rename","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-rename","(mailbox, newname)","<p>Sends a RENAME command to change the name of the <code>mailbox</code> to\n<code>newname</code>.\n<p>A Net::IMAP::NoResponseError is raised …\n",null,1],["rename","Pathname","Rails/classes/Pathname.html#method-i-rename","(p1)","<p>See <code>File.rename</code>.  Rename the file.\n",null,1],["rename_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-rename_column","(table_name, column_name, new_column_name)","<p>Renames a column in a table.\n",null,0],["rename_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_column","(table_name, column_name, new_column_name)","<p>Renames a column.\n<p>Example\n\n<pre>rename_column(:suppliers, :description, :name)</pre>\n",null,0],["rename_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rename_column_sql","(table_name, column_name, new_column_name)","",null,0],["rename_index","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-rename_index","(table_name, old_name, new_name)","",null,0],["rename_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_index","(table_name, old_name, new_name)","<p>Rename an index.\n<p>Rename the index_people_on_last_name index to index_users_on_last_name\n\n<pre>rename_index :people, ...</pre>\n",null,0],["rename_key","ActiveSupport::XmlMini","Ruby/classes/ActiveSupport/XmlMini.html#method-i-rename_key","(key, options = {})","",null,0],["rename_table","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table.\n<p>Example:\n\n<pre>rename_table('octopuses', 'octopi')</pre>\n",null,0],["rename_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-rename_table","(name, new_name)","<p>Renames a table. Also renames a table’s primary key sequence if the\nsequence name matches the Active …\n",null,0],["rename_table","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-rename_table","(name, new_name)","<p>Renames a table.\n<p>Example:\n\n<pre>rename_table('octopuses', 'octopi')</pre>\n",null,0],["rename_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table.\n<p>Example\n\n<pre>rename_table('octopuses', 'octopi')</pre>\n",null,0],["render","AbstractController::Rendering","Ruby/classes/AbstractController/Rendering.html#method-i-render","(*args, &block)","<p>Normalize arguments, options and then delegates render_to_body and sticks\nthe result in self.response_body. …\n",null,0],["render","ActionController::Instrumentation","Ruby/classes/ActionController/Instrumentation.html#method-i-render","(*args)","",null,0],["render","ActionView::Helpers::RenderingHelper","Ruby/classes/ActionView/Helpers/RenderingHelper.html#method-i-render","(options = {}, locals = {}, &block)","<p>Returns the result of a render that’s dictated by the options hash. The\nprimary options are:\n<p><code>:partial</code> ...\n",null,0],["render","ActionView::PartialRenderer","Ruby/classes/ActionView/PartialRenderer.html#method-i-render","(context, options, block)","",null,0],["render","ActionView::Renderer","Ruby/classes/ActionView/Renderer.html#method-i-render","(context, options)","<p>Main render entry point shared by AV and AC.\n",null,0],["render","ActionView::Template","Ruby/classes/ActionView/Template.html#method-i-render","(view, locals, buffer=nil, &block)","<p>Render a template. If the template was not compiled yet, it is done exactly\nbefore rendering.\n<p>This method …\n",null,0],["render_body","ActionView::Renderer","Ruby/classes/ActionView/Renderer.html#method-i-render_body","(context, options)","<p>Render but returns a valid Rack body. If fibers are defined, we return a\nstreaming body that renders …\n",null,0],["render_collection","ActionView::LogSubscriber","Ruby/classes/ActionView/LogSubscriber.html#method-i-render_collection","(event)","",null,0],["render_collection","ActionView::PartialRenderer","Ruby/classes/ActionView/PartialRenderer.html#method-i-render_collection","()","",null,0],["render_partial","ActionView::LogSubscriber","Ruby/classes/ActionView/LogSubscriber.html#method-i-render_partial","(event)","",null,0],["render_partial","ActionView::PartialRenderer","Ruby/classes/ActionView/PartialRenderer.html#method-i-render_partial","()","",null,0],["render_template","ActionView::LogSubscriber","Ruby/classes/ActionView/LogSubscriber.html#method-i-render_template","(event)","",null,0],["render_template","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-render_template","(template_file, out_file)","<p>Load and render the erb template in the given <code>template_file</code>\nand write it out to <code>out_file</code>.\n<p>Both <code>template_file</code> …\n",null,1],["render_to_body","AbstractController::Rendering","Ruby/classes/AbstractController/Rendering.html#method-i-render_to_body","(options = {})","<p>Raw rendering of a template to a Rack-compatible body. :api: plugin\n",null,0],["render_to_body","ActionController::Compatibility","Ruby/classes/ActionController/Compatibility.html#method-i-render_to_body","(options)","",null,0],["render_to_body","ActionController::Renderers","Ruby/classes/ActionController/Renderers.html#method-i-render_to_body","(options)","",null,0],["render_to_string","AbstractController::Rendering","Ruby/classes/AbstractController/Rendering.html#method-i-render_to_string","(*args, &block)","<p>Raw rendering of a template to a string. Just convert the results of\nrender_response into a String. :api: …\n",null,0],["render_to_string","ActionController::Rendering","Ruby/classes/ActionController/Rendering.html#method-i-render_to_string","(*)","<p>Overwrite render_to_string because body can now be set to a rack body.\n",null,0],["renew","Rinda::SimpleRenewer","Rails/classes/Rinda/SimpleRenewer.html#method-i-renew","()","<p>Called by the TupleSpace to check if the object is still alive.\n",null,1],["renew","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-renew","(sec_or_renewer)","<p>Reset the expiry time according to <code>sec_or_renewer</code>.\n<p><code>nil</code> &mdash; it is set to expire in the far future.\n<p><code>false</code> &mdash; it …\n",null,1],["reopen","IO","Rails/classes/IO.html#method-i-reopen","(p1, p2 = v2)","<p>Reassociates <em>ios</em> with the I/O stream given in <em>other_IO</em> or\nto a new stream opened on <em>path</em>. This may dynamically …\n",null,1],["reopen","StringIO","Rails/classes/StringIO.html#method-i-reopen","(*args)","<p>Reinitializes <strong>strio</strong> with the given <em>other_StrIO</em> or\n<em>string</em> and <em>mode</em> (see StringIO#new).\n",null,1],["reopen","Syslog","Rails/classes/Syslog.html#method-c-reopen","(*args)","<p>Closes and then reopens the syslog.\n<p>Arguments are the same as for open().\n",null,1],["reorder","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-reorder","(*args)","<p>Replaces any existing order defined on the relation with the specified\norder.\n\n<pre>User.order('email DESC').reorder('id ...</pre>\n",null,0],["reorder_characters","ActiveSupport::Multibyte::Unicode","Ruby/classes/ActiveSupport/Multibyte/Unicode.html#method-i-reorder_characters","(codepoints)","<p>Re-order codepoints so the string becomes canonical.\n",null,0],["reorganize","GDBM","Rails/classes/GDBM.html#method-i-reorganize","()","<p>Reorganizes the database file. This operation removes reserved space of\nelements that have already been …\n",null,1],["repair_command","Rake::AltSystem","Rails/classes/Rake/AltSystem.html#method-i-repair_command","(cmd)","",null,1],["repeated_combination","Array","Rails/classes/Array.html#method-i-repeated_combination","(p1)","<p>When invoked with a block, yields all repeated combinations of length\n<em>n</em> of elements from <em>ary</em> and then …\n",null,1],["repeated_permutation","Array","Rails/classes/Array.html#method-i-repeated_permutation","(p1)","<p>When invoked with a block, yield all repeated permutations of length\n<em>n</em> of the elements of <em>ary</em>, then return …\n",null,1],["replace","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-replace","(other)","<p>When replacing with another hash, the initial order of our keys must come\nfrom the other hash -ordered …\n",null,0],["replace","Array","Rails/classes/Array.html#method-i-replace","(p1)","<p>Replaces the contents of <code>self</code> with the contents of\n<em>other_ary</em>, truncating or expanding if necessary.\n\n<pre>a ...</pre>\n",null,1],["replace","DBM","Rails/classes/DBM.html#method-i-replace","(p1)","<p>Replaces the contents of the database with the contents of the specified\nobject. Takes any object which …\n",null,1],["replace","ENV","Rails/classes/ENV.html#method-c-replace","(p1)","<p>Replaces the contents of the environment variables with the contents of\n<code>hash</code>.\n",null,1],["replace","GDBM","Rails/classes/GDBM.html#method-i-replace","(p1)","<p>Replaces the content of <em>gdbm</em> with the key-value pairs of\n<em>other</em>. <em>other</em> must have an each_pair method. …\n",null,1],["replace","Hash","Rails/classes/Hash.html#method-i-replace","(p1)","<p>Replaces the contents of <em>hsh</em> with the contents of\n<em>other_hash</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">replace</span>({ <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["replace","SDBM","Rails/classes/SDBM.html#method-i-replace","(p1)","",null,1],["replace","Set","Rails/classes/Set.html#method-i-replace","(enum)","<p>Replaces the contents of the set with the contents of the given enumerable\nobject and returns self.\n",null,1],["replace","String","Rails/classes/String.html#method-i-replace","(p1)","<p>Replaces the contents and taintedness of <em>str</em> with the\ncorresponding values in <em>other_str</em>.\n\n<pre>s = &quot;hello&quot;  ...</pre>\n",null,1],["replace","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-replace","( hsh )","<p>Replaces the contents of the database with the contents of the specified\nobject. Takes any object which …\n",null,1],["replace_child","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-replace_child","( to_replace, replacement )","<p>Replaces one child with another, making sure the nodelist is correct @param\nto_replace the child to replace …\n",null,1],["replace_with","REXML::Child","Rails/classes/REXML/Child.html#method-i-replace_with","( child )","<p>Replaces this object with another object.  Basically, calls\nParent.replace_child\n<p>Returns &mdash; self\n\n",null,1],["replacement","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-replacement","()","<p>Returns the replacement string.\n\n<pre>ec = Encoding::Converter.new(&quot;euc-jp&quot;, &quot;us-ascii&quot;)\np ec.replacement   ...</pre>\n",null,1],["replacement=","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-replacement-3D","(p1)","<p>Sets the replacement string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ec</span> = <span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Converter</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;utf-8&quot;</span>, <span class=\"ruby-string\">&quot;us-ascii&quot;</span>, :<span class=\"ruby-keyword\">undef</span> =<span class=\"ruby-operator\">&gt;</span> :<span class=\"ruby-identifier\">replace</span>)\n<span class=\"ruby-identifier\">ec</span>.<span class=\"ruby-identifier\">replacement</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["replicate","Encoding","Rails/classes/Encoding.html#method-i-replicate","(p1)","<p>Returns a replicated encoding of <em>enc</em> whose name is <em>name</em>.\nThe new encoding should have the same byte structure …\n",null,1],["reply","Socket::UDPSource","Rails/classes/Socket/UDPSource.html#method-i-reply","(msg)","<p>Sends the String <code>msg</code> to the source\n",null,1],["reply_service","Rinda::RingServer","Rails/classes/Rinda/RingServer.html#method-i-reply_service","()","<p>Creates a thread that notifies waiting clients from the TupleSpace.\n",null,1],["report","GC::Profiler","Rails/classes/GC/Profiler.html#method-c-report","(p1 = v1)","<p>Writes the GC::Profiler#result to <code>$stdout</code> or the given IO\nobject.\n",null,1],["report","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-report","()","<p>Returns a report on which items are not documented\n",null,1],["report_attributes","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-report_attributes","(cm)","<p>Returns a report on undocumented attributes in ClassModule <code>cm</code>\n",null,1],["report_class_module","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-report_class_module","(cm)","<p>Returns a report on undocumented items in ClassModule <code>cm</code>\n",null,1],["report_constants","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-report_constants","(cm)","<p>Returns a report on undocumented constants in ClassModule <code>cm</code>\n",null,1],["report_methods","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-report_methods","(cm)","<p>Returns a report on undocumented methods in ClassModule <code>cm</code>\n",null,1],["repository","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-repository","()","",null,0],["represent_map","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-represent_map","(tag, map)","<p>Emit a sequence with <code>map</code> and <code>tag</code>\n",null,1],["represent_object","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-represent_object","(tag, obj)","<p>Emit an arbitrary object <code>obj</code> and <code>tag</code>\n",null,1],["represent_scalar","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-represent_scalar","(tag, value)","<p>Emit a scalar with <code>value</code> and <code>tag</code>\n",null,1],["represent_seq","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-represent_seq","(tag, list)","<p>Emit a sequence with <code>list</code> and <code>tag</code>\n",null,1],["request","ActiveResource::LogSubscriber","Ruby/classes/ActiveResource/LogSubscriber.html#method-i-request","(event)","",null,0],["request","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-request","(uri, request_class, last_modified = nil)","<p>Performs a Net::HTTP request of type <code>request_class</code> on\n<code>uri</code> returning a Net::HTTP response object.  request …\n",null,1],["request","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-request","(req, body = nil)","<p>Sends an HTTPRequest object <code>req</code> to the HTTP server.\n<p>If <code>req</code> is a Net::HTTP::Post or Net::HTTP::Put request …\n",null,1],["request","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-request","(req, body = nil)","<p>Sends an HTTPRequest object <code>req</code> to the HTTP server.\n<p>If <code>req</code> is a Net::HTTP::Post or Net::HTTP::Put request …\n",null,1],["request_body_permitted?","Net::HTTPGenericRequest","Rails/classes/Net/HTTPGenericRequest.html#method-i-request_body_permitted-3F","()","",null,1],["request_get","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-request_get","(path, initheader = nil)","<p>Sends a GET request to the <code>path</code>. Returns the response as a\nNet::HTTPResponse object.\n<p>When called with …\n",null,1],["request_get","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-request_get","(path, initheader = nil)","<p>Sends a GET request to the <code>path</code>. Returns the response as a\nNet::HTTPResponse object.\n<p>When called with …\n",null,1],["request_head","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-request_head","(path, initheader = nil, &block)","<p>Sends a HEAD request to the <code>path</code> and returns the response as a\nNet::HTTPResponse object.\n<p>Returns the response. …\n",null,1],["request_head","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-request_head","(path, initheader = nil, &block)","<p>Sends a HEAD request to the <code>path</code> and returns the response as a\nNet::HTTPResponse object.\n<p>Returns the response. …\n",null,1],["request_http_basic_authentication","ActionController::HttpAuthentication::Basic::ControllerMethods","Ruby/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-request_http_basic_authentication","(realm = \"Application\")","",null,0],["request_http_digest_authentication","ActionController::HttpAuthentication::Digest::ControllerMethods","Ruby/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-request_http_digest_authentication","(realm = \"Application\", message = nil)","<p>Render output including the HTTP Digest authentication header\n",null,0],["request_http_token_authentication","ActionController::HttpAuthentication::Token::ControllerMethods","Ruby/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-request_http_token_authentication","(realm = \"Application\")","",null,0],["request_method","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-request_method","()","<p>Returns the HTTP method that the application should see. In the case where\nthe method was overridden …\n",null,0],["request_method_symbol","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-request_method_symbol","()","<p>Returns a symbol form of the #request_method\n",null,0],["request_parameters","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-request_parameters","()","",null,0],["request_post","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-request_post","(path, data, initheader = nil)","<p>Sends a POST request to the <code>path</code>.\n<p>Returns the response as a Net::HTTPResponse object.\n<p>When called with …\n",null,1],["request_post","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-request_post","(path, data, initheader = nil)","<p>Sends a POST request to the <code>path</code>.\n<p>Returns the response as a Net::HTTPResponse object.\n<p>When called with …\n",null,1],["request_uri","URI::HTTP","Rails/classes/URI/HTTP.html#method-i-request_uri","()","<p>Description\n<p>Returns the full path for an HTTP request, as required by Net::HTTP::Get.\n<p>If the URI contains …\n",null,1],["requests","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-c-requests","()","",null,0],["requests","ActiveResource::HttpMock","Ruby/classes/ActiveResource/HttpMock.html#method-c-requests","()","<p>Returns an array of all request objects that have been sent to the mock.\nYou can use this to check if …\n",null,0],["require","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-require","(file, priv = nil)","",null,1],["require_engine","ActionView::Template::Handlers::Builder","Ruby/classes/ActionView/Template/Handlers/Builder.html#method-i-require_engine","()","",null,0],["require_fixture_classes","ActiveRecord::TestFixtures::ClassMethods","Ruby/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-require_fixture_classes","(fixture_names = nil)","",null,0],["require_path","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-require_path","()","<p>Singular accessor for #require_paths\n",null,1],["require_path=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-require_path-3D","(path)","<p>Singular accessor for #require_paths\n",null,1],["require_path_info?","XMLRPC::WEBrickServlet","Rails/classes/XMLRPC/WEBrickServlet.html#method-i-require_path_info-3F","()","<p>deprecated from WEBrick/1.2.2. but does not break anything.\n",null,1],["require_relative","Kernel","Rails/classes/Kernel.html#method-i-require_relative","(p1)","<p>Ruby tries to load the library named <em>string</em> relative to the\nrequiring file’s path.  If the file’s path …\n",null,1],["require_tzinfo","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-c-require_tzinfo","()","",null,0],["required_attribute?","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-required_attribute-3F","(name)","<p>Is <code>name</code> a required attribute?\n",null,1],["required_attributes","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-required_attributes","()","<p>Required specification attributes\n",null,1],["required_location","Gem","Rails/classes/Gem.html#method-c-required_location","(gemname, libfile, *requirements)","<p>Full path to <code>libfile</code> in <code>gemname</code>.  Searches for\nthe latest gem unless <code>requirements</code> is given.\n",null,1],["required_prefix","RSS::Element","Rails/classes/RSS/Element.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::ITunesChannelModel::ITunesCategory","Rails/classes/RSS/ITunesChannelModel/ITunesCategory.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::ITunesChannelModel::ITunesImage","Rails/classes/RSS/ITunesChannelModel/ITunesImage.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::ITunesChannelModel::ITunesOwner","Rails/classes/RSS/ITunesChannelModel/ITunesOwner.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::ImageFaviconModel::ImageFavicon","Rails/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::ImageItemModel::ImageItem","Rails/classes/RSS/ImageItemModel/ImageItem.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::TaxonomyTopicModel::TaxonomyTopic","Rails/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::TaxonomyTopicsModel::TaxonomyTopics","Rails/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::TrackBackModel10::TrackBackAbout","Rails/classes/RSS/TrackBackModel10/TrackBackAbout.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::TrackBackModel10::TrackBackPing","Rails/classes/RSS/TrackBackModel10/TrackBackPing.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::TrackBackModel20::TrackBackAbout","Rails/classes/RSS/TrackBackModel20/TrackBackAbout.html#method-c-required_prefix","()","",null,1],["required_prefix","RSS::TrackBackModel20::TrackBackPing","Rails/classes/RSS/TrackBackModel20/TrackBackPing.html#method-c-required_prefix","()","",null,1],["required_ruby_version=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-required_ruby_version-3D","(req)","<p>The version of ruby required by this gem\n",null,1],["required_rubygems_version=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-required_rubygems_version-3D","(req)","<p>The RubyGems version required by this gem\n",null,1],["required_uri","RSS::Atom::CommonModel","Rails/classes/RSS/Atom/CommonModel.html#method-c-required_uri","()","",null,1],["required_uri","RSS::Element","Rails/classes/RSS/Element.html#method-c-required_uri","()","",null,1],["required_uri","RSS::ITunesChannelModel::ITunesCategory","Rails/classes/RSS/ITunesChannelModel/ITunesCategory.html#method-c-required_uri","()","",null,1],["required_uri","RSS::ITunesChannelModel::ITunesImage","Rails/classes/RSS/ITunesChannelModel/ITunesImage.html#method-c-required_uri","()","",null,1],["required_uri","RSS::ITunesChannelModel::ITunesOwner","Rails/classes/RSS/ITunesChannelModel/ITunesOwner.html#method-c-required_uri","()","",null,1],["required_uri","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-c-required_uri","()","",null,1],["required_uri","RSS::ImageFaviconModel::ImageFavicon","Rails/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-c-required_uri","()","",null,1],["required_uri","RSS::ImageItemModel::ImageItem","Rails/classes/RSS/ImageItemModel/ImageItem.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF","Rails/classes/RSS/RDF.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Bag","Rails/classes/RSS/RDF/Bag.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Bag","Rails/classes/RSS/RDF/Bag.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Channel","Rails/classes/RSS/RDF/Channel.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Channel::Image","Rails/classes/RSS/RDF/Channel/Image.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Channel::Items","Rails/classes/RSS/RDF/Channel/Items.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Channel::Textinput","Rails/classes/RSS/RDF/Channel/Textinput.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Image","Rails/classes/RSS/RDF/Image.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Item","Rails/classes/RSS/RDF/Item.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Li","Rails/classes/RSS/RDF/Li.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Li","Rails/classes/RSS/RDF/Li.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Li","Rails/classes/RSS/RDF/Li.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Seq","Rails/classes/RSS/RDF/Seq.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Seq","Rails/classes/RSS/RDF/Seq.html#method-c-required_uri","()","",null,1],["required_uri","RSS::RDF::Textinput","Rails/classes/RSS/RDF/Textinput.html#method-c-required_uri","()","",null,1],["required_uri","RSS::TaxonomyTopicModel::TaxonomyTopic","Rails/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html#method-c-required_uri","()","",null,1],["required_uri","RSS::TaxonomyTopicsModel::TaxonomyTopics","Rails/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-c-required_uri","()","",null,1],["required_uri","RSS::TrackBackModel10::TrackBackAbout","Rails/classes/RSS/TrackBackModel10/TrackBackAbout.html#method-c-required_uri","()","",null,1],["required_uri","RSS::TrackBackModel10::TrackBackPing","Rails/classes/RSS/TrackBackModel10/TrackBackPing.html#method-c-required_uri","()","",null,1],["required_uri","RSS::TrackBackModel20::TrackBackAbout","Rails/classes/RSS/TrackBackModel20/TrackBackAbout.html#method-c-required_uri","()","",null,1],["required_uri","RSS::TrackBackModel20::TrackBackPing","Rails/classes/RSS/TrackBackModel20/TrackBackPing.html#method-c-required_uri","()","",null,1],["requirement","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-requirement","()","<p>What does this dependency require?\n",null,1],["requirements","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-requirements","()","<p>An array or things required by this gem.  Not used by anything presently.\n",null,1],["requirements=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-requirements-3D","(req)","<p>Set requirements to <code>req</code>, ensuring it is an array. Don’t use\nthis, push onto the array instead.\n",null,1],["requirements_list","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-requirements_list","()","",null,1],["requires_reloading?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-requires_reloading-3F","()","<p>Returns true if its required to reload the connection between requests for\ndevelopment mode. This is …\n",null,0],["requires_reloading?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-requires_reloading-3F","()","",null,0],["rerdoc_task_description","RDoc::Task","Rails/classes/RDoc/Task.html#method-i-rerdoc_task_description","()","<p>Task description for the rerdoc task or its renamed description\n",null,1],["rescue_action","ActionController::Compatibility","Ruby/classes/ActionController/Compatibility.html#method-i-rescue_action","(env)","",null,0],["rescue_from","ActionDispatch::Rescue","Ruby/classes/ActionDispatch/Rescue.html#method-i-rescue_from","(exception, rescuer)","",null,0],["rescue_from","ActiveSupport::Rescuable::ClassMethods","Ruby/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from","(*klasses, &block)","<p>Rescue exceptions raised in controller actions.\n<p><code>rescue_from</code> receives a series of exception classes or ...\n",null,0],["rescue_responses","ActionDispatch::ShowExceptions","Ruby/classes/ActionDispatch/ShowExceptions.html#method-c-rescue_responses","()","",null,0],["rescue_template","ActionDispatch::ExceptionWrapper","Ruby/classes/ActionDispatch/ExceptionWrapper.html#method-i-rescue_template","()","",null,0],["rescue_templates","ActionDispatch::ShowExceptions","Ruby/classes/ActionDispatch/ShowExceptions.html#method-c-rescue_templates","()","",null,0],["rescue_with_handler","ActionController::Rescue","Ruby/classes/ActionController/Rescue.html#method-i-rescue_with_handler","(exception)","",null,0],["rescue_with_handler","ActiveSupport::Rescuable","Ruby/classes/ActiveSupport/Rescuable.html#method-i-rescue_with_handler","(exception)","<p>Tries to rescue the exception by looking up and calling a registered\nhandler.\n",null,0],["reset","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-reset","()","",null,0],["reset","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-reset","(value = nil, name = nil)","<p>Generate a reset button Input element, as a String.\n<p>This resets the values on a form to their initial …\n",null,1],["reset","Digest::HMAC","Rails/classes/Digest/HMAC.html#method-i-reset","()","<p>Resets the hmac to the initial state and returns self.\n",null,1],["reset","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-reset","()","<p>Resets the digest to the initial state and returns self.\n<p>This method is overridden by each implementation …\n",null,1],["reset","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-c-reset","()","<p>Reset the authoritative instance of the command manager.\n",null,1],["reset","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-reset","(connection)","<p>Resets HTTP connection <code>connection</code>.\n",null,1],["reset","Gem::Specification","Rails/classes/Gem/Specification.html#method-c-reset","()","<p>Reset the list of known specs, running pre and post reset hooks registered\nin Gem.\n",null,1],["reset","Net::POP3","Rails/classes/Net/POP3.html#method-i-reset","()","<p>Resets the session.  This clears all “deleted” marks from messages.\n<p>This method raises a POPError …\n",null,1],["reset","Net::POP3","Rails/classes/Net/POP3.html#method-i-reset","()","<p>Resets the session.  This clears all “deleted” marks from messages.\n<p>This method raises a POPError …\n",null,1],["reset","Net::POP3","Rails/classes/Net/POP3.html#method-i-reset","()","<p>Resets the session.  This clears all “deleted” marks from messages.\n<p>This method raises a POPError …\n",null,1],["reset","Net::POP3","Rails/classes/Net/POP3.html#method-i-reset","()","<p>Resets the session.  This clears all “deleted” marks from messages.\n<p>This method raises a POPError …\n",null,1],["reset","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-reset","()","<p>Fully resets the internal state of the Cipher. By using this, the same\nCipher instance may be used several …\n",null,1],["reset","OpenSSL::Digest","Rails/classes/OpenSSL/Digest.html#method-i-reset","()","<p>Resets the Digest in the sense that any Digest#update that has been\nperformed is abandoned and the Digest …\n",null,1],["reset","OpenSSL::HMAC","Rails/classes/OpenSSL/HMAC.html#method-i-reset","()","",null,1],["reset","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-c-reset","()","<p>Resets cross-file state.  Call when parsing different projects that need\nseparate documentation.\n",null,1],["reset","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-reset","()","<p>Resets the tools\n",null,1],["reset","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-c-reset","()","<p>Resets all internal state\n",null,1],["reset","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-reset","()","<p>Empties RDoc of stored class, module and file information\n",null,1],["reset","REXML::Validation::Choice","Rails/classes/REXML/Validation/Choice.html#method-i-reset","()","",null,1],["reset","REXML::Validation::Interleave","Rails/classes/REXML/Validation/Interleave.html#method-i-reset","()","",null,1],["reset","REXML::Validation::OneOrMore","Rails/classes/REXML/Validation/OneOrMore.html#method-i-reset","()","",null,1],["reset","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-i-reset","()","",null,1],["reset","REXML::Validation::Validator","Rails/classes/REXML/Validation/Validator.html#method-i-reset","()","",null,1],["reset","StringScanner","Rails/classes/StringScanner.html#method-i-reset","()","<p>Reset the scan pointer (index 0) and clear matching data.\n",null,1],["reset","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-reset","()","<p>Resets and initializes the stream. All data in both input and output buffer\nare discarded.\n",null,1],["reset!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-reset-21","()","<p>Reset the state of this connection, directing the DBMS to clear\ntransactions and other connection-related …\n",null,0],["reset!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-reset-21","()","",null,0],["reset!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-reset-21","()","",null,0],["reset!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-reset-21","()","",null,0],["reset!","ActiveResource::HttpMock","Ruby/classes/ActiveResource/HttpMock.html#method-c-reset-21","()","<p>Deletes all logged requests and responses.\n",null,0],["reset_cache","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-c-reset_cache","()","",null,0],["reset_callbacks","ActiveSupport::Callbacks::ClassMethods","Ruby/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-reset_callbacks","(symbol)","<p>Remove all set callbacks for the given event.\n",null,0],["reset_column_information","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-reset_column_information","()","<p>Resets all the cached information about columns, which will cause them to\nbe reloaded on the next request. …\n",null,0],["reset_counters","ActiveRecord::CounterCache","Ruby/classes/ActiveRecord/CounterCache.html#method-i-reset_counters","(id, *counters)","<p>Resets one or more counter caches to their correct value using an SQL count\nquery. This is useful when …\n",null,0],["reset_cycle","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-reset_cycle","(name = \"default\")","<p>Resets a cycle so that it starts from the first element the next time it is\ncalled. Pass in <code>name</code> to reset …\n",null,0],["reset_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Ruby/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-reset_locking_column","()","<p>Reset the column used for optimistic locking back to the\n<code>lock_version</code> default.\n",null,0],["reset_prog_mode","Curses","Rails/classes/Curses.html#method-c-reset_prog_mode","()","<p>Reset the current terminal modes to the saved state by the\nCurses.def_prog_mode\n<p>This is done automatically …\n",null,1],["reset_runtime","ActiveRecord::LogSubscriber","Ruby/classes/ActiveRecord/LogSubscriber.html#method-c-reset_runtime","()","",null,0],["reset_sequence!","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-reset_sequence-21","(table, column, sequence = nil)","<p>Set the sequence to the max value of the table’s column.\n",null,0],["reset_session","ActionController::RackDelegation","Ruby/classes/ActionController/RackDelegation.html#method-i-reset_session","()","",null,0],["reset_session","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-reset_session","()","<p>TODO This should be broken apart into AD::Request::Session and probably be\nincluded by the session middleware. …\n",null,0],["resize","Curses","Rails/classes/Curses.html#method-c-resize","(p1, p2)","<p>Resize the current term to Fixnum <code>lines</code> and Fixnum\n<code>cols</code>\n",null,1],["resize","Curses::Window","Rails/classes/Curses/Window.html#method-i-resize","(p1, p2)","<p>Resize the current window to Fixnum <code>lines</code> and Fixnum\n<code>cols</code>\n",null,1],["resizeterm","Curses","Rails/classes/Curses.html#method-c-resizeterm","(p1, p2)","<p>Resize the current term to Fixnum <code>lines</code> and Fixnum\n<code>cols</code>\n",null,1],["resolve","ActionDispatch::RailsEntityStore","Ruby/classes/ActionDispatch/RailsEntityStore.html#method-c-resolve","(uri)","",null,0],["resolve","ActionDispatch::RailsMetaStore","Ruby/classes/ActionDispatch/RailsMetaStore.html#method-c-resolve","(uri)","",null,0],["resolve","RDoc::CrossReference","Rails/classes/RDoc/CrossReference.html#method-i-resolve","(name, text)","<p>Returns a reference to <code>name</code>.\n<p>If the reference is found and <code>name</code> is not documented\n<code>text</code> will be returned. …\n",null,1],["resolve","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-resolve","()","<p>Resolve all the pending adds now.\n",null,1],["resolve_add","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-resolve_add","(fn)","",null,1],["resolve_aliases","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-resolve_aliases","(added)","<p>Tries to resolve unmatched aliases when a method or attribute has just been\nadded.\n",null,1],["resolve_args","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-resolve_args","(args)","<p>Resolve the arguments for a task/rule.  Returns a triplet of [task_name,\narg_name_list, prerequisites]. …\n",null,1],["resource","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resource","(*resources, &block)","<p>Sometimes, you have a resource that clients always look up without\nreferencing an ID. A common example, …\n",null,0],["resource_errors","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-resource_errors","()","",null,0],["resource_location","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-resource_location","()","<p>Returns the resource location by retrieving it from the options or\nreturning the resources array.\n",null,0],["resourceful?","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-resourceful-3F","()","<p>Checks whether the resource responds to the current format or not.\n",null,0],["resources","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resources","(*resources, &block)","<p>In Rails, a resourceful route provides a mapping between HTTP verbs and\nURLs and controller actions. …\n",null,0],["resources","RSS::RDF::Channel::Items","Rails/classes/RSS/RDF/Channel/Items.html#method-i-resources","()","",null,1],["resources","RSS::TaxonomyTopicsModel::TaxonomyTopics","Rails/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-i-resources","()","",null,1],["resources_path_names","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resources_path_names","(options)","",null,0],["respond","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-respond","()","<p>Main entry point for responder responsible to dispatch to the proper\nformat.\n",null,0],["respond_to","ActionController::MimeResponds","Ruby/classes/ActionController/MimeResponds.html#method-i-respond_to","(*mimes, &block)","<p>Without web-service support, an action which collects the data for\ndisplaying a list of people might …\n",null,0],["respond_to","ActionController::MimeResponds::ClassMethods","Ruby/classes/ActionController/MimeResponds/ClassMethods.html#method-i-respond_to","(*mimes)","<p>Defines mime types that are rendered by default when invoking\n<code>respond_with</code>.\n<p>Examples:\n\n<pre>respond_to :html, ...</pre>\n",null,0],["respond_to","ActiveResource::HttpMock","Ruby/classes/ActiveResource/HttpMock.html#method-c-respond_to","(*args)","<p>Accepts a block which declares a set of requests and responses for the\nHttpMock to respond to in the …\n",null,0],["respond_to?","ActionDispatch::BodyProxy","Ruby/classes/ActionDispatch/BodyProxy.html#method-i-respond_to-3F","(*args)","",null,0],["respond_to?","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-respond_to-3F","(method)","",null,0],["respond_to?","ActiveModel::AttributeMethods","Ruby/classes/ActiveModel/AttributeMethods.html#method-i-respond_to-3F","(method, include_private_methods = false)","",null,0],["respond_to?","ActiveRecord::Delegation","Ruby/classes/ActiveRecord/Delegation.html#method-i-respond_to-3F","(method, include_private = false)","",null,0],["respond_to?","ActiveRecord::DynamicMatchers","Ruby/classes/ActiveRecord/DynamicMatchers.html#method-i-respond_to-3F","(method_id, include_private = false)","",null,0],["respond_to?","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-respond_to-3F","(method, include_priv = false)","<p>A method to determine if an object responds to a message (e.g., a method\ncall). In Active Resource, a …\n",null,0],["respond_to?","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-i-respond_to-3F","(method, include_private = false)","",null,0],["respond_to?","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-respond_to-3F","(method, include_private=false)","<p>Returns <code>true</code> if <em>obj</em> responds to the given method.\nPrivate methods are included in the search only if …\n",null,0],["respond_to?","ActiveSupport::OrderedOptions","Ruby/classes/ActiveSupport/OrderedOptions.html#method-i-respond_to-3F","(name)","",null,0],["respond_to?","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-i-respond_to-3F","(*args)","",null,0],["respond_to?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-respond_to-3F","(sym, include_priv = false)","<p>Ensure proxy class responds to all methods that underlying time instance\nresponds to.\n",null,0],["respond_to?","Rails::Railtie::Configurable::ClassMethods","Ruby/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-respond_to-3F","(*args)","",null,0],["respond_to?","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-respond_to-3F","(name)","",null,0],["respond_to?","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-i-respond_to-3F","(msg_id, priv=false)","",null,1],["respond_to?","Object","Rails/classes/Object.html#method-i-respond_to-3F","(p1, p2 = v2)","<p>Returns <code>true</code> if <em>obj</em> responds to the given method.\nPrivate methods are included in the search only if …\n",null,1],["respond_to_missing?","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-i-respond_to_missing-3F","(*args)","",null,0],["respond_to_missing?","Delegator","Rails/classes/Delegator.html#method-i-respond_to_missing-3F","(m, include_private)","<p>Checks for a method provided by this the delegate object by forwarding the\ncall through __getobj__.\n",null,1],["respond_to_missing?","Object","Rails/classes/Object.html#method-i-respond_to_missing-3F","(p1, p2)","<p>Hook method to return whether the <em>obj</em> can respond to <em>id</em>\nmethod or not.\n<p>See #respond_to?.\n",null,1],["respond_to_without_attributes?","ActiveModel::AttributeMethods","Ruby/classes/ActiveModel/AttributeMethods.html#method-i-respond_to_without_attributes-3F","(method, include_private_methods = false)","<p>A Person object with a name attribute can ask\n<code>person.respond_to?(:name)</code>,\n<code>person.respond_to?(:name=)</code>, …\n",null,0],["respond_to_without_attributes?","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-respond_to_without_attributes-3F","(method, include_priv = false)","<p>For checking <code>respond_to?</code> without searching the attributes\n(which is faster).\n",null,0],["respond_with","ActionController::MimeResponds","Ruby/classes/ActionController/MimeResponds.html#method-i-respond_with","(*resources, &block)","<p>respond_with wraps a resource around a responder for default\nrepresentation. First it invokes respond_to …\n",null,0],["response_body=","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-response_body-3D","(val)","",null,0],["response_body=","ActionController::RackDelegation","Ruby/classes/ActionController/RackDelegation.html#method-i-response_body-3D","(body)","",null,0],["response_body_permitted?","Net::HTTPGenericRequest","Rails/classes/Net/HTTPGenericRequest.html#method-i-response_body_permitted-3F","()","",null,1],["response_code","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-response_code","()","<p>The response code of the request\n",null,0],["response_overridden?","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-response_overridden-3F","()","",null,0],["responses","ActiveResource::HttpMock","Ruby/classes/ActiveResource/HttpMock.html#method-c-responses","()","<p>Returns the list of requests and their mocked responses. Look up a response\nfor a request using <code>responses.assoc</code> …\n",null,0],["rest","StringScanner","Rails/classes/StringScanner.html#method-i-rest","()","<p>Returns the “rest” of the string (i.e. everything after the scan pointer).\nIf there is no more …\n",null,1],["rest?","StringScanner","Rails/classes/StringScanner.html#method-i-rest-3F","()","<p>Returns true iff there is more data in the string.  See #eos?. This method\nis obsolete; use #eos? instead. …\n",null,1],["rest_size","StringScanner","Rails/classes/StringScanner.html#method-i-rest_size","()","<p><code>s.rest_size</code> is equivalent to <code>s.rest.size</code>.\n",null,1],["restore","CGI::Session::FileStore","Rails/classes/CGI/Session/FileStore.html#method-i-restore","()","<p>Restore session state from the session’s FileStore file.\n<p>Returns the session state as a hash.\n",null,1],["restore","CGI::Session::MemoryStore","Rails/classes/CGI/Session/MemoryStore.html#method-i-restore","()","<p>Restore session state.\n<p>Returns session data as a hash.\n",null,1],["restore","CGI::Session::NullStore","Rails/classes/CGI/Session/NullStore.html#method-i-restore","()","<p>Restore (empty) session state.\n",null,1],["restore","CGI::Session::PStore","Rails/classes/CGI/Session/PStore.html#method-i-restore","()","<p>Restore session state from the session’s PStore file.\n<p>Returns the session state as a hash.\n",null,1],["restore","JSON","Rails/classes/JSON.html#method-c-restore","(source, proc = nil, options = {})","",null,1],["restore","Marshal","Rails/classes/Marshal.html#method-c-restore","(p1, p2 = v2)","<p>Returns the result of converting the serialized data in source into a Ruby\nobject (possibly with associated …\n",null,1],["restsize","StringScanner","Rails/classes/StringScanner.html#method-i-restsize","()","<p><code>s.restsize</code> is equivalent to <code>s.rest_size</code>. This\nmethod is obsolete; use #rest_size instead.\n",null,1],["result","Coverage","Rails/classes/Coverage.html#method-c-result","()","<p>Returns a hash that contains filename as key and coverage array as value\nand disables coverage measurement. …\n",null,1],["result","ERB","Rails/classes/ERB.html#method-i-result","(b=TOPLEVEL_BINDING)","<p>Executes the generated ERB code to produce a completed template, returning\nthe results of that code. …\n",null,1],["result","GC::Profiler","Rails/classes/GC/Profiler.html#method-c-result","()","<p>Returns a profile data report such as:\n\n<pre>GC 1 invokes.\nIndex    Invoke Time(sec)       Use Size(byte)   ...</pre>\n",null,1],["result","StopIteration","Rails/classes/StopIteration.html#method-i-result","()","<p>Returns the return value of the iterator.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">o</span> = <span class=\"ruby-constant\">Object</span>.<span class=\"ruby-identifier\">new</span>\n<span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">o</span>.<span class=\"ruby-identifier\">each</span>\n  <span class=\"ruby-keyword\">yield</span> <span class=\"ruby-value\">1</span>\n  <span class=\"ruby-keyword\">yield</span> <span class=\"ruby-value\">2</span>\n  <span class=\"ruby-keyword\">yield</span> <span class=\"ruby-value\">3</span>\n  <span class=\"ruby-value\">100</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["resume","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-resume","()","",null,1],["resume","Fiber","Rails/classes/Fiber.html#method-i-resume","(*args)","<p>Resumes the fiber from the point at which the last <code>Fiber.yield</code>\nwas called, or starts running it if it …\n",null,1],["resume_all","DEBUGGER__::Context","Rails/classes/DEBUGGER__/Context.html#method-i-resume_all","()","",null,1],["retrbinary","Net::FTP","Rails/classes/Net/FTP.html#method-i-retrbinary","(cmd, blocksize, rest_offset = nil)","<p>Puts the connection into binary (image) mode, issues the given command, and\nfetches the data returned, …\n",null,1],["retrieve_autoindex","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-retrieve_autoindex","(pre_match)","",null,0],["retrieve_connection","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-retrieve_connection","()","",null,0],["retrieve_connection_pool","ActiveRecord::ConnectionAdapters::ConnectionHandler","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-retrieve_connection_pool","(klass)","",null,0],["retrieve_object","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-retrieve_object","(object)","",null,0],["retrlines","Net::FTP","Rails/classes/Net/FTP.html#method-i-retrlines","(cmd)","<p>Puts the connection into ASCII (text) mode, issues the given command, and\npasses the resulting data, …\n",null,1],["return_headers?","CSV","Rails/classes/CSV.html#method-i-return_headers-3F","()","<p>Returns <code>true</code> if headers will be returned as a row of results.\nSee CSV::new for details.\n",null,1],["return_type","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-return_type","()","<p>Returns string of return value type of method.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', ...</pre>\n",null,1],["return_type_detail","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-return_type_detail","()","<p>Returns detail information of return value type of method. The information\nis array.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft ...</pre>\n",null,1],["return_vtype","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-return_vtype","()","<p>Returns number of return value type of method.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', ...</pre>\n",null,1],["retval?","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-i-retval-3F","()","<p>Returns true if argument is return value.\n\n<pre>tobj = WIN32OLE_TYPE.new('DirectX 7 for Visual Basic Type Library', ...</pre>\n",null,1],["reverse","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-reverse","()","<p>Reverses all characters in the string.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">'Café'</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">reverse</span>.<span class=\"ruby-identifier\">to_s</span> <span class=\"ruby-comment\"># =&gt; 'éfaC'</span>\n</pre>\n",null,0],["reverse","Array","Rails/classes/Array.html#method-i-reverse","()","<p>Returns a new array containing <code>self</code>‘s elements in reverse\norder.\n\n<pre class=\"ruby\">[ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span>, <span class=\"ruby-string\">&quot;c&quot;</span> ].<span class=\"ruby-identifier\">reverse</span>   <span class=\"ruby-comment\">#=&gt; [&quot;c&quot;, ...</span>\n</pre>\n",null,1],["reverse","IPAddr","Rails/classes/IPAddr.html#method-i-reverse","()","<p>Returns a string for DNS reverse lookup.  It returns a string in RFC3172\nform for an IPv6 address.\n",null,1],["reverse","String","Rails/classes/String.html#method-i-reverse","()","<p>Returns a new string with the characters from <em>str</em> in reverse\norder.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;stressed&quot;</span>.<span class=\"ruby-identifier\">reverse</span>   <span class=\"ruby-comment\">#=&gt; &quot;desserts&quot;</span>\n</pre>\n",null,1],["reverse!","Array","Rails/classes/Array.html#method-i-reverse-21","()","<p>Reverses <code>self</code> in place.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span>, <span class=\"ruby-string\">&quot;c&quot;</span> ]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">reverse!</span>       <span class=\"ruby-comment\">#=&gt; [&quot;c&quot;, &quot;b&quot;, &quot;a&quot;]</span>\n<span class=\"ruby-identifier\">a</span>                <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["reverse!","String","Rails/classes/String.html#method-i-reverse-21","()","<p>Reverses <em>str</em> in place.\n",null,1],["reverse_each","Array","Rails/classes/Array.html#method-i-reverse_each","()","<p>Same as <code>Array#each</code>, but traverses <code>self</code> in reverse\norder.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span>, <span class=\"ruby-string\">&quot;c&quot;</span> ]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">reverse_each</span> {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">x</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">print</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["reverse_each","Enumerable","Rails/classes/Enumerable.html#method-i-reverse_each","(*args)","<p>Builds a temporary array and traverses that array in reverse order.\n<p>If no block is given, an enumerator …\n",null,1],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge","(other_hash)","<p>Performs the opposite of merge, with the keys and values from the first\nhash taking precedence over the …\n",null,0],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge","(other_hash)","<p>Performs the opposite of merge, with the keys and values from the first\nhash taking precedence over the …\n",null,0],["reverse_merge","Hash","Ruby/classes/Hash.html#method-i-reverse_merge","(other_hash)","<p>Merges the caller into <code>other_hash</code>. For example,\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">options</span> = <span class=\"ruby-identifier\">options</span>.<span class=\"ruby-identifier\">reverse_merge</span>(:<span class=\"ruby-identifier\">size</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">25</span>, :<span class=\"ruby-identifier\">velocity</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge-21","(other_hash)","",null,0],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge-21","(other_hash)","",null,0],["reverse_merge!","Hash","Ruby/classes/Hash.html#method-i-reverse_merge-21","(other_hash)","<p>Destructive <code>reverse_merge</code>.\n",null,0],["reverse_order","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-reverse_order","()","",null,0],["reverse_update","Hash","Ruby/classes/Hash.html#method-i-reverse_update","(other_hash)","",null,0],["revert","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-revert","()","",null,0],["reverting?","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-reverting-3F","()","",null,0],["revoked","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-revoked","()","",null,1],["revoked=","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-revoked-3D","(p1)","",null,1],["rewind","ARGF","Rails/classes/ARGF.html#method-i-rewind","()","<p>Positions the current file to the beginning of input, resetting\n<code>ARGF.lineno</code> to zero.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">readline</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["rewind","CSV","Rails/classes/CSV.html#method-i-rewind","()","<p>Rewinds the underlying IO object and resets CSV’s lineno() counter.\n",null,1],["rewind","Dir","Rails/classes/Dir.html#method-i-rewind","()","<p>Repositions <em>dir</em> to the first entry.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testdir&quot;</span>)\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">read</span>     <span class=\"ruby-comment\">#=&gt; &quot;.&quot;</span>\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">rewind</span>   <span class=\"ruby-comment\">#=&gt; #&lt;Dir:0x401b3fb0&gt; ...</span>\n</pre>\n",null,1],["rewind","Enumerator","Rails/classes/Enumerator.html#method-i-rewind","()","<p>Rewinds the enumeration sequence to the beginning.\n<p>If the enclosed object responds to a “rewind” …\n",null,1],["rewind","Gem::Package::TarReader","Rails/classes/Gem/Package/TarReader.html#method-i-rewind","()","<p>NOTE: Do not call #rewind during #each\n",null,1],["rewind","Gem::Package::TarReader::Entry","Rails/classes/Gem/Package/TarReader/Entry.html#method-i-rewind","()","<p>Rewinds to the beginning of the tar file entry\n",null,1],["rewind","IO","Rails/classes/IO.html#method-i-rewind","()","<p>Positions <em>ios</em> to the beginning of input, resetting\n<code>lineno</code> to zero.\n\n<pre>f = File.new(&quot;testfile&quot;)\nf.readline ...</pre>\n",null,1],["rewind","Prime::EratosthenesGenerator","Rails/classes/Prime/EratosthenesGenerator.html#method-i-rewind","()","",null,1],["rewind","Prime::Generator23","Rails/classes/Prime/Generator23.html#method-i-rewind","()","",null,1],["rewind","Prime::PseudoPrimeGenerator","Rails/classes/Prime/PseudoPrimeGenerator.html#method-i-rewind","()","<p>Rewinds the internal position for enumeration.\n<p>See <code>Enumerator</code>#rewind.\n",null,1],["rewind","Prime::TrialDivisionGenerator","Rails/classes/Prime/TrialDivisionGenerator.html#method-i-rewind","()","",null,1],["rewind","REXML::Parsers::LightParser","Rails/classes/REXML/Parsers/LightParser.html#method-i-rewind","()","",null,1],["rewind","REXML::Parsers::UltraLightParser","Rails/classes/REXML/Parsers/UltraLightParser.html#method-i-rewind","()","",null,1],["rewind","StringIO","Rails/classes/StringIO.html#method-i-rewind","()","<p>Positions <strong>strio</strong> to the beginning of input, resetting\n<code>lineno</code> to zero.\n",null,1],["rewind","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-rewind","()","<p>Resets the position of the file pointer to the point created the GzipReader\nobject.  The associated  ...\n",null,1],["rfc1123_date","CGI","Rails/classes/CGI.html#method-c-rfc1123_date","(time)","<p>Format a <code>Time</code> object as a String using the format specified by\nRFC 1123.\n\n<pre>CGI::rfc1123_date(Time.now)\n ...</pre>\n",null,1],["rfc2822","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-rfc2822","()","",null,0],["rfc2822","Date","Rails/classes/Date.html#method-i-rfc2822","()","<p>This method is equivalent to strftime(‘%a, %-d %b %Y %T %z’).\n",null,1],["rfc2822","Date","Rails/classes/Date.html#method-c-rfc2822","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 2822 formats.\n<p>For example: …\n",null,1],["rfc2822","DateTime","Rails/classes/DateTime.html#method-c-rfc2822","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 2822 formats.\n<p>For example: …\n",null,1],["rfc2822","Time","Rails/classes/Time.html#method-i-rfc2822","()","<p>Returns a string which represents the time as date-time defined by RFC\n2822:\n\n<pre>day-of-week, DD month-name ...</pre>\n",null,1],["rfc2822","Time","Rails/classes/Time.html#method-c-rfc2822","(date)","<p>Parses <code>date</code> as date-time defined by RFC 2822 and converts it\nto a Time object.  The format is identical …\n",null,1],["rfc3339","Date","Ruby/classes/Date.html#method-i-rfc3339","()","",null,0],["rfc3339","Date","Rails/classes/Date.html#method-c-rfc3339","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 3339 formats.\n<p>For example: …\n",null,1],["rfc3339","Date","Rails/classes/Date.html#method-i-rfc3339","()","<p>This method is equivalent to strftime(‘%FT%T%:z’).\n",null,1],["rfc3339","DateTime","Rails/classes/DateTime.html#method-i-rfc3339","(*args)","<p>This method is equivalent to strftime(‘%FT%T’).  The optional argument n is\nlength of fractional seconds. …\n",null,1],["rfc3339","DateTime","Rails/classes/DateTime.html#method-c-rfc3339","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 3339 formats.\n<p>For example: …\n",null,1],["rfc822","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-rfc822","()","",null,0],["rfc822","Date","Rails/classes/Date.html#method-i-rfc822","()","<p>This method is equivalent to strftime(‘%a, %-d %b %Y %T %z’).\n",null,1],["rfc822","Date","Rails/classes/Date.html#method-c-rfc822","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 2822 formats.\n<p>For example: …\n",null,1],["rfc822","DateTime","Rails/classes/DateTime.html#method-c-rfc822","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 2822 formats.\n<p>For example: …\n",null,1],["rfc822","Time","Rails/classes/Time.html#method-i-rfc822","()","",null,1],["rfc822","Time","Rails/classes/Time.html#method-c-rfc822","(date)","",null,1],["ri_dir","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-ri_dir","()","<p>Returns the full path to this spec’s ri directory.\n",null,1],["ri_installed?","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-i-ri_installed-3F","()","<p>Is the RI documentation installed?\n",null,1],["ri_installed?","RDoc::RubygemsHook","Rails/classes/RDoc/RubygemsHook.html#method-i-ri_installed-3F","()","<p>Is ri data installed?\n",null,1],["rid","Process::GID","Rails/classes/Process/GID.html#method-c-rid","()","<p>Returns the (real) group ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">gid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,1],["rid","Process::UID","Rails/classes/Process/UID.html#method-c-rid","()","<p>Returns the (real) user ID of this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">uid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,1],["rindex","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-rindex","(needle, offset=nil)","<p>Returns the position <em>needle</em> in the string, counting in codepoints,\nsearching backward from <em>offset</em> or …\n",null,0],["rindex","Array","Rails/classes/Array.html#method-i-rindex","(p1)","<p>Returns the index of the last object in <code>self</code> <code>==</code>\nto <em>obj</em>. If a block is given instead of an argument, returns …\n",null,1],["rindex","String","Rails/classes/String.html#method-i-rindex","(p1, p2 = v2)","<p>Returns the index of the last occurrence of the given <em>substring</em> or\npattern (<em>regexp</em>) in <em>str</em>. Returns  …\n",null,1],["rjust","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-rjust","(integer, padstr=' ')","<p>Works just like <code>String#rjust</code>, only integer specifies\ncharacters instead of bytes.\n<p>Example:\n\n<pre>&quot;¾ cup&quot;.mb_chars.rjust(8).to_s ...</pre>\n",null,0],["rjust","String","Rails/classes/String.html#method-i-rjust","(*args)","<p>If <em>integer</em> is greater than the length of <em>str</em>, returns a\nnew <code>String</code> of length <em>integer</em> with <em>str</em> right\njustified …\n",null,1],["rm","FileUtils","Rails/classes/FileUtils.html#method-c-rm","(list, options = {})","<p>Options: force noop verbose\n<p>Remove file(s) specified in <code>list</code>.  This method cannot remove\ndirectories. …\n",null,1],["rm","Object","Rails/classes/Object.html#method-i-rm","()","<p>Remove the FILE\n\n<pre>ruby -run -e rm -- [OPTION] FILE\n\n-f          ignore nonexistent files\n-r          remove ...</pre>\n",null,1],["rm_f","FileUtils","Rails/classes/FileUtils.html#method-c-rm_f","(list, options = {})","<p>Options: noop verbose\n<p>Equivalent to\n\n<pre class=\"ruby\"><span class=\"ruby-comment\">#rm(list, :force =&gt; true)</span>\n</pre>\n",null,1],["rm_r","FileUtils","Rails/classes/FileUtils.html#method-c-rm_r","(list, options = {})","<p>Options: force noop verbose secure\n<p>remove files <code>list[0]</code> <code>list[1]</code>… If\n<code>list[n]</code> is a directory, removes …\n",null,1],["rm_rf","FileUtils","Rails/classes/FileUtils.html#method-c-rm_rf","(list, options = {})","<p>Options: noop verbose secure\n<p>Equivalent to\n\n<pre class=\"ruby\"><span class=\"ruby-comment\">#rm_r(list, :force =&gt; true)</span>\n</pre>\n",null,1],["rmdir","Dir","Rails/classes/Dir.html#method-c-rmdir","(p1)","<p>Deletes the named directory. Raises a subclass of\n<code>SystemCallError</code> if the directory isn’t empty.\n",null,1],["rmdir","FileUtils","Rails/classes/FileUtils.html#method-c-rmdir","(list, options = {})","<p>Options: noop, verbose\n<p>Removes one or more directories.\n\n<pre>FileUtils.rmdir 'somedir'\nFileUtils.rmdir %w(somedir ...</pre>\n",null,1],["rmdir","Net::FTP","Rails/classes/Net/FTP.html#method-i-rmdir","(dirname)","<p>Removes a remote directory.\n",null,1],["rmdir","Object","Rails/classes/Object.html#method-i-rmdir","()","<p>Remove the DIR.\n\n<pre>ruby -run -e rmdir -- [OPTION] DIR\n\n-p          remove DIRECTORY and its ancestors.\n-v ...</pre>\n",null,1],["rmdir","Pathname","Rails/classes/Pathname.html#method-i-rmdir","()","<p>See <code>Dir.rmdir</code>.  Remove the referenced directory.\n",null,1],["rmdir","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-rmdir","(*path)","<p>CommandProcessor#rmdir(*path)\n\n<pre>  path: String\nsame as Dir.rmdir()</pre>\n",null,1],["rmtree","FileUtils","Rails/classes/FileUtils.html#method-c-rmtree","(list, options = {})","",null,1],["rmtree","Pathname","Rails/classes/Pathname.html#method-i-rmtree","()","<p>See <code>FileUtils.rm_r</code>.  Deletes a directory and all beneath it.\n",null,1],["robots","","Ruby/files/rails/railties/lib/rails/generators/rails/app/templates/public/robots_txt.html","","<p>See www.robotstxt.org/wc/norobots.html for documentation on how to use the\nrobots.txt file\n<p>To ban all …\n",null,0],["robots","","Ruby/files/rails/railties/guides/code/getting_started/public/robots_txt.html","","<p>See www.robotstxt.org/wc/norobots.html for documentation on how to use the\nrobots.txt file\n<p>To ban all …\n",null,0],["rollback_active_record_state!","ActiveRecord::Transactions","Ruby/classes/ActiveRecord/Transactions.html#method-i-rollback_active_record_state-21","()","<p>Reset id and @new_record if the transaction rolls back.\n",null,0],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-rollback_db_transaction","()","<p>Rolls back the transaction (and turns on auto-committing). Must be done if\nthe transaction block raises …\n",null,0],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-rollback_db_transaction","()","<p>Aborts a transaction.\n",null,0],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-rollback_to_savepoint","()","",null,0],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rollback_to_savepoint","()","",null,0],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-rollback_to_savepoint","()","",null,0],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-rollback_to_savepoint","()","",null,0],["rollback_transaction_records","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-rollback_transaction_records","(rollback)","<p>Send a rollback message to all records after they have been rolled back. If\nrollback is false, only rollback …\n",null,0],["root","ActionDispatch::Routing::Mapper::Base","Ruby/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-root","(options = {})","<p>You can specify what Rails should route “/” to with the root method:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">root</span> :<span class=\"ruby-identifier\">to</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'pages#main'</span>\n</pre>\n",null,0],["root","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-root","(options={})","",null,0],["root","Rails","Ruby/classes/Rails.html#method-c-root","()","",null,0],["root","Gem::Server","Rails/classes/Gem/Server.html#method-i-root","(req, res)","",null,1],["root","Psych::Nodes::Document","Rails/classes/Psych/Nodes/Document.html#method-i-root","()","<p>Returns the root node.  A Document may only have one root node:\nyaml.org/spec/1.1/#id898031\n",null,1],["root","REXML::Document","Rails/classes/REXML/Document.html#method-i-root","()","<p>@return the root Element of the document, or nil if this document has no\nchildren.\n",null,1],["root","REXML::Element","Rails/classes/REXML/Element.html#method-i-root","()","",null,1],["root","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-root","()","",null,1],["root=","Rails::Engine::Configuration","Ruby/classes/Rails/Engine/Configuration.html#method-i-root-3D","(value)","",null,0],["root?","PStore","Rails/classes/PStore.html#method-i-root-3F","(name)","<p>Returns true if the supplied <em>name</em> is currently in the data store.\n<p><strong>WARNING</strong>:  This method is only valid ...\n",null,1],["root?","Pathname","Rails/classes/Pathname.html#method-i-root-3F","()","<p>#root? is a predicate for root directories.  I.e. it returns\n<code>true</code> if the pathname consists of consecutive …\n",null,1],["root_node","REXML::Element","Rails/classes/REXML/Element.html#method-i-root_node","()","<p>Evaluates to the root node of the document that this element belongs to. If\nthis element doesn’t belong …\n",null,1],["roots","PStore","Rails/classes/PStore.html#method-i-roots","()","<p>Returns the names of all object hierarchies currently in the store.\n<p><strong>WARNING</strong>:  This method is only valid ...\n",null,1],["rotate","Array","Rails/classes/Array.html#method-i-rotate","(p1 = v1)","<p>Returns new array by rotating <code>self</code> so that the element at\n<code>cnt</code> in <code>self</code> is the first element of the new …\n",null,1],["rotate!","Array","Rails/classes/Array.html#method-i-rotate-21","(p1 = v1)","<p>Rotates <code>self</code> in place so that the element at <code>cnt</code>\ncomes first, and returns <code>self</code>.  If <code>cnt</code> is\nnegative then …\n",null,1],["round","Float","Ruby/classes/Float.html#method-i-round","(precision = nil)","<p>Rounds the float with the specified precision.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">x</span> = <span class=\"ruby-value\">1.337</span>\n<span class=\"ruby-identifier\">x</span>.<span class=\"ruby-identifier\">round</span>    <span class=\"ruby-comment\"># =&gt; 1</span>\n<span class=\"ruby-identifier\">x</span>.<span class=\"ruby-identifier\">round</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-comment\"># =&gt; 1.3</span>\n<span class=\"ruby-identifier\">x</span>.<span class=\"ruby-identifier\">round</span>(<span class=\"ruby-value\">2</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["round","BigDecimal","Rails/classes/BigDecimal.html#method-i-round","(p1 = v1, p2 = v2)","<p>Round to the nearest 1 (by default), returning the result as a BigDecimal.\n<p>BigDecimal(‘3.14159’).round …\n",null,1],["round","Float","Rails/classes/Float.html#method-i-round","(p1 = v1)","<p>Rounds <em>flt</em> to a given precision in decimal digits (default 0\ndigits). Precision may be negative.  Returns …\n",null,1],["round","Integer","Rails/classes/Integer.html#method-i-round","(p1)","<p>Rounds <em>flt</em> to a given precision in decimal digits (default 0\ndigits). Precision may be negative.  Returns …\n",null,1],["round","Matrix","Rails/classes/Matrix.html#method-i-round","(ndigits=0)","<p>Returns a matrix with entries rounded to the given precision (see\nFloat#round)\n",null,1],["round","Numeric","Rails/classes/Numeric.html#method-i-round","(*args)","<p>Rounds <em>num</em> to a given precision in decimal digits (default 0\ndigits). Precision may be negative.  Returns …\n",null,1],["round","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-round","( number )","",null,1],["round","Rational","Rails/classes/Rational.html#method-i-round","(*args)","<p>Returns the truncated value (toward the nearest integer; 0.5 =&gt; 1; -0.5\n=&gt; -1).\n<p>For example:\n\n<pre>Rational(3).round ...</pre>\n",null,1],["round","Time","Rails/classes/Time.html#method-i-round","(p1 = v1)","<p>Rounds sub seconds to a given precision in decimal digits (0 digits by\ndefault). It returns a new time …\n",null,1],["route","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-route","(routing_code)","<p>Make an entry in Rails routing file config/routes.rb\n<p>Example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">route</span> <span class=\"ruby-string\">&quot;root :to =&gt; 'welcome'&quot;</span>\n</pre>\n",null,0],["route_from","URI::Generic","Rails/classes/URI/Generic.html#method-i-route_from","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,1],["route_key","ActiveModel::Naming","Ruby/classes/ActiveModel/Naming.html#method-c-route_key","(record_or_class)","<p>Returns string to use while generating route names. It differs for\nnamespaced models regarding whether …\n",null,0],["route_to","URI::Generic","Rails/classes/URI/Generic.html#method-i-route_to","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,1],["route_url","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-route_url","()","",null,0],["routes","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-routes","()","",null,0],["routes?","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-routes-3F","()","",null,0],["routes_url_helpers","Rails::Engine","Ruby/classes/Rails/Engine.html#method-i-routes_url_helpers","()","",null,0],["row","Matrix","Rails/classes/Matrix.html#method-i-row","(i)","<p>Returns row vector number <code>i</code> of the matrix as a Vector\n(starting at 0 like an array).  When a block is …\n",null,1],["row_size","Matrix","Rails/classes/Matrix.html#method-i-row_size","()","<p>Returns the number of rows.\n",null,1],["row_vector","Matrix","Rails/classes/Matrix.html#method-c-row_vector","(row)","<p>Creates a single-row matrix where the values of that row are as given in\n<code>row</code>.\n\n<pre>Matrix.row_vector([4,5,6]) ...</pre>\n",null,1],["row_vectors","Matrix","Rails/classes/Matrix.html#method-i-row_vectors","()","<p>Returns an array of the row vectors of the matrix.  See Vector.\n",null,1],["rows","Matrix","Rails/classes/Matrix.html#method-c-rows","(rows, copy = true)","<p>Creates a matrix where <code>rows</code> is an array of arrays, each of\nwhich is a row of the matrix.  If the optional …\n",null,1],["rpartition","String","Rails/classes/String.html#method-i-rpartition","(p1)","<p>Searches <em>sep</em> or pattern (<em>regexp</em>) in the string from the\nend of the string, and returns the part before …\n",null,1],["rsqrt","Math","Rails/classes/Math.html#method-c-rsqrt","(a)","<p>Compute square root of a non negative number. This method is internally\nused by <code>Math.sqrt</code>.\n",null,1],["rss","RSS::BaseParser","Rails/classes/RSS/BaseParser.html#method-i-rss","()","",null,1],["rstrip","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-rstrip","()","<p>Strips entire range of Unicode whitespace from the right of the string.\n",null,0],["rstrip","String","Rails/classes/String.html#method-i-rstrip","()","<p>Returns a copy of <em>str</em> with trailing whitespace removed. See also\n<code>String#lstrip</code> and <code>String#strip</code>.\n\n<pre>&quot;  hello ...</pre>\n",null,1],["rstrip!","String","Rails/classes/String.html#method-i-rstrip-21","()","<p>Removes trailing whitespace from <em>str</em>, returning <code>nil</code>\nif no change was made. See also <code>String#lstrip!</code> and …\n",null,1],["ruby","FileUtils","Rails/classes/FileUtils.html#method-i-ruby","(*args,&block)","<p>Run a Ruby interpreter with the given arguments.\n<p>Example:\n\n<pre>ruby %{-pe '$_.upcase!' &lt;README}</pre>\n",null,1],["ruby","Gem","Rails/classes/Gem.html#method-c-ruby","()","<p>The path to the running Ruby interpreter.\n",null,1],["ruby","Sys","Rails/classes/Sys.html#method-i-ruby","(*args)","<p>Run a Ruby interpreter with the given arguments.\n",null,1],["ruby_debugger_gemfile_entry","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-ruby_debugger_gemfile_entry","()","",null,0],["ruby_engine","Gem","Rails/classes/Gem.html#method-c-ruby_engine","()","<p>A wrapper around RUBY_ENGINE const that may not be defined\n",null,1],["ruby_version","Gem","Rails/classes/Gem.html#method-c-ruby_version","()","<p>A Gem::Version for the currently running ruby.\n",null,1],["rubygems_api_key=","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-rubygems_api_key-3D","(api_key)","",null,1],["rubygems_api_request","Gem::GemcutterUtilities","Rails/classes/Gem/GemcutterUtilities.html#method-i-rubygems_api_request","(method, path, host = Gem.host, &block)","",null,1],["run","Rails::Initializable::Initializer","Ruby/classes/Rails/Initializable/Initializer.html#method-i-run","(*args)","",null,0],["run","Sprockets::Bootstrap","Ruby/classes/Sprockets/Bootstrap.html#method-i-run","()","<p>TODO: Get rid of config.assets.enabled\n",null,0],["run","ERB","Rails/classes/ERB.html#method-i-run","(b=TOPLEVEL_BINDING)","<p>Generate results and print them. (see ERB#result)\n",null,1],["run","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-i-run","(args)","<p>Run the config specified by <code>args</code>.\n",null,1],["run","Gem::Ext::Builder","Rails/classes/Gem/Ext/Builder.html#method-c-run","(command, results)","",null,1],["run","Gem::GemRunner","Rails/classes/Gem/GemRunner.html#method-i-run","(args)","<p>Run the gem command with the following arguments.\n",null,1],["run","Gem::Server","Rails/classes/Gem/Server.html#method-i-run","()","",null,1],["run","Gem::Server","Rails/classes/Gem/Server.html#method-c-run","(options)","",null,1],["run","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-c-run","(argv = ARGV)","<p>Runs the ri command line executable using <code>argv</code>\n",null,1],["run","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-run","()","<p>Looks up and displays ri data according to the options given.\n",null,1],["run","Rake::Application","Rails/classes/Rake/Application.html#method-i-run","()","<p>Run the Rake application.  The run method performs the following three\nsteps:\n<p>Initialize the command line …\n",null,1],["run","Sys","Rails/classes/Sys.html#method-i-run","(cmd)","<p>Run the system command <code>cmd</code>.\n",null,1],["run","Thread","Rails/classes/Thread.html#method-i-run","()","<p>Wakes up <em>thr</em>, making it eligible for scheduling.\n\n<pre>a = Thread.new { puts &quot;a&quot;; Thread.stop; puts &quot;c&quot; }\nsleep ...</pre>\n",null,1],["run","WEBrick::GenericServer","Rails/classes/WEBrick/GenericServer.html#method-i-run","(sock)","",null,1],["run","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-run","(sock)","<p>Processes requests on <code>sock</code>\n",null,1],["run!","Build","Ruby/classes/Build.html#method-i-run-21","(options = {})","",null,0],["run_bundle","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-run_bundle","()","",null,0],["run_callbacks","ActiveSupport::Callbacks","Ruby/classes/ActiveSupport/Callbacks.html#method-i-run_callbacks","(kind, *args, &block)","<p>Runs the callbacks for the given event.\n<p>Calls the before and around callbacks in the order they were set, …\n",null,0],["run_config","IRB","Rails/classes/IRB.html#method-c-run_config","()","<p>running config\n",null,1],["run_config","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-run_config","()","<p>include run file.\n",null,1],["run_in_transaction?","ActiveRecord::TestFixtures","Ruby/classes/ActiveRecord/TestFixtures.html#method-i-run_in_transaction-3F","()","",null,0],["run_initializers","Rails::Initializable","Ruby/classes/Rails/Initializable.html#method-i-run_initializers","(group=:default, *args)","",null,0],["run_load_hooks","ActiveSupport","Ruby/classes/ActiveSupport.html#method-c-run_load_hooks","(name, base = Object)","",null,0],["run_rdoc","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-i-run_rdoc","(*args)","",null,1],["run_rdoc","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-i-run_rdoc","(*args)","<p>Run RDoc with <code>args</code>, which is an ARGV style argument list\n",null,1],["run_validations!","ActiveModel::Validations","Ruby/classes/ActiveModel/Validations.html#method-i-run_validations-21","()","",null,0],["run_validations!","ActiveModel::Validations::Callbacks","Ruby/classes/ActiveModel/Validations/Callbacks.html#method-i-run_validations-21","()","<p>Overwrite run validations to include callbacks.\n",null,0],["runner","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-c-runner","(&blk)","",null,0],["runtime","ActiveRecord::LogSubscriber","Ruby/classes/ActiveRecord/LogSubscriber.html#method-c-runtime","()","",null,0],["runtime=","ActiveRecord::LogSubscriber","Ruby/classes/ActiveRecord/LogSubscriber.html#method-c-runtime-3D","(value)","",null,0],["runtime_dependencies","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-runtime_dependencies","()","<p>List of dependencies that will automatically be activated at runtime.\n",null,1],["safe_concat","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-safe_concat","(string)","",null,0],["safe_concat","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-safe_concat","(value)","",null,0],["safe_constantize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-safe_constantize","(camel_cased_word)","<p>Tries to find a constant with the name specified in the argument string:\n\n<pre>&quot;Module&quot;.safe_constantize    ...</pre>\n",null,0],["safe_constantize","String","Ruby/classes/String.html#method-i-safe_constantize","()","<p><code>safe_constantize</code> tries to find a declared constant with the\nname specified in the string. It returns ...\n",null,0],["safe_get","ActiveSupport::Dependencies::ClassCache","Ruby/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-safe_get","(key)","",null,0],["safe_join","ActionView::Helpers::OutputSafetyHelper","Ruby/classes/ActionView/Helpers/OutputSafetyHelper.html#method-i-safe_join","(array, sep=$,)","<p>This method returns a html safe string similar to what\n<code>Array#join</code> would return. All items in the array, …\n",null,0],["safe_level","Thread","Rails/classes/Thread.html#method-i-safe_level","()","<p>Returns the safe level in effect for <em>thr</em>. Setting thread-local\nsafe levels can help when implementing …\n",null,1],["safe_ln","FileUtils","Rails/classes/FileUtils.html#method-i-safe_ln","(*args)","<p>Attempt to do a normal file link, but fall back to a copy if the link\nfails.\n",null,1],["safe_unlink","FileUtils","Rails/classes/FileUtils.html#method-c-safe_unlink","(list, options = {})","",null,1],["sample","Array","Ruby/classes/Array.html#method-i-sample","(n=nil)","<p>Backport of Array#sample based on Marc-Andre Lafortune’s\ngithub.com/marcandre/backports/ Returns a random …\n",null,0],["sample","Array","Rails/classes/Array.html#method-i-sample","(p1)","<p>Choose a random element or <code>n</code> random elements from the array.\nThe elements are chosen by using random …\n",null,1],["sanitize","ActionView::Helpers::SanitizeHelper","Ruby/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize","(html, options = {})","<p>This <code>sanitize</code> helper will html encode all tags and strip all\nattributes that aren’t specifically allowed. …\n",null,0],["sanitize","ActiveModel::MassAssignmentSecurity::Sanitizer","Ruby/classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#method-i-sanitize","(attributes, authorizer)","<p>Returns all attributes not denied by the authorizer.\n",null,0],["sanitize","HTML::FullSanitizer","Ruby/classes/HTML/FullSanitizer.html#method-i-sanitize","(text, options = {})","",null,0],["sanitize","HTML::Sanitizer","Ruby/classes/HTML/Sanitizer.html#method-i-sanitize","(text, options = {})","",null,0],["sanitize","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-sanitize","(spec)","<p>Sanitize the descriptive fields in the spec.  Sometimes non-ASCII\ncharacters will garble the site index. …\n",null,1],["sanitize_conditions","ActiveRecord::Sanitization::ClassMethods","Ruby/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_conditions","(condition, table_name = self.table_name)","",null,0],["sanitize_css","ActionView::Helpers::SanitizeHelper","Ruby/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize_css","(style)","<p>Sanitizes a block of CSS code. Used by <code>sanitize</code> when it comes\nacross a style attribute.\n",null,0],["sanitize_css","HTML::WhiteListSanitizer","Ruby/classes/HTML/WhiteListSanitizer.html#method-i-sanitize_css","(style)","<p>Sanitizes a block of css code. Used by #sanitize when it comes across a\nstyle attribute\n",null,0],["sanitize_dom_id","ActionController::RecordIdentifier","Ruby/classes/ActionController/RecordIdentifier.html#method-i-sanitize_dom_id","(candidate_id)","<p>Replaces characters that are invalid in HTML DOM ids with valid ones.\n",null,0],["sanitize_for_mass_assignment","ActiveModel::MassAssignmentSecurity","Ruby/classes/ActiveModel/MassAssignmentSecurity.html#method-i-sanitize_for_mass_assignment","(attributes, role = nil)","",null,0],["sanitize_limit","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-sanitize_limit","(limit)","<p>Sanitizes the given LIMIT parameter in order to prevent SQL injection.\n<p>The <code>limit</code> may be anything that …\n",null,0],["sanitize_sql","ActiveRecord::Sanitization::ClassMethods","Ruby/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql","(condition, table_name = self.table_name)","",null,0],["sanitize_sql_array","ActiveRecord::Sanitization::ClassMethods","Ruby/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_array","(ary)","<p>Accepts an array of conditions. The array has each value sanitized and\ninterpolated into the SQL statement. …\n",null,0],["sanitize_sql_for_assignment","ActiveRecord::Sanitization::ClassMethods","Ruby/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_for_assignment","(assignments)","<p>Accepts an array, hash, or string of SQL conditions and sanitizes them into\na valid SQL fragment for …\n",null,0],["sanitize_sql_for_conditions","ActiveRecord::Sanitization::ClassMethods","Ruby/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_for_conditions","(condition, table_name = self.table_name)","<p>Accepts an array, hash, or string of SQL conditions and sanitizes them into\na valid SQL fragment for …\n",null,0],["sanitize_sql_hash","ActiveRecord::Sanitization::ClassMethods","Ruby/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_hash","(attrs, default_table_name = self.table_name)","",null,0],["sanitize_sql_hash_for_assignment","ActiveRecord::Sanitization::ClassMethods","Ruby/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_hash_for_assignment","(attrs)","<p>Sanitizes a hash of attribute/value pairs into SQL conditions for a SET\nclause.\n\n<pre class=\"ruby\">{ :<span class=\"ruby-identifier\">status</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">nil</span>, :<span class=\"ruby-identifier\">group_id</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["sanitize_sql_hash_for_conditions","ActiveRecord::Sanitization::ClassMethods","Ruby/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_hash_for_conditions","(attrs, default_table_name = self.table_name)","<p>Sanitizes a hash of attribute/value pairs into SQL conditions for a WHERE\nclause.\n\n<pre class=\"ruby\">{ :<span class=\"ruby-identifier\">name</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;foo'bar&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["sanitize_string","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-sanitize_string","(string)","<p>Sanitize a single string.\n",null,1],["sanitizeable?","HTML::LinkSanitizer","Ruby/classes/HTML/LinkSanitizer.html#method-i-sanitizeable-3F","(text)","",null,0],["sanitizeable?","HTML::Sanitizer","Ruby/classes/HTML/Sanitizer.html#method-i-sanitizeable-3F","(text)","",null,0],["satisfied_by?","Gem::Requirement","Rails/classes/Gem/Requirement.html#method-i-satisfied_by-3F","(version)","<p>True if <code>version</code> satisfies this Requirement.\n",null,1],["satisfies_requirement?","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-satisfies_requirement-3F","(dependency)","<p>Checks if this specification meets the requirement of\n<code>dependency</code>.\n",null,1],["saturday?","Date","Rails/classes/Date.html#method-i-saturday-3F","()","<p>Returns true if the date is Saturday.\n",null,1],["saturday?","Time","Rails/classes/Time.html#method-i-saturday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Saturday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2006</span>, <span class=\"ruby-value\">6</span>, <span class=\"ruby-value\">10</span>)      <span class=\"ruby-comment\">#=&gt; 2006-06-10 00:00:00 -0500 ...</span>\n</pre>\n",null,1],["save","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-save","(*)","<p>Saves the model.\n<p>If the model is new a record gets created in the database, otherwise the\nexisting record …\n",null,0],["save","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-i-save","()","",null,0],["save","ActiveRecord::Validations","Ruby/classes/ActiveRecord/Validations.html#method-i-save","(options={})","<p>The validation process on save can be skipped by passing <code>:validate\n=&gt; false</code>. The regular Base#save …\n",null,0],["save","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-save","()","<p>Saves (<code>POST</code>) or updates (<code>PUT</code>) a resource. \nDelegates to <code>create</code> if the object is new, <code>update</code>\nif it exists. …\n",null,0],["save","Rails::Generators::ActiveModel","Ruby/classes/Rails/Generators/ActiveModel.html#method-i-save","()","<p>POST create\n",null,0],["save!","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-save-21","(*)","<p>Saves the model.\n<p>If the model is new a record gets created in the database, otherwise the\nexisting record …\n",null,0],["save!","ActiveRecord::Validations","Ruby/classes/ActiveRecord/Validations.html#method-i-save-21","(options={})","<p>Attempts to save the record just like Base#save but will raise a\n<code>RecordInvalid</code> exception instead of returning …\n",null,0],["save!","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-save-21","()","<p>Saves the resource.\n<p>If the resource is new, it is created via <code>POST</code>, otherwise the\nexisting resource is …\n",null,0],["save_cache","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-save_cache","()","<p>Writes the cache file for this store\n",null,1],["save_class","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-save_class","(klass)","<p>Writes the ri data for <code>klass</code>\n",null,1],["save_exception_mode","BigDecimal","Rails/classes/BigDecimal.html#method-c-save_exception_mode","()","",null,1],["save_history","IRB::Context","Rails/classes/IRB/Context.html#method-i-save_history","()","",null,1],["save_history","IRB::HistorySavingAbility","Rails/classes/IRB/HistorySavingAbility.html#method-i-save_history","()","",null,1],["save_history=","IRB::Context","Rails/classes/IRB/Context.html#method-i-save_history-3D","(val)","",null,1],["save_limit","BigDecimal","Rails/classes/BigDecimal.html#method-c-save_limit","()","",null,1],["save_method","ActiveRecord::DynamicFinderMatch","Ruby/classes/ActiveRecord/DynamicFinderMatch.html#method-i-save_method","()","",null,0],["save_method","RDoc::RI::Store","Rails/classes/RDoc/RI/Store.html#method-i-save_method","(klass, method)","<p>Writes the ri data for <code>method</code> on <code>klass</code>\n",null,1],["save_record?","ActiveRecord::DynamicFinderMatch","Ruby/classes/ActiveRecord/DynamicFinderMatch.html#method-i-save_record-3F","()","",null,0],["save_rounding_mode","BigDecimal","Rails/classes/BigDecimal.html#method-c-save_rounding_mode","()","",null,1],["save_with_validation","ActiveResource::Validations","Ruby/classes/ActiveResource/Validations.html#method-i-save_with_validation","(options={})","<p>Validate a resource and save (POST) it to the remote web service. If any\nlocal validations fail - the …\n",null,0],["say","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-say","(message, subitem=false)","",null,0],["say","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-say","(statement=\"\")","<p>Display a statement.\n",null,1],["say","Gem::UserInteraction","Rails/classes/Gem/UserInteraction.html#method-i-say","(*args)","",null,1],["say_with_time","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-say_with_time","(message)","",null,0],["scalar","Matrix","Rails/classes/Matrix.html#method-c-scalar","(n, value)","<p>Creates an <code>n</code> by <code>n</code> diagonal matrix where each\ndiagonal element is <code>value</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">scalar</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">5</span>)\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">5</span> <span class=\"ruby-value\">0</span>\n <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["scalar","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-scalar","(*args)","",null,1],["scalar","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-scalar","(p1, p2, p3, p4, p5, p6)","<p>Emit a scalar with <code>value</code>, <code>anchor</code>,\n<code>tag</code>, and a <code>plain</code> or <code>quoted</code> string\ntype with <code>style</code>.\n<p>See Psych::Handler#scalar …\n",null,1],["scalar","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-scalar","(value, anchor, tag, plain, quoted, style)","<p>Called when a scalar <code>value</code> is found.  The scalar may have an\n<code>anchor</code>, a <code>tag</code>, be implicitly <code>plain</code>\nor implicitly …\n",null,1],["scalar","Psych::TreeBuilder","Rails/classes/Psych/TreeBuilder.html#method-i-scalar","(value, anchor, tag, plain, quoted, style)","",null,1],["scalar=","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-scalar-3D","(value)","<p>Emit a scalar with <code>value</code>\n",null,1],["scan","OpenSSL::X509::Name::RFC2253DN","Rails/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-scan","(dn)","",null,1],["scan","RDoc::Parser::C","Rails/classes/RDoc/Parser/C.html#method-i-scan","()","<p>Extracts the classes, modules, methods, attributes, constants and aliases\nfrom a C file and returns an …\n",null,1],["scan","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-scan","()","<p>Scans this ruby file for ruby constructs\n",null,1],["scan","RDoc::Parser::Simple","Rails/classes/RDoc/Parser/Simple.html#method-i-scan","()","<p>Extract the file contents and attach them to the TopLevel as a comment\n",null,1],["scan","REXML::IOSource","Rails/classes/REXML/IOSource.html#method-i-scan","(pattern, cons=false)","",null,1],["scan","REXML::Source","Rails/classes/REXML/Source.html#method-i-scan","(pattern, cons=false)","<p>Scans the source for a given pattern.  Note, that this is not your usual\nscan() method.  For one thing, …\n",null,1],["scan","String","Rails/classes/String.html#method-i-scan","(p1)","<p>Both forms iterate through <em>str</em>, matching the pattern (which may be\na <code>Regexp</code> or a <code>String</code>). For each match, …\n",null,1],["scan","StringScanner","Rails/classes/StringScanner.html#method-i-scan","(p1)","<p>Tries to match with <code>pattern</code> at the current position. If\nthere’s a match, the scanner advances the “scan …\n",null,1],["scan","WEBrick::HTTPServer::MountTable","Rails/classes/WEBrick/HTTPServer/MountTable.html#method-i-scan","(path)","",null,1],["scan_full","StringScanner","Rails/classes/StringScanner.html#method-i-scan_full","(p1, p2, p3)","<p>Tests whether the given <code>pattern</code> is matched from the current\nscan pointer. Advances the scan pointer if …\n",null,1],["scan_until","StringScanner","Rails/classes/StringScanner.html#method-i-scan_until","(p1)","<p>Scans the string <em>until</em> the <code>pattern</code> is matched. \nReturns the substring up to and including the end of …\n",null,1],["scanf","IO","Rails/classes/IO.html#method-i-scanf","(str)","<p>Scans the current string until the match is exhausted, yielding each match\nas it is encountered in the …\n",null,1],["scanf","Kernel","Rails/classes/Kernel.html#method-i-scanf","(format, &b)","<p>Scans STDIN for data matching <code>format</code>.  See IO#scanf for\ndetails.\n<p>See Scanf for details on creating a format …\n",null,1],["scanf","String","Rails/classes/String.html#method-i-scanf","(fstr)","<p>Scans the current string. If a block is given, it functions exactly like\nblock_scanf.\n\n<pre>arr = &quot;123 456&quot;.scanf(&quot;%d%d&quot;) ...</pre>\n",null,1],["schema","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-schema","(&block)","<p>Creates a schema for this resource - setting the attributes that are known\nprior to fetching an instance …\n",null,0],["schema","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-schema","()","<p>If no schema has been defined for the class (see\n<code>ActiveResource::schema=</code>), the default automatic schema …\n",null,0],["schema=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-schema-3D","(the_schema)","<p>Alternative, direct way to specify a <code>schema</code> for this Resource.\n<code>schema</code> is more flexible, but this is quick …\n",null,0],["schema_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-schema_exists-3F","(name)","<p>Returns true if schema exists.\n",null,0],["schema_format","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-schema_format","","<p>Specifies the format to use when dumping the database schema with Rails’\nRakefile. If :sql, the schema …\n",null,0],["schema_search_path","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-schema_search_path","()","<p>Returns the active schema search path.\n",null,0],["schema_search_path=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-schema_search_path-3D","(schema_csv)","<p>Sets the schema search path to a string of comma-separated schema names.\nNames beginning with $ have …\n",null,0],["scheme=","URI::Generic","Rails/classes/URI/Generic.html#method-i-scheme-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["scheme_list","URI","Rails/classes/URI.html#method-c-scheme_list","()","<p>Returns a Hash of the defined schemes\n",null,1],["scope","ActionDispatch::Routing::Mapper::Scoping","Ruby/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-scope","(*args)","<p>Scopes a set of routes to the given default options.\n<p>Take the following route definition as an example: …\n",null,0],["scope","ActiveRecord::Scoping::Named::ClassMethods","Ruby/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-scope","(name, scope_options = {})","<p>Adds a class method for retrieving and querying objects. A scope represents\na narrowing of a database …\n",null,0],["scope","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-scope","()","<p>returns scope.\n",null,1],["scope=","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-scope-3D","(val)","<p>setter for scope <code>val</code>\n",null,1],["scope_for_create","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-scope_for_create","()","",null,0],["scope_name","Rake::Task","Rails/classes/Rake/Task.html#method-c-scope_name","(scope, task_name)","<p>Apply the scope to the task name according to the rules for this kind of\ntask.  Generic tasks will accept …\n",null,1],["scoped","ActiveRecord::Scoping::Named::ClassMethods","Ruby/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-scoped","(options = nil)","<p>Returns an anonymous scope.\n\n<pre>posts = Post.scoped\nposts.size # Fires &quot;select count(*) from  posts&quot; and returns ...</pre>\n",null,0],["scoping","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-scoping","()","<p>Scope all queries to the current scope.\n<p>Example\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Comment</span>.<span class=\"ruby-identifier\">where</span>(:<span class=\"ruby-identifier\">post_id</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span>).<span class=\"ruby-identifier\">scoping</span> <span class=\"ruby-keyword\">do</span>\n  <span class=\"ruby-constant\">Comment</span>.<span class=\"ruby-identifier\">first</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["script","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-script","()","",null,0],["script","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-script","(force = false)","",null,0],["scrl","Curses","Rails/classes/Curses.html#method-c-scrl","(p1)","<p>Scrolls the current window Fixnum <code>num</code> lines. The current\ncursor position is not changed.\n<p>For positive …\n",null,1],["scrl","Curses::Window","Rails/classes/Curses/Window.html#method-i-scrl","(p1)","<p>Scrolls the current window Fixnum <code>num</code> lines. The current\ncursor position is not changed.\n<p>For positive …\n",null,1],["scroll","Curses::Window","Rails/classes/Curses/Window.html#method-i-scroll","()","<p>Scrolls the current window up one line.\n",null,1],["scrolling_list","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-scrolling_list","(name = \"\", *values)","",null,1],["scrollok","Curses::Window","Rails/classes/Curses/Window.html#method-i-scrollok","(p1)","<p>Controls what happens when the cursor of a window is moved off the edge of\nthe window or scrolling region, …\n",null,1],["search","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-search","(gem_pattern, platform_or_requirement = false)","<p>Search for a gem by Gem::Dependency <code>gem_pattern</code>.  If\n<code>only_platform</code> is true, only gems matching Gem::Platform.local\n…\n",null,1],["search","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-search","(key)","",null,1],["search","IRB::SLex","Rails/classes/IRB/SLex.html#method-i-search","(token)","",null,1],["search","IRB::SLex::Node","Rails/classes/IRB/SLex/Node.html#method-i-search","(chrs, opt = nil)","",null,1],["search","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-search","(keys, charset = nil)","<p>Sends a SEARCH command to search the mailbox for messages that match the\ngiven searching criteria, and …\n",null,1],["search","OptionParser::List","Rails/classes/OptionParser/List.html#method-i-search","(id, key)","<p>Searches <code>key</code> in <code>id</code> list. The result is returned\nor yielded if a block is given. If it isn’t found, nil …\n",null,1],["search_const","OptionParser","Rails/classes/OptionParser.html#method-c-search_const","(klass, name)","",null,1],["search_convpath","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-c-search_convpath","(*args)","<p>Returns a conversion path.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Converter</span>.<span class=\"ruby-identifier\">search_convpath</span>(<span class=\"ruby-string\">&quot;ISO-8859-1&quot;</span>, <span class=\"ruby-string\">&quot;EUC-JP&quot;</span>)\n<span class=\"ruby-comment\">#=&gt; [[#&lt;Encoding:ISO-8859-1&gt;, ...</span>\n</pre>\n",null,1],["search_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-search_field","(object_name, method, options = {})","<p>Returns an input of type “search” for accessing a specified attribute\n(identified by <code>method</code> …\n",null,0],["search_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-search_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “search”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,0],["search_file_from_ruby_path","IRB::IrbLoader","Rails/classes/IRB/IrbLoader.html#method-i-search_file_from_ruby_path","(fn)","",null,1],["search_full","StringScanner","Rails/classes/StringScanner.html#method-i-search_full","(p1, p2, p3)","<p>Scans the string <em>until</em> the <code>pattern</code> is matched.\nAdvances the scan pointer if <code>advance_pointer_p</code>, otherwise …\n",null,1],["search_servlet","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-search_servlet","(path)","<p>Finds a servlet for <code>path</code>\n",null,1],["searcher","Gem","Rails/classes/Gem.html#method-c-searcher","()","<p>The GemPathSearcher object used to search for matching installed gems.\n",null,1],["sec","Time","Rails/classes/Time.html#method-i-sec","()","<p>Returns the second of the minute (0..60)<em>[Yes, seconds really can range\nfrom zero to 60. This allows the</em> …\n",null,1],["sec=","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-sec-3D","(value)","",null,1],["second","Array","Ruby/classes/Array.html#method-i-second","()","<p>Equal to <code>self[1]</code>.\n",null,0],["second","Numeric","Ruby/classes/Numeric.html#method-i-second","()","",null,0],["second=","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-second-3D","(second)","",null,1],["second=","RSS::Maker::ITunesItemModel::ITunesDurationBase","Rails/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html#method-i-second-3D","(second)","",null,1],["seconds","Numeric","Ruby/classes/Numeric.html#method-i-seconds","()","<p>Enables the use of time calculations and declarations, like 45.minutes +\n2.hours + 4.years.\n<p>These methods …\n",null,0],["seconds_since_midnight","DateTime","Ruby/classes/DateTime.html#method-i-seconds_since_midnight","()","<p>Seconds since midnight: DateTime.now.seconds_since_midnight\n",null,0],["seconds_since_midnight","Time","Ruby/classes/Time.html#method-i-seconds_since_midnight","()","<p>Seconds since midnight: Time.now.seconds_since_midnight\n",null,0],["seconds_to_utc_offset","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-c-seconds_to_utc_offset","(seconds, colon = true)","<p>Assumes self represents an offset from UTC in seconds (as returned from\nTime#utc_offset) and turns this …\n",null,0],["secret_token","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-secret_token","(request)","",null,0],["section","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-section","(name)","",null,1],["sections","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-sections","()","",null,1],["sections","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-sections","()","<p>Sections in this context\n",null,1],["secure=","CGI::Cookie","Rails/classes/CGI/Cookie.html#method-i-secure-3D","(val)","<p>Set whether the Cookie is a secure cookie or not.\n<p><code>val</code> must be a boolean.\n",null,1],["see","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-see","()","<p>A method/attribute to look at, in particular if this method/attribute has\nno documentation.\n<p>It can be …\n",null,1],["seed","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-seed","()","<p>See the OpenSSL documentation for EC_GROUP_get0_seed()\n",null,1],["seed","Random","Rails/classes/Random.html#method-i-seed","()","<p>Returns the seed of the generator.\n",null,1],["seed=","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-seed-3D","(p1)","<p>See the OpenSSL documentation for EC_GROUP_set_seed()\n",null,1],["seek","ARGF","Rails/classes/ARGF.html#method-i-seek","(*args)","<p>Seeks to offset <em>amount</em> (an <code>Integer</code>) in the\n<code>ARGF</code> stream according to the value of <em>whence</em>. See\n+IO#seek …\n",null,1],["seek","Dir","Rails/classes/Dir.html#method-i-seek","(p1)","<p>Seeks to a particular location in <em>dir</em>. <em>integer</em> must be a\nvalue returned by <code>Dir#tell</code>.\n\n<pre>d = Dir.new(&quot;testdir&quot;) ...</pre>\n",null,1],["seek","IO","Rails/classes/IO.html#method-i-seek","(p1, p2 = v2)","<p>Seeks to a given offset <em>anInteger</em> in the stream according to the\nvalue of <em>whence</em>:\n\n<pre>IO::SEEK_CUR  | Seeks ...</pre>\n",null,1],["seek","StringIO","Rails/classes/StringIO.html#method-i-seek","(p1, p2 = v2)","<p>Seeks to a given offset <em>amount</em> in the stream according to the\nvalue of <em>whence</em> (see IO#seek).\n",null,1],["select","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-select","(method, choices, options = {}, html_options = {})","",null,0],["select","ActionView::Helpers::FormOptionsHelper","Ruby/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-select","(object, method, choices, options = {}, html_options = {})","<p>Create a select tag and a series of contained option tags for the provided\nobject and method. The option …\n",null,0],["select","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select","(sql, name = nil, binds = [])","<p>Returns an array of record hashes with the column names as keys and column\nvalues as values.\n",null,0],["select","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-select","(sql, name = nil, binds = [])","<p>Returns an array of record hashes with the column names as keys and column\nvalues as values.\n",null,0],["select","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-select","(value = Proc.new)","<p>Works in two unique ways.\n<p>First: takes a block so it can be used just like Array#select.\n\n<pre>Model.scoped.select ...</pre>\n",null,0],["select","HTML::Selector","Ruby/classes/HTML/Selector.html#method-i-select","(root)","<p>Selects and returns an array with all matching elements, beginning with one\nnode and traversing through …\n",null,0],["select","HTML::Tag","Ruby/classes/HTML/Tag.html#method-i-select","(selector, *values)","",null,0],["select","Array","Rails/classes/Array.html#method-i-select","()","<p>Invokes the block passing in successive elements from <code>self</code>,\nreturning an array containing those elements …\n",null,1],["select","DBM","Rails/classes/DBM.html#method-i-select","()","<p>Returns a new array consisting of the [key, value] pairs for which the code\nblock returns true.\n",null,1],["select","ENV","Rails/classes/ENV.html#method-c-select","()","<p>Returns a copy of the environment for entries where the block returns true.\n<p>Returns an Enumerator if no …\n",null,1],["select","Enumerable","Rails/classes/Enumerable.html#method-i-select","()","<p>Returns an array containing all elements of <em>enum</em> for which\n<em>block</em> is not <code>false</code> (see also\n<code>Enumerable#reject</code> …\n",null,1],["select","GDBM","Rails/classes/GDBM.html#method-i-select","()","<p>Returns a new array of all key-value pairs of the database for which\n<em>block</em> evaluates to true.\n",null,1],["select","Hash","Rails/classes/Hash.html#method-i-select","()","<p>Returns a new hash consisting of entries for which the block returns true.\n<p>If no block is given, an enumerator …\n",null,1],["select","IO","Rails/classes/IO.html#method-c-select","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Calls select(2) system call. It monitors given arrays of <code>IO</code>\nobjects, waits one or more of <code>IO</code> objects …\n",null,1],["select","Kernel","Rails/classes/Kernel.html#method-i-select","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Calls select(2) system call. It monitors given arrays of <code>IO</code>\nobjects, waits one or more of <code>IO</code> objects …\n",null,1],["select","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-select","(mailbox)","<p>Sends a SELECT command to select a <code>mailbox</code> so that messages in\nthe <code>mailbox</code> can be accessed.\n<p>After you …\n",null,1],["select","SDBM","Rails/classes/SDBM.html#method-i-select","()","",null,1],["select","Struct","Rails/classes/Struct.html#method-i-select","(*args)","<p>Invokes the block passing in successive elements from <em>struct</em>,\nreturning an array containing those elements …\n",null,1],["select","URI::Generic","Rails/classes/URI/Generic.html#method-i-select","(*components)","<p>Args\n<p><code>components</code> &mdash; Multiple Symbol arguments defined in URI::HTTP\n\n<p>Description\n",null,1],["select","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-select","( *keys )","<p>If a block is provided, returns a new array containing [key, value] pairs\nfor which the block returns …\n",null,1],["select!","Array","Rails/classes/Array.html#method-i-select-21","()","<p>Invokes the block passing in successive elements from <code>self</code>,\ndeleting elements for which the block returns …\n",null,1],["select!","ENV","Rails/classes/ENV.html#method-c-select-21","()","<p>Equivalent to ENV#keep_if but returns <code>nil</code> if no changes were\nmade.\n",null,1],["select!","Hash","Rails/classes/Hash.html#method-i-select-21","()","<p>Equivalent to <code>Hash#keep_if</code>, but returns <code>nil</code> if no\nchanges were made.\n",null,1],["select!","Set","Rails/classes/Set.html#method-i-select-21","()","<p>Equivalent to Set#keep_if, but returns nil if no changes were made.\n",null,1],["select_all","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_all","(arel, name = nil, binds = [])","<p>Returns an array of record hashes with the column names as keys and column\nvalues as values.\n",null,0],["select_all","ActiveRecord::ConnectionAdapters::QueryCache","Ruby/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-select_all","(arel, name = nil, binds = [])","",null,0],["select_date","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-select_date","(date = Date.current, options = {}, html_options = {})","<p>Returns a set of html select-tags (one for year, month, and day)\npre-selected with the <code>date</code>. It’s possible …\n",null,0],["select_datetime","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-select_datetime","(datetime = Time.current, options = {}, html_options = {})","<p>Returns a set of html select-tags (one for year, month, day, hour, minute,\nand second) pre-selected with …\n",null,0],["select_day","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-select_day","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the days 1 through 31 with\nthe current day selected. The …\n",null,0],["select_first","HTML::Selector","Ruby/classes/HTML/Selector.html#method-i-select_first","(root)","<p>Similar to #select but returns the first matching element. Returns\n<code>nil</code> if no element matches the selector. …\n",null,0],["select_hour","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-select_hour","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the hours 0 through 23 with\nthe current hour selected. …\n",null,0],["select_message","IRB::InputCompletor","Rails/classes/IRB/InputCompletor.html#method-c-select_message","(receiver, message, candidates, sep = \".\")","",null,1],["select_minute","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-select_minute","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the minutes 0 through 59 with\nthe current minute selected. …\n",null,0],["select_month","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-select_month","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the months January through\nDecember with the current month …\n",null,0],["select_one","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_one","(arel, name = nil)","<p>Returns a record hash with the column names as keys and column values as\nvalues.\n",null,0],["select_rows","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_rows","(sql, name = nil)","<p>Returns an array of arrays containing the field values. Order is the same\nas that returned by <code>columns</code> …\n",null,0],["select_rows","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-select_rows","(sql, name = nil)","<p>Returns an array of arrays containing the field values. Order is the same\nas that returned by <code>columns</code> …\n",null,0],["select_rows","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-select_rows","(sql, name = nil)","<p>DATABASE STATEMENTS ======================================\n",null,0],["select_rows","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-select_rows","(sql, name = nil)","<p>Executes a SELECT query and returns an array of rows. Each row is an array\nof field values.\n",null,0],["select_rows","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-select_rows","(sql, name = nil)","",null,0],["select_second","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-select_second","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the seconds 0 through 59 with\nthe current second selected. …\n",null,0],["select_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-select_tag","(name, option_tags = nil, options = {})","<p>Creates a dropdown selection box, or if the <code>:multiple</code> option\nis set to true, a multiple choice selection …\n",null,0],["select_time","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-select_time","(datetime = Time.current, options = {}, html_options = {})","<p>Returns a set of html select-tags (one for hour and minute). You can set\n<code>:time_separator</code> key to format …\n",null,0],["select_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_value","(arel, name = nil)","<p>Returns a single value from a record\n",null,0],["select_values","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_values","(arel, name = nil)","<p>Returns an array of the values of the first column in a select:\n\n<pre>select_values(&quot;SELECT id FROM companies ...</pre>\n",null,0],["select_year","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-select_year","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the five years on each side\nof the current, which is selected. …\n",null,0],["selector","HTML","Ruby/classes/HTML.html#method-c-selector","(statement, *values)","<p>See HTML::Selector.new\n",null,0],["send","BasicSocket","Rails/classes/BasicSocket.html#method-i-send","(p1, p2, p3 = v3)","<p>send <em>mesg</em> via <em>basicsocket</em>.\n<p><em>mesg</em> should be a string.\n<p><em>flags</em> should be a bitwise OR of Socket::MSG_* constants. ...\n",null,1],["send","Object","Rails/classes/Object.html#method-i-send","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments\nspecified. You can use <code>__send__</code> if …\n",null,1],["send","UDPSocket","Rails/classes/UDPSocket.html#method-i-send","(mesg, flags, *rest)","<p>Sends <em>mesg</em> via <em>udpsocket</em>.\n<p><em>flags</em> should be a bitwise OR of Socket::MSG_* constants.\n\n<pre>u1 = UDPSocket.new\nu1.bind(&quot;127.0.0.1&quot;, ...</pre>\n",null,1],["send_action","ActionController::ImplicitRender","Ruby/classes/ActionController/ImplicitRender.html#method-i-send_action","(method, *args)","",null,0],["send_body","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-send_body","(socket)","<p>Sends the body on <code>socket</code>\n",null,1],["send_data","ActionController::DataStreaming","Ruby/classes/ActionController/DataStreaming.html#method-i-send_data","(data, options = {})","<p>Sends the given binary data to the browser. This method is similar to\n<code>render :text =&gt; data</code>, but also …\n",null,0],["send_data","ActionController::Instrumentation","Ruby/classes/ActionController/Instrumentation.html#method-i-send_data","(data, options = {})","",null,0],["send_data","ActionController::LogSubscriber","Ruby/classes/ActionController/LogSubscriber.html#method-i-send_data","(event)","",null,0],["send_file","ActionController::DataStreaming","Ruby/classes/ActionController/DataStreaming.html#method-i-send_file","(path, options = {})","<p>Sends the file. This uses a server-appropriate method (such as X-Sendfile)\nvia the Rack::Sendfile middleware. …\n",null,0],["send_file","ActionController::Instrumentation","Ruby/classes/ActionController/Instrumentation.html#method-i-send_file","(path, options={})","",null,0],["send_file","ActionController::LogSubscriber","Ruby/classes/ActionController/LogSubscriber.html#method-i-send_file","(event)","",null,0],["send_gem","Gem::Commands::PushCommand","Rails/classes/Gem/Commands/PushCommand.html#method-i-send_gem","(name)","",null,1],["send_header","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-send_header","(socket)","<p>Sends the headers on <code>socket</code>\n",null,1],["send_io","UNIXSocket","Rails/classes/UNIXSocket.html#method-i-send_io","(p1)","<p>Sends <em>io</em> as file descriptor passing.\n\n<pre>s1, s2 = UNIXSocket.pair\n\ns1.send_io STDOUT\nstdout = s2.recv_io\n ...</pre>\n",null,1],["send_mail","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-send_mail","(msgstr, from_addr, *to_addrs)","",null,1],["send_mail","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-send_mail","(msgstr, from_addr, *to_addrs)","",null,1],["send_message","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-send_message","(msgstr, from_addr, *to_addrs)","<p>Sends <code>msgstr</code> as a message.  Single CR (“r”) and LF (“n”) found\nin the <code>msgstr</code>, are …\n",null,1],["send_message","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-send_message","(msgstr, from_addr, *to_addrs)","<p>Sends <code>msgstr</code> as a message.  Single CR (“r”) and LF (“n”) found\nin the <code>msgstr</code>, are …\n",null,1],["send_reply","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-i-send_reply","(succ, result)","<p>On the server side, send a reply to the client.\n",null,1],["send_request","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-i-send_request","(ref, msg_id, arg, b)","<p>On the client side, send a request to the server.\n",null,1],["send_request","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-send_request","(name, path, data = nil, header = nil)","<p>Sends an HTTP request to the HTTP server. Also sends a DATA string if\n<code>data</code> is given.\n<p>Returns a Net::HTTPResponse …\n",null,1],["send_request","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-send_request","(name, path, data = nil, header = nil)","<p>Sends an HTTP request to the HTTP server. Also sends a DATA string if\n<code>data</code> is given.\n<p>Returns a Net::HTTPResponse …\n",null,1],["send_response","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-send_response","(socket)","<p>Sends the response on <code>socket</code>\n",null,1],["sendcmd","Net::FTP","Rails/classes/Net/FTP.html#method-i-sendcmd","(cmd)","<p>Sends a command and returns the response.\n",null,1],["sender","IRB::Frame","Rails/classes/IRB/Frame.html#method-c-sender","()","",null,1],["sendmail","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-sendmail","(msgstr, from_addr, *to_addrs)","",null,1],["sendmail","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-sendmail","(msgstr, from_addr, *to_addrs)","",null,1],["sendmsg","BasicSocket","Rails/classes/BasicSocket.html#method-i-sendmsg","(*args)","<p>sendmsg sends a message using sendmsg(2) system call in blocking manner.\n<p><em>mesg</em> is a string to send.\n<p><em>flags</em> ...\n",null,1],["sendmsg_nonblock","BasicSocket","Rails/classes/BasicSocket.html#method-i-sendmsg_nonblock","(*args)","<p>sendmsg_nonblock sends a message using sendmsg(2) system call in\nnon-blocking manner.\n<p>It is similar to …\n",null,1],["separator","OptionParser","Rails/classes/OptionParser.html#method-i-separator","(string)","<p>Add separator in summary.\n",null,1],["seplist","PP::PPMethods","Rails/classes/PP/PPMethods.html#method-i-seplist","(list, sep=nil, iter_method=:each)","<p>Adds a separated list. The list is separated by comma with breakable space,\nby default.\n<p>#seplist iterates …\n",null,1],["seq=","Psych::Coder","Rails/classes/Psych/Coder.html#method-i-seq-3D","(list)","<p>Emit a sequence of <code>list</code>\n",null,1],["sequence","RDoc::Context::Section","Rails/classes/RDoc/Context/Section.html#method-i-sequence","()","<p>Section sequence number (deprecated)\n",null,1],["sequence_name","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-sequence_name","()","",null,0],["sequence_name=","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-sequence_name-3D","(value)","<p>Sets the name of the sequence to use when generating ids to the given\nvalue, or (if the value is nil …\n",null,0],["serial","OpenSSL::OCSP::CertificateId","Rails/classes/OpenSSL/OCSP/CertificateId.html#method-i-serial","()","",null,1],["serial","OpenSSL::PKCS7::RecipientInfo","Rails/classes/OpenSSL/PKCS7/RecipientInfo.html#method-i-serial","()","",null,1],["serial","OpenSSL::PKCS7::SignerInfo","Rails/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-serial","()","",null,1],["serial","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-serial","()","",null,1],["serial","OpenSSL::X509::Revoked","Rails/classes/OpenSSL/X509/Revoked.html#method-i-serial","()","",null,1],["serial=","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-serial-3D","(p1)","",null,1],["serial=","OpenSSL::X509::Revoked","Rails/classes/OpenSSL/X509/Revoked.html#method-i-serial-3D","(p1)","",null,1],["serial_sequence","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-serial_sequence","(table, column)","",null,0],["serializable_hash","ActiveModel::Serialization","Ruby/classes/ActiveModel/Serialization.html#method-i-serializable_hash","(options = nil)","",null,0],["serializable_hash","ActiveRecord::Serialization","Ruby/classes/ActiveRecord/Serialization.html#method-i-serializable_hash","(options = nil)","",null,0],["serialize","ActiveRecord::AttributeMethods::Serialization::Attribute","Ruby/classes/ActiveRecord/AttributeMethods/Serialization/Attribute.html#method-i-serialize","()","",null,0],["serialize","ActiveRecord::AttributeMethods::Serialization::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html#method-i-serialize","(attr_name, class_name = Object)","<p>If you have an attribute that needs to be saved to the database as an\nobject, and retrieved as the same …\n",null,0],["serialized_value","ActiveRecord::AttributeMethods::Serialization::Attribute","Ruby/classes/ActiveRecord/AttributeMethods/Serialization/Attribute.html#method-i-serialized_value","()","",null,0],["serve","GServer","Rails/classes/GServer.html#method-i-serve","(io)","",null,1],["serve","XMLRPC::CGIServer","Rails/classes/XMLRPC/CGIServer.html#method-i-serve","()","",null,1],["serve","XMLRPC::ModRubyServer","Rails/classes/XMLRPC/ModRubyServer.html#method-i-serve","()","",null,1],["serve","XMLRPC::Server","Rails/classes/XMLRPC/Server.html#method-i-serve","()","",null,1],["server_error?","WEBrick::HTTPStatus","Rails/classes/WEBrick/HTTPStatus.html#method-c-server_error-3F","(code)","<p>Is <code>code</code> a server error status?\n",null,1],["server_name","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-server_name","()","<p>The server name this request is for\n",null,1],["server_port","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-server_port","()","",null,0],["server_software","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-server_software","()","<p>Returns the lowercase name of the HTTP server software.\n",null,0],["service","DRb::ExtServManager","Rails/classes/DRb/ExtServManager.html#method-i-service","(name)","",null,1],["service","WEBrick::CGI","Rails/classes/WEBrick/CGI.html#method-i-service","(req, res)","",null,1],["service","WEBrick::HTTPProxyServer","Rails/classes/WEBrick/HTTPProxyServer.html#method-i-service","(req, res)","",null,1],["service","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-service","(req, res)","<p>Services <code>req</code> and fills in <code>res</code>\n",null,1],["service","WEBrick::HTTPServlet::AbstractServlet","Rails/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-i-service","(req, res)","<p>Dispatches to a <code>do_</code> method based on <code>req</code> if such a\nmethod is available.  (<code>do_GET</code> for a GET request).  …\n",null,1],["service","WEBrick::HTTPServlet::FileHandler","Rails/classes/WEBrick/HTTPServlet/FileHandler.html#method-i-service","(req, res)","",null,1],["service","XMLRPC::WEBrickServlet","Rails/classes/XMLRPC/WEBrickServlet.html#method-i-service","(request, response)","",null,1],["session","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-session","()","",null,1],["session=","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-session-3D","(p1)","<p>Sets the Session to be used when the connection is established.\n",null,1],["session_add","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-session_add","(p1)","<p>Adds <code>session</code> to the session cache\n",null,1],["session_auth=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-session_auth-3D","(user)","<p>Set the authorized user for this session\n",null,0],["session_cache_mode","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_mode","()","<p>The current session cache mode.\n",null,1],["session_cache_mode=","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_mode-3D","(p1)","<p>Sets the SSL session cache mode.  Bitwise-or together the desired\nSESSION_CACHE_* constants to set.  …\n",null,1],["session_cache_size","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_size","()","<p>Returns the current session cache size.  Zero is used to represent an\nunlimited cache size.\n",null,1],["session_cache_size=","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_size-3D","(p1)","<p>Sets the session cache size.  Returns the previously valid session cache\nsize.  Zero is used to represent …\n",null,1],["session_cache_stats","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_stats","()","<p>Returns a Hash containing the following keys:\n<p>:accept &mdash; Number of started SSL/TLS handshakes in server mode …\n",null,1],["session_id_column","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-session_id_column","","<p>The session id field defaults to ‘session_id’.\n",null,0],["session_options=","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-session_options-3D","(options)","",null,0],["session_remove","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-session_remove","(p1)","<p>Removes <code>session</code> from the session cache\n",null,1],["session_reused?","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-session_reused-3F","()","<p>Returns true if a reused session was negotiated during the handshake.\n",null,1],["session_store","Rails::Application::Configuration","Ruby/classes/Rails/Application/Configuration.html#method-i-session_store","(*args)","",null,0],["session_table_name","ActiveRecord::Generators::SessionMigrationGenerator","Ruby/classes/ActiveRecord/Generators/SessionMigrationGenerator.html#method-i-session_table_name","()","",null,0],["set","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-set","(key, value)","<p>Set messages for <code>key</code> to <code>value</code>\n",null,0],["set","IPAddr","Rails/classes/IPAddr.html#method-i-set","(addr, *family)","<p>Set +@addr+, the internal stored ip address, to given <code>addr</code>.\nThe parameter <code>addr</code> is validated using the …\n",null,1],["set_arg_names","Rake::Task","Rails/classes/Rake/Task.html#method-i-set_arg_names","(args)","<p>Set the names of the arguments for this task. <code>args</code> should be\nan array of symbols, one for each argument …\n",null,1],["set_attributes","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-set_attributes","(val)","<p>private setter for attributes <code>val</code>\n",null,1],["set_attrs","RDoc::Markup::AttrSpan","Rails/classes/RDoc/Markup/AttrSpan.html#method-i-set_attrs","(start, length, bits)","<p>Toggles <code>bits</code> from <code>start</code> to <code>length</code>\n",null,1],["set_backtrace","Exception","Rails/classes/Exception.html#method-i-set_backtrace","(p1)","<p>Sets the backtrace information associated with <em>exc</em>. The argument\nmust be an array of <code>String</code> objects in …\n",null,1],["set_backtrace","OptionParser::ParseError","Rails/classes/OptionParser/ParseError.html#method-i-set_backtrace","(array)","",null,1],["set_callback","ActiveSupport::Callbacks::ClassMethods","Ruby/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-set_callback","(name, *filter_list, &block)","<p>Install a callback for the given event.\n\n<pre>set_callback :save, :before, :before_meth\nset_callback :save, ...</pre>\n",null,0],["set_callback","DL","Rails/classes/DL.html#method-i-set_callback","(ty, argc, &cbp)","",null,1],["set_callback_internal","DL","Rails/classes/DL.html#method-i-set_callback_internal","(proc_entry, addr_entry, argc, ty, abi = nil, &cbp)","",null,1],["set_cdecl_callback","DL","Rails/classes/DL.html#method-i-set_cdecl_callback","(ty, argc, &cbp)","",null,1],["set_close_on_exec","WEBrick::Utils","Rails/classes/WEBrick/Utils.html#method-c-set_close_on_exec","(io)","<p>Sets the close on exec flag for <code>io</code>\n",null,1],["set_content_type","ActionMailer::Base","Ruby/classes/ActionMailer/Base.html#method-i-set_content_type","(m, user_content_type, class_default)","",null,0],["set_content_type","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-set_content_type","(type, params = {})","<p>Sets the content type in an HTTP header. The <code>type</code> should be a\nfull HTTP content type, e.g. “text/html …\n",null,1],["set_cookie","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-set_cookie","(key, value)","",null,0],["set_ctypes","DL::CStructEntity","Rails/classes/DL/CStructEntity.html#method-i-set_ctypes","(types)","",null,1],["set_ctypes","DL::CUnionEntity","Rails/classes/DL/CUnionEntity.html#method-i-set_ctypes","(types)","",null,1],["set_current_section","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-set_current_section","(title, comment)","<p>Sets the current section to a section with <code>title</code>.  See also\n#add_section\n",null,1],["set_debug_output","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-set_debug_output","(output)","<p><strong>WARNING</strong> This method opens a serious security hole. Never\nuse this method in production code.\n<p>Sets an output …\n",null,1],["set_debug_output","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-set_debug_output","(output)","<p><strong>WARNING</strong> This method opens a serious security hole. Never\nuse this method in production code.\n<p>Sets an output …\n",null,1],["set_debug_output","Net::POP3","Rails/classes/Net/POP3.html#method-i-set_debug_output","(arg)","<p><strong>WARNING</strong>: This method causes a serious security hole. Use\nthis method only for debugging.\n<p>Set an output …\n",null,1],["set_debug_output","Net::POP3","Rails/classes/Net/POP3.html#method-i-set_debug_output","(arg)","<p><strong>WARNING</strong>: This method causes a serious security hole. Use\nthis method only for debugging.\n<p>Set an output …\n",null,1],["set_debug_output","Net::POP3","Rails/classes/Net/POP3.html#method-i-set_debug_output","(arg)","<p><strong>WARNING</strong>: This method causes a serious security hole. Use\nthis method only for debugging.\n<p>Set an output …\n",null,1],["set_debug_output","Net::POP3","Rails/classes/Net/POP3.html#method-i-set_debug_output","(arg)","<p><strong>WARNING</strong>: This method causes a serious security hole. Use\nthis method only for debugging.\n<p>Set an output …\n",null,1],["set_debug_output","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-set_debug_output","(arg)","",null,1],["set_debug_output","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-set_debug_output","(arg)","",null,1],["set_default","OpenSSL::Engine","Rails/classes/OpenSSL/Engine.html#method-i-set_default","(p1)","",null,1],["set_default_accessors!","Rails::Generators::AppBase","Ruby/classes/Rails/Generators/AppBase.html#method-i-set_default_accessors-21","()","",null,0],["set_default_handler","XMLRPC::BasicServer","Rails/classes/XMLRPC/BasicServer.html#method-i-set_default_handler","(&handler)","",null,1],["set_default_paths","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-set_default_paths","()","",null,1],["set_dictionary","Zlib::Deflate","Rails/classes/Zlib/Deflate.html#method-i-set_dictionary","(p1)","<p>Sets the preset dictionary and returns <code>string</code>. This method is\navailable just only after Zlib::Deflate.new …\n",null,1],["set_dictionary","Zlib::Inflate","Rails/classes/Zlib/Inflate.html#method-i-set_dictionary","(p1)","<p>Sets the preset dictionary and returns <code>string</code>.  This method is\navailable just only after a Zlib::NeedDict ...\n",null,1],["set_dn","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-set_dn","(val)","<p>private setter for dn <code>val</code>\n",null,1],["set_enablement","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-set_enablement","(enabled, observers)","",null,0],["set_encoding","ARGF","Rails/classes/ARGF.html#method-i-set_encoding","(*args)","<p>If single argument is specified, strings read from ARGF are tagged with the\nencoding specified.\n<p>If two …\n",null,1],["set_encoding","IO","Rails/classes/IO.html#method-i-set_encoding","(p1, p2 = v2, p3 = {})","<p>If single argument is specified, read string from io is tagged with the\nencoding specified.  If encoding …\n",null,1],["set_encoding","RDoc::Encoding","Rails/classes/RDoc/Encoding.html#method-c-set_encoding","(string)","<p>Sets the encoding of <code>string</code> based on the magic comment\n",null,1],["set_encoding","StringIO","Rails/classes/StringIO.html#method-i-set_encoding","(p1, p2 = v2, p3 = {})","<p>Specify the encoding of the StringIO as <em>ext_enc</em>. Use the default\nexternal encoding if <em>ext_enc</em> is nil. …\n",null,1],["set_environment","Rails::Server","Ruby/classes/Rails/Server.html#method-i-set_environment","()","",null,0],["set_eoutvar","ERB","Rails/classes/ERB.html#method-i-set_eoutvar","(compiler, eoutvar = '_erbout')","<p>Can be used to set <em>eoutvar</em> as described in ERB#new.  It’s probably\neasier to just use the constructor …\n",null,1],["set_eoutvar","RDoc::ERBIO","Rails/classes/RDoc/ERBIO.html#method-i-set_eoutvar","(compiler, io_variable)","<p>Instructs <code>compiler</code> how to write to <code>io_variable</code>\n",null,1],["set_error","GetoptLong","Rails/classes/GetoptLong.html#method-i-set_error","(type, message)","<p>Set an error (a protected method).\n",null,1],["set_error","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-set_error","(ex, backtrace=false)","<p>Creates an error page for exception <code>ex</code> with an optional\n<code>backtrace</code>\n",null,1],["set_extensions","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-set_extensions","(val)","<p>private setter for extensions <code>val</code>\n",null,1],["set_filter","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-set_filter","(val)","<p>private setter for filter <code>val</code>\n",null,1],["set_fixture_class","ActiveRecord::TestFixtures::ClassMethods","Ruby/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-set_fixture_class","(class_names = {})","",null,0],["set_flags_from_environment","RailsGuides::Generator","Ruby/classes/RailsGuides/Generator.html#method-i-set_flags_from_environment","()","",null,0],["set_form","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-set_form","(params, enctype='application/x-www-form-urlencoded', formopt={})","<p>Set a HTML form data set. <code>params</code> is the form data set; it is\nan Array of Arrays or a Hash +enctype is …\n",null,1],["set_form_data","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-set_form_data","(params, sep = '&')","<p>Set header fields and a body from HTML form data. <code>params</code>\nshould be an Array of Arrays or a Hash containing …\n",null,1],["set_fragment","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_fragment","(v)","<p>protected setter for the fragment component <code>v</code>\n<p>see also URI::Generic.fragment=\n",null,1],["set_generator","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-set_generator","(p1, p2, p3)","<p>See the OpenSSL documentation for EC_GROUP_set_generator()\n",null,1],["set_get_line_procs","Tracer","Rails/classes/Tracer.html#method-c-set_get_line_procs","(file_name, p = proc)","<p>Register an event handler <code>p</code> which is called everytime a line\nin <code>file_name</code> is executed.\n<p>Example:\n\n<pre>Tracer.set_get_line_procs(&quot;example.rb&quot;, ...</pre>\n",null,1],["set_headers","URI::MailTo","Rails/classes/URI/MailTo.html#method-i-set_headers","(v)","<p>private setter for headers <code>v</code>\n",null,1],["set_host","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_host","(v)","<p>protected setter for the host component <code>v</code>\n<p>see also URI::Generic.host=\n",null,1],["set_input","RubyLex","Rails/classes/RubyLex.html#method-i-set_input","(io, p = nil, &block)","<p>io functions\n",null,1],["set_last_thread","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-set_last_thread","(th)","",null,1],["set_last_thread","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-set_last_thread","(th)","",null,1],["set_last_value","IRB::Context","Rails/classes/IRB/Context.html#method-i-set_last_value","(value)","",null,1],["set_local_assigns!","ActiveRecord::Generators::MigrationGenerator","Ruby/classes/ActiveRecord/Generators/MigrationGenerator.html#method-i-set_local_assigns-21","()","",null,0],["set_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Ruby/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-set_locking_column","(value = nil, &block)","<p>Set the column to use for optimistic locking. Defaults to\n<code>lock_version</code>.\n",null,0],["set_log","Logger::Application","Rails/classes/Logger/Application.html#method-i-set_log","(logdev, shift_age = 0, shift_size = 1024000)","<p>Sets the log device for this application.  See <code>Logger.new</code> for\nan explanation of the arguments.\n",null,1],["set_next_element","RSS::Element","Rails/classes/RSS/Element.html#method-i-set_next_element","(tag_name, next_element)","",null,1],["set_non_blocking","WEBrick::Utils","Rails/classes/WEBrick/Utils.html#method-c-set_non_blocking","(io)","<p>Sets IO operations on <code>io</code> to be non-blocking\n",null,1],["set_opaque","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_opaque","(v)","<p>protected setter for the opaque component <code>v</code>\n<p>see also URI::Generic.opaque=\n",null,1],["set_option","OptionParser::ParseError","Rails/classes/OptionParser/ParseError.html#method-i-set_option","(opt, eq)","",null,1],["set_options","GetoptLong","Rails/classes/GetoptLong.html#method-i-set_options","(*arguments)","<p>Set options. Takes the same argument as GetoptLong.new.\n<p>Raises a RuntimeError if option processing has …\n",null,1],["set_params","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-set_params","(params={})","",null,1],["set_parser","XMLRPC::ParserWriterChooseMixin","Rails/classes/XMLRPC/ParserWriterChooseMixin.html#method-i-set_parser","(parser)","",null,1],["set_passwd","WEBrick::HTTPAuth::Htdigest","Rails/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-set_passwd","(realm, user, pass)","<p>Sets a password in the database for <code>user</code> in <code>realm</code>\nto <code>pass</code>.\n",null,1],["set_passwd","WEBrick::HTTPAuth::Htpasswd","Rails/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-set_passwd","(realm, user, pass)","<p>Sets a password in the database for <code>user</code> in <code>realm</code>\nto <code>pass</code>.\n",null,1],["set_passwd","WEBrick::HTTPAuth::UserDB","Rails/classes/WEBrick/HTTPAuth/UserDB.html#method-i-set_passwd","(realm, user, pass)","<p>Sets a password in <code>realm</code> with <code>user</code> and\n<code>password</code> for the auth_type of this database.\n",null,1],["set_password","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_password","(v)","<p>protected setter for the password component <code>v</code>\n<p>see also URI::Generic.password=\n",null,1],["set_path","URI::FTP","Rails/classes/URI/FTP.html#method-i-set_path","(v)","",null,1],["set_path","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_path","(v)","<p>protected setter for the path component <code>v</code>\n<p>see also URI::Generic.path=\n",null,1],["set_port","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_port","(v)","<p>protected setter for the port component <code>v</code>\n<p>see also URI::Generic.port=\n",null,1],["set_prefix","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-set_prefix","(value = '/')","",null,0],["set_prompt","RubyLex","Rails/classes/RubyLex.html#method-i-set_prompt","(p = nil, &block)","",null,1],["set_query","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_query","(v)","<p>protected setter for the query component <code>v</code>\n<p>see also URI::Generic.query=\n",null,1],["set_range","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-set_range","(r, e = nil)","<p>Sets the HTTP Range: header. Accepts either a Range object as a single\nargument, or a beginning index …\n",null,1],["set_redirect","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-set_redirect","(status, url)","<p>Redirects to <code>url</code> with a WEBrick::HTTPStatus::Redirect\n<code>status</code>.\n<p>Example:\n\n<pre>res.set_redirect WEBrick::HTTPStatus::TemporaryRedirect</pre>\n",null,1],["set_registry","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_registry","(v)","<p>protected setter for the registry component <code>v</code>\n<p>see also URI::Generic.registry=\n",null,1],["set_scheme","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_scheme","(v)","<p>protected setter for the scheme component <code>v</code>\n<p>see also URI::Generic.scheme=\n",null,1],["set_scope","URI::LDAP","Rails/classes/URI/LDAP.html#method-i-set_scope","(val)","<p>private setter for scope <code>val</code>\n",null,1],["set_screen_size","Readline","Rails/classes/Readline.html#method-c-set_screen_size","(p1, p2)","<p>Set terminal size to <code>rows</code> and <code>columns</code>.\n<p>See GNU Readline’s rl_set_screen_size function.\n<p>Raises NotImplementedError …\n",null,1],["set_service_hook","XMLRPC::BasicServer","Rails/classes/XMLRPC/BasicServer.html#method-i-set_service_hook","(&handler)","",null,1],["set_session","ActionDispatch::Session::CacheStore","Ruby/classes/ActionDispatch/Session/CacheStore.html#method-i-set_session","(env, sid, session, options)","<p>Set a session in the cache.\n",null,0],["set_size","RSS::ImageFaviconModel::ImageFavicon","Rails/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-i-set_size","(new_value)","",null,1],["set_socket","Net::FTP","Rails/classes/Net/FTP.html#method-i-set_socket","(sock, get_greeting = true)","<p>WRITEME or make private\n",null,1],["set_sockopt","DRb::DRbUNIXSocket","Rails/classes/DRb/DRbUNIXSocket.html#method-i-set_sockopt","(soc)","",null,1],["set_standard_conforming_strings","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-set_standard_conforming_strings","()","<p>Enable standard-conforming strings if available.\n",null,0],["set_stdcall_callback","DL","Rails/classes/DL.html#method-i-set_stdcall_callback","(ty, argc, &cbp)","",null,1],["set_suspend","DEBUGGER__::Context","Rails/classes/DEBUGGER__/Context.html#method-i-set_suspend","()","",null,1],["set_to","URI::MailTo","Rails/classes/URI/MailTo.html#method-i-set_to","(v)","<p>private setter for to <code>v</code>\n",null,1],["set_to_infinity!","OpenSSL::PKey::EC::Point","Rails/classes/OpenSSL/PKey/EC/Point.html#method-i-set_to_infinity-21","()","",null,1],["set_trace","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-set_trace","(arg)","",null,1],["set_trace","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-set_trace","( arg )","",null,1],["set_trace_all","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-set_trace_all","(arg)","",null,1],["set_trace_func","Kernel","Rails/classes/Kernel.html#method-i-set_trace_func","(p1)","<p>Establishes <em>proc</em> as the handler for tracing, or disables tracing\nif the parameter is <code>nil</code>. <em>proc</em> takes …\n",null,1],["set_trace_func","Thread","Rails/classes/Thread.html#method-i-set_trace_func","(p1)","<p>Establishes <em>proc</em> on <em>thr</em> as the handler for tracing, or\ndisables tracing if the parameter is <code>nil</code>. See …\n",null,1],["set_typecode","URI::FTP","Rails/classes/URI/FTP.html#method-i-set_typecode","(v)","<p>private setter for the typecode <code>v</code>\n<p>see also URI::FTP.typecode=\n",null,1],["set_user","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_user","(v)","<p>protected setter for the user component <code>v</code>\n<p>see also URI::Generic.user=\n",null,1],["set_userinfo","URI::Generic","Rails/classes/URI/Generic.html#method-i-set_userinfo","(user, password = nil)","<p>protect setter for the <code>user</code> component, and\n<code>password</code> if available. (with validation)\n<p>see also URI::Generic.userinfo= …\n",null,1],["set_valid_ip","XMLRPC::WEBrickServlet","Rails/classes/XMLRPC/WEBrickServlet.html#method-i-set_valid_ip","(*ip_addr)","",null,1],["set_visibility_for","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-set_visibility_for","(methods, visibility, singleton = false)","<p>Given an array <code>methods</code> of method names, set the visibility of\neach to <code>visibility</code>\n",null,1],["set_writer","XMLRPC::ParserWriterChooseMixin","Rails/classes/XMLRPC/ParserWriterChooseMixin.html#method-i-set_writer","(writer)","",null,1],["setacl","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-setacl","(mailbox, user, rights)","<p>Sends the SETACL command along with <code>mailbox</code>, <code>user</code>\nand the <code>rights</code> that user is to have on that mailbox. …\n",null,1],["setbyte","String","Rails/classes/String.html#method-i-setbyte","(p1, p2)","<p>modifies the <em>index</em>th byte as <em>int</em>.\n",null,1],["setegid","Process::Sys","Rails/classes/Process/Sys.html#method-c-setegid","(p1)","<p>Set the effective group ID of the calling process to <em>integer</em>.  Not\navailable on all platforms.\n",null,1],["seteuid","Process::Sys","Rails/classes/Process/Sys.html#method-c-seteuid","(p1)","<p>Set the effective user ID of the calling process to <em>integer</em>.  Not\navailable on all platforms.\n",null,1],["setgid","Process::Sys","Rails/classes/Process/Sys.html#method-c-setgid","(p1)","<p>Set the group ID of the current process to <em>integer</em>. Not available\non all platforms.\n",null,1],["setgid?","File","Rails/classes/File.html#method-c-setgid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setgid bit set.\n",null,1],["setgid?","File::Stat","Rails/classes/File/Stat.html#method-i-setgid-3F","()","<p>Returns <code>true</code> if <em>stat</em> has the set-group-id permission\nbit set, <code>false</code> if it doesn’t or if the operating …\n",null,1],["setgid?","FileTest","Rails/classes/FileTest.html#method-i-setgid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setgid bit set.\n",null,1],["setgid?","Pathname","Rails/classes/Pathname.html#method-i-setgid-3F","()","<p>See <code>FileTest.setgid?</code>.\n",null,1],["setgrent","Etc","Rails/classes/Etc.html#method-c-setgrent","()","<p>Resets the process of reading the /etc/group file, so that the next call to\ngetgrent will return the …\n",null,1],["setpgid","Process","Rails/classes/Process.html#method-c-setpgid","(p1, p2)","<p>Sets the process group ID of <em>pid</em> (0 indicates this process) to\n<em>integer</em>. Not available on all platforms. …\n",null,1],["setpgrp","Process","Rails/classes/Process.html#method-c-setpgrp","()","<p>Equivalent to <code>setpgid(0,0)</code>. Not available on all platforms.\n",null,1],["setpos","Curses","Rails/classes/Curses.html#method-c-setpos","(p1, p2)","<p>A setter for the position of the cursor, using coordinates <code>x</code>\nand <code>y</code>\n",null,1],["setpos","Curses::Window","Rails/classes/Curses/Window.html#method-i-setpos","(p1, p2)","<p>A setter for the position of the cursor in the current window, using\ncoordinates <code>x</code> and <code>y</code>\n",null,1],["setpriority","Process","Rails/classes/Process.html#method-c-setpriority","(p1, p2, p3)","<p>See <code>Process#getpriority</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">setpriority</span>(<span class=\"ruby-constant\">Process</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PRIO_USER</span>, <span class=\"ruby-value\">0</span>, <span class=\"ruby-value\">19</span>)      <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">setpriority</span>(<span class=\"ruby-constant\">Process</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PRIO_PROCESS</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["setproperty","WIN32OLE","Rails/classes/WIN32OLE.html#method-i-setproperty","(*args)","<p>Sets property of OLE object. When you want to set property with argument,\nyou can use this method.\n\n<pre>excel ...</pre>\n",null,1],["setpwent","Etc","Rails/classes/Etc.html#method-c-setpwent","()","<p>Resets the process of reading the /etc/passwd file, so that the next call\nto getpwent will return the …\n",null,1],["setquota","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-setquota","(mailbox, quota)","<p>Sends a SETQUOTA command along with the specified <code>mailbox</code> and\n<code>quota</code>.  If <code>quota</code> is nil, then quota will …\n",null,1],["setregid","Process::Sys","Rails/classes/Process/Sys.html#method-c-setregid","(p1, p2)","<p>Sets the (integer) real and/or effective group IDs of the current process\nto <em>rid</em> and <em>eid</em>, respectively. …\n",null,1],["setresgid","Process::Sys","Rails/classes/Process/Sys.html#method-c-setresgid","(p1, p2, p3)","<p>Sets the (integer) real, effective, and saved user IDs of the current\nprocess to <em>rid</em>, <em>eid</em>, and <em>sid</em> respectively. …\n",null,1],["setresuid","Process::Sys","Rails/classes/Process/Sys.html#method-c-setresuid","(p1, p2, p3)","<p>Sets the (integer) real, effective, and saved user IDs of the current\nprocess to <em>rid</em>, <em>eid</em>, and <em>sid</em> respectively. …\n",null,1],["setreuid","Process::Sys","Rails/classes/Process/Sys.html#method-c-setreuid","(p1, p2)","<p>Sets the (integer) real and/or effective user IDs of the current process to\n<em>rid</em> and <em>eid</em>, respectively. …\n",null,1],["setrgid","Process::Sys","Rails/classes/Process/Sys.html#method-c-setrgid","(p1)","<p>Set the real group ID of the calling process to <em>integer</em>. Not\navailable on all platforms.\n",null,1],["setrlimit","Process","Rails/classes/Process.html#method-c-setrlimit","(p1, p2, p3 = v3)","<p>Sets the resource limit of the process. <em>cur_limit</em> means current\n(soft) limit and <em>max_limit</em> means maximum …\n",null,1],["setruid","Process::Sys","Rails/classes/Process/Sys.html#method-c-setruid","(p1)","<p>Set the real user ID of the calling process to <em>integer</em>. Not\navailable on all platforms.\n",null,1],["setscrreg","Curses","Rails/classes/Curses.html#method-c-setscrreg","(p1, p2)","<p>Set a software scrolling region in a window. <code>top</code> and\n<code>bottom</code> are lines numbers of the margin.\n<p>If this option …\n",null,1],["setscrreg","Curses::Window","Rails/classes/Curses/Window.html#method-i-setscrreg","(p1, p2)","<p>Set a software scrolling region in a window. <code>top</code> and\n<code>bottom</code> are lines numbers of the margin.\n<p>If this option …\n",null,1],["setsid","Process","Rails/classes/Process.html#method-c-setsid","()","<p>Establishes this process as a new session and process group leader, with no\ncontrolling tty. Returns …\n",null,1],["setsockopt","BasicSocket","Rails/classes/BasicSocket.html#method-i-setsockopt","(p1, p2, p3)","<p>Sets a socket option. These are protocol and system specific, see your\nlocal system documentation for ...\n",null,1],["setsockopt","OpenSSL::SSL::SocketForwarder","Rails/classes/OpenSSL/SSL/SocketForwarder.html#method-i-setsockopt","(level, optname, optval)","",null,1],["setter","RSS::BaseListener","Rails/classes/RSS/BaseListener.html#method-c-setter","(uri, tag_name)","<p>return the setter for the uri, tag_name pair, or nil.\n",null,1],["setuid","Process::Sys","Rails/classes/Process/Sys.html#method-c-setuid","(p1)","<p>Set the user ID of the current process to <em>integer</em>. Not available\non all platforms.\n",null,1],["setuid?","File","Rails/classes/File.html#method-c-setuid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setuid bit set.\n",null,1],["setuid?","File::Stat","Rails/classes/File/Stat.html#method-i-setuid-3F","()","<p>Returns <code>true</code> if <em>stat</em> has the set-user-id permission\nbit set, <code>false</code> if it doesn’t or if the operating …\n",null,1],["setuid?","FileTest","Rails/classes/FileTest.html#method-i-setuid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setuid bit set.\n",null,1],["setuid?","Pathname","Rails/classes/Pathname.html#method-i-setuid-3F","()","<p>See <code>FileTest.setuid?</code>.\n",null,1],["setup","ActiveModel::Validations::AcceptanceValidator","Ruby/classes/ActiveModel/Validations/AcceptanceValidator.html#method-i-setup","(klass)","",null,0],["setup","ActiveModel::Validations::ConfirmationValidator","Ruby/classes/ActiveModel/Validations/ConfirmationValidator.html#method-i-setup","(klass)","",null,0],["setup","ActiveRecord::Validations::UniquenessValidator","Ruby/classes/ActiveRecord/Validations/UniquenessValidator.html#method-i-setup","(klass)","<p>Unfortunately, we have to tie Uniqueness validators to a class.\n",null,0],["setup","IRB","Rails/classes/IRB.html#method-c-setup","(ap_path)","<p>initialize config\n",null,1],["setup","Object","Rails/classes/Object.html#method-i-setup","(options = \"\", *long_options)","",null,1],["setup","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-setup","()","<p>This method is called automatically when a new SSLSocket is created.\nNormally you do not need to call …\n",null,1],["setup","RDoc::RubygemsHook","Rails/classes/RDoc/RubygemsHook.html#method-i-setup","()","<p>Prepares the spec for documentation generation\n",null,1],["setup_certificate","DRb::DRbSSLSocket::SSLConfig","Rails/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-setup_certificate","()","",null,1],["setup_fixture_accessors","ActiveRecord::TestFixtures::ClassMethods","Ruby/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-setup_fixture_accessors","(fixture_names = nil)","",null,0],["setup_fixtures","ActiveRecord::TestFixtures","Ruby/classes/ActiveRecord/TestFixtures.html#method-i-setup_fixtures","()","",null,0],["setup_generator","RDoc::Options","Rails/classes/RDoc/Options.html#method-i-setup_generator","(generator_name = @generator_name)","<p>Set up an output generator for the named <code>generator_name</code>.\n<p>If the found generator responds to :setup_options …\n",null,1],["setup_header","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-setup_header","()","<p>Sets up the headers for sending\n",null,1],["setup_maker","RSS::Atom::Entry","Rails/classes/RSS/Atom/Entry.html#method-i-setup_maker","(maker)","",null,1],["setup_maker","RSS::RDF::Bag","Rails/classes/RSS/RDF/Bag.html#method-i-setup_maker","(target)","",null,1],["setup_maker","RSS::RDF::Bag","Rails/classes/RSS/RDF/Bag.html#method-i-setup_maker","(target)","",null,1],["setup_maker","RSS::RDF::Seq","Rails/classes/RSS/RDF/Seq.html#method-i-setup_maker","(target)","",null,1],["setup_maker","RSS::RDF::Seq","Rails/classes/RSS/RDF/Seq.html#method-i-setup_maker","(target)","",null,1],["setup_maker","RSS::RootElementMixin","Rails/classes/RSS/RootElementMixin.html#method-i-setup_maker","(maker)","",null,1],["setup_maker","RSS::SetupMaker","Rails/classes/RSS/SetupMaker.html#method-i-setup_maker","(maker)","",null,1],["setup_maker","RSS::XMLStyleSheet","Rails/classes/RSS/XMLStyleSheet.html#method-i-setup_maker","(maker)","",null,1],["setup_maker_elements","RSS::Rss","Rails/classes/RSS/Rss.html#method-i-setup_maker_elements","(maker)","",null,1],["setup_output_dir","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-setup_output_dir","(dir, force)","<p>Create an output dir if it doesn’t exist. If it does exist, but doesn’t\ncontain the flag file <code>created.rid</code> …\n",null,1],["setup_pager","RDoc::RI::Driver","Rails/classes/RDoc/RI/Driver.html#method-i-setup_pager","()","<p>Sets up a pager program to pass output through.  Tries the RI_PAGER and\nPAGER environment variables followed …\n",null,1],["setup_params","WEBrick::AccessLog","Rails/classes/WEBrick/AccessLog.html#method-i-setup_params","(config, req, res)","<p>This format specification is a subset of mod_log_config of Apache:\n<p>%a &mdash; Remote IP address\n<p>%b &mdash; Total response …\n",null,1],["setup_rdoc","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-i-setup_rdoc","()","",null,1],["setup_ssl_context","DRb::DRbSSLSocket::SSLConfig","Rails/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-setup_ssl_context","()","",null,1],["setup_ssl_context","WEBrick::GenericServer","Rails/classes/WEBrick/GenericServer.html#method-i-setup_ssl_context","(config)","",null,1],["sexp","Ripper","Rails/classes/Ripper.html#method-c-sexp","(src, filename = '-', lineno = 1)","<p>EXPERIMENTAL &mdash; Parses <code>src</code> and create S-exp tree. Returns more readable tree\nrather than Ripper.sexp_raw …\n",null,1],["sexp_raw","Ripper","Rails/classes/Ripper.html#method-c-sexp_raw","(src, filename = '-', lineno = 1)","<p>EXPERIMENTAL &mdash; Parses <code>src</code> and create S-exp tree. This method is for mainly\ndevelopper use.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'ripper'</span> <span class=\"ruby-operator\">...</span>\n</pre>\n\n",null,1],["sfork","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-sfork","(command, &block)","<p>simple fork\n",null,1],["sh","FileUtils","Rails/classes/FileUtils.html#method-i-sh","(*cmd, &block)","<p>Run the system command <code>cmd</code>. If multiple arguments are given\nthe command is not run with the shell (same …\n",null,1],["shallow","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-shallow","()","",null,0],["shallow?","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-shallow-3F","()","",null,0],["shebang","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-shebang","(bin_file_name)","<p>Generates a #! line for <code>bin_file_name</code>‘s wrapper copying\narguments if necessary.\n",null,1],["shellescape","Shellwords","Rails/classes/Shellwords.html#method-c-shellescape","(str)","<p>Escapes a string so that it can be safely used in a Bourne shell command\nline.\n<p>Note that a resulted string …\n",null,1],["shellescape","String","Rails/classes/String.html#method-i-shellescape","()","<p>Escapes <code>str</code> so that it can be safely used in a Bourne shell\ncommand line.  See Shellwords::shellescape …\n",null,1],["shelljoin","Array","Rails/classes/Array.html#method-i-shelljoin","()","<p>Builds a command line string from an argument list <code>array</code>\njoining all elements escaped for Bourne shell …\n",null,1],["shelljoin","Shellwords","Rails/classes/Shellwords.html#method-c-shelljoin","(array)","<p>Builds a command line string from an argument list <code>array</code>\njoining all elements escaped for Bourne shell …\n",null,1],["shellsplit","Shellwords","Rails/classes/Shellwords.html#method-c-shellsplit","(line)","<p>Splits a string into an array of tokens in the same way the UNIX Bourne\nshell does.\n\n<pre>argv = Shellwords.split('here ...</pre>\n",null,1],["shellsplit","String","Rails/classes/String.html#method-i-shellsplit","()","<p>Splits <code>str</code> into an array of tokens in the same way the UNIX\nBourne shell does.  See Shellwords::shellsplit …\n",null,1],["shellwords","Shellwords","Rails/classes/Shellwords.html#method-c-shellwords","(line)","",null,1],["shift","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-shift","()","",null,0],["shift","Array","Rails/classes/Array.html#method-i-shift","(*args)","<p>Returns the first element of <code>self</code> and removes it (shifting all\nother elements down by one). Returns  …\n",null,1],["shift","CSV","Rails/classes/CSV.html#method-i-shift","()","<p>The primary read method for wrapped Strings and IOs, a single row is pulled\nfrom the data source, parsed …\n",null,1],["shift","DBM","Rails/classes/DBM.html#method-i-shift","()","<p>Removes a [key, value] pair from the database, and returns it. If the\ndatabase is empty, returns nil. …\n",null,1],["shift","ENV","Rails/classes/ENV.html#method-c-shift","()","<p>Removes an environment variable name-value pair from ENV and returns it as\nan Array.  Returns <code>nil</code> if …\n",null,1],["shift","GDBM","Rails/classes/GDBM.html#method-i-shift","()","<p>Removes a key-value-pair from this database and returns it as a two-item\narray [ <em>key</em>, <em>value</em> ]. Returns …\n",null,1],["shift","Hash","Rails/classes/Hash.html#method-i-shift","()","<p>Removes a key-value pair from <em>hsh</em> and returns it as the two-item\narray <code>[</code> <em>key, value</em> <code>]</code>, or the hash’s …\n",null,1],["shift","Queue","Rails/classes/Queue.html#method-i-shift","(non_block=false)","<p>Alias of pop\n",null,1],["shift","SDBM","Rails/classes/SDBM.html#method-i-shift","()","",null,1],["shift","SizedQueue","Rails/classes/SizedQueue.html#method-i-shift","(*args)","<p>Alias of pop\n",null,1],["shift","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-shift","()","<p>Removes a [key, value] pair from the database, and returns it. If the\ndatabase is empty, returns <code>nil</code> …\n",null,1],["show","PostsController","Ruby/classes/PostsController.html#method-i-show","()","<p>GET /posts/1 GET /posts/1.json\n",null,0],["show_detailed_exceptions?","ActionController::Rescue","Ruby/classes/ActionController/Rescue.html#method-i-show_detailed_exceptions-3F","()","<p>Override this method if you want to customize when detailed exceptions must\nbe shown. This method is …\n",null,0],["show_help","Gem::Command","Rails/classes/Gem/Command.html#method-i-show_help","()","<p>Display the help message for the command.\n",null,1],["show_lookup_failure","Gem::Command","Rails/classes/Gem/Command.html#method-i-show_lookup_failure","(gem_name, version, errors, domain)","<p>Display to the user that a gem couldn’t be found and reasons why\n",null,1],["show_owners","Gem::Commands::OwnerCommand","Rails/classes/Gem/Commands/OwnerCommand.html#method-i-show_owners","(name)","",null,1],["show_rdoc_for_pattern","Gem::Server","Rails/classes/Gem/Server.html#method-i-show_rdoc_for_pattern","(pattern, res)","<p>Returns true and prepares http response, if rdoc for the requested gem name\npattern was found.\n<p>The search …\n",null,1],["show_variable","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-show_variable","(name)","<p>SHOW VARIABLES LIKE ‘name’\n",null,0],["show_version","OptionParser","Rails/classes/OptionParser.html#method-c-show_version","(*pkgs)","",null,1],["shuffle","Array","Rails/classes/Array.html#method-i-shuffle","(*args)","<p>Returns a new array with elements of this array shuffled.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [ <span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span> ]           <span class=\"ruby-comment\">#=&gt; [1, 2, 3]</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">shuffle</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["shuffle!","Array","Rails/classes/Array.html#method-i-shuffle-21","(*args)","<p>Shuffles elements in <code>self</code> in place. If <code>rng</code> is\ngiven, it will be used as the random number generator. …\n",null,1],["shutdown","BasicSocket","Rails/classes/BasicSocket.html#method-i-shutdown","(p1 = v1)","<p>Calls shutdown(2) system call.\n<p>s.shutdown(Socket::SHUT_RD) disallows further read.\n<p>s.shutdown(Socket::SHUT_WR …\n",null,1],["shutdown","GServer","Rails/classes/GServer.html#method-i-shutdown","()","<p>Schedule a shutdown for the server\n",null,1],["shutdown","OpenSSL::SSL::SSLServer","Rails/classes/OpenSSL/SSL/SSLServer.html#method-i-shutdown","(how=Socket::SHUT_RDWR)","",null,1],["shutdown","WEBrick::GenericServer","Rails/classes/WEBrick/GenericServer.html#method-i-shutdown","()","",null,1],["shutdown","XMLRPC::Server","Rails/classes/XMLRPC/Server.html#method-i-shutdown","()","",null,1],["sid_available?","Process::GID","Rails/classes/Process/GID.html#method-c-sid_available-3F","()","<p>Returns <code>true</code> if the current platform has saved group ID\nfunctionality.\n",null,1],["sid_available?","Process::UID","Rails/classes/Process/UID.html#method-c-sid_available-3F","()","<p>Returns <code>true</code> if the current platform has saved user ID\nfunctionality.\n",null,1],["sign","BigDecimal","Rails/classes/BigDecimal.html#method-i-sign","()","<p>Returns the sign of the value.\n<p>Returns a positive value if &gt; 0, a negative value if &lt; 0, and a zero\n…\n",null,1],["sign","Gem::Security::Signer","Rails/classes/Gem/Security/Signer.html#method-i-sign","(data)","<p>Sign data with given digest algorithm\n",null,1],["sign","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-i-sign","(p1, p2)","",null,1],["sign","OpenSSL::OCSP::BasicResponse","Rails/classes/OpenSSL/OCSP/BasicResponse.html#method-i-sign","(p1, p2, p3 = v3, p4 = v4)","",null,1],["sign","OpenSSL::OCSP::Request","Rails/classes/OpenSSL/OCSP/Request.html#method-i-sign","(p1, p2, p3 = v3, p4 = v4)","",null,1],["sign","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-c-sign","(p1, p2, p3, p4 = v4, p5 = v5)","",null,1],["sign","OpenSSL::PKey::PKey","Rails/classes/OpenSSL/PKey/PKey.html#method-i-sign","(p1, p2)","<p>To sign the <code>String</code> <code>data</code>, <code>digest</code>, an\ninstance of OpenSSL::Digest, must be provided. The return value is …\n",null,1],["sign","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-sign","(p1, p2)","",null,1],["sign","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-sign","(p1, p2)","",null,1],["sign","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-sign","(p1, p2)","",null,1],["sign_cert","Gem::Security","Rails/classes/Gem/Security.html#method-c-sign_cert","(cert, signing_key, signing_cert, opt = {})","<p>Sign the cert cert with @signing_key and @signing_cert, using the digest\nalgorithm opt. Returns the newly …\n",null,1],["sign_in","Gem::GemcutterUtilities","Rails/classes/Gem/GemcutterUtilities.html#method-i-sign_in","()","",null,1],["signal","ConditionVariable","Rails/classes/ConditionVariable.html#method-i-signal","()","<p>Wakes up the first thread in line waiting for this lock.\n",null,1],["signal","MonitorMixin::ConditionVariable","Rails/classes/MonitorMixin/ConditionVariable.html#method-i-signal","()","<p>Wakes up the first thread in line waiting for this lock.\n",null,1],["signal","Rinda::WaitTemplateEntry","Rails/classes/Rinda/WaitTemplateEntry.html#method-i-signal","()","",null,1],["signal_handle","IRB::Irb","Rails/classes/IRB/Irb.html#method-i-signal_handle","()","",null,1],["signal_status","IRB::Irb","Rails/classes/IRB/Irb.html#method-i-signal_status","(status)","",null,1],["signaled?","Process::Status","Rails/classes/Process/Status.html#method-i-signaled-3F","()","<p>Returns <code>true</code> if <em>stat</em> terminated because of an\nuncaught signal.\n",null,1],["signature_algorithm","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-signature_algorithm","()","",null,1],["signature_algorithm","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-signature_algorithm","()","",null,1],["signature_algorithm","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-signature_algorithm","()","",null,1],["signed_time","OpenSSL::PKCS7::SignerInfo","Rails/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-signed_time","()","",null,1],["signed_value","DL::ValueUtil","Rails/classes/DL/ValueUtil.html#method-i-signed_value","(val, ty)","",null,1],["signers","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-signers","()","",null,1],["signo","SignalException","Rails/classes/SignalException.html#method-i-signo","()","<p>Returns a signal number.\n",null,1],["silence","ActiveSupport::Benchmarkable","Ruby/classes/ActiveSupport/Benchmarkable.html#method-i-silence","()","<p>Silence the logger during the execution of the block.\n",null,0],["silence","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-i-silence","(temporary_level = ERROR)","<p>Silences the logger for the duration of the block.\n",null,0],["silence","ActiveSupport::Deprecation","Ruby/classes/ActiveSupport/Deprecation.html#method-c-silence","()","<p>Silence deprecation warnings within the block.\n",null,0],["silence","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-i-silence","(temporary_level = Logger::ERROR, &block)","",null,0],["silence","Kernel","Ruby/classes/Kernel.html#method-i-silence","(stream)","",null,0],["silence!","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-silence-21","()","<p>Silence the logger.\n",null,0],["silence_auto_explain","ActiveRecord::Explain","Ruby/classes/ActiveRecord/Explain.html#method-i-silence_auto_explain","()","<p>Silences automatic EXPLAIN logging for the duration of the block.\n<p>This has high priority, no EXPLAINs …\n",null,0],["silence_stream","Kernel","Ruby/classes/Kernel.html#method-i-silence_stream","(stream)","<p>Silences any stream for the duration of the block.\n\n<pre>silence_stream(STDOUT) do\n  puts 'This will never be ...</pre>\n",null,0],["silence_warnings","Kernel","Ruby/classes/Kernel.html#method-i-silence_warnings","()","<p>Sets $VERBOSE to nil for the duration of the block and back to its original\nvalue afterwards.\n\n<pre>silence_warnings ...</pre>\n",null,0],["silencer","ActiveSupport::BufferedLogger","Ruby/classes/ActiveSupport/BufferedLogger.html#method-c-silencer","","<p>Set to false to disable the silencer\n",null,0],["simple_format","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-simple_format","(text, html_options={}, options={})","<p>Returns <code>text</code> transformed into HTML using simple formatting\nrules. Two or more consecutive newlines(<code>\\n\\n</code> …\n",null,0],["simple_selector","HTML::Selector","Ruby/classes/HTML/Selector.html#method-i-simple_selector","(statement, values, can_negate = true)","<p>Creates a simple selector given the statement and array of substitution\nvalues.\n<p>Returns a hash with the …\n",null,0],["sin","BigMath","Rails/classes/BigMath.html#method-i-sin","(x, prec)","<p>Computes the sine of x to the specified number of digits of precision.\n<p>If x is infinite or NaN, returns …\n",null,1],["sin","CMath","Rails/classes/CMath.html#method-c-sin","(z)","<p>returns the sine of <code>z</code>, where <code>z</code> is given in\nradians\n",null,1],["sin","Math","Rails/classes/Math.html#method-c-sin","(p1)","<p>Computes the sine of <em>x</em> (expressed in radians). Returns -1..1.\n",null,1],["sin!","CMath","Rails/classes/CMath.html#method-c-sin-21","(z)","",null,1],["since","ActiveSupport::Duration","Ruby/classes/ActiveSupport/Duration.html#method-i-since","(time = ::Time.current)","<p>Calculates a new Time or Date that is as far in the future as this Duration\nrepresents.\n",null,0],["since","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-since","(other)","",null,0],["since","Date","Ruby/classes/Date.html#method-i-since","(seconds)","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the beginning of the …\n",null,0],["since","DateTime","Ruby/classes/DateTime.html#method-i-since","(seconds)","<p>Returns a new DateTime representing the time a number of seconds since the\ninstance time Do not use this …\n",null,0],["since","Numeric","Ruby/classes/Numeric.html#method-i-since","(time = ::Time.current)","<p>Reads best with argument:  10.minutes.since(time)\n",null,0],["since","Time","Ruby/classes/Time.html#method-i-since","(seconds)","<p>Returns a new Time representing the time a number of seconds since the\ninstance time\n",null,0],["single?","REXML::Validation::Event","Rails/classes/REXML/Validation/Event.html#method-i-single-3F","()","",null,1],["single_delegate","SingleForwardable","Rails/classes/SingleForwardable.html#method-i-single_delegate","(hash)","<p>Takes a hash as its argument.  The key is a symbol or an array of symbols. \nThese symbols correspond …\n",null,1],["singleline_format","PrettyPrint","Rails/classes/PrettyPrint.html#method-c-singleline_format","(output='', maxwidth=nil, newline=nil, genspace=nil)","<p>This is similar to PrettyPrint::format but the result has no breaks.\n<p><code>maxwidth</code>, <code>newline</code> and <code>genspace</code> are\n...\n",null,1],["singleline_pp","PP","Rails/classes/PP.html#method-c-singleline_pp","(obj, out=$>)","<p>Outputs <code>obj</code> to <code>out</code> like PP.pp but with no indent\nand newline.\n<p>PP.singleline_pp returns <code>out</code>.\n",null,1],["singleton_class","Kernel","Ruby/classes/Kernel.html#method-i-singleton_class","()","<p>Returns the object’s singleton class.\n",null,0],["singleton_class","Object","Rails/classes/Object.html#method-i-singleton_class","()","<p>Returns the singleton class of <em>obj</em>.  This method creates a new\nsingleton class if <em>obj</em> does not have it. …\n",null,1],["singleton_method_added","Numeric","Rails/classes/Numeric.html#method-i-singleton_method_added","(p1)","<p>Trap attempts to add methods to <code>Numeric</code> objects. Always raises\na <code>TypeError</code>\n",null,1],["singleton_methods","Object","Rails/classes/Object.html#method-i-singleton_methods","(p1 = v1)","<p>Returns an array of the names of singleton methods for <em>obj</em>. If the\noptional <em>all</em> parameter is true, the …\n",null,1],["singular","ActiveModel::Naming","Ruby/classes/ActiveModel/Naming.html#method-c-singular","(record_or_class)","<p>Returns the singular class name of a record or class. Examples:\n\n<pre>ActiveModel::Naming.singular(post)    ...</pre>\n",null,0],["singular","ActiveSupport::Inflector::Inflections","Ruby/classes/ActiveSupport/Inflector/Inflections.html#method-i-singular","(rule, replacement)","<p>Specifies a new singularization rule and its replacement. The rule can\neither be a string or a regular …\n",null,0],["singular?","Matrix","Rails/classes/Matrix.html#method-i-singular-3F","()","<p>Returns <code>true</code> is this is a singular matrix.\n",null,1],["singular?","Matrix::LUPDecomposition","Rails/classes/Matrix/LUPDecomposition.html#method-i-singular-3F","()","<p>Returns <code>true</code> if <code>U</code>, and hence <code>A</code>, is\nsingular.\n",null,1],["singular_route_key","ActiveModel::Naming","Ruby/classes/ActiveModel/Naming.html#method-c-singular_route_key","(record_or_class)","<p>Returns string to use while generating route names. It differs for\nnamespaced models regarding whether …\n",null,0],["singular_table_name","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-singular_table_name","()","",null,0],["singularize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-singularize","(word)","<p>The reverse of <code>pluralize</code>, returns the singular form of a word\nin a string.\n<p>Examples:\n\n<pre>&quot;posts&quot;.singularize ...</pre>\n",null,0],["singularize","String","Ruby/classes/String.html#method-i-singularize","()","<p>The reverse of <code>pluralize</code>, returns the singular form of a word\nin a string.\n\n<pre>&quot;posts&quot;.singularize        ...</pre>\n",null,0],["sinh","CMath","Rails/classes/CMath.html#method-c-sinh","(z)","<p>returns the hyperbolic sine of <code>z</code>, where <code>z</code> is\ngiven in radians\n",null,1],["sinh","Math","Rails/classes/Math.html#method-c-sinh","(p1)","<p>Computes the hyperbolic sine of <em>x</em> (expressed in radians).\n",null,1],["sinh!","CMath","Rails/classes/CMath.html#method-c-sinh-21","(z)","",null,1],["site","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-site","()","<p>Gets the URI of the REST resources to map for this class.  The site\nvariable is required for Active Resource’s …\n",null,0],["site","Net::FTP","Rails/classes/Net/FTP.html#method-i-site","(arg)","<p>Issues a SITE command.\n",null,1],["site=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-site-3D","(site)","<p>Sets the URI of the REST resources to map for this class to the value in\nthe <code>site</code> argument. The site …\n",null,0],["site=","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-site-3D","(site)","<p>Set URI for remote service.\n",null,0],["size","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-size","()","",null,0],["size","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-size","()","<p>Returns the number of error messages.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">add</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-string\">&quot;can't be blank&quot;</span>)\n<span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">size</span> <span class=\"ruby-comment\"># =&gt; 1</span>\n<span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">add</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["size","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-i-size","()","",null,0],["size","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-size","()","<p>Returns size of the records.\n",null,0],["size","ActiveSupport::Cache::Entry","Ruby/classes/ActiveSupport/Cache/Entry.html#method-i-size","()","<p>Returns the size of the cached value. This could be less than value.size if\nthe data is compressed.\n",null,0],["size","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-size","()","<p>Returns the number of codepoints in the string\n",null,0],["size","Array","Rails/classes/Array.html#method-i-size","()","",null,1],["size","Bignum","Rails/classes/Bignum.html#method-i-size","()","<p>Returns the number of bytes in the machine representation of <em>big</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">256</span><span class=\"ruby-operator\">**</span><span class=\"ruby-value\">10</span> <span class=\"ruby-operator\">-</span> <span class=\"ruby-value\">1</span>).<span class=\"ruby-identifier\">size</span>   <span class=\"ruby-comment\">#=&gt; 12</span>\n(<span class=\"ruby-value\">256</span><span class=\"ruby-operator\">**</span><span class=\"ruby-value\">20</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["size","DBM","Rails/classes/DBM.html#method-i-size","()","<p>Returns the number of entries in the database.\n",null,1],["size","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-size","()","<p>Get the size of this pointer.\n",null,1],["size","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-size","()","<p>Get the size of this pointer.\n",null,1],["size","DL::CStructEntity","Rails/classes/DL/CStructEntity.html#method-c-size","(types)","",null,1],["size","DL::CUnionEntity","Rails/classes/DL/CUnionEntity.html#method-c-size","(types)","",null,1],["size","DL::Packer","Rails/classes/DL/Packer.html#method-i-size","()","",null,1],["size","DL::Stack","Rails/classes/DL/Stack.html#method-i-size","()","",null,1],["size","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-size","()","<p>Returns digest_obj.digest_length().\n",null,1],["size","ENV","Rails/classes/ENV.html#method-c-size","()","<p>Returns the number of environment variables.\n",null,1],["size","File","Rails/classes/File.html#method-i-size","()","<p>Returns the size of <em>file</em> in bytes.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">size</span>   <span class=\"ruby-comment\">#=&gt; 66</span>\n</pre>\n",null,1],["size","File","Rails/classes/File.html#method-c-size","(p1)","<p>Returns the size of <code>file_name</code>.\n",null,1],["size","File::Stat","Rails/classes/File/Stat.html#method-i-size","()","<p>Returns the size of <em>stat</em> in bytes.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">size</span>   <span class=\"ruby-comment\">#=&gt; 66</span>\n</pre>\n",null,1],["size","FileTest","Rails/classes/FileTest.html#method-i-size","(p1)","<p>Returns the size of <code>file_name</code>.\n",null,1],["size","Fixnum","Rails/classes/Fixnum.html#method-i-size","()","<p>Returns the number of <em>bytes</em> in the machine representation of a\n<code>Fixnum</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">size</span>            <span class=\"ruby-comment\">#=&gt; 4</span>\n<span class=\"ruby-value\">-1</span>.<span class=\"ruby-identifier\">size</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["size","GDBM","Rails/classes/GDBM.html#method-i-size","()","<p>Returns the number of key-value pairs in this database.\n",null,1],["size","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-size","()","",null,1],["size","Hash","Rails/classes/Hash.html#method-i-size","()","<p>Returns the number of key-value pairs in the hash.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;d&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span>, <span class=\"ruby-string\">&quot;v&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">300</span>, <span class=\"ruby-string\">&quot;e&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">400</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["size","IRB::History","Rails/classes/IRB/History.html#method-i-size","(size)","",null,1],["size","MatchData","Rails/classes/MatchData.html#method-i-size","()","<p>Returns the number of elements in the match array.\n\n<pre>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.length   ...</pre>\n",null,1],["size","Net::FTP","Rails/classes/Net/FTP.html#method-i-size","(filename)","<p>Returns the size of the given (remote) filename.\n",null,1],["size","Pathname","Rails/classes/Pathname.html#method-i-size","()","<p>See <code>FileTest.size</code>.\n",null,1],["size","Queue","Rails/classes/Queue.html#method-i-size","()","<p>Alias of length.\n",null,1],["size","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-size","()","",null,1],["size","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-size","()","<p>Returns the number of <code>Element</code> children of the parent object.\n\n<pre>doc = Document.new '&lt;a&gt;sean&lt;b/&gt;elliott&lt;b/&gt;russell&lt;b/&gt;&lt;/a&gt;' ...</pre>\n",null,1],["size","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-size","()","",null,1],["size","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-size","()","<p>@return the number of children of this parent\n",null,1],["size","REXML::SyncEnumerator","Rails/classes/REXML/SyncEnumerator.html#method-i-size","()","<p>Returns the number of enumerated Enumerable objects, i.e. the size of each\nrow.\n",null,1],["size","Rinda::Tuple","Rails/classes/Rinda/Tuple.html#method-i-size","()","<p>The number of elements in the tuple.\n",null,1],["size","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-size","()","<p>The size of the tuple.\n",null,1],["size","SDBM","Rails/classes/SDBM.html#method-i-size","()","",null,1],["size","Set","Rails/classes/Set.html#method-i-size","()","<p>Returns the number of elements.\n",null,1],["size","String","Rails/classes/String.html#method-i-size","()","<p>Returns the character length of <em>str</em>.\n",null,1],["size","StringIO","Rails/classes/StringIO.html#method-i-size","()","<p>Returns the size of the buffer string.\n",null,1],["size","Struct","Rails/classes/Struct.html#method-i-size","()","<p>Returns the number of instance variables.\n\n<pre>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</pre>\n",null,1],["size","Symbol","Rails/classes/Symbol.html#method-i-size","()","<p>Same as <code>sym.to_s.length</code>.\n",null,1],["size","Tempfile","Rails/classes/Tempfile.html#method-i-size","()","<p>Returns the size of the temporary file.  As a side effect, the IO buffer is\nflushed before determining …\n",null,1],["size","Vector","Rails/classes/Vector.html#method-i-size","()","<p>Returns the number of elements in the vector.\n",null,1],["size=","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-size-3D","(p1)","<p>Set the size of this pointer to <code>size</code>\n",null,1],["size=","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-size-3D","(p1)","<p>Set the size of this pointer to <code>size</code>\n",null,1],["size=","RSS::ImageFaviconModel::ImageFavicon","Rails/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-i-size-3D","(new_value)","",null,1],["size?","File","Rails/classes/File.html#method-c-size-3F","(p1)","<p>Returns <code>nil</code> if <code>file_name</code> doesn’t exist or has\nzero size, the size of the file otherwise.\n",null,1],["size?","File::Stat","Rails/classes/File/Stat.html#method-i-size-3F","()","<p>Returns the size of <em>stat</em> in bytes.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">size</span>   <span class=\"ruby-comment\">#=&gt; 66</span>\n</pre>\n",null,1],["size?","FileTest","Rails/classes/FileTest.html#method-i-size-3F","(p1)","<p>Returns <code>nil</code> if <code>file_name</code> doesn’t exist or has\nzero size, the size of the file otherwise.\n",null,1],["size?","Pathname","Rails/classes/Pathname.html#method-i-size-3F","()","<p>See <code>FileTest.size?</code>.\n",null,1],["size_opt_params","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-size_opt_params","()","<p>Returns the size of optional parameters.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', ...</pre>\n",null,1],["size_params","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-size_params","()","<p>Returns the size of arguments of the method.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', ...</pre>\n",null,1],["sizeof","DL::Importer","Rails/classes/DL/Importer.html#method-i-sizeof","(ty)","",null,1],["skip","ARGF","Rails/classes/ARGF.html#method-i-skip","()","\n<pre>Sets the current file to the next file in ARGV. If there aren't any more\nfiles it has no effect.</pre>\n<p>For example: …\n",null,1],["skip","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-skip","(token_type, error = true)","<p>Skips the next token if its type is <code>token_type</code>.\n<p>Optionally raises an error if the next token is not of …\n",null,1],["skip","StringScanner","Rails/classes/StringScanner.html#method-i-skip","(p1)","<p>Attempts to skip over the given <code>pattern</code> beginning with the\nscan pointer. If it matches, the scan pointer …\n",null,1],["skip_after_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_after_filter","","<p>Skip an after filter. See _insert_callbacks for parameter details.\n",null,0],["skip_around_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_around_filter","","<p>Skip an around filter. See _insert_callbacks for parameter details.\n",null,0],["skip_before_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_before_filter","","<p>Skip a before filter. See _insert_callbacks for parameter details.\n",null,0],["skip_blanks?","CSV","Rails/classes/CSV.html#method-i-skip_blanks-3F","()","<p>Returns <code>true</code> blank lines are skipped by the parser. See\nCSV::new for details.\n",null,1],["skip_callback","ActiveSupport::Callbacks::ClassMethods","Ruby/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-skip_callback","(name, *filter_list, &block)","<p>Skip a previously set callback. Like <code>set_callback</code>,\n<code>:if</code> or <code>:unless</code> options may be passed in order to\ncontrol …\n",null,0],["skip_during","Gem::Deprecate","Rails/classes/Gem/Deprecate.html#method-c-skip_during","()","<p>Temporarily turn off warnings. Intended for tests only.\n",null,1],["skip_filter","AbstractController::Callbacks::ClassMethods","Ruby/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_filter","(*names, &blk)","<p>Skip before, after, and around filters matching any of the names\n<p>Parameters\n<p><code>names</code> - A list of valid names ...\n",null,0],["skip_for_variable","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-skip_for_variable","()","<p>skip the var [in] part of a ‘for’ statement\n",null,1],["skip_method","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-skip_method","(container)","<p>Skips the next method in <code>container</code>\n",null,1],["skip_optional_do_after_expression","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-skip_optional_do_after_expression","()","<p>while, until, and for have an optional do\n",null,1],["skip_tkspace","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-skip_tkspace","(skip_nl = true)","<p>Skips whitespace tokens including newlines if <code>skip_nl</code> is true\n",null,1],["skip_tkspace_comment","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-skip_tkspace_comment","(skip_nl = true)","<p>Skip spaces until a comment is found\n",null,1],["skip_until","StringScanner","Rails/classes/StringScanner.html#method-i-skip_until","(p1)","<p>Advances the scan pointer until <code>pattern</code> is matched and\nconsumed.  Returns the number of bytes advanced, …\n",null,1],["sleep","Kernel","Rails/classes/Kernel.html#method-i-sleep","(*args)","<p>Suspends the current thread for <em>duration</em> seconds (which may be any\nnumber, including a <code>Float</code> with fractional …\n",null,1],["sleep","Mutex","Rails/classes/Mutex.html#method-i-sleep","(p1 = v1)","<p>Releases the lock and sleeps <code>timeout</code> seconds if it is given\nand non-nil or forever.  Raises <code>ThreadError</code> …\n",null,1],["sleep","Mutex_m","Rails/classes/Mutex_m.html#method-i-sleep","(timeout = nil)","",null,1],["slice","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-slice","(*args)","<p>Implements Unicode-aware slice with codepoints. Slicing on one point\nreturns the codepoints for that …\n",null,0],["slice","Hash","Ruby/classes/Hash.html#method-i-slice","(*keys)","<p>Slice a hash to include only the given keys. This is useful for limiting an\noptions hash to valid keys …\n",null,0],["slice","Array","Rails/classes/Array.html#method-i-slice","(p1, p2 = v2)","<p>Element Reference—Returns the element at <em>index</em>, or returns a\nsubarray starting at <em>start</em> and continuing …\n",null,1],["slice","Ripper","Rails/classes/Ripper.html#method-c-slice","(src, pattern, n = 0)","<p>EXPERIMENTAL &mdash; Parses <code>src</code> and return a string which was matched to\n<code>pattern</code>. <code>pattern</code> should be described …\n",null,1],["slice","String","Rails/classes/String.html#method-i-slice","(*args)","<p>Element Reference—If passed a single <code>Fixnum</code>, returns a\nsubstring of one character at that position. …\n",null,1],["slice","Symbol","Rails/classes/Symbol.html#method-i-slice","(*args)","<p>Returns <code>sym.to_s[]</code>.\n",null,1],["slice!","Hash","Ruby/classes/Hash.html#method-i-slice-21","(*keys)","<p>Replaces the hash with only the given keys. Returns a hash contained the\nremoved key/value pairs\n\n<pre class=\"ruby\">{:<span class=\"ruby-identifier\">a</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["slice!","Array","Rails/classes/Array.html#method-i-slice-21","(p1, p2 = v2)","<p>Deletes the element(s) given by an index (optionally with a length) or by a\nrange. Returns the deleted …\n",null,1],["slice!","String","Rails/classes/String.html#method-i-slice-21","(*args)","<p>Deletes the specified portion from <em>str</em>, and returns the portion\ndeleted.\n\n<pre>string = &quot;this is a string&quot;\nstring.slice!(2) ...</pre>\n",null,1],["slice_before","Enumerable","Rails/classes/Enumerable.html#method-i-slice_before","(p1 = v1)","\n<pre>Creates an enumerator for each chunked elements.\nThe beginnings of chunks are defined by _pattern_ and ...</pre>\n",null,1],["sockaddr_in","Socket","Rails/classes/Socket.html#method-c-sockaddr_in","(p1, p2)","<p>Packs <em>port</em> and <em>host</em> as an AF_INET/AF_INET6 sockaddr\nstring.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Socket</span>.<span class=\"ruby-identifier\">sockaddr_in</span>(<span class=\"ruby-value\">80</span>, <span class=\"ruby-string\">&quot;127.0.0.1&quot;</span>)\n<span class=\"ruby-comment\">#=&gt; &quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&quot; ...</span>\n</pre>\n",null,1],["sockaddr_un","Socket","Rails/classes/Socket.html#method-c-sockaddr_un","(p1)","<p>Packs <em>path</em> as an AF_UNIX sockaddr string.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Socket</span>.<span class=\"ruby-identifier\">sockaddr_un</span>(<span class=\"ruby-string\">&quot;/tmp/sock&quot;</span>) <span class=\"ruby-comment\">#=&gt; &quot;\\x01\\x00/tmp/sock\\x00\\x00...&quot;</span>\n</pre>\n",null,1],["socket?","File","Rails/classes/File.html#method-c-socket-3F","(p1)","<p>Returns <code>true</code> if the named file is a socket.\n",null,1],["socket?","File::Stat","Rails/classes/File/Stat.html#method-i-socket-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a socket, <code>false</code>\nif it isn’t or if the operating system doesn’t support this feature. …\n",null,1],["socket?","FileTest","Rails/classes/FileTest.html#method-i-socket-3F","(p1)","<p>Returns <code>true</code> if the named file is a socket.\n",null,1],["socket?","Pathname","Rails/classes/Pathname.html#method-i-socket-3F","()","<p>See <code>FileTest.socket?</code>.\n",null,1],["socketpair","Socket","Rails/classes/Socket.html#method-c-socketpair","(p1, p2, p3 = v3)","<p>Creates a pair of sockets connected each other.\n<p><em>domain</em> should be a communications domain such as: :INET ...\n",null,1],["socketpair","UNIXSocket","Rails/classes/UNIXSocket.html#method-c-socketpair","(p1 = v1, p2 = v2)","<p>Creates a pair of sockets connected each other.\n<p><em>socktype</em> should be a socket type such as: :STREAM, :DGRAM ...\n",null,1],["socktype","Addrinfo","Rails/classes/Addrinfo.html#method-i-socktype","()","<p>returns the socket type as an integer.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">tcp</span>(<span class=\"ruby-string\">&quot;localhost&quot;</span>, <span class=\"ruby-value\">80</span>).<span class=\"ruby-identifier\">socktype</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-constant\">Socket</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">SOCK_STREAM</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["solve","Matrix::LUPDecomposition","Rails/classes/Matrix/LUPDecomposition.html#method-i-solve","(b)","<p>Returns <code>m</code> so that <code>A*m = b</code>, or equivalently so\nthat <code>L*U*m = P*b</code> <code>b</code> can be a Matrix or a Vector\n",null,1],["sort","Array","Rails/classes/Array.html#method-i-sort","()","<p>Returns a new array created by sorting <code>self</code>. Comparisons for\nthe sort will be done using the <code>&lt;=&gt;</code> …\n",null,1],["sort","Enumerable","Rails/classes/Enumerable.html#method-i-sort","()","<p>Returns an array containing the items in <em>enum</em> sorted, either\naccording to their own <code>&lt;=&gt;</code> method, …\n",null,1],["sort","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-sort","(sort_keys, search_keys, charset)","<p>Sends a SORT command to sort messages in the mailbox. Returns an array of\nmessage sequence numbers.  …\n",null,1],["sort!","Array","Rails/classes/Array.html#method-i-sort-21","()","<p>Sorts <code>self</code>. Comparisons for the sort will be done using the\n<code>&lt;=&gt;</code> operator or using an optional code …\n",null,1],["sort_by","Enumerable","Rails/classes/Enumerable.html#method-i-sort_by","()","<p>Sorts <em>enum</em> using a set of keys generated by mapping the values in\n<em>enum</em> through the given block.\n<p>If no …\n",null,1],["sort_by!","Array","Rails/classes/Array.html#method-i-sort_by-21","()","<p>Sorts <code>self</code> in place using a set of keys generated by mapping\nthe values in <code>self</code> through the given block. …\n",null,1],["sort_obj","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-sort_obj","()","<p>Returns an object you can use to sort specifications in #sort_by.\n",null,1],["source","REXML::Parsers::SAX2Parser","Rails/classes/REXML/Parsers/SAX2Parser.html#method-i-source","()","",null,1],["source","Rake::Task","Rails/classes/Rake/Task.html#method-i-source","()","<p>First source from a rule (nil if no sources)\n",null,1],["source","Regexp","Rails/classes/Regexp.html#method-i-source","()","<p>Returns the original string of the pattern.\n\n<pre class=\"ruby\"><span class=\"ruby-regexp\">/ab+c/</span><span class=\"ruby-identifier\">x</span>.<span class=\"ruby-identifier\">source</span> <span class=\"ruby-comment\">#=&gt; &quot;ab+c&quot;</span>\n</pre>\n<p>Note that escape sequences are retained …\n",null,1],["source_encoding","Encoding::Converter","Rails/classes/Encoding/Converter.html#method-i-source_encoding","()","<p>Returns the source encoding as an Encoding object.\n",null,1],["source_encoding","Encoding::InvalidByteSequenceError","Rails/classes/Encoding/InvalidByteSequenceError.html#method-i-source_encoding","()","<p>Returns the source encoding as an encoding object.\n<p>Note that the result may not be equal to the source …\n",null,1],["source_encoding","Encoding::UndefinedConversionError","Rails/classes/Encoding/UndefinedConversionError.html#method-i-source_encoding","()","<p>Returns the source encoding as an encoding object.\n<p>Note that the result may not be equal to the source …\n",null,1],["source_encoding_name","Encoding::InvalidByteSequenceError","Rails/classes/Encoding/InvalidByteSequenceError.html#method-i-source_encoding_name","()","<p>Returns the source encoding name as a string.\n",null,1],["source_encoding_name","Encoding::UndefinedConversionError","Rails/classes/Encoding/UndefinedConversionError.html#method-i-source_encoding_name","()","<p>Returns the source encoding name as a string.\n",null,1],["source_file","IRB::IrbLoader","Rails/classes/IRB/IrbLoader.html#method-i-source_file","(path)","",null,1],["source_index","Gem","Rails/classes/Gem.html#method-c-source_index","()","<p>Returns the Gem::SourceIndex of specifications that are in the Gem.path\n",null,1],["source_location","Method","Rails/classes/Method.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this method or\nnil if this method was not …\n",null,1],["source_location","Proc","Rails/classes/Proc.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this proc or\n<code>nil</code> if this proc was not defined …\n",null,1],["source_location","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this method or\nnil if this method was not …\n",null,1],["source_ole_types","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-source_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the\nWIN32OLE_TYPE object and having …\n",null,1],["source_root","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-source_root","(path=nil)","<p>Returns the source root for this generator using default_source_root as\ndefault.\n",null,0],["sources","Gem","Rails/classes/Gem.html#method-c-sources","()","<p>Returns an Array of sources to fetch remote gems from.  If the sources list\nis empty, attempts to load …\n",null,1],["sources","Rake::Task","Rails/classes/Rake/Task.html#method-i-sources","()","",null,1],["sources=","Gem","Rails/classes/Gem.html#method-c-sources-3D","(new_sources)","<p>Need to be able to set the sources without calling Gem.sources.replace\nsince that would cause an infinite …\n",null,1],["spawn","Kernel","Rails/classes/Kernel.html#method-i-spawn","(*args)","<p>spawn executes specified command and return its pid.\n<p>This method doesn’t wait for end of the command. …\n",null,1],["spawn","PTY","Rails/classes/PTY.html#method-c-spawn","(*args)","<p>Spawns the specified command on a newly allocated pty.\n<p>The command’s controlling tty is set to the slave …\n",null,1],["spawn","Process","Rails/classes/Process.html#method-c-spawn","(*args)","<p>spawn executes specified command and return its pid.\n<p>This method doesn’t wait for end of the command. …\n",null,1],["spec","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-spec","()","<p>Lazy accessor for the installer’s spec.\n",null,1],["spec_dir","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-spec_dir","()","<p>Returns the full path to the directory containing this spec’s gemspec file.\neg: /usr/local/lib/ruby/gems/1.8/specifications …\n",null,1],["spec_file","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-spec_file","()","<p>Returns the full path to this spec’s gemspec file. eg:\n/usr/local/lib/ruby/gems/1.8/specifications/mygem-1.0.gemspec …\n",null,1],["spec_name","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-spec_name","()","<p>The default name of the gemspec.  See also #file_name\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">spec</span>.<span class=\"ruby-identifier\">spec_name</span> <span class=\"ruby-comment\"># =&gt; &quot;example-1.0.gemspec&quot;</span>\n</pre>\n",null,1],["spec_path","Gem::Commands::LockCommand","Rails/classes/Gem/Commands/LockCommand.html#method-i-spec_path","(gem_full_name)","",null,1],["spec_predecessors","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-spec_predecessors","()","<p>Return a hash of predecessors.  <code>result[spec]</code> is an Array of\ngemspecs that have a dependency satisfied …\n",null,1],["specific?","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-specific-3F","()","<p>True if the dependency will not always match the latest version.\n",null,1],["specific?","Gem::Requirement","Rails/classes/Gem/Requirement.html#method-i-specific-3F","()","<p>True if the requirement will not always match the latest version.\n",null,1],["specific_extra_args","Gem::Command","Rails/classes/Gem/Command.html#method-c-specific_extra_args","(cmd)","<p>Return an array of extra arguments for the command.  The extra arguments\ncome from the gem configuration …\n",null,1],["specific_extra_args_hash","Gem::Command","Rails/classes/Gem/Command.html#method-c-specific_extra_args_hash","()","<p>Accessor for the specific extra args hash (self initializing).\n",null,1],["specification","Gem::SourceIndex","Rails/classes/Gem/SourceIndex.html#method-i-specification","(full_name)","<p>The gem specification given a full gem spec name.\n",null,1],["specs","Gem::Server","Rails/classes/Gem/Server.html#method-i-specs","(req, res)","",null,1],["spermy_recommendation","Gem::Version","Rails/classes/Gem/Version.html#method-i-spermy_recommendation","()","<p>A recommended version for use with a ~&gt; Requirement.\n",null,1],["split","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-split","(*args)","<p>Works just like <code>String#split</code>, with the exception that the\nitems in the resulting list are Chars instances …\n",null,0],["split","Array","Ruby/classes/Array.html#method-i-split","(value = nil)","<p>Divides the array into one or more subarrays based on a delimiting\n<code>value</code> or the result of an optional …\n",null,0],["split","BigDecimal","Rails/classes/BigDecimal.html#method-i-split","()","<p>Splits a BigDecimal number into four parts, returned as an array of values.\n<p>The first value represents …\n",null,1],["split","File","Rails/classes/File.html#method-c-split","(p1)","<p>Splits the given string into a directory and a file component and returns\nthem in a two-element array. …\n",null,1],["split","Pathname","Rails/classes/Pathname.html#method-i-split","()","<p>See <code>File.split</code>.  Returns the #dirname and the #basename in an\nArray.\n",null,1],["split","Shellwords","Rails/classes/Shellwords.html#method-c-split","(line)","",null,1],["split","String","Rails/classes/String.html#method-i-split","(p1 = v1, p2 = v2)","<p>Divides <em>str</em> into substrings based on a delimiter, returning an\narray of these substrings.\n<p>If <em>pattern</em> is …\n",null,1],["split","URI","Rails/classes/URI.html#method-c-split","(uri)","<p>Synopsis\n\n<pre>URI::split(uri)</pre>\n<p>Args\n",null,1],["split","URI::Parser","Rails/classes/URI/Parser.html#method-i-split","(uri)","<p>Returns a split URI against regexp\n",null,1],["split_all","FileUtils","Rails/classes/FileUtils.html#method-i-split_all","(path)","<p>Split a file path into individual directory names.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">split_all</span>(<span class=\"ruby-string\">&quot;a/b/c&quot;</span>) =<span class=\"ruby-operator\">&gt;</span>  [<span class=\"ruby-string\">'a'</span>, <span class=\"ruby-string\">'b'</span>, <span class=\"ruby-string\">'c'</span>]\n</pre>\n",null,1],["split_all","Sys","Rails/classes/Sys.html#method-i-split_all","(path)","<p>Split a file path into individual directory names.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">split_all</span>(<span class=\"ruby-string\">&quot;a/b/c&quot;</span>) =<span class=\"ruby-operator\">&gt;</span>  [<span class=\"ruby-string\">'a'</span>, <span class=\"ruby-string\">'b'</span>, <span class=\"ruby-string\">'c'</span>]\n</pre>\n",null,1],["split_args","Rails::Commands::Plugin","Ruby/classes/Rails/Commands/Plugin.html#method-i-split_args","(args)","",null,0],["split_header_value","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-c-split_header_value","(str)","",null,1],["split_into_flow","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-split_into_flow","()","<p>Splits the string into chunks by attribute change\n",null,1],["sprintf","Kernel","Rails/classes/Kernel.html#method-i-sprintf","(*args)","<p>Returns the string resulting from applying <em>format_string</em> to any\nadditional arguments.  Within the format …\n",null,1],["sql","ActiveRecord::LogSubscriber","Ruby/classes/ActiveRecord/LogSubscriber.html#method-i-sql","(event)","",null,0],["sql_for_insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-sql_for_insert","(sql, pk, id_value, sequence_name, binds)","",null,0],["sql_for_insert","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-sql_for_insert","(sql, pk, id_value, sequence_name, binds)","",null,0],["sql_query_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-sql_query_length","()","<p>Returns the maximum length of an SQL query.\n",null,0],["sqlite_version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-sqlite_version","()","",null,0],["sqrt","BigDecimal","Rails/classes/BigDecimal.html#method-i-sqrt","(p1)","<p>Returns the square root of the value.\n<p>If n is specified, returns at least that many significant digits. …\n",null,1],["sqrt","BigMath","Rails/classes/BigMath.html#method-i-sqrt","(x,prec)","<p>Computes the square root of x to the specified number of digits of\nprecision.\n<p>BigDecimal.new(‘2’).sqrt(16). …\n",null,1],["sqrt","CMath","Rails/classes/CMath.html#method-c-sqrt","(z)","<p>Returns the non-negative square root of Complex.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">sqrt</span>(<span class=\"ruby-value\">-1</span>)            <span class=\"ruby-comment\">#=&gt; 0+1.0i</span>\n<span class=\"ruby-identifier\">sqrt</span>(<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">-1</span>,<span class=\"ruby-value\">0</span>)) <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["sqrt","Math","Rails/classes/Math.html#method-c-sqrt","(p1)","<p>Returns the non-negative square root of <em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">0</span>.<span class=\"ruby-identifier\">upto</span>(<span class=\"ruby-value\">10</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">x</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">p</span> [<span class=\"ruby-identifier\">x</span>, <span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">sqrt</span>(<span class=\"ruby-identifier\">x</span>), <span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">sqrt</span>(<span class=\"ruby-identifier\">x</span>)<span class=\"ruby-operator\">**</span><span class=\"ruby-value\">2</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["sqrt!","CMath","Rails/classes/CMath.html#method-c-sqrt-21","(z)","",null,1],["square?","Matrix","Rails/classes/Matrix.html#method-i-square-3F","()","<p>Returns <code>true</code> is this is a square matrix.\n",null,1],["squeeze","String","Rails/classes/String.html#method-i-squeeze","(*args)","<p>Builds a set of characters from the <em>other_str</em> parameter(s) using\nthe procedure described for <code>String#count</code> …\n",null,1],["squeeze!","String","Rails/classes/String.html#method-i-squeeze-21","(*args)","<p>Squeezes <em>str</em> in place, returning either <em>str</em>, or\n<code>nil</code> if no changes were made.\n",null,1],["squish","String","Ruby/classes/String.html#method-i-squish","()","<p>Returns the string, first removing all whitespace on both ends of the\nstring, and then changing remaining …\n",null,0],["squish!","String","Ruby/classes/String.html#method-i-squish-21","()","<p>Performs a destructive squish. See String#squish.\n",null,0],["srand","Kernel","Rails/classes/Kernel.html#method-i-srand","(p1 = v1)","<p>Seeds the pseudorandom number generator to the value of <em>number</em>. If\n<em>number</em> is omitted, seeds the generator …\n",null,1],["srand","Random","Rails/classes/Random.html#method-c-srand","(p1 = v1)","<p>Seeds the pseudorandom number generator to the value of <em>number</em>. If\n<em>number</em> is omitted, seeds the generator …\n",null,1],["src_type","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-src_type","()","<p>Returns source class when the OLE class is ‘Alias’.\n\n<pre>tobj =  WIN32OLE_TYPE.new('Microsoft Office 9.0 Object ...</pre>\n",null,1],["ssl?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-ssl-3F","()","",null,1],["ssl?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-ssl-3F","()","",null,1],["ssl?","WEBrick::HTTPRequest","Rails/classes/WEBrick/HTTPRequest.html#method-i-ssl-3F","()","<p>Is this an SSL request?\n",null,1],["ssl_available?","Gem","Rails/classes/Gem.html#method-c-ssl_available-3F","()","<p>Is SSL (used by the signing commands) available on this platform?\n",null,1],["ssl_context","WEBrick::GenericServer","Rails/classes/WEBrick/GenericServer.html#method-i-ssl_context","()","",null,1],["ssl_options","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-ssl_options","()","<p>Returns the SSL options hash.\n",null,0],["ssl_options=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-ssl_options-3D","(opts={})","<p>Options that will get applied to an SSL connection.\n<p><code>:key</code> - An OpenSSL::PKey::RSA or OpenSSL::PKey::DSA ...\n",null,0],["ssl_options=","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-ssl_options-3D","(opts={})","<p>Hash of options applied to Net::HTTP instance when <code>site</code>\nprotocol is ‘https’.\n",null,0],["ssl_params","Net::POP3","Rails/classes/Net/POP3.html#method-c-ssl_params","()","<p>returns the SSL Parameters\n<p>see also POP3.enable_ssl\n",null,1],["ssl_params","Net::POP3","Rails/classes/Net/POP3.html#method-c-ssl_params","()","<p>returns the SSL Parameters\n<p>see also POP3.enable_ssl\n",null,1],["ssl_params","Net::POP3","Rails/classes/Net/POP3.html#method-c-ssl_params","()","<p>returns the SSL Parameters\n<p>see also POP3.enable_ssl\n",null,1],["ssl_params","Net::POP3","Rails/classes/Net/POP3.html#method-c-ssl_params","()","<p>returns the SSL Parameters\n<p>see also POP3.enable_ssl\n",null,1],["ssl_version=","OpenSSL::SSL::SSLContext","Rails/classes/OpenSSL/SSL/SSLContext.html#method-i-ssl_version-3D","(p1)","<p>You can get a list of valid versions with OpenSSL::SSL::SSLContext::METHODS\n",null,1],["stale?","ActionController::ConditionalGet","Ruby/classes/ActionController/ConditionalGet.html#method-i-stale-3F","(record_or_options, additional_options = {})","<p>Sets the etag and/or last_modified on the response and checks it against\nthe client request. If the request …\n",null,0],["stale_session_check!","ActionDispatch::Session::StaleSessionCheck","Ruby/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-stale_session_check-21","()","",null,0],["stand_alone?","REXML::Document","Rails/classes/REXML/Document.html#method-i-stand_alone-3F","()","<p>@return the XMLDecl standalone value of this document as a String. If no\nXMLDecl has been set, returns …\n",null,1],["standard_exception_handling","Rake::Application","Rails/classes/Rake/Application.html#method-i-standard_exception_handling","()","<p>Provide standard exception handling for the given block.\n",null,1],["standard_port","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-standard_port","()","<p>Returns the standard port number for this request’s protocol.\n",null,0],["standard_port?","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-standard_port-3F","()","<p>Returns whether this request is using the standard port\n",null,0],["standard_rake_options","Rake::Application","Rails/classes/Rake/Application.html#method-i-standard_rake_options","()","<p>A list of all the standard options used in rake, suitable for passing to\nOptionParser.\n",null,1],["standend","Curses","Rails/classes/Curses.html#method-c-standend","()","<p>Enables the Normal display (no highlight)\n<p>This is equivalent to Curses.attron(A_NORMAL)\n<p>see also Curses::Window.attrset …\n",null,1],["standend","Curses::Window","Rails/classes/Curses/Window.html#method-i-standend","()","<p>Enables the Normal display (no highlight)\n<p>This is equivalent to Curses::Window.attron(A_NORMAL)\n<p>see also …\n",null,1],["standout","Curses","Rails/classes/Curses.html#method-c-standout","()","<p>Enables the best highlighting mode of the terminal.\n<p>This is equivalent to Curses:Window.attron(A_STANDOUT) …\n",null,1],["standout","Curses::Window","Rails/classes/Curses/Window.html#method-i-standout","()","<p>Enables the best highlighting mode of the terminal.\n<p>This is equivalent to Curses::Window.attron(A_STANDOUT) …\n",null,1],["start","Rails::Console","Ruby/classes/Rails/Console.html#method-i-start","()","",null,0],["start","Rails::Console","Ruby/classes/Rails/Console.html#method-c-start","(app)","",null,0],["start","Rails::DBConsole","Ruby/classes/Rails/DBConsole.html#method-c-start","(app)","",null,0],["start","Rails::DBConsole","Ruby/classes/Rails/DBConsole.html#method-i-start","()","",null,0],["start","Rails::Server","Ruby/classes/Rails/Server.html#method-i-start","()","",null,0],["start","Coverage","Rails/classes/Coverage.html#method-c-start","()","<p>Enables coverage measurement.\n",null,1],["start","Date","Rails/classes/Date.html#method-i-start","()","<p>Returns the Julian day number denoting the day of calendar reform.\n<p>For example:\n\n<pre>Date.new(2001,2,3).start ...</pre>\n",null,1],["start","GC","Rails/classes/GC.html#method-c-start","()","<p>Initiates garbage collection, unless manually disabled.\n",null,1],["start","GServer","Rails/classes/GServer.html#method-i-start","(maxConnections = -1)","<p>Start the server if it isn’t already running\n<p><code>maxConnections</code> &mdash; override <code>maxConnections</code> given to the constructor. …\n\n",null,1],["start","IRB","Rails/classes/IRB.html#method-c-start","(ap_path = nil)","<p>initialize IRB and start TOP_LEVEL irb\n",null,1],["start","Logger::Application","Rails/classes/Logger/Application.html#method-i-start","()","<p>Start the application.  Return the status code.\n",null,1],["start","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-start","(address, *arg)","<p>Creates a new Net::HTTP object, then additionally opens the TCP connection\nand HTTP session.\n<p>Arguments …\n",null,1],["start","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-start","()","<p>Opens a TCP connection and HTTP session.\n<p>When this method is called with a block, it passes the Net::HTTP …\n",null,1],["start","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-start","(address, *arg)","<p>Creates a new Net::HTTP object, then additionally opens the TCP connection\nand HTTP session.\n<p>Arguments …\n",null,1],["start","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-start","()","<p>Opens a TCP connection and HTTP session.\n<p>When this method is called with a block, it passes the Net::HTTP …\n",null,1],["start","Net::POP3","Rails/classes/Net/POP3.html#method-c-start","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Creates a new POP3 object and open the connection.  Equivalent to\n\n<pre>Net::POP3.new(address, port, isapop).start(account, ...</pre>\n",null,1],["start","Net::POP3","Rails/classes/Net/POP3.html#method-i-start","(account, password)","<p>Starts a POP3 session.\n<p>When called with block, gives a POP3 object to the block and closes the\nsession …\n",null,1],["start","Net::POP3","Rails/classes/Net/POP3.html#method-c-start","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Creates a new POP3 object and open the connection.  Equivalent to\n\n<pre>Net::POP3.new(address, port, isapop).start(account, ...</pre>\n",null,1],["start","Net::POP3","Rails/classes/Net/POP3.html#method-i-start","(account, password)","<p>Starts a POP3 session.\n<p>When called with block, gives a POP3 object to the block and closes the\nsession …\n",null,1],["start","Net::POP3","Rails/classes/Net/POP3.html#method-c-start","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Creates a new POP3 object and open the connection.  Equivalent to\n\n<pre>Net::POP3.new(address, port, isapop).start(account, ...</pre>\n",null,1],["start","Net::POP3","Rails/classes/Net/POP3.html#method-i-start","(account, password)","<p>Starts a POP3 session.\n<p>When called with block, gives a POP3 object to the block and closes the\nsession …\n",null,1],["start","Net::POP3","Rails/classes/Net/POP3.html#method-i-start","(account, password)","<p>Starts a POP3 session.\n<p>When called with block, gives a POP3 object to the block and closes the\nsession …\n",null,1],["start","Net::POP3","Rails/classes/Net/POP3.html#method-c-start","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Creates a new POP3 object and open the connection.  Equivalent to\n\n<pre>Net::POP3.new(address, port, isapop).start(account, ...</pre>\n",null,1],["start","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-start","(address, port = nil, helo = 'localhost', user = nil, secret = nil, authtype = nil)","<p>Creates a new Net::SMTP object and connects to the server.\n<p>This method is equivalent to:\n\n<pre>Net::SMTP.new(address, ...</pre>\n",null,1],["start","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-start","(helo = 'localhost', user = nil, secret = nil, authtype = nil)","<p>Opens a TCP connection and starts the SMTP session.\n<p>Parameters\n<p><code>helo</code> is the <em>HELO</em> <em>domain</em> that you'll dispatch\n...\n",null,1],["start","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-start","(helo = 'localhost', user = nil, secret = nil, authtype = nil)","<p>Opens a TCP connection and starts the SMTP session.\n<p>Parameters\n<p><code>helo</code> is the <em>HELO</em> <em>domain</em> that you'll dispatch\n...\n",null,1],["start","Net::SMTP","Rails/classes/Net/SMTP.html#method-c-start","(address, port = nil, helo = 'localhost', user = nil, secret = nil, authtype = nil)","<p>Creates a new Net::SMTP object and connects to the server.\n<p>This method is equivalent to:\n\n<pre>Net::SMTP.new(address, ...</pre>\n",null,1],["start","Psych::Streaming","Rails/classes/Psych/Streaming.html#method-i-start","(encoding = Nodes::Stream::UTF8)","<p>Start streaming using <code>encoding</code>\n",null,1],["start","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-start","(encoding = Nodes::Stream::UTF8)","",null,1],["start","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-start","()","",null,1],["start","Thread","Rails/classes/Thread.html#method-c-start","(*args)","<p>Basically the same as <code>Thread::new</code>. However, if class\n<code>Thread</code> is subclassed, then calling <code>start</code> in that\n…\n",null,1],["start","WEBrick::CGI","Rails/classes/WEBrick/CGI.html#method-i-start","(env=ENV, stdin=$stdin, stdout=$stdout)","",null,1],["start","WEBrick::Daemon","Rails/classes/WEBrick/Daemon.html#method-c-start","()","<p>Performs the standard operations for daemonizing a process.  Runs a block,\nif given.\n",null,1],["start","WEBrick::GenericServer","Rails/classes/WEBrick/GenericServer.html#method-i-start","(&block)","",null,1],["start","WEBrick::SimpleServer","Rails/classes/WEBrick/SimpleServer.html#method-c-start","()","",null,1],["startElement","RSS::REXMLLikeXMLParser","Rails/classes/RSS/REXMLLikeXMLParser.html#method-i-startElement","(name, attrs)","",null,1],["startElement","XMLRPC::XMLParser::StreamParserMixin","Rails/classes/XMLRPC/XMLParser/StreamParserMixin.html#method-i-startElement","(name, attrs=[])","",null,1],["start_accepting","RDoc::Markup::ToAnsi","Rails/classes/RDoc/Markup/ToAnsi.html#method-i-start_accepting","()","<p>Starts accepting with a reset screen\n",null,1],["start_accepting","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-start_accepting","()","<p>Prepares the visitor for HTML generation\n",null,1],["start_accepting","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-start_accepting","()","<p>Prepares the visitor for text generation\n",null,1],["start_accepting","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-start_accepting","()","<p>Prepares the visitor for gathering tt sections\n",null,1],["start_collecting_tokens","RDoc::TokenStream","Rails/classes/RDoc/TokenStream.html#method-i-start_collecting_tokens","()","",null,1],["start_color","Curses","Rails/classes/Curses.html#method-c-start_color","()","<p>Initializes the color attributes, for terminals that support it.\n<p>This must be called, in order to use …\n",null,1],["start_doc","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-start_doc","()","<p>Enable capture of documentation unless documentation has been turned off by\n:endoc:\n",null,1],["start_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-start_document","()","",null,0],["start_document","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-start_document","(p1, p2, p3)","<p>Start a document emission with YAML <code>version</code>,\n<code>tags</code>, and an <code>implicit</code> start.\n<p>See Psych::Handler#start_document …\n",null,1],["start_document","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-start_document","(version, tag_directives, implicit)","<p>Called when the document starts with the declared <code>version</code>,\n<code>tag_directives</code>, if the document is <code>implicit</code> …\n",null,1],["start_document","Psych::TreeBuilder","Rails/classes/Psych/TreeBuilder.html#method-i-start_document","(version, tag_directives, implicit)","<p>Handles start_document events with <code>version</code>,\n<code>tag_directives</code>, and <code>implicit</code> styling.\n<p>See Psych::Handler#start_document …\n",null,1],["start_document","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-start_document","()","",null,1],["start_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Ruby/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-start_element","(name, attrs = [])","",null,0],["start_element","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-start_element","(uri, localname, qname, attributes)","",null,1],["start_element?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-start_element-3F","()","<p>Content: [ String tag_name, Hash attributes ]\n",null,1],["start_export","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-start_export","()","",null,1],["start_import","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-start_import","()","",null,1],["start_job","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-start_job","(command = nil)","<p>start a job\n",null,1],["start_mapping","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-start_mapping","(p1, p2, p3, p4)","<p>Start emitting a YAML map with <code>anchor</code>, <code>tag</code>, an\n<code>implicit</code> start and end, and <code>style</code>.\n<p>See Psych::Handler#start_mapping …\n",null,1],["start_mapping","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-start_mapping","(anchor, tag, implicit, style)","<p>Called when a map starts.\n<p><code>anchor</code> is the anchor associated with the map or\n<code>nil</code>. <code>tag</code> is the tag associated ...\n",null,1],["start_prefix_mapping","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-start_prefix_mapping","(prefix, uri)","",null,1],["start_processing","ActionController::LogSubscriber","Ruby/classes/ActionController/LogSubscriber.html#method-i-start_processing","(event)","",null,0],["start_profile","Profiler__","Rails/classes/Profiler__.html#method-i-start_profile","()","",null,1],["start_sequence","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-start_sequence","(p1, p2, p3, p4)","<p>Start emitting a sequence with <code>anchor</code>, a <code>tag</code>,\n<code>implicit</code> sequence start and end, along with\n<code>style</code>.\n<p>See  …\n",null,1],["start_sequence","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-start_sequence","(anchor, tag, implicit, style)","<p>Called when a sequence is started.\n<p><code>anchor</code> is the anchor associated with the sequence or nil.\n<code>tag</code> is the ...\n",null,1],["start_service","DRb","Rails/classes/DRb.html#method-c-start_service","(uri=nil, front=nil, config=nil)","<p>Start a dRuby server locally.\n<p>The new dRuby server will become the primary server, even if another server\n…\n",null,1],["start_stream","Psych::Emitter","Rails/classes/Psych/Emitter.html#method-i-start_stream","(p1)","<p>Start a stream emission with <code>encoding</code>\n<p>See Psych::Handler#start_stream\n",null,1],["start_stream","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-start_stream","(encoding)","<p>Called with <code>encoding</code> when the YAML stream starts.  This method\nis called once per stream.  A stream may …\n",null,1],["start_stream","Psych::TreeBuilder","Rails/classes/Psych/TreeBuilder.html#method-i-start_stream","(encoding)","",null,1],["start_transaction","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-start_transaction","()","",null,0],["start_with?","String","Rails/classes/String.html#method-i-start_with-3F","(*args)","<p>Returns true if <em>str</em> starts with one of the prefixes given.\n\n<pre>p &quot;hello&quot;.start_with?(&quot;hell&quot;)              ...</pre>\n",null,1],["started?","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-started-3F","()","<p>Returns true if the HTTP session has been started.\n",null,1],["started?","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-started-3F","()","<p>Returns true if the HTTP session has been started.\n",null,1],["started?","Net::POP3","Rails/classes/Net/POP3.html#method-i-started-3F","()","<p><code>true</code> if the POP3 session has started.\n",null,1],["started?","Net::POP3","Rails/classes/Net/POP3.html#method-i-started-3F","()","<p><code>true</code> if the POP3 session has started.\n",null,1],["started?","Net::POP3","Rails/classes/Net/POP3.html#method-i-started-3F","()","<p><code>true</code> if the POP3 session has started.\n",null,1],["started?","Net::POP3","Rails/classes/Net/POP3.html#method-i-started-3F","()","<p><code>true</code> if the POP3 session has started.\n",null,1],["started?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-started-3F","()","<p><code>true</code> if the SMTP session has been started.\n",null,1],["started?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-started-3F","()","<p><code>true</code> if the SMTP session has been started.\n",null,1],["started_request_message","Rails::Rack::Logger","Ruby/classes/Rails/Rack/Logger.html#method-i-started_request_message","(request)","<p>Started GET “/session/new” for 127.0.0.1 at 2012-09-26 14:51:42 -0700\n",null,0],["starting","GServer","Rails/classes/GServer.html#method-i-starting","()","<p>Called when the server is starting up, if auditing is enabled.\n",null,1],["starts_with","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-starts_with","( string, test )","<p>Fixed by Mike Stok\n",null,1],["starttls","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-starttls","(options = {}, verify = true)","<p>Sends a STARTTLS command to start TLS session.\n",null,1],["starttls","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-starttls","()","<p>SMTP command dispatcher\n",null,1],["starttls","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-starttls","()","<p>SMTP command dispatcher\n",null,1],["starttls?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-starttls-3F","()","<p>Returns truth value if this object uses STARTTLS. If this object always\nuses STARTTLS, returns :always. …\n",null,1],["starttls?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-starttls-3F","()","<p>Returns truth value if this object uses STARTTLS. If this object always\nuses STARTTLS, returns :always. …\n",null,1],["starttls_always?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-starttls_always-3F","()","<p>true if this object uses STARTTLS.\n",null,1],["starttls_always?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-starttls_always-3F","()","<p>true if this object uses STARTTLS.\n",null,1],["starttls_auto?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-starttls_auto-3F","()","<p>true if this object uses STARTTLS when server advertises STARTTLS.\n",null,1],["starttls_auto?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-starttls_auto-3F","()","<p>true if this object uses STARTTLS when server advertises STARTTLS.\n",null,1],["stat","File","Rails/classes/File.html#method-c-stat","(p1)","<p>Returns a <code>File::Stat</code> object for the named file (see\n<code>File::Stat</code>).\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">mtime</span>   <span class=\"ruby-comment\">#=&gt; Tue ...</span>\n</pre>\n",null,1],["stat","GC","Rails/classes/GC.html#method-c-stat","(p1 = v1)","<p>Returns a Hash containing information about the GC.\n<p>The hash includes information about internal statistics …\n",null,1],["stat","IO","Rails/classes/IO.html#method-i-stat","()","<p>Returns status information for <em>ios</em> as an object of type\n<code>File::Stat</code>.\n\n<pre>f = File.new(&quot;testfile&quot;)\ns = f.stat ...</pre>\n",null,1],["stat","Pathname","Rails/classes/Pathname.html#method-i-stat","()","<p>See <code>File.stat</code>.  Returns a <code>File::Stat</code> object.\n",null,1],["state","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-state","()","<p>A description of the current connection state.\n",null,1],["stats","ActiveSupport::Cache::MemCacheStore","Ruby/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-stats","()","<p>Get the statistics from the memcached servers.\n",null,0],["status","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-status","()","",null,0],["status","Net::FTP","Rails/classes/Net/FTP.html#method-i-status","()","<p>Returns the status (STAT command).\n",null,1],["status","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-status","(mailbox, attr)","<p>Sends a STATUS command, and returns the status of the indicated\n<code>mailbox</code>. <code>attr</code> is a list of one or more …\n",null,1],["status","OpenSSL::OCSP::BasicResponse","Rails/classes/OpenSSL/OCSP/BasicResponse.html#method-i-status","()","",null,1],["status","OpenSSL::OCSP::Response","Rails/classes/OpenSSL/OCSP/Response.html#method-i-status","()","",null,1],["status","PTY::ChildExited","Rails/classes/PTY/ChildExited.html#method-i-status","()","<p>Returns the exit status of the child for which PTY#check raised this\nexception\n",null,1],["status","SystemExit","Rails/classes/SystemExit.html#method-i-status","()","<p>Return the status value associated with this system exit.\n",null,1],["status","Thread","Rails/classes/Thread.html#method-i-status","()","<p>Returns the status of <em>thr</em>: “<code>sleep</code>” if <em>thr</em> is\nsleeping or waiting on I/O, “<code>run</code>” if <em>thr</em> is\nexecuting, …\n",null,1],["status=","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-status-3D","(status)","",null,0],["status=","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-status-3D","(status)","",null,0],["status=","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-status-3D","(status)","<p>Sets the response’s status to the <code>status</code> code\n",null,1],["status_code","ActionDispatch::ExceptionWrapper","Ruby/classes/ActionDispatch/ExceptionWrapper.html#method-i-status_code","()","",null,0],["status_code_for_exception","ActionDispatch::ExceptionWrapper","Ruby/classes/ActionDispatch/ExceptionWrapper.html#method-c-status_code_for_exception","(class_name)","",null,0],["status_line","WEBrick::HTTPResponse","Rails/classes/WEBrick/HTTPResponse.html#method-i-status_line","()","<p>The response’s HTTP status line\n",null,1],["status_message","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-status_message","()","",null,0],["status_string","OpenSSL::OCSP::Response","Rails/classes/OpenSSL/OCSP/Response.html#method-i-status_string","()","",null,1],["status_type_char","Net::SMTP::Response","Rails/classes/Net/SMTP/Response.html#method-i-status_type_char","()","<p>Takes the first digit of the reply code to determine the status type\n",null,1],["stdout","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-stdout","()","",null,1],["stdout","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-stdout","()","",null,1],["stdout=","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-stdout-3D","(s)","",null,1],["stdscr","Curses","Rails/classes/Curses.html#method-c-stdscr","()","<p>The Standard Screen.\n<p>Upon initializing curses, a default window called stdscr, which is the size\nof the …\n",null,1],["step","Date","Rails/classes/Date.html#method-i-step","(p1, p2 = v2)","<p>Iterates evaluation of the given block, which takes a date object. The\nlimit should be a date object. …\n",null,1],["step","Numeric","Rails/classes/Numeric.html#method-i-step","(*args)","<p>Invokes <em>block</em> with the sequence of numbers starting at\n<em>num</em>, incremented by <em>step</em> (default 1) on each call. …\n",null,1],["step","Range","Rails/classes/Range.html#method-i-step","(p1 = v1)","<p>Iterates over <em>rng</em>, passing each <em>n</em>th element to the block.\nIf the range contains numbers, <em>n</em> is added for …\n",null,1],["step_with_blockless","Range","Ruby/classes/Range.html#method-i-step_with_blockless","(*args, &block)","<p>Return an array when step is called without a block.\n",null,0],["sti_name","ActiveRecord::Inheritance::ClassMethods","Ruby/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-sti_name","()","",null,0],["sticky?","File","Rails/classes/File.html#method-c-sticky-3F","(p1)","<p>Returns <code>true</code> if the named file has the sticky bit set.\n",null,1],["sticky?","File::Stat","Rails/classes/File/Stat.html#method-i-sticky-3F","()","<p>Returns <code>true</code> if <em>stat</em> has its sticky bit set,\n<code>false</code> if it doesn’t or if the operating system doesn’t support\n…\n",null,1],["sticky?","FileTest","Rails/classes/FileTest.html#method-i-sticky-3F","(p1)","<p>Returns <code>true</code> if the named file has the sticky bit set.\n",null,1],["sticky?","Pathname","Rails/classes/Pathname.html#method-i-sticky-3F","()","<p>See <code>FileTest.sticky?</code>.\n",null,1],["stop","GServer","Rails/classes/GServer.html#method-i-stop","()","<p>Stop the server\n",null,1],["stop","GServer","Rails/classes/GServer.html#method-c-stop","(port, host = DEFAULT_HOST)","<p>Stop the server running on the given port, bound to the given host\n<p><code>port</code> &mdash; port, as a FixNum, of the server …\n",null,1],["stop","Thread","Rails/classes/Thread.html#method-c-stop","()","<p>Stops execution of the current thread, putting it into a “sleep” state, and\nschedules execution of …\n",null,1],["stop","WEBrick::GenericServer","Rails/classes/WEBrick/GenericServer.html#method-i-stop","()","",null,1],["stop?","Thread","Rails/classes/Thread.html#method-i-stop-3F","()","<p>Returns <code>true</code> if <em>thr</em> is dead or sleeping.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = <span class=\"ruby-constant\">Thread</span>.<span class=\"ruby-identifier\">new</span> { <span class=\"ruby-constant\">Thread</span>.<span class=\"ruby-identifier\">stop</span> }\n<span class=\"ruby-identifier\">b</span> = <span class=\"ruby-constant\">Thread</span>.<span class=\"ruby-identifier\">current</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">stop?</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["stop_doc","RDoc::CodeObject","Rails/classes/RDoc/CodeObject.html#method-i-stop_doc","()","<p>Disable capture of documentation\n",null,1],["stop_next","DEBUGGER__::Context","Rails/classes/DEBUGGER__/Context.html#method-i-stop_next","(n=1)","",null,1],["stop_profile","Profiler__","Rails/classes/Profiler__.html#method-i-stop_profile","()","",null,1],["stop_service","DRb","Rails/classes/DRb.html#method-c-stop_service","()","<p>Stop the local dRuby server.\n<p>This operates on the primary server.  If there is no primary server\ncurrently …\n",null,1],["stop_service","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-i-stop_service","()","<p>Stop this server.\n",null,1],["stop_service","DRb::ExtServ","Rails/classes/DRb/ExtServ.html#method-i-stop_service","()","",null,1],["stopped?","GServer","Rails/classes/GServer.html#method-i-stopped-3F","()","<p>Returns true if the server has stopped.\n",null,1],["stopped?","Process::Status","Rails/classes/Process/Status.html#method-i-stopped-3F","()","<p>Returns <code>true</code> if this process is stopped. This is only returned\nif the corresponding <code>wait</code> call had the …\n",null,1],["stopped?","Rake::PseudoStatus","Rails/classes/Rake/PseudoStatus.html#method-i-stopped-3F","()","",null,1],["stopping","GServer","Rails/classes/GServer.html#method-i-stopping","()","<p>Called when the server is shutting down, if auditing is enabled.\n",null,1],["stopsig","Process::Status","Rails/classes/Process/Status.html#method-i-stopsig","()","<p>Returns the number of the signal that caused <em>stat</em> to stop (or\n<code>nil</code> if self is not stopped).\n",null,1],["storbinary","Net::FTP","Rails/classes/Net/FTP.html#method-i-storbinary","(cmd, file, blocksize, rest_offset = nil)","<p>Puts the connection into binary (image) mode, issues the given server-side\ncommand (such as “STOR …\n",null,1],["store","ActiveRecord::Store::ClassMethods","Ruby/classes/ActiveRecord/Store/ClassMethods.html#method-i-store","(store_attribute, options = {})","",null,0],["store","ActiveSupport::Dependencies::ClassCache","Ruby/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-store","(klass)","",null,0],["store","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-store","(key, value)","",null,0],["store","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-store","(key, value)","",null,0],["store","DBM","Rails/classes/DBM.html#method-i-store","(p1, p2)","<p>Stores the specified string value in the database, indexed via the string\nkey provided.\n",null,1],["store","ENV","Rails/classes/ENV.html#method-c-store","(p1, p2)","<p>Sets the environment variable <code>name</code> to <code>value</code>.  If\nthe value given is <code>nil</code> the environment variable is deleted. …\n",null,1],["store","GDBM","Rails/classes/GDBM.html#method-i-store","(p1, p2)","<p>Associates the value <em>value</em> with the specified <em>key</em>.\n",null,1],["store","Hash","Rails/classes/Hash.html#method-i-store","(p1, p2)","<p>Element Assignment—Associates the value given by <em>value</em> with the\nkey given by <em>key</em>. <em>key</em> should not have …\n",null,1],["store","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-store","(set, attr, flags)","<p>Sends a STORE command to alter data associated with messages in the\nmailbox, in particular their flags. …\n",null,1],["store","SDBM","Rails/classes/SDBM.html#method-i-store","(p1, p2)","",null,1],["store","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-store","( key, val )","<p>Stores <code>value</code> in database with <code>key</code> as the index.\n<code>value</code> is converted to YAML before being stored.\n<p>Returns …\n",null,1],["store_accessor","ActiveRecord::Store::ClassMethods","Ruby/classes/ActiveRecord/Store/ClassMethods.html#method-i-store_accessor","(store_attribute, *keys)","",null,0],["store_application_definition!","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-store_application_definition-21","()","",null,0],["storlines","Net::FTP","Rails/classes/Net/FTP.html#method-i-storlines","(cmd, file)","<p>Puts the connection into ASCII (text) mode, issues the given server-side\ncommand (such as “STOR …\n",null,1],["stream","DRb::DRbSSLSocket","Rails/classes/DRb/DRbSSLSocket.html#method-i-stream","()","",null,1],["stream","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-i-stream","()","<p>Get the socket.\n",null,1],["stream=","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-stream-3D","( source )","",null,1],["stream_end?","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-stream_end-3F","()","<p>Returns true if the stream is finished.\n",null,1],["streaming?","Psych::Handler","Rails/classes/Psych/Handler.html#method-i-streaming-3F","()","<p>Is this handler a streaming handler?\n",null,1],["stress","GC","Rails/classes/GC.html#method-c-stress","()","<p>returns current status of GC stress mode.\n",null,1],["stress=","GC","Rails/classes/GC.html#method-c-stress-3D","(p1)","<p>Updates the GC stress mode.\n<p>When stress mode is enabled the GC is invoked at every GC opportunity: all\n…\n",null,1],["strftime","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-strftime","(format)","<p>Replaces <code>%Z</code> and <code>%z</code> directives with\n<code>zone</code> and <code>formatted_offset</code>, respectively, before\npassing to Time#strftime …\n",null,0],["strftime","Date","Rails/classes/Date.html#method-i-strftime","(*args)","\n<pre>Formats date according to the directives in the given format\nstring.\nThe directives begins with a percent ...</pre>\n",null,1],["strftime","DateTime","Rails/classes/DateTime.html#method-i-strftime","(*args)","\n<pre>Formats date according to the directives in the given format\nstring.\nThe directives begins with a percent ...</pre>\n",null,1],["strftime","Time","Rails/classes/Time.html#method-i-strftime","(p1)","<p>Formats <em>time</em> according to the directives in the given format\nstring. The directives begins with a percent …\n",null,1],["strict_decode64","Base64","Rails/classes/Base64.html#method-i-strict_decode64","(str)","<p>Returns the Base64-decoded version of <code>str</code>. This method\ncomplies with RFC 4648. ArgumentError is raised …\n",null,1],["strict_encode64","Base64","Ruby/classes/Base64.html#method-c-strict_encode64","(value)","<p>Included in Ruby 1.9\n",null,0],["strict_encode64","Base64","Rails/classes/Base64.html#method-i-strict_encode64","(bin)","<p>Returns the Base64-encoded version of <code>bin</code>. This method\ncomplies with RFC 4648. No line feeds are added. …\n",null,1],["string","MatchData","Rails/classes/MatchData.html#method-i-string","()","<p>Returns a frozen copy of the string passed in to <code>match</code>.\n\n<pre>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.string ...</pre>\n",null,1],["string","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-string","( object=nil )","<p>A node-set is converted to a string by returning the string-value of the\nnode in the node-set that is …\n",null,1],["string","Ripper::TokenPattern::MatchData","Rails/classes/Ripper/TokenPattern/MatchData.html#method-i-string","(n = 0)","",null,1],["string","StringIO","Rails/classes/StringIO.html#method-i-string","()","<p>Returns underlying String object, the subject of IO.\n",null,1],["string","StringScanner","Rails/classes/StringScanner.html#method-i-string","()","<p>Returns the string being scanned.\n",null,1],["string=","StringIO","Rails/classes/StringIO.html#method-i-string-3D","(p1)","<p>Changes underlying String object, the subject of IO.\n",null,1],["string=","StringScanner","Rails/classes/StringScanner.html#method-i-string-3D","(p1)","<p>Changes the string being scanned to <code>str</code> and resets the\nscanner. Returns <code>str</code>.\n",null,1],["string_length","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-string_length","( string )","<p>UNTESTED\n",null,1],["string_value","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-string_value","( o )","<p>A node-set is converted to a string by returning the concatenation of the\nstring-value of each of the …\n",null,1],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys","()","",null,0],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys","()","",null,0],["stringify_keys","Hash","Ruby/classes/Hash.html#method-i-stringify_keys","()","<p>Return a new hash with all keys converted to strings.\n\n<pre class=\"ruby\">{ :<span class=\"ruby-identifier\">name</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'Rob'</span>, :<span class=\"ruby-identifier\">years</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'28'</span> }.<span class=\"ruby-identifier\">stringify_keys</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys-21","()","",null,0],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys-21","()","",null,0],["stringify_keys!","Hash","Ruby/classes/Hash.html#method-i-stringify_keys-21","()","<p>Destructively convert all keys to strings. Same as\n<code>stringify_keys</code>, but modifies <code>self</code>.\n",null,0],["strip","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-strip","()","<p>Strips entire range of Unicode whitespace from the right and left of the\nstring.\n",null,0],["strip","String","Rails/classes/String.html#method-i-strip","()","<p>Returns a copy of <em>str</em> with leading and trailing whitespace\nremoved.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;    hello    &quot;</span>.<span class=\"ruby-identifier\">strip</span>   <span class=\"ruby-comment\">#=&gt; &quot;hello&quot; ...</span>\n</pre>\n",null,1],["strip!","String","Rails/classes/String.html#method-i-strip-21","()","<p>Removes leading and trailing whitespace from <em>str</em>. Returns\n<code>nil</code> if <em>str</em> was not altered.\n",null,1],["strip_hashes","RDoc::Text","Rails/classes/RDoc/Text.html#method-i-strip_hashes","(text)","<p>Strips leading # characters from <code>text</code>\n",null,1],["strip_heredoc","String","Ruby/classes/String.html#method-i-strip_heredoc","()","<p>Strips indentation in heredocs.\n<p>For example in\n\n<pre>if options[:usage]\n  puts &lt;&lt;-USAGE.strip_heredoc\n    This ...</pre>\n",null,0],["strip_links","ActionView::Helpers::SanitizeHelper","Ruby/classes/ActionView/Helpers/SanitizeHelper.html#method-i-strip_links","(html)","<p>Strips all link tags from <code>text</code> leaving just the link text.\n<p>Examples\n\n<pre>strip_links('&lt;a href=&quot;http://www.rubyonrails.org&quot;&gt;Ruby ...</pre>\n",null,0],["strip_newlines","RDoc::Text","Rails/classes/RDoc/Text.html#method-i-strip_newlines","(text)","<p>Strips leading and trailing n characters from <code>text</code>\n",null,1],["strip_stars","RDoc::Text","Rails/classes/RDoc/Text.html#method-i-strip_stars","(text)","<p>Strips       style comments\n",null,1],["strip_tags","ActionView::Helpers::SanitizeHelper","Ruby/classes/ActionView/Helpers/SanitizeHelper.html#method-i-strip_tags","(html)","<p>Strips all HTML tags from the <code>html</code>, including comments. This\nuses the html-scanner tokenizer and so its …\n",null,0],["strongly_connected_components","TSort","Rails/classes/TSort.html#method-i-strongly_connected_components","()","<p>Returns strongly connected components as an array of arrays of nodes. The\narray is sorted from children …\n",null,1],["strptime","Date","Rails/classes/Date.html#method-c-strptime","(p1 = v1, p2 = v2, p3 = v3)","<p>Parses the given representation of date and time with the given template,\nand creates a date object. …\n",null,1],["strptime","DateTime","Rails/classes/DateTime.html#method-c-strptime","(p1 = v1, p2 = v2, p3 = v3)","<p>Parses the given representation of date and time with the given template,\nand creates a date object. …\n",null,1],["strptime","Time","Rails/classes/Time.html#method-c-strptime","(date, format, now=self.now)","<p>Parses <code>date</code> using Date._strptime and converts it to a Time\nobject.\n<p>If a block is given, the year described …\n",null,1],["struct","DL::Importer","Rails/classes/DL/Importer.html#method-i-struct","(signature)","",null,1],["struct","XMLRPC::Convert","Rails/classes/XMLRPC/Convert.html#method-c-struct","(hash)","",null,1],["structure_dump","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-structure_dump","()","<p>Returns a string of <code>CREATE TABLE</code> SQL statement(s) for\nrecreating the entire structure of the database. …\n",null,0],["stylesheet_link_tag","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html#method-i-stylesheet_link_tag","(*sources)","<p>Returns a stylesheet link tag for the sources specified as arguments. If\nyou don’t specify an extension, …\n",null,0],["stylesheet_link_tag","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-stylesheet_link_tag","(*sources)","",null,0],["stylesheet_path","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","Ruby/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html#method-i-stylesheet_path","(source)","<p>Computes the path to a stylesheet asset in the public stylesheets\ndirectory. If the <code>source</code> filename has …\n",null,0],["stylesheet_path","Sprockets::Helpers::RailsHelper","Ruby/classes/Sprockets/Helpers/RailsHelper.html#method-i-stylesheet_path","(source)","",null,0],["stylesheets","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-stylesheets","()","",null,0],["su","WEBrick::Utils","Rails/classes/WEBrick/Utils.html#method-c-su","(user)","<p>Changes the process’s uid and gid to the ones of <code>user</code>\n",null,1],["sub","BigDecimal","Rails/classes/BigDecimal.html#method-i-sub","(p1, p2)","",null,1],["sub","Kernel","Rails/classes/Kernel.html#method-i-sub","(*args)","<p>Equivalent to <code>$_.sub(<em>args</em>)</code>, except that\n<code>$_</code> will be updated if substitution occurs. Available only when\n…\n",null,1],["sub","Pathname","Rails/classes/Pathname.html#method-i-sub","(*args)","<p>Return a pathname which is substituted by String#sub.\n",null,1],["sub","String","Rails/classes/String.html#method-i-sub","(*args)","<p>Returns a copy of <em>str</em> with the <em>first</em> occurrence of\n<em>pattern</em> substituted for the second argument. The  …\n",null,1],["sub!","String","Rails/classes/String.html#method-i-sub-21","(*args)","<p>Performs the substitutions of <code>String#sub</code> in place, returning\n<em>str</em>, or <code>nil</code> if no substitutions were performed. …\n",null,1],["sub_ext","Pathname","Rails/classes/Pathname.html#method-i-sub_ext","(p1)","<p>Return a pathname which the extension of the basename is substituted by\n<em>repl</em>.\n<p>If self has no extension …\n",null,1],["sub_type","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-sub_type","()","<p>Returns a content type string such as “html”. This method returns nil if\nContent-Type: header …\n",null,1],["subclasses","Rails::Generators","Ruby/classes/Rails/Generators.html#method-c-subclasses","()","<p>Track all generators subclasses.\n",null,0],["subclasses","Rails::Railtie","Ruby/classes/Rails/Railtie.html#method-c-subclasses","()","",null,0],["subdomain","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-subdomain","(tld_length = @@tld_length)","<p>Returns all the subdomains as a string, so <code>&quot;dev.www&quot;</code>\nwould be returned for “dev.www.rubyonrails.org …\n",null,0],["subdomain_of?","Resolv::DNS::Name","Rails/classes/Resolv/DNS/Name.html#method-i-subdomain_of-3F","(other)","<p>Returns true if <code>other</code> is a subdomain.\n<p>Example:\n\n<pre>domain = Resolv::DNS::Name.create(&quot;y.z&quot;)\np Resolv::DNS::Name.create(&quot;w.x.y.z&quot;).subdomain_of?(domain) ...</pre>\n",null,1],["subdomains","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-subdomains","(tld_length = @@tld_length)","<p>Returns all the subdomains as an array, so <code>[&quot;dev&quot;,\n&quot;www&quot;]</code> would be returned for “ …\n",null,0],["subject","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-subject","()","",null,1],["subject","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-subject","()","",null,1],["subject=","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-subject-3D","(p1)","",null,1],["subject=","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-subject-3D","(p1)","",null,1],["subject_certificate=","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-i-subject_certificate-3D","(p1)","",null,1],["subject_request=","OpenSSL::X509::ExtensionFactory","Rails/classes/OpenSSL/X509/ExtensionFactory.html#method-i-subject_request-3D","(p1)","",null,1],["submit","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-submit","(value=nil, options={})","<p>Add the submit button for the given form. When no value is given, it checks\nif the object is a new resource …\n",null,0],["submit","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-submit","(value = nil, name = nil)","<p>Generate a submit button Input element, as a String.\n<p><code>value</code> is the text to display on the button.  <code>name</code>\n...\n",null,1],["submit_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-submit_tag","(value = \"Save changes\", options = {})","<p>Creates a submit button with the text <code>value</code> as the caption.\n<p>Options\n<p><code>:confirm =&gt; 'question?'</code> - If present ...\n",null,0],["subscribe","ActiveSupport::Notifications","Ruby/classes/ActiveSupport/Notifications.html#method-c-subscribe","(*args, &block)","",null,0],["subscribe","ActiveSupport::Notifications::Fanout","Ruby/classes/ActiveSupport/Notifications/Fanout.html#method-i-subscribe","(pattern = nil, block = Proc.new)","",null,0],["subscribe","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-subscribe","(mailbox)","<p>Sends a SUBSCRIBE command to add the specified <code>mailbox</code> name to\nthe server’s set of “active” …\n",null,1],["subscribed","ActiveSupport::Notifications","Ruby/classes/ActiveSupport/Notifications.html#method-c-subscribed","(callback, *args, &block)","",null,0],["subsec","Time","Rails/classes/Time.html#method-i-subsec","()","<p>Returns just the fraction for <em>time</em>.\n<p>The result is possibly rational.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>        <span class=\"ruby-comment\">#=&gt; 2009-03-26 ...</span>\n</pre>\n",null,1],["subset?","Set","Rails/classes/Set.html#method-i-subset-3F","(set)","<p>Returns true if the set is a subset of the given set.\n",null,1],["substitute_at","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-substitute_at","(column, index)","<p>Returns a bind substitution value given a <code>column</code> and list of\ncurrent <code>binds</code>\n",null,0],["substitute_at","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-substitute_at","(column, index)","",null,0],["substring","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-substring","( string, start, length=nil )","<p>Take equal portions of Mike Stok and Sean Russell; mix vigorously, and pour\ninto a tall, chilled glass. …\n",null,1],["substring_after","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-substring_after","( string, test )","<p>Kouhei fixed this too\n",null,1],["substring_before","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-substring_before","( string, test )","<p>Kouhei fixed this\n",null,1],["subtract","Set","Rails/classes/Set.html#method-i-subtract","(enum)","<p>Deletes every element that appears in the given enumerable object and\nreturns self.\n",null,1],["subwin","Curses::Window","Rails/classes/Curses/Window.html#method-i-subwin","(p1, p2, p3, p4)","<p>Contruct a new subwindow with constraints of <code>height</code> lines,\n<code>width</code> columns, begin at <code>top</code> line, and begin …\n",null,1],["succ","Date","Rails/classes/Date.html#method-i-succ","()","<p>Returns a date object denoting the following day.\n",null,1],["succ","Fixnum","Rails/classes/Fixnum.html#method-i-succ","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">next</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n(<span class=\"ruby-value\">-1</span>).<span class=\"ruby-identifier\">next</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n</pre>\n",null,1],["succ","IPAddr","Rails/classes/IPAddr.html#method-i-succ","()","<p>Returns the successor to the ipaddr.\n",null,1],["succ","Integer","Rails/classes/Integer.html#method-i-succ","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">next</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n(<span class=\"ruby-value\">-1</span>).<span class=\"ruby-identifier\">next</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n</pre>\n",null,1],["succ","Prime::EratosthenesGenerator","Rails/classes/Prime/EratosthenesGenerator.html#method-i-succ","()","",null,1],["succ","Prime::Generator23","Rails/classes/Prime/Generator23.html#method-i-succ","()","",null,1],["succ","Prime::OldCompatibility","Rails/classes/Prime/OldCompatibility.html#method-i-succ","()","<p>Returns the next prime number and forwards internal pointer.\n",null,1],["succ","Prime::PseudoPrimeGenerator","Rails/classes/Prime/PseudoPrimeGenerator.html#method-i-succ","()","<p>returns the next pseudo-prime number, and move the internal position\nforward.\n<p><code>PseudoPrimeGenerator</code>#succ ...\n",null,1],["succ","Prime::TrialDivisionGenerator","Rails/classes/Prime/TrialDivisionGenerator.html#method-i-succ","()","",null,1],["succ","String","Rails/classes/String.html#method-i-succ","()","<p>Returns the successor to <em>str</em>. The successor is calculated by\nincrementing characters starting from the …\n",null,1],["succ","Symbol","Rails/classes/Symbol.html#method-i-succ","()","<p>Same as <code>sym.to_s.succ.intern</code>.\n",null,1],["succ","Time","Rails/classes/Time.html#method-i-succ","()","<p>Return a new time object, one second later than <code>time</code>.\nTime#succ is obsolete since 1.9.2 for time is not …\n",null,1],["succ!","String","Rails/classes/String.html#method-i-succ-21","()","<p>Equivalent to <code>String#succ</code>, but modifies the receiver in place.\n",null,1],["success","Gem::Builder","Rails/classes/Gem/Builder.html#method-i-success","()","",null,1],["success","Iconv::Failure","Rails/classes/Iconv/Failure.html#method-i-success","()","<p>Returns string(s) translated successfully until the exception occurred.\n<p>In the case of failure occurred ...\n\n",null,1],["success?","ActiveResource::Response","Ruby/classes/ActiveResource/Response.html#method-i-success-3F","()","<p>Returns true if code is 2xx, false otherwise.\n",null,0],["success?","Net::SMTP::Response","Rails/classes/Net/SMTP/Response.html#method-i-success-3F","()","<p>Determines whether the response received was a Positive Completion reply\n(2xx reply code)\n",null,1],["success?","Process::Status","Rails/classes/Process/Status.html#method-i-success-3F","()","<p>Returns <code>true</code> if <em>stat</em> is successful,\n<code>false</code> if not. Returns <code>nil</code> if <code>exited?</code>\nis not <code>true</code>.\n",null,1],["success?","SystemExit","Rails/classes/SystemExit.html#method-i-success-3F","()","<p>Returns <code>true</code> if exiting successful, <code>false</code> if not.\n",null,1],["success?","WEBrick::HTTPStatus","Rails/classes/WEBrick/HTTPStatus.html#method-c-success-3F","(code)","<p>Is <code>code</code> a successful status?\n",null,1],["suffix_pattern","Gem","Rails/classes/Gem.html#method-c-suffix_pattern","()","<p>Glob pattern for require-able path suffixes.\n",null,1],["suffixes","Gem","Rails/classes/Gem.html#method-c-suffixes","()","<p>Suffixes for require-able paths.\n",null,1],["suggest_gems_from_name","Gem::SpecFetcher","Rails/classes/Gem/SpecFetcher.html#method-i-suggest_gems_from_name","(gem_name)","<p>Suggests a gem based on the supplied <code>gem_name</code>. Returns a\nstring of the gem name if an approximate match …\n",null,1],["sum","ActiveRecord::Calculations","Ruby/classes/ActiveRecord/Calculations.html#method-i-sum","(*args)","<p>Calculates the sum of values on a given column. The value is returned with\nthe same data type of the …\n",null,0],["sum","Enumerable","Ruby/classes/Enumerable.html#method-i-sum","(identity = 0, &block)","<p>Calculates a sum from the elements. Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">payments</span>.<span class=\"ruby-identifier\">sum</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">p</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">price</span> * <span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">tax_rate</span> }\n<span class=\"ruby-identifier\">payments</span>.<span class=\"ruby-identifier\">sum</span>(&amp;:<span class=\"ruby-identifier\">price</span>)\n</pre>\n",null,0],["sum","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-sum","( nodes )","",null,1],["sum","String","Rails/classes/String.html#method-i-sum","(p1 = v1)","<p>Returns a basic <em>n</em>-bit checksum of the characters in <em>str</em>,\nwhere <em>n</em> is the optional <code>Fixnum</code> parameter, defaulting\n…\n",null,1],["summarize","OptionParser","Rails/classes/OptionParser.html#method-i-summarize","(to = [], width = @summary_width, max = width - 1, indent = @summary_indent, &blk)","<p>Puts option summary into <code>to</code> and returns <code>to</code>.\nYields each line if a block is given.\n<p><code>to</code> &mdash; Output destination, …\n",null,1],["summarize","OptionParser::List","Rails/classes/OptionParser/List.html#method-i-summarize","(*args, &block)","<p>Creates the summary table, passing each line to the <code>block</code>\n(without newline). The arguments <code>args</code> are passed …\n",null,1],["summarize","OptionParser::Switch","Rails/classes/OptionParser/Switch.html#method-i-summarize","(sdone = [], ldone = [], width = 1, max = width - 1, indent = \"\")","<p>Produces the summary text. Each line of the summary is yielded to the block\n(without newline).\n<p><code>sdone</code> &mdash; ",null,1],["summary","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-summary","()","<p>Returns a summary of the collected statistics.\n",null,1],["summary=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-summary-3D","(str)","<p>A short summary of this gem’s description.\n",null,1],["sunday","Date","Ruby/classes/Date.html#method-i-sunday","()","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the end\nof this week. Week is assumed to start on a Monday. …\n",null,0],["sunday","Time","Ruby/classes/Time.html#method-i-sunday","()","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the end\nof this week. Week is assumed to start on a Monday. …\n",null,0],["sunday?","Date","Rails/classes/Date.html#method-i-sunday-3F","()","<p>Returns true if the date is Sunday.\n",null,1],["sunday?","Time","Rails/classes/Time.html#method-i-sunday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Sunday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">1990</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">1</span>)       <span class=\"ruby-comment\">#=&gt; 1990-04-01 00:00:00 -0600 ...</span>\n</pre>\n",null,1],["super_each","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-super_each","(rs = nil)","",null,1],["superclass","Class","Rails/classes/Class.html#method-i-superclass","()","<p>Returns the superclass of <em>class</em>, or <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">superclass</span>          <span class=\"ruby-comment\">#=&gt; IO</span>\n<span class=\"ruby-constant\">IO</span>.<span class=\"ruby-identifier\">superclass</span>            <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["superclass","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-superclass","()","<p>Get the superclass of this class.  Attempts to retrieve the superclass\nobject, returns the name if it …\n",null,1],["superclass","RDoc::NormalModule","Rails/classes/RDoc/NormalModule.html#method-i-superclass","()","<p>Modules don’t have one, raises NoMethodError\n",null,1],["superclass=","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-superclass-3D","(superclass)","<p>Set the superclass of this class to <code>superclass</code>\n",null,1],["superclass_delegating_accessor","Class","Ruby/classes/Class.html#method-i-superclass_delegating_accessor","(name, options = {})","",null,0],["superset?","Set","Rails/classes/Set.html#method-i-superset-3F","(set)","<p>Returns true if the set is a superset of the given set.\n",null,1],["supported?","RSS::Maker","Rails/classes/RSS/Maker.html#method-c-supported-3F","(version)","",null,1],["supports_add_column?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_add_column-3F","()","<p>Returns true if SQLite version is ‘3.1.6’ or greater, false otherwise.\n",null,0],["supports_bulk_alter?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_bulk_alter-3F","()","",null,0],["supports_count_distinct?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_count_distinct-3F","()","<p>Does this adapter support using DISTINCT within COUNT? This is\n<code>true</code> for all adapters except sqlite.\n",null,0],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_ddl_transactions-3F","()","<p>Does this adapter support DDL rollbacks in transactions? That is, would\nCREATE TABLE or ALTER TABLE get …\n",null,0],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_ddl_transactions-3F","()","",null,0],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_ddl_transactions-3F","()","<p>Returns true if SQLite version is ‘2.0.0’ or greater, false otherwise.\n",null,0],["supports_explain?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_explain-3F","()","<p>Does this adapter support explain? As of this writing sqlite3, mysql2, and\npostgresql are the only ones …\n",null,0],["supports_explain?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Ruby/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-supports_explain-3F","()","",null,0],["supports_explain?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_explain-3F","()","<p>Returns true.\n",null,0],["supports_explain?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_explain-3F","()","<p>Returns true.\n",null,0],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_index_sort_order-3F","()","<p>Does this adapter support index sort order?\n",null,0],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_index_sort_order-3F","()","<p>Technically MySQL allows to create indexes with the sort order syntax but\nat the moment (5.5) it doesn’t …\n",null,0],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_index_sort_order-3F","()","",null,0],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_index_sort_order-3F","()","",null,0],["supports_insert_with_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_insert_with_returning-3F","()","",null,0],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_migrations-3F","()","<p>Does this adapter support migrations? Backend specific, as the abstract\nadapter always returns <code>false</code> …\n",null,0],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_migrations-3F","()","<p>Returns true, since this connection adapter supports migrations.\n",null,0],["supports_migrations?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_migrations-3F","()","<p>Returns true, since this connection adapter supports migrations.\n",null,0],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_primary_key-3F","()","<p>Can this adapter determine the primary key for tables not attached to an\nActive Record class, such as …\n",null,0],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_primary_key-3F","()","",null,0],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_savepoints-3F","()","<p>Does this adapter support savepoints? PostgreSQL and MySQL do, SQLite &lt;\n3.6.8 does not.\n",null,0],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_savepoints-3F","()","<p>Returns true, since this connection adapter supports savepoints.\n",null,0],["supports_savepoints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_savepoints-3F","()","<p>Returns true, since this connection adapter supports savepoints.\n",null,0],["supports_savepoints?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_savepoints-3F","()","<p>Returns true if SQLite version is ‘3.6.8’ or greater, false otherwise.\n",null,0],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-supports_statement_cache-3F","()","<p>Returns <code>true</code> when the connection adapter supports prepared\nstatement caching, otherwise returns <code>false</code> …\n",null,0],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-supports_statement_cache-3F","()","<p>Returns true, since this connection adapter supports prepared statement\ncaching.\n",null,0],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_statement_cache-3F","()","<p>Returns <code>true</code>, since this connection adapter supports prepared\nstatement caching.\n",null,0],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_statement_cache-3F","()","<p>Returns true, since this connection adapter supports prepared statement\ncaching.\n",null,0],["supports_streaming?","ActionView::Template","Ruby/classes/ActionView/Template.html#method-i-supports_streaming-3F","()","<p>Returns if the underlying handler supports streaming. If so, a streaming\nbuffer <strong>may</strong> be passed when it …\n",null,0],["supports_streaming?","ActionView::Template::Handlers::ERB","Ruby/classes/ActionView/Template/Handlers/ERB.html#method-i-supports_streaming-3F","()","",null,0],["suppress","Kernel","Ruby/classes/Kernel.html#method-i-suppress","(*exception_classes)","<p>Blocks and ignores any exception passed as argument if raised within the\nblock.\n\n<pre>suppress(ZeroDivisionError) ...</pre>\n",null,0],["suppress_messages","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-suppress_messages","()","",null,0],["suspend","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-suspend","()","",null,1],["suspend_all","DEBUGGER__::Context","Rails/classes/DEBUGGER__/Context.html#method-i-suspend_all","()","",null,1],["suspend_context","IRB::Irb","Rails/classes/IRB/Irb.html#method-i-suspend_context","(context)","",null,1],["suspend_input_method","IRB::Irb","Rails/classes/IRB/Irb.html#method-i-suspend_input_method","(input_method)","",null,1],["suspend_name","IRB::Irb","Rails/classes/IRB/Irb.html#method-i-suspend_name","(path = nil, name = nil)","",null,1],["suspend_workspace","IRB::Irb","Rails/classes/IRB/Irb.html#method-i-suspend_workspace","(workspace)","",null,1],["svn_url?","Plugin","Ruby/classes/Plugin.html#method-i-svn_url-3F","()","",null,0],["swap","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-swap","(target, *args, &block)","",null,0],["swapcase","String","Rails/classes/String.html#method-i-swapcase","()","<p>Returns a copy of <em>str</em> with uppercase alphabetic characters\nconverted to lowercase and lowercase characters …\n",null,1],["swapcase","Symbol","Rails/classes/Symbol.html#method-i-swapcase","()","<p>Same as <code>sym.to_s.swapcase.intern</code>.\n",null,1],["swapcase!","String","Rails/classes/String.html#method-i-swapcase-21","()","<p>Equivalent to <code>String#swapcase</code>, but modifies the receiver in\nplace, returning <em>str</em>, or <code>nil</code> if no changes …\n",null,1],["switch","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-switch","(key)","",null,1],["switch","Process::GID","Rails/classes/Process/GID.html#method-c-switch","()","<p>Switch the effective and real group IDs of the current process. If a\n<em>block</em> is given, the group IDs will …\n",null,1],["switch","Process::UID","Rails/classes/Process/UID.html#method-c-switch","()","<p>Switch the effective and real user IDs of the current process. If a\n<em>block</em> is given, the user IDs will …\n",null,1],["switch_name","OptionParser::Switch","Rails/classes/OptionParser/Switch.html#method-i-switch_name","()","<p>Main name of the switch.\n",null,1],["sym","DL::CompositeHandler","Rails/classes/DL/CompositeHandler.html#method-i-sym","(symbol)","",null,1],["sym","DL::Handle","Rails/classes/DL/Handle.html#method-c-sym","(p1)","\n<pre>Document-method: []</pre>\n<p>Get the address as an Integer for the function named <code>name</code>.\n",null,1],["sym","DL::Handle","Rails/classes/DL/Handle.html#method-i-sym","(p1)","\n<pre>Document-method: []</pre>\n<p>Get the address as an Integer for the function named <code>name</code>.\n",null,1],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-symbolize_keys","()","",null,0],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-symbolize_keys","()","",null,0],["symbolize_keys","Hash","Ruby/classes/Hash.html#method-i-symbolize_keys","()","<p>Return a new hash with all keys converted to symbols, as long as they\nrespond to <code>to_sym</code>.\n\n<pre class=\"ruby\">{ <span class=\"ruby-string\">'name'</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'Rob'</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["symbolize_keys!","Hash","Ruby/classes/Hash.html#method-i-symbolize_keys-21","()","<p>Destructively convert all keys to symbols, as long as they respond to\n<code>to_sym</code>. Same as <code>symbolize_keys</code> …\n",null,0],["symbolized_base_class","ActiveRecord::Inheritance::ClassMethods","Ruby/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-symbolized_base_class","()","",null,0],["symbolized_path_parameters","ActionDispatch::Http::Parameters","Ruby/classes/ActionDispatch/Http/Parameters.html#method-i-symbolized_path_parameters","()","<p>The same as <code>path_parameters</code> with explicitly symbolized keys.\n",null,0],["symbolized_sti_name","ActiveRecord::Inheritance::ClassMethods","Ruby/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-symbolized_sti_name","()","",null,0],["symbols","Mime::Mimes","Ruby/classes/Mime/Mimes.html#method-i-symbols","()","",null,0],["symlink","File","Rails/classes/File.html#method-c-symlink","(p1, p2)","<p>Creates a symbolic link called <em>new_name</em> for the existing file\n<em>old_name</em>. Raises a <code>NotImplemented</code> exception …\n",null,1],["symlink","FileUtils","Rails/classes/FileUtils.html#method-c-symlink","(src, dest, options = {})","",null,1],["symlink","Sys","Rails/classes/Sys.html#method-i-symlink","(file_name, dest_file)","<p>Symlink <code>file_name</code> to <code>dest_file</code>.\n",null,1],["symlink?","File","Rails/classes/File.html#method-c-symlink-3F","(p1)","<p>Returns <code>true</code> if the named file is a symbolic link.\n",null,1],["symlink?","File::Stat","Rails/classes/File/Stat.html#method-i-symlink-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a symbolic link,\n<code>false</code> if it isn’t or if the operating system doesn’t support …\n",null,1],["symlink?","FileTest","Rails/classes/FileTest.html#method-i-symlink-3F","(p1)","<p>Returns <code>true</code> if the named file is a symbolic link.\n",null,1],["symlink?","Pathname","Rails/classes/Pathname.html#method-i-symlink-3F","()","<p>See <code>FileTest.symlink?</code>.\n",null,1],["symlink?","Rake::FtpFile","Rails/classes/Rake/FtpFile.html#method-i-symlink-3F","()","",null,1],["symlink_files","Sys","Rails/classes/Sys.html#method-i-symlink_files","(wildcard, dest_dir)","<p>Symlink all files matching <code>wildcard</code> into the directory\n<code>dest_dir</code>.\n",null,1],["symmetric?","Matrix","Rails/classes/Matrix.html#method-i-symmetric-3F","()","<p>Returns <code>true</code> is this is a symmetric matrix. Raises an error if\nmatrix is not square.\n",null,1],["sync","GDBM","Rails/classes/GDBM.html#method-i-sync","()","<p>Unless the <em>gdbm</em> object has been opened with the\n<strong>SYNC</strong> flag, it is not guarenteed that database modification\n…\n",null,1],["sync","IO","Rails/classes/IO.html#method-i-sync","()","<p>Returns the current “sync mode” of <em>ios</em>. When sync mode is true,\nall output is immediately flushed to …\n",null,1],["sync","StringIO","Rails/classes/StringIO.html#method-i-sync","()","<p>Returns <code>true</code> always.\n",null,1],["sync","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-sync","()","<p>Same as IO#sync\n",null,1],["sync","Zlib::Inflate","Rails/classes/Zlib/Inflate.html#method-i-sync","(p1)","<p>Inputs <code>string</code> into the end of input buffer and skips data\nuntil a full flush point can be found.  If …\n",null,1],["sync=","IO","Rails/classes/IO.html#method-i-sync-3D","(p1)","<p>Sets the “sync mode” to <code>true</code> or <code>false</code>. When sync\nmode is true, all output is immediately flushed to …\n",null,1],["sync=","StringIO","Rails/classes/StringIO.html#method-i-sync-3D","(p1)","",null,1],["sync=","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-sync-3D","(p1)","<p>Same as IO.  If flag is <code>true</code>, the associated IO object must\nrespond to the <code>flush</code> method.  While <code>sync</code> ...\n",null,1],["sync_exclusive?","Sync_m","Rails/classes/Sync_m.html#method-i-sync_exclusive-3F","()","",null,1],["sync_exclusive?","Sync_m","Rails/classes/Sync_m.html#method-i-sync_exclusive-3F","()","",null,1],["sync_extend","Sync_m","Rails/classes/Sync_m.html#method-i-sync_extend","()","",null,1],["sync_extend","Sync_m","Rails/classes/Sync_m.html#method-i-sync_extend","()","",null,1],["sync_inspect","Sync_m","Rails/classes/Sync_m.html#method-i-sync_inspect","()","",null,1],["sync_inspect","Sync_m","Rails/classes/Sync_m.html#method-i-sync_inspect","()","",null,1],["sync_keys!","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-sync_keys-21","()","",null,0],["sync_lock","Sync_m","Rails/classes/Sync_m.html#method-i-sync_lock","(m = EX)","",null,1],["sync_lock","Sync_m","Rails/classes/Sync_m.html#method-i-sync_lock","(m = EX)","",null,1],["sync_locked?","Sync_m","Rails/classes/Sync_m.html#method-i-sync_locked-3F","()","<p>accessing\n",null,1],["sync_locked?","Sync_m","Rails/classes/Sync_m.html#method-i-sync_locked-3F","()","<p>accessing\n",null,1],["sync_point?","Zlib::Inflate","Rails/classes/Zlib/Inflate.html#method-i-sync_point-3F","()","<p>Quoted verbatim from original documentation:\n\n<pre>What is this?</pre>\n<p><code>:)</code>\n",null,1],["sync_shared?","Sync_m","Rails/classes/Sync_m.html#method-i-sync_shared-3F","()","",null,1],["sync_shared?","Sync_m","Rails/classes/Sync_m.html#method-i-sync_shared-3F","()","",null,1],["sync_synchronize","Sync_m","Rails/classes/Sync_m.html#method-i-sync_synchronize","(mode = EX)","",null,1],["sync_synchronize","Sync_m","Rails/classes/Sync_m.html#method-i-sync_synchronize","(mode = EX)","",null,1],["sync_try_lock","Sync_m","Rails/classes/Sync_m.html#method-i-sync_try_lock","(mode = EX)","<p>locking methods.\n",null,1],["sync_try_lock","Sync_m","Rails/classes/Sync_m.html#method-i-sync_try_lock","(mode = EX)","<p>locking methods.\n",null,1],["sync_unlock","Sync_m","Rails/classes/Sync_m.html#method-i-sync_unlock","(m = EX)","",null,1],["sync_unlock","Sync_m","Rails/classes/Sync_m.html#method-i-sync_unlock","(m = EX)","",null,1],["synchronize","Module","Ruby/classes/Module.html#method-i-synchronize","(*methods)","<p>Synchronize access around a method, delegating synchronization to a\nparticular mutex. A mutex (either …\n",null,0],["synchronize","MonitorMixin","Rails/classes/MonitorMixin.html#method-i-synchronize","()","",null,1],["synchronize","Mutex","Rails/classes/Mutex.html#method-i-synchronize","()","<p>Obtains a lock, runs the block, and releases the lock when the block\ncompletes.  See the example under …\n",null,1],["syncmode=","GDBM","Rails/classes/GDBM.html#method-i-syncmode-3D","(p1)","<p>Turns the database’s synchronization mode on or off. If the synchronization\nmode is turned on, the database’s …\n",null,1],["synthesize_file_task","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-synthesize_file_task","(task_name)","",null,1],["sysaccept","Socket","Rails/classes/Socket.html#method-i-sysaccept","()","<p>Accepts an incoming connection returning an array containing the (integer)\nfile descriptor for the incoming …\n",null,1],["sysaccept","TCPServer","Rails/classes/TCPServer.html#method-i-sysaccept","()","<p>Returns a file descriptor of a accepted connection.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">TCPServer</span>.<span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;127.0.0.1&quot;</span>, <span class=\"ruby-value\">28561</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">serv</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">fd</span> = <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["sysaccept","UNIXServer","Rails/classes/UNIXServer.html#method-i-sysaccept","()","<p>Accepts a new connection. It returns the new file descriptor which is an\ninteger.\n\n<pre>UNIXServer.open(&quot;/tmp/sock&quot;) ...</pre>\n",null,1],["syscall","Kernel","Rails/classes/Kernel.html#method-i-syscall","(*args)","\n<pre>Calls the operating system function identified by _num_ and\nreturns the result of the function or raises ...</pre>\n",null,1],["sysclose","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-sysclose","()","<p>Shuts down the SSL connection and prepares it for another connection.\n",null,1],["sysconfdir","Etc","Rails/classes/Etc.html#method-c-sysconfdir","()","<p>Returns system configuration directory.\n",null,1],["sysopen","IO","Rails/classes/IO.html#method-c-sysopen","(p1, p2 = v2, p3 = v3)","<p>Opens the given path, returning the underlying file descriptor as a\n<code>Fixnum</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">IO</span>.<span class=\"ruby-identifier\">sysopen</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["sysopen","Pathname","Rails/classes/Pathname.html#method-i-sysopen","(p1 = v1, p2 = v2)","<p>See <code>IO.sysopen</code>.\n",null,1],["sysread","IO","Rails/classes/IO.html#method-i-sysread","(p1, p2 = v2)","<p>Reads <em>maxlen</em> bytes from <em>ios</em> using a low-level read and\nreturns them as a string.  Do not mix with other …\n",null,1],["sysread","IO::readable","Rails/classes/IO/readable.html#method-i-sysread","(*args)","<p>Similar to #read, but raises <code>EOFError</code> at end of string instead\nof returning <code>nil</code>, as well as IO#sysread …\n",null,1],["sysread","Object","Rails/classes/Object.html#method-i-sysread","(io, size)","<p>cgi_runner.rb – CGI launcher.\n<p>Author: IPR – Internet Programming with Ruby – writers Copyright © …\n",null,1],["sysread","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-sysread","(*args)","<p>Reads <code>length</code> bytes from the SSL connection.  If a\npre-allocated <code>buffer</code> is provided the data will be written …\n",null,1],["sysseek","IO","Rails/classes/IO.html#method-i-sysseek","(p1, p2 = v2)","<p>Seeks to a given <em>offset</em> in the stream according to the value of\n<em>whence</em> (see <code>IO#seek</code> for values of <em>whence</em> …\n",null,1],["syssign","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-syssign","(p1)","<p>Computes and returns the DSA signature of <code>string</code>, where\n<code>string</code> is expected to be an already-computed …\n",null,1],["system","Kernel","Rails/classes/Kernel.html#method-i-system","(*args)","<p>Executes <em>command…</em> in a subshell. <em>command…</em> is one of\nfollowing forms.\n\n<pre>commandline                 : ...</pre>\n",null,1],["system","Net::FTP","Rails/classes/Net/FTP.html#method-i-system","()","<p>Returns system information.\n",null,1],["system","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-system","()","<p>This method retrieves the system identifier identifying the document’s DTD\n<p>Method contributed by Henrik …\n",null,1],["system","Rake::AltSystem","Rails/classes/Rake/AltSystem.html#method-i-system","(cmd, *args)","",null,1],["system","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-system","(command, *opts)","<p>CommandProcessor#system(command, *opts)\n\n<pre>  command: String\n  opts:    String\n  return:  SystemCommand\nSame ...</pre>\n",null,1],["system_dir","Rake::Application","Rails/classes/Rake/Application.html#method-i-system_dir","()","<p>The directory path containing the system wide rakefiles.\n",null,1],["system_path=","Shell","Rails/classes/Shell.html#method-i-system_path-3D","(path)","",null,1],["systmpdir","Etc","Rails/classes/Etc.html#method-c-systmpdir","()","<p>Returns system temporary directory.\n",null,1],["sysverify","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-sysverify","(p1, p2)","<p>Verifies whether the signature is valid given the message digest input. It\ndoes so by validating <code>sig</code> …\n",null,1],["syswrite","IO","Rails/classes/IO.html#method-i-syswrite","(p1)","<p>Writes the given string to <em>ios</em> using a low-level write. Returns\nthe number of bytes written. Do not mix …\n",null,1],["syswrite","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-syswrite","(p1)","<p>Writes <code>string</code> to the SSL connection.\n",null,1],["t","AbstractController::Translation","Ruby/classes/AbstractController/Translation.html#method-i-t","(*args)","",null,0],["t","ActionView::Helpers::TranslationHelper","Ruby/classes/ActionView/Helpers/TranslationHelper.html#method-i-t","(key, options = {})","",null,0],["t","Matrix","Rails/classes/Matrix.html#method-i-t","()","",null,1],["table","CSV","Rails/classes/CSV.html#method-c-table","(path, options = Hash.new)","<p>A shortcut for:\n\n<pre>CSV.read( path, { headers:           true,\n                  converters:        :numeric, ...</pre>\n",null,1],["table_alias_for","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-table_alias_for","(table_name)","<p>Truncates a table alias according to the limits of the current adapter.\n",null,0],["table_alias_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-table_alias_length","()","<p>Returns the maximum length of a table alias.\n",null,0],["table_alias_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-table_alias_length","()","<p>Returns the configured supported identifier length supported by PostgreSQL\n",null,0],["table_exists?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-table_exists-3F","(name)","",null,0],["table_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-table_exists-3F","(name)","<p>Returns true if table exists. If the schema is not specified as part of\n<code>name</code> then it will only find tables …\n",null,0],["table_exists?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-table_exists-3F","(name)","",null,0],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaCache","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-table_exists-3F","(name)","<p>A cached lookup for table existence.\n",null,0],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-table_exists-3F","(table_name)","<p>Checks to see if the table <code>table_name</code> exists on the database.\n<p>Example\n\n<pre>table_exists?(:developers)</pre>\n",null,0],["table_exists?","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_exists-3F","()","<p>Indicates whether the table associated with this class exists\n",null,0],["table_name","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_name","()","<p>Guesses the table name (in forced lower-case) based on the name of the\nclass in the inheritance hierarchy …\n",null,0],["table_name","ActiveRecord::SessionStore::SqlBypass","Ruby/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-table_name","","<p>The table name defaults to ‘sessions’.\n",null,0],["table_name","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-table_name","()","",null,0],["table_name=","ActiveRecord::ModelSchema::ClassMethods","Ruby/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_name-3D","(value)","<p>Sets the table name explicitly. Example:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Project</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">table_name</span> = <span class=\"ruby-string\">&quot;project&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["table_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-table_name_length","()","<p>Returns the maximum length of a table name.\n",null,0],["table_rows","ActiveRecord::Fixtures","Ruby/classes/ActiveRecord/Fixtures.html#method-i-table_rows","()","<p>Return a hash of rows to be inserted. The key is the table, the value is a\nlist of rows to insert to …\n",null,0],["table_structure","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-table_structure","(table_name)","",null,0],["tableize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-tableize","(class_name)","<p>Create the name of a table like Rails does for models to table names. This\nmethod uses the <code>pluralize</code> …\n",null,0],["tableize","String","Ruby/classes/String.html#method-i-tableize","()","<p>Creates the name of a table like Rails does for models to table names. This\nmethod uses the <code>pluralize</code> …\n",null,0],["tables","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-tables","(name = nil)","<p>Returns the list of all tables in the schema search path or a specified\nschema.\n",null,0],["tag","ActionView::Helpers::ActiveModelInstanceTag","Ruby/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-tag","(type, options, *)","",null,0],["tag","ActionView::Helpers::TagHelper","Ruby/classes/ActionView/Helpers/TagHelper.html#method-i-tag","(name, options = nil, open = false, escape = true)","<p>Returns an empty HTML tag of type <code>name</code> which by default is\nXHTML compliant. Set <code>open</code> to true to create …\n",null,0],["tag","XMLRPC::XMLWriter::Abstract","Rails/classes/XMLRPC/XMLWriter/Abstract.html#method-i-tag","(name, txt)","",null,1],["tag_end","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-tag_end","(name)","<p>Called when the end tag is reached.  In the case of &lt;tag/&gt;, tag_end\nwill be called immidiately …\n",null,1],["tag_end","RSS::ListenerMixin","Rails/classes/RSS/ListenerMixin.html#method-i-tag_end","(name)","",null,1],["tag_name","RSS::Element","Rails/classes/RSS/Element.html#method-c-tag_name","()","",null,1],["tag_name","RSS::Element","Rails/classes/RSS/Element.html#method-i-tag_name","()","",null,1],["tag_start","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-tag_start","(name, attrs)","<p>Called when a tag is encountered. @p name the tag name @p attrs an array of\narrays of attribute/value …\n",null,1],["tag_start","RSS::ListenerMixin","Rails/classes/RSS/ListenerMixin.html#method-i-tag_start","(name, attributes)","",null,1],["tagged","ActiveSupport::TaggedLogging","Ruby/classes/ActiveSupport/TaggedLogging.html#method-i-tagged","(*tags)","",null,0],["tagurize","Psych","Rails/classes/Psych.html#method-c-tagurize","(thing)","",null,1],["tail!","Rails::Rack::LogTailer","Ruby/classes/Rails/Rack/LogTailer.html#method-i-tail-21","()","",null,0],["taint","Delegator","Rails/classes/Delegator.html#method-i-taint","","<p>Taint both the object returned by __getobj__ and self.\n",null,1],["taint","Object","Rails/classes/Object.html#method-i-taint","()","<p>Marks <em>obj</em> as tainted—if the <code>$SAFE</code> level is set\nappropriately, many method calls which might alter the …\n",null,1],["taint","Pathname","Rails/classes/Pathname.html#method-i-taint","()","",null,1],["tainted?","Object","Rails/classes/Object.html#method-i-tainted-3F","()","<p>Returns <code>true</code> if the object is tainted.\n",null,1],["take","Array","Rails/classes/Array.html#method-i-take","(p1)","<p>Returns first n elements from <em>ary</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">5</span>, <span class=\"ruby-value\">0</span>]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">take</span>(<span class=\"ruby-value\">3</span>)             <span class=\"ruby-comment\">#=&gt; [1, 2, 3]</span>\n</pre>\n",null,1],["take","Enumerable","Rails/classes/Enumerable.html#method-i-take","(p1)","<p>Returns first n elements from <em>enum</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">5</span>, <span class=\"ruby-value\">0</span>]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">take</span>(<span class=\"ruby-value\">3</span>)             <span class=\"ruby-comment\">#=&gt; [1, 2, 3]</span>\n</pre>\n",null,1],["take","Rinda::TupleSpace","Rails/classes/Rinda/TupleSpace.html#method-i-take","(tuple, sec=nil, &block)","<p>Removes <code>tuple</code>\n",null,1],["take","Rinda::TupleSpaceProxy","Rails/classes/Rinda/TupleSpaceProxy.html#method-i-take","(tuple, sec=nil, &block)","<p>Takes <code>tuple</code> from the proxied TupleSpace.  See TupleSpace#take.\n",null,1],["take_while","Array","Rails/classes/Array.html#method-i-take_while","()","<p>Passes elements to the block until the block returns <code>nil</code> or\n<code>false</code>, then stops iterating and returns an …\n",null,1],["take_while","Enumerable","Rails/classes/Enumerable.html#method-i-take_while","()","<p>Passes elements to the block until the block returns <code>nil</code> or\n<code>false</code>, then stops iterating and returns an …\n",null,1],["tan","CMath","Rails/classes/CMath.html#method-c-tan","(z)","<p>returns the tangent of <code>z</code>, where <code>z</code> is given in\nradians\n",null,1],["tan","Math","Rails/classes/Math.html#method-c-tan","(p1)","<p>Returns the tangent of <em>x</em> (expressed in radians).\n",null,1],["tan!","CMath","Rails/classes/CMath.html#method-c-tan-21","(z)","",null,1],["tanh","CMath","Rails/classes/CMath.html#method-c-tanh","(z)","<p>returns the hyperbolic tangent of <code>z</code>, where <code>z</code> is\ngiven in radians\n",null,1],["tanh","Math","Rails/classes/Math.html#method-c-tanh","(p1)","<p>Computes the hyperbolic tangent of <em>x</em> (expressed in radians).\n",null,1],["tanh!","CMath","Rails/classes/CMath.html#method-c-tanh-21","(z)","",null,1],["tap","Object","Rails/classes/Object.html#method-i-tap","()","<p>Yields <code>x</code> to the block, and then returns <code>x</code>. The\nprimary purpose of this method is to “tap into” …\n",null,1],["tar_bz2_file","Rake::PackageTask","Rails/classes/Rake/PackageTask.html#method-i-tar_bz2_file","()","",null,1],["tar_gz_file","Rake::PackageTask","Rails/classes/Rake/PackageTask.html#method-i-tar_gz_file","()","",null,1],["task_defined?","Rake::Task","Rails/classes/Rake/Task.html#method-c-task_defined-3F","(task_name)","<p>TRUE if the task name is already defined.\n",null,1],["tasks","Build","Ruby/classes/Build.html#method-i-tasks","()","",null,0],["tasks","Rake::NameSpace","Rails/classes/Rake/NameSpace.html#method-i-tasks","()","<p>Return the list of tasks defined in this and nested namespaces.\n",null,1],["tasks","Rake::Task","Rails/classes/Rake/Task.html#method-c-tasks","()","<p>List of all defined tasks.\n",null,1],["tasks","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-tasks","()","<p>List of all defined tasks in this application.\n",null,1],["tasks_in_scope","Rake::TaskManager","Rails/classes/Rake/TaskManager.html#method-i-tasks_in_scope","(scope)","<p>List of all the tasks defined in the given scope (and its sub-scopes).\n",null,1],["tcp","Addrinfo","Rails/classes/Addrinfo.html#method-c-tcp","(p1, p2)","<p>returns an addrinfo object for TCP address.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">tcp</span>(<span class=\"ruby-string\">&quot;localhost&quot;</span>, <span class=\"ruby-string\">&quot;smtp&quot;</span>) <span class=\"ruby-comment\">#=&gt; #&lt;Addrinfo: 127.0.0.1:25 ...</span>\n</pre>\n",null,1],["tcp","Socket","Rails/classes/Socket.html#method-c-tcp","(host, port, local_host=nil, local_port=nil)","<p>creates a new socket object connected to host:port using TCP/IP.\n<p>If local_host:local_port is given, the …\n",null,1],["tcp_server_loop","Socket","Rails/classes/Socket.html#method-c-tcp_server_loop","(host=nil, port)","<p>creates a TCP/IP server on <em>port</em> and calls the block for each\nconnection accepted. The block is called …\n",null,1],["tcp_server_sockets","Socket","Rails/classes/Socket.html#method-c-tcp_server_sockets","(host=nil, port)","<p>creates TCP/IP server sockets for <em>host</em> and <em>port</em>.\n<em>host</em> is optional.\n<p>If no block given, it returns an array …\n",null,1],["teardown_fixtures","ActiveRecord::TestFixtures","Ruby/classes/ActiveRecord/TestFixtures.html#method-i-teardown_fixtures","()","",null,0],["tee","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-tee","(file)","",null,1],["telephone_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-telephone_field","(object_name, method, options = {})","<p>Returns a text_field of type “tel”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">telephone_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;phone&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_phone&quot; ...</span>\n</pre>\n",null,0],["telephone_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-telephone_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “tel”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,0],["tell","ARGF","Rails/classes/ARGF.html#method-i-tell","()","<p>Returns the current offset (in bytes) of the current file in\n<code>ARGF</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">pos</span>    <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; &quot;This ...</span>\n</pre>\n",null,1],["tell","Dir","Rails/classes/Dir.html#method-i-tell","()","<p>Returns the current position in <em>dir</em>. See also\n<code>Dir#seek</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testdir&quot;</span>)\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">tell</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">read</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["tell","IO","Rails/classes/IO.html#method-i-tell","()","<p>Returns the current offset (in bytes) of <em>ios</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">f</span> = <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">pos</span>    <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; &quot;This ...</span>\n</pre>\n",null,1],["tell","StringIO","Rails/classes/StringIO.html#method-i-tell","()","<p>Returns the current offset (in bytes) of <strong>strio</strong>.\n",null,1],["tell","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-tell","()","<p>Total number of output bytes output so far.\n",null,1],["tell","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-tell","()","<p>Total number of input bytes read so far.\n",null,1],["telnetmode","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-telnetmode","(mode = nil)","<p>Set telnet command interpretation on (<code>mode</code> == true) or off\n(<code>mode</code> == false), or return the current value …\n",null,1],["telnetmode=","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-telnetmode-3D","(mode)","<p>Turn telnet command interpretation on (true) or off (false).  It should be\non for true telnet sessions, …\n",null,1],["template","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-template","(source, *args, &block)","",null,0],["template_dir_for","RDoc::Options","Rails/classes/RDoc/Options.html#method-i-template_dir_for","(template)","<p>Finds the template dir for <code>template</code>\n",null,1],["template_exists?","ActionView::LookupContext::ViewPaths","Ruby/classes/ActionView/LookupContext/ViewPaths.html#method-i-template_exists-3F","(name, prefixes = [], partial = false, keys = [], options = {})","",null,0],["template_for","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-template_for","(file)","<p>Retrieves a cache template for <code>file</code>, if present, or fills the\ncache.\n",null,1],["template_result","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-template_result","(template, context, template_file)","<p>Creates the result for <code>template</code> with <code>context</code>.  If\nan error is raised a Pathname <code>template_file</code> will indicate …\n",null,1],["templates_path","Rails::Generators","Ruby/classes/Rails/Generators.html#method-c-templates_path","()","",null,0],["terabyte","Numeric","Ruby/classes/Numeric.html#method-i-terabyte","()","",null,0],["terabytes","Numeric","Ruby/classes/Numeric.html#method-i-terabytes","()","",null,0],["terminal_width","Rake::Application","Rails/classes/Rake/Application.html#method-i-terminal_width","()","",null,1],["terminate","GetoptLong","Rails/classes/GetoptLong.html#method-i-terminate","()","<p>Explicitly terminate option processing.\n",null,1],["terminate","OptionParser","Rails/classes/OptionParser.html#method-c-terminate","(arg = nil)","",null,1],["terminate","OptionParser","Rails/classes/OptionParser.html#method-i-terminate","(arg = nil)","<p>Terminates option parsing. Optional parameter <code>arg</code> is a string\npushed back to be the first non-option …\n",null,1],["terminate","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-terminate","()","",null,1],["terminate","StringScanner","Rails/classes/StringScanner.html#method-i-terminate","()","<p>Set the scan pointer to the end of the string and clear matching data.\n",null,1],["terminate","Thread","Rails/classes/Thread.html#method-i-terminate","()","<p>Terminates <em>thr</em> and schedules another thread to be run. If this\nthread is already marked to be killed, …\n",null,1],["terminate_interaction","Gem::MockGemUi","Rails/classes/Gem/MockGemUi.html#method-i-terminate_interaction","(status=0)","",null,1],["terminate_interaction","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-terminate_interaction","(status = 0)","<p>Terminate the application with exit code <code>status</code>, running any\nexit handlers that might have been defined. …\n",null,1],["terminate_interaction","Gem::UserInteraction","Rails/classes/Gem/UserInteraction.html#method-i-terminate_interaction","(*args)","",null,1],["terminate_job","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-terminate_job","(command)","<p>terminate a job\n",null,1],["terminated?","Gem::MockGemUi","Rails/classes/Gem/MockGemUi.html#method-i-terminated-3F","()","",null,1],["terminated?","GetoptLong","Rails/classes/GetoptLong.html#method-i-terminated-3F","()","<p>Returns true if option processing has terminated, false otherwise.\n",null,1],["termsig","Process::Status","Rails/classes/Process/Status.html#method-i-termsig","()","<p>Returns the number of the signal that caused <em>stat</em> to terminate (or\n<code>nil</code> if self was not terminated by …\n",null,1],["test","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-test","()","",null,0],["test","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-test","()","",null,0],["test","Kernel","Rails/classes/Kernel.html#method-i-test","(*args)","\n<pre>Uses the integer &lt;i&gt;aCmd&lt;/i&gt; to perform various tests on\n&lt;i&gt;file1&lt;/i&gt; (first table below) or on &lt;i&gt;file1&lt;/i&gt; ...</pre>\n",null,1],["test","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-test","(command, file1, file2=nil)","",null,1],["test_dummy_clean","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-test_dummy_clean","()","",null,0],["test_dummy_config","Rails::PluginBuilder","Ruby/classes/Rails/PluginBuilder.html#method-i-test_dummy_config","()","",null,0],["test_errors_aref","ActiveModel::Lint::Tests","Ruby/classes/ActiveModel/Lint/Tests.html#method-i-test_errors_aref","()","<p>Errors Testing\n<p>Returns an object that has :[] and :full_messages defined on it. See below\nfor more details. …\n",null,0],["test_errors_full_messages","ActiveModel::Lint::Tests","Ruby/classes/ActiveModel/Lint/Tests.html#method-i-test_errors_full_messages","()","<p>Returns an Array of all error messages for the object. Each message should\ncontain information about …\n",null,0],["test_file","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-test_file","()","<p>Singular accessor for #test_files\n",null,1],["test_file=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-test_file-3D","(file)","<p>Singular accessor for #test_files\n",null,1],["test_files","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-test_files","()","<p>Test files included in this gem.  You cannot append to this accessor, you\nmust assign to it.\n",null,1],["test_files=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-test_files-3D","(files)","<p>Set test_files to <code>files</code>, ensuring it is an array.\n",null,1],["test_model_naming","ActiveModel::Lint::Tests","Ruby/classes/ActiveModel/Lint/Tests.html#method-i-test_model_naming","()","<p>Naming\n<p>Model.model_name must return a string with some convenience methods:\n:human, :singular, and :plural. …\n",null,0],["test_persisted?","ActiveModel::Lint::Tests","Ruby/classes/ActiveModel/Lint/Tests.html#method-i-test_persisted-3F","()","<p>Responds to <code>persisted?</code>\n<p>Returns a boolean that specifies whether the object has been persisted yet.\nThis …\n",null,0],["test_to_key","ActiveModel::Lint::Tests","Ruby/classes/ActiveModel/Lint/Tests.html#method-i-test_to_key","()","<p>Responds to <code>to_key</code>\n<p>Returns an Enumerable of all (primary) key attributes or nil if\nmodel.persisted? is …\n",null,0],["test_to_param","ActiveModel::Lint::Tests","Ruby/classes/ActiveModel/Lint/Tests.html#method-i-test_to_param","()","<p>Responds to <code>to_param</code>\n<p>Returns a string representing the object’s key suitable for use in URLs or\nnil if …\n",null,0],["test_to_partial_path","ActiveModel::Lint::Tests","Ruby/classes/ActiveModel/Lint/Tests.html#method-i-test_to_partial_path","()","<p>Responds to <code>to_partial_path</code>\n<p>Returns a string giving a relative path.  This is used for looking up\npartials. …\n",null,0],["test_valid?","ActiveModel::Lint::Tests","Ruby/classes/ActiveModel/Lint/Tests.html#method-i-test_valid-3F","()","<p>Responds to <code>valid?</code>\n<p>Returns a boolean that specifies whether the object is in a valid or\ninvalid state. …\n",null,0],["text","PrettyPrint","Rails/classes/PrettyPrint.html#method-i-text","(obj, width=obj.length)","<p>This adds <code>obj</code> as a text of <code>width</code> columns in\nwidth.\n<p>If <code>width</code> is not specified, obj.length is used.\n",null,1],["text","PrettyPrint::SingleLine","Rails/classes/PrettyPrint/SingleLine.html#method-i-text","(obj, width=nil)","",null,1],["text","RDoc::Markup::Raw","Rails/classes/RDoc/Markup/Raw.html#method-i-text","()","<p>The raw text\n",null,1],["text","RDoc::Markup::Verbatim","Rails/classes/RDoc/Markup/Verbatim.html#method-i-text","()","<p>The text of the section\n",null,1],["text","REXML::Element","Rails/classes/REXML/Element.html#method-i-text","( path = nil )","<p>A convenience method which returns the String value of the <em>first</em>\nchild text element, if one exists, and …\n",null,1],["text","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-text","( )","",null,1],["text","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-text","(text)","<p>Called when text is encountered in the document @p text the text content.\n",null,1],["text","RSS::ListenerMixin","Rails/classes/RSS/ListenerMixin.html#method-i-text","(data)","",null,1],["text","XMLRPC::XMLWriter::Simple","Rails/classes/XMLRPC/XMLWriter/Simple.html#method-i-text","(txt)","",null,1],["text","XMLRPC::XMLWriter::XMLParser","Rails/classes/XMLRPC/XMLWriter/XMLParser.html#method-i-text","(txt)","",null,1],["text=","REXML::Element","Rails/classes/REXML/Element.html#method-i-text-3D","( text )","<p>Sets the first Text child of this object.  See text() for a discussion\nabout Text children.\n<p>If a Text …\n",null,1],["text=","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-text-3D","( foo )","",null,1],["text?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-text-3F","()","<p>Content: [ String raw_text, String unnormalized_text ]\n",null,1],["text_area","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-text_area","(object_name, method, options = {})","<p>Returns a textarea opening and closing tag set tailored for accessing a\nspecified attribute (identified …\n",null,0],["text_area_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-text_area_tag","(name, content = nil, options = {})","<p>Creates a text input area; use a textarea for longer text inputs such as\nblog posts or descriptions. …\n",null,0],["text_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-text_field","(object_name, method, options = {})","<p>Returns an input tag of the “text” type tailored for accessing a specified\nattribute (identified …\n",null,0],["text_field","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-text_field","(name = \"\", value = nil, size = 40, maxlength = nil)","<p>Generate a text field Input element, as a String.\n<p><code>name</code> is the name of the input field.  <code>value</code> is\nits initial ...\n",null,1],["text_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-text_field_tag","(name, value = nil, options = {})","<p>Creates a standard text field; use these text fields to input smaller\nchunks of text like a username …\n",null,0],["textarea","CGI::HtmlExtension","Rails/classes/CGI/HtmlExtension.html#method-i-textarea","(name = \"\", cols = 70, rows = 10)","<p>Generate a TextArea element, as a String.\n<p><code>name</code> is the name of the textarea.  <code>cols</code> is the\nnumber of columns ...\n",null,1],["textinput","RSS::Rss","Rails/classes/RSS/Rss.html#method-i-textinput","()","",null,1],["texts","REXML::Element","Rails/classes/REXML/Element.html#method-i-texts","()","<p>Get an array of all Text children. IMMUTABLE\n",null,1],["tgz_file","Rake::PackageTask","Rails/classes/Rake/PackageTask.html#method-i-tgz_file","()","",null,1],["third","Array","Ruby/classes/Array.html#method-i-third","()","<p>Equal to <code>self[2]</code>.\n",null,0],["thnum","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-thnum","()","",null,1],["thread","DRb","Rails/classes/DRb.html#method-c-thread","()","<p>Get the thread of the primary server.\n<p>This returns nil if there is no primary server.  See #primary_server …\n",null,1],["thread","IRB::JobManager","Rails/classes/IRB/JobManager.html#method-i-thread","(key)","",null,1],["thread","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-thread","(algorithm, search_keys, charset)","<p>As for #search(), but returns message sequence numbers in threaded format,\nas a Net::IMAP::ThreadMember …\n",null,1],["thread_list","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-thread_list","(num)","",null,1],["thread_list_all","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-thread_list_all","()","",null,1],["threadsafe!","Rails::Application::Configuration","Ruby/classes/Rails/Application/Configuration.html#method-i-threadsafe-21","()","<p>Enable threaded mode. Allows concurrent requests to controller actions and\nmultiple database connections. …\n",null,0],["throw","Kernel","Rails/classes/Kernel.html#method-i-throw","(p1, p2 = v2)","<p>Transfers control to the end of the active <code>catch</code> block waiting\nfor <em>tag</em>. Raises <code>ArgumentError</code> if there …\n",null,1],["thursday?","Date","Rails/classes/Date.html#method-i-thursday-3F","()","<p>Returns true if the date is Thursday.\n",null,1],["thursday?","Time","Rails/classes/Time.html#method-i-thursday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Thursday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">1995</span>, <span class=\"ruby-value\">12</span>, <span class=\"ruby-value\">21</span>)     <span class=\"ruby-comment\">#=&gt; 1995-12-21 00:00:00 -0600 ...</span>\n</pre>\n",null,1],["tidy_bytes","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-tidy_bytes","(force = false)","<p>Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent\nresulting in a valid UTF-8 string. …\n",null,0],["tidy_bytes","ActiveSupport::Multibyte::Unicode","Ruby/classes/ActiveSupport/Multibyte/Unicode.html#method-i-tidy_bytes","(string, force = false)","<p>Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent\nresulting in a valid UTF-8 string. …\n",null,0],["time","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-time","()","<p>Returns a Time or DateTime instance that represents the time in\n<code>time_zone</code>.\n",null,0],["time","Gem","Rails/classes/Gem.html#method-c-time","(msg, width = 0, display = Gem.configuration.verbose)","<p>Prints the amount of time the supplied block takes to run using the debug\nUI output.\n",null,1],["time","OpenSSL::SSL::Session","Rails/classes/OpenSSL/SSL/Session.html#method-i-time","()","<p>Gets start time of the session.\n",null,1],["time","OpenSSL::X509::Revoked","Rails/classes/OpenSSL/X509/Revoked.html#method-i-time","()","",null,1],["time","Rake::FtpFile","Rails/classes/Rake/FtpFile.html#method-c-time","()","",null,1],["time2wtime","Win32::Registry","Rails/classes/Win32/Registry.html#method-c-time2wtime","(time)","<p>Convert Time object or Integer object into 64-bit FILETIME.\n",null,1],["time=","OpenSSL::SSL::Session","Rails/classes/OpenSSL/SSL/Session.html#method-i-time-3D","(p1)","<p>Sets start time of the session. Time resolution is in seconds.\n",null,1],["time=","OpenSSL::X509::Revoked","Rails/classes/OpenSSL/X509/Revoked.html#method-i-time-3D","(p1)","",null,1],["time=","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-time-3D","(p1)","",null,1],["time_ago_in_words","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-time_ago_in_words","(from_time, include_seconds = false, options = {})","<p>Like <code>distance_of_time_in_words</code>, but where <code>to_time</code>\nis fixed to <code>Time.now</code>.\n<p>Examples\n\n<pre>time_ago_in_words(3.minutes.from_now) ...</pre>\n",null,0],["time_delta_string","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-time_delta_string","(seconds)","<p>Return a string describing the amount of time in the given number of\nseconds in terms a human can understand …\n",null,1],["time_select","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-time_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for hour, minute and optionally second)\npre-selected for accessing …\n",null,0],["time_select","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-time_select","(method, options = {}, html_options = {})","",null,0],["time_tag","ActionView::Helpers::DateHelper","Ruby/classes/ActionView/Helpers/DateHelper.html#method-i-time_tag","(date_or_time, *args)","<p>Returns an html time tag for the given date or time.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">time_tag</span> <span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">today</span>  <span class=\"ruby-comment\"># =&gt;</span>\n  <span class=\"ruby-operator\">&lt;</span><span class=\"ruby-identifier\">time</span> <span class=\"ruby-identifier\">datetime</span>=<span class=\"ruby-string\">&quot;2010-11-04&quot;</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-constant\">November</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["time_with_datetime_fallback","Time","Ruby/classes/Time.html#method-c-time_with_datetime_fallback","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0, usec=0)","<p>Returns a new Time if requested year can be accommodated by Ruby’s Time\nclass (i.e., if year is within …\n",null,0],["time_zone_options_for_select","ActionView::Helpers::FormOptionsHelper","Ruby/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_options_for_select","(selected = nil, priority_zones = nil, model = ::ActiveSupport::TimeZone)","<p>Returns a string of option tags for pretty much any time zone in the world.\nSupply a ActiveSupport::TimeZone …\n",null,0],["time_zone_select","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-time_zone_select","(method, priority_zones = nil, options = {}, html_options = {})","",null,0],["time_zone_select","ActionView::Helpers::FormOptionsHelper","Ruby/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_select","(object, method, priority_zones = nil, options = {}, html_options = {})","<p>Return select and option tags for the given object and method, using\n#time_zone_options_for_select to …\n",null,0],["timeout","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-timeout","()","<p>Gets the number of seconds after which requests to the REST API should time\nout.\n",null,0],["timeout","Object","Rails/classes/Object.html#method-i-timeout","(n, e = nil, &block)","<p>Identical to:\n\n<pre>Timeout::timeout(n, e, &amp;block).</pre>\n<p>This method is deprecated and provided only for backwards …\n",null,1],["timeout","OpenSSL::SSL::Session","Rails/classes/OpenSSL/SSL/Session.html#method-i-timeout","()","<p>Gets how long until the session expires in seconds.\n",null,1],["timeout","Timeout","Rails/classes/Timeout.html#method-c-timeout","(sec, klass = nil)","<p>Perform an operation in a block, raising an error if it takes longer than\n<code>sec</code> seconds to complete.\n<p><code>sec</code> ... &mdash; ",null,1],["timeout","WEBrick::Utils","Rails/classes/WEBrick/Utils.html#method-c-timeout","(seconds, exception=Timeout::Error)","<p>Executes the passed block and raises <code>exception</code> if execution\ntakes more than <code>seconds</code>.\n<p>If <code>seconds</code> is zero …\n",null,1],["timeout=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-timeout-3D","(timeout)","<p>Sets the number of seconds after which requests to the REST API should time\nout.\n",null,0],["timeout=","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-timeout-3D","(timeout)","<p>Sets the number of seconds after which HTTP requests to the remote service\nshould time out.\n",null,0],["timeout=","Curses","Rails/classes/Curses.html#method-c-timeout-3D","(p1)","<p>Sets block and non-blocking reads for the window.\n<p>If delay is negative, blocking read is used (i.e., waits …\n",null,1],["timeout=","Curses::Window","Rails/classes/Curses/Window.html#method-i-timeout-3D","(p1)","<p>Sets block and non-blocking reads for the window.\n<p>If delay is negative, blocking read is used (i.e., waits …\n",null,1],["timeout=","OpenSSL::SSL::Session","Rails/classes/OpenSSL/SSL/Session.html#method-i-timeout-3D","(p1)","<p>Sets how long until the session expires in seconds.\n",null,1],["timeout=","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-timeout-3D","(new_timeout)","",null,1],["times","Integer","Rails/classes/Integer.html#method-i-times","()","<p>Iterates block <em>int</em> times, passing in values from zero to\n<em>int</em> - 1.\n<p>If no block is given, an enumerator …\n",null,1],["times","Process","Rails/classes/Process.html#method-c-times","()","<p>Returns a <code>Tms</code> structure (see <code>Struct::Tms</code>) that\ncontains user and system CPU times for this process, and …\n",null,1],["timestamp","Rake::FileCreationTask","Rails/classes/Rake/FileCreationTask.html#method-i-timestamp","()","<p>Time stamp for file creation task.  This time stamp is earlier than any\nother time stamp.\n",null,1],["timestamp","Rake::FileTask","Rails/classes/Rake/FileTask.html#method-i-timestamp","()","<p>Time stamp for file task.\n",null,1],["timestamp","Rake::Task","Rails/classes/Rake/Task.html#method-i-timestamp","()","<p>Timestamp for this task.  Basic tasks return the current time for their\ntime stamp.  Other tasks can …\n",null,1],["timestamp","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-timestamp","()","<p>returns the timestamp as a time object.\n<p><em>ancillarydata</em> should be one of following type:\n<p>SOL_SOCKET/SCM_TIMESTAMP …\n",null,1],["timestamped_migrations","ActiveRecord::Base","Ruby/classes/ActiveRecord/Base.html#method-c-timestamped_migrations","","<p>Specify whether or not to use timestamps for migration versions\n",null,0],["timestamps","ActiveRecord::ConnectionAdapters::Table","Ruby/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-timestamps","()","<p>Adds timestamps (<code>created_at</code> and <code>updated_at</code>)\ncolumns to the table. See SchemaStatements#add_timestamps …\n",null,0],["timestamps","ActiveRecord::ConnectionAdapters::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-timestamps","(*args)","<p>Appends <code>:datetime</code> columns <code>:created_at</code> and\n<code>:updated_at</code> to the table.\n",null,0],["titlecase","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-titlecase","()","",null,0],["titlecase","String","Ruby/classes/String.html#method-i-titlecase","()","",null,0],["titleize","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-titleize","(word)","<p>Capitalizes all the words and replaces some characters in the string to\ncreate a nicer looking title. …\n",null,0],["titleize","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-titleize","()","<p>Capitalizes the first letter of every word, when possible.\n<p>Example:\n\n<pre>&quot;ÉL QUE SE ENTERÓ&quot;.mb_chars.titleize ...</pre>\n",null,0],["titleize","String","Ruby/classes/String.html#method-i-titleize","()","<p>Capitalizes all the words and replaces some characters in the string to\ncreate a nicer looking title. …\n",null,0],["tls?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-tls-3F","()","<p>true if this object uses SMTP/TLS (SMTPS).\n",null,1],["tls?","Net::SMTP","Rails/classes/Net/SMTP.html#method-i-tls-3F","()","<p>true if this object uses SMTP/TLS (SMTPS).\n",null,1],["tmp","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-tmp","()","",null,0],["tmpdir","Dir","Rails/classes/Dir.html#method-c-tmpdir","()","<p>Returns the operating system’s temporary file path.\n",null,1],["to","Array","Ruby/classes/Array.html#method-i-to","(position)","<p>Returns the beginning of the array up to <code>position</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">to</span>(<span class=\"ruby-value\">0</span>)  <span class=\"ruby-comment\"># =&gt; %w( a )</span>\n<span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">to</span>(<span class=\"ruby-value\">2</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["to","String","Ruby/classes/String.html#method-i-to","(position)","<p>Returns the beginning of the string up to the <code>position</code>\ntreating the string as an array (where 0 is the …\n",null,0],["to=","URI::MailTo","Rails/classes/URI/MailTo.html#method-i-to-3D","(v)","<p>setter for to <code>v</code>\n",null,1],["to_a","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-to_a","()","",null,0],["to_a","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-to_a","()","<p>Returns an array of error messages, with the attribute name included\n\n<pre>p.errors.add(:name, &quot;can't be blank&quot;) ...</pre>\n",null,0],["to_a","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-to_a","()","",null,0],["to_a","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-to_a","()","",null,0],["to_a","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-to_a","()","",null,0],["to_a","Rails::Paths::Path","Ruby/classes/Rails/Paths/Path.html#method-i-to_a","()","",null,0],["to_a","ARGF","Rails/classes/ARGF.html#method-i-to_a","(*args)","<p>Reads <code>ARGF</code>‘s current file in its entirety, returning an\n<code>Array</code> of its lines, one line per element. Lines …\n",null,1],["to_a","Array","Rails/classes/Array.html#method-i-to_a","()","<p>Returns <code>self</code>. If called on a subclass of Array, converts the\nreceiver to an Array object.\n",null,1],["to_a","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-i-to_a","()","<p>Returns a new 6-element array, consisting of the label, user CPU time,\nsystem CPU time, children’s user …\n",null,1],["to_a","CSV::Table","Rails/classes/CSV/Table.html#method-i-to_a","()","<p>Returns the table as an Array of Arrays.  Headers will be the first row,\nthen all of the field rows will …\n",null,1],["to_a","DBM","Rails/classes/DBM.html#method-i-to_a","()","<p>Converts the contents of the database to an array of [key, value] arrays,\nand returns it.\n",null,1],["to_a","ENV","Rails/classes/ENV.html#method-c-to_a","()","<p>Converts the environment variables into an array of names and value arrays.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ENV</span>.<span class=\"ruby-identifier\">to_a</span> <span class=\"ruby-comment\"># =&gt; [[&quot;TERM&quot; =&gt; ...</span>\n</pre>\n",null,1],["to_a","Enumerable","Rails/classes/Enumerable.html#method-i-to_a","(*args)","<p>Returns an array containing the items in <em>enum</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">7</span>).<span class=\"ruby-identifier\">to_a</span>                       <span class=\"ruby-comment\">#=&gt; [1, 2, 3, 4, 5, 6, ...</span>\n</pre>\n",null,1],["to_a","GDBM","Rails/classes/GDBM.html#method-i-to_a","()","<p>Returns an array of all key-value pairs contained in the database.\n",null,1],["to_a","Gem::Platform","Rails/classes/Gem/Platform.html#method-i-to_a","()","",null,1],["to_a","Hash","Rails/classes/Hash.html#method-i-to_a","()","<p>Converts <em>hsh</em> to a nested array of <code>[</code> <em>key,\nvalue</em> <code>]</code> arrays.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;c&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">300</span>, <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;d&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">400</span>, <span class=\"ruby-string\">&quot;c&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["to_a","MatchData","Rails/classes/MatchData.html#method-i-to_a","()","<p>Returns the array of matches.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">m</span> = <span class=\"ruby-regexp\">/(.)(.)(\\d+)(\\d)/</span>.<span class=\"ruby-identifier\">match</span>(<span class=\"ruby-string\">&quot;THX1138.&quot;</span>)\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">to_a</span>   <span class=\"ruby-comment\">#=&gt; [&quot;HX1138&quot;, &quot;H&quot;, &quot;X&quot;, ...</span>\n</pre>\n",null,1],["to_a","Matrix","Rails/classes/Matrix.html#method-i-to_a","()","<p>Returns an array of arrays that describe the rows of the matrix.\n",null,1],["to_a","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-i-to_a","()","",null,1],["to_a","Matrix::LUPDecomposition","Rails/classes/Matrix/LUPDecomposition.html#method-i-to_a","()","",null,1],["to_a","NilClass","Rails/classes/NilClass.html#method-i-to_a","()","<p>Always returns an empty array.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">to_a</span>   <span class=\"ruby-comment\">#=&gt; []</span>\n</pre>\n",null,1],["to_a","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-i-to_a","()","",null,1],["to_a","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-i-to_a","()","",null,1],["to_a","OptionParser","Rails/classes/OptionParser.html#method-i-to_a","()","<p>Returns option summary list.\n",null,1],["to_a","REXML::Attributes","Rails/classes/REXML/Attributes.html#method-i-to_a","()","",null,1],["to_a","REXML::Elements","Rails/classes/REXML/Elements.html#method-i-to_a","( xpath=nil )","<p>Returns an Array of Element children.  An XPath may be supplied to filter\nthe children.  Only Element …\n",null,1],["to_a","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-to_a","()","",null,1],["to_a","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-to_a","()","<p>Return the internal array object.\n",null,1],["to_a","Rinda::RingFinger","Rails/classes/Rinda/RingFinger.html#method-c-to_a","()","<p>Contains all discovered TupleSpaces except for the primary.\n",null,1],["to_a","Rinda::RingFinger","Rails/classes/Rinda/RingFinger.html#method-i-to_a","()","<p>Contains all discovered TupleSpaces except for the primary.\n",null,1],["to_a","RubyVM::InstructionSequence","Rails/classes/RubyVM/InstructionSequence.html#method-i-to_a","()","",null,1],["to_a","SDBM","Rails/classes/SDBM.html#method-i-to_a","()","",null,1],["to_a","Set","Rails/classes/Set.html#method-i-to_a","()","<p>Converts the set to an array.  The order of elements is uncertain.\n",null,1],["to_a","Shell::Filter","Rails/classes/Shell/Filter.html#method-i-to_a","()","",null,1],["to_a","Struct","Rails/classes/Struct.html#method-i-to_a","()","<p>Returns the values for this instance as an array.\n\n<pre>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</pre>\n",null,1],["to_a","Time","Rails/classes/Time.html#method-i-to_a","()","<p>Returns a ten-element <em>array</em> of values for <em>time</em>: {<code>[\nsec, min, hour, day, month, year, wday, yday, isdst,</code> …\n",null,1],["to_a","Vector","Rails/classes/Vector.html#method-i-to_a","()","<p>Returns the elements of the vector in an array.\n",null,1],["to_a","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-to_a","()","",null,1],["to_a","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-to_a","()","<p>Converts the contents of the database to an array of [key, value] arrays,\nand returns it.\n",null,1],["to_app","Rails::Application","Ruby/classes/Rails/Application.html#method-i-to_app","()","",null,0],["to_ary","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-to_ary","()","",null,0],["to_ary","Array","Rails/classes/Array.html#method-i-to_ary","()","<p>Returns <code>self</code>.\n",null,1],["to_ary","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-i-to_ary","()","<p>Returns [eigenvector_matrix, eigenvalue_matrix, eigenvector_matrix_inv]\n",null,1],["to_ary","Matrix::LUPDecomposition","Rails/classes/Matrix/LUPDecomposition.html#method-i-to_ary","()","<p>Returns <code>L</code>, <code>U</code>, <code>P</code> in an array\n",null,1],["to_ary","Rake::FileList","Rails/classes/Rake/FileList.html#method-i-to_ary","()","<p>Return the internal array object.\n",null,1],["to_ary","WEBrick::HTTPUtils::FormData","Rails/classes/WEBrick/HTTPUtils/FormData.html#method-i-to_ary","()","",null,1],["to_atom","RSS::RootElementMixin","Rails/classes/RSS/RootElementMixin.html#method-i-to_atom","(type, &block)","",null,1],["to_bn","Integer","Rails/classes/Integer.html#method-i-to_bn","()","",null,1],["to_bn","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-to_bn","()","",null,1],["to_bn","OpenSSL::PKey::EC::Point","Rails/classes/OpenSSL/PKey/EC/Point.html#method-i-to_bn","()","<p>See the OpenSSL documentation for EC_POINT_point2bn()\n",null,1],["to_boolean_select_tag","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-to_boolean_select_tag","(options = {})","",null,0],["to_c","NilClass","Rails/classes/NilClass.html#method-i-to_c","()","<p>Returns zero as a complex.\n",null,1],["to_c","Numeric","Rails/classes/Numeric.html#method-i-to_c","()","<p>Returns the value as a complex.\n",null,1],["to_c","String","Rails/classes/String.html#method-i-to_c","()","<p>Returns a complex which denotes the string form.  The parser ignores\nleading whitespaces and trailing …\n",null,1],["to_check_box_tag","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-to_check_box_tag","(options = {}, checked_value = \"1\", unchecked_value = \"0\")","",null,0],["to_class_name","RSS::Utils","Rails/classes/RSS/Utils.html#method-i-to_class_name","(name)","<p>Convert a name_with_underscores to CamelCase.\n",null,1],["to_cleanup","ActionDispatch::Reloader","Ruby/classes/ActionDispatch/Reloader.html#method-c-to_cleanup","(*args, &block)","<p>Add a cleanup callback. Cleanup callbacks are run after each request is\ncomplete (after #close is called …\n",null,0],["to_content_tag","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-to_content_tag","(tag_name, options = {})","",null,0],["to_csv","Array","Rails/classes/Array.html#method-i-to_csv","(options = Hash.new)","<p>Equivalent to <code>CSV::generate_line(self, options)</code>.\n",null,1],["to_csv","CSV::Row","Rails/classes/CSV/Row.html#method-i-to_csv","(options = Hash.new)","<p>Returns the row as a CSV String.  Headers are not used.  Equivalent to:\n\n<pre>csv_row.fields.to_csv( options ...</pre>\n",null,1],["to_csv","CSV::Table","Rails/classes/CSV/Table.html#method-i-to_csv","(options = Hash.new)","<p>Returns the table as a complete CSV String.  Headers will be listed first,\nthen all of the field rows. …\n",null,1],["to_d","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_d","()","",null,0],["to_d","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_d","()","<p>Returns self.\n",null,1],["to_d","Float","Rails/classes/Float.html#method-i-to_d","(precision=nil)","<p>Convert <code>flt</code> to a BigDecimal and return it.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'bigdecimal'</span>\n<span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'bigdecimal/util'</span>\n\n<span class=\"ruby-value\">0.5</span>.<span class=\"ruby-identifier\">to_d</span>\n<span class=\"ruby-comment\"># ...</span>\n</pre>\n",null,1],["to_d","Integer","Rails/classes/Integer.html#method-i-to_d","()","<p>Convert <code>int</code> to a BigDecimal and return it.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'bigdecimal'</span>\n<span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'bigdecimal/util'</span>\n\n<span class=\"ruby-value\">42</span>.<span class=\"ruby-identifier\">to_d</span>\n<span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["to_d","Rational","Rails/classes/Rational.html#method-i-to_d","(precision=0)","<p>Converts a Rational to a BigDecimal. Takes an optional parameter\n<code>sig</code> to limit the amount of significant …\n",null,1],["to_d","String","Rails/classes/String.html#method-i-to_d","()","<p>Convert <code>string</code> to a BigDecimal and return it.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'bigdecimal'</span>\n<span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'bigdecimal/util'</span>\n\n<span class=\"ruby-string\">&quot;0.5&quot;</span>.<span class=\"ruby-identifier\">to_d</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["to_date","Date","Ruby/classes/Date.html#method-i-to_date","()","<p>A method to keep Time, Date and DateTime instances interchangeable on\nconversions. In this case, it simply …\n",null,0],["to_date","DateTime","Ruby/classes/DateTime.html#method-i-to_date","()","<p>Converts self to a Ruby Date object; time portion is discarded.\n",null,0],["to_date","Mysql::Time","Ruby/classes/Mysql/Time.html#method-i-to_date","()","<p>This monkey patch is for test_additional_columns_from_join_table\n",null,0],["to_date","String","Ruby/classes/String.html#method-i-to_date","()","<p>Converts a string to a Date value.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;1-1-2012&quot;</span>.<span class=\"ruby-identifier\">to_date</span>   <span class=\"ruby-comment\">#=&gt; Sun, 01 Jan 2012</span>\n<span class=\"ruby-string\">&quot;01/01/2012&quot;</span>.<span class=\"ruby-identifier\">to_date</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["to_date","Time","Ruby/classes/Time.html#method-i-to_date","()","<p>Converts a Time object to a Date, dropping hour, minute, and second\nprecision.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">my_time</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>  <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,0],["to_date","Date","Rails/classes/Date.html#method-i-to_date","()","<p>Returns self;\n",null,1],["to_date","DateTime","Rails/classes/DateTime.html#method-i-to_date","()","<p>Returns a Date object which denotes self.\n",null,1],["to_date","Time","Rails/classes/Time.html#method-i-to_date","()","<p>Returns a Date object which denotes self.\n",null,1],["to_date","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-to_date","()","",null,1],["to_date_select_tag","ActionView::Helpers::DateHelperInstanceTag","Ruby/classes/ActionView/Helpers/DateHelperInstanceTag.html#method-i-to_date_select_tag","(options = {}, html_options = {})","",null,0],["to_datetime","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-to_datetime","()","",null,0],["to_datetime","Date","Ruby/classes/Date.html#method-i-to_datetime","()","<p>Converts a Date instance to a DateTime, where the time is set to the\nbeginning of the day and UTC offset …\n",null,0],["to_datetime","DateTime","Ruby/classes/DateTime.html#method-i-to_datetime","()","<p>To be able to keep Times, Dates and DateTimes interchangeable on\nconversions.\n",null,0],["to_datetime","String","Ruby/classes/String.html#method-i-to_datetime","()","<p>Converts a string to a DateTime value.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;1-1-2012&quot;</span>.<span class=\"ruby-identifier\">to_datetime</span>            <span class=\"ruby-comment\">#=&gt; Sun, 01 Jan 2012 00:00:00 ...</span>\n</pre>\n",null,0],["to_datetime","Time","Ruby/classes/Time.html#method-i-to_datetime","()","<p>Converts a Time instance to a Ruby DateTime instance, preserving UTC\noffset.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">my_time</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>    <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,0],["to_datetime","Date","Rails/classes/Date.html#method-i-to_datetime","()","<p>Returns a DateTime object which denotes self.\n",null,1],["to_datetime","DateTime","Rails/classes/DateTime.html#method-i-to_datetime","()","<p>Returns self.\n",null,1],["to_datetime","Time","Rails/classes/Time.html#method-i-to_datetime","()","<p>Returns a DateTime object which denotes self.\n",null,1],["to_datetime_select_tag","ActionView::Helpers::DateHelperInstanceTag","Ruby/classes/ActionView/Helpers/DateHelperInstanceTag.html#method-i-to_datetime_select_tag","(options = {}, html_options = {})","",null,0],["to_default_s","Array","Ruby/classes/Array.html#method-i-to_default_s","(format = :default)","",null,0],["to_default_s","Date","Ruby/classes/Date.html#method-i-to_default_s","(format = :default)","",null,0],["to_default_s","DateTime","Ruby/classes/DateTime.html#method-i-to_default_s","(format = :default)","",null,0],["to_default_s","Range","Ruby/classes/Range.html#method-i-to_default_s","(format = :default)","",null,0],["to_default_s","Time","Ruby/classes/Time.html#method-i-to_default_s","(format = :default)","",null,0],["to_der","OpenSSL::ASN1::ASN1Data","Rails/classes/OpenSSL/ASN1/ASN1Data.html#method-i-to_der","()","<p>Encodes this ASN1Data into a DER-encoded String value. The result is\nDER-encoded except for the possibility …\n",null,1],["to_der","OpenSSL::ASN1::Constructive","Rails/classes/OpenSSL/ASN1/Constructive.html#method-i-to_der","()","<p>See ASN1Data#to_der for details.\n",null,1],["to_der","OpenSSL::ASN1::Primitive","Rails/classes/OpenSSL/ASN1/Primitive.html#method-i-to_der","()","<p>See ASN1Data#to_der for details. *\n",null,1],["to_der","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::OCSP::Request","Rails/classes/OpenSSL/OCSP/Request.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::OCSP::Response","Rails/classes/OpenSSL/OCSP/Response.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::PKCS12","Rails/classes/OpenSSL/PKCS12.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-to_der","()","<p>Encodes this DH to its DER encoding. Note that any existing per-session\npublic/private keys will <strong>not</strong> …\n",null,1],["to_der","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-to_der","()","<p>Encodes this DSA to its DER encoding.\n",null,1],["to_der","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-to_der","()","<p>See the OpenSSL documentation for i2d_ECPrivateKey_bio()\n",null,1],["to_der","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-to_der","()","<p>See the OpenSSL documentation for i2d_ECPKParameters_bio()\n",null,1],["to_der","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-to_der","()","<p>Outputs this keypair in DER encoding.\n",null,1],["to_der","OpenSSL::SSL::Session","Rails/classes/OpenSSL/SSL/Session.html#method-i-to_der","()","<p>Returns an ASN1 encoded String that contains the Session object.\n",null,1],["to_der","OpenSSL::X509::Attribute","Rails/classes/OpenSSL/X509/Attribute.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-to_der","()","",null,1],["to_digits","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_digits","()","<p>Converts a BigDecimal to a String of the form “nnnnnn.mmm”. This method is\ndeprecated; use …\n",null,1],["to_element_methods","RSS::Element","Rails/classes/RSS/Element.html#method-c-to_element_methods","()","",null,1],["to_enum","Object","Rails/classes/Object.html#method-i-to_enum","(*args)","<p>Creates a new Enumerator which will enumerate by on calling\n<code>method</code> on <code>obj</code>.\n<p><code>method</code> &mdash; the method to call on …\n",null,1],["to_f","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-to_f","()","",null,0],["to_f","DateTime","Ruby/classes/DateTime.html#method-i-to_f","()","<p>Converts self to a floating-point number of seconds since the Unix epoch.\n",null,0],["to_f","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_f","()","<p>Returns a new Float object having approximately the same value as the\nBigDecimal number. Normal accuracy …\n",null,1],["to_f","Bignum","Rails/classes/Bignum.html#method-i-to_f","()","<p>Converts <em>big</em> to a <code>Float</code>. If <em>big</em> doesn’t fit\nin a <code>Float</code>, the result is infinity.\n",null,1],["to_f","Complex","Rails/classes/Complex.html#method-i-to_f","()","<p>Returns the value as a float if possible.\n",null,1],["to_f","Fixnum","Rails/classes/Fixnum.html#method-i-to_f","()","<p>Converts <em>fix</em> to a <code>Float</code>.\n",null,1],["to_f","Float","Rails/classes/Float.html#method-i-to_f","()","<p>As <code>flt</code> is already a float, returns <code>self</code>.\n",null,1],["to_f","NilClass","Rails/classes/NilClass.html#method-i-to_f","()","<p>Always returns zero.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">to_f</span>   <span class=\"ruby-comment\">#=&gt; 0.0</span>\n</pre>\n",null,1],["to_f","Rational","Rails/classes/Rational.html#method-i-to_f","()","<p>Return the value as a float.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">to_f</span>      <span class=\"ruby-comment\">#=&gt; 2.0</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">9</span>, <span class=\"ruby-value\">4</span>).<span class=\"ruby-identifier\">to_f</span>   <span class=\"ruby-comment\">#=&gt; 2.25 ...</span>\n</pre>\n",null,1],["to_f","String","Rails/classes/String.html#method-i-to_f","()","<p>Returns the result of interpreting leading characters in <em>str</em> as a\nfloating point number. Extraneous characters …\n",null,1],["to_f","Time","Rails/classes/Time.html#method-i-to_f","()","<p>Returns the value of <em>time</em> as a floating point number of seconds\nsince the Epoch.\n\n<pre>t = Time.now\n&quot;%10.5f&quot; ...</pre>\n",null,1],["to_feed","RSS::Maker::Atom::Entry::Items","Rails/classes/RSS/Maker/Atom/Entry/Items.html#method-i-to_feed","(entry)","",null,1],["to_feed","RSS::Maker::Atom::Entry::Items::Item","Rails/classes/RSS/Maker/Atom/Entry/Items/Item.html#method-i-to_feed","(entry)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Channel","Rails/classes/RSS/Maker/Atom/Feed/Channel.html#method-i-to_feed","(feed)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Channel::Cloud","Rails/classes/RSS/Maker/Atom/Feed/Channel/Cloud.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Channel::SkipDays","Rails/classes/RSS/Maker/Atom/Feed/Channel/SkipDays.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Channel::SkipHours","Rails/classes/RSS/Maker/Atom/Feed/Channel/SkipHours.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Image","Rails/classes/RSS/Maker/Atom/Feed/Image.html#method-i-to_feed","(feed)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Items","Rails/classes/RSS/Maker/Atom/Feed/Items.html#method-i-to_feed","(feed)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Items::Item","Rails/classes/RSS/Maker/Atom/Feed/Items/Item.html#method-i-to_feed","(feed)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Items::Item::Content","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Content.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Items::Item::Enclosure","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Enclosure.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Items::Item::Guid","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Guid.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Items::Item::Source","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::Atom::Feed::Items::Item::Source::Icon","Rails/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Icon.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::AtomCategory","Rails/classes/RSS/Maker/AtomCategory.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::AtomGenerator","Rails/classes/RSS/Maker/AtomGenerator.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::AtomLink","Rails/classes/RSS/Maker/AtomLink.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::AtomLogo","Rails/classes/RSS/Maker/AtomLogo.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::ITunesChannelModel::ITunesCategoriesBase::ITunesCategoryBase","Rails/classes/RSS/Maker/ITunesChannelModel/ITunesCategoriesBase/ITunesCategoryBase.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::ITunesChannelModel::ITunesImageBase","Rails/classes/RSS/Maker/ITunesChannelModel/ITunesImageBase.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::ITunesChannelModel::ITunesOwnerBase","Rails/classes/RSS/Maker/ITunesChannelModel/ITunesOwnerBase.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::ITunesItemModel::ITunesDurationBase","Rails/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::ImageFaviconModel::ImageFaviconBase","Rails/classes/RSS/Maker/ImageFaviconModel/ImageFaviconBase.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::ImageItemModel::ImageItemBase","Rails/classes/RSS/Maker/ImageItemModel/ImageItemBase.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::RSS09::Channel","Rails/classes/RSS/Maker/RSS09/Channel.html#method-i-to_feed","(rss)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Authors","Rails/classes/RSS/Maker/RSS09/Channel/Authors.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Authors::Author","Rails/classes/RSS/Maker/RSS09/Channel/Authors/Author.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Categories","Rails/classes/RSS/Maker/RSS09/Channel/Categories.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Cloud","Rails/classes/RSS/Maker/RSS09/Channel/Cloud.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Contributors","Rails/classes/RSS/Maker/RSS09/Channel/Contributors.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Copyright","Rails/classes/RSS/Maker/RSS09/Channel/Copyright.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Description","Rails/classes/RSS/Maker/RSS09/Channel/Description.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Generator","Rails/classes/RSS/Maker/RSS09/Channel/Generator.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Links","Rails/classes/RSS/Maker/RSS09/Channel/Links.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Links::Link","Rails/classes/RSS/Maker/RSS09/Channel/Links/Link.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::SkipDays","Rails/classes/RSS/Maker/RSS09/Channel/SkipDays.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::SkipDays::Day","Rails/classes/RSS/Maker/RSS09/Channel/SkipDays/Day.html#method-i-to_feed","(rss, days)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::SkipHours","Rails/classes/RSS/Maker/RSS09/Channel/SkipHours.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::SkipHours::Hour","Rails/classes/RSS/Maker/RSS09/Channel/SkipHours/Hour.html#method-i-to_feed","(rss, hours)","",null,1],["to_feed","RSS::Maker::RSS09::Channel::Title","Rails/classes/RSS/Maker/RSS09/Channel/Title.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS09::Image","Rails/classes/RSS/Maker/RSS09/Image.html#method-i-to_feed","(rss)","",null,1],["to_feed","RSS::Maker::RSS09::Items","Rails/classes/RSS/Maker/RSS09/Items.html#method-i-to_feed","(rss)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item","Rails/classes/RSS/Maker/RSS09/Items/Item.html#method-i-to_feed","(rss)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Authors","Rails/classes/RSS/Maker/RSS09/Items/Item/Authors.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Categories","Rails/classes/RSS/Maker/RSS09/Items/Item/Categories.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Content","Rails/classes/RSS/Maker/RSS09/Items/Item/Content.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Contributors","Rails/classes/RSS/Maker/RSS09/Items/Item/Contributors.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Description","Rails/classes/RSS/Maker/RSS09/Items/Item/Description.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Enclosure","Rails/classes/RSS/Maker/RSS09/Items/Item/Enclosure.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Guid","Rails/classes/RSS/Maker/RSS09/Items/Item/Guid.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Links","Rails/classes/RSS/Maker/RSS09/Items/Item/Links.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Links::Link","Rails/classes/RSS/Maker/RSS09/Items/Item/Links/Link.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Rights","Rails/classes/RSS/Maker/RSS09/Items/Item/Rights.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source","Rails/classes/RSS/Maker/RSS09/Items/Item/Source.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Authors","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Authors.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Categories","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Categories.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Contributors","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Contributors.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Generator","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Generator.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Icon","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Icon.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Links","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Links.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Logo","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Logo.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Rights","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Rights.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Subtitle","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Subtitle.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Title","Rails/classes/RSS/Maker/RSS09/Items/Item/Source/Title.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS09::Items::Item::Title","Rails/classes/RSS/Maker/RSS09/Items/Item/Title.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS09::Textinput","Rails/classes/RSS/Maker/RSS09/Textinput.html#method-i-to_feed","(rss)","",null,1],["to_feed","RSS::Maker::RSS10::Channel","Rails/classes/RSS/Maker/RSS10/Channel.html#method-i-to_feed","(rss)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Authors","Rails/classes/RSS/Maker/RSS10/Channel/Authors.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Authors::Author","Rails/classes/RSS/Maker/RSS10/Channel/Authors/Author.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Categories","Rails/classes/RSS/Maker/RSS10/Channel/Categories.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Cloud","Rails/classes/RSS/Maker/RSS10/Channel/Cloud.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Contributors","Rails/classes/RSS/Maker/RSS10/Channel/Contributors.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Copyright","Rails/classes/RSS/Maker/RSS10/Channel/Copyright.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Description","Rails/classes/RSS/Maker/RSS10/Channel/Description.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Generator","Rails/classes/RSS/Maker/RSS10/Channel/Generator.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Links","Rails/classes/RSS/Maker/RSS10/Channel/Links.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Links::Link","Rails/classes/RSS/Maker/RSS10/Channel/Links/Link.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::SkipDays","Rails/classes/RSS/Maker/RSS10/Channel/SkipDays.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::SkipHours","Rails/classes/RSS/Maker/RSS10/Channel/SkipHours.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Channel::Title","Rails/classes/RSS/Maker/RSS10/Channel/Title.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS10::Image","Rails/classes/RSS/Maker/RSS10/Image.html#method-i-to_feed","(rss)","",null,1],["to_feed","RSS::Maker::RSS10::Items","Rails/classes/RSS/Maker/RSS10/Items.html#method-i-to_feed","(rss)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item","Rails/classes/RSS/Maker/RSS10/Items/Item.html#method-i-to_feed","(rss)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Authors","Rails/classes/RSS/Maker/RSS10/Items/Item/Authors.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Categories","Rails/classes/RSS/Maker/RSS10/Items/Item/Categories.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Content","Rails/classes/RSS/Maker/RSS10/Items/Item/Content.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Contributors","Rails/classes/RSS/Maker/RSS10/Items/Item/Contributors.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Description","Rails/classes/RSS/Maker/RSS10/Items/Item/Description.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Enclosure","Rails/classes/RSS/Maker/RSS10/Items/Item/Enclosure.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Guid","Rails/classes/RSS/Maker/RSS10/Items/Item/Guid.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Links","Rails/classes/RSS/Maker/RSS10/Items/Item/Links.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Rights","Rails/classes/RSS/Maker/RSS10/Items/Item/Rights.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source","Rails/classes/RSS/Maker/RSS10/Items/Item/Source.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Authors","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Authors.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Categories","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Categories.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Contributors","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Contributors.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Generator","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Generator.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Icon","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Icon.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Links","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Links.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Logo","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Logo.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Rights","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Rights.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Subtitle","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Subtitle.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Title","Rails/classes/RSS/Maker/RSS10/Items/Item/Source/Title.html#method-i-to_feed","(*args)","",null,1],["to_feed","RSS::Maker::RSS10::Items::Item::Title","Rails/classes/RSS/Maker/RSS10/Items/Item/Title.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS10::Textinput","Rails/classes/RSS/Maker/RSS10/Textinput.html#method-i-to_feed","(rss)","",null,1],["to_feed","RSS::Maker::RSS20::Channel::Categories","Rails/classes/RSS/Maker/RSS20/Channel/Categories.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS20::Channel::Categories::Category","Rails/classes/RSS/Maker/RSS20/Channel/Categories/Category.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS20::Channel::Cloud","Rails/classes/RSS/Maker/RSS20/Channel/Cloud.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS20::Channel::Generator","Rails/classes/RSS/Maker/RSS20/Channel/Generator.html#method-i-to_feed","(rss, channel)","",null,1],["to_feed","RSS::Maker::RSS20::Items::Item::Authors","Rails/classes/RSS/Maker/RSS20/Items/Item/Authors.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS20::Items::Item::Authors::Author","Rails/classes/RSS/Maker/RSS20/Items/Item/Authors/Author.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS20::Items::Item::Categories","Rails/classes/RSS/Maker/RSS20/Items/Item/Categories.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS20::Items::Item::Categories::Category","Rails/classes/RSS/Maker/RSS20/Items/Item/Categories/Category.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS20::Items::Item::Enclosure","Rails/classes/RSS/Maker/RSS20/Items/Item/Enclosure.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS20::Items::Item::Guid","Rails/classes/RSS/Maker/RSS20/Items/Item/Guid.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS20::Items::Item::Source","Rails/classes/RSS/Maker/RSS20/Items/Item/Source.html#method-i-to_feed","(rss, item)","",null,1],["to_feed","RSS::Maker::RSS20::Items::Item::Source::Links","Rails/classes/RSS/Maker/RSS20/Items/Item/Source/Links.html#method-i-to_feed","(rss, source)","",null,1],["to_feed","RSS::Maker::RSS20::Items::Item::Source::Links::Link","Rails/classes/RSS/Maker/RSS20/Items/Item/Source/Links/Link.html#method-i-to_feed","(rss, source)","",null,1],["to_feed","RSS::Maker::RSSBase","Rails/classes/RSS/Maker/RSSBase.html#method-i-to_feed","()","",null,1],["to_feed","RSS::Maker::TrackBackModel::TrackBackAboutsBase::TrackBackAboutBase","Rails/classes/RSS/Maker/TrackBackModel/TrackBackAboutsBase/TrackBackAboutBase.html#method-i-to_feed","(feed, current)","",null,1],["to_feed","RSS::Maker::XMLStyleSheets::XMLStyleSheet","Rails/classes/RSS/Maker/XMLStyleSheets/XMLStyleSheet.html#method-i-to_feed","(feed)","",null,1],["to_feed","RSS::RootElementMixin","Rails/classes/RSS/RootElementMixin.html#method-i-to_feed","(type, &block)","",null,1],["to_feed_for_categories","RSS::Maker::ITunesChannelModel::ITunesCategoriesBase::ITunesCategoryBase","Rails/classes/RSS/Maker/ITunesChannelModel/ITunesCategoriesBase/ITunesCategoryBase.html#method-i-to_feed_for_categories","(feed, current)","",null,1],["to_format","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-to_format","()","<p>All other formats follow the procedure below. First we try to render a\ntemplate, if the template is not …\n",null,0],["to_formatted_s","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-to_formatted_s","(format = :default)","",null,0],["to_formatted_s","Array","Ruby/classes/Array.html#method-i-to_formatted_s","(format = :default)","<p>Converts a collection of elements into a formatted string by calling\n<code>to_s</code> on all elements and joining …\n",null,0],["to_formatted_s","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_formatted_s","(format = DEFAULT_STRING_FORMAT)","",null,0],["to_formatted_s","Date","Ruby/classes/Date.html#method-i-to_formatted_s","(format = :default)","<p>Convert to a formatted string. See DATE_FORMATS for predefined formats.\n<p>This method is aliased to <code>to_s</code> …\n",null,0],["to_formatted_s","DateTime","Ruby/classes/DateTime.html#method-i-to_formatted_s","(format = :default)","<p>Convert to a formatted string. See Time::DATE_FORMATS for predefined\nformats.\n<p>This method is aliased to …\n",null,0],["to_formatted_s","Range","Ruby/classes/Range.html#method-i-to_formatted_s","(format = :default)","<p>Gives a human readable format of the range.\n<p>Example\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">100</span>).<span class=\"ruby-identifier\">to_formatted_s</span> <span class=\"ruby-comment\"># =&gt; &quot;1..100&quot;</span>\n</pre>\n",null,0],["to_formatted_s","Time","Ruby/classes/Time.html#method-i-to_formatted_s","(format = :default)","<p>Converts to a formatted string. See DATE_FORMATS for builtin formats.\n<p>This method is aliased to <code>to_s</code>. …\n",null,0],["to_h","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-i-to_h","()","",null,1],["to_h","XMLRPC::FaultException","Rails/classes/XMLRPC/FaultException.html#method-i-to_h","()","<p>returns a hash\n",null,1],["to_hash","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-to_hash","()","",null,0],["to_hash","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-to_hash","()","",null,0],["to_hash","ActiveRecord::Result","Ruby/classes/ActiveRecord/Result.html#method-i-to_hash","()","",null,0],["to_hash","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_hash","()","<p>Convert to a Hash with String keys.\n",null,0],["to_hash","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_hash","()","<p>Convert to a Hash with String keys.\n",null,0],["to_hash","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-to_hash","()","",null,0],["to_hash","CSV::Row","Rails/classes/CSV/Row.html#method-i-to_hash","()","<p>Collapses the row into a simple Hash.  Be warning that this discards field\norder and clobbers duplicate …\n",null,1],["to_hash","DBM","Rails/classes/DBM.html#method-i-to_hash","()","<p>Converts the contents of the database to an in-memory Hash object, and\nreturns it.\n",null,1],["to_hash","ENV","Rails/classes/ENV.html#method-c-to_hash","()","<p>Creates a hash with a copy of the environment variables.\n",null,1],["to_hash","GDBM","Rails/classes/GDBM.html#method-i-to_hash","()","<p>Returns a hash of all key-value pairs contained in the database.\n",null,1],["to_hash","Hash","Rails/classes/Hash.html#method-i-to_hash","()","<p>Returns <code>self</code>.\n",null,1],["to_hash","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-to_hash","()","<p>Returns a Hash consisting of header names and values. e.g. {“cache-control”\n=&gt; “private”, …\n",null,1],["to_hash","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-i-to_hash","()","",null,1],["to_hash","SDBM","Rails/classes/SDBM.html#method-i-to_hash","()","",null,1],["to_hash","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-to_hash","()","<p>Converts the contents of the database to an in-memory Hash object, and\nreturns it.\n",null,1],["to_html","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-to_html","()","<p>HTML format does not render the resource, it always attempt to render a\ntemplate.\n",null,0],["to_html","Rails::Info","Ruby/classes/Rails/Info.html#method-c-to_html","()","",null,0],["to_html","RDoc::Markup::ToHtml","Rails/classes/RDoc/Markup/ToHtml.html#method-i-to_html","(item)","<p>Converts <code>item</code> to HTML using RDoc::Text#to_html\n",null,1],["to_html","RDoc::Text","Rails/classes/RDoc/Text.html#method-i-to_html","(text)","<p>Converts ampersand, dashes, ellipsis, quotes, copyright and registered\ntrademark symbols in <code>text</code> to properly …\n",null,1],["to_i","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-to_i","()","",null,0],["to_i","DateTime","Ruby/classes/DateTime.html#method-i-to_i","()","<p>Converts self to an integer number of seconds since the Unix epoch.\n",null,0],["to_i","ARGF","Rails/classes/ARGF.html#method-i-to_i","()","<p>Returns an integer representing the numeric file descriptor for the current\nfile. Raises an <code>ArgumentError</code> …\n",null,1],["to_i","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_i","()","<p>Returns the value as an integer (Fixnum or Bignum).\n<p>If the BigNumber is infinity or NaN, raises FloatDomainError …\n",null,1],["to_i","Complex","Rails/classes/Complex.html#method-i-to_i","()","<p>Returns the value as an integer if possible.\n",null,1],["to_i","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-to_i","()","<p>Returns the memory location of this function pointer as an integer.\n",null,1],["to_i","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-to_i","()","<p>Returns the integer memory location of this DL::CPtr.\n",null,1],["to_i","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-to_i","()","<p>Returns the integer memory location of this DL::CPtr.\n",null,1],["to_i","DL::Function","Rails/classes/DL/Function.html#method-i-to_i","()","",null,1],["to_i","DL::Handle","Rails/classes/DL/Handle.html#method-i-to_i","()","<p>Returns the memory address for this handle.\n",null,1],["to_i","Fiddle::Closure","Rails/classes/Fiddle/Closure.html#method-i-to_i","()","<p>Returns the memory address for this closure\n",null,1],["to_i","Float","Rails/classes/Float.html#method-i-to_i","()","<p>Returns <em>flt</em> truncated to an <code>Integer</code>.\n",null,1],["to_i","IO","Rails/classes/IO.html#method-i-to_i","()","",null,1],["to_i","IPAddr","Rails/classes/IPAddr.html#method-i-to_i","()","<p>Returns the integer representation of the ipaddr.\n",null,1],["to_i","Integer","Rails/classes/Integer.html#method-i-to_i","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,1],["to_i","NilClass","Rails/classes/NilClass.html#method-i-to_i","()","<p>Always returns zero.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">to_i</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n</pre>\n",null,1],["to_i","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-to_i","()","",null,1],["to_i","Process::Status","Rails/classes/Process/Status.html#method-i-to_i","()","<p>Returns the bits in <em>stat</em> as a <code>Fixnum</code>. Poking around\nin these bits is platform dependent.\n\n<pre>fork { exit 0xab ...</pre>\n",null,1],["to_i","Rake::PseudoStatus","Rails/classes/Rake/PseudoStatus.html#method-i-to_i","()","",null,1],["to_i","Rational","Rails/classes/Rational.html#method-i-to_i","()","<p>Returns the truncated value as an integer.\n<p>Equivalent to\n\n<pre>rat.truncate.</pre>\n",null,1],["to_i","String","Rails/classes/String.html#method-i-to_i","(p1 = v1)","<p>Returns the result of interpreting leading characters in <em>str</em> as an\ninteger base <em>base</em> (between 2 and 36). …\n",null,1],["to_i","Time","Rails/classes/Time.html#method-i-to_i","()","<p>Returns the value of <em>time</em> as an integer number of seconds since\nthe Epoch.\n\n<pre>t = Time.now\n&quot;%10.5f&quot; % t.to_f ...</pre>\n",null,1],["to_i","WEBrick::HTTPStatus::Status","Rails/classes/WEBrick/HTTPStatus/Status.html#method-i-to_i","()","",null,1],["to_id","DRb","Rails/classes/DRb.html#method-c-to_id","(obj)","<p>Get a reference id for an object using the current server.\n<p>This raises a DRbServerNotFound error if there …\n",null,1],["to_id","DRb::DRbIdConv","Rails/classes/DRb/DRbIdConv.html#method-i-to_id","(obj)","<p>Convert an object into a reference id.\n<p>This implementation returns the object’s __id__ in the local object …\n",null,1],["to_id","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-i-to_id","(obj)","<p>Convert a local object to a dRuby reference.\n",null,1],["to_id","DRb::TimerIdConv","Rails/classes/DRb/TimerIdConv.html#method-i-to_id","(obj)","",null,1],["to_input_field_tag","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-to_input_field_tag","(field_type, options = {})","",null,0],["to_int","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_int","()","<p>Returns the value as an integer (Fixnum or Bignum).\n<p>If the BigNumber is infinity or NaN, raises FloatDomainError …\n",null,1],["to_int","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-to_int","()","<p>Returns the integer memory location of this DL::CPtr.\n",null,1],["to_int","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-to_int","()","<p>Returns the integer memory location of this DL::CPtr.\n",null,1],["to_int","Float","Rails/classes/Float.html#method-i-to_int","()","<p>Returns <em>flt</em> truncated to an <code>Integer</code>.\n",null,1],["to_int","Integer","Rails/classes/Integer.html#method-i-to_int","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,1],["to_int","Numeric","Rails/classes/Numeric.html#method-i-to_int","()","<p>Invokes the child class’s <code>to_i</code> method to convert <em>num</em>\nto an integer.\n",null,1],["to_int","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-to_int","()","",null,1],["to_io","ARGF","Rails/classes/ARGF.html#method-i-to_io","()","<p>Returns an <code>IO</code> object representing the current file. This will\nbe a <code>File</code> object unless the current file …\n",null,1],["to_io","IO","Rails/classes/IO.html#method-i-to_io","()","<p>Returns <em>ios</em>.\n",null,1],["to_io","OpenSSL::SSL::SSLServer","Rails/classes/OpenSSL/SSL/SSLServer.html#method-i-to_io","()","",null,1],["to_io","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-i-to_io","()","<p>Same as IO.\n",null,1],["to_js","ActionController::Responder","Ruby/classes/ActionController/Responder.html#method-i-to_js","()","<p>to_js simply tries to render a template. If no template is found, raises\nthe error.\n",null,0],["to_json","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-to_json","(options={})","",null,0],["to_json","Object","Ruby/classes/Object.html#method-i-to_json","(options = nil)","<p>Dumps object in JSON (JavaScript Object Notation). See www.json.org for\nmore info.\n",null,0],["to_json","Complex","Rails/classes/Complex.html#method-i-to_json","(*)","",null,1],["to_json","Date","Rails/classes/Date.html#method-i-to_json","(*args)","<p>Stores class name (Date) with Julian year <code>y</code>, month\n<code>m</code>, day <code>d</code> and Day of Calendar Reform\n<code>sg</code> as JSON string …\n",null,1],["to_json","DateTime","Rails/classes/DateTime.html#method-i-to_json","(*args)","<p>Stores class name (DateTime) with Julian year <code>y</code>, month\n<code>m</code>, day <code>d</code>, hour <code>H</code>, minute\n<code>M</code>, second <code>S</code>, offset  …\n",null,1],["to_json","Exception","Rails/classes/Exception.html#method-i-to_json","(*args)","<p>Stores class name (Exception) with message <code>m</code> and backtrace\narray <code>b</code> as JSON string\n",null,1],["to_json","Psych","Rails/classes/Psych.html#method-c-to_json","(o)","<p>Dump Ruby object <code>o</code> to a JSON string.\n",null,1],["to_json","Range","Rails/classes/Range.html#method-i-to_json","(*args)","<p>Stores class name (Range) with JSON array of arguments <code>a</code> which\ninclude <code>first</code> (integer), <code>last</code> (integer), …\n",null,1],["to_json","Rational","Rails/classes/Rational.html#method-i-to_json","(*)","",null,1],["to_json","Regexp","Rails/classes/Regexp.html#method-i-to_json","(*)","<p>Stores class name (Regexp) with options <code>o</code> and source\n<code>s</code> (Regexp or String) as JSON string\n",null,1],["to_json","Struct","Rails/classes/Struct.html#method-i-to_json","(*args)","<p>Stores class name (Struct) with Struct values <code>v</code> as a JSON\nstring. Only named structs are supported.\n",null,1],["to_json","Symbol","Rails/classes/Symbol.html#method-i-to_json","(*a)","<p>Stores class name (Symbol) with String representation of Symbol as a JSON\nstring.\n",null,1],["to_json","Time","Rails/classes/Time.html#method-i-to_json","(*args)","<p>Stores class name (Time) with number of seconds since epoch and number of\nmicroseconds for Time as JSON …\n",null,1],["to_key","ActiveModel::Conversion","Ruby/classes/ActiveModel/Conversion.html#method-i-to_key","()","<p>Returns an Enumerable of all key attributes if any is set, regardless if\nthe object is persisted or not. …\n",null,0],["to_key","ActiveRecord::AttributeMethods::PrimaryKey","Ruby/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-to_key","()","<p>Returns this record’s primary key value wrapped in an Array if one is\navailable\n",null,0],["to_label_tag","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-to_label_tag","(text = nil, options = {}, &block)","",null,0],["to_mailtext","URI::MailTo","Rails/classes/URI/MailTo.html#method-i-to_mailtext","()","<p>Returns the RFC822 e-mail text equivalent of the URL, as a String.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">'uri'</span>\n\n<span class=\"ruby-identifier\">uri</span> = <span class=\"ruby-constant\">URI</span>.<span class=\"ruby-identifier\">parse</span>(<span class=\"ruby-string\">&quot;mailto:ruby-list@ruby-lang.org?Subject=subscribe&amp;cc=myaddr&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["to_model","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-to_model","()","",null,0],["to_model","ActiveModel::Conversion","Ruby/classes/ActiveModel/Conversion.html#method-i-to_model","()","<p>If your object is already designed to implement all of the Active Model you\ncan use the default <code>:to_model</code> …\n",null,0],["to_name","Resolv::IPv4","Rails/classes/Resolv/IPv4.html#method-i-to_name","()","<p>Turns this IPv4 address into a Resolv::DNS::Name.\n",null,1],["to_name","Resolv::IPv6","Rails/classes/Resolv/IPv6.html#method-i-to_name","()","<p>Turns this IPv6 address into a Resolv::DNS::Name.\n",null,1],["to_number_field_tag","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-to_number_field_tag","(field_type, options = {})","",null,0],["to_obj","DRb","Rails/classes/DRb.html#method-c-to_obj","(ref)","<p>Convert a reference into an object using the current server.\n<p>This raises a DRbServerNotFound error if …\n",null,1],["to_obj","DRb::DRbIdConv","Rails/classes/DRb/DRbIdConv.html#method-i-to_obj","(ref)","<p>Convert an object reference id to an object.\n<p>This implementation looks up the reference id in the local …\n",null,1],["to_obj","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-i-to_obj","(ref)","<p>Convert a dRuby reference to the local object it refers to.\n",null,1],["to_obj","DRb::GWIdConv","Rails/classes/DRb/GWIdConv.html#method-i-to_obj","(ref)","",null,1],["to_obj","DRb::TimerIdConv","Rails/classes/DRb/TimerIdConv.html#method-i-to_obj","(ref)","",null,1],["to_options","Hash","Ruby/classes/Hash.html#method-i-to_options","()","",null,0],["to_options!","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_options-21","()","",null,0],["to_options!","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_options-21","()","",null,0],["to_options!","Hash","Ruby/classes/Hash.html#method-i-to_options-21","()","",null,0],["to_p","Win32::SSPI::Identity","Rails/classes/Win32/SSPI/Identity.html#method-i-to_p","()","",null,1],["to_p","Win32::SSPI::SecurityBuffer","Rails/classes/Win32/SSPI/SecurityBuffer.html#method-i-to_p","()","",null,1],["to_p","Win32::SSPI::SecurityHandle","Rails/classes/Win32/SSPI/SecurityHandle.html#method-i-to_p","()","",null,1],["to_p","Win32::SSPI::TimeStamp","Rails/classes/Win32/SSPI/TimeStamp.html#method-i-to_p","()","",null,1],["to_param","ActiveModel::Conversion","Ruby/classes/ActiveModel/Conversion.html#method-i-to_param","()","<p>Returns a string representing the object’s key suitable for use in URLs, or\nnil if <code>persisted?</code> is false. …\n",null,0],["to_param","ActiveRecord::Integration","Ruby/classes/ActiveRecord/Integration.html#method-i-to_param","()","<p>Returns a String, which Action Pack uses for constructing an URL to this\nobject. The default implementation …\n",null,0],["to_param","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-to_param","()","",null,0],["to_param","Array","Ruby/classes/Array.html#method-i-to_param","()","<p>Calls <code>to_param</code> on all its elements and joins the result with\nslashes. This is used by <code>url_for</code> in Action …\n",null,0],["to_param","FalseClass","Ruby/classes/FalseClass.html#method-i-to_param","()","",null,0],["to_param","Hash","Ruby/classes/Hash.html#method-i-to_param","(namespace = nil)","<p>Returns a string representation of the receiver suitable for use as a URL\nquery string:\n\n<pre class=\"ruby\">{:<span class=\"ruby-identifier\">name</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'David'</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["to_param","NilClass","Ruby/classes/NilClass.html#method-i-to_param","()","",null,0],["to_param","Object","Ruby/classes/Object.html#method-i-to_param","()","<p>Alias of <code>to_s</code>.\n",null,0],["to_param","TrueClass","Ruby/classes/TrueClass.html#method-i-to_param","()","",null,0],["to_partial_path","ActionView::Helpers::FormBuilder","Ruby/classes/ActionView/Helpers/FormBuilder.html#method-i-to_partial_path","()","",null,0],["to_partial_path","ActiveModel::Conversion","Ruby/classes/ActiveModel/Conversion.html#method-i-to_partial_path","()","<p>Returns a string identifying the path associated with the object.\nActionPack uses this to find a suitable …\n",null,0],["to_path","ActionDispatch::Response","Ruby/classes/ActionDispatch/Response.html#method-i-to_path","()","",null,0],["to_path","ActionView::FileSystemResolver","Ruby/classes/ActionView/FileSystemResolver.html#method-i-to_path","()","",null,0],["to_path","Dir","Rails/classes/Dir.html#method-i-to_path","()","<p>Returns the path parameter passed to <em>dir</em>’s constructor.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;..&quot;</span>)\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">path</span>   <span class=\"ruby-comment\">#=&gt; &quot;..&quot;</span>\n</pre>\n",null,1],["to_path","File","Rails/classes/File.html#method-i-to_path","()","<p>Returns the pathname used to create <em>file</em> as a string. Does not\nnormalize the name.\n\n<pre>File.new(&quot;testfile&quot;).path ...</pre>\n",null,1],["to_path","Pathname","Rails/classes/Pathname.html#method-i-to_path","()","<p>Return the path as a String.\n<p>to_path is implemented so Pathname objects are usable with File.open, etc.\n…\n",null,1],["to_pem","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-i-to_pem","()","",null,1],["to_pem","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-to_pem","()","",null,1],["to_pem","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-to_pem","()","",null,1],["to_pem","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-to_pem","(p1 = v1, p2 = v2)","",null,1],["to_pem","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-to_pem","(p1 = v1, p2 = v2)","<p>Outputs the EC key in PEM encoding.  If <code>cipher</code> and\n<code>pass_phrase</code> are given they will be used to encrypt …\n",null,1],["to_pem","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-to_pem","()","<p>See the OpenSSL documentation for PEM_write_bio_ECPKParameters()\n",null,1],["to_pem","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-to_pem","(p1 = v1, p2 = v2)","",null,1],["to_pem","OpenSSL::SSL::Session","Rails/classes/OpenSSL/SSL/Session.html#method-i-to_pem","()","<p>Returns a PEM encoded String that contains the Session object.\n",null,1],["to_pem","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-to_pem","()","",null,1],["to_pem","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-to_pem","()","",null,1],["to_pem","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-to_pem","()","",null,1],["to_prepare","ActionDispatch::Reloader","Ruby/classes/ActionDispatch/Reloader.html#method-c-to_prepare","(*args, &block)","<p>Add a prepare callback. Prepare callbacks are run before each request,\nprior to ActionDispatch::Callback’s …\n",null,0],["to_prepare","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-to_prepare","(&blk)","<p>Defines generic callbacks to run before #after_initialize. Useful for\nRails::Railtie subclasses.\n",null,0],["to_prepare_blocks","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-to_prepare_blocks","()","<p>Array of callbacks defined by #to_prepare.\n",null,0],["to_proc","Method","Rails/classes/Method.html#method-i-to_proc","()","<p>Returns a <code>Proc</code> object corresponding to this method.\n",null,1],["to_proc","Proc","Rails/classes/Proc.html#method-i-to_proc","()","<p>Part of the protocol for converting objects to <code>Proc</code> objects.\nInstances of class <code>Proc</code> simply return themselves. …\n",null,1],["to_proc","Symbol","Rails/classes/Symbol.html#method-i-to_proc","()","<p>Returns a <em>Proc</em> object which respond to the given method by\n<em>sym</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">collect</span>(&amp;:<span class=\"ruby-identifier\">to_s</span>)  <span class=\"ruby-comment\">#=&gt; [&quot;1&quot;, &quot;2&quot;, ...</span>\n</pre>\n",null,1],["to_ptr","DL::CPtr","Rails/classes/DL/CPtr.html#method-c-to_ptr","(p1)","<p>Get the underlying pointer for ruby object <code>val</code> and return it\nas a DL::CPtr object.\n",null,1],["to_ptr","DL::CPtr","Rails/classes/DL/CPtr.html#method-c-to_ptr","(p1)","<p>Get the underlying pointer for ruby object <code>val</code> and return it\nas a DL::CPtr object.\n",null,1],["to_query","Array","Ruby/classes/Array.html#method-i-to_query","(key)","<p>Converts an array into a string suitable for use as a URL query string,\nusing the given <code>key</code> as the param …\n",null,0],["to_query","Hash","Ruby/classes/Hash.html#method-i-to_query","(namespace = nil)","",null,0],["to_query","Object","Ruby/classes/Object.html#method-i-to_query","(key)","<p>Converts an object into a string suitable for use as a URL query string,\nusing the given <code>key</code> as the param …\n",null,0],["to_r","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_r","()","<p>Converts a BigDecimal to a Rational.\n",null,1],["to_r","Complex","Rails/classes/Complex.html#method-i-to_r","()","<p>If the imaginary part is exactly 0, returns the real part as a Rational,\notherwise a RangeError is raised. …\n",null,1],["to_r","Float","Rails/classes/Float.html#method-i-to_r","()","<p>Returns the value as a rational.\n<p>NOTE: 0.3.to_r isn’t the same as ‘0.3’.to_r.  The latter is equivalent …\n",null,1],["to_r","Integer","Rails/classes/Integer.html#method-i-to_r","()","<p>Returns the value as a rational.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">to_r</span>        <span class=\"ruby-comment\">#=&gt; (1/1)</span>\n(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">&lt;&lt;</span><span class=\"ruby-value\">64</span>).<span class=\"ruby-identifier\">to_r</span>  <span class=\"ruby-comment\">#=&gt; (18446744073709551616/1)</span>\n</pre>\n",null,1],["to_r","NilClass","Rails/classes/NilClass.html#method-i-to_r","()","<p>Returns zero as a rational.\n",null,1],["to_r","Rational","Rails/classes/Rational.html#method-i-to_r","()","<p>Returns self.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">to_r</span>      <span class=\"ruby-comment\">#=&gt; (2/1)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">-8</span>, <span class=\"ruby-value\">6</span>).<span class=\"ruby-identifier\">to_r</span>  <span class=\"ruby-comment\">#=&gt; (-4/3)</span>\n</pre>\n",null,1],["to_r","String","Rails/classes/String.html#method-i-to_r","()","<p>Returns a rational which denotes the string form.  The parser ignores\nleading whitespaces and trailing …\n",null,1],["to_r","Time","Rails/classes/Time.html#method-i-to_r","()","<p>Returns the value of <em>time</em> as a rational number of seconds since\nthe Epoch.\n\n<pre>t = Time.now\np t.to_r      ...</pre>\n",null,1],["to_radio_button_tag","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-to_radio_button_tag","(tag_value, options = {})","",null,0],["to_range","IPAddr","Rails/classes/IPAddr.html#method-i-to_range","()","<p>Creates a Range object for the network address.\n",null,1],["to_rfc822text","URI::MailTo","Rails/classes/URI/MailTo.html#method-i-to_rfc822text","()","",null,1],["to_rss","RSS::RootElementMixin","Rails/classes/RSS/RootElementMixin.html#method-i-to_rss","(type, &block)","",null,1],["to_ruby","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-to_ruby","()","<p>Returns a Ruby code representation of this specification, such that it can\nbe eval’ed and reconstruct …\n",null,1],["to_ruby","Psych::Nodes::Node","Rails/classes/Psych/Nodes/Node.html#method-i-to_ruby","()","<p>Convert this node to Ruby.\n<p>See also Psych::Visitors::ToRuby\n",null,1],["to_ruby_for_cache","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-to_ruby_for_cache","()","<p>Returns a Ruby lighter-weight code representation of this specification,\nused for indexing only.\n<p>See  …\n",null,1],["to_s","ActionDispatch::RemoteIp::GetIp","Ruby/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-to_s","()","",null,0],["to_s","ActionView::FileSystemResolver","Ruby/classes/ActionView/FileSystemResolver.html#method-i-to_s","()","",null,0],["to_s","ActiveResource::Request","Ruby/classes/ActiveResource/Request.html#method-i-to_s","()","",null,0],["to_s","ActiveResource::SSLError","Ruby/classes/ActiveResource/SSLError.html#method-i-to_s","()","",null,0],["to_s","ActiveResource::TimeoutError","Ruby/classes/ActiveResource/TimeoutError.html#method-i-to_s","()","",null,0],["to_s","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-to_s","()","",null,0],["to_s","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-to_s","(format = :default)","<p><code>:db</code> format outputs time in UTC; all others output time in\nlocal. Uses TimeWithZone's <code>strftime</code>, so <code>%Z</code> ...\n",null,0],["to_s","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-to_s","()","<p>Returns a textual representation of this time zone.\n",null,0],["to_s","Array","Ruby/classes/Array.html#method-i-to_s","(format = :default)","",null,0],["to_s","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_s","(format = DEFAULT_STRING_FORMAT)","",null,0],["to_s","Date","Ruby/classes/Date.html#method-i-to_s","(format = :default)","",null,0],["to_s","DateTime","Ruby/classes/DateTime.html#method-i-to_s","(format = :default)","",null,0],["to_s","Mime::Type","Ruby/classes/Mime/Type.html#method-i-to_s","()","",null,0],["to_s","Plugin","Ruby/classes/Plugin.html#method-i-to_s","()","",null,0],["to_s","Rails::Info","Ruby/classes/Rails/Info.html#method-c-to_s","()","",null,0],["to_s","Range","Ruby/classes/Range.html#method-i-to_s","(format = :default)","",null,0],["to_s","SourceAnnotationExtractor::Annotation","Ruby/classes/SourceAnnotationExtractor/Annotation.html#method-i-to_s","(options={})","<p>Returns a representation of the annotation that looks like this:\n\n<pre>[126] [TODO] This algorithm is simple ...</pre>\n",null,0],["to_s","Time","Ruby/classes/Time.html#method-i-to_s","(format = :default)","",null,0],["to_s","ARGF","Rails/classes/ARGF.html#method-i-to_s","()","<p>Returns “ARGF”.\n",null,1],["to_s","Addrinfo","Rails/classes/Addrinfo.html#method-i-to_s","()","<p>returns the socket address as packed struct sockaddr string.\n\n<pre>Addrinfo.tcp(&quot;localhost&quot;, 80).to_sockaddr ...</pre>\n",null,1],["to_s","Array","Rails/classes/Array.html#method-i-to_s","()","",null,1],["to_s","Benchmark::Tms","Rails/classes/Benchmark/Tms.html#method-i-to_s","()","<p>Same as #format.\n",null,1],["to_s","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_s","(p1 = v1)","<p>Converts the value to a string.\n<p>The default format looks like  0.xxxxEnn.\n<p>The optional parameter s consists …\n",null,1],["to_s","Bignum","Rails/classes/Bignum.html#method-i-to_s","(p1 = v1)","<p>Returns a string containing the representation of <em>big</em> radix\n<em>base</em> (2 through 36).\n\n<pre>12345654321.to_s     ...</pre>\n",null,1],["to_s","CGI::Cookie","Rails/classes/CGI/Cookie.html#method-i-to_s","()","<p>Convert the Cookie to its string representation.\n",null,1],["to_s","CSV::Row","Rails/classes/CSV/Row.html#method-i-to_s","(options = Hash.new)","",null,1],["to_s","CSV::Table","Rails/classes/CSV/Table.html#method-i-to_s","(options = Hash.new)","",null,1],["to_s","Complex","Rails/classes/Complex.html#method-i-to_s","()","<p>Returns the value as a string.\n",null,1],["to_s","DL::CFunc","Rails/classes/DL/CFunc.html#method-i-to_s","()","<p>Returns a string formatted with an easily readable representation of the\ninternal state of the DL::CFunc …\n",null,1],["to_s","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-to_s","(p1 = v1)","<p>Returns the pointer contents as a string.  When called with no arguments,\nthis method will return the …\n",null,1],["to_s","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-to_s","(p1 = v1)","<p>Returns the pointer contents as a string.  When called with no arguments,\nthis method will return the …\n",null,1],["to_s","DL::CStructEntity","Rails/classes/DL/CStructEntity.html#method-i-to_s","()","",null,1],["to_s","Date","Rails/classes/Date.html#method-i-to_s","()","<p>Returns a string in an ISO 8601 format (This method doesn’t use the\nexpanded representations).\n<p>For example: …\n",null,1],["to_s","DateTime","Rails/classes/DateTime.html#method-i-to_s","()","<p>Returns a string in an ISO 8601 format (This method doesn’t use the\nexpanded representations).\n<p>For example: …\n",null,1],["to_s","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-to_s","()","<p>Returns digest_obj.hexdigest().\n",null,1],["to_s","ENV","Rails/classes/ENV.html#method-c-to_s","()","<p>Returns “ENV”\n",null,1],["to_s","Encoding","Rails/classes/Encoding.html#method-i-to_s","()","<p>Returns the name of the encoding.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">UTF_8</span>.<span class=\"ruby-identifier\">name</span>      <span class=\"ruby-comment\">#=&gt; &quot;UTF-8&quot;</span>\n</pre>\n",null,1],["to_s","Exception","Rails/classes/Exception.html#method-i-to_s","()","<p>Returns exception’s message (or the name of the exception if no message is\nset).\n",null,1],["to_s","FalseClass","Rails/classes/FalseClass.html#method-i-to_s","()","<p>‘nuf said…\n",null,1],["to_s","Fixnum","Rails/classes/Fixnum.html#method-i-to_s","(p1 = v1)","<p>Returns a string containing the representation of <em>fix</em> radix\n<em>base</em> (between 2 and 36).\n\n<pre>12345.to_s       ...</pre>\n",null,1],["to_s","Float","Rails/classes/Float.html#method-i-to_s","()","<p>Returns a string containing a representation of self. As well as a fixed or\nexponential form of the number, …\n",null,1],["to_s","Foo","Rails/classes/Foo.html#method-i-to_s","()","",null,1],["to_s","Gem::Platform","Rails/classes/Gem/Platform.html#method-i-to_s","()","",null,1],["to_s","Hash","Rails/classes/Hash.html#method-i-to_s","()","",null,1],["to_s","IPAddr","Rails/classes/IPAddr.html#method-i-to_s","()","<p>Returns a string containing the IP address representation.\n",null,1],["to_s","IRB::Context","Rails/classes/IRB/Context.html#method-i-to_s","()","",null,1],["to_s","MatchData","Rails/classes/MatchData.html#method-i-to_s","()","<p>Returns the entire matched string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">m</span> = <span class=\"ruby-regexp\">/(.)(.)(\\d+)(\\d)/</span>.<span class=\"ruby-identifier\">match</span>(<span class=\"ruby-string\">&quot;THX1138.&quot;</span>)\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">to_s</span>   <span class=\"ruby-comment\">#=&gt; &quot;HX1138&quot;</span>\n</pre>\n",null,1],["to_s","Matrix","Rails/classes/Matrix.html#method-i-to_s","()","<p>Overrides Object#to_s\n",null,1],["to_s","Method","Rails/classes/Method.html#method-i-to_s","()","<p>Returns the name of the underlying method.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;cat&quot;</span>.<span class=\"ruby-identifier\">method</span>(:<span class=\"ruby-identifier\">count</span>).<span class=\"ruby-identifier\">inspect</span>   <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Method: String#count&gt;&quot;</span>\n</pre>\n",null,1],["to_s","Module","Rails/classes/Module.html#method-i-to_s","()","<p>Return a string representing this module or class. For basic classes and\nmodules, this is the name.  …\n",null,1],["to_s","NameError","Rails/classes/NameError.html#method-i-to_s","()","<p>Produce a nicely-formatted string representing the <code>NameError</code>.\n",null,1],["to_s","NilClass","Rails/classes/NilClass.html#method-i-to_s","()","<p>Always returns the empty string.\n",null,1],["to_s","Object","Rails/classes/Object.html#method-i-to_s","()","<p>Returns a string representing <em>obj</em>. The default <code>to_s</code>\nprints the object’s class and an encoding of the …\n",null,1],["to_s","OpenSSL::BN","Rails/classes/OpenSSL/BN.html#method-i-to_s","(p1 = v1)","<p>Parameters\n<p><code>base</code> - integer\n<p><p>Valid values:\n",null,1],["to_s","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::HMAC","Rails/classes/OpenSSL/HMAC.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-to_s","(p1 = v1, p2 = v2)","",null,1],["to_s","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-to_s","(p1 = v1, p2 = v2)","",null,1],["to_s","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::X509::Name","Rails/classes/OpenSSL/X509/Name.html#method-i-to_s","(p1 = v1)","",null,1],["to_s","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-to_s","()","",null,1],["to_s","OpenStruct","Rails/classes/OpenStruct.html#method-i-to_s","()","",null,1],["to_s","OptionParser","Rails/classes/OptionParser.html#method-i-to_s","()","",null,1],["to_s","OptionParser::ParseError","Rails/classes/OptionParser/ParseError.html#method-i-to_s","()","",null,1],["to_s","Pathname","Rails/classes/Pathname.html#method-i-to_s","()","<p>Return the path as a String.\n<p>to_path is implemented so Pathname objects are usable with File.open, etc.\n…\n",null,1],["to_s","Proc","Rails/classes/Proc.html#method-i-to_s","()","<p>Returns the unique identifier for this proc, along with an indication of\nwhere the proc was defined. …\n",null,1],["to_s","Process::Status","Rails/classes/Process/Status.html#method-i-to_s","()","<p>Show pid and exit status as a string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">system</span>(<span class=\"ruby-string\">&quot;false&quot;</span>)\n<span class=\"ruby-identifier\">p</span> <span class=\"ruby-identifier\">$?</span>.<span class=\"ruby-identifier\">to_s</span>         <span class=\"ruby-comment\">#=&gt; &quot;pid 12766 exit 1&quot;</span>\n</pre>\n",null,1],["to_s","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-to_s","()","<p>Returns the attribute value, with entities replaced\n",null,1],["to_s","REXML::CData","Rails/classes/REXML/CData.html#method-i-to_s","()","<p>Returns the content of this CData object\n<p><em>Examples</em>\n\n<pre>c = CData.new( &quot;Some text&quot; )\nc.to_s        # -&gt; &quot;Some ...</pre>\n",null,1],["to_s","REXML::DTD::EntityDecl","Rails/classes/REXML/DTD/EntityDecl.html#method-i-to_s","()","",null,1],["to_s","REXML::DTD::NotationDecl","Rails/classes/REXML/DTD/NotationDecl.html#method-i-to_s","()","",null,1],["to_s","REXML::Declaration","Rails/classes/REXML/Declaration.html#method-i-to_s","()","",null,1],["to_s","REXML::Entity","Rails/classes/REXML/Entity.html#method-i-to_s","()","<p>Returns this entity as a string.  See write().\n",null,1],["to_s","REXML::ExternalEntity","Rails/classes/REXML/ExternalEntity.html#method-i-to_s","()","",null,1],["to_s","REXML::Light::Node","Rails/classes/REXML/Light/Node.html#method-i-to_s","()","",null,1],["to_s","REXML::Node","Rails/classes/REXML/Node.html#method-i-to_s","(indent=nil)","<p>indent &mdash; <strong>DEPRECATED</strong> This parameter is now ignored.  See the\nformatters in the REXML::Formatters package ...\n\n",null,1],["to_s","REXML::NotationDecl","Rails/classes/REXML/NotationDecl.html#method-i-to_s","()","",null,1],["to_s","REXML::Output","Rails/classes/REXML/Output.html#method-i-to_s","()","",null,1],["to_s","REXML::ParseException","Rails/classes/REXML/ParseException.html#method-i-to_s","()","",null,1],["to_s","REXML::Text","Rails/classes/REXML/Text.html#method-i-to_s","()","<p>Returns the string value of this text node.  This string is always escaped,\nmeaning that it is a valid …\n",null,1],["to_s","REXML::Validation::Event","Rails/classes/REXML/Validation/Event.html#method-i-to_s","()","",null,1],["to_s","REXML::Validation::Ref","Rails/classes/REXML/Validation/Ref.html#method-i-to_s","()","",null,1],["to_s","REXML::Validation::State","Rails/classes/REXML/Validation/State.html#method-i-to_s","()","",null,1],["to_s","RSS::Element","Rails/classes/RSS/Element.html#method-i-to_s","(need_convert=true, indent='')","",null,1],["to_s","RSS::XML::Element","Rails/classes/RSS/XML/Element.html#method-i-to_s","()","",null,1],["to_s","RSS::XMLStyleSheet","Rails/classes/RSS/XMLStyleSheet.html#method-i-to_s","()","",null,1],["to_s","Rake::EarlyTime","Rails/classes/Rake/EarlyTime.html#method-i-to_s","()","",null,1],["to_s","Rake::InvocationChain","Rails/classes/Rake/InvocationChain.html#method-i-to_s","()","",null,1],["to_s","Rake::InvocationChain::EmptyInvocationChain","Rails/classes/Rake/InvocationChain/EmptyInvocationChain.html#method-i-to_s","()","",null,1],["to_s","Rake::Task","Rails/classes/Rake/Task.html#method-i-to_s","()","<p>Return task name\n",null,1],["to_s","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-i-to_s","()","",null,1],["to_s","Range","Rails/classes/Range.html#method-i-to_s","()","<p>Convert this range object to a printable form.\n",null,1],["to_s","Rational","Rails/classes/Rational.html#method-i-to_s","()","<p>Returns the value as a string.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">to_s</span>      <span class=\"ruby-comment\">#=&gt; &quot;2/1&quot;</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">-8</span>, <span class=\"ruby-value\">6</span>).<span class=\"ruby-identifier\">to_s</span>  <span class=\"ruby-comment\">#=&gt; &quot;-4/3&quot; ...</span>\n</pre>\n",null,1],["to_s","Regexp","Rails/classes/Regexp.html#method-i-to_s","()","<p>Returns a string containing the regular expression and its options (using\nthe <code>(?opts:source)</code> notation. …\n",null,1],["to_s","Resolv::DNS::Name","Rails/classes/Resolv/DNS/Name.html#method-i-to_s","()","<p>returns the domain name as a string.\n<p>The domain name doesn’t have a trailing dot even if the name object …\n",null,1],["to_s","Shell::Filter","Rails/classes/Shell/Filter.html#method-i-to_s","()","",null,1],["to_s","Socket::Option","Rails/classes/Socket/Option.html#method-i-to_s","()","<p>returns the socket option data as a string.\n\n<pre>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).data ...</pre>\n",null,1],["to_s","String","Rails/classes/String.html#method-i-to_s","()","<p>Returns the receiver.\n",null,1],["to_s","Struct","Rails/classes/Struct.html#method-i-to_s","()","",null,1],["to_s","Symbol","Rails/classes/Symbol.html#method-i-to_s","()","<p>Returns the name or string corresponding to <em>sym</em>.\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">fred</span>.<span class=\"ruby-identifier\">id2name</span>   <span class=\"ruby-comment\">#=&gt; &quot;fred&quot;</span>\n</pre>\n",null,1],["to_s","Time","Rails/classes/Time.html#method-i-to_s","()","<p>Returns a string representing <em>time</em>. Equivalent to calling\n<code>Time#strftime</code> with a format string of “<code>%Y-%m-%d</code> …\n",null,1],["to_s","TrueClass","Rails/classes/TrueClass.html#method-i-to_s","()","<p>The string representation of <code>true</code> is “true”.\n",null,1],["to_s","URI::FTP","Rails/classes/URI/FTP.html#method-i-to_s","()","",null,1],["to_s","URI::Generic","Rails/classes/URI/Generic.html#method-i-to_s","()","<p>Constructs String from URI\n",null,1],["to_s","URI::MailTo","Rails/classes/URI/MailTo.html#method-i-to_s","()","<p>Constructs String from URI\n",null,1],["to_s","UnboundMethod","Rails/classes/UnboundMethod.html#method-i-to_s","()","<p>Returns the name of the underlying method.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;cat&quot;</span>.<span class=\"ruby-identifier\">method</span>(:<span class=\"ruby-identifier\">count</span>).<span class=\"ruby-identifier\">inspect</span>   <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Method: String#count&gt;&quot;</span>\n</pre>\n",null,1],["to_s","Vector","Rails/classes/Vector.html#method-i-to_s","()","<p>Overrides Object#to_s\n",null,1],["to_s","WEBrick::Cookie","Rails/classes/WEBrick/Cookie.html#method-i-to_s","()","",null,1],["to_s","WEBrick::HTTPUtils::FormData","Rails/classes/WEBrick/HTTPUtils/FormData.html#method-i-to_s","()","",null,1],["to_s","WEBrick::HTTPVersion","Rails/classes/WEBrick/HTTPVersion.html#method-i-to_s","()","",null,1],["to_s","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-to_s","()","",null,1],["to_s","WIN32OLE_PARAM","Rails/classes/WIN32OLE_PARAM.html#method-i-to_s","()","",null,1],["to_s","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-to_s","()","",null,1],["to_s","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-to_s","()","",null,1],["to_s","WIN32OLE_VARIABLE","Rails/classes/WIN32OLE_VARIABLE.html#method-i-to_s","()","",null,1],["to_s","Win32::SSPI::SSPIResult","Rails/classes/Win32/SSPI/SSPIResult.html#method-i-to_s","()","",null,1],["to_sentence","Array","Ruby/classes/Array.html#method-i-to_sentence","(options = {})","<p>Converts the array to a comma-separated sentence where the last element is\njoined by the connector word. …\n",null,0],["to_set","Enumerable","Rails/classes/Enumerable.html#method-i-to_set","(klass = Set, *args, &block)","<p>Makes a set from the enumerable object with given arguments. Needs to\n+require “set”+ to use …\n",null,1],["to_sockaddr","Addrinfo","Rails/classes/Addrinfo.html#method-i-to_sockaddr","()","<p>returns the socket address as packed struct sockaddr string.\n\n<pre>Addrinfo.tcp(&quot;localhost&quot;, 80).to_sockaddr ...</pre>\n",null,1],["to_spec","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-to_spec","()","",null,1],["to_specs","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-to_specs","()","",null,1],["to_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-to_sql","(arel, binds = [])","<p>Converts an arel AST to SQL\n",null,0],["to_sql","ActiveRecord::ConnectionAdapters::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-to_sql","()","<p>Returns a String whose contents are the column definitions concatenated\ntogether. This string can then …\n",null,0],["to_sql","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-to_sql","()","",null,0],["to_str","Mime::Type","Ruby/classes/Mime/Type.html#method-i-to_str","()","",null,0],["to_str","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-to_str","(p1 = v1)","<p>Returns the pointer contents as a string.  When called with no arguments,\nthis method will return the …\n",null,1],["to_str","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-to_str","(p1 = v1)","<p>Returns the pointer contents as a string.  When called with no arguments,\nthis method will return the …\n",null,1],["to_str","String","Rails/classes/String.html#method-i-to_str","()","<p>Returns the receiver.\n",null,1],["to_string","IPAddr","Rails/classes/IPAddr.html#method-i-to_string","()","<p>Returns a string containing the IP address representation in canonical\nform.\n",null,1],["to_string","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-to_string","()","<p>Returns this attribute out as XML source, expanding the name\n\n<pre>a = Attribute.new( &quot;x&quot;, &quot;y&quot; )\na.to_string ...</pre>\n",null,1],["to_sym","Mime::Type","Ruby/classes/Mime/Type.html#method-i-to_sym","()","",null,0],["to_sym","String","Rails/classes/String.html#method-i-to_sym","()","<p>Returns the <code>Symbol</code> corresponding to <em>str</em>, creating the\nsymbol if it did not previously exist. See <code>Symbol#id2name</code> …\n",null,1],["to_sym","Symbol","Rails/classes/Symbol.html#method-i-to_sym","()","<p>In general, <code>to_sym</code> returns the <code>Symbol</code>\ncorresponding to an object. As <em>sym</em> is already a symbol,\n<code>self</code> is …\n",null,1],["to_tag","ActiveSupport::XmlMini","Ruby/classes/ActiveSupport/XmlMini.html#method-i-to_tag","(key, value, options)","",null,0],["to_text","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-i-to_text","()","",null,1],["to_text","OpenSSL::PKey::DH","Rails/classes/OpenSSL/PKey/DH.html#method-i-to_text","()","<p>Prints all parameters of key to buffer INSECURE: PRIVATE INFORMATIONS CAN\nLEAK OUT!!! Don’t use :-)) …\n",null,1],["to_text","OpenSSL::PKey::DSA","Rails/classes/OpenSSL/PKey/DSA.html#method-i-to_text","()","<p>Prints all parameters of key to buffer INSECURE: PRIVATE INFORMATIONS CAN\nLEAK OUT!!! Don’t use :-)) …\n",null,1],["to_text","OpenSSL::PKey::EC","Rails/classes/OpenSSL/PKey/EC.html#method-i-to_text","()","<p>See the OpenSSL documentation for EC_KEY_print()\n",null,1],["to_text","OpenSSL::PKey::EC::Group","Rails/classes/OpenSSL/PKey/EC/Group.html#method-i-to_text","()","<p>See the OpenSSL documentation for ECPKParameters_print()\n",null,1],["to_text","OpenSSL::PKey::RSA","Rails/classes/OpenSSL/PKey/RSA.html#method-i-to_text","()","<p>THIS METHOD IS INSECURE, PRIVATE INFORMATION CAN LEAK OUT!!!\n<p>Dumps all parameters of a keypair to a String …\n",null,1],["to_text","OpenSSL::SSL::Session","Rails/classes/OpenSSL/SSL/Session.html#method-i-to_text","()","<p>Shows everything in the Session object.\n",null,1],["to_text","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-to_text","()","",null,1],["to_text","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-to_text","()","",null,1],["to_text","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-to_text","()","",null,1],["to_text_area_tag","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-to_text_area_tag","(options = {})","",null,0],["to_time","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-to_time","()","<p>A TimeWithZone acts like a Time, so just return <code>self</code>.\n",null,0],["to_time","Date","Ruby/classes/Date.html#method-i-to_time","(form = :local)","<p>Converts a Date instance to a Time, where the time is set to the beginning\nof the day. The timezone can …\n",null,0],["to_time","DateTime","Ruby/classes/DateTime.html#method-i-to_time","()","<p>Attempts to convert self to a Ruby Time object; returns self if out of\nrange of Ruby Time class. If self …\n",null,0],["to_time","String","Ruby/classes/String.html#method-i-to_time","(form = :utc)","<p>Form can be either :utc (default) or :local.\n",null,0],["to_time","Time","Ruby/classes/Time.html#method-i-to_time","()","<p>A method to keep Time, Date and DateTime instances interchangeable on\nconversions. In this case, it simply …\n",null,0],["to_time","Date","Rails/classes/Date.html#method-i-to_time","()","<p>Returns a Time object which denotes self.\n",null,1],["to_time","DateTime","Rails/classes/DateTime.html#method-i-to_time","()","<p>Returns a Time object which denotes self.\n",null,1],["to_time","Time","Rails/classes/Time.html#method-i-to_time","()","<p>Returns a copy of self as local mode.\n",null,1],["to_time","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-to_time","()","",null,1],["to_time_in_current_zone","Date","Ruby/classes/Date.html#method-i-to_time_in_current_zone","()","<p>Converts Date to a TimeWithZone in the current zone if Time.zone or\nTime.zone_default is set, otherwise …\n",null,0],["to_time_select_tag","ActionView::Helpers::DateHelperInstanceTag","Ruby/classes/ActionView/Helpers/DateHelperInstanceTag.html#method-i-to_time_select_tag","(options = {}, html_options = {})","",null,0],["to_value","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-to_value","()","<p>Cast this CPtr to a ruby object.\n",null,1],["to_value","DL::CPtr","Rails/classes/DL/CPtr.html#method-i-to_value","()","<p>Cast this CPtr to a ruby object.\n",null,1],["to_write_io","ARGF","Rails/classes/ARGF.html#method-i-to_write_io","()","<p>Returns IO instance tied to <em>ARGF</em> for writing if inplace mode is\nenabled.\n",null,1],["to_xml","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-to_xml","(options={})","<p>Returns an xml formatted representation of the Errors hash.\n\n<pre>p.errors.add(:name, &quot;can't be blank&quot;)\np.errors.add(:name, ...</pre>\n",null,0],["to_xml","ActiveModel::Serializers::Xml","Ruby/classes/ActiveModel/Serializers/Xml.html#method-i-to_xml","(options = {}, &block)","<p>Returns XML representing the model. Configuration can be passed through\n<code>options</code>.\n<p>Without any <code>options</code>, …\n",null,0],["to_xml","ActiveRecord::Serialization","Ruby/classes/ActiveRecord/Serialization.html#method-i-to_xml","(options = {}, &block)","<p>Builds an XML document to represent the model. Some configuration is\navailable through <code>options</code>. However …\n",null,0],["to_xml","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-to_xml","(options={})","",null,0],["to_xml","Array","Ruby/classes/Array.html#method-i-to_xml","(options = {})","<p>Returns a string that represents the array in XML by invoking\n<code>to_xml</code> on each element. Active Record collections …\n",null,0],["to_xml","Hash","Ruby/classes/Hash.html#method-i-to_xml","(options = {})","<p>Returns a string containing an XML representation of its receiver:\n\n<pre class=\"ruby\">{<span class=\"ruby-string\">&quot;foo&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span>, <span class=\"ruby-string\">&quot;bar&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>}.<span class=\"ruby-identifier\">to_xml</span>\n<span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,0],["to_xml","RSS::RootElementMixin","Rails/classes/RSS/RootElementMixin.html#method-i-to_xml","(type=nil, &block)","",null,1],["to_yaml","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-to_yaml","(opts = {})","",null,0],["to_yaml","ActiveSupport::SafeBuffer","Ruby/classes/ActiveSupport/SafeBuffer.html#method-i-to_yaml","(*args)","",null,0],["to_yaml","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-to_yaml","(options = {})","",null,0],["to_yaml","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_yaml","(opts = {})","<p>This emits the number without any scientific notation. This is better than\nself.to_f.to_s since it doesn’t …\n",null,0],["to_yaml","Object","Rails/classes/Object.html#method-i-to_yaml","(options = {})","",null,1],["to_yaml","Psych::Nodes::Node","Rails/classes/Psych/Nodes/Node.html#method-i-to_yaml","(io = nil, options = {})","",null,1],["to_yaml_type","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-to_yaml_type","()","",null,0],["today","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-today","()","<p>Return the current date in this time zone.\n",null,0],["today","Date","Rails/classes/Date.html#method-c-today","(p1 = v1)","<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">today</span>                <span class=\"ruby-comment\">#=&gt; #&lt;Date: 2011-06-11 ..&gt;</span>\n</pre>\n<p>Creates a date object denoting the present …\n",null,1],["today?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-today-3F","()","",null,0],["today?","Date","Ruby/classes/Date.html#method-i-today-3F","()","<p>Returns true if the Date object’s date is today.\n",null,0],["today?","Time","Ruby/classes/Time.html#method-i-today-3F","()","<p>Tells whether the Time object’s time is today\n",null,0],["toeuc","Kconv","Rails/classes/Kconv.html#method-c-toeuc","(str)","<p>Convert <code>str</code> to EUC-JP\n",null,1],["toeuc","String","Rails/classes/String.html#method-i-toeuc","()","<p>Convert <code>self</code> to EUC-JP\n",null,1],["toggle","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-toggle","(attribute)","<p>Assigns to <code>attribute</code> the boolean opposite of\n<code>attribute?</code>. So if the predicate returns <code>true</code> the\nattribute …\n",null,0],["toggle!","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-toggle-21","(attribute)","<p>Wrapper around <code>toggle</code> that saves the record. This method\ndiffers from its non-bang version in that it …\n",null,0],["tojis","Kconv","Rails/classes/Kconv.html#method-c-tojis","(str)","<p>Convert <code>str</code> to ISO-2022-JP\n",null,1],["tojis","String","Rails/classes/String.html#method-i-tojis","()","<p>Convert <code>self</code> to ISO-2022-JP\n",null,1],["token","RubyLex","Rails/classes/RubyLex.html#method-i-token","()","",null,1],["token","Win32::SSPI::SecurityBuffer","Rails/classes/Win32/SSPI/SecurityBuffer.html#method-i-token","()","",null,1],["token_and_options","ActionController::HttpAuthentication::Token","Ruby/classes/ActionController/HttpAuthentication/Token.html#method-i-token_and_options","(request)","<p>Parses the token and options out of the token authorization header. If the\nheader looks like this:\n\n<pre>Authorization: ...</pre>\n",null,0],["token_listener","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-token_listener","(obj)","<p>Has <code>obj</code> listen to tokens\n",null,1],["token_pos","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-token_pos","(offset)","<p>Calculates the column and line of the current token based on\n<code>offset</code>.\n",null,1],["token_stream","RDoc::TokenStream","Rails/classes/RDoc/TokenStream.html#method-i-token_stream","()","<p>Current token stream\n",null,1],["tokenize","HTML::Sanitizer","Ruby/classes/HTML/Sanitizer.html#method-i-tokenize","(text, options)","",null,0],["tokenize","HTML::WhiteListSanitizer","Ruby/classes/HTML/WhiteListSanitizer.html#method-i-tokenize","(text, options)","",null,0],["tokenize","Psych::ScalarScanner","Rails/classes/Psych/ScalarScanner.html#method-i-tokenize","(string)","<p>Tokenize <code>string</code> returning the ruby object\n",null,1],["tokenize","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-tokenize","(input)","<p>Turns text <code>input</code> into a stream of tokens\n",null,1],["tokenize","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-c-tokenize","(str)","<p>Returns a token stream for <code>str</code>, for testing\n",null,1],["tokenize","Ripper","Rails/classes/Ripper.html#method-c-tokenize","(src, filename = '-', lineno = 1)","<p>Tokenizes Ruby program and returns an Array of String.\n",null,1],["tokens_to_s","RDoc::TokenStream","Rails/classes/RDoc/TokenStream.html#method-i-tokens_to_s","()","<p>Returns a string representation of the token stream\n",null,1],["tolocale","Kconv","Rails/classes/Kconv.html#method-c-tolocale","(str)","<p>Convert <code>self</code> to locale encoding\n",null,1],["tolocale","String","Rails/classes/String.html#method-i-tolocale","()","<p>Convert <code>self</code> to locale encoding\n",null,1],["tomorrow","Date","Ruby/classes/Date.html#method-c-tomorrow","()","<p>Returns a new Date representing the date 1 day after today (i.e. tomorrow’s\ndate).\n",null,0],["tomorrow","Date","Ruby/classes/Date.html#method-i-tomorrow","()","<p>Convenience method which returns a new Date/DateTime representing the time\n1 day since the instance time …\n",null,0],["tomorrow","Time","Ruby/classes/Time.html#method-i-tomorrow","()","<p>Convenience method which returns a new Time representing the time 1 day\nsince the instance time\n",null,0],["top","IRB::Frame","Rails/classes/IRB/Frame.html#method-i-top","(n = 0)","",null,1],["top","IRB::Frame","Rails/classes/IRB/Frame.html#method-c-top","(n = 0)","",null,1],["top","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-top","(lines, dest = '')","<p>Fetches the message header and <code>lines</code> lines of body.\n<p>The optional <code>dest</code> argument is obsolete.\n<p>This method …\n",null,1],["top","OptionParser","Rails/classes/OptionParser.html#method-i-top","()","<p>Subject of #on / #on_head, #accept / #reject\n",null,1],["top","OptionParser","Rails/classes/OptionParser.html#method-c-top","()","",null,1],["top_level","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-top_level","()","<p>Return the TopLevel that owns us\n",null,1],["top_level","RDoc::Require","Rails/classes/RDoc/Require.html#method-i-top_level","()","<p>The RDoc::TopLevel corresponding to this require, or <code>nil</code> if\nnot found.\n",null,1],["top_level","Rake::Application","Rails/classes/Rake/Application.html#method-i-top_level","()","<p>Run the top level tasks of a Rake application.\n",null,1],["top_level_test","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-top_level_test","(command, file1, file2=nil)","<p>CommandProcessor#test(command, file1, file2) CommandProcessor#[command,\nfile1, file2]\n\n<pre>  command: char ...</pre>\n",null,1],["toplevel_load","IRB::Locale","Rails/classes/IRB/Locale.html#method-i-toplevel_load","(file, priv=nil)","",null,1],["tosjis","Kconv","Rails/classes/Kconv.html#method-c-tosjis","(str)","<p>Convert <code>str</code> to Shift_JIS\n",null,1],["tosjis","String","Rails/classes/String.html#method-i-tosjis","()","<p>Convert <code>self</code> to Shift_JIS\n",null,1],["total_in","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-total_in","()","<p>Returns the total bytes of the input data to the stream.  FIXME\n",null,1],["total_out","Zlib::ZStream","Rails/classes/Zlib/ZStream.html#method-i-total_out","()","<p>Returns the total bytes of the output data from the stream.  FIXME\n",null,1],["total_time","GC::Profiler","Rails/classes/GC/Profiler.html#method-c-total_time","()","<p>The total time used for garbage collection in milliseconds\n",null,1],["touch","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-touch","(name = nil)","<p>Saves the record with the updated_at/on attributes set to the current time.\nPlease note that no validation …\n",null,0],["touch","FileUtils","Rails/classes/FileUtils.html#method-c-touch","(list, options = {})","<p>Options: noop verbose\n<p>Updates modification time (mtime) and access time (atime) of file(s) in\n<code>list</code>.   …\n",null,1],["touch","Object","Rails/classes/Object.html#method-i-touch","()","<p>Update the access and modification times of each FILE to the current time.\n\n<pre>ruby -run -e touch -- [OPTION] ...</pre>\n",null,1],["toutf16","Kconv","Rails/classes/Kconv.html#method-c-toutf16","(str)","<p>Convert <code>str</code> to UTF-16\n",null,1],["toutf16","String","Rails/classes/String.html#method-i-toutf16","()","<p>Convert <code>self</code> to UTF-16\n",null,1],["toutf32","Kconv","Rails/classes/Kconv.html#method-c-toutf32","(str)","<p>Convert <code>str</code> to UTF-32\n",null,1],["toutf32","String","Rails/classes/String.html#method-i-toutf32","()","<p>Convert <code>self</code> to UTF-32\n",null,1],["toutf8","Kconv","Rails/classes/Kconv.html#method-c-toutf8","(str)","<p>Convert <code>str</code> to UTF-8\n",null,1],["toutf8","String","Rails/classes/String.html#method-i-toutf8","()","<p>Convert <code>self</code> to UTF-8\n",null,1],["tr","Matrix","Rails/classes/Matrix.html#method-i-tr","()","",null,1],["tr","String","Rails/classes/String.html#method-i-tr","(p1, p2)","<p>Returns a copy of <em>str</em> with the characters in <em>from_str</em>\nreplaced by the corresponding characters in <em>to_str</em> …\n",null,1],["tr!","String","Rails/classes/String.html#method-i-tr-21","(p1, p2)","<p>Translates <em>str</em> in place, using the same rules as\n<code>String#tr</code>. Returns <em>str</em>, or <code>nil</code> if no\nchanges were made. …\n",null,1],["tr_s","String","Rails/classes/String.html#method-i-tr_s","(p1, p2)","<p>Processes a copy of <em>str</em> as described under <code>String#tr</code>,\nthen removes duplicate characters in regions that …\n",null,1],["tr_s!","String","Rails/classes/String.html#method-i-tr_s-21","(p1, p2)","<p>Performs <code>String#tr_s</code> processing on <em>str</em> in place,\nreturning <em>str</em>, or <code>nil</code> if no changes were made.\n",null,1],["trace","Matrix","Rails/classes/Matrix.html#method-i-trace","()","<p>Returns the trace (sum of diagonal elements) of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">7</span>,<span class=\"ruby-value\">6</span>], [<span class=\"ruby-value\">3</span>,<span class=\"ruby-value\">9</span>]].<span class=\"ruby-identifier\">trace</span>\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">16</span>\n</pre>\n",null,1],["trace","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-trace","(path, initheader = nil)","<p>Sends a TRACE request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["trace","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-trace","(path, initheader = nil)","<p>Sends a TRACE request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["trace?","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-trace-3F","()","",null,1],["trace_func","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-trace_func","(event, file, line, id, binding, klass)","",null,1],["trace_func","IRB::Frame","Rails/classes/IRB/Frame.html#method-i-trace_func","(event, file, line, id, binding)","",null,1],["trace_func","Tracer","Rails/classes/Tracer.html#method-c-trace_func","(*vars)","",null,1],["trace_var","Kernel","Rails/classes/Kernel.html#method-i-trace_var","(p1, p2 = v2)","<p>Controls tracing of assignments to global variables. The parameter +symbol_\nidentifies the variable (as …\n",null,1],["transact","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-transact","(&block)","",null,1],["transaction","ActiveModel::ObserverArray","Ruby/classes/ActiveModel/ObserverArray.html#method-i-transaction","()","",null,0],["transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-transaction","(options = {})","<p>Runs the given block in a database transaction, and returns the result of\nthe block.\n<p>Nested transactions …\n",null,0],["transaction","ActiveRecord::Transactions","Ruby/classes/ActiveRecord/Transactions.html#method-i-transaction","(options = {}, &block)","<p>See ActiveRecord::Transactions::ClassMethods for detailed documentation.\n",null,0],["transaction","ActiveRecord::Transactions::ClassMethods","Ruby/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-transaction","(options = {}, &block)","<p>See ActiveRecord::Transactions::ClassMethods for detailed documentation.\n",null,0],["transaction","PStore","Rails/classes/PStore.html#method-i-transaction","(read_only = false)","<p>Opens a new transaction for the data store.  Code executed inside a block\npassed to this method may read …\n",null,1],["transaction_joinable=","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-transaction_joinable-3D","(joinable)","",null,0],["transfer","Fiber","Rails/classes/Fiber.html#method-i-transfer","(*args)","<p>Transfer control to another fiber, resuming it from where it last stopped\nor starting it if it was not …\n",null,1],["transform","Psych::Nodes::Node","Rails/classes/Psych/Nodes/Node.html#method-i-transform","()","",null,1],["translate","AbstractController::Translation","Ruby/classes/AbstractController/Translation.html#method-i-translate","(*args)","",null,0],["translate","ActionView::Helpers::TranslationHelper","Ruby/classes/ActionView/Helpers/TranslationHelper.html#method-i-translate","(key, options = {})","<p>Delegates to <code>I18n#translate</code> but also performs three additional\nfunctions.\n<p>First, it’ll pass the <code>:rescue_format</code> …\n",null,0],["translate","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-translate","( string, tr1, tr2 )","<p>This is entirely Mike Stok’s beast\n",null,1],["translate_exception","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-translate_exception","(e, message)","",null,0],["translate_exception","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-translate_exception","(exception, message)","",null,0],["translate_exception","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-translate_exception","(exception, message)","",null,0],["translate_exception","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-translate_exception","(exception, message)","",null,0],["transliterate","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-transliterate","(string, replacement = \"?\")","<p>Replaces non-ASCII characters with an ASCII approximation, or if none\nexists, a replacement character …\n",null,0],["transliterate=","Iconv","Rails/classes/Iconv.html#method-i-transliterate-3D","(p1)","<p>Sets transliterate flag.\n",null,1],["transliterate?","Iconv","Rails/classes/Iconv.html#method-i-transliterate-3F","()","<p>Returns transliterate flag.\n",null,1],["transpose","Array","Rails/classes/Array.html#method-i-transpose","()","<p>Assumes that <code>self</code> is an array of arrays and transposes the\nrows and columns.\n\n<pre>a = [[1,2], [3,4], [5,6]] ...</pre>\n",null,1],["transpose","Matrix","Rails/classes/Matrix.html#method-i-transpose","()","<p>Returns the transpose of the matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">2</span>], [<span class=\"ruby-value\">3</span>,<span class=\"ruby-value\">4</span>], [<span class=\"ruby-value\">5</span>,<span class=\"ruby-value\">6</span>]]\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span> <span class=\"ruby-value\">2</span>\n     <span class=\"ruby-value\">3</span> <span class=\"ruby-value\">4</span>\n     <span class=\"ruby-value\">5</span> <span class=\"ruby-value\">6</span>\n<span class=\"ruby-constant\">Matrix</span>[[<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">2</span>], <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["trap","Kernel","Rails/classes/Kernel.html#method-i-trap","(*args)","<p>Specifies the handling of signals. The first parameter is a signal name (a\nstring such as “SIGALRM”, …\n",null,1],["trap","Signal","Rails/classes/Signal.html#method-c-trap","(*args)","<p>Specifies the handling of signals. The first parameter is a signal name (a\nstring such as “SIGALRM”, …\n",null,1],["traverse","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-traverse","(trail = [], &block)","<p>Recursively walk dependencies of this spec, executing the\n<code>block</code> for each hop.\n",null,1],["traverse","OpenSSL::ASN1","Rails/classes/OpenSSL/ASN1.html#method-c-traverse","(p1)","<p>If a block is given, it prints out each of the elements encountered. Block\nparameters are (in that order): …\n",null,1],["tree","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-tree","()","",null,1],["trigger","ActiveSupport::FileWatcher","Ruby/classes/ActiveSupport/FileWatcher.html#method-i-trigger","(files)","",null,0],["trigger","ActiveSupport::FileWatcher::Backend","Ruby/classes/ActiveSupport/FileWatcher/Backend.html#method-i-trigger","(files)","",null,0],["trivial?","Iconv","Rails/classes/Iconv.html#method-i-trivial-3F","()","<p>Returns trivial flag.\n",null,1],["true","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-true","( )","<p>UNTESTED\n",null,1],["truncate","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-truncate","(text, options = {})","<p>Truncates a given <code>text</code> after a given <code>:length</code> if\n<code>text</code> is longer than <code>:length</code> (defaults to 30). The\nlast …\n",null,0],["truncate","String","Ruby/classes/String.html#method-i-truncate","(length, options = {})","<p>Truncates a given <code>text</code> after a given <code>length</code> if\n<code>text</code> is longer than <code>length</code>:\n\n<pre>&quot;Once upon a time in a world ...</pre>\n",null,0],["truncate","BigDecimal","Rails/classes/BigDecimal.html#method-i-truncate","(p1 = v1)","<p>Truncate to the nearest 1, returning the result as a BigDecimal.\n<p>BigDecimal(‘3.14159’).truncate -&gt; …\n",null,1],["truncate","File","Rails/classes/File.html#method-c-truncate","(p1, p2)","<p>Truncates the file <em>file_name</em> to be at most <em>integer</em> bytes\nlong. Not available on all platforms.\n\n<pre>f = File.new(&quot;out&quot;, ...</pre>\n",null,1],["truncate","File","Rails/classes/File.html#method-i-truncate","(p1)","<p>Truncates <em>file</em> to at most <em>integer</em> bytes. The file must be\nopened for writing. Not available on all platforms. …\n",null,1],["truncate","Float","Rails/classes/Float.html#method-i-truncate","()","<p>Returns <em>flt</em> truncated to an <code>Integer</code>.\n",null,1],["truncate","Integer","Rails/classes/Integer.html#method-i-truncate","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,1],["truncate","Numeric","Rails/classes/Numeric.html#method-i-truncate","()","<p>Returns <em>num</em> truncated to an integer. <code>Numeric</code>\nimplements this by converting its value to a float and invoking …\n",null,1],["truncate","Pathname","Rails/classes/Pathname.html#method-i-truncate","(p1)","<p>See <code>File.truncate</code>.  Truncate the file to <code>length</code>\nbytes.\n",null,1],["truncate","Rake::Application","Rails/classes/Rake/Application.html#method-i-truncate","(string, width)","",null,1],["truncate","Rational","Rails/classes/Rational.html#method-i-truncate","(*args)","<p>Returns the truncated value (toward zero).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">truncate</span>      <span class=\"ruby-comment\">#=&gt; 3</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">truncate</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["truncate","StringIO","Rails/classes/StringIO.html#method-i-truncate","(p1)","<p>Truncates the buffer string to at most <em>integer</em> bytes. The\n<strong>strio</strong> must be opened for writing.\n",null,1],["truncate_output?","Rake::Application","Rails/classes/Rake/Application.html#method-i-truncate_output-3F","()","<p>We will truncate output if we are outputting to a TTY or if we’ve been\ngiven an explicit column width …\n",null,1],["trust","Delegator","Rails/classes/Delegator.html#method-i-trust","","<p>Trust both the object returned by __getobj__ and self.\n",null,1],["trust","Object","Rails/classes/Object.html#method-i-trust","()","<p>Removes the untrusted mark from <em>obj</em>.\n",null,1],["trust=","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-trust-3D","(p1)","",null,1],["trusted_cert_path","Gem::Security::Policy","Rails/classes/Gem/Security/Policy.html#method-c-trusted_cert_path","(cert, opt = {})","<p>Get the path to the file for this cert.\n",null,1],["try","NilClass","Ruby/classes/NilClass.html#method-i-try","(*args)","<p>Calling <code>try</code> on <code>nil</code> always returns\n<code>nil</code>. It becomes specially helpful when navigating through\nassociations …\n",null,0],["try","Object","Ruby/classes/Object.html#method-i-try","(*a, &b)","<p>Invokes the method identified by the symbol <code>method</code>, passing it\nany arguments and/or the block specified, …\n",null,0],["try_activate","Gem","Rails/classes/Gem.html#method-c-try_activate","(path)","<p>Try to activate a gem containing <code>path</code>. Returns true if\nactivation succeeded or wasn’t needed because …\n",null,1],["try_const","Object","Rails/classes/Object.html#method-i-try_const","(const, headers = nil, opt = \"\", &b)","<p>Returns whether or not the Constant <code>const</code> is defined.\n<p>See also <code>have_const</code>\n",null,1],["try_convert","Array","Rails/classes/Array.html#method-c-try_convert","(p1)","<p>Tries to convert <code>obj</code> into an array, using <code>to_ary</code>\nmethod.  Returns the converted array or <code>nil</code> if\n<code>obj</code> cannot …\n",null,1],["try_convert","Hash","Rails/classes/Hash.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into a hash, using to_hash method. Returns\nconverted hash or nil if <em>obj</em> cannot be …\n",null,1],["try_convert","IO","Rails/classes/IO.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into an IO, using to_io method. Returns\nconverted IO or nil if <em>obj</em> cannot be converted …\n",null,1],["try_convert","Regexp","Rails/classes/Regexp.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into a Regexp, using to_regexp method. Returns\nconverted regexp or nil if <em>obj</em> cannot …\n",null,1],["try_convert","String","Rails/classes/String.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into a String, using to_str method. Returns\nconverted string or nil if <em>obj</em> cannot …\n",null,1],["try_lock","Mutex","Rails/classes/Mutex.html#method-i-try_lock","()","<p>Attempts to obtain the lock and returns immediately. Returns\n<code>true</code> if the lock was granted.\n",null,1],["try_mon_enter","MonitorMixin","Rails/classes/MonitorMixin.html#method-i-try_mon_enter","()","<p>For backward compatibility\n",null,1],["try_to_load_dependency","ActiveRecord::TestFixtures::ClassMethods","Ruby/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-try_to_load_dependency","(file_name)","",null,0],["try_type","Object","Rails/classes/Object.html#method-i-try_type","(type, headers = nil, opt = \"\", &b)","<p>Returns whether or not the static type <code>type</code> is defined.\n<p>See also <code>have_type</code>\n",null,1],["tsort","TSort","Rails/classes/TSort.html#method-i-tsort","()","<p>Returns a topologically sorted array of nodes. The array is sorted from\nchildren to parents, i.e. the …\n",null,1],["tsort_each","TSort","Rails/classes/TSort.html#method-i-tsort_each","()","<p>The iterator version of the #tsort method.\n<code><em>obj</em>.tsort_each</code> is similar to\n<code><em>obj</em>.tsort.each</code>, but modification …\n",null,1],["tsort_each_child","Rails::Initializable::Collection","Ruby/classes/Rails/Initializable/Collection.html#method-i-tsort_each_child","(initializer, &block)","",null,0],["tsort_each_child","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-tsort_each_child","(node, &block)","",null,1],["tsort_each_child","TSort","Rails/classes/TSort.html#method-i-tsort_each_child","(node)","<p>Should be implemented by a extended class.\n<p>#tsort_each_child is used to iterate for child nodes of <em>node</em> …\n",null,1],["tsort_each_node","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-tsort_each_node","(&block)","",null,1],["tsort_each_node","TSort","Rails/classes/TSort.html#method-i-tsort_each_node","()","<p>Should be implemented by a extended class.\n<p>#tsort_each_node is used to iterate for all nodes over a graph. …\n",null,1],["tsvector","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html#method-i-tsvector","(*args)","",null,0],["tt?","RDoc::Markup::Formatter","Rails/classes/RDoc/Markup/Formatter.html#method-i-tt-3F","(tag)","<p>Is <code>tag</code> a tt tag?\n",null,1],["tt_sections","RDoc::Markup::ToTtOnly","Rails/classes/RDoc/Markup/ToTtOnly.html#method-i-tt_sections","(text)","<p>Extracts tt sections from <code>text</code>\n",null,1],["tty?","Gem::MockGemUi::TTY","Rails/classes/Gem/MockGemUi/TTY.html#method-i-tty-3F","()","",null,1],["tty?","Gem::StreamUI","Rails/classes/Gem/StreamUI.html#method-i-tty-3F","()","",null,1],["tty?","IO","Rails/classes/IO.html#method-i-tty-3F","()","<p>Returns <code>true</code> if <em>ios</em> is associated with a terminal\ndevice (tty), <code>false</code> otherwise.\n\n<pre>File.new(&quot;testfile&quot;).isatty ...</pre>\n",null,1],["tty?","StringIO","Rails/classes/StringIO.html#method-i-tty-3F","()","",null,1],["tty_output=","Rake::Application","Rails/classes/Rake/Application.html#method-i-tty_output-3D","( tty_output_state )","<p>Override the detected TTY output state (mostly for testing)\n",null,1],["tty_output?","Rake::Application","Rails/classes/Rake/Application.html#method-i-tty_output-3F","()","<p>True if we are outputting to TTY, false otherwise\n",null,1],["tuesday?","Date","Rails/classes/Date.html#method-i-tuesday-3F","()","<p>Returns true if the date is Tuesday.\n",null,1],["tuesday?","Time","Rails/classes/Time.html#method-i-tuesday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Tuesday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">1991</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">19</span>)      <span class=\"ruby-comment\">#=&gt; 1991-02-19 00:00:00 -0600 ...</span>\n</pre>\n",null,1],["tv_nsec","Time","Rails/classes/Time.html#method-i-tv_nsec","()","<p>Returns just the number of nanoseconds for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>        <span class=\"ruby-comment\">#=&gt; 2007-11-17 15:18:03 +0900</span>\n<span class=\"ruby-string\">&quot;%10.9f&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["tv_sec","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-tv_sec","()","",null,0],["tv_sec","Time","Rails/classes/Time.html#method-i-tv_sec","()","<p>Returns the value of <em>time</em> as an integer number of seconds since\nthe Epoch.\n\n<pre>t = Time.now\n&quot;%10.5f&quot; % t.to_f ...</pre>\n",null,1],["tv_usec","Time","Rails/classes/Time.html#method-i-tv_usec","()","<p>Returns just the number of microseconds for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>        <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:03:26 -0600</span>\n<span class=\"ruby-string\">&quot;%10.6f&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["type","Gem::Dependency","Rails/classes/Gem/Dependency.html#method-i-type","()","<p>Dependency type.\n",null,1],["type","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-type","()","",null,1],["type","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-type","()","<p>‘module’ or ‘class’\n",null,1],["type","RDoc::MethodAttr","Rails/classes/RDoc/MethodAttr.html#method-i-type","()","<p>Type of method/attribute (class or instance)\n",null,1],["type","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-type","()","<p>returns the cmsg type as an integer.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">Socket</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">AncillaryData</span>.<span class=\"ruby-identifier\">new</span>(:<span class=\"ruby-constant\">INET6</span>, :<span class=\"ruby-constant\">IPV6</span>, :<span class=\"ruby-constant\">PKTINFO</span>, <span class=\"ruby-string\">&quot;&quot;</span>).<span class=\"ruby-identifier\">type</span>\n<span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["type2name","Win32::Registry","Rails/classes/Win32/Registry.html#method-c-type2name","(type)","<p>Convert registry type value to readable string.\n",null,1],["type=","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-type-3D","(p1)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-type_cast","(value, column)","<p>QUOTING ==================================================\n",null,0],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-type_cast","(value, column)","",null,0],["type_cast","ActiveRecord::ConnectionAdapters::Quoting","Ruby/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-type_cast","(value, column)","<p>Cast a <code>value</code> to a type that the database understands. For\nexample, SQLite does not understand dates, …\n",null,0],["type_cast_attribute_for_write","ActiveRecord::AttributeMethods::Serialization","Ruby/classes/ActiveRecord/AttributeMethods/Serialization.html#method-i-type_cast_attribute_for_write","(column, value)","",null,0],["type_params","Net::HTTPHeader","Rails/classes/Net/HTTPHeader.html#method-i-type_params","()","<p>Any parameters specified for the content type, returned as a Hash. For\nexample, a header of Content-Type: …\n",null,1],["type_to_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-type_to_sql","(type, limit = nil, precision = nil, scale = nil)","<p>Maps logical Rails types to MySQL-specific data types.\n",null,0],["type_to_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-type_to_sql","(type, limit = nil, precision = nil, scale = nil)","<p>Maps logical Rails types to PostgreSQL-specific data types.\n",null,0],["typealias","DL::Importer","Rails/classes/DL/Importer.html#method-i-typealias","(alias_type, orig_type)","",null,1],["typecode=","URI::FTP","Rails/classes/URI/FTP.html#method-i-typecode-3D","(typecode)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["typekind","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-typekind","()","<p>Returns number which represents type.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Word 10.0 Object Library', 'Documents') ...</pre>\n",null,1],["typelibs","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-c-typelibs","()","<p>Returns array of type libraries. This method will be OBSOLETE. Use\nWIN32OLE_TYPELIB.typelibs.collect{|t| …\n",null,1],["typelibs","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-c-typelibs","()","<p>Returns the array of WIN32OLE_TYPELIB object.\n\n<pre>tlibs = WIN32OLE_TYPELIB.typelibs</pre>\n",null,1],["types","DL::Stack","Rails/classes/DL/Stack.html#method-i-types","()","",null,1],["u","ERB::Util","Rails/classes/ERB/Util.html#method-c-u","(s)","",null,1],["u","Matrix::LUPDecomposition","Rails/classes/Matrix/LUPDecomposition.html#method-i-u","()","<p>Returns the upper triangular factor <code>U</code>\n",null,1],["u_unpack","ActiveSupport::Multibyte::Unicode","Ruby/classes/ActiveSupport/Multibyte/Unicode.html#method-i-u_unpack","(string)","<p>Unpack the string at codepoints boundaries. Raises an EncodingError when\nthe encoding of the string isn’t …\n",null,0],["udp","Addrinfo","Rails/classes/Addrinfo.html#method-c-udp","(p1, p2)","<p>returns an addrinfo object for UDP address.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">udp</span>(<span class=\"ruby-string\">&quot;localhost&quot;</span>, <span class=\"ruby-string\">&quot;daytime&quot;</span>) <span class=\"ruby-comment\">#=&gt; #&lt;Addrinfo: 127.0.0.1:13 ...</span>\n</pre>\n",null,1],["udp_server_loop","Socket","Rails/classes/Socket.html#method-c-udp_server_loop","(host=nil, port)","<p>creates a UDP/IP server on <em>port</em> and calls the block for each\nmessage arrived. The block is called with …\n",null,1],["udp_server_loop_on","Socket","Rails/classes/Socket.html#method-c-udp_server_loop_on","(sockets)","<p>Run UDP/IP server loop on the given sockets.\n<p>The return value of Socket.udp_server_sockets is appropriate …\n",null,1],["udp_server_recv","Socket","Rails/classes/Socket.html#method-c-udp_server_recv","(sockets)","<p>Receive UDP/IP packets from the given <em>sockets</em>. For each packet\nreceived, the block is called.\n<p>The block …\n",null,1],["udp_server_sockets","Socket","Rails/classes/Socket.html#method-c-udp_server_sockets","(host=nil, port)","<p>Creates UDP/IP sockets for a UDP server.\n<p>If no block given, it returns an array of sockets.\n<p>If a block …\n",null,1],["ui","Gem","Rails/classes/Gem.html#method-c-ui","()","<p>Lazily loads DefaultUserInteraction and returns the default UI.\n",null,1],["ui","Gem::DefaultUserInteraction","Rails/classes/Gem/DefaultUserInteraction.html#method-c-ui","()","<p>Return the default UI.\n",null,1],["ui","Gem::DefaultUserInteraction","Rails/classes/Gem/DefaultUserInteraction.html#method-i-ui","()","<p>See DefaultUserInteraction::ui\n",null,1],["ui=","Gem::DefaultUserInteraction","Rails/classes/Gem/DefaultUserInteraction.html#method-i-ui-3D","(new_ui)","<p>See DefaultUserInteraction::ui=\n",null,1],["ui=","Gem::DefaultUserInteraction","Rails/classes/Gem/DefaultUserInteraction.html#method-c-ui-3D","(new_ui)","<p>Set the default UI.  If the default UI is never explicitly set, a simple\nconsole based UserInteraction …\n",null,1],["uid","File::Stat","Rails/classes/File/Stat.html#method-i-uid","()","<p>Returns the numeric user id of the owner of <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">uid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,1],["uid","Process","Rails/classes/Process.html#method-c-uid","()","<p>Returns the (real) user ID of this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">uid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,1],["uid=","Process","Rails/classes/Process.html#method-c-uid-3D","(p1)","<p>Sets the (integer) user ID for this process. Not available on all\nplatforms.\n",null,1],["uid_copy","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-uid_copy","(set, mailbox)","<p>As for #copy(), but <code>set</code> contains unique identifiers.\n",null,1],["uid_fetch","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-uid_fetch","(set, attr)","<p>As for #fetch(), but <code>set</code> contains unique identifiers.\n",null,1],["uid_search","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-uid_search","(keys, charset = nil)","<p>As for #search(), but returns unique identifiers.\n",null,1],["uid_sort","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-uid_sort","(sort_keys, search_keys, charset)","<p>As for #sort(), but returns an array of unique identifiers.\n",null,1],["uid_store","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-uid_store","(set, attr, flags)","<p>As for #store(), but <code>set</code> contains unique identifiers.\n",null,1],["uid_thread","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-uid_thread","(algorithm, search_keys, charset)","<p>As for #thread(), but returns unique identifiers instead of message\nsequence numbers.\n",null,1],["uidl","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-uidl","()","",null,1],["umask","File","Rails/classes/File.html#method-c-umask","(*args)","<p>Returns the current umask value for this process. If the optional argument\nis given, set the umask to …\n",null,1],["umount","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-umount","(dir)","",null,1],["unadvise","WIN32OLE_EVENT","Rails/classes/WIN32OLE_EVENT.html#method-i-unadvise","()","<p>disconnects OLE server. If this method called, then the WIN32OLE_EVENT\nobject does not receive the OLE …\n",null,1],["unalias_command","Shell","Rails/classes/Shell.html#method-c-unalias_command","(ali)","",null,1],["unalias_command","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-unalias_command","(ali)","",null,1],["unbind","DL::Function","Rails/classes/DL/Function.html#method-i-unbind","()","",null,1],["unbind","Method","Rails/classes/Method.html#method-i-unbind","()","<p>Dissociates <em>meth</em> from its current receiver. The resulting\n<code>UnboundMethod</code> can subsequently be bound to …\n",null,1],["unbind_at_call","DL::Function","Rails/classes/DL/Function.html#method-i-unbind_at_call","()","",null,1],["unbind_at_call","DL::TempFunction","Rails/classes/DL/TempFunction.html#method-i-unbind_at_call","()","",null,1],["uncached","ActiveRecord::ConnectionAdapters::QueryCache","Ruby/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-uncached","()","<p>Disable the query cache within the block.\n",null,0],["uncached","ActiveRecord::QueryCache::ClassMethods","Ruby/classes/ActiveRecord/QueryCache/ClassMethods.html#method-i-uncached","(&block)","<p>Disable the query cache within the block if Active Record is configured.\n",null,0],["unconverted_fields?","CSV","Rails/classes/CSV.html#method-i-unconverted_fields-3F","()","<p>Returns <code>true</code> if unconverted_fields() to parsed results.  See\nCSV::new for details.\n",null,1],["uncountable","ActiveSupport::Inflector::Inflections","Ruby/classes/ActiveSupport/Inflector/Inflections.html#method-i-uncountable","(*words)","<p>Add uncountable words that shouldn’t be attempted inflected.\n<p>Examples:\n\n<pre>uncountable &quot;money&quot;\nuncountable ...</pre>\n",null,0],["uncountable?","ActiveModel::Naming","Ruby/classes/ActiveModel/Naming.html#method-c-uncountable-3F","(record_or_class)","<p>Identifies whether the class name of a record or class is uncountable.\nExamples:\n\n<pre>ActiveModel::Naming.uncountable?(Sheep) ...</pre>\n",null,0],["uncountable?","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-uncountable-3F","()","",null,0],["undef_system_command","Shell","Rails/classes/Shell.html#method-c-undef_system_command","(command)","",null,1],["undef_system_command","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-c-undef_system_command","(command)","",null,1],["undefine_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","Ruby/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-undefine_attribute_methods","()","<p>Removes all the previously dynamically defined methods from the class\n",null,0],["undefine_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-undefine_attribute_methods","()","",null,0],["undefine_attribute_methods","ActiveRecord::AttributeMethods::Read::ClassMethods","Ruby/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-undefine_attribute_methods","()","",null,0],["undefine_finalizer","ObjectSpace","Rails/classes/ObjectSpace.html#method-c-undefine_finalizer","(p1)","<p>Removes all finalizers for <em>obj</em>.\n",null,1],["underscore","ActiveSupport::Inflector","Ruby/classes/ActiveSupport/Inflector.html#method-i-underscore","(camel_cased_word)","<p>Makes an underscored, lowercase form from the expression in the string.\n<p>Changes ‘::’ to ‘/’ to convert …\n",null,0],["underscore","String","Ruby/classes/String.html#method-i-underscore","()","<p>The reverse of <code>camelize</code>. Makes an underscored, lowercase form\nfrom the expression in the string.\n<p><code>underscore</code> ...\n",null,0],["undoc_params","RDoc::Stats","Rails/classes/RDoc/Stats.html#method-i-undoc_params","(method)","<p>Determines which parameters in <code>method</code> were not documented. \nReturns a total parameter count and an Array …\n",null,1],["unescape","Object","Ruby/classes/Object.html#method-i-unescape","(str, escaped = /%[a-fA-F\\d]{2}/)","",null,0],["unescape","CGI","Rails/classes/CGI.html#method-c-unescape","(string,encoding=@@accept_charset)","<p>URL-decode a string with encoding(optional).\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">string</span> = <span class=\"ruby-constant\">CGI</span><span class=\"ruby-operator\">::</span><span class=\"ruby-identifier\">unescape</span>(<span class=\"ruby-string\">&quot;%27Stop%21%27+said+Fred&quot;</span>)\n   <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["unescape","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-unescape","(str)","",null,1],["unescape","URI::Escape","Rails/classes/URI/Escape.html#method-i-unescape","(*arg)","<p>Synopsis\n\n<pre>URI.unescape(str)</pre>\n<p>Args\n",null,1],["unescape","URI::Parser","Rails/classes/URI/Parser.html#method-i-unescape","(str, escaped = @regexp[:ESCAPED])","<p>Args\n<p><code>str</code> &mdash; String to remove escapes from\n<p><code>unsafe</code> &mdash; Regexp to apply. Defaults to self.regexp\n",null,1],["unescape","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-i-unescape","(str)","",null,1],["unescapeElement","CGI","Rails/classes/CGI.html#method-c-unescapeElement","(string, *elements)","<p>Undo escaping such as that done by CGI::escapeElement()\n\n<pre>print CGI::unescapeElement(\n        CGI::escapeHTML('&lt;BR&gt;&lt;A ...</pre>\n",null,1],["unescapeHTML","CGI","Rails/classes/CGI.html#method-c-unescapeHTML","(string)","<p>Unescape a string that has been HTML-escaped\n\n<pre>CGI::unescapeHTML(&quot;Usage: foo &amp;quot;bar&amp;quot; &amp;lt;baz&amp;gt;&quot;) ...</pre>\n",null,1],["unescape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-unescape_bytea","(value)","<p>Unescapes bytea output from a database to the binary string it represents.\nNOTE: This is NOT an inverse …\n",null,0],["unescape_element","CGI","Rails/classes/CGI.html#method-c-unescape_element","(str)","<p>Synonym for CGI::unescapeElement(str)\n",null,1],["unescape_form","WEBrick::HTTPUtils","Rails/classes/WEBrick/HTTPUtils.html#method-i-unescape_form","(str)","",null,1],["unescape_html","CGI","Rails/classes/CGI.html#method-c-unescape_html","(str)","<p>Synonym for CGI::unescapeHTML(str)\n",null,1],["unescape_path","ActionDispatch::FileHandler","Ruby/classes/ActionDispatch/FileHandler.html#method-i-unescape_path","(path)","",null,0],["unget","RDoc::Markup::Parser","Rails/classes/RDoc/Markup/Parser.html#method-i-unget","()","<p>Returns the current token to the token stream\n",null,1],["unget_tk","RDoc::Parser::RubyTools","Rails/classes/RDoc/Parser/RubyTools.html#method-i-unget_tk","(tk)","<p>Returns <code>tk</code> to the scanner\n",null,1],["ungetbyte","IO","Rails/classes/IO.html#method-i-ungetbyte","(p1)","<p>Pushes back bytes (passed as a parameter) onto <em>ios</em>, such that a\nsubsequent buffered read will return …\n",null,1],["ungetbyte","StringIO","Rails/classes/StringIO.html#method-i-ungetbyte","(p1)","<p>See IO#ungetbyte\n",null,1],["ungetbyte","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-ungetbyte","(p1)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["ungetc","IO","Rails/classes/IO.html#method-i-ungetc","(p1)","<p>Pushes back one character (passed as a parameter) onto <em>ios</em>, such\nthat a subsequent buffered character …\n",null,1],["ungetc","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-ungetc","(c)","<p>Pushes character <code>c</code> back onto the stream such that a subsequent\nbuffered character read will return it. …\n",null,1],["ungetc","RubyLex","Rails/classes/RubyLex.html#method-i-ungetc","(c = nil)","",null,1],["ungetc","StringIO","Rails/classes/StringIO.html#method-i-ungetc","(p1)","<p>Pushes back one character (passed as a parameter) onto\n<strong>strio</strong> such that a subsequent buffered read will …\n",null,1],["ungetc","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-ungetc","(p1)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["ungetch","Curses","Rails/classes/Curses.html#method-c-ungetch","(p1)","<p>Places <code>ch</code> back onto the input queue to be returned by the next\ncall to Curses.getch.\n<p>There is just one …\n",null,1],["ungetmouse","Curses","Rails/classes/Curses.html#method-c-ungetmouse","(p1)","<p>It pushes a KEY_MOUSE event onto the input queue, and associates with that\nevent the given state data …\n",null,1],["uninstall","Plugin","Ruby/classes/Plugin.html#method-i-uninstall","()","",null,0],["uninstall","Gem::Uninstaller","Rails/classes/Gem/Uninstaller.html#method-i-uninstall","()","<p>Performs the uninstall of the gem.  This removes the spec, the Gem\ndirectory, and the cached .gem file. …\n",null,1],["uninstall_doc","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-i-uninstall_doc","()","<p>Remove RDoc and RI documentation\n",null,1],["uninstall_gem","Gem::Uninstaller","Rails/classes/Gem/Uninstaller.html#method-i-uninstall_gem","(spec)","<p>Uninstalls gem <code>spec</code>\n",null,1],["uninstall_old_gemcutter","Gem::Commands::SetupCommand","Rails/classes/Gem/Commands/SetupCommand.html#method-i-uninstall_old_gemcutter","()","",null,1],["union","DL::Importer","Rails/classes/DL/Importer.html#method-i-union","(signature)","",null,1],["union","Regexp","Rails/classes/Regexp.html#method-c-union","(*args)","<p>Return a <code>Regexp</code> object that is the union of the given\n<em>pattern</em>s, i.e., will match any of its parts. The …\n",null,1],["union","Set","Rails/classes/Set.html#method-i-union","(enum)","",null,1],["uniq","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-uniq","(value = true)","<p>Specifies whether the records should be unique or not. For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">select</span>(:<span class=\"ruby-identifier\">name</span>)\n<span class=\"ruby-comment\"># =&gt; Might return ...</span>\n</pre>\n",null,0],["uniq","Array","Rails/classes/Array.html#method-i-uniq","()","<p>Returns a new array by removing duplicate values in <code>self</code>. If a\nblock is given, it will use the return …\n",null,1],["uniq!","Array","Rails/classes/Array.html#method-i-uniq-21","()","<p>Removes duplicate elements from <code>self</code>. If a block is given, it\nwill use the return value of the block …\n",null,1],["uniq_by","Array","Ruby/classes/Array.html#method-i-uniq_by","()","<p>Returns an unique array based on the criteria given as a <code>Proc</code>.\n\n<pre class=\"ruby\">[<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>].<span class=\"ruby-identifier\">uniq_by</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">i</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">i</span>.<span class=\"ruby-identifier\">odd?</span> } <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,0],["uniq_by!","Array","Ruby/classes/Array.html#method-i-uniq_by-21","()","<p>Same as uniq_by, but modifies self.\n",null,0],["unique_classes","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-unique_classes","()","<p>Returns the unique classes discovered by RDoc.\n<p>::complete must have been called prior to using this method. …\n",null,1],["unique_classes_and_modules","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-unique_classes_and_modules","()","<p>Returns the unique classes and modules discovered by RDoc. ::complete must\nhave been called prior to …\n",null,1],["unique_id","Net::POPMail","Rails/classes/Net/POPMail.html#method-i-unique_id","()","<p>Returns the unique-id of the message. Normally the unique-id is a hash\nstring of the message.\n<p>This method …\n",null,1],["unique_modules","RDoc::TopLevel","Rails/classes/RDoc/TopLevel.html#method-c-unique_modules","()","<p>Returns the unique modules discovered by RDoc. ::complete must have been\ncalled prior to using this method. …\n",null,1],["unit","Matrix","Rails/classes/Matrix.html#method-c-unit","(n)","",null,1],["unitary?","Matrix","Rails/classes/Matrix.html#method-i-unitary-3F","()","<p>Returns <code>true</code> is this is a unitary matrix Raises an error if\nmatrix is not square.\n",null,1],["unix","Addrinfo","Rails/classes/Addrinfo.html#method-c-unix","(p1, p2 = v2)","<p>returns an addrinfo object for UNIX socket address.\n<p><em>socktype</em> specifies the socket type. If it is omitted, ...\n",null,1],["unix","Socket","Rails/classes/Socket.html#method-c-unix","(path)","<p>creates a new socket connected to path using UNIX socket socket.\n<p>If a block is given, the block is called …\n",null,1],["unix?","Addrinfo","Rails/classes/Addrinfo.html#method-i-unix-3F","()","<p>returns true if addrinfo is UNIX address. returns false otherwise.\n\n<pre>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).unix? ...</pre>\n",null,1],["unix?","Rake::Application","Rails/classes/Rake/Application.html#method-i-unix-3F","()","",null,1],["unix_path","Addrinfo","Rails/classes/Addrinfo.html#method-i-unix_path","()","<p>Returns the socket path as a string.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Addrinfo</span>.<span class=\"ruby-identifier\">unix</span>(<span class=\"ruby-string\">&quot;/tmp/sock&quot;</span>).<span class=\"ruby-identifier\">unix_path</span>       <span class=\"ruby-comment\">#=&gt; &quot;/tmp/sock&quot;</span>\n</pre>\n",null,1],["unix_rights","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-c-unix_rights","(*args)","<p>Creates a new Socket::AncillaryData object which contains file descriptors\nas data.\n\n<pre>p Socket::AncillaryData.unix_rights(STDERR) ...</pre>\n",null,1],["unix_rights","Socket::AncillaryData","Rails/classes/Socket/AncillaryData.html#method-i-unix_rights","()","<p>returns the array of IO objects for SCM_RIGHTS control message in UNIX\ndomain socket.\n<p>The class of the …\n",null,1],["unix_server_loop","Socket","Rails/classes/Socket.html#method-c-unix_server_loop","(path)","<p>creates a UNIX socket server on <em>path</em>. It calls the block for each\nsocket accepted.\n<p>If <em>host</em> is specified, …\n",null,1],["unix_server_socket","Socket","Rails/classes/Socket.html#method-c-unix_server_socket","(path)","<p>creates a UNIX server socket on <em>path</em>\n<p>If no block given, it returns a listening socket.\n<p>If a block is given, …\n",null,1],["unknown","Logger","Rails/classes/Logger.html#method-i-unknown","(progname = nil, &block)","<p>Log an <code>UNKNOWN</code> message.  This will be printed no matter what\nthe logger’s level.\n<p>See #info for more information. …\n",null,1],["unlink","Dir","Rails/classes/Dir.html#method-c-unlink","(p1)","<p>Deletes the named directory. Raises a subclass of\n<code>SystemCallError</code> if the directory isn’t empty.\n",null,1],["unlink","File","Rails/classes/File.html#method-c-unlink","(*args)","<p>Deletes the named files, returning the number of names passed as arguments.\nRaises an exception on any …\n",null,1],["unlink","Pathname","Rails/classes/Pathname.html#method-i-unlink","()","<p>Removes a file or directory, using <code>File.unlink</code> or\n<code>Dir.unlink</code> as necessary.\n",null,1],["unlink","Shell::CommandProcessor","Rails/classes/Shell/CommandProcessor.html#method-i-unlink","(path)","<p>CommandProcessor#unlink(path)\n\n<pre>same as:\n  Dir#unlink  (when path is directory)\n  File#unlink (when path ...</pre>\n",null,1],["unlink","Tempfile","Rails/classes/Tempfile.html#method-i-unlink","()","<p>Unlinks (deletes) the file from the filesystem. One should always unlink\nthe file after using it, as …\n",null,1],["unlock","Mutex","Rails/classes/Mutex.html#method-i-unlock","()","<p>Releases the lock. Raises <code>ThreadError</code> if <code>mutex</code>\nwasn’t locked by the current thread.\n",null,1],["unlock","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-unlock","(path, body, initheader = nil)","<p>Sends a UNLOCK request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["unlock","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-unlock","(path, body, initheader = nil)","<p>Sends a UNLOCK request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,1],["unmask_protected_sequences","RDoc::Markup::AttributeManager","Rails/classes/RDoc/Markup/AttributeManager.html#method-i-unmask_protected_sequences","()","<p>Unescapes special sequences of text\n",null,1],["unmemoize_all","ActiveSupport::Memoizable::InstanceMethods","Ruby/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-i-unmemoize_all","()","",null,0],["unmount","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-unmount","(dir)","<p>Unmounts <code>dir</code>\n",null,1],["unnormalize","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-unnormalize","( string, entities=nil, filter=nil )","<p>Unescapes all possible entities\n",null,1],["unnormalize","REXML::Text","Rails/classes/REXML/Text.html#method-c-unnormalize","( string, doctype=nil, filter=nil, illegal=nil )","<p>Unescapes all possible entities\n",null,1],["unnormalized","REXML::Entity","Rails/classes/REXML/Entity.html#method-i-unnormalized","()","<p>Evaluates to the unnormalized value of this entity; that is, replacing all\nentities – both %ent; and …\n",null,1],["unpack","DL::Packer","Rails/classes/DL/Packer.html#method-i-unpack","(ary)","",null,1],["unpack","DL::Stack","Rails/classes/DL/Stack.html#method-i-unpack","(ary)","",null,1],["unpack","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-unpack","(directory)","<p>Unpacks the gem into the given directory.\n",null,1],["unpack","Socket::Option","Rails/classes/Socket/Option.html#method-i-unpack","(p1)","<p>Calls String#unpack on sockopt.data.\n\n<pre>sockopt = Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, [1].pack(&quot;i&quot;)) ...</pre>\n",null,1],["unpack","String","Rails/classes/String.html#method-i-unpack","(p1)","<p>Decodes <em>str</em> (which may contain binary data) according to the\nformat string, returning an array of each …\n",null,1],["unpack_sockaddr_in","Socket","Rails/classes/Socket.html#method-c-unpack_sockaddr_in","(p1)","<p>Unpacks <em>sockaddr</em> into port and ip_address.\n<p><em>sockaddr</em> should be a string or an addrinfo for AF_INET/AF_INET6.\n...\n",null,1],["unpack_sockaddr_un","Socket","Rails/classes/Socket.html#method-c-unpack_sockaddr_un","(p1)","<p>Unpacks <em>sockaddr</em> into path.\n<p><em>sockaddr</em> should be a string or an addrinfo for AF_UNIX.\n\n<pre>sockaddr = Socket.sockaddr_un(&quot;/tmp/sock&quot;) ...</pre>\n",null,1],["unpackdw","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-unpackdw","(dw)","",null,1],["unpackqw","Win32::Registry::API","Rails/classes/Win32/Registry/API.html#method-i-unpackqw","(qw)","",null,1],["unregist","DRb::ExtServManager","Rails/classes/DRb/ExtServManager.html#method-i-unregist","(name)","",null,1],["unregister","Mime::Type","Ruby/classes/Mime/Type.html#method-c-unregister","(symbol)","<p>This method is opposite of register method.\n<p>Usage:\n<p>Mime::Type.unregister(:mobile)\n",null,0],["unregister_command","Gem::CommandManager","Rails/classes/Gem/CommandManager.html#method-i-unregister_command","(command)","<p>Unregister the Symbol <code>command</code> as a gem command.\n",null,1],["unresolved_deps","Gem","Rails/classes/Gem.html#method-c-unresolved_deps","()","",null,1],["unscan","StringScanner","Rails/classes/StringScanner.html#method-i-unscan","()","<p>Set the scan pointer to the previous position.  Only one previous position\nis remembered, and it changes …\n",null,1],["unserialize","ActiveRecord::AttributeMethods::Serialization::Attribute","Ruby/classes/ActiveRecord/AttributeMethods/Serialization/Attribute.html#method-i-unserialize","()","",null,0],["unserialized_value","ActiveRecord::AttributeMethods::Serialization::Attribute","Ruby/classes/ActiveRecord/AttributeMethods/Serialization/Attribute.html#method-i-unserialized_value","()","",null,0],["unshift","Array","Rails/classes/Array.html#method-i-unshift","(*args)","<p>Prepends objects to the front of <code>self</code>, moving other elements\nupwards.\n\n<pre>a = [ &quot;b&quot;, &quot;c&quot;, &quot;d&quot; ]\na.unshift(&quot;a&quot;) ...</pre>\n",null,1],["unshift","REXML::Parent","Rails/classes/REXML/Parent.html#method-i-unshift","( object )","",null,1],["unshift","REXML::Parsers::BaseParser","Rails/classes/REXML/Parsers/BaseParser.html#method-i-unshift","(token)","<p>Push an event back on the head of the stream.  This method has\n(theoretically) infinite depth.\n",null,1],["unshift","REXML::Parsers::PullParser","Rails/classes/REXML/Parsers/PullParser.html#method-i-unshift","(token)","",null,1],["unsigned_value","DL::ValueUtil","Rails/classes/DL/ValueUtil.html#method-i-unsigned_value","(val, ty)","",null,1],["unsubscribe","ActiveSupport::Notifications","Ruby/classes/ActiveSupport/Notifications.html#method-c-unsubscribe","(args)","",null,0],["unsubscribe","ActiveSupport::Notifications::Fanout","Ruby/classes/ActiveSupport/Notifications/Fanout.html#method-i-unsubscribe","(subscriber)","",null,0],["unsubscribe","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-unsubscribe","(mailbox)","<p>Sends a UNSUBSCRIBE command to remove the specified <code>mailbox</code>\nname from the server’s set of “active” …\n",null,1],["untaint","Delegator","Rails/classes/Delegator.html#method-i-untaint","","<p>Untaint both the object returned by __getobj__ and self.\n",null,1],["untaint","Object","Rails/classes/Object.html#method-i-untaint","()","<p>Removes the taint from <em>obj</em>.\n",null,1],["untaint","Pathname","Rails/classes/Pathname.html#method-i-untaint","()","",null,1],["until","ActiveSupport::Duration","Ruby/classes/ActiveSupport/Duration.html#method-i-until","(time = ::Time.current)","",null,0],["until","Numeric","Ruby/classes/Numeric.html#method-i-until","(time = ::Time.current)","<p>Reads best with argument:  10.minutes.until(time)\n",null,0],["untrace_var","Kernel","Rails/classes/Kernel.html#method-i-untrace_var","(p1, p2 = v2)","<p>Removes tracing for the specified command on the given global variable and\nreturns <code>nil</code>. If no command …\n",null,1],["untrust","Delegator","Rails/classes/Delegator.html#method-i-untrust","","<p>Untrust both the object returned by __getobj__ and self.\n",null,1],["untrust","Object","Rails/classes/Object.html#method-i-untrust","()","<p>Marks <em>obj</em> as untrusted.\n",null,1],["untrusted?","Object","Rails/classes/Object.html#method-i-untrusted-3F","()","<p>Returns <code>true</code> if the object is untrusted.\n",null,1],["unused","Zlib::GzipReader","Rails/classes/Zlib/GzipReader.html#method-i-unused","()","<p>Returns the rest of the data which had read for parsing gzip format, or\n<code>nil</code> if the whole gzip file is ...\n",null,1],["up","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-up","()","",null,0],["upcase","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-i-upcase","()","<p>Convert characters in the string to uppercase.\n<p>Example:\n\n<pre>'Laurent, où sont les tests ?'.mb_chars.upcase.to_s ...</pre>\n",null,0],["upcase","String","Rails/classes/String.html#method-i-upcase","()","<p>Returns a copy of <em>str</em> with all lowercase letters replaced with\ntheir uppercase counterparts. The operation …\n",null,1],["upcase","Symbol","Rails/classes/Symbol.html#method-i-upcase","()","<p>Same as <code>sym.to_s.upcase.intern</code>.\n",null,1],["upcase!","String","Rails/classes/String.html#method-i-upcase-21","()","<p>Upcases the contents of <em>str</em>, returning <code>nil</code> if no\nchanges were made. Note: case replacement is effective …\n",null,1],["update","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-update","(arel, name = nil, binds = [])","<p>Executes the update statement and returns the number of rows affected.\n",null,0],["update","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-update","(id, attributes)","<p>Updates an object (or multiple objects) and saves it to the database, if\nvalidations pass. The resulting …\n",null,0],["update","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-update","()","<p>Update the resource on the remote service.\n",null,0],["update","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-update","(other_hash)","<p>Updates the instantized hash with values from the second:\n\n<pre>hash_1 = HashWithIndifferentAccess.new\nhash_1[:key] ...</pre>\n",null,0],["update","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-update","(other_hash)","<p>Updates the instantized hash with values from the second:\n\n<pre>hash_1 = HashWithIndifferentAccess.new\nhash_1[:key] ...</pre>\n",null,0],["update","PostsController","Ruby/classes/PostsController.html#method-i-update","()","<p>PUT /posts/1 PUT /posts/1.json\n",null,0],["update","CGI::Session","Rails/classes/CGI/Session.html#method-i-update","()","<p>Store session data on the server.  For some session storage types, this is\na no-op.\n",null,1],["update","CGI::Session::FileStore","Rails/classes/CGI/Session/FileStore.html#method-i-update","()","<p>Save session state to the session’s FileStore file.\n",null,1],["update","CGI::Session::MemoryStore","Rails/classes/CGI/Session/MemoryStore.html#method-i-update","()","<p>Update session state.\n<p>A no-op.\n",null,1],["update","CGI::Session::NullStore","Rails/classes/CGI/Session/NullStore.html#method-i-update","()","<p>Update session state.\n<p>A no-op.\n",null,1],["update","CGI::Session::PStore","Rails/classes/CGI/Session/PStore.html#method-i-update","()","<p>Save session state to the session’s PStore file.\n",null,1],["update","DBM","Rails/classes/DBM.html#method-i-update","(p1)","<p>Updates the database with multiple values from the specified object. Takes\nany object which implements …\n",null,1],["update","Digest::HMAC","Rails/classes/Digest/HMAC.html#method-i-update","(text)","<p>Updates the hmac using a given <code>string</code> and returns self.\n",null,1],["update","Digest::Instance","Rails/classes/Digest/Instance.html#method-i-update","(p1)","<p>Updates the digest using a given <em>string</em> and returns self.\n<p>The update() method and the left-shift operator …\n",null,1],["update","ENV","Rails/classes/ENV.html#method-c-update","(p1)","<p>Adds the contents of <code>hash</code> to the environment variables.  If no\nblock is specified entries with duplicate …\n",null,1],["update","GDBM","Rails/classes/GDBM.html#method-i-update","(p1)","<p>Adds the key-value pairs of <em>other</em> to <em>gdbm</em>, overwriting\nentries with duplicate keys with those from <em>other</em> …\n",null,1],["update","Gem::StreamUI::SilentDownloadReporter","Rails/classes/Gem/StreamUI/SilentDownloadReporter.html#method-i-update","(current)","",null,1],["update","Gem::StreamUI::VerboseDownloadReporter","Rails/classes/Gem/StreamUI/VerboseDownloadReporter.html#method-i-update","(bytes)","",null,1],["update","Hash","Rails/classes/Hash.html#method-i-update","(p1)","<p>Adds the contents of <em>other_hash</em> to <em>hsh</em>.  If no block is\nspecified, entries with duplicate keys are overwritten …\n",null,1],["update","HttpServer::Table","Rails/classes/HttpServer/Table.html#method-i-update","(hash)","",null,1],["update","OpenSSL::Cipher","Rails/classes/OpenSSL/Cipher.html#method-i-update","(p1, p2 = v2)","<p>Encrypts data in a streaming fashion. Hand consecutive blocks of data to\nthe <code>update</code> method in order to …\n",null,1],["update","OpenSSL::Digest","Rails/classes/OpenSSL/Digest.html#method-i-update","(p1)","<p>Not every message digest can be computed in one single pass. If a message\ndigest is to be computed from …\n",null,1],["update","OpenSSL::HMAC","Rails/classes/OpenSSL/HMAC.html#method-i-update","(p1)","",null,1],["update","SDBM","Rails/classes/SDBM.html#method-i-update","(p1)","",null,1],["update","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-update","( hsh )","<p>Updates the database with multiple values from the specified object. Takes\nany object which implements …\n",null,1],["update_aliases","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-update_aliases","()","<p>Updates the child modules &amp; classes by replacing the ones that are\naliases through a constant.\n<p>The …\n",null,1],["update_all","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-update_all","(updates, conditions = nil, options = {})","<p>Updates all records with details given if they match a set of conditions\nsupplied, limits and order can …\n",null,0],["update_attribute","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-update_attribute","(name, value)","<p>Updates a single attribute and saves the record. This is especially useful\nfor boolean flags on existing …\n",null,0],["update_attribute","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-update_attribute","(name, value)","<p>Updates a single attribute and then saves the object.\n<p>Note: Unlike ActiveRecord::Base.update_attribute …\n",null,0],["update_attributes","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-update_attributes","(attributes, options = {})","<p>Updates the attributes of the model from the passed-in hash and saves the\nrecord, all wrapped in a transaction. …\n",null,0],["update_attributes","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-i-update_attributes","(attributes)","<p>Updates this resource with all the attributes from the passed-in Hash and\nrequests that the record be …\n",null,0],["update_attributes","Rails::Generators::ActiveModel","Ruby/classes/Rails/Generators/ActiveModel.html#method-i-update_attributes","(params=nil)","<p>PUT update\n",null,0],["update_attributes!","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-update_attributes-21","(attributes, options = {})","<p>Updates its receiver just like <code>update_attributes</code> but calls\n<code>save!</code> instead of <code>save</code>, so an exception is …\n",null,0],["update_checksum","Gem::Package::TarHeader","Rails/classes/Gem/Package/TarHeader.html#method-i-update_checksum","()","<p>Updates the TarHeader’s checksum\n",null,1],["update_column","ActiveRecord::Persistence","Ruby/classes/ActiveRecord/Persistence.html#method-i-update_column","(name, value)","<p>Updates a single attribute of an object, without calling save.\n<p>Validation is skipped.\n<p>Callbacks are skipped. …\n",null,0],["update_counters","ActiveRecord::CounterCache","Ruby/classes/ActiveRecord/CounterCache.html#method-i-update_counters","(id, counters)","<p>A generic “counter updater” implementation, intended primarily to be used\nby increment_counter …\n",null,0],["update_counters","ActiveRecord::Locking::Optimistic::ClassMethods","Ruby/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-update_counters","(id, counters)","<p>Make sure the lock version column gets updated when counters are updated.\n",null,0],["update_gem","Gem::Commands::UpdateCommand","Rails/classes/Gem/Commands/UpdateCommand.html#method-i-update_gem","(name, version = Gem::Requirement.default)","",null,1],["update_gems","Gem::Commands::UpdateCommand","Rails/classes/Gem/Commands/UpdateCommand.html#method-i-update_gems","(gems_to_update)","",null,1],["update_includes","RDoc::ClassModule","Rails/classes/RDoc/ClassModule.html#method-i-update_includes","()","<p>Deletes from #includes those whose module has been removed from the\ndocumentation.\n",null,1],["update_index","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-update_index","()","<p>Perform an in-place update of the repository from newly added gems.  Only\nworks for modern indicies, …\n",null,1],["update_output_dir","RDoc::RDoc","Rails/classes/RDoc/RDoc.html#method-i-update_output_dir","(op_dir, time, last = {})","<p>Update the flag file in an output directory.\n",null,1],["update_ri_cache","Gem::DocManager","Rails/classes/Gem/DocManager.html#method-c-update_ri_cache","()","<p>Updates the RI cache for RDoc 2 if it is installed\n",null,1],["update_rubygems","Gem::Commands::UpdateCommand","Rails/classes/Gem/Commands/UpdateCommand.html#method-i-update_rubygems","()","<p>Update RubyGems software to the latest version.\n",null,1],["update_specs_index","Gem::Indexer","Rails/classes/Gem/Indexer.html#method-i-update_specs_index","(index, source, dest)","<p>Combines specs in <code>index</code> and <code>source</code> then writes\nout a new copy to <code>dest</code>.  For a latest index, does not …\n",null,1],["update_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Ruby/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-update_sql","(sql, name = nil)","<p>Executes the update statement and returns the number of rows affected.\n",null,0],["update_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-update_sql","(sql, name = nil)","<p>Executes an UPDATE query and returns the number of affected tuples.\n",null,0],["updated","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","Ruby/classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#method-i-updated","(date_or_time = nil)","<p>Accepts a Date or Time object and inserts it in the proper format. If nil\nis passed, current time in …\n",null,0],["updated","Gem::StreamUI::SilentProgressReporter","Rails/classes/Gem/StreamUI/SilentProgressReporter.html#method-i-updated","(message)","",null,1],["updated","Gem::StreamUI::SimpleProgressReporter","Rails/classes/Gem/StreamUI/SimpleProgressReporter.html#method-i-updated","(message)","<p>Prints out a dot and ignores <code>message</code>.\n",null,1],["updated","Gem::StreamUI::VerboseProgressReporter","Rails/classes/Gem/StreamUI/VerboseProgressReporter.html#method-i-updated","(message)","<p>Prints out the position relative to the total and the <code>message</code>.\n",null,1],["updated","RSS::Maker::ChannelBase","Rails/classes/RSS/Maker/ChannelBase.html#method-i-updated","()","",null,1],["updated","RSS::Maker::ItemsBase::ItemBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-updated","()","",null,1],["updated","RSS::Maker::ItemsBase::ItemBase::SourceBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase.html#method-i-updated","()","",null,1],["updated=","RSS::Maker::ChannelBase","Rails/classes/RSS/Maker/ChannelBase.html#method-i-updated-3D","(date)","",null,1],["updated=","RSS::Maker::ItemsBase::ItemBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-updated-3D","(date)","",null,1],["updated=","RSS::Maker::ItemsBase::ItemBase::SourceBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase.html#method-i-updated-3D","(date)","",null,1],["updated?","ActiveSupport::FileUpdateChecker","Ruby/classes/ActiveSupport/FileUpdateChecker.html#method-i-updated-3F","()","<p>Check if any of the entries were updated. If so, the updated_at value is\ncached until the block is executed …\n",null,0],["upgrade_to_class","RDoc::Context","Rails/classes/RDoc/Context.html#method-i-upgrade_to_class","(mod, class_type, enclosing)","<p>Upgrades NormalModule <code>mod</code> in <code>enclosing</code> to a\n<code>class_type</code>\n",null,1],["upload","CompositePublisher","Rails/classes/CompositePublisher.html#method-i-upload","()","<p>Upload all the individual publishers.\n",null,1],["upload","Rake::CompositePublisher","Rails/classes/Rake/CompositePublisher.html#method-i-upload","()","<p>Upload all the individual publishers.\n",null,1],["upload","Rake::SshDirPublisher","Rails/classes/Rake/SshDirPublisher.html#method-i-upload","()","",null,1],["upload","Rake::SshFilePublisher","Rails/classes/Rake/SshFilePublisher.html#method-i-upload","()","<p>Upload the local directory to the remote directory.\n",null,1],["upload","Rake::SshFreshDirPublisher","Rails/classes/Rake/SshFreshDirPublisher.html#method-i-upload","()","",null,1],["upload","SshDirPublisher","Rails/classes/SshDirPublisher.html#method-i-upload","()","",null,1],["upload","SshFilePublisher","Rails/classes/SshFilePublisher.html#method-i-upload","()","<p>Upload the local directory to the remote directory.\n",null,1],["upload","SshFreshDirPublisher","Rails/classes/SshFreshDirPublisher.html#method-i-upload","()","",null,1],["upload_files","Rake::FtpUploader","Rails/classes/Rake/FtpUploader.html#method-i-upload_files","(wildcard)","<p>Upload all files matching <code>wildcard</code> to the uploader’s root\npath.\n",null,1],["upper","Win32::SSPI::SecurityHandle","Rails/classes/Win32/SSPI/SecurityHandle.html#method-i-upper","()","",null,1],["upper_bound","Prime::PseudoPrimeGenerator","Rails/classes/Prime/PseudoPrimeGenerator.html#method-i-upper_bound","()","",null,1],["upper_bound=","Prime::PseudoPrimeGenerator","Rails/classes/Prime/PseudoPrimeGenerator.html#method-i-upper_bound-3D","(ubound)","",null,1],["upper_triangular?","Matrix","Rails/classes/Matrix.html#method-i-upper_triangular-3F","()","<p>Returns <code>true</code> is this is an upper triangular matrix.\n",null,1],["upto","Date","Rails/classes/Date.html#method-i-upto","(p1)","<p>This method is equivalent to step(max, 1){|date| …}.\n",null,1],["upto","Integer","Rails/classes/Integer.html#method-i-upto","(p1)","<p>Iterates <em>block</em>, passing in integer values from <em>int</em> up to\nand including <em>limit</em>.\n<p>If no block is given, an …\n",null,1],["upto","String","Rails/classes/String.html#method-i-upto","(p1, p2 = v2)","<p>Iterates through successive values, starting at <em>str</em> and ending at\n<em>other_str</em> inclusive, passing each value …\n",null,1],["uptodate?","FileUtils","Rails/classes/FileUtils.html#method-c-uptodate-3F","(new, old_list, options = nil)","<p>Options: (none)\n<p>Returns true if <code>newer</code> is newer than all <code>old_list</code>.\nNon-existent files are older than any …\n",null,1],["uri","DRb","Rails/classes/DRb.html#method-c-uri","()","<p>Get the URI defining the local dRuby space.\n<p>This is the URI of the current server.  See #current_server …\n",null,1],["uri_escaper","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-uri_escaper","()","",null,1],["uri_option","DRb::DRbProtocol","Rails/classes/DRb/DRbProtocol.html#method-c-uri_option","(uri, config, first=true)","<p>Parse <code>uri</code> into a [uri, option] pair.\n<p>The DRbProtocol module asks each registered protocol in turn to try …\n",null,1],["uri_option","DRb::DRbSSLSocket","Rails/classes/DRb/DRbSSLSocket.html#method-c-uri_option","(uri, config)","",null,1],["uri_option","DRb::DRbTCPSocket","Rails/classes/DRb/DRbTCPSocket.html#method-c-uri_option","(uri, config)","<p>Parse <code>uri</code> into a [uri, option] pair.\n",null,1],["uri_option","DRb::DRbUNIXSocket","Rails/classes/DRb/DRbUNIXSocket.html#method-c-uri_option","(uri, config)","",null,1],["uri_registered?","RSS::BaseListener","Rails/classes/RSS/BaseListener.html#method-c-uri_registered-3F","(uri, name)","<p>test if this uri is registered against this name\n",null,1],["url","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-i-url","()","<p>Returns the complete URL used for this request.\n",null,0],["url_encode","ERB::Util","Rails/classes/ERB/Util.html#method-c-url_encode","(s)","<p>A utility method for encoding the String <em>s</em> as a URL.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&quot;erb&quot;</span>\n<span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ERB</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Util</span>\n\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-identifier\">url_encode</span>(<span class=\"ruby-string\">&quot;Programming ...\n</span></pre>\n",null,1],["url_field","ActionView::Helpers::FormHelper","Ruby/classes/ActionView/Helpers/FormHelper.html#method-i-url_field","(object_name, method, options = {})","<p>Returns a text_field of type “url”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">url_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;homepage&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_homepage&quot; ...</span>\n</pre>\n",null,0],["url_field_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-url_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “url”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,0],["url_for","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-i-url_for","(string)","<p>basic url_for that can be overridden for more robust functionality\n",null,0],["url_for","ActionDispatch::Http::URL","Ruby/classes/ActionDispatch/Http/URL.html#method-c-url_for","(options = {})","",null,0],["url_for","ActionDispatch::Routing::UrlFor","Ruby/classes/ActionDispatch/Routing/UrlFor.html#method-i-url_for","(options = nil)","<p>Generate a url based on the options provided, default_url_options and the\nroutes defined in routes.rb. …\n",null,0],["url_for","ActionView::Helpers::UrlHelper","Ruby/classes/ActionView/Helpers/UrlHelper.html#method-i-url_for","(options = {})","<p>Returns the URL for the set of <code>options</code> provided. This takes\nthe same options as <code>url_for</code> in Action Controller …\n",null,0],["url_options","ActionController::UrlFor","Ruby/classes/ActionController/UrlFor.html#method-i-url_options","()","",null,0],["url_options","ActionDispatch::Routing::UrlFor","Ruby/classes/ActionDispatch/Routing/UrlFor.html#method-i-url_options","()","",null,0],["url_options","ActionView::Helpers::UrlHelper","Ruby/classes/ActionView/Helpers/UrlHelper.html#method-i-url_options","()","<p>Need to map default url options to controller one. def\ndefault_url_options(*args) #:nodoc:\n\n<pre>controller.send(:default_url_options, ...</pre>\n",null,0],["urlsafe_base64","SecureRandom","Rails/classes/SecureRandom.html#method-c-urlsafe_base64","(n=nil, padding=false)","<p>SecureRandom.urlsafe_base64 generates a random URL-safe base64 string.\n<p>The argument <em>n</em> specifies the length …\n",null,1],["urlsafe_decode64","Base64","Rails/classes/Base64.html#method-i-urlsafe_decode64","(str)","<p>Returns the Base64-decoded version of <code>str</code>. This method\ncomplies with “Base 64 Encoding with URL and …\n",null,1],["urlsafe_encode64","Base64","Rails/classes/Base64.html#method-i-urlsafe_encode64","(bin)","<p>Returns the Base64-encoded version of <code>bin</code>. This method\ncomplies with “Base 64 Encoding with URL and …\n",null,1],["us_zones","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-c-us_zones","()","<p>A convenience method for returning a collection of TimeZone objects for\ntime zones in the USA.\n",null,0],["usage","Gem::Command","Rails/classes/Gem/Command.html#method-i-usage","()","<p>Override to display the usage for an individual gem command.\n<p>The text “[options]” is automatically …\n",null,1],["usage_path","Rails::Generators::Base","Ruby/classes/Rails/Generators/Base.html#method-c-usage_path","()","",null,0],["use","ActionController::Metal","Ruby/classes/ActionController/Metal.html#method-c-use","(*args, &block)","<p>Adds given middleware class and its args to bottom of middleware_stack\n",null,0],["use","ActionDispatch::Flash::FlashHash","Ruby/classes/ActionDispatch/Flash/FlashHash.html#method-i-use","(key = nil, used = true)","<p>Used internally by the <code>keep</code> and <code>discard</code> methods\n\n<pre>use()               # marks the entire flash as used\nuse('msg') ...</pre>\n",null,0],["use","ActionDispatch::MiddlewareStack","Ruby/classes/ActionDispatch/MiddlewareStack.html#method-i-use","(*args, &block)","",null,0],["use","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-use","()","",null,0],["use_accept_header","ActionDispatch::Http::MimeNegotiation","Ruby/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-use_accept_header","()","",null,0],["use_checkout?","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-i-use_checkout-3F","()","",null,0],["use_default_colors","Curses","Rails/classes/Curses.html#method-c-use_default_colors","()","<p>tells the curses library to use terminal’s default colors.\n<p>see also the system manual for default_colors …\n",null,1],["use_externals?","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-i-use_externals-3F","()","",null,0],["use_loader","IRB::Context","Rails/classes/IRB/Context.html#method-i-use_loader","()","",null,1],["use_loader=","IRB::Context","Rails/classes/IRB/Context.html#method-i-use_loader-3D","(opt)","",null,1],["use_loader?","IRB::Context","Rails/classes/IRB/Context.html#method-i-use_loader-3F","()","",null,1],["use_paths","Gem","Rails/classes/Gem.html#method-c-use_paths","(home, *paths)","<p>Use the <code>home</code> and <code>paths</code> values for Gem.dir and\nGem.path.  Used mainly by the unit tests to provide environment …\n",null,1],["use_prefix","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-use_prefix","()","<p>Adds the stored #prefix to the output and clears it.  Lists generate a\nprefix for later consumption. …\n",null,1],["use_readline=","IRB::Context","Rails/classes/IRB/Context.html#method-i-use_readline-3D","(opt)","",null,1],["use_registry","URI::Generic","Rails/classes/URI/Generic.html#method-c-use_registry","()","<p>Returns whether a registry of naming authorities are being used.\n",null,1],["use_renderer","ActionController::Renderers::ClassMethods","Ruby/classes/ActionController/Renderers/ClassMethods.html#method-i-use_renderer","(*args)","",null,0],["use_renderers","ActionController::Renderers::ClassMethods","Ruby/classes/ActionController/Renderers/ClassMethods.html#method-i-use_renderers","(*args)","",null,0],["use_ssl=","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-use_ssl-3D","(flag)","<p>Turn on/off SSL. This flag must be set before starting session. If you\nchange use_ssl value after session …\n",null,1],["use_ssl=","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-use_ssl-3D","(flag)","<p>Turn on/off SSL. This flag must be set before starting session. If you\nchange use_ssl value after session …\n",null,1],["use_ssl?","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-use_ssl-3F","()","<p>Returns true if SSL/TLS is being used with HTTP.\n",null,1],["use_ssl?","Net::HTTP","Rails/classes/Net/HTTP.html#method-i-use_ssl-3F","()","<p>Returns true if SSL/TLS is being used with HTTP.\n",null,1],["use_ssl?","Net::POP3","Rails/classes/Net/POP3.html#method-i-use_ssl-3F","()","<p>does this instance use SSL?\n",null,1],["use_ssl?","Net::POP3","Rails/classes/Net/POP3.html#method-c-use_ssl-3F","()","<p>returns <code>true</code> if POP3.ssl_params is set\n",null,1],["use_ssl?","Net::POP3","Rails/classes/Net/POP3.html#method-c-use_ssl-3F","()","<p>returns <code>true</code> if POP3.ssl_params is set\n",null,1],["use_ssl?","Net::POP3","Rails/classes/Net/POP3.html#method-c-use_ssl-3F","()","<p>returns <code>true</code> if POP3.ssl_params is set\n",null,1],["use_ssl?","Net::POP3","Rails/classes/Net/POP3.html#method-i-use_ssl-3F","()","<p>does this instance use SSL?\n",null,1],["use_ssl?","Net::POP3","Rails/classes/Net/POP3.html#method-i-use_ssl-3F","()","<p>does this instance use SSL?\n",null,1],["use_ssl?","Net::POP3","Rails/classes/Net/POP3.html#method-c-use_ssl-3F","()","<p>returns <code>true</code> if POP3.ssl_params is set\n",null,1],["use_ssl?","Net::POP3","Rails/classes/Net/POP3.html#method-i-use_ssl-3F","()","<p>does this instance use SSL?\n",null,1],["use_svn?","RailsEnvironment","Ruby/classes/RailsEnvironment.html#method-i-use_svn-3F","()","",null,0],["use_tracer=","IRB::Context","Rails/classes/IRB/Context.html#method-i-use_tracer-3D","(opt)","",null,1],["use_ui","Gem::DefaultUserInteraction","Rails/classes/Gem/DefaultUserInteraction.html#method-i-use_ui","(new_ui, &block)","<p>See DefaultUserInteraction::use_ui\n",null,1],["use_ui","Gem::DefaultUserInteraction","Rails/classes/Gem/DefaultUserInteraction.html#method-c-use_ui","(new_ui)","<p>Use <code>new_ui</code> for the duration of <code>block</code>.\n",null,1],["use_zone","Time","Ruby/classes/Time.html#method-c-use_zone","(time_zone)","<p>Allows override of <code>Time.zone</code> locally inside supplied block;\nresets <code>Time.zone</code> to existing value when done. …\n",null,0],["usec","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-usec","()","",null,0],["usec","Time","Rails/classes/Time.html#method-i-usec","()","<p>Returns just the number of microseconds for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>        <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:03:26 -0600</span>\n<span class=\"ruby-string\">&quot;%10.6f&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["user","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-user","()","<p>Gets the user for REST HTTP authentication.\n",null,0],["user","URI::Generic","Rails/classes/URI/Generic.html#method-i-user","()","<p>returns the user component\n",null,1],["user=","ActiveResource::Base","Ruby/classes/ActiveResource/Base.html#method-c-user-3D","(user)","<p>Sets the user for REST HTTP authentication.\n",null,0],["user=","ActiveResource::Connection","Ruby/classes/ActiveResource/Connection.html#method-i-user-3D","(user)","<p>Sets the user for remote service.\n",null,0],["user=","URI::Generic","Rails/classes/URI/Generic.html#method-i-user-3D","(user)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["user=","XMLRPC::Client","Rails/classes/XMLRPC/Client.html#method-i-user-3D","(new_user)","",null,1],["user_agent","Gem::RemoteFetcher","Rails/classes/Gem/RemoteFetcher.html#method-i-user_agent","()","",null,1],["user_dir","Gem","Rails/classes/Gem.html#method-c-user_dir","()","<p>Path for gems in the user’s home directory\n",null,1],["user_home","Gem","Rails/classes/Gem.html#method-c-user_home","()","<p>The home directory for the user.\n",null,1],["user_name_and_password","ActionController::HttpAuthentication::Basic","Ruby/classes/ActionController/HttpAuthentication/Basic.html#method-i-user_name_and_password","(request)","",null,0],["userinfo","URI::Generic","Rails/classes/URI/Generic.html#method-i-userinfo","()","<p>returns the userinfo, either as ‘user’ or ‘user:password’\n",null,1],["userinfo=","URI::Generic","Rails/classes/URI/Generic.html#method-i-userinfo-3D","(userinfo)","<p>Sets userinfo, argument is string like ‘name:pass’\n",null,1],["uses_transaction","ActiveRecord::TestFixtures::ClassMethods","Ruby/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-uses_transaction","(*methods)","",null,0],["uses_transaction?","ActiveRecord::TestFixtures::ClassMethods","Ruby/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-uses_transaction-3F","(method)","",null,0],["using_limitable_reflections?","ActiveRecord::FinderMethods","Ruby/classes/ActiveRecord/FinderMethods.html#method-i-using_limitable_reflections-3F","(reflections)","",null,0],["using_match_shorthand?","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-using_match_shorthand-3F","(path, options)","",null,0],["utc","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-utc","()","<p>Returns a Time or DateTime instance that represents the time in UTC.\n",null,0],["utc","DateTime","Ruby/classes/DateTime.html#method-i-utc","()","<p>Adjusts DateTime to UTC by adding its offset value; offset is set to 0\n<p>Example:\n\n<pre>DateTime.civil(2005, 2, ...</pre>\n",null,0],["utc","Time","Rails/classes/Time.html#method-c-utc","(*args)","<p>Creates a time based on given values, interpreted as UTC (GMT). The year\nmust be specified. Other values …\n",null,1],["utc","Time","Rails/classes/Time.html#method-i-utc","()","<p>Converts <em>time</em> to UTC (GMT), modifying the receiver.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:18:31 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">gmt?</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["utc?","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-utc-3F","()","",null,0],["utc?","DateTime","Ruby/classes/DateTime.html#method-i-utc-3F","()","<p>Returns true if offset == 0\n",null,0],["utc?","Time","Rails/classes/Time.html#method-i-utc-3F","()","<p>Returns <code>true</code> if <em>time</em> represents a time in UTC (GMT).\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>                        <span class=\"ruby-comment\">#=&gt; 2007-11-19 ...</span>\n</pre>\n",null,1],["utc_offset","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-utc_offset","()","",null,0],["utc_offset","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-utc_offset","()","",null,0],["utc_offset","DateTime","Ruby/classes/DateTime.html#method-i-utc_offset","()","<p>Returns the offset value in seconds\n",null,0],["utc_offset","Time","Rails/classes/Time.html#method-i-utc_offset","()","<p>Returns the offset in seconds between the timezone of <em>time</em> and\nUTC.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">gm</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">20</span>,<span class=\"ruby-value\">15</span>,<span class=\"ruby-value\">1</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["utc_time","Time","Ruby/classes/Time.html#method-c-utc_time","(*args)","<p>Wraps class method <code>time_with_datetime_fallback</code> with\n<code>utc_or_local</code> set to <code>:utc</code>.\n",null,0],["utc_to_local","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-i-utc_to_local","(time)","<p>Adjust the given time to the simultaneous time in the time zone represented\nby <code>self</code>. Returns a Time.utc() …\n",null,0],["utf8_enforcer_tag","ActionView::Helpers::FormTagHelper","Ruby/classes/ActionView/Helpers/FormTagHelper.html#method-i-utf8_enforcer_tag","()","<p>Creates the hidden UTF8 enforcer tag. Override this method in a helper to\ncustomize the tag.\n",null,0],["utime","File","Rails/classes/File.html#method-c-utime","(p1, p2, *args)","<p>Sets the access and modification times of each named file to the first two\narguments. Returns the number …\n",null,1],["utime","Pathname","Rails/classes/Pathname.html#method-i-utime","(p1, p2)","<p>See <code>File.utime</code>.  Update the access and modification times.\n",null,1],["uuid","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-uuid","()","<p>Returns the unique request id, which is based off either the X-Request-Id\nheader that can be generated …\n",null,0],["uuid","SecureRandom","Rails/classes/SecureRandom.html#method-c-uuid","()","<p>SecureRandom.uuid generates a v4 random UUID (Universally Unique\nIDentifier).\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">SecureRandom</span>.<span class=\"ruby-identifier\">uuid</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["v","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-i-v","()","",null,1],["v_inv","Matrix::EigenvalueDecomposition","Rails/classes/Matrix/EigenvalueDecomposition.html#method-i-v_inv","()","",null,1],["valid?","ActiveModel::Validations","Ruby/classes/ActiveModel/Validations.html#method-i-valid-3F","(context = nil)","<p>Runs all the specified validations and returns true if no errors were added\notherwise false. Context …\n",null,0],["valid?","ActiveRecord::Validations","Ruby/classes/ActiveRecord/Validations.html#method-i-valid-3F","(context = nil)","<p>Runs all the validations within the specified context. Returns true if no\nerrors are found, false otherwise. …\n",null,0],["valid?","ActiveResource::Validations","Ruby/classes/ActiveResource/Validations.html#method-i-valid-3F","()","<p>Checks for errors on an object (i.e., is resource.errors empty?).\n<p>Runs all the specified local validations …\n",null,0],["valid?","RSS::Element","Rails/classes/RSS/Element.html#method-i-valid-3F","(ignore_unknown_element=true)","",null,1],["valid_accept_header","ActionDispatch::Http::MimeNegotiation","Ruby/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-valid_accept_header","()","",null,0],["valid_alter_table_options","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-valid_alter_table_options","( type, options)","<p>See: www.sqlite.org/lang_altertable.html SQLite has an additional\nrestriction on the ALTER TABLE statement …\n",null,0],["valid_civil?","Date","Rails/classes/Date.html#method-c-valid_civil-3F","(p1, p2, p3, p4 = v4)","<p>Returns true if the given calendar date is valid, and false if not.\n<p>For example:\n\n<pre>Date.valid_date?(2001,2,3) ...</pre>\n",null,1],["valid_commercial?","Date","Rails/classes/Date.html#method-c-valid_commercial-3F","(p1, p2, p3, p4 = v4)","<p>Returns true if the given week date is valid, and false if not.\n<p>For example:\n\n<pre>Date.valid_commercial?(2001,5,6) ...</pre>\n",null,1],["valid_const?","Rails::Generators::AppGenerator","Ruby/classes/Rails/Generators/AppGenerator.html#method-i-valid_const-3F","()","",null,0],["valid_const?","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-valid_const-3F","()","",null,0],["valid_date?","Date","Rails/classes/Date.html#method-c-valid_date-3F","(p1, p2, p3, p4 = v4)","<p>Returns true if the given calendar date is valid, and false if not.\n<p>For example:\n\n<pre>Date.valid_date?(2001,2,3) ...</pre>\n",null,1],["valid_encoding?","String","Rails/classes/String.html#method-i-valid_encoding-3F","()","<p>Returns true for a string which encoded correctly.\n\n<pre>&quot;\\xc2\\xa1&quot;.force_encoding(&quot;UTF-8&quot;).valid_encoding? ...</pre>\n",null,1],["valid_jd?","Date","Rails/classes/Date.html#method-c-valid_jd-3F","(p1, p2 = v2)","<p>Just returns true.  It’s nonsense, but is for symmetry.\n<p>For example:\n\n<pre>Date.valid_jd?(2451944)           ...</pre>\n",null,1],["valid_ordinal?","Date","Rails/classes/Date.html#method-c-valid_ordinal-3F","(p1, p2, p3 = v3)","<p>Returns true if the given ordinal date is valid, and false if not.\n<p>For example:\n\n<pre>Date.valid_ordinal?(2001,34) ...</pre>\n",null,1],["valid_scope_name?","ActiveRecord::Scoping::Named::ClassMethods","Ruby/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-valid_scope_name-3F","(name)","",null,0],["validate","ActiveModel::EachValidator","Ruby/classes/ActiveModel/EachValidator.html#method-i-validate","(record)","<p>Performs validation on the supplied record. By default this will call\n<code>validates_each</code> to determine validity …\n",null,0],["validate","ActiveModel::Validations::ClassMethods","Ruby/classes/ActiveModel/Validations/ClassMethods.html#method-i-validate","(*args, &block)","<p>Adds a validation method or block to the class. This is useful when\noverriding the <code>validate</code> instance …\n",null,0],["validate","ActiveModel::Validations::PresenceValidator","Ruby/classes/ActiveModel/Validations/PresenceValidator.html#method-i-validate","(record)","",null,0],["validate","ActiveModel::Validator","Ruby/classes/ActiveModel/Validator.html#method-i-validate","(record)","<p>Override this method in subclasses with validation logic, adding errors to\nthe records <code>errors</code> array where …\n",null,0],["validate","RailsGuides::Validator","Ruby/classes/RailsGuides/Validator.html#method-i-validate","()","",null,0],["validate","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-validate","(packaging = true)","<p>Checks that the specification contains all required fields, and does a very\nbasic sanity check.\n<p>Raises …\n",null,1],["validate","REXML::Validation::Validator","Rails/classes/REXML/Validation/Validator.html#method-i-validate","( event )","",null,1],["validate","RSS::Element","Rails/classes/RSS/Element.html#method-i-validate","(ignore_unknown_element=true)","",null,1],["validate_digest_response","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-validate_digest_response","(request, realm, &password_procedure)","<p>Returns false unless the request credentials response value matches the\nexpected value. First try the …\n",null,0],["validate_duplicate_links","RSS::Atom::DuplicateLinkChecker","Rails/classes/RSS/Atom/DuplicateLinkChecker.html#method-i-validate_duplicate_links","(links)","",null,1],["validate_each","ActiveModel::EachValidator","Ruby/classes/ActiveModel/EachValidator.html#method-i-validate_each","(record, attribute, value)","<p>Override this method in subclasses with the validation logic, adding errors\nto the records <code>errors</code> array …\n",null,0],["validate_each","ActiveModel::Validations::AcceptanceValidator","Ruby/classes/ActiveModel/Validations/AcceptanceValidator.html#method-i-validate_each","(record, attribute, value)","",null,0],["validate_each","ActiveModel::Validations::ConfirmationValidator","Ruby/classes/ActiveModel/Validations/ConfirmationValidator.html#method-i-validate_each","(record, attribute, value)","",null,0],["validate_each","ActiveModel::Validations::ExclusionValidator","Ruby/classes/ActiveModel/Validations/ExclusionValidator.html#method-i-validate_each","(record, attribute, value)","",null,0],["validate_each","ActiveModel::Validations::FormatValidator","Ruby/classes/ActiveModel/Validations/FormatValidator.html#method-i-validate_each","(record, attribute, value)","",null,0],["validate_each","ActiveModel::Validations::InclusionValidator","Ruby/classes/ActiveModel/Validations/InclusionValidator.html#method-i-validate_each","(record, attribute, value)","",null,0],["validate_each","ActiveModel::Validations::LengthValidator","Ruby/classes/ActiveModel/Validations/LengthValidator.html#method-i-validate_each","(record, attribute, value)","",null,0],["validate_each","ActiveModel::Validations::NumericalityValidator","Ruby/classes/ActiveModel/Validations/NumericalityValidator.html#method-i-validate_each","(record, attr_name, value)","",null,0],["validate_each","ActiveModel::Validations::WithValidator","Ruby/classes/ActiveModel/Validations/WithValidator.html#method-i-validate_each","(record, attr, val)","",null,0],["validate_each","ActiveRecord::Validations::AssociatedValidator","Ruby/classes/ActiveRecord/Validations/AssociatedValidator.html#method-i-validate_each","(record, attribute, value)","",null,0],["validate_each","ActiveRecord::Validations::UniquenessValidator","Ruby/classes/ActiveRecord/Validations/UniquenessValidator.html#method-i-validate_each","(record, attribute, value)","",null,0],["validate_fallbacks","I18n::Railtie","Ruby/classes/I18n/Railtie.html#method-c-validate_fallbacks","(fallbacks)","",null,0],["validate_for_stream","RSS::Element","Rails/classes/RSS/Element.html#method-i-validate_for_stream","(tags, ignore_unknown_element=true)","",null,1],["validate_nonce","ActionController::HttpAuthentication::Digest","Ruby/classes/ActionController/HttpAuthentication/Digest.html#method-i-validate_nonce","(secret_key, request, value, seconds_to_timeout=5*60)","<p>Might want a shorter timeout depending on whether the request is a PUT or\nPOST, and if client is browser …\n",null,0],["validate_one_tag_name","RSS::ImageModelUtils","Rails/classes/RSS/ImageModelUtils.html#method-i-validate_one_tag_name","(ignore_unknown_element, name, tags)","",null,1],["validates","ActiveModel::Validations::ClassMethods","Ruby/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates","(*attributes)","<p>This method is a shortcut to all default validators and any custom\nvalidator classes ending in ‘Validator’. …\n",null,0],["validates!","ActiveModel::Validations::ClassMethods","Ruby/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates-21","(*attributes)","<p>This method is used to define validation that cannot be corrected by end\nuser and is considered exceptional. …\n",null,0],["validates_acceptance_of","ActiveModel::Validations::HelperMethods","Ruby/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_acceptance_of","(*attr_names)","<p>Encapsulates the pattern of wanting to validate the acceptance of a terms\nof service check box (or similar …\n",null,0],["validates_associated","ActiveRecord::Validations::ClassMethods","Ruby/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_associated","(*attr_names)","<p>Validates whether the associated object or objects are all valid\nthemselves. Works with any kind of association. …\n",null,0],["validates_confirmation_of","ActiveModel::Validations::HelperMethods","Ruby/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_confirmation_of","(*attr_names)","<p>Encapsulates the pattern of wanting to validate a password or email address\nfield with a confirmation. …\n",null,0],["validates_each","ActiveModel::Validations::ClassMethods","Ruby/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates_each","(*attr_names, &block)","<p>Validates each attribute against a block.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Validations</span>\n\n  <span class=\"ruby-identifier\">attr_accessor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["validates_exclusion_of","ActiveModel::Validations::HelperMethods","Ruby/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_exclusion_of","(*attr_names)","<p>Validates that the value of the specified attribute is not in a particular\nenumerable object.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["validates_format_of","ActiveModel::Validations::HelperMethods","Ruby/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_format_of","(*attr_names)","<p>Validates whether the value of the specified attribute is of the correct\nform, going by the regular expression …\n",null,0],["validates_inclusion_of","ActiveModel::Validations::HelperMethods","Ruby/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_inclusion_of","(*attr_names)","<p>Validates whether the value of the specified attribute is available in a\nparticular enumerable object. …\n",null,0],["validates_length_of","ActiveModel::Validations::HelperMethods","Ruby/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_length_of","(*attr_names)","<p>Validates that the specified attribute matches the length restrictions\nsupplied. Only one option can …\n",null,0],["validates_numericality_of","ActiveModel::Validations::HelperMethods","Ruby/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_numericality_of","(*attr_names)","<p>Validates whether the value of the specified attribute is numeric by trying\nto convert it to a float …\n",null,0],["validates_presence_of","ActiveModel::Validations::HelperMethods","Ruby/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_presence_of","(*attr_names)","<p>Validates that the specified attributes are not blank (as defined by\nObject#blank?). Happens by default …\n",null,0],["validates_size_of","ActiveModel::Validations::HelperMethods","Ruby/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_size_of","(*attr_names)","",null,0],["validates_uniqueness_of","ActiveRecord::Validations::ClassMethods","Ruby/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_uniqueness_of","(*attr_names)","<p>Validates whether the value of the specified attributes are unique across\nthe system. Useful for making …\n",null,0],["validates_with","ActiveModel::Validations","Ruby/classes/ActiveModel/Validations.html#method-i-validates_with","(*args, &block)","<p>Passes the record off to the class or classes specified and allows them to\nadd errors based on more complex …\n",null,0],["validates_with","ActiveModel::Validations::ClassMethods","Ruby/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates_with","(*args, &block)","<p>If you pass any additional configuration options, they will be passed to\nthe class and available as  …\n",null,0],["validators","ActiveModel::Validations::ClassMethods","Ruby/classes/ActiveModel/Validations/ClassMethods.html#method-i-validators","()","<p>List all validators that are being used to validate the model using\n<code>validates_with</code> method.\n",null,0],["validators_on","ActiveModel::Validations::ClassMethods","Ruby/classes/ActiveModel/Validations/ClassMethods.html#method-i-validators_on","(*attributes)","<p>List all validators that being used to validate a specific attribute.\n",null,0],["value","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-value","(object)","",null,0],["value","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-c-value","(object, method_name)","",null,0],["value","ActiveSupport::Cache::Entry","Ruby/classes/ActiveSupport/Cache/Entry.html#method-i-value","()","<p>Get the value stored in the cache.\n",null,0],["value","CGI::Cookie","Rails/classes/CGI/Cookie.html#method-i-value","()","<p>Returns the value or list of values for this cookie.\n",null,1],["value","DL::Importer","Rails/classes/DL/Importer.html#method-i-value","(ty, val=nil)","",null,1],["value","Net::HTTPResponse","Rails/classes/Net/HTTPResponse.html#method-i-value","()","<p>Raises an HTTP error if the response is not 2xx (success).\n",null,1],["value","OpenSSL::Config","Rails/classes/OpenSSL/Config.html#method-i-value","(arg1, arg2 = nil)","",null,1],["value","OpenSSL::X509::Attribute","Rails/classes/OpenSSL/X509/Attribute.html#method-i-value","()","",null,1],["value","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-i-value","()","",null,1],["value","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-value","()","<p>Returns the UNNORMALIZED value of this attribute.  That is, entities have\nbeen expanded to their values …\n",null,1],["value","REXML::CData","Rails/classes/REXML/CData.html#method-i-value","()","",null,1],["value","REXML::Entity","Rails/classes/REXML/Entity.html#method-i-value","()","<p>Returns the value of this entity.  At the moment, only internal entities\nare processed.  If the value …\n",null,1],["value","REXML::Text","Rails/classes/REXML/Text.html#method-i-value","()","<p>Returns the string value of this text.  This is the text without entities,\nas it might be used programmatically, …\n",null,1],["value","Rinda::Tuple","Rails/classes/Rinda/Tuple.html#method-i-value","()","<p>Return the tuple itself\n",null,1],["value","Rinda::TupleEntry","Rails/classes/Rinda/TupleEntry.html#method-i-value","()","<p>Return the object which makes up the tuple itself: the Array or Hash.\n",null,1],["value","Thread","Rails/classes/Thread.html#method-i-value","()","<p>Waits for <em>thr</em> to complete (via <code>Thread#join</code>) and\nreturns its value.\n\n<pre>a = Thread.new { 2 + 2 }\na.value   ...</pre>\n",null,1],["value","WIN32OLE_VARIABLE","Rails/classes/WIN32OLE_VARIABLE.html#method-i-value","()","<p>Returns value if value is exists. If the value does not exist, this method\nreturns nil.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft ...</pre>\n",null,1],["value","WIN32OLE_VARIANT","Rails/classes/WIN32OLE_VARIANT.html#method-i-value","()","<p>Returns Ruby object value from OLE variant.\n\n<pre>obj = WIN32OLE_VARIANT.new(1, WIN32OLE::VARIANT::VT_BSTR) ...</pre>\n",null,1],["value=","CGI::Cookie","Rails/classes/CGI/Cookie.html#method-i-value-3D","(val)","<p>Replaces the value of this cookie with a new value or list of values.\n",null,1],["value=","OpenSSL::X509::Attribute","Rails/classes/OpenSSL/X509/Attribute.html#method-i-value-3D","(p1)","",null,1],["value=","OpenSSL::X509::Extension","Rails/classes/OpenSSL/X509/Extension.html#method-i-value-3D","(p1)","",null,1],["value=","REXML::Text","Rails/classes/REXML/Text.html#method-i-value-3D","( val )","<p>Sets the contents of this text node.  This expects the text to be\nunnormalized.  It returns self.\n\n<pre>e = ...</pre>\n",null,1],["value=","RSS::ITunesItemModel::ITunesDuration","Rails/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-value-3D","(value)","",null,1],["value=","WIN32OLE_VARIANT","Rails/classes/WIN32OLE_VARIANT.html#method-i-value-3D","(p1)","<p>Sets variant value to val. If the val type does not match variant value\ntype(vartype), then val is changed …\n",null,1],["value?","DBM","Rails/classes/DBM.html#method-i-value-3F","(p1)","<p>Returns true if the database contains the specified string value, false\notherwise.\n",null,1],["value?","ENV","Rails/classes/ENV.html#method-c-value-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>value</code>.\n",null,1],["value?","GDBM","Rails/classes/GDBM.html#method-i-value-3F","(p1)","<p>Returns true if the given value <em>v</em> exists within the database.\nReturns false otherwise.\n",null,1],["value?","Hash","Rails/classes/Hash.html#method-i-value-3F","(p1)","<p>Returns <code>true</code> if the given value is present for some key in\n<em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_value?</span>(<span class=\"ruby-value\">100</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["value?","SDBM","Rails/classes/SDBM.html#method-i-value-3F","(p1)","",null,1],["value_before_type_cast","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-i-value_before_type_cast","(object)","",null,0],["value_before_type_cast","ActionView::Helpers::InstanceTag","Ruby/classes/ActionView/Helpers/InstanceTag.html#method-c-value_before_type_cast","(object, method_name)","",null,0],["values","ActiveModel::Errors","Ruby/classes/ActiveModel/Errors.html#method-i-values","()","<p>Returns all message values\n",null,0],["values","ActiveSupport::OrderedHash","Ruby/classes/ActiveSupport/OrderedHash.html#method-i-values","()","",null,0],["values","DBM","Rails/classes/DBM.html#method-i-values","()","<p>Returns an array of all the string values in the database.\n",null,1],["values","ENV","Rails/classes/ENV.html#method-c-values","()","<p>Returns every environment variable value as an Array\n",null,1],["values","GDBM","Rails/classes/GDBM.html#method-i-values","()","<p>Returns an array of all values of this database.\n",null,1],["values","Hash","Rails/classes/Hash.html#method-i-values","()","<p>Returns a new array populated with the values from <em>hsh</em>. See also\n<code>Hash#keys</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["values","SDBM","Rails/classes/SDBM.html#method-i-values","()","",null,1],["values","Struct","Rails/classes/Struct.html#method-i-values","()","<p>Returns the values for this instance as an array.\n\n<pre>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</pre>\n",null,1],["values","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-values","()","<p>Returns an array of values from the database.\n",null,1],["values_at","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-values_at","(*indices)","<p>Returns an array of the values at the specified indices:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[:a] ...</pre>\n",null,0],["values_at","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-values_at","(*indices)","<p>Returns an array of the values at the specified indices:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[:a] ...</pre>\n",null,0],["values_at","Array","Rails/classes/Array.html#method-i-values_at","(*args)","<p>Returns an array containing the elements in <code>self</code> corresponding\nto the given selector(s). The selectors …\n",null,1],["values_at","CSV::Row","Rails/classes/CSV/Row.html#method-i-values_at","(*headers_and_or_indices)","",null,1],["values_at","CSV::Table","Rails/classes/CSV/Table.html#method-i-values_at","(*indices_or_headers)","<p>The mixed mode default is to treat a list of indices as row access,\nreturning the rows indicated.  Anything …\n",null,1],["values_at","DBM","Rails/classes/DBM.html#method-i-values_at","(*args)","<p>Returns an array containing the values associated with the given keys.\n",null,1],["values_at","ENV","Rails/classes/ENV.html#method-c-values_at","(*args)","<p>Returns an array containing the environment variable values associated with\nthe given names.  See also …\n",null,1],["values_at","GDBM","Rails/classes/GDBM.html#method-i-values_at","(*args)","<p>Returns an array of the values associated with each specified <em>key</em>.\n",null,1],["values_at","Hash","Rails/classes/Hash.html#method-i-values_at","(*args)","<p>Return an array containing the values associated with the given keys. Also\nsee <code>Hash.select</code>.\n\n<pre>h = { &quot;cat&quot; ...</pre>\n",null,1],["values_at","MatchData","Rails/classes/MatchData.html#method-i-values_at","(*args)","<p>Uses each <em>index</em> to access the matching values, returning an array\nof the corresponding matches.\n\n<pre>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138: ...</pre>\n",null,1],["values_at","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-i-values_at","(*keys)","",null,1],["values_at","SDBM","Rails/classes/SDBM.html#method-i-values_at","(*args)","",null,1],["values_at","Struct","Rails/classes/Struct.html#method-i-values_at","(*args)","<p>Returns an array containing the elements in <code>self</code> corresponding\nto the given selector(s). The selectors …\n",null,1],["values_at","YAML::DBM","Rails/classes/YAML/DBM.html#method-i-values_at","( *keys )","<p>Returns an array containing the values associated with the given keys.\n",null,1],["var_list","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-i-var_list","(ary, binding)","",null,1],["variable_is_set?","RSS::Maker::Base","Rails/classes/RSS/Maker/Base.html#method-i-variable_is_set-3F","()","",null,1],["variable_kind","WIN32OLE_VARIABLE","Rails/classes/WIN32OLE_VARIABLE.html#method-i-variable_kind","()","<p>Returns variable kind string.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType') ...</pre>\n",null,1],["variables","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-variables","()","",null,1],["variables","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-variables","()","<p>Returns array of WIN32OLE_VARIABLE objects which represent variables\ndefined in OLE class.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft ...</pre>\n",null,1],["variables=","REXML::Functions","Rails/classes/REXML/Functions.html#method-c-variables-3D","(x)","",null,1],["variables=","REXML::XPathParser","Rails/classes/REXML/XPathParser.html#method-i-variables-3D","( vars={} )","",null,1],["varkind","WIN32OLE_VARIABLE","Rails/classes/WIN32OLE_VARIABLE.html#method-i-varkind","()","<p>Returns the number which represents variable kind.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object ...</pre>\n",null,1],["vartype","WIN32OLE_VARIANT","Rails/classes/WIN32OLE_VARIANT.html#method-i-vartype","()","<p>Returns OLE variant type.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">obj</span> = <span class=\"ruby-constant\">WIN32OLE_VARIANT</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;string&quot;</span>)\n<span class=\"ruby-identifier\">obj</span>.<span class=\"ruby-identifier\">vartype</span> <span class=\"ruby-comment\"># =&gt; WIN32OLE::VARIANT::VT_BSTR</span>\n</pre>\n",null,1],["vendor","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-vendor","()","",null,0],["vendor","Rails::Generators::Actions","Ruby/classes/Rails/Generators/Actions.html#method-i-vendor","(filename, data=nil, &block)","<p>Create a new file in the vendor/ directory. Code can be specified in a\nblock or a data string can be …\n",null,0],["vendor_javascripts","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-vendor_javascripts","()","",null,0],["vendor_plugins","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-vendor_plugins","()","",null,0],["vendor_stylesheets","Rails::AppBuilder","Ruby/classes/Rails/AppBuilder.html#method-i-vendor_stylesheets","()","",null,0],["ver","BigDecimal","Rails/classes/BigDecimal.html#method-c-ver","()","<p>Returns the BigDecimal version number.\n<p>Ruby 1.8.0 returns 1.0.0. Ruby 1.8.1 thru 1.8.3 return 1.0.1.\n",null,1],["ver","OptionParser","Rails/classes/OptionParser.html#method-i-ver","()","<p>Returns version string from program_name, version and release.\n",null,1],["verbose","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-i-verbose","()","<p>Get whether the server is in verbose mode.\n<p>In verbose mode, failed calls are logged to stdout.\n",null,1],["verbose","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-c-verbose","()","<p>Get the default value of the :verbose option.\n",null,1],["verbose","Rake::FileUtilsExt","Rails/classes/Rake/FileUtilsExt.html#method-i-verbose","(value=nil)","<p>Get/set the verbose flag controlling output from the FileUtils utilities. \nIf verbose is true, then the …\n",null,1],["verbose","Sys","Rails/classes/Sys.html#method-i-verbose","(&block)","<p>Perform a block with $verbose enabled.\n",null,1],["verbose=","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-i-verbose-3D","(v)","<p>Set whether to operate in verbose mode.\n<p>In verbose mode, failed calls are logged to stdout.\n",null,1],["verbose=","DRb::DRbServer","Rails/classes/DRb/DRbServer.html#method-c-verbose-3D","(on)","<p>Set the default value of the :verbose option.\n<p>See #new().  The initial default value is false.\n",null,1],["verbose?","IRB::Context","Rails/classes/IRB/Context.html#method-i-verbose-3F","()","",null,1],["verified_request?","ActionController::RequestForgeryProtection","Ruby/classes/ActionController/RequestForgeryProtection.html#method-i-verified_request-3F","()","<p>Returns true or false if a request is verified. Checks:\n<p>is it a GET request?  Gets should be safe and …\n",null,0],["verify","ActiveSupport::MessageVerifier","Ruby/classes/ActiveSupport/MessageVerifier.html#method-i-verify","(signed_message)","",null,0],["verify","Net::POP3","Rails/classes/Net/POP3.html#method-c-verify","()","<p>returns whether verify_mode is enable from POP3.ssl_params\n",null,1],["verify","Net::POP3","Rails/classes/Net/POP3.html#method-c-verify","()","<p>returns whether verify_mode is enable from POP3.ssl_params\n",null,1],["verify","Net::POP3","Rails/classes/Net/POP3.html#method-c-verify","()","<p>returns whether verify_mode is enable from POP3.ssl_params\n",null,1],["verify","Net::POP3","Rails/classes/Net/POP3.html#method-c-verify","()","<p>returns whether verify_mode is enable from POP3.ssl_params\n",null,1],["verify","OpenSSL::Netscape::SPKI","Rails/classes/OpenSSL/Netscape/SPKI.html#method-i-verify","(p1)","<p>Checks that cert signature is made with PRIVversion of this PUBLIC ‘key’\n",null,1],["verify","OpenSSL::OCSP::BasicResponse","Rails/classes/OpenSSL/OCSP/BasicResponse.html#method-i-verify","(p1, p2, p3 = v3)","",null,1],["verify","OpenSSL::OCSP::Request","Rails/classes/OpenSSL/OCSP/Request.html#method-i-verify","(p1, p2, p3 = v3)","",null,1],["verify","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-i-verify","(p1, p2, p3 = v3, p4 = v4)","",null,1],["verify","OpenSSL::PKey::PKey","Rails/classes/OpenSSL/PKey/PKey.html#method-i-verify","(p1, p2, p3)","<p>To verify the <code>String</code> <code>signature</code>,\n<code>digest</code>, an instance of OpenSSL::Digest, must be provided to\nre-compute …\n",null,1],["verify","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-verify","(p1)","",null,1],["verify","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-verify","(p1)","<p>Checks that cert signature is made with PRIVversion of this PUBLIC ‘key’\n",null,1],["verify","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-verify","(p1)","<p>Checks that cert signature is made with PRIVversion of this PUBLIC ‘key’\n",null,1],["verify","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-verify","(p1, p2 = v2)","",null,1],["verify!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Ruby/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-verify-21","(*ignored)","<p>Checks whether the connection to the database is still active (i.e. not\nstale). This is done under the …\n",null,0],["verify_api_key","Gem::GemcutterUtilities","Rails/classes/Gem/GemcutterUtilities.html#method-i-verify_api_key","(key)","",null,1],["verify_authenticity_token","ActionController::RequestForgeryProtection","Ruby/classes/ActionController/RequestForgeryProtection.html#method-i-verify_authenticity_token","()","<p>The actual before_filter that is used. Modify this to change how you handle\nunverified requests.\n",null,0],["verify_callback=","OpenSSL::X509::Store","Rails/classes/OpenSSL/X509/Store.html#method-i-verify_callback-3D","(p1)","<p>General callback for OpenSSL verify\n",null,1],["verify_certificate_identity","OpenSSL::SSL","Rails/classes/OpenSSL/SSL.html#method-c-verify_certificate_identity","(cert, hostname)","",null,1],["verify_gem","Gem::Security::Policy","Rails/classes/Gem/Security/Policy.html#method-i-verify_gem","(signature, data, chain, time = Time.now)","<p>Verify that the gem data with the given signature and signing chain matched\nthis security policy at the …\n",null,1],["verify_gem","Gem::Validator","Rails/classes/Gem/Validator.html#method-i-verify_gem","(gem_data)","<p>Given a gem file’s contents, validates against its own MD5 checksum\n<p>gem_data &mdash; <p>String &mdash; Contents of the gem …\n\n\n",null,1],["verify_gem_file","Gem::Validator","Rails/classes/Gem/Validator.html#method-i-verify_gem_file","(gem_path)","<p>Given the path to a gem file, validates against its own MD5 checksum\n<p>gem_path &mdash; <p>String &mdash; Path to gem file …\n\n\n",null,1],["verify_gem_home","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-verify_gem_home","(unpack = false)","",null,1],["verify_request?","Mime::Type","Ruby/classes/Mime/Type.html#method-i-verify_request-3F","()","<p>Returns true if Action Pack should check requests using this Mime Type for\npossible request forgery. …\n",null,0],["verify_result","OpenSSL::SSL::SSLSocket","Rails/classes/OpenSSL/SSL/SSLSocket.html#method-i-verify_result","()","<p>Returns the result of the peer certificates verification.  See verify(1)\nfor error values and descriptions. …\n",null,1],["verify_trust_dir","Gem::Security","Rails/classes/Gem/Security.html#method-c-verify_trust_dir","(path, perms)","<p>Make sure the trust directory exists.  If it does exist, make sure it’s\nactually a directory.  If not, …\n",null,1],["version","Rails","Ruby/classes/Rails.html#method-c-version","()","",null,0],["version","ERB","Rails/classes/ERB.html#method-c-version","()","<p>Returns revision information for the erb.rb module.\n",null,1],["version","IRB","Rails/classes/IRB.html#method-c-version","()","<p>IRB version method\n",null,1],["version","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-version","()","",null,1],["version","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-version","()","",null,1],["version","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-version","()","",null,1],["version","OptionParser","Rails/classes/OptionParser.html#method-i-version","()","<p>Version\n",null,1],["version","REXML::Document","Rails/classes/REXML/Document.html#method-i-version","()","<p>@return the XMLDecl version of this document as a String. If no XMLDecl has\nbeen set, returns the default …\n",null,1],["version","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-version","()","<p>Returns the type library version.\n\n<pre>tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\nputs ...</pre>\n",null,1],["version=","Gem::Specification","Rails/classes/Gem/Specification.html#method-i-version-3D","(version)","<p>Set the version to <code>version</code>, potentially also setting\nrequired_rubygems_version if <code>version</code> indicates it …\n",null,1],["version=","OpenSSL::X509::CRL","Rails/classes/OpenSSL/X509/CRL.html#method-i-version-3D","(p1)","",null,1],["version=","OpenSSL::X509::Certificate","Rails/classes/OpenSSL/X509/Certificate.html#method-i-version-3D","(p1)","",null,1],["version=","OpenSSL::X509::Request","Rails/classes/OpenSSL/X509/Request.html#method-i-version-3D","(p1)","",null,1],["version_1_2","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-version_1_2","()","<p>Turns on net/http 1.2 (ruby 1.8) features. Defaults to ON in ruby 1.8 or\nlater.\n",null,1],["version_1_2","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-version_1_2","()","<p>Turns on net/http 1.2 (ruby 1.8) features. Defaults to ON in ruby 1.8 or\nlater.\n",null,1],["version_1_2?","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-version_1_2-3F","()","<p>Returns true if net/http is in version 1.2 mode. Defaults to true.\n",null,1],["version_1_2?","Net::HTTP","Rails/classes/Net/HTTP.html#method-c-version_1_2-3F","()","<p>Returns true if net/http is in version 1.2 mode. Defaults to true.\n",null,1],["versions","RSS::Maker","Rails/classes/RSS/Maker.html#method-c-versions","()","",null,1],["vi_editing_mode","Readline","Rails/classes/Readline.html#method-c-vi_editing_mode","()","<p>Specifies VI editing mode. See the manual of GNU Readline for details of VI\nediting mode.\n<p>Raises NotImplementedError …\n",null,1],["vi_editing_mode?","Readline","Rails/classes/Readline.html#method-c-vi_editing_mode-3F","()","<p>Returns true if vi mode is active. Returns false if not.\n<p>Raises NotImplementedError if the using readline …\n",null,1],["video_path","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-video_path","(source)","<p>Computes the path to a video asset in the public videos directory. Full\npaths from the document root …\n",null,0],["video_tag","ActionView::Helpers::AssetTagHelper","Ruby/classes/ActionView/Helpers/AssetTagHelper.html#method-i-video_tag","(sources, options = {})","<p>Returns an html video tag for the <code>sources</code>. If\n<code>sources</code> is a string, a single video tag will be returned. …\n",null,0],["view_assigns","AbstractController::Rendering","Ruby/classes/AbstractController/Rendering.html#method-i-view_assigns","()","<p>This method should return a hash with assigns. You can overwrite this\nconfiguration per controller. :api: …\n",null,0],["view_context","AbstractController::Rendering","Ruby/classes/AbstractController/Rendering.html#method-i-view_context","()","<p>An instance of a view class. The default view class is ActionView::Base\n<p>The view class must have the following …\n",null,0],["view_context_class","AbstractController::Rendering","Ruby/classes/AbstractController/Rendering.html#method-i-view_context_class","()","",null,0],["view_context_class","AbstractController::Rendering::ClassMethods","Ruby/classes/AbstractController/Rendering/ClassMethods.html#method-i-view_context_class","()","",null,0],["view_paths","AbstractController::ViewPaths::ClassMethods","Ruby/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-view_paths","()","<p>A list of all of the default view paths for this controller.\n",null,0],["view_paths=","AbstractController::ViewPaths::ClassMethods","Ruby/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-view_paths-3D","(paths)","<p>Set the view paths.\n<p>Parameters\n<p><code>paths</code> - If a PathSet is provided, use that; otherwise, process\nthe parameter ...\n",null,0],["view_paths=","ActionView::LookupContext::ViewPaths","Ruby/classes/ActionView/LookupContext/ViewPaths.html#method-i-view_paths-3D","(paths)","<p>Whenever setting view paths, makes a copy so we can manipulate then in\ninstance objects as we wish.\n",null,0],["view_renderer","AbstractController::Rendering","Ruby/classes/AbstractController/Rendering.html#method-i-view_renderer","()","<p>Returns an object that is able to render templates.\n",null,0],["virtual_host","WEBrick::HTTPServer","Rails/classes/WEBrick/HTTPServer.html#method-i-virtual_host","(server)","<p>Adds <code>server</code> as a virtual host.\n",null,1],["visible?","WIN32OLE_METHOD","Rails/classes/WIN32OLE_METHOD.html#method-i-visible-3F","()","<p>Returns true if the method is public.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks') ...</pre>\n",null,1],["visible?","WIN32OLE_TYPE","Rails/classes/WIN32OLE_TYPE.html#method-i-visible-3F","()","<p>Returns true if the OLE class is public.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', ...</pre>\n",null,1],["visible?","WIN32OLE_TYPELIB","Rails/classes/WIN32OLE_TYPELIB.html#method-i-visible-3F","()","<p>Returns true if the type library information is not hidden. If wLibFlags of\nTLIBATTR is 0 or LIBFLAG_FRESTRICTED …\n",null,1],["visible?","WIN32OLE_VARIABLE","Rails/classes/WIN32OLE_VARIABLE.html#method-i-visible-3F","()","<p>Returns true if the variable is public.\n\n<pre>tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', ...</pre>\n",null,1],["visible_action?","ActionController::HideActions::ClassMethods","Ruby/classes/ActionController/HideActions/ClassMethods.html#method-i-visible_action-3F","(action_name)","",null,0],["visit_Array","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Array","(o)","",null,1],["visit_BigDecimal","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_BigDecimal","(o)","",null,1],["visit_Class","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Class","(o)","",null,1],["visit_Complex","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Complex","(o)","",null,1],["visit_Date","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Date","(o)","",null,1],["visit_DateTime","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_DateTime","(o)","",null,1],["visit_Exception","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Exception","(o)","",null,1],["visit_FalseClass","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_FalseClass","(o)","",null,1],["visit_Float","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Float","(o)","",null,1],["visit_Hash","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Hash","(o)","",null,1],["visit_Integer","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Integer","(o)","",null,1],["visit_Module","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Module","(o)","",null,1],["visit_NilClass","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_NilClass","(o)","",null,1],["visit_Object","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Object","(o)","",null,1],["visit_Psych_Nodes_Alias","Psych::Visitors::Emitter","Rails/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Alias","(o)","",null,1],["visit_Psych_Nodes_Alias","Psych::Visitors::ToRuby","Rails/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Alias","(o)","",null,1],["visit_Psych_Nodes_Document","Psych::Visitors::Emitter","Rails/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Document","(o)","",null,1],["visit_Psych_Nodes_Document","Psych::Visitors::ToRuby","Rails/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Document","(o)","",null,1],["visit_Psych_Nodes_Mapping","Psych::Visitors::Emitter","Rails/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Mapping","(o)","",null,1],["visit_Psych_Nodes_Mapping","Psych::Visitors::ToRuby","Rails/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Mapping","(o)","",null,1],["visit_Psych_Nodes_Scalar","Psych::Visitors::Emitter","Rails/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Scalar","(o)","",null,1],["visit_Psych_Nodes_Scalar","Psych::Visitors::ToRuby","Rails/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Scalar","(o)","",null,1],["visit_Psych_Nodes_Sequence","Psych::Visitors::Emitter","Rails/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Sequence","(o)","",null,1],["visit_Psych_Nodes_Sequence","Psych::Visitors::ToRuby","Rails/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Sequence","(o)","",null,1],["visit_Psych_Nodes_Stream","Psych::Visitors::Emitter","Rails/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Stream","(o)","",null,1],["visit_Psych_Nodes_Stream","Psych::Visitors::ToRuby","Rails/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Stream","(o)","",null,1],["visit_Psych_Omap","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Psych_Omap","(o)","",null,1],["visit_Psych_Set","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Psych_Set","(o)","",null,1],["visit_Range","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Range","(o)","",null,1],["visit_Rational","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Rational","(o)","",null,1],["visit_Regexp","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Regexp","(o)","",null,1],["visit_String","Gem::NoAliasYAMLTree","Rails/classes/Gem/NoAliasYAMLTree.html#method-i-visit_String","(str)","",null,1],["visit_String","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_String","(o)","",null,1],["visit_Struct","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Struct","(o)","",null,1],["visit_Symbol","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Symbol","(o)","",null,1],["visit_Time","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Time","(o)","",null,1],["visit_TrueClass","Psych::Visitors::YAMLTree","Rails/classes/Psych/Visitors/YAMLTree.html#method-i-visit_TrueClass","(o)","",null,1],["voidcmd","Net::FTP","Rails/classes/Net/FTP.html#method-i-voidcmd","(cmd)","<p>Sends a command and expect a response beginning with ‘2’.\n",null,1],["w3cdtf","Time","Rails/classes/Time.html#method-c-w3cdtf","(date)","",null,1],["w3cdtf","Time","Rails/classes/Time.html#method-i-w3cdtf","()","",null,1],["wait","ActiveSupport::Notifications::Fanout","Ruby/classes/ActiveSupport/Notifications/Fanout.html#method-i-wait","()","<p>This is a sync queue, so there is no waiting.\n",null,0],["wait","ConditionVariable","Rails/classes/ConditionVariable.html#method-i-wait","(mutex, timeout=nil)","<p>Releases the lock held in <code>mutex</code> and waits; reacquires the lock\non wakeup.\n<p>If <code>timeout</code> is given, this method …\n",null,1],["wait","IO","Rails/classes/IO.html#method-i-wait","(p1 = v1)","<p>Waits until input is available or times out and returns self or nil when\nEOF is reached.\n",null,1],["wait","MonitorMixin::ConditionVariable","Rails/classes/MonitorMixin/ConditionVariable.html#method-i-wait","(timeout = nil)","<p>Releases the lock held in the associated monitor and waits; reacquires the\nlock on wakeup.\n<p>If <code>timeout</code> …\n",null,1],["wait","Process","Rails/classes/Process.html#method-c-wait","(p1 = v1, p2 = v2)","<p>Waits for a child process to exit, returns its process id, and sets\n<code>$?</code> to a <code>Process::Status</code> object containing …\n",null,1],["wait","Rinda::WaitTemplateEntry","Rails/classes/Rinda/WaitTemplateEntry.html#method-i-wait","()","",null,1],["wait2","Process","Rails/classes/Process.html#method-c-wait2","(*args)","<p>Waits for a child process to exit (see Process::waitpid for exact\nsemantics) and returns an array containing …\n",null,1],["wait?","Shell::BuiltInCommand","Rails/classes/Shell/BuiltInCommand.html#method-i-wait-3F","()","",null,1],["wait?","Shell::SystemCommand","Rails/classes/Shell/SystemCommand.html#method-i-wait-3F","()","",null,1],["wait_all_jobs_execution","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-wait_all_jobs_execution","()","<p>wait for all jobs to terminate\n",null,1],["wait_to_finish_all_process_controllers","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-c-wait_to_finish_all_process_controllers","()","",null,1],["wait_until","MonitorMixin::ConditionVariable","Rails/classes/MonitorMixin/ConditionVariable.html#method-i-wait_until","()","<p>Calls wait repeatedly until the given block yields a truthy value.\n",null,1],["wait_while","MonitorMixin::ConditionVariable","Rails/classes/MonitorMixin/ConditionVariable.html#method-i-wait_while","()","<p>Calls wait repeatedly while the given block yields a truthy value.\n",null,1],["wait_writable","Object","Rails/classes/Object.html#method-i-wait_writable","()","<p>Wait until the file becomes writable.\n\n<pre>ruby -run -e wait_writable -- [OPTION] FILE\n\n-n RETRY    count to ...</pre>\n",null,1],["waitall","Process","Rails/classes/Process.html#method-c-waitall","()","<p>Waits for all children, returning an array of <em>pid</em>/<em>status</em>\npairs (where <em>status</em> is a <code>Process::Status</code> object). …\n",null,1],["waitfor","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-waitfor","(options)","<p>Read data from the host until a certain sequence is matched.\n<p>If a block is given, the received data will …\n",null,1],["waiting","DEBUGGER__","Rails/classes/DEBUGGER__.html#method-c-waiting","()","",null,1],["waiting_job?","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-waiting_job-3F","(job)","",null,1],["waiting_jobs","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-waiting_jobs","()","",null,1],["waiting_jobs_exist?","Shell::ProcessController","Rails/classes/Shell/ProcessController.html#method-i-waiting_jobs_exist-3F","()","",null,1],["waitpid","Process","Rails/classes/Process.html#method-c-waitpid","(p1 = v1, p2 = v2)","<p>Waits for a child process to exit, returns its process id, and sets\n<code>$?</code> to a <code>Process::Status</code> object containing …\n",null,1],["waitpid2","Process","Rails/classes/Process.html#method-c-waitpid2","(*args)","<p>Waits for a child process to exit (see Process::waitpid for exact\nsemantics) and returns an array containing …\n",null,1],["wakeup","Thread","Rails/classes/Thread.html#method-i-wakeup","()","<p>Marks <em>thr</em> as eligible for scheduling (it may still remain blocked\non I/O, however). Does not invoke the …\n",null,1],["wants?","ActiveSupport::Multibyte::Chars","Ruby/classes/ActiveSupport/Multibyte/Chars.html#method-c-wants-3F","(string)","<p>Returns <code>true</code> if the Chars class can and should act as a proxy\nfor the string <em>string</em>. Returns <code>false</code> otherwise. …\n",null,0],["warn","ActiveSupport::Deprecation","Ruby/classes/ActiveSupport/Deprecation.html#method-c-warn","(message = nil, callstack = caller)","<p>Outputs a deprecation warning to the output configured by\n<code>ActiveSupport::Deprecation.behavior</code>\n\n<pre>ActiveSupport::Deprecation.warn(&quot;something ...</pre>\n",null,0],["warn","Kernel","Rails/classes/Kernel.html#method-i-warn","(p1)","<p>Display the given message (followed by a newline) on STDERR unless warnings\nare disabled (for example …\n",null,1],["warn","Logger","Rails/classes/Logger.html#method-i-warn","(progname = nil, &block)","<p>Log a <code>WARN</code> message.\n<p>See #info for more information.\n",null,1],["warn","OptionParser","Rails/classes/OptionParser.html#method-i-warn","(mesg = $!)","",null,1],["warn","RDoc::Parser::Ruby","Rails/classes/RDoc/Parser/Ruby.html#method-i-warn","(msg)","<p>Prints <code>msg</code> to +$stderr+ unless we’re being quiet\n",null,1],["warn","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-warn","(msg)","<p>Shortcut for logging a WARN message\n",null,1],["warn?","Logger","Rails/classes/Logger.html#method-i-warn-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>WARN</code> messages.\n",null,1],["warn?","WEBrick::BasicLog","Rails/classes/WEBrick/BasicLog.html#method-i-warn-3F","()","<p>Will the logger output WARN messages?\n",null,1],["watch","ActiveSupport::FileWatcher","Ruby/classes/ActiveSupport/FileWatcher.html#method-i-watch","(pattern, &block)","",null,0],["watch_namespaces","ActiveSupport::Dependencies::WatchStack","Ruby/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-watch_namespaces","(namespaces)","<p>Add a set of modules to the watch stack, remembering the initial constants\n",null,0],["watchable_args","Rails::Application","Ruby/classes/Rails/Application.html#method-i-watchable_args","()","<p>Returns an array of file paths appended with a hash of\ndirectories-extensions suitable for ActiveSupport::FileUpdateChecker …\n",null,0],["watchable_dirs","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-watchable_dirs","()","<p>Add directories that should be watched for change. The key of the hashes\nshould be directories and the …\n",null,0],["watchable_files","Rails::Railtie::Configuration","Ruby/classes/Rails/Railtie/Configuration.html#method-i-watchable_files","()","<p>Add files that should be watched for change.\n",null,0],["watching?","ActiveSupport::Dependencies::WatchStack","Ruby/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-watching-3F","()","",null,0],["wday","Date","Rails/classes/Date.html#method-i-wday","()","<p>Returns the day of week (0-6, Sunday is zero).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">wday</span>           <span class=\"ruby-comment\">#=&gt; 6</span>\n</pre>\n",null,1],["wday","Time","Rails/classes/Time.html#method-i-wday","()","<p>Returns an integer representing the day of the week, 0..6, with Sunday ==\n0.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-20 ...</span>\n</pre>\n",null,1],["weakref_alive?","WeakRef","Rails/classes/WeakRef.html#method-i-weakref_alive-3F","()","<p>Returns true if the referenced object is still alive.\n",null,1],["wednesday?","Date","Rails/classes/Date.html#method-i-wednesday-3F","()","<p>Returns true if the date is Wednesday.\n",null,1],["wednesday?","Time","Rails/classes/Time.html#method-i-wednesday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Wednesday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">1993</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">24</span>)      <span class=\"ruby-comment\">#=&gt; 1993-02-24 00:00:00 -0600 ...</span>\n</pre>\n",null,1],["week","Numeric","Ruby/classes/Numeric.html#method-i-week","()","",null,0],["weeks","Numeric","Ruby/classes/Numeric.html#method-i-weeks","()","",null,0],["weeks_ago","Date","Ruby/classes/Date.html#method-i-weeks_ago","(weeks)","<p>Returns a new Date/DateTime representing the time a number of specified\nweeks ago.\n",null,0],["weeks_ago","Time","Ruby/classes/Time.html#method-i-weeks_ago","(weeks)","<p>Returns a new Time representing the time a number of specified weeks ago.\n",null,0],["when_invoked","Gem::Command","Rails/classes/Gem/Command.html#method-i-when_invoked","(&block)","<p>Call the given block when invoked.\n<p>Normal command invocations just executes the <code>execute</code> method of\nthe …\n",null,1],["when_writing","Rake::FileUtilsExt","Rails/classes/Rake/FileUtilsExt.html#method-i-when_writing","(msg=nil)","<p>Use this function to prevent potentially destructive ruby code from running\nwhen the :nowrite flag is …\n",null,1],["where","ActiveRecord::QueryMethods","Ruby/classes/ActiveRecord/QueryMethods.html#method-i-where","(opts, *rest)","",null,0],["where_values_hash","ActiveRecord::Relation","Ruby/classes/ActiveRecord/Relation.html#method-i-where_values_hash","()","",null,0],["which_to_update","Gem::Commands::UpdateCommand","Rails/classes/Gem/Commands/UpdateCommand.html#method-i-which_to_update","(highest_installed_gems, gem_names, system = false)","",null,1],["whitespace","REXML::Element","Rails/classes/REXML/Element.html#method-i-whitespace","()","<p>Evaluates to <code>true</code> if whitespace is respected for this element.\nThis is the case if:\n<p>Neither :<code>respect_whitespace</code> …\n",null,1],["why_not_ok?","Gem::DependencyList","Rails/classes/Gem/DependencyList.html#method-i-why_not_ok-3F","(quick = false)","",null,1],["win32_last_error","DL::CFunc","Rails/classes/DL/CFunc.html#method-c-win32_last_error","()","<p>Returns the last win32 error for the current executing thread\n",null,1],["win32_last_error","Fiddle","Rails/classes/Fiddle.html#method-c-win32_last_error","()","<p>Returns the last win32 <code>Error</code> of the current executing\n<code>Thread</code> or nil if none\n",null,1],["win32_last_error=","Fiddle","Rails/classes/Fiddle.html#method-c-win32_last_error-3D","(error)","<p>Sets the last win32 <code>Error</code> of the current executing\n<code>Thread</code> to <code>error</code>\n",null,1],["win_platform?","Gem","Rails/classes/Gem.html#method-c-win_platform-3F","()","<p>Is this a windows platform?\n",null,1],["windows?","Rake::Application","Rails/classes/Rake/Application.html#method-i-windows-3F","()","",null,1],["windows?","Rake::Win32","Rails/classes/Rake/Win32.html#method-c-windows-3F","()","<p>True if running on a windows system.\n",null,1],["windows_stub_script","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-windows_stub_script","(bindir, bin_file_name)","<p>return the stub script text used to launch the true ruby script\n",null,1],["winsize","IO","Rails/classes/IO.html#method-i-winsize","()","<p>Returns console size.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["winsize=","IO","Rails/classes/IO.html#method-i-winsize-3D","(p1)","<p>Tries to set console size.  The effect depends on the platform and the\nrunning environment.\n<p>You must require …\n",null,1],["with","AbstractController::Railties::RoutesHelpers","Ruby/classes/AbstractController/Railties/RoutesHelpers.html#method-c-with","(routes)","",null,0],["with","ActionController::Railties::Paths","Ruby/classes/ActionController/Railties/Paths.html#method-c-with","(app)","",null,0],["with","OptionParser","Rails/classes/OptionParser.html#method-c-with","(*args, &block)","<p>Initializes a new instance and evaluates the optional block in context of\nthe instance. Arguments <code>args</code> …\n",null,1],["with_backend","ActiveSupport::JSON","Ruby/classes/ActiveSupport/JSON.html#method-c-with_backend","(name)","",null,0],["with_backend","ActiveSupport::XmlMini","Ruby/classes/ActiveSupport/XmlMini.html#method-i-with_backend","(name)","",null,0],["with_config","Object","Rails/classes/Object.html#method-i-with_config","(config, default=nil)","<p>Tests for the presence of a –with-<code>config</code> or\n–without-<code>config</code> option. Returns true if the with option …\n",null,1],["with_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","Ruby/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-with_connection","()","<p>If a connection already exists yield it to the block. If no connection\nexists checkout a connection, …\n",null,0],["with_default_scope","ActionDispatch::Routing::Mapper::Base","Ruby/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-with_default_scope","(scope, &block)","",null,0],["with_defaults","Rake::TaskArguments","Rails/classes/Rake/TaskArguments.html#method-i-with_defaults","(defaults)","<p>Specify a hash of default values for task arguments. Use the defaults only\nif there is no specific value …\n",null,1],["with_dummy_app?","Rails::Generators::PluginNewGenerator","Ruby/classes/Rails/Generators/PluginNewGenerator.html#method-i-with_dummy_app-3F","()","",null,0],["with_exclusive_scope","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-with_exclusive_scope","()","",null,0],["with_exclusive_scope","ActiveRecord::Scoping::ClassMethods","Ruby/classes/ActiveRecord/Scoping/ClassMethods.html#method-i-with_exclusive_scope","(method_scoping = {}, &block)","<p>Works like with_scope, but discards any nested properties.\n",null,0],["with_fallbacks","ActionView::LookupContext::ViewPaths","Ruby/classes/ActionView/LookupContext/ViewPaths.html#method-i-with_fallbacks","()","<p>Add fallbacks to the view paths. Useful in cases you are rendering a :file.\n",null,0],["with_friend","DRb::DRbObject","Rails/classes/DRb/DRbObject.html#method-c-with_friend","(uri)","",null,1],["with_index","Enumerator","Rails/classes/Enumerator.html#method-i-with_index","(p1 = v1)","<p>Iterates the given block for each element with an index, which starts from\n<code>offset</code>.  If no block is given, …\n",null,1],["with_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_indifferent_access","()","",null,0],["with_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Ruby/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_indifferent_access","()","",null,0],["with_indifferent_access","Hash","Ruby/classes/Hash.html#method-i-with_indifferent_access","()","<p>Returns an <code>ActiveSupport::HashWithIndifferentAccess</code> out of its\nreceiver:\n\n<pre class=\"ruby\">{:<span class=\"ruby-identifier\">a</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span>}.<span class=\"ruby-identifier\">with_indifferent_access</span>[<span class=\"ruby-string\">&quot;a&quot;</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["with_local_cache","ActiveSupport::Cache::Strategy::LocalCache","Ruby/classes/ActiveSupport/Cache/Strategy/LocalCache.html#method-i-with_local_cache","()","<p>Use a local cache for the duration of block.\n",null,0],["with_lock","ActiveRecord::Locking::Pessimistic","Ruby/classes/ActiveRecord/Locking/Pessimistic.html#method-i-with_lock","(lock = true)","<p>Wraps the passed block in a transaction, locking the object before\nyielding. You pass can the SQL locking …\n",null,0],["with_object","Enumerator","Rails/classes/Enumerator.html#method-i-with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object,\n<code>obj</code>, and returns <code>obj</code>\n<p>If no block is …\n",null,1],["with_object","Prime::PseudoPrimeGenerator","Rails/classes/Prime/PseudoPrimeGenerator.html#method-i-with_object","(obj)","<p>see <code>Enumerator</code>#with_object.\n",null,1],["with_options","Object","Ruby/classes/Object.html#method-i-with_options","(options)","<p>An elegant way to factor duplication out of options passed to a series of\nmethod calls. Each method called …\n",null,0],["with_response","Gem::GemcutterUtilities","Rails/classes/Gem/GemcutterUtilities.html#method-i-with_response","(resp)","",null,1],["with_scope","ActiveRecord::Scoping::ClassMethods","Ruby/classes/ActiveRecord/Scoping/ClassMethods.html#method-i-with_scope","(scope = {}, action = :merge, &block)","<p>with_scope lets you apply options to inner block incrementally. It takes a\nhash and the keys must be …\n",null,0],["with_scope_level","ActionDispatch::Routing::Mapper::Resources","Ruby/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-with_scope_level","(kind, resource = parent_resource)","",null,0],["with_transaction_returning_status","ActiveRecord::Transactions","Ruby/classes/ActiveRecord/Transactions.html#method-i-with_transaction_returning_status","()","<p>Executes <code>method</code> within a transaction and captures its return\nvalue as a status flag. If the status is …\n",null,0],["with_warnings","Kernel","Ruby/classes/Kernel.html#method-i-with_warnings","(flag)","<p>Sets $VERBOSE for the duration of the block and back to its original value\nafterwards.\n",null,0],["without","ActiveRecord::IdentityMap","Ruby/classes/ActiveRecord/IdentityMap.html#method-c-without","()","",null,0],["without_modules","ActionController::Base","Ruby/classes/ActionController/Base.html#method-c-without_modules","(*modules)","",null,0],["word_wrap","ActionView::Helpers::TextHelper","Ruby/classes/ActionView/Helpers/TextHelper.html#method-i-word_wrap","(text, *args)","<p>Wraps the <code>text</code> into lines no longer than\n<code>line_width</code> width. This method breaks on the first whitespace …\n",null,0],["wordy","Gem::PlatformMismatch","Rails/classes/Gem/PlatformMismatch.html#method-i-wordy","()","",null,1],["workspaces","IRB::Context","Rails/classes/IRB/Context.html#method-i-workspaces","()","",null,1],["world_readable?","File","Rails/classes/File.html#method-c-world_readable-3F","(p1)","<p>If <em>file_name</em> is readable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,1],["world_readable?","File::Stat","Rails/classes/File/Stat.html#method-i-world_readable-3F","()","<p>If <em>stat</em> is readable by others, returns an integer representing the\nfile permission bits of <em>stat</em>. Returns …\n",null,1],["world_readable?","FileTest","Rails/classes/FileTest.html#method-i-world_readable-3F","(p1)","<p>If <em>file_name</em> is readable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,1],["world_readable?","Pathname","Rails/classes/Pathname.html#method-i-world_readable-3F","()","<p>See <code>FileTest.world_readable?</code>.\n",null,1],["world_writable?","File","Rails/classes/File.html#method-c-world_writable-3F","(p1)","<p>If <em>file_name</em> is writable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,1],["world_writable?","File::Stat","Rails/classes/File/Stat.html#method-i-world_writable-3F","()","<p>If <em>stat</em> is writable by others, returns an integer representing the\nfile permission bits of <em>stat</em>. Returns …\n",null,1],["world_writable?","FileTest","Rails/classes/FileTest.html#method-i-world_writable-3F","(p1)","<p>If <em>file_name</em> is writable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,1],["world_writable?","Pathname","Rails/classes/Pathname.html#method-i-world_writable-3F","()","<p>See <code>FileTest.world_writable?</code>.\n",null,1],["wrap","Array","Ruby/classes/Array.html#method-c-wrap","(object)","<p>Wraps its argument in an array unless it is already an array (or\narray-like).\n<p>Specifically:\n<p>If the argument …\n",null,0],["wrap","Gem::Command","Rails/classes/Gem/Command.html#method-i-wrap","(text, width)","<p>Wraps <code>text</code> to <code>width</code>\n",null,1],["wrap","RDoc::Markup::ToRdoc","Rails/classes/RDoc/Markup/ToRdoc.html#method-i-wrap","(text)","<p>Wraps <code>text</code> to #width\n",null,1],["wrap","RDoc::Text","Rails/classes/RDoc/Text.html#method-i-wrap","(txt, line_len = 76)","<p>Wraps <code>txt</code> to <code>line_len</code>\n",null,1],["wrap","REXML::Text","Rails/classes/REXML/Text.html#method-i-wrap","(string, width, addnewline=false)","",null,1],["wrap","Zlib::GzipFile","Rails/classes/Zlib/GzipFile.html#method-c-wrap","(*args)","<p>Creates a GzipFile object associated with <code>io</code>, and executes the\nblock with the newly created GzipFile …\n",null,1],["wrap_arg","DL::ValueUtil","Rails/classes/DL/ValueUtil.html#method-i-wrap_arg","(arg, ty, funcs = [], &block)","",null,1],["wrap_args","DL::ValueUtil","Rails/classes/DL/ValueUtil.html#method-i-wrap_args","(args, tys, funcs, &block)","",null,1],["wrap_parameters","ActionController::ParamsWrapper::ClassMethods","Ruby/classes/ActionController/ParamsWrapper/ClassMethods.html#method-i-wrap_parameters","(name_or_model_or_options, options = {})","<p>Sets the name of the wrapper key, or the model which\n<code>ParamsWrapper</code> would use to determine the attribute …\n",null,0],["wrap_result","DL::Function","Rails/classes/DL/Function.html#method-i-wrap_result","(r)","",null,1],["wrap_with_namespace","Rails::Generators::NamedBase","Ruby/classes/Rails/Generators/NamedBase.html#method-i-wrap_with_namespace","(content)","",null,0],["writable?","File","Rails/classes/File.html#method-c-writable-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the effective\nuser id of this process.\n",null,1],["writable?","File::Stat","Rails/classes/File/Stat.html#method-i-writable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is writable by the effective\nuser id of this process.\n\n<pre>File.stat(&quot;testfile&quot;).writable? ...</pre>\n",null,1],["writable?","FileTest","Rails/classes/FileTest.html#method-i-writable-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the effective\nuser id of this process.\n",null,1],["writable?","Pathname","Rails/classes/Pathname.html#method-i-writable-3F","()","<p>See <code>FileTest.writable?</code>.\n",null,1],["writable_real?","File","Rails/classes/File.html#method-c-writable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the real user id\nof this process.\n",null,1],["writable_real?","File::Stat","Rails/classes/File/Stat.html#method-i-writable_real-3F","()","<p>Returns <code>true</code> if <em>stat</em> is writable by the real user id\nof this process.\n\n<pre>File.stat(&quot;testfile&quot;).writable_real? ...</pre>\n",null,1],["writable_real?","FileTest","Rails/classes/FileTest.html#method-i-writable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the real user id\nof this process.\n",null,1],["writable_real?","Pathname","Rails/classes/Pathname.html#method-i-writable_real-3F","()","<p>See <code>FileTest.writable_real?</code>.\n",null,1],["write","ActionDispatch::RailsEntityStore","Ruby/classes/ActionDispatch/RailsEntityStore.html#method-i-write","(body)","",null,0],["write","ActionDispatch::RailsMetaStore","Ruby/classes/ActionDispatch/RailsMetaStore.html#method-i-write","(key, value)","",null,0],["write","ActiveRecord::Migration","Ruby/classes/ActiveRecord/Migration.html#method-i-write","(text=\"\")","",null,0],["write","ActiveSupport::Cache::Store","Ruby/classes/ActiveSupport/Cache/Store.html#method-i-write","(name, value, options = nil)","<p>Writes the value to the cache, with the key.\n<p>Options are passed to the underlying cache implementation. …\n",null,0],["write","ARGF","Rails/classes/ARGF.html#method-i-write","(p1)","<p>Writes <em>string</em> if inplace mode.\n",null,1],["write","Gem::ConfigFile","Rails/classes/Gem/ConfigFile.html#method-i-write","()","<p>Writes out this config file, replacing its source.\n",null,1],["write","Gem::Package::TarWriter::BoundedStream","Rails/classes/Gem/Package/TarWriter/BoundedStream.html#method-i-write","(data)","<p>Writes <code>data</code> onto the IO, raising a FileOverflow exception if\nthe number of bytes will be more than #limit …\n",null,1],["write","Gem::Package::TarWriter::RestrictedStream","Rails/classes/Gem/Package/TarWriter/RestrictedStream.html#method-i-write","(data)","<p>Writes <code>data</code> onto the IO\n",null,1],["write","IO","Rails/classes/IO.html#method-c-write","(*args)","<p>Opens the file, optionally seeks to the given <em>offset</em>, writes\n<em>string</em>, then returns the length written. …\n",null,1],["write","IO","Rails/classes/IO.html#method-i-write","(p1)","<p>Writes the given string to <em>ios</em>. The stream must be opened for\nwriting. If the argument is not a string, …\n",null,1],["write","Logger::LogDevice","Rails/classes/Logger/LogDevice.html#method-i-write","(message)","",null,1],["write","Net::Telnet","Rails/classes/Net/Telnet.html#method-i-write","(string)","<p>Write <code>string</code> to the host.\n<p>Does not perform any conversions on <code>string</code>.  Will log\n<code>string</code> to the dumplog, …\n",null,1],["write","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-write","(s)","<p>Writes <code>s</code> to the stream.  If the argument is not a string it\nwill be converted using String#to_s.  Returns …\n",null,1],["write","REXML::AttlistDecl","Rails/classes/REXML/AttlistDecl.html#method-i-write","(out, indent=-1)","<p>Write out exactly what we got in.\n",null,1],["write","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-write","( output, indent=-1 )","<p>Writes this attribute (EG, puts ‘key=“value”’ to the output)\n",null,1],["write","REXML::CData","Rails/classes/REXML/CData.html#method-i-write","( output=$stdout, indent=-1, transitive=false, ie_hack=false )","<p>DEPRECATED\n<p>See the rexml/formatters package\n<p>Generates XML output of this object\n",null,1],["write","REXML::Comment","Rails/classes/REXML/Comment.html#method-i-write","( output, indent=-1, transitive=false, ie_hack=false )","<p>DEPRECATED\n<p>See REXML::Formatters\n<p>output &mdash; Where to write the string\n",null,1],["write","REXML::DTD::EntityDecl","Rails/classes/REXML/DTD/EntityDecl.html#method-i-write","( output, indent )","",null,1],["write","REXML::DTD::NotationDecl","Rails/classes/REXML/DTD/NotationDecl.html#method-i-write","( output, indent )","",null,1],["write","REXML::Declaration","Rails/classes/REXML/Declaration.html#method-i-write","( output, indent )","<p>DEPRECATED\n<p>See REXML::Formatters\n",null,1],["write","REXML::DocType","Rails/classes/REXML/DocType.html#method-i-write","( output, indent=0, transitive=false, ie_hack=false )","<p>output &mdash; Where to write the string\n<p>indent &mdash; An integer.  If -1, no indentation will be used; otherwise, the …\n",null,1],["write","REXML::Document","Rails/classes/REXML/Document.html#method-i-write","( output=$stdout, indent=-1, transitive=false, ie_hack=false )","<p>Write the XML tree out, optionally with indent.  This writes out the entire\nXML document, including  …\n",null,1],["write","REXML::Element","Rails/classes/REXML/Element.html#method-i-write","(output=$stdout, indent=-1, transitive=false, ie_hack=false)","<p>DEPRECATED\n<p>See REXML::Formatters\n<p>Writes out this element, and recursively, all children.\n",null,1],["write","REXML::Entity","Rails/classes/REXML/Entity.html#method-i-write","(out, indent=-1)","<p>Write out a fully formed, correct entity definition (assuming the Entity\nobject itself is valid.)\n<p>out … &mdash; ",null,1],["write","REXML::ExternalEntity","Rails/classes/REXML/ExternalEntity.html#method-i-write","( output, indent )","",null,1],["write","REXML::Formatters::Default","Rails/classes/REXML/Formatters/Default.html#method-i-write","( node, output )","<p>Writes the node to some output.\n<p>node &mdash; The node to write\n<p>output &mdash; A class implementing <code>&amp;lt;&amp;lt;</code>.   …\n",null,1],["write","REXML::Instruction","Rails/classes/REXML/Instruction.html#method-i-write","(writer, indent=-1, transitive=false, ie_hack=false)","<p>DEPRECATED\n<p>See the rexml/formatters package\n",null,1],["write","REXML::NotationDecl","Rails/classes/REXML/NotationDecl.html#method-i-write","( output, indent=-1 )","",null,1],["write","REXML::Text","Rails/classes/REXML/Text.html#method-i-write","( writer, indent=-1, transitive=false, ie_hack=false )","<p>DEPRECATED\n<p>See REXML::Formatters\n",null,1],["write","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-i-write","(writer, indent=-1, transitive=false, ie_hack=false)","<p>indent &mdash; Ignored.  There must be no whitespace before an XML declaration\n<p>transitive &mdash; Ignored\n<p>ie_hack &mdash; Ignored …\n",null,1],["write","Rinda::TupleSpace","Rails/classes/Rinda/TupleSpace.html#method-i-write","(tuple, sec=nil)","<p>Adds <code>tuple</code>\n",null,1],["write","Rinda::TupleSpaceProxy","Rails/classes/Rinda/TupleSpaceProxy.html#method-i-write","(tuple, sec=nil)","<p>Adds <code>tuple</code> to the proxied TupleSpace.  See TupleSpace#write.\n",null,1],["write","StringIO","Rails/classes/StringIO.html#method-i-write","(p1)","<p>Appends the given string to the underlying buffer string of\n<strong>strio</strong>. The stream must be opened for writing. …\n",null,1],["write","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-write","(name, type, data)","<p>Write data to a registry value named name. When name is nil, write to the\n`default’ value.\n<p>type is type …\n",null,1],["write","Zlib::GzipWriter","Rails/classes/Zlib/GzipWriter.html#method-i-write","(p1)","<p>Same as IO.\n",null,1],["writeTo","HttpServer::Table","Rails/classes/HttpServer/Table.html#method-i-writeTo","(port)","",null,1],["write_asset","Sprockets::StaticCompiler","Ruby/classes/Sprockets/StaticCompiler.html#method-i-write_asset","(asset)","",null,0],["write_attribute","ActiveRecord::AttributeMethods::Write","Ruby/classes/ActiveRecord/AttributeMethods/Write.html#method-i-write_attribute","(attr_name, value)","<p>Updates the attribute identified by <code>attr_name</code> with the\nspecified <code>value</code>. Empty strings for fixnum and …\n",null,0],["write_bin","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-write_bin","(name, value)","<p>Write value to a registry value named name.\n<p>The value type is REG_SZ(write_s), REG_DWORD(write_i), or …\n",null,1],["write_cdata","REXML::Formatters::Default","Rails/classes/REXML/Formatters/Default.html#method-i-write_cdata","( node, output )","",null,1],["write_cdata","REXML::Formatters::Pretty","Rails/classes/REXML/Formatters/Pretty.html#method-i-write_cdata","( node, output)","",null,1],["write_comment","REXML::Formatters::Default","Rails/classes/REXML/Formatters/Default.html#method-i-write_comment","( node, output )","",null,1],["write_comment","REXML::Formatters::Pretty","Rails/classes/REXML/Formatters/Pretty.html#method-i-write_comment","( node, output)","",null,1],["write_document","REXML::Formatters::Default","Rails/classes/REXML/Formatters/Default.html#method-i-write_document","( node, output )","",null,1],["write_document","REXML::Formatters::Pretty","Rails/classes/REXML/Formatters/Pretty.html#method-i-write_document","( node, output )","",null,1],["write_element","REXML::Formatters::Default","Rails/classes/REXML/Formatters/Default.html#method-i-write_element","( node, output )","",null,1],["write_element","REXML::Formatters::Pretty","Rails/classes/REXML/Formatters/Pretty.html#method-i-write_element","(node, output)","",null,1],["write_element","REXML::Formatters::Transitive","Rails/classes/REXML/Formatters/Transitive.html#method-i-write_element","( node, output )","",null,1],["write_entry","ActiveSupport::Cache::FileStore","Ruby/classes/ActiveSupport/Cache/FileStore.html#method-i-write_entry","(key, entry, options)","",null,0],["write_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Ruby/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-write_entry","(key, value, options)","",null,0],["write_fragment","ActionController::Caching::Fragments","Ruby/classes/ActionController/Caching/Fragments.html#method-i-write_fragment","(key, content, options = nil)","<p>Writes <code>content</code> to the location signified by  <code>key</code>\n(see <code>expire_fragment</code> for acceptable formats).\n",null,0],["write_headers?","CSV","Rails/classes/CSV.html#method-i-write_headers-3F","()","<p>Returns <code>true</code> if headers are written in output. See CSV::new\nfor details.\n",null,1],["write_i","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-write_i","(name, value)","<p>Write value to a registry value named name.\n<p>The value type is REG_SZ(write_s), REG_DWORD(write_i), or …\n",null,1],["write_instruction","REXML::Formatters::Default","Rails/classes/REXML/Formatters/Default.html#method-i-write_instruction","( node, output )","",null,1],["write_manifest","Sprockets::StaticCompiler","Ruby/classes/Sprockets/StaticCompiler.html#method-i-write_manifest","(manifest)","",null,0],["write_nonblock","IO","Rails/classes/IO.html#method-i-write_nonblock","(p1)","<p>Writes the given string to <em>ios</em> using the write(2) system call\nafter O_NONBLOCK is set for the underlying …\n",null,1],["write_nonblock","OpenSSL::Buffering","Rails/classes/OpenSSL/Buffering.html#method-i-write_nonblock","(s)","<p>Writes <code>str</code> in the non-blocking manner.\n<p>If there is buffered data, it is flushed first.  This may block. …\n",null,1],["write_require_paths_file_if_needed","Gem::RequirePathsBuilder","Rails/classes/Gem/RequirePathsBuilder.html#method-i-write_require_paths_file_if_needed","(spec = @spec, gem_home = @gem_home)","",null,1],["write_s","Win32::Registry","Rails/classes/Win32/Registry.html#method-i-write_s","(name, value)","<p>Write value to a registry value named name.\n<p>The value type is REG_SZ(write_s), REG_DWORD(write_i), or …\n",null,1],["write_service","Rinda::RingServer","Rails/classes/Rinda/RingServer.html#method-i-write_service","()","<p>Creates a thread that picks up UDP packets and passes them to do_write for\ndecoding.\n",null,1],["write_smime","OpenSSL::PKCS7","Rails/classes/OpenSSL/PKCS7.html#method-c-write_smime","(p1, p2 = v2, p3 = v3)","",null,1],["write_spec","Gem::Installer","Rails/classes/Gem/Installer.html#method-i-write_spec","()","<p>Writes the .gemspec specification (in Ruby) to the gem home’s\nspecifications directory.\n",null,1],["write_style_sheet","RDoc::Generator::Darkfish","Rails/classes/RDoc/Generator/Darkfish.html#method-i-write_style_sheet","()","<p>Copy over the stylesheet into the appropriate place in the output\ndirectory.\n",null,1],["write_text","REXML::Formatters::Default","Rails/classes/REXML/Formatters/Default.html#method-i-write_text","( node, output )","",null,1],["write_text","REXML::Formatters::Pretty","Rails/classes/REXML/Formatters/Pretty.html#method-i-write_text","( node, output )","",null,1],["write_text","REXML::Formatters::Transitive","Rails/classes/REXML/Formatters/Transitive.html#method-i-write_text","( node, output )","",null,1],["write_with_substitution","REXML::Text","Rails/classes/REXML/Text.html#method-i-write_with_substitution","(out, input)","<p>Writes out text, substituting special characters beforehand.\n<code>out</code> A String, IO, or any other object supporting …\n",null,1],["wtime2time","Win32::Registry","Rails/classes/Win32/Registry.html#method-c-wtime2time","(wtime)","<p>Convert 64-bit FILETIME integer into Time object.\n",null,1],["xhr?","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-xhr-3F","()","",null,0],["xhtml","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-xhtml","()","",null,1],["xhtml","RSS::Atom::TextConstruct","Rails/classes/RSS/Atom/TextConstruct.html#method-i-xhtml","()","",null,1],["xhtml=","RSS::Maker::AtomTextConstructBase::EnsureXMLContent","Rails/classes/RSS/Maker/AtomTextConstructBase/EnsureXMLContent.html#method-i-xhtml-3D","(content)","",null,1],["xlist","Net::IMAP","Rails/classes/Net/IMAP.html#method-i-xlist","(refname, mailbox)","<p>Sends a XLIST command, and returns a subset of names from the complete set\nof all names available to …\n",null,1],["xml","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html#method-i-xml","(*args)","",null,0],["xml","ActiveRecord::ConnectionAdapters::TableDefinition","Ruby/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-xml","(*args)","",null,0],["xml","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-i-xml","()","",null,1],["xml=","RSS::Maker::ItemsBase::ItemBase::ContentBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-xml-3D","(content)","",null,1],["xmlDecl","RSS::REXMLLikeXMLParser","Rails/classes/RSS/REXMLLikeXMLParser.html#method-i-xmlDecl","(version, encoding, standalone)","",null,1],["xml_content=","RSS::Maker::AtomTextConstructBase::EnsureXMLContent","Rails/classes/RSS/Maker/AtomTextConstructBase/EnsureXMLContent.html#method-i-xml_content-3D","(content)","",null,1],["xml_content=","RSS::Maker::ItemsBase::ItemBase::ContentBase","Rails/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-xml_content-3D","(content)","",null,1],["xml_decl","REXML::Document","Rails/classes/REXML/Document.html#method-i-xml_decl","()","<p>@return the XMLDecl of this document; if no XMLDecl has been set, the\ndefault declaration is returned. …\n",null,1],["xml_getter","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-c-xml_getter","()","",null,1],["xml_getter","RSS::Atom::TextConstruct","Rails/classes/RSS/Atom/TextConstruct.html#method-c-xml_getter","()","",null,1],["xml_http_request?","ActionDispatch::Request","Ruby/classes/ActionDispatch/Request.html#method-i-xml_http_request-3F","()","<p>Returns true if the “X-Requested-With” header contains “XMLHttpRequest”\n(case-insensitive). …\n",null,0],["xml_setter","RSS::Atom::Feed::Entry::Content","Rails/classes/RSS/Atom/Feed/Entry/Content.html#method-c-xml_setter","()","",null,1],["xml_setter","RSS::Atom::TextConstruct","Rails/classes/RSS/Atom/TextConstruct.html#method-c-xml_setter","()","",null,1],["xmldecl","REXML::SAX2Listener","Rails/classes/REXML/SAX2Listener.html#method-i-xmldecl","(version, encoding, standalone)","<p>Called when an XML PI is encountered in the document. EG: &lt;?xml\nversion=“1.0” encoding=“utf”?&gt; …\n",null,1],["xmldecl","REXML::StreamListener","Rails/classes/REXML/StreamListener.html#method-i-xmldecl","(version, encoding, standalone)","<p>Called when an XML PI is encountered in the document. EG: &lt;?xml\nversion=“1.0” encoding=“utf”?&gt; …\n",null,1],["xmldecl","REXML::XMLDecl","Rails/classes/REXML/XMLDecl.html#method-i-xmldecl","(version, encoding, standalone)","",null,1],["xmldecl","RSS::ListenerMixin","Rails/classes/RSS/ListenerMixin.html#method-i-xmldecl","(version, encoding, standalone)","<p>set instance vars for version, encoding, standalone\n",null,1],["xmldecl","RSS::REXMLListener","Rails/classes/RSS/REXMLListener.html#method-i-xmldecl","(version, encoding, standalone)","",null,1],["xmldecl","RSS::XMLParserListener","Rails/classes/RSS/XMLParserListener.html#method-i-xmldecl","(version, encoding, standalone)","",null,1],["xmldecl?","REXML::Parsers::PullEvent","Rails/classes/REXML/Parsers/PullEvent.html#method-i-xmldecl-3F","()","<p>Content: [ String version, String encoding, String standalone ]\n",null,1],["xmlschema","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-xmlschema","(fraction_digits = 0)","",null,0],["xmlschema","Date","Ruby/classes/Date.html#method-i-xmlschema","()","",null,0],["xmlschema","DateTime","Ruby/classes/DateTime.html#method-i-xmlschema","()","<p>Converts datetime to an appropriate format for use in XML.\n",null,0],["xmlschema","Date","Rails/classes/Date.html#method-i-xmlschema","()","<p>This method is equivalent to strftime(‘%F’).\n",null,1],["xmlschema","Date","Rails/classes/Date.html#method-c-xmlschema","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical XML Schema formats.\n<p>For example: …\n",null,1],["xmlschema","DateTime","Rails/classes/DateTime.html#method-i-xmlschema","(p1 = v1)","<p>This method is equivalent to strftime(‘%FT%T’).  The optional argument n is\nlength of fractional seconds. …\n",null,1],["xmlschema","DateTime","Rails/classes/DateTime.html#method-c-xmlschema","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical XML Schema formats.\n<p>For example: …\n",null,1],["xmlschema","Time","Rails/classes/Time.html#method-i-xmlschema","(fraction_digits=0)","<p>Returns a string which represents the time as dateTime defined by XML\nSchema:\n\n<pre>CCYY-MM-DDThh:mm:ssTZD\nCCYY-MM-DDThh:mm:ss.sssTZD</pre>\n",null,1],["xmlschema","Time","Rails/classes/Time.html#method-c-xmlschema","(date)","<p>Parses <code>date</code> as dateTime defined by XML Schema and converts it\nto a Time object.  The format is restricted …\n",null,1],["xmp","Object","Rails/classes/Object.html#method-i-xmp","(exps, bind = nil)","",null,1],["xpath","REXML::Attribute","Rails/classes/REXML/Attribute.html#method-i-xpath","()","",null,1],["xpath","REXML::Element","Rails/classes/REXML/Element.html#method-i-xpath","()","",null,1],["xpath","REXML::Text","Rails/classes/REXML/Text.html#method-i-xpath","()","<p>FIXME This probably won’t work properly\n",null,1],["yaml","Psych::Nodes::Node","Rails/classes/Psych/Nodes/Node.html#method-i-yaml","(io = nil, options = {})","<p>Convert this node to YAML.\n<p>See also Psych::Visitors::Emitter\n",null,1],["yaml?","Gem::Commands::BuildCommand","Rails/classes/Gem/Commands/BuildCommand.html#method-i-yaml-3F","(filename)","",null,1],["yaml_as","Module","Rails/classes/Module.html#method-i-yaml_as","(url)","",null,1],["yaml_initialize","Gem::Version","Rails/classes/Gem/Version.html#method-i-yaml_initialize","(tag, map)","",null,1],["yaml_tag","Object","Rails/classes/Object.html#method-c-yaml_tag","(url)","",null,1],["yday","Date","Rails/classes/Date.html#method-i-yday","()","<p>Returns the day of the year (1-366).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">yday</span>           <span class=\"ruby-comment\">#=&gt; 34</span>\n</pre>\n",null,1],["yday","Time","Rails/classes/Time.html#method-i-yday","()","<p>Returns an integer representing the day of the year, 1..366.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:32:31 -0600 ...</span>\n</pre>\n",null,1],["year","Integer","Ruby/classes/Integer.html#method-i-year","()","",null,0],["year","Date","Rails/classes/Date.html#method-i-year","()","<p>Returns the year.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2001</span>,<span class=\"ruby-value\">2</span>,<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">year</span>           <span class=\"ruby-comment\">#=&gt; 2001</span>\n(<span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">-</span> <span class=\"ruby-value\">1</span>).<span class=\"ruby-identifier\">year</span>   <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["year","Time","Rails/classes/Time.html#method-i-year","()","<p>Returns the year for <em>time</em> (including the century).\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:27:51 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">year</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["year=","XMLRPC::DateTime","Rails/classes/XMLRPC/DateTime.html#method-i-year-3D","(value)","",null,1],["years","Integer","Ruby/classes/Integer.html#method-i-years","()","",null,0],["years_ago","Date","Ruby/classes/Date.html#method-i-years_ago","(years)","<p>Returns a new Date/DateTime representing the time a number of specified\nyears ago.\n",null,0],["years_ago","Time","Ruby/classes/Time.html#method-i-years_ago","(years)","<p>Returns a new Time representing the time a number of specified years ago\n",null,0],["years_since","Date","Ruby/classes/Date.html#method-i-years_since","(years)","<p>Returns a new Date/DateTime representing the time a number of specified\nyears in the future.\n",null,0],["years_since","Time","Ruby/classes/Time.html#method-i-years_since","(years)","<p>Returns a new Time representing the time a number of specified years in the\nfuture\n",null,0],["yesterday","Date","Ruby/classes/Date.html#method-i-yesterday","()","<p>Convenience method which returns a new Date/DateTime representing the time\n1 day ago\n",null,0],["yesterday","Date","Ruby/classes/Date.html#method-c-yesterday","()","<p>Returns a new Date representing the date 1 day ago (i.e. yesterday’s date).\n",null,0],["yesterday","Time","Ruby/classes/Time.html#method-i-yesterday","()","<p>Convenience method which returns a new Time representing the time 1 day ago\n",null,0],["yield","Fiber","Rails/classes/Fiber.html#method-c-yield","(*args)","<p>Yields control back to the context that resumed the fiber, passing along\nany arguments that were passed …\n",null,1],["yield","Proc","Rails/classes/Proc.html#method-i-yield","(*args)","<p>Invokes the block, setting the block’s parameters to the values in\n<em>params</em> using something close to method …\n",null,1],["zero","Matrix","Rails/classes/Matrix.html#method-c-zero","(row_size, column_size = row_size)","<p>Creates a zero matrix.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Matrix</span>.<span class=\"ruby-identifier\">zero</span>(<span class=\"ruby-value\">2</span>)\n  =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">0</span> <span class=\"ruby-value\">0</span>\n     <span class=\"ruby-value\">0</span> <span class=\"ruby-value\">0</span>\n</pre>\n",null,1],["zero?","BigDecimal","Rails/classes/BigDecimal.html#method-i-zero-3F","()","<p>Returns True if the value is zero.\n",null,1],["zero?","File","Rails/classes/File.html#method-c-zero-3F","(p1)","<p>Returns <code>true</code> if the named file exists and has a zero size.\n",null,1],["zero?","File::Stat","Rails/classes/File/Stat.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a zero-length file;\n<code>false</code> otherwise.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">zero?</span>   <span class=\"ruby-comment\">#=&gt; false</span>\n</pre>\n",null,1],["zero?","FileTest","Rails/classes/FileTest.html#method-i-zero-3F","(p1)","<p>Returns <code>true</code> if the named file exists and has a zero size.\n",null,1],["zero?","Fixnum","Rails/classes/Fixnum.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>fix</em> is zero.\n",null,1],["zero?","Float","Rails/classes/Float.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>flt</em> is 0.0.\n",null,1],["zero?","Matrix","Rails/classes/Matrix.html#method-i-zero-3F","()","<p>Returns <code>true</code> is this is a matrix with only zero elements\n",null,1],["zero?","Numeric","Rails/classes/Numeric.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>num</em> has a zero value.\n",null,1],["zero?","Pathname","Rails/classes/Pathname.html#method-i-zero-3F","()","<p>See <code>FileTest.zero?</code>.\n",null,1],["zip","Array","Rails/classes/Array.html#method-i-zip","(*args)","<p>Converts any arguments to arrays, then merges elements of <code>self</code>\nwith corresponding elements from each …\n",null,1],["zip","Enumerable","Rails/classes/Enumerable.html#method-i-zip","(*args)","<p>Takes one element from <em>enum</em> and merges corresponding elements from\neach <em>args</em>.  This generates a sequence …\n",null,1],["zip?","RDoc::Parser","Rails/classes/RDoc/Parser.html#method-c-zip-3F","(file)","<p>Checks if <code>file</code> is a zip file in disguise.  Signatures from\nwww.garykessler.net/library/file_sigs.html …\n",null,1],["zip_file","Rake::PackageTask","Rails/classes/Rake/PackageTask.html#method-i-zip_file","()","",null,1],["zlib_version","Zlib","Rails/classes/Zlib.html#method-c-zlib_version","()","<p>Returns the string which represents the version of zlib library.\n",null,1],["zone","ActiveSupport::TimeWithZone","Ruby/classes/ActiveSupport/TimeWithZone.html#method-i-zone","()","<p>Time uses <code>zone</code> to display the time zone abbreviation, so we’re\nduck-typing it.\n",null,0],["zone","Time","Ruby/classes/Time.html#method-c-zone","()","<p>Returns the TimeZone for the current request, if this has been set (via\nTime.zone=). If <code>Time.zone</code> has …\n",null,0],["zone","Time","Rails/classes/Time.html#method-i-zone","()","<p>Returns the name of the time zone used for <em>time</em>. As of Ruby 1.8,\nreturns “UTC” rather than “GMT” …\n",null,1],["zone=","Time","Ruby/classes/Time.html#method-c-zone-3D","(time_zone)","<p>Sets <code>Time.zone</code> to a TimeZone object for the current\nrequest/thread.\n<p>This method accepts any of the following: …\n",null,0],["zone_offset","Time","Rails/classes/Time.html#method-c-zone_offset","(zone, year=self.now.year)","",null,1],["zones_map","ActiveSupport::TimeZone","Ruby/classes/ActiveSupport/TimeZone.html#method-c-zones_map","()","",null,0],["|","Array","Rails/classes/Array.html#method-i-7C","(p1)","<p>Set Union—Returns a new array by joining this array with\n<em>other_ary</em>, removing duplicates.\n\n<pre>[ &quot;a&quot;, &quot;b&quot;, ...</pre>\n",null,1],["|","Bignum","Rails/classes/Bignum.html#method-i-7C","(p1)","<p>Performs bitwise <code>or</code> between <em>big</em> and <em>numeric</em>.\n",null,1],["|","FalseClass","Rails/classes/FalseClass.html#method-i-7C","(p1)","<p>Or—Returns <code>false</code> if <em>obj</em> is <code>nil</code> or\n<code>false</code>; <code>true</code> otherwise.\n",null,1],["|","Fixnum","Rails/classes/Fixnum.html#method-i-7C","(p1)","<p>Bitwise OR.\n",null,1],["|","IPAddr","Rails/classes/IPAddr.html#method-i-7C","(other)","<p>Returns a new ipaddr built by bitwise OR.\n",null,1],["|","NilClass","Rails/classes/NilClass.html#method-i-7C","(p1)","<p>Or—Returns <code>false</code> if <em>obj</em> is <code>nil</code> or\n<code>false</code>; <code>true</code> otherwise.\n",null,1],["|","Set","Rails/classes/Set.html#method-i-7C","(enum)","<p>Returns a new set built by merging the set and the elements of the given\nenumerable object.\n",null,1],["|","Shell::Filter","Rails/classes/Shell/Filter.html#method-i-7C","(filter)","",null,1],["|","TrueClass","Rails/classes/TrueClass.html#method-i-7C","(p1)","<p>Or—Returns <code>true</code>. As <em>anObject</em> is an argument to a\nmethod call, it is always evaluated; there is no short-circuit …\n",null,1],["~","Bignum","Rails/classes/Bignum.html#method-i-7E","()","<p>Inverts the bits in big. As Bignums are conceptually infinite length, the\nresult acts as if it had an …\n",null,1],["~","Complex","Rails/classes/Complex.html#method-i-7E","()","<p>Returns the complex conjugate.\n",null,1],["~","Fixnum","Rails/classes/Fixnum.html#method-i-7E","()","<p>One’s complement: returns a number where each bit is flipped.\n",null,1],["~","IPAddr","Rails/classes/IPAddr.html#method-i-7E","()","<p>Returns a new ipaddr built by bitwise negation.\n",null,1],["~","Regexp","Rails/classes/Regexp.html#method-i-7E","()","<p>Match—Matches <em>rxp</em> against the contents of <code>$_</code>.\nEquivalent to <code><em>rxp</em> =~ $_</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">$_</span> = <span class=\"ruby-string\">&quot;input data&quot;</span>\n<span class=\"ruby-operator\">~</span> <span class=\"ruby-regexp\">/at/</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1]]},"badges":["Ruby","Rails"]}