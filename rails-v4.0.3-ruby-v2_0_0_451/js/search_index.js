var search_data = {"index":{"searchIndex":["!()","!()","!=()","!=()","!~()","!~()","%()","%()","%()","%()","%()","%()","%()","&()","&()","&()","&()","&()","&()","&()","&()","&()","*()","*()","*()","*()","*()","*()","*()","*()","*()","*()","*()","*()","**()","**()","**()","**()","**()","**()","**()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+()","+@()","+@()","+@()","+@()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-()","-@()","-@()","-@()","-@()","-@()","-@()","-@()","-@()","/()","/()","/()","/()","/()","/()","/()","/()","/()","/()","<()","<()","<()","<()","<()","<()","<()","<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<=()","<=()","<=()","<=()","<=()","<=()","<=()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()",">()",">()",">()",">()",">()",">()",">()",">()",">=()",">=()",">=()",">=()",">=()",">=()",">=()",">>()",">>()",">>()",">>()",">>()",">>()",">>()","acl","aclentry","acllist","apop()","argf","abbrev","abstractcontroller","base","callbacks","classmethods","collector","doublerendererror","helpers","classmethods","missinghelpererror","layouts","classmethods","railties","routeshelpers","rendering","classmethods","translation","urlfor","classmethods","viewpaths","classmethods","actioncontroller","actioncontroller","actioncontroller","base","caching","classmethods","configmethods","fragments","conditionalget","classmethods","cookies","datastreaming","flash","classmethods","forcessl","classmethods","head","helpers","classmethods","hideactions","classmethods","httpauthentication","basic","controllermethods","classmethods","digest","controllermethods","token","controllermethods","implicitrender","instrumentation","classmethods","live","response","header","logsubscriber","metal","middleware","actionmiddleware","mimeresponds","classmethods","collector","modelnaming","parametermissing","parameters","paramswrapper","classmethods","rackdelegation","railties","helpers","recordidentifier","redirecting","renderers","all","classmethods","rendering","requestforgeryprotection","classmethods","protectionmethods","exception","nullsession","resetsession","rescue","responder","streaming","strongparameters","unpermittedparameters","urlfor","actiondispatch","callbacks","cookies","chainedcookiejars","verifyandupgradelegacysignedmessage","debugexceptions","exceptionwrapper","filehandler","flash","flashhash","http","cache","request","response","filterparameters","filterredirect","headers","mimenegotiation","parameterfilter","parameters","url","uploadedfile","illegalstateerror","middlewarestack","middleware","paramsparser","parseerror","publicexceptions","railsentitystore","railsmetastore","reloader","remoteip","getip","ipspoofattackerror","request","requestid","response","routing","consoleformatter","htmltableformatter","mapper","base","concerns","httphelpers","resources","scoping","pathredirect","polymorphicroutes","redirection","routewrapper","urlfor","ssl","session","abstractstore","cachestore","compatibility","cookiestore","memcachestore","stalesessioncheck","showexceptions","static","actionmailer","base","collector","deliverymethods","classmethods","logsubscriber","mailhelper","actionpack","actionview","base","context","dependencytracker","erbtracker","digestor","filesystemresolver","helpers","activemodelhelper","activemodelinstancetag","assettaghelper","asseturlhelper","atomfeedhelper","cachehelper","capturehelper","csrfhelper","datehelper","debughelper","formbuilder","formhelper","formoptionshelper","formtaghelper","javascripthelper","numberhelper","invalidnumbererror","outputsafetyhelper","recordtaghelper","renderinghelper","sanitizehelper","taghelper","texthelper","translationhelper","urlhelper","classmethods","logsubscriber","lookupcontext","detailscache","viewpaths","modelnaming","partialrenderer","recordidentifier","renderer","resolver","cache","smallcache","path","routingurlfor","template","handlers","builder","erb","erubis","raw","types","type","activemodel","attributemethods","classmethods","callbacks","conversion","dirty","errors","forbiddenattributeserror","lint","tests","missingattributeerror","model","name","naming","securepassword","classmethods","instancemethodsonactivation","serialization","serializers","json","xml","strictvalidationfailed","translation","validations","callbacks","classmethods","classmethods","helpermethods","validator","activerecord","activerecorderror","adapternotfound","adapternotspecified","aggregations","classmethods","associationrelation","associationtypemismatch","associations","classmethods","collectionproxy","attributeassignment","attributeassignmenterror","attributemethods","beforetypecast","classmethods","primarykey","classmethods","query","read","classmethods","serialization","classmethods","timezoneconversion","classmethods","write","classmethods","autosaveassociation","classmethods","base","batches","calculations","callbacks","classmethods","configurationerror","connectionadapters","abstractadapter","schemacreation","abstractmysqladapter","schemacreation","column","format","columndumper","connectionhandler","connectionmanagement","connectionpool","queue","reaper","databaselimits","databasestatements","mysql2adapter","mysqladapter","fields","boolean","date","datetime","decimal","float","identity","integer","time","type","statementpool","postgresqladapter","columndefinition","columnmethods","databasestatements","oid","array","bit","boolean","bytea","cidr","date","decimal","float","hstore","identity","integer","json","money","point","range","time","timestamp","type","typemap","vector","quoting","referentialintegrity","schemacreation","schemastatements","statementpool","table","tabledefinition","utils","postgresqlcolumn","arrayparser","cast","querycache","quoting","sqlite3adapter","explainprettyprinter","statementpool","version","schemacache","schemastatements","statementpool","table","tabledefinition","transactionstate","connectionhandling","connectionnotestablished","connectiontimeouterror","core","classmethods","countercache","classmethods","dangerousattributeerror","dynamicmatchers","findby","findbybang","finder","method","explain","findermethods","fixtureset","immutablerelation","inheritance","classmethods","integration","invalidforeignkey","irreversiblemigration","locking","optimistic","classmethods","pessimistic","logsubscriber","migration","checkpending","commandrecorder","straightreversions","migrationproxy","modelschema","classmethods","multiparameterassignmenterrors","nestedattributes","classmethods","toomanyrecords","persistence","classmethods","preparedstatementinvalid","querycache","classmethods","querymethods","wherechain","querying","readonlyrecord","readonlyattributes","classmethods","recordinvalid","recordnotdestroyed","recordnotfound","recordnotsaved","recordnotunique","reflection","classmethods","macroreflection","relation","result","rollback","sanitization","classmethods","schema","schemamigration","scoping","classmethods","default","classmethods","named","classmethods","serialization","serializationtypemismatch","spawnmethods","staleobjecterror","statementcache","statementinvalid","store","classmethods","tasks","databasealreadyexists","databasenotsupported","databasetasks","testfixtures","classmethods","throwresult","timestamp","transactionisolationerror","transactions","classmethods","translation","unknownattributeerror","unknownprimarykey","validations","classmethods","wrappeddatabaseexception","activesupport","autoload","backtracecleaner","benchmarkable","bufferedlogger","cache","filestore","memcachestore","memorystore","nullstore","store","strategy","localcache","localstore","cachingkeygenerator","callbacks","classmethods","concern","concurrency","latch","configurable","classmethods","configuration","dependencies","classcache","watchstack","deprecation","behavior","deprecatedconstantproxy","deprecatedinstancevariableproxy","deprecatedobjectproxy","methodwrapper","reporting","deprecationexception","descendantstracker","duration","fileupdatechecker","filewatcher","backend","gzip","stream","hashwithindifferentaccess","hashwithindifferentaccess","inflector","inflections","inheritableoptions","json","encoding","circularreferenceerror","encoder","variable","keygenerator","logsubscriber","logger","simpleformatter","messageencryptor","invalidmessage","messageverifier","invalidsignature","multibyte","chars","unicode","codepoint","unicodedatabase","notifications","event","fanout","subscribers","timed","instrumenter","numberhelper","orderedhash","orderedoptions","perthreadregistry","proxyobject","rescuable","classmethods","safebuffer","safeconcaterror","stringinquirer","subscriber","taggedlogging","timewithzone","timezone","xmlconverter","disallowedtype","xmlmini","xmlmini_libxmlsax","hashbuilder","xmlmini_nokogirisax","hashbuilder","addrinfo","applicationhelper","argumenterror","array","array()","array","base64","basicobject","basicsocket","benchmark","benchmark","tms","bigdecimal","bigdecimal()","bigdecimal","bigmath","bignum","binding","build","cgi","cookie","htmlextension","invalidencoding","queryextension","session","filestore","memorystore","nullstore","pstore","cmath","csv","csv()","malformedcsverror","row","table","call()","changelog","changelog-1.8.0","changelog-1.9.3","changelog-yarv","class","class","closekey()","comparable","complex","complex()","compatible","compositepublisher","conditionvariable","continuation","coverage","createkey()","currentcontext()","curses","key","mouseevent","pad","window","dbm","dbmerror","debug()","debug=()","debugger__","thread","dl","basictypes","cfunc","cparser","cptr","cstruct","cstructbuilder","cstructentity","cunion","cunionentity","carriedfunction","compositehandler","dlerror","dltypeerror","fiddle","function","handle","importer","packinfo","packer","stack","tempfunction","valueutil","win32types","drb","drbarray","drbbadscheme","drbbaduri","drbconn","drbconnerror","drberror","drbidconv","drbidconv","drbmessage","drbobject","drbobject","drbobservable","drbprotocol","drbremoteerror","drbsslsocket","sslconfig","drbserver","drbservernotfound","drbtcpsocket","drbunixsocket","drbundumped","drbundumped","drbunknown","drbunknownerror","extserv","extservmanager","gw","gwidconv","timeridconv","timerholder2","invalidindexerror","data","date","date","dateandtime","calculations","datetime","datetime","delegateclass()","delegator","deletekey()","deletevalue()","digest","digest()","digest()","base","class","hmac","instance","md5","rmd160","sha1","dir","e()","e2mm","env","eoferror","erb","erb","defmethod","util","util","escdelay()","escdelay=()","exception_type","exception_type","exception_type","exception_type","encoding","compatibilityerror","converter","converternotfounderror","invalidbytesequenceerror","undefinedconversionerror","encodingerror","english","enumkey()","enumvalue()","enumerable","enumerable","enumerator","generator","lazy","yielder","errno","econnaborted","econnreset","eproto","etc","exception","e2mm","fail()","fail()","fail()","fail()","fail()","fail()","fail()","falseclass","falseclass","fcntl","fiber","fibererror","fiddle","basictypes","cparser","cstruct","cstructbuilder","cstructentity","cunion","cunionentity","closure","blockcaller","compositehandler","dlerror","function","handle","importer","pointer","win32types","file","file","file::constants","stat","filetest","fileutils","dryrun","lowmethods","nowrite","streamutils_","verbose","find","fixnum","float","float()","float","floatdomainerror","flushkey()","foo","forwardable","gc","profiler","gdbm","gdbmerror","gdbmfatalerror","get()","gserver","gem","availableset","command","commandlineerror","commandmanager","commands","buildcommand","certcommand","checkcommand","cleanupcommand","contentscommand","dependencycommand","environmentcommand","fetchcommand","generateindexcommand","helpcommand","installcommand","listcommand","lockcommand","mirrorcommand","outdatedcommand","ownercommand","pristinecommand","pushcommand","querycommand","rdoccommand","searchcommand","servercommand","setupcommand","sourcescommand","specificationcommand","stalecommand","uninstallcommand","unpackcommand","updatecommand","whichcommand","yankcommand","configfile","rbconfig","consoleui","defaultuserinteraction","dependency","dependencyerror","dependencyinstaller","dependencylist","dependencyremovalexception","dependencyresolutionerror","dependencyresolver","apiset","apispecification","activationrequest","currentset","dependencyconflict","dependencyrequest","indexset","indexspecification","deprecate","doctor","documenterror","endofyamlexception","errorreason","exception","ext","builder","cmakebuilder","configurebuilder","extconfbuilder","rakebuilder","filepermissionerror","formatexception","gemnotfoundexception","gemnotinhomeexception","gemrunner","gemcutterutilities","impossibledependencieserror","indexer","installerror","installupdateoptions","installer","extensionbuilderror","invalidspecificationexception","loaderror","localremoteoptions","mockgemui","inputeoferror","systemexitexception","tty","termerror","nametuple","noaliasyamltree","operationnotsupportederror","package","digestio","error","formaterror","nonseekableio","old","patherror","tarheader","tarinvaliderror","tarreader","entry","unexpectedeof","tarwriter","boundedstream","fileoverflow","restrictedstream","toolongfilename","packagetask","pathsupport","platform","platformmismatch","rbconfig","remoteerror","remotefetcher","fetcherror","unknownhosterror","remoteinstallationcancelled","remoteinstallationskipped","remotesourceexception","requestset","gemdepedencyapi","requirement","badrequirementerror","security","digest_algorithm","exception","key_algorithm","policy","signer","trustdir","server","silentui","source","local","specificfile","sourcefetchproblem","sourcelist","specfetcher","specificgemnotfoundexception","specification","streamui","silentdownloadreporter","silentprogressreporter","simpleprogressreporter","verbosedownloadreporter","verboseprogressreporter","systemexitexception","text","uninstaller","unsatisfiabledepedencyerror","userinteraction","validator","verificationerror","version","versionoption","gemfile","gemfile","gemfile","getoptlong","ambiguousoption","error","invalidoption","missingargument","needlessargument","html","fullsanitizer","linksanitizer","sanitizer","selector","tag","whitelistsanitizer","httpmovedtemporarily","httpmultiplechoice","httprequesturitoolarge","hash","hash()","hash","httpserver","request","response","table","i()","i18n","railtie","io","waitreadable","waitwritable","readable","writable","ioerror","ipaddr","addressfamilyerror","error","invalidaddresserror","invalidprefixerror","ipsocket","irb","abort","context","contextextender","extendcommand","changeworkspace","currentworkingworkspace","foreground","fork","help","irbcommand","jobs","kill","load","nop","popworkspace","pushworkspace","require","source","workspaces","extendcommandbundle","fileinputmethod","frame","inputmethod","inspector","irb","irbloader","jobmanager","loadabort","locale","methodextender","notifier","abstractnotifier","compositenotifier","levelednotifier","nomsgnotifier","outputmethod","readlineinputmethod","slex","node","stdioinputmethod","stdiooutputmethod","workspace","indexerror","integer","integer()","integer","interrupt","json","circulardatastructure","ext","generatorerror","genericobject","jsonerror","missingunicodesupport","nestingerror","parsererror","unparsererror","jacobian","jobmanager()","kconv","kernel","kernel","keyerror","license","log_mask()","log_upto()","lusolve","loaderror","loaderror","localjumperror","logger","logger","application","formatter","logdevice","logdevicemutex","severity","simpleformatter","loggersilence","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","makemakefile","logging","rbconfig","string_or_failed_format","marshal","marshal","matchdata","math","domainerror","matrix","eigenvaluedecomposition","lupdecomposition","method","mime","mimes","nulltype","type","module","module","monitor","monitormixin","conditionvariable","timeout","mutex","mutex_m","mysql","result","stmt","time","news","news-1.8.7","news-1.9.1","news-1.9.2","news-1.9.3","nkf","nqxml","node","nameerror","nameerror","net","apop","apopsession","ftp","bufferedsocket","nullsocket","ftpconnectionerror","ftperror","ftppermerror","ftpprotoerror","ftpreplyerror","ftptemperror","http","copy","delete","get","head","lock","mkcol","move","options","patch","post","propfind","proppatch","put","trace","unlock","httpaccepted","httpbadgateway","httpbadrequest","httpbadresponse","httpclienterror","httpconflict","httpcontinue","httpcreated","exception_type","httpexceptions","httpexpectationfailed","httpfaileddependency","httpfatalerror","httpforbidden","httpmovedtemporarily","httpgatewaytimeout","httpgenericrequest","httpgone","httpheader","httpheadersyntaxerror","httpinformation","httpinsufficientstorage","httpinternalservererror","httplengthrequired","httplocked","httpmethodnotallowed","httpmovedpermanently","httpmultistatus","httpmultiplechoice","httpnetworkauthenticationrequired","httpnocontent","httpnonauthoritativeinformation","httpnotacceptable","httpnotfound","httpnotimplemented","httpnotmodified","httpok","httppartialcontent","httppaymentrequired","httppreconditionfailed","httppreconditionrequired","httpproxyauthenticationrequired","httpredirection","httprequest","httprequestentitytoolarge","httprequestheaderfieldstoolarge","httprequesttimeout","httprequesturitoolarge","httprequestedrangenotsatisfiable","httpresetcontent","httpresponse","exception_type","httpseeother","httpservererror","httpserverexception","httpserviceunavailable","httpsuccess","httpswitchprotocol","httptemporaryredirect","httptoomanyrequests","httpunauthorized","httpunknownresponse","httpunprocessableentity","httpunsupportedmediatype","httpupgraderequired","httpuseproxy","httpversionnotsupported","imap","badresponseerror","bodytypeattachment","bodytypebasic","bodytypeextension","bodytypemessage","bodytypemultipart","bodytypetext","byeresponseerror","crammd5authenticator","dataformaterror","digestmd5authenticator","error","flagcounterror","loginauthenticator","noresponseerror","plainauthenticator","responseerror","responseparseerror","internetmessageio","netprivate","writeadapter","opentimeout","pop3","popauthenticationerror","popbadresponse","poperror","popmail","protoautherror","protocommanderror","protofatalerror","protoretriableerror","protoservererror","protosyntaxerror","protounknownerror","protocretryerror","protocolerror","readtimeout","smtp","response","smtpauthenticationerror","smtperror","smtpfatalerror","smtpserverbusy","smtpsyntaxerror","smtpunknownerror","smtpunsupportedcommand","telnet","newton","nilclass","nilclass","nomemoryerror","nomethoderror","notimplementederror","numeric","numeric","oleproperty","object","object","missingsourcefile","parseerror","timeouterror","objectspace","weakmap","observable","open3","openkey()","openssl","asn1","asn1data","asn1error","constructive","objectid","primitive","bn","bnerror","buffering","cipher","cipher","ciphererror","config","configerror","digest","digest","digesterror","engine","engineerror","hmac","hmacerror","netscape","spki","spkierror","ocsp","basicresponse","certificateid","ocsperror","request","response","opensslerror","pkcs12","pkcs12error","pkcs5","pkcs5error","pkcs7","pkcs7error","recipientinfo","signerinfo","pkey","dh","dherror","dsa","dsaerror","ec","group","error","point","error","ecerror","pkey","pkeyerror","rsa","rsaerror","random","randomerror","ssl","nonblock","sslcontext","sslerror","sslserver","sslsocket","session","sessionerror","socketforwarder","x509","attribute","attributeerror","crl","crlerror","certificate","certificateerror","extension","extensionerror","extensionfactory","name","rfc2253dn","nameerror","request","requesterror","revoked","revokederror","store","storecontext","storeerror","openstruct","openuri","httperror","httpredirect","meta","openread","optionparser","ac","acceptables","ambiguousargument","ambiguousoption","arguable","completinghash","completion","invalidargument","invalidoption","list","missingargument","needlessargument","optionmap","parseerror","switch","noargument","optionalargument","placedargument","requiredargument","pi()","post()","pp","objectmixin","ppmethods","singleline","pstore","error","pty","childexited","pathname","pathname()","permalink?()","prettyprint","breakable","group","groupqueue","singleline","text","prime","eratosthenesgenerator","eratosthenessieve","generator23","oldcompatibility","pseudoprimegenerator","trialdivision","trialdivisiongenerator","proc","process","process","gid","status","status","sys","uid","profiler__","proxy()","psych","badalias","coder","error","exception","handler","dumperoptions","handlers","recorder","json","stream","treebuilder","nodes","alias","document","mapping","node","scalar","sequence","stream","omap","parser","mark","privatetype","scalarscanner","set","stream","streaming","syntaxerror","treebuilder","visitors","depthfirst","emitter","jsontree","toruby","visitor","yamltree","qualifiedconstutils","queryinfokey()","queryvalue()","queue","rails_version","rdoc_main","rdoc","rdoc","alias","anonclass","anymethod","attr","classmodule","codeobject","comment","constant","context","section","crossreference","erbio","erbpartial","encoding","error","extend","generator","darkfish","jsonindex","markup","ri","ghostmethod","include","markdown","literals","memoentry","parseerror","ruleinfo","memoentry","parseerror","ruleinfo","markup","attrchanger","attrspan","attributemanager","attributes","blankline","blockquote","document","formatter","hardbreak","include","indentedparagraph","list","listitem","paragraph","parser","error","parseerror","preprocess","raw","rule","special","toansi","tobs","tohtml","tohtmlcrossref","tohtmlsnippet","tojoinedparagraph","tolabel","tomarkdown","tordoc","totableofcontents","tottonly","verbatim","metamethod","methodattr","normalclass","normalmodule","options","parser","c","changelog","markdown","rd","ruby","rubytools","simple","text","rd","blockparser","inline","inlineparser","rdoc","ri","driver","error","notfounderror","error","paths","rbconfig","require","rubylex","error","rubytoken","tkerror","tkid","tkkw","tknode","tkopasgn","tkop","tksymbol","tkunknownchar","tkval","token","rdoc","servlet","singleclass","stats","normal","quiet","verbose","store","error","missingfileerror","task","text","tokenstream","tomdoc","toplevel","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme.ext","readme.ext.ja","readme.ja","releasing_rails","rexml","attlistdecl","attribute","attributes","cdata","child","comment","dtd","attlistdecl","elementdecl","entitydecl","notationdecl","parser","declaration","doctype","document","element","elementdecl","elements","encoding","entity","entityconst","externalentity","formatters","default","pretty","transitive","functions","iosource","instruction","light","node","namespace","node","notationdecl","output","parent","parseexception","parsers","baseparser","lightparser","pullevent","pullparser","sax2parser","streamparser","treeparser","ultralightparser","xpathparser","quickpath","sax2listener","source","sourcefactory","streamlistener","syncenumerator","text","undefinednamespaceexception","validation","choice","event","interleave","oneormore","optional","ref","relaxng","sequence","state","validationexception","validator","zeroormore","xmldecl","xmltokens","xpath","xpathparser","rss","atom","commonmodel","contentmodel","classmethods","dateconstruct","duplicatelinkchecker","entry","feed","author","category","contributor","entry","content","published","source","summary","generator","icon","id","link","logo","rights","subtitle","title","updated","personconstruct","email","name","uri","textconstruct","uricontentmodel","basedublincoremodel","baselistener","basemodel","baseparser","basetrackbackmodel","contentmodel","conversionerror","converter","dublincoremodel","dublincoremodel","element","error","itunesbasemodel","ituneschannelmodel","itunescategory","itunesimage","itunesowner","itunesitemmodel","itunesduration","itunesmodelutils","imagefaviconmodel","imagefavicon","imageitemmodel","imageitem","imagemodelutils","invalidrsserror","listenermixin","maker","atom","entry","channel","cloud","description","generator","skipdays","day","skiphours","hour","image","items","item","textinput","feed","channel","categories","category","cloud","generator","links","link","skipdays","day","skiphours","hour","image","items","item","categories","category","content","enclosure","guid","links","link","source","categories","category","generator","icon","links","link","logo","textinput","atomcategory","atomgenerator","atomlink","atomlogo","atompersonconstructbase","atompersons","atomtextconstruct","atomtextconstructbase","ensurexmlcontent","base","channelbase","authorsbase","authorbase","categoriesbase","categorybase","cloudbase","contributorsbase","contributorbase","copyrightbase","descriptionbase","generatorbase","itunescategories","itunescategory","itunesimage","itunesowner","linksbase","linkbase","skipdaysbase","daybase","skiphoursbase","hourbase","titlebase","contentmodel","dublincoremodel","itunesbasemodel","ituneschannelmodel","itunescategoriesbase","itunescategorybase","itunesimagebase","itunesownerbase","itunesitemmodel","itunesdurationbase","imagebase","imagefaviconmodel","imagefaviconbase","imageitemmodel","imageitembase","itemsbase","itembase","contentbase","descriptionbase","enclosurebase","guidbase","itunesduration","rightsbase","sourcebase","iconbase","logobase","rightsbase","subtitlebase","titlebase","titlebase","rss09","rss091","channel","image","items","item","textinput","rss092","channel","image","items","item","textinput","channel","authors","author","categories","category","cloud","contributors","contributor","copyright","description","generator","links","link","skipdays","day","skiphours","hour","title","image","items","item","authors","author","categories","category","content","contributors","contributor","description","enclosure","guid","links","link","rights","source","authors","author","categories","category","contributors","contributor","generator","icon","links","link","logo","rights","subtitle","title","title","textinput","rss10","channel","authors","author","categories","category","cloud","contributors","contributor","copyright","description","generator","links","link","skipdays","day","skiphours","hour","title","image","items","item","authors","author","categories","category","content","contributors","contributor","description","enclosure","guid","links","link","rights","source","authors","author","categories","category","contributors","contributor","generator","icon","links","link","logo","rights","subtitle","title","title","textinput","rss20","channel","categories","category","cloud","generator","skipdays","day","skiphours","hour","image","items","item","authors","author","categories","category","enclosure","guid","source","links","link","textinput","rssbase","setupdefaultdate","setupdefaultlanguage","slashmodel","syndicationmodel","taxonomytopicmodel","taxonomytopicsbase","taxonomytopicbase","taxonomytopicsmodel","taxonomytopicsbase","textinputbase","trackbackmodel","trackbackaboutsbase","trackbackaboutbase","xmlstylesheets","xmlstylesheet","missingattributeerror","missingtagerror","nserror","notavailablevalueerror","notexceptedtagerror","notexpectedtagerror","notseterror","notvalidxmlparser","notwellformederror","overlappedprefixerror","parser","rdf","bag","channel","image","items","textinput","image","item","li","li","seq","seq","li","textinput","rexmllikexmlparser","rexmllistener","rexmlparser","rss09","rss10","rootelementmixin","rss","channel","cloud","image","item","category","enclosure","guid","source","skipdays","day","skiphours","hour","textinput","setupmaker","slashmodel","syndicationmodel","taxonomytopicmodel","taxonomytopic","taxonomytopicsmodel","taxonomytopics","bag","toomuchtagerror","trackbackmodel10","trackbackabout","trackbackping","trackbackmodel20","trackbackabout","trackbackping","trackbackutils","unknownconversionmethoderror","unknownconvertmethod","unknowntagerror","unsupportedmakerversionerror","utils","csv","inheritedreader","yescleanother","yesother","xml","element","xmlparserlistener","xmlparsernotfound","xmlparserparser","xmlscanlistener","xmlscanparser","xmlstylesheet","xmlstylesheetmixin","running_unit_tests","running_unit_tests","racc","cparseparams","parseerror","parseerror","parser","rails","api","apptask","edgetask","repotask","stabletask","task","appbuilder","apprailsloader","application","bootstrap","configuration","finisher","routesreloader","backtracecleaner","configuration","middlewarestackproxy","console","consolemethods","dbconsole","deprecatedconstant","engine",":","configuration","railties","generators","actions","activemodel","base","mailergenerator","migration","classmethods","namedbase","info","initializable","classmethods","collection","initializer","paths","path","root","pluginbuilder","rack","debugger","logtailer","logger","railtie","configurable","classmethods","configuration","server","options","version","raise()","raise()","raise()","raise()","rake","altsystem","application","backtrace","cloneable","compositepublisher","dsl","defaultloader","earlytime","filecreationtask","filelist","filetask","fileutilsext","ftpfile","ftpuploader","invocationchain","emptyinvocationchain","invocationexceptionmixin","makefileloader","multitask","namespace","packagetask","privatereader","classmethods","pseudostatus","rdoctask","rakeapp","rubyforgepublisher","rulerecursionoverflowerror","sshdirpublisher","sshfilepublisher","sshfreshdirpublisher","task","taskargumenterror","taskarguments","tasklib","taskmanager","traceoutput","win32","win32homeerror","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","random","range","range","rangeerror","rational","rational()","compatible","readline","regexp","regexperror","requireprofiler","requirement","resolv","dns","config","nxdomain","otherresolverror","decodeerror","encodeerror","name","query","requester","requesterror","resource","any","cname","domainname","generic","hinfo","in","a","aaaa","srv","wks","minfo","mx","ns","ptr","soa","txt","hosts","ipv4","ipv6","resolverror","resolvtimeout","rinda","drbobjecttemplate","invalidhashtuplekey","notifytemplateentry","requestcancelederror","requestexpirederror","rindaerror","ringfinger","ringprovider","ringserver","simplerenewer","template","templateentry","tuple","tuplebag","tuplebin","tupleentry","tuplespace","tuplespaceproxy","waittemplateentry","ripper","filter","rubylex","rubytoken","tkerror","tkid","tknode","tkopasgn","tkop","tkunknownchar","tkval","token","rubyvm","env","instructionsequence","runtimeerror","sdbm","sdbmerror","sockssocket","scanf","formatspecifier","formatstring","scripterror","securerandom","securityerror","set","setvalue()","shell","appendfile","appendio","builtincommand","cat","commandprocessor","concat","echo","error","filter","glob","processcontroller","systemcommand","tee","void","shellwords","signal","signalexception","simpledelegator","singleforwardable","singleton","sizedqueue","socket","ancillarydata","option","udpsource","socketerror","sortedset","sourceannotationextractor","annotation","sshdirpublisher","sshfilepublisher","sshfreshdirpublisher","standarderror","stopiteration","string","string()","string()","string","stringio","stringscanner","error","struct","symbol","symbol","symbol","synchronizer","synchronizer_m","err","lockmodefailer","unknownlocker","synchronizer","synchronizer_m","syntaxerror","sys","syslog","constants","facility","level","logger","formatter","severity","macros","option","systemcallerror","systemexit","systemstackerror","tabsize()","tabsize=()","tcpserver","tcpsocket","tsort","cyclic","tempfile","remover","thwait","thread","thread","location","threaderror","threadgroup","thwait","time","time","timeout","error","timeouterror","tracepoint","tracer","trueclass","trueclass","typeerror","udpsocket","unixserver","unixsocket","uri","uri","badurierror","error","escape","ftp","generic","http","https","invalidcomponenterror","invalidurierror","ldap","ldaps","mailto","parser","regexp","pattern","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","unboundmethod","vector","zerovectorerror","webrick","accesslog","accesslogerror","basiclog","cgi","config","cookie","daemon","genericserver","htmlutils","httpauth","authenticator","basicauth","digestauth","htdigest","htgroup","htpasswd","proxyauthenticator","proxybasicauth","proxydigestauth","userdb","httpproxyserver","httprequest","httpresponse","httpserver","httpservererror","httpservlet","abstractservlet","cgihandler","defaultfilehandler","erbhandler","filehandler","httpservleterror","prochandler","httpstatus","clienterror","eoferror","error","info","redirect","servererror","status","success","httputils","formdata","httpversion","log","servererror","simpleserver","utils","timeouthandler","win32ole","variant","win32oleruntimeerror","win32ole_event","win32ole_method","win32ole_param","win32ole_type","win32ole_typelib","win32ole_variable","win32ole_variant","weakref","referror","win32","registry","api","constants","error","kernel32","predefinedkey","resolv","kernel32","sspi","api","identity","negotiateauth","sspiresult","securitybuffer","securityhandle","timestamp","win32api","xml","parser","xmlencoding_ja","sjishandler","xmlrpc","base64","basicserver","cgiserver","client","proxy","config","convert","create","datetime","faultexception","marshal","marshallable","modrubyserver","parsecontenttype","parserwriterchoosemixin","server","service","basicinterface","interface","publicinstancemethodsinterface","webrickservlet","xmlparser","abstractstreamparser","abstracttreeparser","nqxmlparser","nqxmlstreamparser","xmlrpcparser","nqxmltreeparser","rexmlstreamparser","streamlistener","streamparsermixin","xmlparser","xmlscanstreamparser","xmlscanparser","xmlstreamparser","xmltreeparser","xmlwriter","abstract","simple","xmlparser","xmp","stringinputmethod","yaml","dbm","store","syck","defaultkey","zerodivisionerror","zlib","buferror","dataerror","deflate","error","gzipfile","crcerror","error","lengtherror","nofooter","gzipreader","gzipwriter","inflate","memerror","needdict","streamend","streamerror","versionerror","zstreampermalink?()","__callback_runner_name()","__callback_runner_name_cache()","__callee__()","__dir__()","__drbref()","__drbref()","__drburi()","__drburi()","__evaluate__()","__exit__()","__generate_callback_runner_name()","__getobj__()","__getobj__()","__id__()","__method__()","__reset_runner()","__send__()","__setobj__()","__setobj__()","_attr_readonly()","_dasherize()","_deprecation_warning()","_dump()","_dump()","_dump()","_dump()","_dump()","_dump()","_dump()","_dump_without_zone()","_get()","_getproperty()","_handle_render_options()","_httpdate()","_id2ref()","_insert_callbacks()","_invoke()","_iso8601()","_jisx0301()","_layout_for()","_layout_for()","_load()","_load()","_load()","_load()","_load()","_load()","_load_without_zone()","_normalize_callback_options()","_original_to_s()","_parse()","_parse_file()","_prefixes()","_prepare_context()","_racc_do_parse_rb()","_racc_do_reduce()","_racc_evalact()","_racc_init_sysvars()","_racc_setup()","_racc_yyparse_rb()","_rfc2822()","_rfc3339()","_rfc822()","_routes()","_routes()","_routes_context()","_set_detail()","_set_last_value()","_set_wrapper_options()","_setproperty()","_store_accessors_module()","_strptime()","_strptime()","_to_partial_path()","_url_for_modules()","_with_routes()","_xmlschema()","`()","a()","abbrev()","abbrev()","abbreviate()","abbreviate()","abort()","abort()","abort()","abort()","abort()","abort_on_exception()","abort_on_exception()","abort_on_exception=()","abort_on_exception=()","abs()","abs()","abs()","abs()","abs()","abs()","abs2()","abs2()","absolute()","absolute?()","absolute?()","absolute?()","absolute_path()","absolute_path()","absolute_path()","abstract!()","abstract_class?()","abstract_railtie?()","ac_arg_disable()","ac_arg_enable()","ac_arg_with()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept_blank_line()","accept_blank_line()","accept_blank_line()","accept_block_quote()","accept_block_quote()","accept_block_quote()","accept_charset()","accept_charset=()","accept_document()","accept_document()","accept_heading()","accept_heading()","accept_heading()","accept_heading()","accept_heading()","accept_heading()","accept_indented_paragraph()","accept_list_end()","accept_list_end()","accept_list_end()","accept_list_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_start()","accept_list_item_start()","accept_list_item_start()","accept_list_item_start()","accept_list_item_start()","accept_list_item_start()","accept_list_start()","accept_list_start()","accept_list_start()","accept_list_start()","accept_list_start()","accept_loop()","accept_nonblock()","accept_nonblock()","accept_nonblock()","accept_nonblock()","accept_paragraph()","accept_paragraph()","accept_paragraph()","accept_paragraph()","accept_paragraph()","accept_raw()","accept_raw()","accept_raw()","accept_rule()","accept_rule()","accept_rule()","accept_rule()","accept_uri_http()","accept_verbatim()","accept_verbatim()","accept_verbatim()","accept_verbatim()","accept_verbatim()","accepts()","accepts_nested_attributes_for()","access_log()","acct()","acos()","acos()","acos!()","acosh()","acosh()","acosh!()","acronym()","action()","action()","action_has_layout?()","action_methods()","action_methods()","action_methods()","action_methods()","activate()","activate()","activate_dependencies()","active?()","active?()","active?()","active?()","active?()","active?()","active?()","active?()","active?()","active_connection?()","active_connections?()","active_job?()","active_jobs()","active_jobs_exist?()","active_process_controllers()","activerecord?()","acts_like?()","acts_like_date?()","acts_like_date?()","acts_like_string?()","acts_like_time?()","acts_like_time?()","acts_like_time?()","adapter()","adapter_name()","adapter_name()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add!()","add?()","add_alias()","add_alias()","add_alias()","add_alias()","add_alias()","add_alias()","add_also_in()","add_attribute()","add_attribute()","add_attribute()","add_attribute()","add_attributes()","add_authenticator()","add_belongs_to()","add_bindir()","add_bulk_threshold_option()","add_c_enclosure()","add_c_variables()","add_cert()","add_certid()","add_certificate()","add_checksums()","add_class()","add_class()","add_class()","add_class_or_module()","add_clear_sources_option()","add_column()","add_column()","add_column_position!()","add_column_sql()","add_comment()","add_comment()","add_common_option()","add_constant()","add_constant()","add_constant()","add_crl()","add_crl()","add_data()","add_date()","add_delivery_method()","add_dependency()","add_description()","add_development_dependency()","add_dictionary()","add_element()","add_element()","add_entry()","add_event_to_arry()","add_event_to_arry()","add_expr()","add_expr_escaped()","add_expr_literal()","add_extend()","add_extends()","add_extension()","add_extension()","add_extension()","add_extension_modules()","add_extra_args()","add_field()","add_file()","add_file()","add_file()","add_file()","add_file_digest()","add_file_signed()","add_file_simple()","add_filter()","add_filter()","add_flash_types()","add_footnote()","add_found_dependencies()","add_from()","add_generator()","add_handler()","add_handler()","add_have_children_element()","add_html()","add_html()","add_import()","add_import()","add_include()","add_include()","add_includes()","add_index()","add_index_length()","add_index_options()","add_index_sort_order()","add_index_sql()","add_install_update_options()","add_introspection()","add_key_option()","add_label()","add_line_numbers()","add_listener()","add_listener()","add_listener()","add_listener()","add_listener()","add_listener()","add_listener()","add_loader()","add_loader()","add_local_remote_options()","add_maker()","add_method()","add_method()","add_method()","add_method()","add_method()","add_method_documentation()","add_method_list()","add_module()","add_module()","add_module_alias()","add_multicall()","add_namespace()","add_need_initialize_variable()","add_need_initialize_variable()","add_nonce()","add_nonce()","add_observer()","add_on_blank()","add_on_empty()","add_option()","add_other_element()","add_owners()","add_paragraph()","add_path()","add_platform()","add_platform_option()","add_plural_form()","add_postamble()","add_preamble()","add_prerelease_option()","add_private_type()","add_protocol()","add_proxy_option()","add_rakelib()","add_recipient()","add_reference()","add_renderer()","add_require()","add_response_handler()","add_revoked()","add_row()","add_ruby_type()","add_rubygems_trusted_certs()","add_runtime_dependency()","add_schedule()","add_section()","add_self_to_load_path()","add_shebang_option!()","add_signer()","add_silencer()","add_source()","add_source_option()","add_spec()","add_special()","add_special()","add_special_rdoclink()","add_special_tidylink()","add_specific_extra_args()","add_specs()","add_status()","add_stmt()","add_tag()","add_target()","add_text()","add_text()","add_timestamps()","add_timestamps_sql()","add_to()","add_to_classes_or_modules()","add_to_element_method()","add_to_transaction()","add_token()","add_token_listener()","add_tokens()","add_trace_func()","add_transaction_record()","add_update_sources_option()","add_value()","add_version_option()","add_word_pair()","add_word_pair()","addch()","addch()","added?()","addr()","addr()","addstr()","addstr()","adler()","adler32()","adler32_combine()","advance()","advance()","advance()","advance()","advise()","afamily()","after()","after()","after_action()","after_commit()","after_initialize()","after_rollback()","after_teardown()","after_validation()","ago()","ago()","ago()","ago()","ago()","ago()","ajd()","alert()","alert()","alert()","alert=()","alert_error()","alert_error()","alert_warning()","alert_warning()","alias()","alias()","alias_attribute()","alias_attribute()","alias_command()","alias_command()","alias_extension()","alias_map()","alias_method_chain()","alias_type()","alias_type()","aliases()","alien()","align()","alive?()","alive?()","alive?()","alive?()","alive?()","all()","all()","all()","all()","all()","all()","all()","all=()","all?()","all_classes()","all_classes_and_modules()","all_day()","all_files()","all_helpers_from_path()","all_modules()","all_month()","all_names()","all_paths()","all_quarter()","all_specs()","all_symbols()","all_waits()","all_waits()","all_waits()","all_waits()","all_week()","all_year()","allocate()","allow_addr?()","allow_concurrency?()","allow_socket?()","allowed_index_name_length()","allowed_index_name_length()","alt_name_or_x509_entry()","alternate=()","amjd()","ancestors()","ancestors()","ancestors()","ancestors()","ancestors()","ancestors_of()","angle()","angle()","angle()","annotate()","annotate()","announce()","announce()","anonymous?()","any()","any()","any?()","any?()","any?()","any_content()","any_waiting?()","api_behavior()","api_dir()","api_dir()","api_endpoint()","api_key()","api_keys()","api_location()","api_main()","api_uri()","apop?()","apop?()","apop?()","app()","app()","app()","app()","app()","app_generators()","app_middleware()","app_script_text()","append()","append()","append()","append()","append()","append()","append()","append_after_action()","append_around_action()","append_before_action()","append_data()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_features()","append_view_path()","append_view_path()","application()","application()","application=()","application_name()","application_trace()","apply_join_dependency()","approximate_recommendation()","aref()","aref()","aref()","aref_prefix()","aref_prefix()","aref_prefix()","aref_to()","arel()","arel_engine()","arel_table()","arg()","arg()","arg()","arg_names()","arglists()","args()","arguments()","argv()","arity()","arity()","arity()","around_action()","array()","array_attributes()","array_to_string()","as_href()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_string()","ascend()","ascii_compatible?()","ascii_only?()","asciicompat_encoding()","asctime()","asctime()","asin()","asin()","asin!()","asinh()","asinh()","asinh!()","ask()","ask()","ask()","ask_for_password()","ask_for_password()","ask_for_password_on_unix()","ask_for_password_on_windows()","ask_if_ok()","ask_yes_no()","ask_yes_no()","asn1_flag()","asn1_flag=()","assemble_template()","assert_index()","assert_valid_keys()","asset()","asset_path()","asset_url()","assign_attributes()","assign_names()","assign_names()","assignment","assoc()","assoc()","assoc()","assume_migrated_upto_version()","at()","at()","at()","at()","at()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_hour()","at_beginning_of_hour()","at_beginning_of_minute()","at_beginning_of_minute()","at_beginning_of_month()","at_beginning_of_quarter()","at_beginning_of_week()","at_beginning_of_year()","at_end_of_day()","at_end_of_day()","at_end_of_day()","at_end_of_hour()","at_end_of_hour()","at_end_of_minute()","at_end_of_minute()","at_end_of_month()","at_end_of_quarter()","at_end_of_week()","at_end_of_year()","at_exit()","at_midnight()","at_midnight()","at_midnight()","at_with_coercion()","at_without_coercion()","atan()","atan()","atan()","atan!()","atan2()","atan2()","atan2!()","atanh()","atanh()","atanh!()","atime()","atime()","atime()","atime()","atom_feed()","atom_validate()","atom_validate()","atom_validate()","atomic_write()","attach_to()","attachments()","attachments()","attlistdecl()","attlistdecl()","attlistdecl?()","attr_internal()","attr_internal_accessor()","attr_internal_reader()","attr_internal_writer()","attr_readonly()","attribute()","attribute()","attribute()","attribute_for_inspect()","attribute_match()","attribute_method?()","attribute_method?()","attribute_method?()","attribute_method_affix()","attribute_method_prefix()","attribute_method_suffix()","attribute_missing()","attribute_names()","attribute_names()","attribute_names()","attribute_of()","attribute_present?()","attributes()","attributes()","attributes()","attributes()","attributes()","attributes=()","attributes=()","attributes=()","attributes_before_type_cast()","attributes_hash()","attributes_names()","attributes_of()","attroff()","attroff()","attron()","attron()","attrset()","attrset()","audio_path()","audio_tag()","audio_url()","auth_cram_md5()","auth_data=()","auth_login()","auth_only()","auth_only()","auth_plain()","auth_tag()","auth_tag=()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate_or_request_with_http_basic()","authenticate_or_request_with_http_digest()","authenticate_or_request_with_http_token()","authenticate_with_http_basic()","authenticate_with_http_digest()","authenticate_with_http_token()","authenticated?()","authentication_header()","authentication_request()","authentication_request()","authentication_request()","author()","author=()","authorization()","authors()","authors=()","auto_discovery_link_tag()","autoclose=()","autoclose?()","autoload()","autoload()","autoload()","autoload?()","autoload?()","autoload_at()","autoload_once()","autoload_once_paths()","autoload_paths()","autoload_paths()","autoload_under()","autoloads()","avail_in()","avail_out()","avail_out=()","available_action?()","available_environments()","available_specs()","available_tags()","average()","await()","await_commit()","axe()","b()","backend()","backend()","backend=()","backend=()","backticks()","backtrace()","backtrace()","backtrace()","backtrace()","backtrace_cleaner()","backtrace_locations()","banner()","banner()","base()","base()","base64()","base64()","base64digest()","base64digest()","base64digest!()","base_class()","base_dir()","base_label()","base_label()","base_name()","base_name()","base_root()","basename()","basename()","basename()","basic()","basic_auth()","basic_auth()","basic_quote_characters()","basic_quote_characters=()","basic_word_break_characters()","basic_word_break_characters=()","becomes()","becomes!()","beep()","before()","before()","before_action()","before_configuration()","before_eager_load()","before_initialize()","before_running_rdoc()","before_setup()","before_validation()","begin()","begin()","begin_adding()","begin_adding()","begin_db_transaction()","begin_db_transaction()","begin_db_transaction()","begin_isolated_db_transaction()","begin_isolated_db_transaction()","begin_isolated_db_transaction()","beginning_of_day()","beginning_of_day()","beginning_of_day()","beginning_of_hour()","beginning_of_hour()","beginning_of_line?()","beginning_of_minute()","beginning_of_minute()","beginning_of_month()","beginning_of_quarter()","beginning_of_week()","beginning_of_week()","beginning_of_week=()","beginning_of_year()","begins?()","begx()","begy()","behavior()","behavior=()","belongs_to()","belongs_to()","belongs_to()","belongs_to?()","benchmark()","benchmark()","between?()","between?()","bin()","bin()","bin_dir()","bin_file()","bin_path()","binary=()","binary?()","binary_mode()","bind()","bind()","bind()","bind()","bind()","bind()","bind()","bind()","bind()","bind()","bind()","bind_at_call()","bind_at_call()","bind_at_call()","bind_function()","bind_function()","binding()","binding()","binding()","bindir()","binmode()","binmode()","binmode()","binmode()","binmode=()","binmode?()","binmode?()","binread()","binread()","binwrite()","bit_set?()","bitmap_for()","bkgd()","bkgd()","bkgdset()","bkgdset()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blinding_off!()","blinding_off!()","blinding_on!()","blinding_on!()","blksize()","block_format()","block_given?()","block_length()","block_length()","block_length()","block_output_synchronize()","block_params=()","block_scanf()","blockdev?()","blockdev?()","blockdev?()","blockdev?()","blockquote()","blocks()","bm()","bmbm()","body()","body()","body()","body()","body()","body()","body=()","body=()","body=()","body_exist?()","body_parts()","body_permitted?()","body_stream=()","bool()","bool()","boolean()","boolean()","both?()","bottom()","bottom()","bound?()","box()","break()","break?()","break_on_newline()","break_outmost_groups()","break_points()","breakable()","breakable()","breakpoint()","broadcast()","broadcast()","browser_generated_types()","bsearch()","bsearch()","buffersize()","buffertype()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build2()","build_arel()","build_args()","build_args()","build_args=()","build_extensions()","build_heading()","build_heading()","build_index()","build_indicies()","build_info_dir()","build_info_file()","build_list()","build_marshal_gemspecs()","build_mem_cache()","build_modern_index()","build_modern_indicies()","build_paragraph()","build_paragraph()","build_verbatim()","build_verbatim()","builtin_curves()","bump()","button()","button_tag()","button_to()","button_to_function()","by_col()","by_col!()","by_col_or_row()","by_col_or_row!()","by_id()","by_row()","by_row!()","byte()","bytes()","bytes()","bytes()","bytes()","bytes()","bytes()","bytes()","bytes()","bytes_read()","bytesize()","byteslice()","cache()","cache()","cache()","cache()","cache()","cache_attribute?()","cache_attributes()","cache_dir()","cache_dir()","cache_file()","cache_fixtures()","cache_for_connection()","cache_fragment_name()","cache_if()","cache_key()","cache_path()","cache_store()","cache_store=()","cache_template_loading()","cache_template_loading=()","cache_unless()","cache_update_path()","cached_attributes()","cached_fixtures()","cached_size()","cachesize=()","calculate()","calculate()","calculate_ip()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call2()","call2_async()","call_app()","call_async()","callcc()","caller()","caller_locations()","calling_methods","calltype()","calltype=()","camelcase()","camelize()","camelize()","can_change_color?()","can_parse()","can_parse_by_name()","cancel()","cancel()","cancel()","cancel()","canceled?()","candidate()","candidate()","candidate()","canonical_each()","canonname()","capabilities()","capability()","capable_auth_types()","capable_cram_md5_auth?()","capable_login_auth?()","capable_plain_auth?()","capable_starttls?()","capify!()","capitalize()","capitalize()","capitalize()","capitalize!()","caption()","capture()","capture()","capture2()","capture2e()","capture3()","captures()","case_insensitive_comparison()","case_insensitive_comparison()","case_sensitive_equality_operator()","case_sensitive_modifier()","case_sensitive_modifier()","casecmp()","casecmp()","casefold?()","cat()","catch()","cattr_accessor()","cattr_reader()","cattr_writer()","cbreak()","cbrt()","cbrt()","cbrt!()","cd()","cd()","cdata()","cdata()","cdata?()","cdata_block()","cdata_section()","cdatas()","ceil()","ceil()","ceil()","ceil()","ceil()","ceil()","ceiling()","center()","cert()","cert_path()","certid()","certificates()","certificates=()","certificates_matching()","certs()","chain()","chain=()","challenge()","challenge()","challenge()","challenge=()","change()","change()","change()","change()","change_attribute()","change_column()","change_column()","change_column_default()","change_column_default()","change_column_default()","change_column_null()","change_column_null()","change_column_null()","change_column_null()","change_column_sql()","change_default()","change_privilege()","change_privilege()","change_table()","change_table()","change_workspace()","changed()","changed()","changed?()","changed?()","changed_attribute_by_name()","changed_attributes()","changed_for_autosave?()","changes()","char_pos()","character()","character()","characters()","characters()","chardev?()","chardev?()","chardev?()","chardev?()","charpos()","chars()","chars()","chars()","chars()","charset()","charset()","charset()","charset_current()","chdir()","chdir()","chdir()","chdir()","check()","check()","check()","check()","check()","check_box()","check_box()","check_box_tag()","check_cert()","check_chain()","check_class_collision()","check_closed()","check_credentials_permissions()","check_data()","check_files()","check_gems()","check_generator()","check_insecure_method()","check_inspect_key()","check_key()","check_key()","check_modeline()","check_names()","check_nonce()","check_pending!()","check_private_key()","check_root()","check_ruby_version()","check_signedness()","check_sizeof()","check_that_user_bin_dir_is_in_path()","check_trust()","check_until()","checkbox()","checkbox_group()","checkin()","checkout()","childnodes()","child_name()","children()","children()","children()","children()","chmod()","chmod()","chmod()","chmod()","chmod()","chmod_r()","chomp()","chomp()","chomp!()","choose_from_list()","choose_from_list()","chop()","chop()","chop!()","chown()","chown()","chown()","chown()","chown_r()","chr()","chr()","chr()","chroot()","chunk()","chunk()","chunked=()","chunked?()","chunked?()","cidr()","cidr_to_string()","cipher()","cipher()","cipher=()","ciphers()","ciphers()","ciphers=()","civil()","civil()","civil_from_format()","class()","class()","class()","class_attribute()","class_attributes()","class_dir()","class_dir()","class_document()","class_eval()","class_eval()","class_exec()","class_file()","class_method_list()","class_methods()","class_name()","class_name()","class_name()","class_name()","class_path()","class_path()","class_variable_defined?()","class_variable_get()","class_variable_set()","class_variables()","classes()","classes()","classes_and_includes_and_extends_for()","classes_and_modules()","classes_hash()","classes_hash()","classify()","classify()","classify()","clean()","clean_gems()","cleanpath()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup!()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear!()","clear!()","clear_action_methods!()","clear_actions()","clear_active_connections!()","clear_all_connections!()","clear_cache()","clear_cache!()","clear_cache!()","clear_cache!()","clear_cache!()","clear_comment()","clear_comments()","clear_default_specs()","clear_exclude()","clear_helpers()","clear_paths()","clear_prerequisites()","clear_query_cache()","clear_reloadable_connections!()","clear_reloadable_connections!()","clear_respond_to()","clear_table_cache!()","clear_validators!()","client_ca()","client_encoding()","client_error?()","client_min_messages()","client_min_messages=()","clobber_task_description()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone_empty()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close!()","close_enabled?()","close_enabled?()","close_on_exec=()","close_on_exec?()","close_read()","close_read()","close_read()","close_screen()","close_write()","close_write()","close_write()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed_read?()","closed_write?()","clrtoeol()","clrtoeol()","cmd()","cmds()","cmp()","cmp()","cmp()","cmp_issuer()","cmsg_is?()","code()","code()","codepage()","codepage=()","codepoints()","codepoints()","codepoints()","codepoints()","coerce()","coerce()","coerce()","coerce()","coerce()","coerce()","coerce()","coerce()","cofactor()","collapse()","collation()","collation()","collation()","collation_current()","collect()","collect()","collect()","collect()","collect()","collect!()","collect!()","collect2()","collect_concat()","collect_concat()","collect_first_comment()","collect_tasks()","collect_tasks()","collect_tokens()","collection()","collection_check_boxes()","collection_check_boxes()","collection_radio_buttons()","collection_radio_buttons()","collection_select()","collection_select()","color()","color_content()","color_field()","color_field_tag()","color_pair()","color_pairs()","color_set()","colorize_logging()","colorize_logging=()","colors()","cols()","column()","column()","column()","column()","column()","column_defaults()","column_defaults()","column_exists?()","column_exists?()","column_for_attribute()","column_name_length()","column_names()","column_spec()","column_vector()","column_vectors()","columns()","columns()","columns()","columns()","columns()","columns()","columns_for_remove()","columns_hash()","columns_hash()","columns_per_multicolumn_index()","columns_per_table()","combination()","comma_breakable()","command()","command=()","command_names()","comment()","comment()","comment()","comment=()","comment=()","comment=()","comment?()","comments()","commercial()","commercial()","commit()","commit!()","commit_db_transaction()","commit_db_transaction()","committed?()","committed?()","common_options()","compact()","compact!()","compact_specs()","comparable_time()","compare_by_identity()","compare_by_identity?()","compare_file()","compare_language()","compare_stream()","compare_with_coercion()","compare_with_coercion()","compare_without_coercion()","compare_without_coercion()","compatible?()","compile()","compile()","compile_file()","compile_methods!()","compile_methods!()","compile_option()","compile_option=()","complain()","complete()","complete()","complete()","complete()","complete()","complete_authentication()","completer_quote_characters()","completer_quote_characters=()","completer_word_break_characters()","completer_word_break_characters=()","completion_append_character()","completion_append_character=()","completion_case_fold()","completion_case_fold=()","completion_proc()","completion_proc=()","component()","component()","component()","component()","component_ary()","component_root_dir()","component_root_dir()","compose()","compose()","composed_of()","compress()","compress()","compress_indicies()","compute_asset_extname()","compute_asset_host()","compute_asset_path()","compute_key()","compute_tags()","compute_type()","concat()","concat()","concat()","concat()","concat()","concat()","concat()","concat()","concat()","concat()","concern()","concerns()","conf()","config()","config()","config()","config()","config()","config()","config()","config()","config=()","config_accessor()","config_file()","config_file_name()","configru()","configuration()","configuration()","configuration=()","configure()","configure()","configure_connection_for_https()","configure_rdoc_files()","conflicting_dependencies()","conflicting_dependencies()","conflicts()","conj()","conj()","conj()","conjugate()","conjugate()","conjugate()","connect()","connect()","connect()","connect()","connect()","connect()","connect()","connect()","connect_address()","connect_from()","connect_nonblock()","connect_nonblock()","connect_to()","connected?()","connected?()","connected?()","connecting()","connection()","connection()","connection()","connection()","connection_close?()","connection_config()","connection_for()","connection_handler()","connection_handler()","connection_handler=()","connection_id()","connection_id=()","connection_keep_alive?()","connection_pool()","connection_pool_list()","connection_pools()","connections()","consider_local?()","consider_remote?()","console()","console()","const_defined?()","const_defined_in?()","const_get()","const_load()","const_missing()","const_set()","const_warning()","const_warning()","constantize()","constantize()","constants()","constants()","constraints()","constraints()","construct()","construct_join_dependency_for_association_find()","construct_limited_ids_condition()","construct_relation_for_association_calculations()","construct_relation_for_association_find()","consume()","consume()","consumes?()","contains()","contains_bad_protocols?()","contains_requirable_file?()","content()","content=()","content=()","content_columns()","content_encoding()","content_for()","content_for?()","content_length()","content_length()","content_length()","content_length()","content_length()","content_length=()","content_length=()","content_mime_type()","content_range()","content_setup()","content_tag()","content_tag()","content_tag_for()","content_type()","content_type()","content_type()","content_type()","content_type()","content_type()","content_type()","content_type=()","content_type=()","content_type=()","content_type=()","contents()","contents()","context()","context()","context()","context=()","continue?()","continue_entry_body()","continue_timeout=()","control_expressions","controller()","controller()","controller()","controller_name()","controller_name()","controller_path()","controller_path()","controller_path()","conv2value()","convert()","convert()","convert()","convert()","convert()","convert()","convert()","convert()","convert()","convert()","convert_attrs()","convert_flow()","convert_flow()","convert_html()","convert_key()","convert_key()","convert_special()","convert_special()","convert_specials()","convert_string()","convert_string()","convert_string()","convert_to_model()","convert_to_model()","convert_value()","convert_value()","converter=()","converters()","convertible_int()","convpath()","cooked()","cooked!()","cookie_jar()","cookies()","copy()","copy()","copy()","copy()","copy()","copy()","copy_entry()","copy_file()","copy_files()","copy_nonce()","copy_static()","copy_stream()","copy_stream()","copy_string()","coredump?()","correct?()","correct_for_windows_path()","cos()","cos()","cos()","cos!()","cosh()","cosh()","cosh!()","count()","count()","count()","count()","count()","count()","count()","count()","count_by_sql()","count_objects()","count_observers()","covector()","cover?()","coverage_level=()","cp()","cp()","cp_r()","cram_md5_challenge()","crc()","crc32()","crc32_combine()","crc_table()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create!()","create!()","create!()","create_all()","create_carried_function()","create_carrier()","create_cert()","create_cert_email()","create_cert_self_signed()","create_current()","create_database()","create_database()","create_database_url()","create_document()","create_entries()","create_ext()","create_ext_from_array()","create_ext_from_hash()","create_ext_from_string()","create_extension()","create_fixtures()","create_from()","create_guid()","create_header()","create_items()","create_join_table()","create_key()","create_listeners()","create_mailer_file()","create_makefile()","create_reflection()","create_rule()","create_rule()","create_savepoint()","create_savepoint()","create_savepoint()","create_savepoint()","create_schema()","create_self_signed_cert()","create_ssl_params()","create_table()","create_table()","create_temp_function()","create_value()","create_value()","create_with()","created?()","credentials_path()","critical=()","critical?()","crl=()","crls()","crls=()","crmode()","cross_reference()","crypt()","csrf_meta_tag()","csrf_meta_tags()","css()","ctime()","ctime()","ctime()","ctime()","ctime()","ctime()","ctrl_cmd()","ctype()","ctype()","ctype=()","current()","current()","current()","current()","current()","current()","current=()","current_config()","current_cycle()","current_database()","current_database()","current_group()","current_hash()","current_hash()","current_line()","current_line()","current_page?()","current_savepoint_name()","current_schema()","current_scope()","current_section()","current_server()","curry()","curs_set()","curve_name()","curx()","cury()","custom()","custom()","cvs_url()","cvs_url()","cwday()","cweek()","cwyear()","cycle()","cycle()","cycle()","d()","daemon()","dangerous_attribute_method?()","dasherize()","dasherize()","data()","data()","data()","data()","data()","data=()","data_type()","database_configuration()","database_yml()","datadir()","date()","date()","date()","date=()","date=()","date=()","date=()","date=()","date?()","datetime()","date_field()","date_field_tag()","date_select()","date_select()","daterange()","datetime_field()","datetime_field_tag()","datetime_format()","datetime_format=()","datetime_local_field()","datetime_local_field_tag()","datetime_select()","datetime_select()","day()","day()","day()","day=()","day_fraction()","days()","days_ago()","days_in_month()","days_since()","days_to_week_start()","db()","dclone()","dclone()","dclone()","dclone()","dclone()","deafen()","debug()","debug()","debug()","debug()","debug()","debug()","debug()","debug=()","debug=()","debug=()","debug?()","debug?()","debug?()","debug_level=()","debug_msg()","debug_msg()","debug_output=()","debug_thread_info()","debugger()","debugger?()","decode()","decode()","decode()","decode()","decode()","decode64()","decode_all()","decode_credentials()","decode_credentials()","decode_credentials_header()","decode_utf7()","decode_www_form()","decode_www_form_component()","decoded()","decompose()","decompose()","decompress()","deconstantize()","deconstantize()","decrement()","decrement()","decrement()","decrement()","decrement()","decrement!()","decrement_counter()","decrement_open_transactions()","decrypt()","decrypt()","decrypt_and_verify()","deep_clone()","deep_dup()","deep_dup()","deep_dup()","deep_merge()","deep_merge!()","deep_munge()","deep_stringify_keys()","deep_stringify_keys()","deep_stringify_keys()","deep_stringify_keys!()","deep_stringify_keys!()","deep_stringify_keys!()","deep_symbolize_keys()","deep_symbolize_keys()","deep_symbolize_keys()","deep_symbolize_keys!()","deep_transform_keys()","deep_transform_keys!()","def_array_element()","def_atom_persons()","def_atom_text_construct()","def_class()","def_class_accessor()","def_class_accessor()","def_classed_element()","def_classed_element_without_accessor()","def_classed_elements()","def_convert()","def_corresponded_attr_reader()","def_corresponded_attr_writer()","def_csv_accessor()","def_csv_element()","def_delegator()","def_delegator()","def_delegators()","def_delegators()","def_e2message()","def_e2message()","def_e2message()","def_e2message()","def_element_class_accessor()","def_elements_class_accessor()","def_elements_class_accessor()","def_else_enc()","def_erb_method()","def_exception()","def_exception()","def_exception()","def_exception()","def_extend_command()","def_extend_command()","def_head_option()","def_iconv_convert()","def_inspector()","def_instance_delegator()","def_instance_delegators()","def_method()","def_module()","def_notifier()","def_notifier()","def_option()","def_other_element()","def_other_element_without_accessor()","def_post_proc()","def_pre_proc()","def_prog_mode()","def_same_enc()","def_single_delegator()","def_single_delegators()","def_system_command()","def_system_command()","def_tail_option()","def_to_euc_jp_from_iso_2022_jp()","def_to_euc_jp_from_shift_jis()","def_to_euc_jp_from_utf_8()","def_to_iso_2022_jp_from_euc_jp()","def_to_iso_8859_1_from_utf_8()","def_to_shift_jis_from_euc_jp()","def_to_shift_jis_from_utf_8()","def_to_utf_8_from_euc_jp()","def_to_utf_8_from_iso_8859_1()","def_to_utf_8_from_shift_jis()","def_uconv_convert_if_can()","def_yes_clean_other_accessor()","def_yes_other_accessor()","default()","default()","default()","default()","default()","default()","default()","default()","default=()","default_acl()","default_action()","default_aliases_for_option()","default_argc_limit()","default_bindir()","default_cert_path()","default_dir()","default_event_sources()","default_exec_format()","default_external()","default_external=()","default_for_option()","default_gem?()","default_generator_root()","default_hsts_options()","default_i18n_subject()","default_id_conv()","default_imap_port()","default_imaps_port()","default_inspect()","default_inspect()","default_internal()","default_internal=()","default_key_path()","default_load_limit()","default_ole_types()","default_options()","default_options()","default_options=()","default_parser()","default_parser=()","default_path()","default_pop3_port()","default_pop3s_port()","default_port()","default_port()","default_port()","default_port()","default_port()","default_port()","default_primary_key_type()","default_proc()","default_proc=()","default_record_separator()","default_record_separator=()","default_render()","default_render()","default_rubygems_dirs()","default_safe_level()","default_scope()","default_scopes?()","default_sequence_name()","default_source_root()","default_sources()","default_specifications_dir()","default_src_encoding()","default_ssl_context()","default_ssl_port()","default_ssl_port()","default_submission_port()","default_system_path()","default_system_path=()","default_title=()","default_tls_port()","default_tls_port()","default_url_options()","default_url_options=()","default_value()","default_value_for_option()","defaults()","defaults()","defaults_str()","defaults_str()","define()","define()","define()","define()","define()","define()","define_aliases()","define_aliases()","define_attribute_method()","define_attribute_methods()","define_callbacks()","define_finalizer()","define_head()","define_method_attribute()","define_method_attribute()","define_method_attribute=()","define_method_attribute=()","define_model_callbacks()","define_module_function()","define_singleton_method()","define_tail()","define_task()","define_task()","defined_class()","defined_in?()","definition()","definition()","definition()","definition()","definition_lists()","deflate()","deflate()","deflate()","deflate()","degree()","delch()","delch()","delegate()","delegate()","delegate()","delegate_to()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete!()","delete!()","delete?()","delete?()","delete_all()","delete_all()","delete_all()","delete_all()","delete_all()","delete_at()","delete_at()","delete_attribute()","delete_cookie()","delete_element()","delete_entry()","delete_entry()","delete_field()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_key()","delete_legacy_args()","delete_legacy_args()","delete_matched()","delete_matched()","delete_matched()","delete_matched()","delete_namespace()","delete_observer()","delete_observers()","delete_passwd()","delete_passwd()","delete_sql()","delete_unless_alive()","delete_value()","deleted?()","deleteln()","deleteln()","deliver()","demodulize()","demodulize()","denominator()","denominator()","denominator()","denominator()","denominator()","denominator()","depend_rules()","dependencies()","dependencies()","dependencies()","dependencies()","dependencies_ok?()","dependency()","dependency_order()","dependent_gems()","dependent_specs()","deprecate()","deprecate()","deprecate()","deprecate()","deprecate()","deprecate_methods()","deprecation_warning()","deq()","deq()","deq()","dequote()","desc()","desc()","descend()","descendants()","descendants()","descends_from_active_record?()","description()","description()","description()","description=()","destination_encoding()","destination_encoding()","destination_encoding()","destination_encoding_name()","destination_encoding_name()","destroy()","destroy()","destroy()","destroy()","destroy!()","destroy_all()","destroy_all()","destroy_session()","destroy_session()","destroyed?()","destroyed_by_association()","destroyed_by_association=()","det()","det()","det_e()","detach()","detached()","detached=()","detached?()","detail_args_for()","details_for_lookup()","detect()","detect()","detect_gemdeps()","detect_implicit()","determinant()","determinant()","determinant_e()","dev()","dev_major()","dev_minor()","development_dependencies()","dfdxi()","dh_compute_key()","diagonal()","diagonal?()","diff()","difference()","digest()","digest()","digest()","digest()","digest()","digest()","digest()","digest()","digest!()","digest_length()","digest_length()","digest_length()","dir()","dir()","dir()","dir()","dir_config()","direct_ancestors()","direct_ancestors()","direct_descendants()","direct_descendants()","directories()","directory?()","directory?()","directory?()","directory?()","directory?()","directory?()","dirname()","dirname()","dirname()","dirs()","dirs=()","dirties_query_cache()","disable()","disable()","disable()","disable_cache()","disable_close()","disable_close()","disable_ddl_transaction!()","disable_extension()","disable_extension()","disable_query_cache!()","disable_referential_integrity()","disable_ssl()","disable_ssl()","disable_ssl()","disable_starttls()","disable_tls()","disasm()","disasm()","disassemble()","disassemble()","discard()","disconnect()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnected?()","disconnecting()","dispatch()","dispid()","display()","display()","display()","display()","display()","display?()","display?()","display_attributes()","display_class()","display_error_message()","display_error_message()","display_errors()","display_method()","display_name()","display_names()","display_page()","display_page_list()","display_prerequisites()","display_prerequisites()","display_tasks_and_comments()","display_tasks_and_comments()","distance_of_time_in_words()","distance_of_time_in_words_to_now()","distinct()","distinct()","distinct()","div()","div()","div()","div()","div_for()","divide()","divmod()","divmod()","divmod()","divmod()","divmod()","dlload()","dlload()","dlopen()","dlopen()","dlunwrap()","dlunwrap()","dlwrap()","dlwrap()","dn()","dn=()","do_get()","do_get()","do_get()","do_head()","do_options()","do_options()","do_post()","do_aliases()","do_attrs()","do_boot_defclass()","do_classes()","do_constants()","do_define_class()","do_define_class_under()","do_define_module()","do_define_module_under()","do_includes()","do_methods()","do_missing()","do_modules()","do_not_reverse_lookup()","do_not_reverse_lookup()","do_not_reverse_lookup=()","do_not_reverse_lookup=()","do_nothing()","do_parse()","do_reply()","do_singleton_class()","do_struct_define_without_accessor()","do_validate()","do_validate=()","do_write()","doc_dir()","doc_root()","doc_stats()","doctor()","doctor()","doctype()","doctype()","doctype()","doctype()","doctype()","doctype?()","doctype_end()","document()","document()","document()","document()","document()","document()","document()","document_children=()","document_self=()","document_self_or_methods()","document_to_str()","document_to_str()","documentation_page()","documentation_search()","documentation_source()","documented?()","documented?()","documented?()","documented?()","dom_class()","dom_class()","dom_class()","dom_id()","dom_id()","dom_id()","domain()","done()","done()","done()","done()","done()","done?()","done_adding()","done_adding()","done_documenting=()","done_installing()","double()","double_fig()","doupdate()","down()","downcase()","downcase()","downcase()","downcase()","downcase!()","download()","download()","download()","download()","download()","download_reporter()","download_reporter()","download_to_cache()","downto()","downto()","downto()","dowrite()","drop()","drop()","drop()","drop()","drop_all()","drop_current()","drop_database_url()","drop_join_table()","drop_schema()","drop_table()","drop_table()","drop_while()","drop_while()","drop_while()","dsa_sign_asn1()","dsa_verify_asn1()","dst?()","dst?()","dummy?()","dummy_makefile()","dump()","dump()","dump()","dump()","dump()","dump()","dump_call()","dump_response()","dump_stream()","dup()","dup()","dup()","dup()","dup()","dup()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duration()","dynamic_width()","dynamic_width()","dynamic_width_stty()","dynamic_width_stty()","dynamic_width_tput()","dynamic_width_tput()","e2mm_message()","e2mm_message()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each2()","each_active_object()","each_address()","each_address()","each_address()","each_address()","each_ancestor()","each_attribute()","each_byte()","each_byte()","each_byte()","each_byte()","each_byte()","each_byte()","each_capitalized()","each_capitalized_name()","each_certificate()","each_char()","each_char()","each_char()","each_char()","each_char()","each_child()","each_child()","each_classmodule()","each_codepoint()","each_codepoint()","each_codepoint()","each_codepoint()","each_cons()","each_const()","each_constant()","each_data()","each_element()","each_element_with_attribute()","each_element_with_text()","each_entry()","each_entry()","each_entry()","each_extend()","each_filename()","each_header()","each_include()","each_index()","each_index()","each_installed_parser()","each_installed_writer()","each_key()","each_key()","each_key()","each_key()","each_key()","each_key()","each_key()","each_line()","each_line()","each_line()","each_line()","each_line()","each_line()","each_line()","each_mail()","each_method()","each_name()","each_name()","each_name()","each_name()","each_name()","each_name_of()","each_object()","each_option()","each_option()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_parent()","each_prime()","each_prime()","each_recursive()","each_resource()","each_section()","each_slice()","each_source()","each_strongly_connected_component()","each_strongly_connected_component_from()","each_value()","each_value()","each_value()","each_value()","each_value()","each_value()","each_value()","each_value()","each_with_index()","each_with_index()","each_with_index()","each_with_object()","each_with_object()","eager_autoload()","eager_load()","eager_load()","eager_load!()","eager_load!()","eager_load!()","eager_load!()","eager_load!()","eager_load!()","eager_load_namespaces()","eager_load_paths()","eager_loading?()","echo()","echo()","echo=()","echo?()","egid()","egid=()","ehlo()","eid()","eid()","eigen()","eigensystem()","eigenvalue_matrix()","eigenvalues()","eigenvector_matrix()","eigenvector_matrix_inv()","eigenvectors()","ele()","element()","element()","element()","element()","element=()","element_initialize_arguments?()","elementdecl()","elementdecl()","elementdecl?()","elements()","elements_to_f()","elements_to_f()","elements_to_i()","elements_to_i()","elements_to_r()","elements_to_r()","emacs_editing_mode()","emacs_editing_mode?()","email_field()","email_field_tag()","email_to_name()","emitted_hidden_id?()","emphasis()","empty()","empty()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty_insert_statement_value()","empty_insert_statement_value()","emulate_booleans()","enable()","enable()","enable()","enable_close()","enable_close()","enable_config()","enable_extension()","enable_extension()","enable_query_cache!()","enable_ssl()","enable_ssl()","enable_ssl()","enable_starttls()","enable_starttls_auto()","enable_tls()","enable_warnings()","enabled?()","enabled?()","enc_key()","enclose()","enclosed?()","encode()","encode()","encode()","encode()","encode()","encode()","encode!()","encode!()","encode64()","encode_credentials()","encode_credentials()","encode_credentials()","encode_fallback()","encode_json()","encode_utf7()","encode_with()","encode_with()","encode_with()","encode_with()","encode_with()","encode_with()","encode_with()","encode_with()","encode_www_form()","encode_www_form_component()","encoded()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding=()","encoding=()","encoding=()","encoding=()","encoding_aware?()","encrypt()","encrypt()","encrypt_and_sign()","encrypted()","end()","end()","end()","endelement()","endelement()","end_accepting()","end_accepting()","end_accepting()","end_accepting()","end_document()","end_document()","end_document()","end_document()","end_element()","end_element()","end_element?()","end_mapping()","end_of_day()","end_of_day()","end_of_day()","end_of_hour()","end_of_hour()","end_of_minute()","end_of_minute()","end_of_month()","end_of_quarter()","end_of_week()","end_of_year()","end_prefix_mapping()","end_sequence()","end_stream()","end_stream()","end_with?()","ended?()","endgrent()","endpoint()","endpoint()","endpwent()","engine()","engine=()","engine?()","engines()","engines()","england()","enhance()","enhance_with_matching_rule()","enlist_fixture_connections()","enq()","enq()","enq()","ensure_dependencies_met()","ensure_dependency()","ensure_gem_subdirectories()","ensure_loadable_spec()","ensure_required_ruby_version_met()","ensure_required_rubygems_version_met()","ensure_xml_content()","entity()","entity()","entity()","entity()","entity?()","entity_class()","entity_class()","entity_class()","entity_class()","entity_expansion_limit()","entity_expansion_limit=()","entity_expansion_text_limit()","entity_expansion_text_limit()","entity_expansion_text_limit=()","entity_expansion_text_limit=()","entitydecl()","entitydecl()","entitydecl?()","entries()","entries()","entries()","enum_for()","enum_for()","enumerate()","env()","env()","env=()","env_config()","env_config()","env_filter()","environment()","environment()","environment()","environment()","environment?()","eof()","eof()","eof()","eof()","eof()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eos?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql_with_coercion()","eql_without_coercion()","equal?()","erf()","erfc()","errno()","error()","error()","error()","error()","error()","error()","error()","error()","error()","error?()","error?()","error?()","error?()","error_bytes()","error_char()","error_message()","error_message()","error_number()","error_wrapping()","errors()","errors()","errors()","escape()","escape()","escape()","escape()","escape()","escape()","escape()","escape()","escape()","escape()","escape8bit()","escapeelement()","escapehtml()","escape_auth_info()","escape_bytea()","escape_element()","escape_form()","escape_glob_chars()","escape_html()","escape_javascript()","escape_once()","escape_path()","establish_connection()","establish_connection()","etag()","etag=()","etag_matches?()","euid()","euid=()","eval()","eval()","eval()","eval_history=()","eval_input()","evaluate()","even?()","even?()","even?()","even?()","event()","event?()","event_interface()","event_type()","exabyte()","exabytes()","examine()","except()","except()","except!()","exception()","exception()","exception()","exception_class()","exceptions","excerpt()","exclude()","exclude?()","exclude?()","exclude_end?()","exclusive()","exec()","exec()","exec_app_rails()","exec_delete()","exec_delete()","exec_delete()","exec_delete()","exec_delete()","exec_format()","exec_if()","exec_insert()","exec_insert()","exec_insert()","exec_migration()","exec_query()","exec_query()","exec_query()","exec_query()","exec_query()","exec_update()","exec_update()","exec_update()","exec_update()","exec_update()","exec_without_stmt()","executable()","executable=()","executable?()","executable?()","executable?()","executable?()","executable_real?()","executable_real?()","executable_real?()","executable_real?()","executables()","executables=()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute_and_free()","execute_hook()","execute_if_updated()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","existent()","existent_directories()","exists?()","exists?()","exists?()","exists?()","exists?()","exit()","exit()","exit()","exit()","exit()","exit!()","exit!()","exit_value()","exited?()","exited?()","exitstatus()","exp()","exp()","exp()","exp!()","expand()","expand()","expand_cache_key()","expand_class()","expand_environ()","expand_hash_conditions_for_aggregates()","expand_hexstring()","expand_name()","expand_pair()","expand_path()","expand_path()","expand_path()","expand_path()","expand_ref_in()","expand_tabs()","expand_value()","expanded()","expanded_name()","expect()","expected()","expected()","expected()","expected()","expected()","expected()","expected_response()","expire()","expire_fragment()","expired?()","expires()","expires=()","expires_in()","expires_now()","explain()","explain()","explain()","explain()","exponent()","export()","export()","export()","export()","export()","expunge()","ext()","ext()","extend()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extend_object()","extending()","extension()","extension()","extension?()","extension_build_error()","extension_enabled?()","extensions()","extensions()","extensions()","extensions()","extensions()","extensions()","extensions()","extensions=()","extensions=()","extensions=()","extensions=()","extensions=()","extern()","extern()","external_encoding()","external_encoding()","external_encoding()","extify()","extname()","extname()","extra_args()","extra_args=()","extra_rdoc_files()","extra_rdoc_files=()","extract()","extract()","extract!()","extract_annotations_from()","extract_bounds()","extract_call_seq()","extract_comment()","extract_domain()","extract_files()","extract_files()","extract_files()","extract_options!()","extract_schema_and_table()","extract_session_id()","extract_subdomain()","extract_subdomains()","extract_value_from_default()","extractable_options?()","extractable_options?()","extractable_options?()","extractable_options?()","facility()","fail()","fail()","fail()","fallbacks()","false()","family()","family()","family_addrinfo()","fast_generate()","fastmode=()","fatal","fatal()","fatal()","fatal()","fatal?()","fatal?()","fault()","favicon_link_tag()","fcntl()","fcntl()","fdatasync()","fdiv()","fdiv()","fdiv()","fdiv()","fdiv()","fdiv()","feed()","feed_info()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch_file()","fetch_http()","fetch_https()","fetch_path()","fetch_server()","fetch_size()","fetch_spec()","fetch_spec()","fetch_spec()","fetcher()","fetcher()","fiddle?()","field()","field?()","field_row?()","field_set_tag()","fields()","fields_for()","fields_for()","fifth()","file()","file()","file()","file=()","file?()","file?()","file?()","file?()","file?()","file_dir()","file_dir()","file_field()","file_field()","file_field()","file_field_tag()","file_input?()","file_name()","file_name()","file_path()","filename()","filename()","filename()","filename_quote_characters()","filename_quote_characters=()","fileno()","fileno()","fileno()","files()","files=()","files_hash()","fill()","fill_breakable()","filter()","filter()","filter()","filter()","filter()","filter=()","filter_backtrace()","filter_backtrace()","filter_by()","filter_methods()","filter_proxies()","filtered_env()","filtered_location()","filtered_parameters()","filtered_path()","filtered_query_string()","final()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find_alias_comment()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all_by_name()","find_all_template()","find_ancestor_local_symbol()","find_attr_comment()","find_attribute()","find_attribute_named()","find_beginning_of_week!()","find_body()","find_by()","find_by!()","find_by_name()","find_by_path()","find_by_sql()","find_c_enclosure()","find_class()","find_class_comment()","find_class_method_named()","find_class_named()","find_class_named()","find_class_named_from()","find_class_or_module()","find_class_or_module()","find_cmd_and_exec()","find_command()","find_command_possibilities()","find_const_comment()","find_constant_named()","find_dependencies()","find_each()","find_enclosing_module_named()","find_executable()","find_executable()","find_external_alias()","find_external_alias_named()","find_file_named()","find_file_named()","find_files()","find_first()","find_first_recursive()","find_gem()","find_gems_with_sources()","find_header()","find_in()","find_in_batches()","find_in_cache()","find_in_unresolved()","find_in_unresolved_tree()","find_inactive_by_path()","find_include_file()","find_index()","find_index()","find_index()","find_instance_method_named()","find_last()","find_library()","find_local_symbol()","find_local_symbol()","find_method()","find_method_named()","find_methods()","find_modifiers()","find_module_named()","find_module_named()","find_module_named()","find_name()","find_one()","find_or_create_by()","find_or_create_by!()","find_or_initialize_by()","find_override_comment()","find_pager_jruby()","find_paths()","find_proxy()","find_rakefile_location()","find_rakefile_location()","find_reverse_dependencies()","find_runnable()","find_some()","find_spec_by_name_and_version()","find_store()","find_symbol()","find_symbol_module()","find_system_command()","find_take()","find_template()","find_text_page()","find_type()","find_type()","find_tzinfo()","find_unique()","find_unresolved_default_spec()","find_with_associations()","find_with_ids()","find_zone()","find_zone!()","finder()","finder()","finder()","finger()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish_page_dir()","finish_resolve()","finished?()","finished?()","finished?()","finite?()","finite?()","fips_mode=()","first()","first()","first()","first()","first()","first()","first()","first()","first()","first()","first()","first!()","first?()","first?()","first?()","first_lineno()","fix()","fix_basic_object_inheritance()","fixed_encoding?()","fixture_is_cached?()","fixtures()","flags=()","flash()","flash()","flat_map()","flat_map()","flatten()","flatten()","flatten()","flatten!()","flatten!()","flock()","floor()","floor()","floor()","floor()","floor()","floor()","floor()","flow()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush_all!()","flush_left()","flush_newline_if_pending()","flush_next_in()","flush_next_out()","flush_sessions()","fnmatch()","fnmatch()","fnmatch?()","fnmatch?()","font_path()","font_url()","for()","for_cache()","for_class()","for_current_gems()","for_fd()","for_fd()","for_files()","for_id()","for_spec?()","force_documentation=()","force_encoding()","force_encoding()","force_quotes?()","force_ssl()","force_ssl_redirect()","foreach()","foreach()","foreach()","foreach()","foreach()","foreach()","foreign_key()","foreign_key()","fork()","fork()","fork()","form()","form_authenticity_param()","form_authenticity_token()","form_data=()","form_data?()","form_for()","form_tag()","format()","format()","format()","format()","format()","format()","format=()","format=()","format_date()","format_datetime()","format_paragraph()","format_text()","formats()","formats=()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_program_filename()","formatted_program_filename()","formatter()","formatter()","fortnight()","fortnights()","forty_two()","fourth()","frac()","fragment=()","fragment_cache_key()","fragment_exist?()","framework_trace()","framework_version()","frameworks()","free()","free()","free()","free()","free=()","free=()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze()","fresh?()","fresh_when()","frexp()","friday?()","friday?()","friendly_path()","from()","from()","from()","from()","from()","from_hash()","from_json()","from_list()","from_module()","from_name()","from_name()","from_now()","from_now()","from_prime_division()","from_prime_division()","from_rails_root()","from_session_value()","from_specs()","from_trusted_xml()","from_xml()","from_xml()","from_yaml()","front()","front()","frozen?()","frozen?()","frozen?()","fsync()","fsync()","ftype()","ftype()","ftype()","full_gem_path()","full_message()","full_messages()","full_messages_for()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name=()","full_old_name()","full_spec()","full_trace()","fullpath()","fully_documented?()","fully_documented?()","fully_expanded_name()","function()","future?()","future?()","future?()","gamma()","garbage_collect()","garbage_collect()","gather_dependencies()","gather_files()","gcd()","gcd()","gcdlcm()","gcdlcm()","gem()","gem()","gem()","gem()","gem()","gem_dir()","gem_dir()","gem_dir()","gem_file_list()","gem_group()","gem_original_require()","gem_paths()","gem_repository?()","gemdirs()","gemfile()","gemfile()","gemfile_entry()","gems_dir()","gemspec()","gen_relative_url()","gen_sub_directories()","gen_url()","gen_url()","gen_url()","gen_url()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate_bin()","generate_bin_script()","generate_bin_symlink()","generate_class()","generate_class_files()","generate_default_dirs()","generate_event()","generate_file_files()","generate_index()","generate_index()","generate_key()","generate_key()","generate_key()","generate_key!()","generate_line()","generate_message()","generate_method_for_mime()","generate_page()","generate_prime()","generate_railtie_name()","generate_servlet_not_found()","generate_servlet_root()","generate_sid()","generate_table_of_contents()","generate_test_dummy()","generate_windows_script()","generated_feature_methods()","generation_hook()","generation_hook()","generator()","generator_descriptions()","generator_for()","generator_name()","generators()","get()","get()","get()","get()","get()","get()","get()","get()","get2()","get?()","get_all_gem_names()","get_all_gem_names_and_versions()","get_attributes()","get_bool()","get_byte()","get_candidate_gems()","get_class_or_module()","get_class_specification()","get_constant()","get_constant_with_optional_parens()","get_default_handler()","get_elements()","get_fields()","get_file_and_line_from_caller()","get_first()","get_gems_to_cleanup()","get_hosts_path()","get_initial_token()","get_instance()","get_instance()","get_metadata()","get_methods()","get_methods()","get_namespace()","get_no_proxy_from_env()","get_one_gem_name()","get_one_optional_argument()","get_option()","get_passwd()","get_passwd()","get_passwd()","get_path()","get_primary_gems()","get_print()","get_proxy_from_env()","get_resolv_info()","get_response()","get_screen_size()","get_service_hook()","get_session()","get_sorted_module_list()","get_svninfo()","get_symbol_or_name()","get_text()","get_thread()","get_tk()","get_tk_until()","get_tkread()","get_valid_ip()","get_value()","getacl()","getaddress()","getaddress()","getaddress()","getaddress()","getaddress()","getaddress()","getaddresses()","getaddresses()","getaddresses()","getaddresses()","getaddrinfo()","getaddrinfo()","getbinaryfile()","getbkgd()","getbyte()","getbyte()","getbyte()","getbyte()","getbyte()","getbyte()","getc()","getc()","getc()","getc()","getc()","getc()","getch()","getch()","getch()","getch()","getch()","getdir()","getegid()","geteuid()","getgid()","getgm()","getgm()","getgrent()","getgrgid()","getgrnam()","gethostbyaddr()","gethostbyname()","gethostbyname()","gethostname()","getlocal()","getlocal()","getlogin()","getmouse()","getname()","getname()","getname()","getname()","getnameinfo()","getnameinfo()","getnames()","getnames()","getnames()","getnames()","getopts()","getopts()","getopts()","getpeereid()","getpeername()","getpgid()","getpgrp()","getpriority()","getpty()","getpwent()","getpwnam()","getpwuid()","getquota()","getquotaroot()","getresource()","getresources()","getrlimit()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","getservbyname()","getservbyport()","getservername()","getsid()","getsockname()","getsockopt()","getstr()","getstr()","getter()","gettextfile()","getuid()","getutc()","getutc()","getutc()","getwd()","getwd()","getwd()","gid()","gid()","gid=()","gigabyte()","gigabytes()","git()","github()","gitignore","gitignore","gitignore()","gitignore()","glob()","glob()","glob()","global_variables()","globals","gm()","gmt?()","gmt?()","gmt_offset()","gmt_offset()","gmtime()","gmtime()","gmtoff()","gmtoff()","grammar.en","grant_privilege()","grant_privilege()","grapheme_length()","great_job()","gregorian()","gregorian?()","gregorian_leap?()","grep()","grep()","group()","group()","group()","group()","group()","group()","group()","group=()","group_by()","group_entries()","group_sub()","grouped_collection_select()","grouped_collection_select()","grouped_options_for_select()","groups()","groups()","groups=()","grpowned?()","grpowned?()","grpowned?()","grpowned?()","gsub()","gsub()","gsub!()","guard_inspect_key()","guess()","guess()","guess()","guid()","guid()","gunzip()","gzip()","gzip()","gzip_to()","h()","h()","h()","ha1()","halted_callback()","handle()","handle_arguments()","handle_attr()","handle_class_module()","handle_constants()","handle_directive()","handle_ifdefs_in()","handle_interrupt()","handle_method()","handle_options()","handle_options()","handle_options()","handle_pipe()","handle_rdoc_link()","handle_singleton()","handle_special_crossref()","handle_special_crossref()","handle_special_crossref()","handle_special_hard_break()","handle_special_hard_break()","handle_special_hard_break()","handle_special_hard_break()","handle_special_hyperlink()","handle_special_hyperlink()","handle_special_rdoclink()","handle_special_rdoclink()","handle_special_rdoclink()","handle_special_suppressed_crossref()","handle_special_tidylink()","handle_special_tidylink()","handle_special_tidylink()","handle_tab_width()","handle_unverified_request()","handle_unverified_request()","handle_unverified_request()","handle_unverified_request()","handler()","handler()","handler()","handler=()","handler_for_rescue()","handlers()","handlers()","handles?()","handles_encoding?()","haschildnodes()","has_and_belongs_to_many()","has_attribute?()","has_attributes?()","has_colors?()","has_elements?()","has_errors?()","has_expires?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_many()","has_name?()","has_name?()","has_named_route?()","has_next?()","has_one()","has_secure_password()","has_text?()","has_unit_tests?()","has_value?()","has_value?()","has_value?()","has_value?()","has_value?()","has_value?()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash_old()","have_author?()","have_author?()","have_author?()","have_author?()","have_children_elements()","have_const()","have_content?()","have_framework()","have_func()","have_header()","have_library()","have_macro()","have_rakefile()","have_rakefile()","have_rdoc_4_plus?()","have_required_elements?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_required_values?()","have_struct_member()","have_type()","have_var()","have_xml_content?()","have_xml_content?()","have_xml_content?()","having()","head()","head()","head2()","head?()","header()","header()","header()","header()","header?()","header_convert()","header_converters()","header_row?()","header_row?()","headers()","headers()","headers()","headers()","headers()","headers=()","heading()","helo()","help()","help()","help()","help()","helpcontext()","helpcontext()","helper()","helper()","helper_attr()","helper_method()","helpers()","helpers()","helpers_paths()","helpfile()","helpfile()","helpstring()","helpstring()","here?()","here?()","hermitian?()","hex()","hex()","hexdigest()","hexdigest()","hexdigest()","hexdigest()","hexdigest!()","hexencode()","hidden()","hidden_actions()","hidden_field()","hidden_field()","hidden_field_tag()","hidden_namespaces()","hide!()","hide_action()","hide_namespace()","hide_namespaces()","hierarchical?()","hierarchical?()","highlight()","history_file()","history_file=()","home()","home_dir()","home_workspace()","hook_for()","host()","host()","host()","host()","host=()","host=()","host_with_port()","hostname()","hostname=()","hour()","hour()","hour=()","hour=()","hour=()","hours()","href=()","hstore()","hstore_to_string()","html()","html()","html?()","html_escape()","html_escape()","html_escape()","html_escape_once()","html_list_name()","html_list_name()","html_name()","html_name()","html_safe()","html_safe?()","html_safe?()","html_safe?()","hton()","http_basic_authenticate_with()","http_date()","http_default_port()","http_header()","http_header()","http_resp()","http_url()","http_url()","httpd()","httpdate()","httpdate()","httpdate()","httpdate()","httpdate()","https?()","https_default_port()","human()","human()","human_attribute_name()","human_name()","humanize()","humanize()","hypot()","i()","i18n_scope()","i18n_scope()","icon()","icon=()","iconv()","id()","id()","id()","id()","id2name()","id=()","id?()","id_before_type_cast()","ident()","identical?()","identical?()","identical?()","identify()","identity()","identity()","idle()","idle_done()","idlok()","ids()","if_modified_since()","if_modified_since()","if_none_match()","if_none_match_etags()","iflush()","ignore()","ignore()","ignore_unknown_element()","ignore_unknown_element=()","ignore_whitespace_nodes()","ignored?()","imag()","imag()","imag()","image()","image_alt()","image_button()","image_path()","image_size=()","image_submit_tag()","image_tag()","image_url()","imaginary()","imaginary()","imaginary()","img()","implemented_ole_types()","import()","import_function()","import_function()","import_symbol()","import_symbol()","import_value()","import_value()","in()","in()","in()","in?()","in_background()","in_char_class?()","in_clause_length()","in_files()","in_groups()","in_groups_of()","in_namespace()","in_path?()","in_service?()","in_time_zone()","in_time_zone()","in_time_zone()","in_time_zone()","in_time_zone()","in_tt?()","inactivate()","inc()","inc()","inch()","inch()","include()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include_fallbacks_module()","include_file()","include_with_range?()","included()","included()","included()","included()","included_modules()","includes()","incompatible_argument_styles()","incompatible_argument_styles()","incomplete_input?()","increment()","increment()","increment()","increment()","increment()","increment!()","increment_counter()","increment_open_transactions()","indent()","indent()","indent()","indent!()","indent_text()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index_algorithms()","index_algorithms()","index_algorithms()","index_by()","index_classes()","index_exists?()","index_exists?()","index_helper()","index_in_parent()","index_methods()","index_name()","index_name_exists?()","index_name_for_remove()","index_name_length()","index_name_length()","index_pages()","indexes()","indexes_per_table()","indir()","inet()","infinite?()","infinite?()","infinity()","infinity?()","infinity?()","inflate()","inflate()","inflate()","inflate()","inflections()","info()","info()","info()","info()","info?()","info?()","info?()","inheritable_copy()","inheritance_column()","inheritance_column=()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited_array_reader()","inherited_base()","inherited_base()","inherited_hash_reader()","inherited_reader()","init()","init()","init()","init()","init()","init_color()","init_fallbacks()","init_pair()","init_screen()","init_tags()","init_tags()","init_tags()","init_tags()","init_tags()","init_with()","initgroups()","initialize()","initialize()","initialize()","initialize()","initialize()","initialize!()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_generated_modules()","initialize_http_header()","initialize_i18n()","initialize_methods_etc()","initialize_schema_migrations_table()","initialize_schema_migrations_table()","initialize_sid()","initialize_tracer()","initialized?()","initialized?()","initializer()","initializer()","initializers()","initializers()","initializers_chain()","initializers_for()","inject()","inject_into_list()","inline()","inline_html?()","inline_html?()","inline_other?()","inline_other?()","inline_other_base64?()","inline_other_base64?()","inline_other_text?()","inline_other_text?()","inline_other_xml?()","inline_other_xml?()","inline_text?()","inline_text?()","inline_xhtml?()","inline_xhtml?()","inner_product()","ino()","inplace_mode()","inplace_mode=()","input()","input=()","input=()","input=()","input=()","input=()","input?()","inquiry()","insch()","insch()","insert()","insert()","insert()","insert()","insert()","insert()","insert()","insert_after()","insert_after()","insert_after()","insert_before()","insert_before()","insert_before()","insert_fixture()","insert_output()","insert_sql()","insert_sql()","insert_sql()","insert_text()","insertln()","insertln()","inside_template()","inside_template?()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect?()","inspect_mode=()","inspect_sockaddr()","inspect_value()","install()","install()","install()","install()","install()","install()","install()","install_acl()","install_alias_method()","install_class_name()","install_date_element()","install_dublin_core()","install_executables()","install_extend_commands()","install_extend_commands()","install_file()","install_from_gemdeps()","install_get_attribute()","install_get_text_element()","install_have_attribute_element()","install_have_child_element()","install_have_children_element()","install_id_conv()","install_image_favicon()","install_image_item()","install_indicies()","install_into()","install_lib()","install_list()","install_model()","install_must_call_validator()","install_ns()","install_rdoc()","install_siginfo_handler()","install_system_commands()","install_taxo_topic()","install_taxo_topics()","install_text_element()","install_update_defaults_str()","installation_satisfies_dependency?()","installed?()","installed_docs()","installed_specs()","instance()","instance()","instance()","instance()","instance()","instance()","instance()","instance_attributes()","instance_delegate()","instance_eval()","instance_exec()","instance_method()","instance_method_already_implemented?()","instance_method_list()","instance_methods()","instance_methods()","instance_of?()","instance_values()","instance_variable_defined?()","instance_variable_get()","instance_variable_names()","instance_variable_set()","instance_variables()","instantiate()","instantiate_all_loaded_fixtures()","instantiate_fixtures()","instruction()","instruction()","instruction?()","instructions()","instrument()","instrument()","instrument()","instrument=()","instrumenter()","int()","int()","int()","int()","int()","int4range()","int8range()","int_from_prime_division()","integer?()","integer?()","integer?()","interactive()","intern()","intern()","intern()","internal?()","internal_encoding()","internal_encoding()","internal_encoding()","internal_methods()","interrupt()","interrupt()","intersection()","inv()","invalid?()","inverse()","inverse_of()","invert()","invert()","invert()","invert()","invert()","invert()","invert!()","investigation()","invkind()","invoke()","invoke()","invoke()","invoke()","invoke_kind()","invoke_task()","invoke_task()","invoke_with_build_args()","ioctl()","ioflush()","ip()","ip()","ip6_arpa()","ip6_int()","ip?()","ip_address()","ip_address_list()","ip_pktinfo()","ip_pktinfo()","ip_port()","ip_unpack()","ips_from()","ipv4?()","ipv4?()","ipv4_compat()","ipv4_compat?()","ipv4_loopback?()","ipv4_mapped()","ipv4_mapped?()","ipv4_multicast?()","ipv4_private?()","ipv6?()","ipv6?()","ipv6_linklocal?()","ipv6_loopback?()","ipv6_mc_global?()","ipv6_mc_linklocal?()","ipv6_mc_nodelocal?()","ipv6_mc_orglocal?()","ipv6_mc_sitelocal?()","ipv6_multicast?()","ipv6_pktinfo()","ipv6_pktinfo()","ipv6_pktinfo_addr()","ipv6_pktinfo_ifindex()","ipv6_sitelocal?()","ipv6_to_ipv4()","ipv6_unique_local?()","ipv6_unspecified?()","ipv6_v4compat?()","ipv6_v4mapped?()","irb()","irb()","irb_abort()","irb_at_exit()","irb_context()","irb_exit()","irb_exit()","irb_level()","irb_load()","irb_load()","irb_require()","irregular()","isequal()","is_a?()","is_a?()","is_a?()","is_alias_for()","is_missing?()","is_missing?()","is_utf8?()","is_version_1_2?()","isatty()","isatty()","isdst()","isdst()","iseuc()","iseuc()","isjis()","isjis()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","isolate_namespace()","isolated?()","issetugid()","issjis()","issjis()","issuer()","issuer()","issuer()","issuer()","issuer=()","issuer=()","issuer_certificate=()","issuer_of()","isutf8()","isutf8()","italy()","items()","items()","iterator?()","iv=()","j()","jacobian()","javascript_include_tag()","javascript_path()","javascript_tag()","javascript_url()","javascripts()","jd()","jd()","jd()","jisx0301()","jisx0301()","jisx0301()","jisx0301()","jobs()","jobs()","jobs_exist?()","join()","join()","join()","join()","join()","join()","join()","join()","join()","join()","join_nowait()","join_nowait()","joined_includes_values()","joins()","joins_per_query()","json()","json_creatable?()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_escape()","json_regexp()","json_resource_errors()","json_to_string()","julian()","julian?()","julian_leap?()","kconv()","kconv()","keep()","keep_alive?()","keep_alive?()","keep_if()","keep_if()","keep_if()","keep_if()","key()","key()","key()","key()","key()","key()","key()","key=()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key_generator()","key_len=()","key_matcher()","keyname()","keypad()","keypad=()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys_with_inspector()","kill()","kill()","kill()","kill()","kill()","kill()","kill_job()","kilobyte()","kilobytes()","kind()","kind()","kind_of?()","kind_of?()","kind_of?()","klass()","klass()","l()","l()","l()","label()","label()","label()","label()","label_tag()","lambda()","lambda?()","lang()","last()","last()","last()","last()","last()","last()","last()","last()","last()","last()","last!()","lastbuilddate=()","last_error()","last_error()","last_error()","last_error=()","last_inserted_id()","last_inserted_id()","last_inserted_id()","last_inserted_id()","last_match()","last_modified()","last_modified()","last_modified()","last_modified=()","last_modified?()","last_month()","last_quarter()","last_update()","last_update=()","last_week()","last_year()","latest_rubygems_version()","latest_spec_for()","latest_specs()","latest_specs()","latest_version?()","latest_version_for()","launch()","layout()","lazy()","lazy()","lchmod()","lchmod()","lchown()","lchown()","lcm()","lcm()","ld()","ldexp()","leap?()","leap?()","lease()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","level()","level()","level()","level=()","level=()","level_notifier=()","levenshtein_distance()","lex()","lgamma()","lib()","lib()","lib()","lib_dirs_glob()","lib_files()","library_name()","libyaml_version()","license()","license()","license=()","licenses()","licenses=()","limit()","limit()","limit()","limited_update_conditions()","limited_update_conditions()","line()","line()","line()","line_buffer()","line_index()","line_trace_all()","line_trace_specify()","lineno()","lineno()","lineno()","lineno()","lineno()","lineno()","lineno()","lineno=()","lineno=()","lineno=()","lineno=()","lines()","lines()","lines()","lines()","lines()","lines()","linger()","linger()","link()","link()","link()","link()","link()","link_files()","link_to()","link_to()","link_to_function()","link_to_if()","link_to_unless()","link_to_unless_current()","list()","list()","list()","list()","list()","list()","list()","list_end_for()","list_files_in_directory()","list_item_from()","list_item_start()","list_item_start()","list_known_classes()","list_methods_matching()","listen()","listen()","listen()","listen()","listen()","listen()","listen()","listener()","listener()","listener()","listener=()","listeners_for()","listening?()","literals","ljust()","ln()","ln()","ln()","ln_s()","ln_sf()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load_all()","load_and_configure_sdoc()","load_and_configure_sdoc()","load_api_keys()","load_cache()","load_call()","load_certificate()","load_class()","load_class_data()","load_console()","load_default_cert()","load_default_key()","load_defaults()","load_documents()","load_env_plugins()","load_file()","load_file()","load_file()","load_gemdeps()","load_generators()","load_imports()","load_imports()","load_method()","load_method()","load_methods_matching()","load_mime_types()","load_options()","load_page()","load_path_insert_index()","load_paths()","load_plugin_files()","load_plugins()","load_private_key()","load_public_key()","load_rack_cache()","load_rakefile()","load_rakefile()","load_rakefile()","load_rdoc()","load_rdoc()","load_response()","load_runner()","load_seed()","load_seed()","load_session()","load_session()","load_spec()","load_specs()","load_specs()","load_specs()","load_stream()","load_target()","load_tasks()","load_variable_map()","load_with_autoloading()","load_yaml()","load_yaml()","loaded?()","loaded_from=()","local()","local()","local()","local?()","local?()","local_address()","local_constant_names()","local_name()","local_name()","local_name=()","local_offset()","local_time()","local_to_utc()","local_variables()","locale()","locale=()","locale_charmap()","localize()","localize()","localtime()","localtime()","location()","location()","location=()","location=()","location_of_caller()","lock()","lock()","lock()","lock!()","locked?()","locking_column()","locking_column=()","locking_enabled?()","log()","log()","log()","log()","log()","log()","log()","log()","log()","log()","log()","log()","log()","log!()","log10()","log10()","log10!()","log2()","log2()","log2!()","log=()","log_error()","log_level()","log_path()","log_subscribers()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger=()","logging()","login()","login()","login()","logo()","logo=()","logout()","long_name()","look_for_directives_in()","look_for_directives_in()","lookup()","lookup()","lookup()","lookup_ancestors()","lookup_by_extension()","lookup_context()","lookup_method()","lookup_ring()","lookup_ring_any()","lookup_server()","lookup_store()","loop()","lower()","lower_triangular?()","ls()","lstat()","lstat()","lstat()","lstrip()","lstrip!()","lsub()","ltree()","ludecomp()","lup()","lup_decomposition()","lusolve()","macaddr()","magnitude()","magnitude()","magnitude()","magnitude()","magnitude()","magnitude()","mail()","mail()","mail_to()","mailer()","mailer_name()","mailer_name()","mailfrom()","mails()","main()","main()","main()","main=()","main_irb()","main_thread()","main_type()","major_version()","major_version()","make()","make()","make()","make_affine!()","make_compiler()","make_destination_dirs()","make_expires()","make_link()","make_message()","make_methods()","make_passwd()","make_passwd()","make_passwd()","make_regexp()","make_switch()","make_symlink()","make_temp_directories()","make_thread_list()","make_tuple()","make_variable_map()","makedirs()","makedirs()","makedirs()","maker_target()","maker_target()","maker_target()","maker_target()","maker_target()","makers()","malloc()","malloc()","malloc()","malloc()","malloc()","malloc()","malloc()","malloc()","malloc_allocated_size()","malloc_allocations()","manage_owners()","many?()","many?()","many?()","map()","map()","map()","map()","map()","map()","map!()","map!()","map2()","map=()","map_gems_to_specs()","mark_for_destruction()","mark_version()","marked_for_destruction?()","markup()","markup_code()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_version()","mask()","mask()","mask!()","mask=()","mask_protected_sequences()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match?()","match?()","match?()","match_platform!()","match_platform?()","match_to()","match_to_consume()","matched()","matched?()","matched_size()","matches?()","matches?()","matches?()","matches?()","matches?()","matches?()","matches?()","matches_for_glob()","matches_spec?()","matches_spec?()","matching_specs()","math_mode=()","mattr_accessor()","mattr_reader()","mattr_writer()","max()","max()","max()","max=()","max_by()","max_flag_count()","max_flag_count=()","maxgroups()","maxgroups=()","maximum()","maxx()","maxy()","mb_chars()","mday()","mday()","mdtm()","measure()","media_subtype()","media_subtype()","media_subtype()","media_subtype()","media_type()","megabyte()","megabytes()","member()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","members()","members()","memberwise()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge!()","merge!()","merge!()","merge_options()","merged?()","message()","message()","message()","message()","message()","message()","message()","message()","message_loop()","meta_vars()","method()","method()","methodcall()","methodresponse()","method_added()","method_added()","method_defined?()","method_document()","method_file()","method_for_action()","method_id()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_symbol()","method_type()","methods","methods()","methods()","methods_by_type()","methods_matching()","middleware()","middleware()","middleware()","middleware()","midnight()","midnight()","midnight()","migrate()","migrate()","migration_keys()","migration_keys()","migration_template()","migrations_paths()","mime_split()","mime_type()","mime_type()","min()","min()","min()","min=()","min_by()","minimum()","minmax()","minmax_by()","minor()","minor_version()","minor_version()","minus_with_coercion()","minus_without_coercion()","minus_without_duration()","minute()","minute=()","minute=()","minutes()","miscellaneous","missing_name()","missing_name?()","mjd()","mkcol()","mkdir()","mkdir()","mkdir()","mkdir()","mkdir()","mkdir()","mkdir()","mkdir_p()","mkmf()","mkpath()","mkpath()","mktime()","mktmpdir()","mode()","mode()","mode()","model_name()","model_name_from_record_or_class()","model_name_from_record_or_class()","models()","modifiable()","module()","module()","module?()","module?()","module_eval()","module_exec()","module_names()","module_namespacing()","modules()","modules_and_classes","modules_for_helpers()","modules_for_helpers()","modules_hash()","modules_hash()","modulo()","modulo()","modulo()","modulo()","modulo()","mon()","mon()","mon=()","mon_enter()","mon_exit()","mon_synchronize()","mon_try_enter()","monday()","monday?()","monday?()","month()","month()","month()","month=()","month_field()","month_field_tag()","months()","months_ago()","months_since()","mount()","mount()","mount_proc()","mountpoint?()","mouseinterval()","mousemask()","move()","move()","move()","move()","ms()","mtime()","mtime()","mtime()","mtime()","mtime()","mtime()","mtime()","mtime=()","mu_lock()","mu_locked?()","mu_synchronize()","mu_try_lock()","mu_unlock()","mul()","mult()","multicall()","multicall2()","multicall2_async()","multicall_async()","multipart=()","multipart?()","multipart?()","multipart?()","multipart?()","multipart?()","multipart?()","multipart?()","multipart_form()","multiple_of?()","must_c_version()","must_call_validators()","mute()","mv()","mv()","n_bytes()","n_jobs()","n_mails()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name=()","name=()","name=()","name_for_path()","name_for_path()","name_list()","name_path()","name_prefix()","name_prefix()","name_regexp()","name_tuple()","named_captures()","names()","names()","names()","names()","namespace()","namespace()","namespace()","namespace()","namespace()","namespace()","namespace()","namespace=()","namespace_context()","namespace_context=()","namespace_uri()","namespaced?()","namespaced_class_path()","namespaced_file_path()","namespaced_path()","namespaces()","namespaces=()","namespaces=()","nan?()","nan?()","native()","native_database_types()","native_database_types()","navigation_behavior()","navigation_location()","need_base64_encode?()","need_base64_encode?()","need_initialize_variables()","need_initialize_variables()","need_parent?()","need_parent?()","needed?()","needed?()","needed?()","needs()","negotiate_format()","negotiate_mime()","nest()","nest()","nested()","nested_dependencies()","nested_under_indifferent_access()","nested_under_indifferent_access()","nested_under_indifferent_access()","nested_under_indifferent_access()","nesting()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new2()","new3()","new_alias_name()","new_comment()","new_cond()","new_constants()","new_from_hash_copying_default()","new_from_hash_copying_default()","new_ntoh()","new_ostruct_member()","new_record?()","new_scope()","new_seed()","new_session()","new_start()","new_with()","new_with()","new_with_uri()","new_with_uri()","new_with_value_if_need()","newobj()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next()","next!()","next_current()","next_day()","next_element()","next_element()","next_key()","next_migration_number()","next_month()","next_month()","next_quarter()","next_selector()","next_sibling=()","next_sibling_node()","next_to()","next_token()","next_token()","next_update()","next_update=()","next_values()","next_wait()","next_wait()","next_week()","next_words_on_error()","next_year()","next_year()","nil?()","nil?()","nil?()","nkf()","nl()","nlink()","nlsolve()","nlst()","no_color!()","no_proxy?()","no_routes()","no_routes()","nocbreak()","nocrmode()","nodename()","nodetype()","nodevalue()","node_type()","node_type()","node_type()","node_type()","node_type()","node_type()","node_type()","node_type()","node_type()","node_type()","nodelay=()","nodoc()","noecho()","noecho()","noecho()","non_aliases()","non_nil_attributes()","nonce()","none()","none?()","none?()","none?()","nonl()","nonzero?()","nonzero?()","noop()","noop()","noraw()","norm()","norm()","normal?()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize!()","normalize_comment()","normalize_name()","normalize_path()","normalize_path()","normalize_space()","normalize_uri()","normalize_yaml_input()","normalized()","normalized_file_list()","not()","not()","not_after()","not_after=()","not_before()","not_before=()","not_found()","not_modified?()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","not_set_name()","notation()","notationdecl()","notationdecl()","notationdecl?()","notations()","note()","note_for()","notes()","notice()","notice=()","notify()","notify()","notify()","notify()","notify()","notify()","notify?()","notify?()","notify?()","notify_observers()","notify_observers()","noutrefresh()","noutrefresh()","now()","now()","now()","now()","now_is_loaded?()","nowrite()","nowrite()","npn_protocol()","nread()","nsec()","nsec()","nth_child()","ntop()","null()","null?()","null?()","num_waiting()","num_waiting()","num_waiting()","number()","number_field()","number_field_tag()","number_to_currency()","number_to_currency()","number_to_delimited()","number_to_human()","number_to_human()","number_to_human_size()","number_to_human_size()","number_to_percentage()","number_to_percentage()","number_to_phone()","number_to_phone()","number_to_rounded()","number_with_delimiter()","number_with_precision()","numerator()","numerator()","numerator()","numerator()","numerator()","numerator()","numrange()","object()","object_address_group()","object_class()","object_group()","object_id()","object_maker()","oct()","odd?()","odd?()","odd?()","odd?()","odd?()","of()","off()","off_event()","off_tags()","off_tags()","offset()","offset()","offset_vtbl()","oflush()","oid()","oid()","oid()","oid=()","oid=()","ok?()","ok?()","ok_to_remove?()","old_enc=()","ole_activex_initialize()","ole_classes()","ole_classes()","ole_free()","ole_free()","ole_func_methods()","ole_get_methods()","ole_initialize()","ole_method()","ole_method_help()","ole_methods()","ole_methods()","ole_obj_help()","ole_put_methods()","ole_query_interface()","ole_reference_count()","ole_respond_to?()","ole_show_help()","ole_type()","ole_type()","ole_type()","ole_type()","ole_type_detail()","ole_type_detail()","ole_typelib()","ole_typelib()","ole_types()","ole_uninitialize()","on()","on()","on_attr_charref()","on_attr_charref_hex()","on_attr_entityref()","on_attr_value()","on_attribute()","on_cdata()","on_cdata_block()","on_characters()","on_chardata()","on_charref()","on_charref()","on_charref_hex()","on_charref_hex()","on_curve?()","on_end_document()","on_end_element()","on_entityref()","on_entityref()","on_error()","on_error()","on_error()","on_etag()","on_event()","on_event_with_outargs()","on_head()","on_load()","on_stag()","on_stag_end()","on_stag_end()","on_stag_end_empty()","on_stag_end_empty()","on_start_document()","on_start_element()","on_tags()","on_tags()","on_tail()","on_xmldecl_encoding()","on_xmldecl_end()","on_xmldecl_standalone()","on_xmldecl_version()","one?()","ongoing_visibility=()","only()","only_child()","opaque()","opaque=()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open!()","open?()","open_message_stream()","open_server()","open_server()","open_transactions()","opendir()","opened?()","opt_parser()","optimize_routes_generation?()","option_groups_from_collection_for_select()","option_list()","optional?()","optional_port()","options()","options()","options()","options()","options()","options()","options=()","options_for()","options_for_select()","options_from_collection_for_select()","options_include_default?()","optname()","ord()","ord()","ord()","order()","order()","order()","order!()","order!()","ordering=()","ordinal()","ordinal()","ordinal()","ordinal()","ordinalize()","ordinalize()","orig_initialize()","orig_name()","orig_name=()","original_concat()","original_dir()","original_fullpath()","original_url()","orthogonal?()","os_code()","other_elements()","others_possible?()","out()","out()","out_of_line?()","out_of_line?()","outdated()","output()","output()","output()","output=()","output?()","output_encoding=()","output_flag_file()","output_name()","outside_transaction?()","overlaps?()","owned?()","owned?()","owned?()","owned?()","owned?()","owner()","owner()","p()","p()","pack()","pack()","pack()","pack_graphemes()","pack_sockaddr_in()","pack_sockaddr_un()","package_dir_path()","package_name()","packdw()","packqw()","padding=()","page()","page()","page_cache_extension()","page_cache_extension=()","page_file()","page_name()","paging?()","pair()","pair()","pair_content()","pair_number()","paragraph()","paragraph()","param_key()","param_list()","param_seq()","parameter_filter()","parameter_filter_for()","parameterize()","parameterize()","parameters()","parameters()","parameters()","parameters()","params()","params()","params()","params()","params()","params()","params()","params()","params()","params=()","params=()","params=()","params_array_from()","params_ok?()","paranoid()","parent()","parent()","parent()","parent()","parent()","parent=()","parent=()","parent=()","parent?()","parent?()","parent_file_name()","parent_name()","parent_name()","parent_name()","parent_of?()","parent_prefixes()","parents()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse!()","parse!()","parse!()","parse!()","parsemethodcall()","parsemethodcall()","parsemethodresponse()","parsemethodresponse()","parse_alias()","parse_args()","parse_arguments()","parse_arguments()","parse_attr()","parse_attr_accessor()","parse_call_parameters()","parse_class()","parse_comment()","parse_comment_tomdoc()","parse_config()","parse_constant()","parse_content_type()","parse_ctype()","parse_ctype()","parse_data_with_trailing_star()","parse_dot_doc_file()","parse_entries()","parse_error()","parse_extend()","parse_file()","parse_file()","parse_files()","parse_files_matching()","parse_form_data()","parse_header()","parse_helper()","parse_include()","parse_int()","parse_line()","parse_meta_attr()","parse_meta_method()","parse_method()","parse_method_dummy()","parse_method_or_yield_parameters()","parse_method_parameters()","parse_module()","parse_name()","parse_openssl()","parse_printf_format()","parse_query()","parse_query()","parse_qvalues()","parse_range_header()","parse_require()","parse_rescue()","parse_rfc2253()","parse_set_cookie()","parse_set_cookies()","parse_signature()","parse_signature()","parse_source()","parse_source()","parse_statements()","parse_stream()","parse_stream()","parse_struct_signature()","parse_struct_signature()","parse_symbol_arg()","parse_symbol_in_arg()","parse_task_string()","parse_task_string()","parse_time()","parse_top_level_statements()","parse_trailing_star()","parse_url()","parse_visibility()","parse_yield()","parseable?()","parser()","parser()","parser()","partition()","partition()","pass()","passwd()","password()","password=()","password=()","password=()","password_confirmation=()","password_field()","password_field()","password_field_tag()","past?()","past?()","past?()","patch()","patch()","patch?()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path=()","path_ok?()","path_parameters()","path_separator()","path_to_asset()","path_to_audio()","path_to_font()","path_to_image()","path_to_javascript()","path_to_stylesheet()","path_to_video()","pathmap()","pathmap_explode()","pathmap_partial()","pathmap_replace()","paths()","paths()","paths()","paths=()","pattern()","pattern()","pattern()","pbkdf2_hmac()","pbkdf2_hmac_sha1()","peek()","peek()","peek()","peek()","peek_read()","peek_tk()","peek_token()","peek_values()","peep()","peer_cert()","peer_cert()","peer_cert_chain()","peeraddr()","peeraddr()","peg_parse()","pem_files_in()","pending()","pending_interrupt?()","pending_interrupt?()","percent_doc()","performed?()","period()","period_for_local()","period_for_utc()","permanent()","permanent_link=()","permanent_link?()","permit()","permit!()","permitted?()","permutation()","permutation?()","permute()","permute!()","permute!()","persisted?()","persisted?()","petabyte()","petabytes()","pfamily()","phase()","phase()","phase()","phone_field()","phone_field_tag()","pi()","pi()","pick_best!()","pid()","pid()","pid()","pid()","pipe()","pipe?()","pipe?()","pipe?()","pipe?()","pipeline()","pipeline_r()","pipeline_rw()","pipeline_start()","pipeline_w()","pk_and_sequence_for()","pkcs5_keyivgen()","plain_html()","platform()","platform()","platform=()","platforms()","platforms()","platforms=()","pluck()","plural()","plural()","plural_file_name()","plural_forms()","plural_name()","plural_table_name()","pluralize()","pluralize()","pluralize()","pluralize_table_names?()","point()","point_conversion_form()","point_conversion_form=()","point_to_string()","pointer()","pointer=()","polar()","polar()","polar()","poll()","polymorphic_path()","polymorphic_url()","pop()","pop()","pop()","pop()","pop()","pop_inspect_key()","pop_token()","pop_workspace()","popd()","popdir()","popen()","popen2()","popen2e()","popen3()","populate_with_current_scope_attributes()","popup_menu()","port()","port()","port()","port=()","port_string()","pos()","pos()","pos()","pos()","pos()","pos()","pos()","pos()","pos=()","pos=()","pos=()","pos=()","pos=()","position()","position()","position()","position()","position()","post()","post()","post2()","post?()","post_build()","post_form()","post_install()","post_match()","post_match()","post_process()","post_processors()","post_reset()","post_uninstall()","postgresql_version()","power()","power!()","power!()","power!()","pp()","pp()","pp()","pp()","pp()","pp()","pp_hash()","pp_object()","ppid()","ppx()","ppx()","pre_input_hook()","pre_input_hook=()","pre_install()","pre_install_checks()","pre_match()","pre_match()","pre_reset()","pre_uninstall()","precedence","precs()","pred()","pred()","predicate()","predicate()","predicate()","predicate_to_string()","prefetch()","prefetch()","prefetch()","prefetch_primary_key?()","prefix()","prefix()","prefix()","prefix()","prefix()","prefix()","prefixes()","preload()","prepare!()","prepare!()","prepare_column_options()","prepare_column_options()","prepend()","prepend()","prepend_after_action()","prepend_around_action()","prepend_before_action()","prepend_view_path()","prepend_view_path()","preprocess()","prerelease?()","prerelease?()","prerelease?()","prerelease?()","prerelease?()","prerequisite_tasks()","presence()","present?()","pretty()","pretty_generate()","pretty_inspect()","pretty_name()","pretty_name()","pretty_new_name()","pretty_old_name()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_cycle()","pretty_print_inspect()","pretty_print_instance_variables()","prev_day()","prev_month()","prev_month()","prev_quarter()","prev_week()","prev_words_on_error()","prev_year()","prev_year()","previous=()","previous_changes()","previous_element()","previous_sibling=()","previous_sibling_node()","primary()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key=()","primary_keys()","prime?()","prime?()","prime?()","prime?()","prime_division()","prime_division()","prime_division()","prime_fasttest?()","primes()","primes_so_far()","primitive_convert()","primitive_errinfo()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print_alias()","print_attribute()","print_class()","print_constant()","print_dependencies()","print_file()","print_file()","print_method()","print_module()","print_profile()","print_rakefile_directory()","print_rakefile_directory()","print_usage()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printn()","printn()","priority()","priority=()","private?()","private?()","private?()","private?()","private_class_method()","private_constant()","private_decrypt()","private_decrypt()","private_encrypt()","private_encrypt()","private_instance_methods()","private_key()","private_key=()","private_key?()","private_method_defined?()","private_methods()","proc()","process()","process()","process()","process()","process()","process()","process()","process()","process_action()","process_action()","process_action()","process_action()","process_args()","process_args()","process_attributes_for()","process_directive()","process_node()","process_node()","process_node()","process_node()","process_options()","processinginstruction()","processing_instruction()","processing_instruction()","product()","progid()","progids()","program_name()","progress()","progress_reporter()","progress_reporter()","prompt_mode=()","prompting?()","proper_subset?()","proper_superset?()","property()","propfind()","proppatch()","protect_against_forgery?()","protect_from_forgery()","protected_instance_methods()","protected_method_defined?()","protected_methods()","protected_methods()","protocol()","protocol()","provide()","provide()","proxy()","proxy2()","proxy2_async()","proxy?()","proxy_address()","proxy_association()","proxy_association()","proxy_async()","proxy_auth_get()","proxy_basic_auth()","proxy_basic_auth()","proxy_class()","proxy_class=()","proxy_class?()","proxy_from_env?()","proxy_pass()","proxy_port()","proxy_user()","proxyaddr()","proxyport()","prune()","prune()","pruning?()","psych_to_yaml()","psych_yaml_as()","ptr()","ptr()","ptr()","ptr=()","pubdate()","pubdate()","pubdate=()","pubdate=()","public()","public?()","public?()","public?()","public?()","public_class_method()","public_constant()","public_decrypt()","public_decrypt()","public_directory()","public_encrypt()","public_encrypt()","public_instance_method()","public_instance_methods()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key=()","public_key=()","public_key=()","public_key=()","public_key?()","public_method()","public_method_defined?()","public_methods()","public_methods()","public_path()","public_send()","publish()","publish()","publish()","pull()","pull()","purge()","purpose=()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push_inspect_key()","push_workspace()","pushd()","pushdir()","put()","put()","put?()","putback()","putbinaryfile()","putc()","putc()","putc()","putc()","putc()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puttextfile()","pwd()","pwd()","pwd()","pwd()","qualified_const_defined?()","qualified_const_get()","qualified_const_set()","query()","query=()","query_attribute()","query_parameters()","quick()","quiet()","quiet()","quiet=()","quietly()","quit()","quit()","quo()","quo()","quo()","quo()","quo()","quote()","quote()","quote()","quote()","quote()","quote_column_name()","quote_string()","quote_string()","quote_table_name()","quote_table_name()","quote_table_name_for_assignment()","quote_table_name_for_assignment()","quote_table_name_for_assignment()","quoted_columns_for_index()","quoted_columns_for_index()","quoted_date()","quoted_false()","quoted_false()","quoted_id()","quoted_locking_column()","quoted_primary_key()","quoted_table_name()","quoted_true()","quoted_true()","r()","racc_accept()","racc_e_pop()","racc_next_state()","racc_print_stacks()","racc_print_states()","racc_read_token()","racc_reduce()","racc_shift()","racc_token2str()","rack_app()","radio_button()","radio_button()","radio_button()","radio_button_tag()","radio_group()","rails_version()","rails_version()","rails_version()","railtie_name()","railtie_namespace()","railties()","raise()","raise()","raise()","raise_for_undefined_entity?()","raise_for_undefined_entity?()","raise_for_undefined_entity?()","raise_if_absolute()","raise_if_conflicts()","raised_exception()","rake()","rake()","rake_check_options()","rake_extension()","rake_merge_option()","rake_original_const_missing()","rake_original_time_compare()","rake_output_message()","rake_require()","rake_require()","rake_system()","rake_tasks()","rakefile()","rakefile()","rakefile()","rakefile_location()","rakefile_location()","rand()","rand()","rand()","random_bytes()","random_iv()","random_key()","random_number()","random_string()","range()","range=()","range_field()","range_field_tag()","range_length()","range_to_string()","rank()","rank_e()","rassoc()","rassoc()","rassoc()","rationalize()","rationalize()","rationalize()","rationalize()","rationalize()","rationalize()","raw()","raw()","raw()","raw()","raw!()","raw_connection()","raw_cookie()","raw_cookie2()","raw_data()","raw_host_with_port()","raw_params()","raw_path()","raw_post()","raw_write_attribute()","rb_files_in()","rb_scan_args()","rcptto()","rcptto_list()","rdev()","rdev_major()","rdev_minor()","rdoc()","rdoc_installed?()","rdoc_installed?()","rdoc_options()","rdoc_options=()","rdoc_task_description()","re","re_exchange()","re_exchange()","re_exchangeable?()","re_exchangeable?()","re_sign()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read_all()","read_all()","read_attribute()","read_attribute_before_type_cast()","read_bin()","read_binary()","read_body()","read_checksums()","read_directive()","read_documentation_modifiers()","read_entry()","read_entry()","read_file()","read_fragment()","read_i()","read_multi()","read_multi()","read_nonblock()","read_nonblock()","read_nonblock()","read_nonblock()","read_s()","read_s_expand()","read_smime()","read_store_attribute()","read_timeout=()","read_timeout=()","read_timeout=()","read_timeout=()","read_type_class()","read_with_substitution()","readable?()","readable?()","readable?()","readable?()","readable_after_eof?()","readable_after_eof?()","readable_after_eof?()","readable_inspect()","readable_inspect()","readable_real?()","readable_real?()","readable_real?()","readable_real?()","readagain_bytes()","readbyte()","readbyte()","readbyte()","readbyte()","readchar()","readchar()","readchar()","readchar()","readchar()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlink()","readlink()","readme()","readme()","readme()","readonly()","readonly!()","readonly?()","readonly_attributes()","readpartial()","readpartial()","readpartial()","readpartial()","readpartial()","ready()","ready?()","real()","real()","real()","real?()","real?()","real?()","realdirpath()","realdirpath()","realloc()","realloc()","really_verbose()","realpath()","realpath()","realtime()","reap()","reason()","reason()","reason_phrase()","reason_phrase()","receive()","receive()","receive()","receiver()","recipients()","reconnect!()","reconnect!()","reconnect!()","reconnect!()","record()","record_entity_expansion()","record_key_for_dom_id()","record_location()","record_location()","recover()","recreate_database()","rect()","rect()","rect()","rect()","rectangular()","rectangular()","rectangular()","rectangular()","recurse_proc()","recv()","recv_io()","recv_nonblock()","recvfrom()","recvfrom()","recvfrom()","recvfrom_nonblock()","recvfrom_nonblock()","recvmsg()","recvmsg_nonblock()","redefine_method()","redirect()","redirect?()","redirect_to()","redirect_to()","redirect_to()","redirect_to()","redirect_url()","redirector()","redisplay()","reduce()","reenable()","ref()","ref()","ref()","ref()","ref()","reference()","references()","references()","references()","refinements","reflect_on_aggregation()","reflect_on_all_aggregations()","reflect_on_all_associations()","reflect_on_all_autosave_associations()","reflect_on_association()","refresh()","refresh()","refresh()","refresh()","refresh()","refresh_line()","regexp()","regexp()","regexp()","regexp()","regist()","regist_server()","register()","register()","register()","register()","register()","register()","register()","register_alias()","register_callback()","register_command()","register_default_spec()","register_interceptor()","register_interceptors()","register_observer()","register_observers()","register_task()","register_tracker()","register_type()","register_type()","register_uri()","registered()","registered_type?()","registry=()","regular?()","regular_class_path()","regular_update()","regular_update()","regular_writer()","regular_writer()","rehash()","rehash()","rehash()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject!()","reject!()","reject!()","reject!()","reject!()","reject!()","reject!()","relative?()","relative?()","relative_path_from()","release()","release()","release()","release_connection()","release_savepoint()","release_savepoint()","release_savepoint()","release_savepoint()","reload()","reload()","reload()","reload()","reload()","reload()","reload()","reload!()","reload!()","reload_routes!()","remainder()","remainder()","remainder()","remote?()","remote_address()","remote_ip()","remote_ip()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","removechild()","remove_all()","remove_belongs_to()","remove_belongs_to()","remove_by_name()","remove_callback()","remove_callback_internal()","remove_cdecl_callback()","remove_class_variable()","remove_coding_comment()","remove_column()","remove_column()","remove_column_sql()","remove_columns()","remove_columns_sql()","remove_comment()","remove_commented_out_lines()","remove_connection()","remove_connection()","remove_dir()","remove_entry()","remove_entry_secure()","remove_executables()","remove_file()","remove_filters!()","remove_from_documentation?()","remove_handler()","remove_hook_for()","remove_index()","remove_index()","remove_index_sql()","remove_installed!()","remove_instance_variable()","remove_invisible()","remove_nodoc()","remove_nodoc_children()","remove_old_bin_files()","remove_old_lib_files()","remove_option()","remove_owners()","remove_possible_method()","remove_private()","remove_private_comment()","remove_private_comments()","remove_reference()","remove_references()","remove_response_handler()","remove_server()","remove_siginfo_handler()","remove_silencers!()","remove_spec()","remove_specs_unsatisfied_by()","remove_stdcall_callback()","remove_timestamps()","remove_timestamps()","remove_timestamps_sql()","remove_token_listener()","remove_tracker()","remove_unparseable()","remove_unresolved_default_spec()","rename()","rename()","rename()","rename()","rename()","rename_column()","rename_column()","rename_column_indexes()","rename_column_sql()","rename_index()","rename_index()","rename_index()","rename_key()","rename_table()","rename_table()","rename_table()","rename_table()","rename_table_indexes()","render()","render()","render()","render()","render()","render()","render()","render_bind()","render_body()","render_collection()","render_collection()","render_partial()","render_partial()","render_template()","render_template()","render_to_body()","render_to_body()","render_to_body()","render_to_string()","render_to_string()","renew()","renew()","reopen()","reopen()","reopen()","reorder()","reorder_characters()","reorganize()","repair_command()","repeated_combination()","repeated_permutation()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace_child()","replace_with()","replacement()","replacement=()","replicate()","reply()","reply_service()","report()","report()","report_attributes()","report_class_module()","report_constants()","report_methods()","represent_map()","represent_object()","represent_scalar()","represent_seq()","reqs()","request()","request()","request()","request_body_permitted?()","request_get()","request_head()","request_http_basic_authentication()","request_http_digest_authentication()","request_http_token_authentication()","request_method()","request_method_symbol()","request_parameters()","request_post()","request_uri()","requester()","requests()","require()","require()","require_debugger()","require_engine()","require_fixture_classes()","require_path()","require_path=()","require_path_info?()","require_relative()","require_tzinfo()","required()","required_attribute?()","required_attributes()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_prefix()","required_ruby_version=()","required_rubygems_version=()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","required_uri()","requirement()","requirements()","requirements=()","requirements_list()","requires_reloading?()","requires_reloading?()","rerdoc_task_description()","rescue_from()","rescue_template()","rescue_with_handler()","rescue_with_handler()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset!()","reset!()","reset!()","reset!()","reset_cache()","reset_callbacks()","reset_column_information()","reset_counters()","reset_cycle()","reset_locking_column()","reset_nil_attributes_to_default()","reset_prog_mode()","reset_runtime()","reset_sequence!()","reset_session()","reset_session()","resize()","resize()","resizeterm()","resolve()","resolve()","resolve()","resolve()","resolve()","resolve()","resolve_add()","resolve_aliases()","resolve_args()","resolve_current()","resolve_for()","resource()","resource_errors()","resource_location()","resourceful?()","resources()","resources()","resources_path_names()","respond()","respond_to()","respond_to()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_without_attributes?()","respond_with()","response()","response()","response_body=()","response_body=()","response_body=()","response_body_permitted?()","response_code()","response_overridden?()","rest()","rest?()","rest_size()","restore()","restore()","restore()","restore()","restore()","restore()","restsize()","result()","result()","result()","result()","result()","result()","result()","resume()","resume()","retrbinary()","retrieve_connection()","retrieve_connection_pool()","retrlines()","return_headers?()","return_type()","return_type_detail()","return_value()","return_vtype()","retval?()","reverse()","reverse()","reverse()","reverse()","reverse!()","reverse!()","reverse_each()","reverse_each()","reverse_merge()","reverse_merge()","reverse_merge()","reverse_merge!()","reverse_merge!()","reverse_merge!()","reverse_order()","reverse_update()","reversible()","revert()","revert()","reverting?()","revoked()","revoked=()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewrite_param_values()","rfc1123_date()","rfc2822()","rfc2822()","rfc2822()","rfc2822()","rfc2822()","rfc3339()","rfc3339()","rfc3339()","rfc3339()","rfc822()","rfc822()","rfc822()","rfc822()","rfc822()","ri_dir()","ri_installed?()","ri_installed?()","ri_paths()","rid()","rid()","rindex()","rindex()","rjust()","rm()","rm()","rm_f()","rm_r()","rm_rf()","rmdir()","rmdir()","rmdir()","rmdir()","rmdir()","rmdir()","rmtree()","rmtree()","robots","rollback_active_record_state!()","rollback_db_transaction()","rollback_db_transaction()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","rolledback?()","root()","root()","root()","root()","root()","root()","root()","root()","root()","root=()","root?()","root?()","root_node()","root_search()","roots()","rotate()","rotate!()","round()","round()","round()","round()","round()","round()","round()","round()","round()","route()","route_from()","route_key()","route_to()","route_url()","routes()","row()","row_count()","row_size()","row_vector()","row_vectors()","rows()","rpartition()","rsqrt()","rss()","rstrip()","rstrip!()","ruby()","ruby()","ruby()","ruby?()","ruby_engine()","ruby_version()","rubygems_api_key()","rubygems_api_key=()","rubygems_api_request()","rubygems_version()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run!()","run_callbacks()","run_config()","run_in_transaction?()","run_initializers()","run_load_hooks()","run_with_threads()","run_with_threads()","runner()","runtime()","runtime=()","runtime_dependencies()","safe_concat()","safe_concat()","safe_constantize()","safe_constantize()","safe_get()","safe_join()","safe_level()","safe_ln()","safe_unlink()","sample()","sandbox?()","sanitize()","sanitize()","sanitize()","sanitize()","sanitize_conditions()","sanitize_css()","sanitize_css()","sanitize_limit()","sanitize_path()","sanitize_sql()","sanitize_sql_array()","sanitize_sql_for_assignment()","sanitize_sql_for_conditions()","sanitize_sql_hash()","sanitize_sql_hash_for_assignment()","sanitize_sql_hash_for_conditions()","sanitize_string()","sanitizeable?()","sanitizeable?()","satisfied_by?()","satisfied_by?()","satisfies_requirement?()","saturday?()","saturday?()","save()","save()","save()","save()","save!()","save!()","save_cache()","save_class()","save_exception_mode()","save_history()","save_history=()","save_limit()","save_method()","save_page()","save_rounding_mode()","say()","say()","say()","say_with_time()","scalar()","scalar()","scalar()","scalar()","scalar=()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan_full()","scan_until()","scanf()","scanf()","scanf()","schema_cache=()","schema_creation()","schema_creation()","schema_creation()","schema_exists?()","schema_names()","schema_search_path()","schema_search_path=()","scheme=()","scheme_list()","scope()","scope()","scope()","scope()","scope=()","scope_for_create()","scope_name()","scoping()","scoping()","scrl()","scrl()","scroll()","scrolling_list()","scrollok()","search()","search()","search()","search_const()","search_convpath()","search_field()","search_field_tag()","search_for_dependency()","search_full()","search_record()","search_record()","search_record()","search_servlet()","search_string()","sec()","sec=()","second()","second()","second=()","second=()","seconds()","seconds_since_midnight()","seconds_since_midnight()","seconds_to_utc_offset()","seconds_until_end_of_day()","seconds_until_end_of_day()","secret_token()","section()","section()","section()","section()","section_contents()","section_title()","section_title()","sections()","sections()","secure=()","security","see()","seed()","seed()","seed=()","seek()","seek()","seek()","seek()","seek()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select!()","select!()","select!()","select!()","select_all()","select_all()","select_date()","select_datetime()","select_day()","select_first()","select_hour()","select_minute()","select_month()","select_one()","select_rows()","select_rows()","select_rows()","select_rows()","select_rows()","select_second()","select_tag()","select_time()","select_value()","select_values()","select_year()","selector()","self()","send()","send()","send()","send_action()","send_data()","send_data()","send_data()","send_file()","send_file()","send_file()","send_gem()","send_io()","send_mail()","send_message()","send_request()","sendcmd()","sender()","sendmail()","sendmsg()","sendmsg_nonblock()","separator()","seplist()","seq=()","sequence()","sequence_name()","sequence_name=()","serial()","serial()","serial()","serial()","serial()","serial=()","serial=()","serial_sequence()","serializable_hash()","serializable_hash()","serialize()","serialized_attributes()","serialized_attributes()","serve()","serve()","serve()","serve()","serve()","server_error?()","server_name()","server_port()","server_software()","service()","service()","service()","service()","service()","session=()","session_add()","session_auth=()","session_cache_mode()","session_cache_mode=()","session_cache_size()","session_cache_size=()","session_cache_stats()","session_options=()","session_remove()","session_reused?()","session_store()","set()","set()","set_arg_names()","set_attributes()","set_attrs()","set_backtrace()","set_backtrace()","set_callback()","set_callback()","set_callback_internal()","set_cdecl_callback()","set_close_on_exec()","set_content_type()","set_content_type()","set_cookie()","set_ctypes()","set_ctypes()","set_ctypes()","set_ctypes()","set_current_section()","set_debug_output()","set_debug_output()","set_debug_output()","set_default()","set_default_handler()","set_default_paths()","set_dictionary()","set_dictionary()","set_dn()","set_encoding()","set_encoding()","set_encoding()","set_encoding()","set_environment()","set_environment!()","set_eoutvar()","set_eoutvar()","set_eoutvar()","set_error()","set_error()","set_extensions()","set_filter()","set_fixture_class()","set_form()","set_form_data()","set_fragment()","set_generator()","set_get_line_procs()","set_headers()","set_host()","set_last_thread()","set_last_value()","set_log()","set_member_mappings_for_resource()","set_name_cache()","set_next_element()","set_non_blocking()","set_opaque()","set_option()","set_options()","set_params()","set_parser()","set_passwd()","set_passwd()","set_passwd()","set_password()","set_path()","set_path()","set_port()","set_query()","set_range()","set_redirect()","set_registry()","set_response!()","set_scheme()","set_scope()","set_screen_size()","set_service_hook()","set_session()","set_size()","set_socket()","set_standard_conforming_strings()","set_state()","set_stdcall_callback()","set_to()","set_to_infinity!()","set_trace()","set_trace_func()","set_trace_func()","set_typecode()","set_user()","set_userinfo()","set_valid_ip()","set_visibility_for()","set_writer()","setacl()","setbyte()","setegid()","seteuid()","setgid()","setgid?()","setgid?()","setgid?()","setgid?()","setgrent()","setpgid()","setpgrp()","setpos()","setpos()","setpriority()","setproperty()","setpwent()","setquota()","setregid()","setresgid()","setresuid()","setreuid()","setrgid()","setrlimit()","setruid()","setscrreg()","setscrreg()","setsid()","setsockopt()","setter()","setuid()","setuid?()","setuid?()","setuid?()","setuid?()","setup()","setup()","setup()","setup()","setup()","setup_certificate()","setup_fixture_accessors()","setup_fixtures()","setup_generator()","setup_horo_variables()","setup_maker()","setup_maker()","setup_maker()","setup_maker()","setup_maker()","setup_maker()","setup_maker_elements()","setup_output_dir()","setup_pager()","setup_params()","setup_scanner()","setup_signer()","setup_ssl_context()","sexp()","sexp_raw()","sfork()","sh()","shallow()","shallow?()","shebang()","shellescape()","shellescape()","shelljoin()","shelljoin()","shellsplit()","shellsplit()","shellwords()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","short_name()","show_detailed_exceptions?()","show_documentation()","show_exceptions_app()","show_help()","show_lookup_failure()","show_owners()","show_rdoc_for_pattern()","show_release_notes()","show_variable()","show_version()","shuffle()","shuffle!()","shutdown()","shutdown()","shutdown()","shutdown()","sid_available?()","sid_available?()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign_in()","signal()","signal()","signal()","signal_handle()","signal_status()","signaled?()","signame()","signature()","signature()","signature_algorithm()","signature_algorithm()","signature_algorithm()","signed()","signed_or_encrypted()","signed_time()","signed_value()","signers()","signo()","silence()","silence()","silence()","silence()","silence!()","silence_stream()","silence_warnings()","simple_format()","simple_selector()","sin()","sin()","sin()","sin!()","since()","since()","since()","since()","since()","since()","single?()","single_delegate()","singleline_format()","singleline_pp()","singleton_class()","singleton_method_added()","singleton_methods()","singular()","singular()","singular?()","singular?()","singular_route_key()","singular_table_name()","singularize()","singularize()","sinh()","sinh()","sinh!()","site()","site_dir()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size=()","size=()","size=()","size?()","size?()","size?()","size?()","size_opt_params()","size_params()","sizeof()","sizeof()","skip()","skip()","skip()","skip_action_callback()","skip_after_action()","skip_around_action()","skip_before_action()","skip_blanks?()","skip_callback()","skip_during()","skip_filter()","skip_for_variable()","skip_method()","skip_optional_do_after_expression()","skip_tkspace()","skip_tkspace_comment()","skip_until()","sleep()","sleep()","sleep()","slice()","slice()","slice()","slice()","slice()","slice()","slice()","slice!()","slice!()","slice!()","slice!()","slice_before()","slice_before()","sn()","snippet()","sockaddr_in()","sockaddr_un()","socket?()","socket?()","socket?()","socket?()","socketpair()","socketpair()","socktype()","solve()","sort()","sort()","sort()","sort!()","sort_by()","sort_by!()","sort_obj()","sort_sections()","sorted()","sorted_requests()","source()","source()","source()","source()","source()","source_encoding()","source_encoding()","source_encoding()","source_encoding_name()","source_encoding_name()","source_extract()","source_file()","source_for()","source_location()","source_location()","source_location()","source_ole_types()","source_root()","sources()","sources()","sources=()","spawn()","spawn()","spawn()","spec()","spec()","spec()","spec()","spec_dir()","spec_file()","spec_file()","spec_for_dependency()","spec_name()","spec_name()","spec_path()","spec_predecessors()","special_prefixes()","special_prefixes=()","specific?()","specific?()","specific?()","specific_extra_args()","specific_extra_args_hash()","specs()","specs()","specs_in()","split()","split()","split()","split()","split()","split()","split()","split()","split()","split_all()","split_all()","split_header_value()","split_into_flow()","sprintf()","sql()","sql_for_insert()","sql_for_insert()","sql_query_length()","sqlite_version()","sqrt()","sqrt()","sqrt()","sqrt()","sqrt!()","square?()","squeeze()","squeeze!()","squish()","squish!()","srand()","srand()","src_type()","ssl?()","ssl?()","ssl_params()","ssl_version()","ssl_version=()","stale?()","stale_session_check!()","stand_alone?()","standard_exception_handling()","standard_exception_handling()","standard_library","standard_port()","standard_port?()","standard_rake_options()","standard_rake_options()","standend()","standend()","standout()","standout()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","startelement()","startelement()","start_accepting()","start_accepting()","start_accepting()","start_accepting()","start_accepting()","start_accepting()","start_collecting_tokens()","start_color()","start_doc()","start_document()","start_document()","start_document()","start_document()","start_element()","start_element()","start_element?()","start_export()","start_import()","start_job()","start_mapping()","start_prefix_mapping()","start_processing()","start_profile()","start_sequence()","start_server()","start_service()","start_stream()","start_stream()","start_with?()","started?()","started?()","started?()","started_request_message()","starting()","starts_with()","starttls()","starttls()","starttls?()","starttls_always?()","starttls_auto?()","stat()","stat()","stat()","stat()","state()","stats()","status()","status()","status()","status()","status()","status()","status()","status()","status=()","status=()","status=()","status_code()","status_code_for_exception()","status_line()","status_message()","status_string()","status_type_char()","stdout()","stdout=()","stdscr()","step()","step()","step()","sti_name()","sticky?()","sticky?()","sticky?()","sticky?()","stop()","stop()","stop()","stop()","stop?()","stop_doc()","stop_profile()","stop_service()","stop_service()","stop_service()","stopped?()","stopped?()","stopped?()","stopping()","stopsig()","storbinary()","store()","store()","store()","store()","store()","store()","store()","store()","store()","store=()","store=()","store=()","store=()","store=()","store=()","store=()","store_accessor()","store_for()","store_inherited()","storlines()","stream=()","stream_end?()","streaming?()","stress()","stress=()","strftime()","strftime()","strftime()","strftime()","strict_decode64()","strict_encode64()","strict_mode?()","string()","string()","string()","string()","string=()","string=()","string_length()","string_to_array()","string_to_bit()","string_to_cidr()","string_to_hstore()","string_to_json()","string_to_point()","string_to_time()","string_value()","stringify_keys()","stringify_keys()","stringify_keys()","stringify_keys!()","stringify_keys!()","stringify_keys!()","strip()","strip!()","strip_hashes()","strip_heredoc()","strip_links()","strip_newlines()","strip_stars()","strip_tags()","strong()","strongly_connected_components()","strptime()","strptime()","strptime()","struct()","struct()","struct()","structure_dump()","structure_load()","stylesheet_link_tag()","stylesheet_path()","stylesheet_url()","stylesheets()","su()","sub()","sub()","sub()","sub()","sub!()","sub_ext()","sub_type()","subclasses()","subclasses()","subclasses()","subdomain()","subdomain_of?()","subdomains()","subject()","subject()","subject=()","subject=()","subject_certificate=()","subject_request=()","submit()","submit()","submit_tag()","subpad()","subquery_for()","subquery_for()","subscribe()","subscribe()","subscribe()","subscribed()","subscribers()","subsec()","subset?()","substitute_at()","substitute_at()","substring()","substring_after()","substring_before()","subtract()","subwin()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ()","succ!()","success?()","success?()","success?()","success?()","suffix()","suffix()","suffix_pattern()","suffixes()","suggest_gems_from_name()","sum()","sum()","sum()","sum()","summarize()","summarize()","summarize()","summary()","summary=()","sunday()","sunday?()","sunday?()","super_each()","superclass()","superclass()","superclass()","superclass=()","superclass_delegating_accessor()","superclass_method()","superset?()","supported?()","supports_add_column?()","supports_bulk_alter?()","supports_count_distinct?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_explain?()","supports_explain?()","supports_explain?()","supports_explain?()","supports_extensions?()","supports_extensions?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_insert_with_returning?()","supports_migrations?()","supports_migrations?()","supports_migrations?()","supports_partial_index?()","supports_partial_index?()","supports_primary_key?()","supports_primary_key?()","supports_ranges?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_statement_cache?()","supports_statement_cache?()","supports_statement_cache?()","supports_statement_cache?()","supports_streaming?()","supports_streaming?()","supports_transaction_isolation?()","supports_transaction_isolation?()","supports_transaction_isolation?()","suppress()","suppress_messages()","suppressed?()","suspend()","suspend_context()","suspend_input_method()","suspend_name()","suspend_workspace()","swap()","swap()","swapcase()","swapcase()","swapcase()","swapcase()","swapcase!()","swapcase_mapping()","switch()","switch()","switch()","switch_name()","sym()","sym()","sym()","sym()","sym()","sym()","symbolize_keys()","symbolize_keys()","symbolize_keys()","symbolize_keys!()","symbolized_base_class()","symbolized_path_parameters()","symbolized_sti_name()","symbols()","symlink()","symlink()","symlink()","symlink?()","symlink?()","symlink?()","symlink?()","symlink?()","symlink_files()","symmetric?()","sync()","sync()","sync()","sync()","sync()","sync=()","sync=()","sync=()","sync_exclusive?()","sync_exclusive?()","sync_extend()","sync_extend()","sync_inspect()","sync_inspect()","sync_lock()","sync_lock()","sync_locked?()","sync_locked?()","sync_point?()","sync_shared?()","sync_shared?()","sync_synchronize()","sync_synchronize()","sync_try_lock()","sync_try_lock()","sync_unlock()","sync_unlock()","synchronize()","synchronize()","syncmode=()","syntax","synthesize_file_task()","sysaccept()","sysaccept()","sysaccept()","syscall()","sysclose()","sysconfdir()","syslog()","syslog=()","sysopen()","sysopen()","sysread()","sysread()","sysread()","sysread()","sysseek()","syssign()","system()","system()","system()","system()","system()","system_dir()","system_dir()","system_dir()","system_path=()","systmpdir()","sysverify()","syswrite()","syswrite()","t()","t()","t()","table()","table_alias_for()","table_alias_length()","table_alias_length()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_name()","table_name()","table_name()","table_name=()","table_name_length()","table_of_contents()","table_rows()","table_structure()","tableize()","tableize()","tables()","tables()","tag()","tag()","tag()","tag_end()","tag_end()","tag_name()","tag_start()","tag_start()","tagged()","tagurize()","tail!()","taint()","taint()","taint()","tainted?()","take()","take()","take()","take()","take()","take()","take!()","take_while()","take_while()","take_while()","tan()","tan()","tan!()","tanh()","tanh()","tanh!()","tap()","tar_bz2_file()","tar_gz_file()","target()","task_defined?()","tasks()","tasks()","tasks()","tasks()","tasks_in_scope()","tcp()","tcp_server_loop()","tcp_server_sockets()","teardown_fixtures()","tee()","telephone_field()","telephone_field_tag()","tell()","tell()","tell()","tell()","tell()","tell()","telnetmode()","telnetmode=()","template()","template_dir_for()","template_exists?()","template_for()","template_result()","terabyte()","terabytes()","terminal_width()","terminal_width()","terminate()","terminate()","terminate()","terminate()","terminate()","terminate()","terminate_interaction()","terminate_interaction()","terminate_interaction()","terminate_job()","terminated?()","terminated?()","termsig()","test()","test()","test()","test()","test_dummy_assets()","test_dummy_clean()","test_dummy_config()","test_errors_aref()","test_file()","test_file=()","test_files()","test_files=()","test_model_naming()","test_persisted?()","test_to_key()","test_to_param()","test_to_partial_path()","text()","text()","text()","text()","text()","text()","text()","text()","text()","text()","text()","text()","text=()","text=()","text=()","text?()","text?()","text_area()","text_area_tag()","text_field()","text_field()","text_field_tag()","textarea()","textinput()","texts()","tgz_file()","third()","thread()","thread()","thread()","thread_list()","thread_list_all()","thread_variable?()","thread_variable?()","thread_variable_get()","thread_variable_get()","thread_variable_set()","thread_variable_set()","thread_variables()","thread_variables()","threadsafe!()","throw()","thursday?()","thursday?()","tidy_bytes()","tidy_bytes()","time()","time()","time()","time()","time()","time2wtime()","time=()","time=()","time=()","time_ago_in_words()","time_delta_string()","time_field()","time_field_tag()","time_select()","time_select()","time_tag()","time_with_datetime_fallback()","time_zone_options_for_select()","time_zone_select()","time_zone_select()","timeout()","timeout()","timeout()","timeout()","timeout=()","timeout=()","timeout=()","timeout=()","timeouts=()","times()","times()","times()","timestamp()","timestamp()","timestamp()","timestamp()","timestamps()","timestamps()","title()","title=()","titlecase()","titlecase()","titleize()","titleize()","titleize()","tls?()","tmp()","tmpdir()","to()","to()","to=()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_ary()","to_ary()","to_ary()","to_ary()","to_ary()","to_ary()","to_ary()","to_ary()","to_ary()","to_atom()","to_basic()","to_bn()","to_bn()","to_bn()","to_bn()","to_c()","to_c()","to_c()","to_c()","to_class_name()","to_cleanup()","to_csv()","to_csv()","to_d()","to_d()","to_d()","to_d()","to_d()","to_d()","to_d()","to_date()","to_date()","to_date()","to_date()","to_date()","to_date()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_default_s()","to_default_s()","to_default_s()","to_default_s()","to_default_s()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_digits()","to_element_methods()","to_enum()","to_enum()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed()","to_feed_for_categories()","to_format()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_html()","to_html()","to_html()","to_html()","to_html()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_id()","to_id()","to_id()","to_id()","to_int()","to_int()","to_int()","to_int()","to_int()","to_int()","to_int()","to_int()","to_integer()","to_io()","to_io()","to_io()","to_js()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_key()","to_key()","to_mailtext()","to_model()","to_model()","to_name()","to_name()","to_obj()","to_obj()","to_obj()","to_obj()","to_options()","to_options!()","to_options!()","to_options!()","to_p()","to_p()","to_p()","to_p()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_partial_path()","to_partial_path()","to_path()","to_path()","to_path()","to_path()","to_path()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_prepare()","to_prepare()","to_prepare_blocks()","to_proc()","to_proc()","to_proc()","to_ptr()","to_ptr()","to_query()","to_query()","to_query()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_range()","to_rfc822text()","to_rss()","to_ruby()","to_ruby()","to_ruby_for_cache()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_sentence()","to_session_value()","to_set()","to_sockaddr()","to_spec()","to_specs()","to_sql()","to_sql()","to_str()","to_str()","to_str()","to_str()","to_str()","to_str()","to_string()","to_string()","to_sym()","to_sym()","to_sym()","to_tag()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time_in_current_zone()","to_toc()","to_value()","to_value()","to_write_io()","to_xml()","to_xml()","to_xml()","to_xml()","to_xml()","to_xml()","to_yaml()","to_yaml()","to_yaml_properties()","to_yaml_properties()","to_yaml_properties()","to_yaml_type()","today()","today()","today?()","today?()","toeuc()","toeuc()","toggle()","toggle!()","tojis()","tojis()","token()","token_and_options()","token_listener()","token_params_from()","token_pos()","token_stream()","token_to_str()","tokenize()","tokenize()","tokenize()","tokenize()","tokenize()","tokenize()","tokenize()","tokenize()","tokens_to_s()","tolocale()","tolocale()","tomdoc?()","tomorrow()","tomorrow()","top()","top()","top()","top()","top()","top_level()","top_level()","top_level()","top_level()","top_level_test()","toplevel_load()","tosjis()","tosjis()","total_in()","total_out()","total_time()","touch()","touch()","touch()","toutf16()","toutf16()","toutf32()","toutf32()","toutf8()","toutf8()","tr()","tr()","tr!()","tr_s()","tr_s!()","trace()","trace()","trace()","trace()","trace()","trace_func()","trace_on()","trace_var()","transact()","transaction()","transaction()","transaction()","transaction()","transaction_isolation_levels()","transaction_joinable=()","transaction_open?()","transfer()","transform()","transform_keys()","transform_keys!()","translate()","translate()","translate()","translate_exception()","translate_exception()","translate_exception()","translate_exception()","transliterate()","transpose()","transpose()","trap()","trap()","traverse()","traverse()","tree()","trigger()","trigger()","true()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate_output?()","truncate_output?()","trust()","trust()","trust=()","trust_cert()","trust_dir()","trusted_certificates()","try()","try()","try!()","try!()","try_activate()","try_const()","try_convert()","try_convert()","try_convert()","try_convert()","try_convert()","try_lock()","try_mon_enter()","try_to_load_dependency()","try_type()","tsort()","tsort_each()","tsort_each_child()","tsort_each_child()","tsort_each_child()","tsort_each_child()","tsort_each_node()","tsort_each_node()","tsort_each_node()","tsrange()","tstzrange()","tsvector()","tt?()","tt_sections()","tty?()","tty?()","tty?()","tty?()","tty_output=()","tty_output=()","tty_output?()","tty_output?()","tuesday?()","tuesday?()","tuples_for()","tv_nsec()","tv_sec()","tv_sec()","tv_usec()","type()","type()","type()","type()","type()","type()","type()","type()","type()","type()","type()","type()","type()","type()","type2name()","type=()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast()","type_cast_config_to_boolean()","type_cast_config_to_integer()","type_cast_for_write()","type_cast_for_write()","type_params()","type_to_sql()","type_to_sql()","typealias()","typealias()","typecode=()","typekind()","typelibs()","typelibs()","types()","u()","u()","udp()","udp_server_loop()","udp_server_loop_on()","udp_server_recv()","udp_server_sockets()","ui()","ui()","ui()","ui=()","ui=()","uid()","uid()","uid=()","uid_copy()","uid_fetch()","uid_search()","uid_sort()","uid_store()","uid_thread()","uidl()","umask()","umount()","unadvise()","unalias_command()","unalias_command()","unbind()","unbind()","unbind_at_call()","unbind_at_call()","uncached()","uncached()","unconverted_fields?()","uncountable()","uncountable?()","uncountable?()","undef_system_command()","undef_system_command()","undefine_attribute_methods()","undefine_finalizer()","underscore()","underscore()","undoc_params()","unescape()","unescape()","unescape()","unescape()","unescape()","unescape()","unescapeelement()","unescapehtml()","unescape_auth_info()","unescape_bytea()","unescape_element()","unescape_form()","unescape_html()","unescape_path()","unget()","unget_tk()","ungetbyte()","ungetbyte()","ungetbyte()","ungetc()","ungetc()","ungetc()","ungetc()","ungetch()","ungetmouse()","uninstall()","uninstall_dep()","uninstall_gem()","uninstall_old_gemcutter()","union()","union()","union()","union()","uniq()","uniq()","uniq()","uniq!()","uniq_by()","uniq_by!()","uniq_value()","unique_classes()","unique_classes_and_modules()","unique_id()","unique_modules()","unit()","unitary?()","unix()","unix()","unix?()","unix?()","unix?()","unix_path()","unix_rights()","unix_rights()","unix_server_loop()","unix_server_socket()","unknown","unknown","unknown()","unknown()","unlink()","unlink()","unlink()","unlink()","unlink()","unlock()","unlock()","unmask_protected_sequences()","unmount()","unnormalize()","unnormalize()","unnormalized()","unpack()","unpack()","unpack()","unpack()","unpack()","unpack_graphemes()","unpack_sockaddr_in()","unpack_sockaddr_un()","unpackdw()","unpackqw()","unpermitted_parameters()","unprepared_statement()","unprepared_visitor()","unregist()","unregister()","unregister_command()","unresolved_deps()","unscan()","unscope()","unscoped()","unshift()","unshift()","unshift()","unshift()","unshift()","unshift()","unsigned_value()","unsubscribe()","unsubscribe()","unsubscribe()","untaint()","untaint()","untaint()","until()","until()","untrace_var()","untrust()","untrust()","untrusted?()","unused()","unyank_gem()","up()","upcase()","upcase()","upcase()","upcase()","upcase!()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update!()","update_aliases()","update_all()","update_attribute()","update_attributes()","update_attributes!()","update_cache?()","update_checksum()","update_column()","update_columns()","update_counters()","update_counters()","update_extends()","update_gem()","update_gems()","update_includes()","update_index()","update_output_dir()","update_rubygems()","update_specs_index()","update_sql()","update_sql()","updated()","updated()","updated()","updated()","updated()","updated()","updated=()","updated=()","updated=()","updated?()","upgrade_to_class()","upload()","upload()","upload()","upload()","upload()","upload()","upload()","upload()","upload_files()","upper()","upper_bound()","upper_bound=()","upper_triangular?()","upto()","upto()","upto()","upto()","uptodate?()","uri()","uri_escaper()","uri_option()","uri_registered?()","url()","url_encode()","url_field()","url_field_tag()","url_for()","url_for()","url_for()","url_for()","url_options()","url_options()","url_to_asset()","url_to_audio()","url_to_font()","url_to_image()","url_to_javascript()","url_to_stylesheet()","url_to_video()","urlsafe_base64()","urlsafe_decode64()","urlsafe_encode64()","us_zones()","usage()","usage_path()","use()","use()","use()","use_accept_header()","use_default_colors()","use_insert_returning?()","use_loader()","use_loader=()","use_loader?()","use_markup()","use_paths()","use_prefix()","use_readline=()","use_registry()","use_renderer()","use_renderers()","use_ssl=()","use_ssl?()","use_ssl?()","use_ssl?()","use_tracer=()","use_ui()","use_ui()","use_zone()","usec()","usec()","user()","user=()","user=()","user_agent()","user_dir()","user_home()","user_name_and_password()","userinfo()","userinfo=()","uses_transaction()","uses_transaction?()","using_limitable_reflections?()","using_match_shorthand?()","utc()","utc()","utc()","utc()","utc?()","utc?()","utc?()","utc_offset()","utc_offset()","utc_offset()","utc_offset()","utc_time()","utc_to_local()","utf8_enforcer_tag()","utime()","utime()","uuid()","uuid()","uuid()","v()","v_inv()","valid?()","valid?()","valid?()","valid?()","valid_accept_header()","valid_alter_table_options()","valid_civil?()","valid_commercial?()","valid_date?()","valid_encoding?()","valid_jd?()","valid_ordinal?()","valid_type?()","valid_type?()","valid_type?()","validate()","validate()","validate()","validate()","validate()","validate_digest_response()","validate_duplicate_links()","validate_fallbacks()","validate_for_stream()","validate_nonce()","validate_one_tag_name()","validate_options()","validate_permissions()","validates()","validates!()","validates_absence_of()","validates_acceptance_of()","validates_associated()","validates_confirmation_of()","validates_each()","validates_exclusion_of()","validates_format_of()","validates_inclusion_of()","validates_length_of()","validates_numericality_of()","validates_presence_of()","validates_presence_of()","validates_size_of()","validates_uniqueness_of()","validates_with()","validates_with()","validators()","validators_on()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value=()","value=()","value=()","value=()","value=()","value=()","value?()","value?()","value?()","value?()","value?()","values()","values()","values()","values()","values()","values()","values()","values()","values()","values()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","variable_is_set?()","variable_kind()","variables()","variables()","variables=()","variables=()","varkind()","vartype()","vendor()","vendor()","vendor_javascripts()","vendor_stylesheets()","ver()","ver()","verb()","verbose()","verbose()","verbose()","verbose()","verbose=()","verbose=()","verbose?()","verified_request?()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify!()","verify_and_upgrade_legacy_signed_message()","verify_api_key()","verify_authenticity_token()","verify_callback=()","verify_files()","verify_gem()","verify_gem_file()","verify_gem_home()","verify_request?()","verify_result()","verify_signatures()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version=()","version=()","version=()","version=()","version_1_2()","version_1_2?()","versions()","versions()","vi_editing_mode()","vi_editing_mode?()","video_path()","video_tag()","video_url()","view_assigns()","view_cache_dependencies()","view_cache_dependency()","view_context()","view_context_class()","view_context_class()","view_paths()","view_paths=()","view_paths=()","view_renderer()","virtual_host()","visible?()","visible?()","visible?()","visible?()","visible_action?()","visit_array()","visit_bigdecimal()","visit_class()","visit_complex()","visit_date()","visit_datetime()","visit_exception()","visit_falseclass()","visit_float()","visit_hash()","visit_integer()","visit_module()","visit_nilclass()","visit_object()","visit_psych_nodes_alias()","visit_psych_nodes_alias()","visit_psych_nodes_document()","visit_psych_nodes_document()","visit_psych_nodes_mapping()","visit_psych_nodes_mapping()","visit_psych_nodes_scalar()","visit_psych_nodes_scalar()","visit_psych_nodes_sequence()","visit_psych_nodes_sequence()","visit_psych_nodes_stream()","visit_psych_nodes_stream()","visit_psych_omap()","visit_psych_set()","visit_range()","visit_rational()","visit_regexp()","visit_string()","visit_string()","visit_struct()","visit_symbol()","visit_time()","visit_trueclass()","voidcmd()","w3cdtf()","wait()","wait()","wait()","wait()","wait()","wait()","wait2()","wait?()","wait?()","wait_all_jobs_execution()","wait_readable()","wait_to_finish_all_process_controllers()","wait_until()","wait_while()","wait_writable()","wait_writable()","waitall()","waitfor()","waiting()","waiting_job?()","waiting_jobs()","waiting_jobs_exist?()","waitpid()","waitpid2()","wakeup()","warn()","warn()","warn()","warn()","warn()","warn()","warn()","warn()","warn?()","warn?()","watch()","watch_namespaces()","watchable_dirs()","watchable_files()","watching?()","wday()","wday()","weakref_alive?()","wednesday?()","wednesday?()","week()","week_field()","week_field_tag()","weeks()","weeks_ago()","weeks_since()","when_invoked()","when_writing()","where()","where_values_hash()","which_to_update()","whiny_nils=()","whitespace()","why_not_ok?()","win32_last_error()","win32_last_error()","win32_last_error=()","win_platform?()","windows?()","windows?()","windows?()","windows_stub_script()","winsize()","winsize=()","with()","with()","with_backend()","with_backend()","with_config()","with_connection()","with_default_scope()","with_defaults()","with_exclusive_scope()","with_fallbacks()","with_index()","with_indifferent_access()","with_indifferent_access()","with_indifferent_access()","with_local_cache()","with_lock()","with_object()","with_object()","with_options()","with_response()","with_scope_level()","with_transaction_returning_status()","with_warnings()","without_modules()","without_prepared_statement?()","word_wrap()","wordy()","wordy()","workspaces()","world_readable?()","world_readable?()","world_readable?()","world_readable?()","world_writable?()","world_writable?()","world_writable?()","world_writable?()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap_arg()","wrap_args()","wrap_parameters()","wrap_result()","wrap_with_namespace()","writable?()","writable?()","writable?()","writable?()","writable_real?()","writable_real?()","writable_real?()","writable_real?()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","writeto()","write_attribute()","write_bin()","write_build_info_file()","write_cache_file()","write_cdata()","write_cdata()","write_comment()","write_comment()","write_document()","write_document()","write_element()","write_element()","write_element()","write_entry()","write_entry()","write_fragment()","write_headers?()","write_i()","write_instruction()","write_nonblock()","write_nonblock()","write_options()","write_s()","write_service()","write_smime()","write_spec()","write_store_attribute()","write_style_sheet()","write_text()","write_text()","write_text()","write_with_substitution()","wtime2time()","xhr?()","xhtml()","xhtml()","xhtml=()","xlist()","xml()","xml()","xml=()","xmldecl()","xml_content=()","xml_content=()","xml_decl()","xml_getter()","xml_getter()","xml_http_request?()","xml_setter()","xml_setter()","xmldecl()","xmldecl()","xmldecl()","xmldecl()","xmldecl()","xmldecl()","xmldecl?()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmp()","xpath()","xpath()","xpath()","yaml()","yaml_as()","yaml_initialize()","yaml_tag()","yank_gem()","yday()","yday()","year()","year()","year()","year=()","years()","years_ago()","years_since()","yesterday()","yesterday()","yield()","yield()","yyaccept()","yyerrok()","yyerror()","yyparse()","zero()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zip()","zip()","zip()","zip?()","zip_file()","zlib_version()","zone()","zone()","zone()","zone=()","zone_offset()","zones_map()","|()","|()","|()","|()","|()","|()","|()","|()","|()","|()","~()","~()","~()","~()","~()"],"longSearchIndex":["Ruby basicobject#!()","Ruby delegator#!()","Ruby basicobject#!=()","Ruby delegator#!=()","Ruby object#!~()","Rails activemodel::name#!~()","Ruby bigdecimal#%()","Ruby bignum#%()","Ruby fixnum#%()","Ruby float#%()","Ruby numeric#%()","Ruby string#%()","Rails activesupport::safebuffer#%()","Ruby array#&()","Ruby bignum#&()","Ruby falseclass#&()","Ruby fixnum#&()","Ruby ipaddr#&()","Ruby nilclass#&()","Ruby process::status#&()","Ruby set#&()","Ruby trueclass#&()","Ruby array#*()","Ruby benchmark::tms#*()","Ruby bigdecimal#*()","Ruby bignum#*()","Ruby complex#*()","Ruby fixnum#*()","Ruby float#*()","Ruby matrix#*()","Ruby rake::filelist#*()","Ruby rational#*()","Ruby string#*()","Ruby vector#*()","Ruby bigdecimal#**()","Ruby bignum#**()","Ruby complex#**()","Ruby fixnum#**()","Ruby float#**()","Ruby matrix#**()","Ruby rational#**()","Ruby array#+()","Ruby benchmark::tms#+()","Ruby bigdecimal#+()","Ruby bignum#+()","Ruby complex#+()","Ruby dl::cptr#+()","Ruby date#+()","Ruby fiddle::pointer#+()","Ruby fixnum#+()","Ruby float#+()","Ruby matrix#+()","Ruby pathname#+()","Ruby rational#+()","Ruby set#+()","Ruby shell::filter#+()","Ruby string#+()","Ruby time#+()","Ruby uri::generic#+()","Ruby vector#+()","Rails activesupport::duration#+()","Rails activesupport::safebuffer#+()","Rails activesupport::timewithzone#+()","Rails rails::initializable::collection#+()","Ruby bigdecimal#+@()","Ruby dl::cptr#+@()","Ruby fiddle::pointer#+@()","Ruby numeric#+@()","Ruby array#-()","Ruby benchmark::tms#-()","Ruby bigdecimal#-()","Ruby bignum#-()","Ruby complex#-()","Ruby dl::cptr#-()","Ruby date#-()","Ruby fiddle::pointer#-()","Ruby fixnum#-()","Ruby float#-()","Ruby matrix#-()","Ruby rational#-()","Ruby set#-()","Ruby time#-()","Ruby uri::generic#-()","Ruby vector#-()","Rails activesupport::duration#-()","Rails activesupport::timewithzone#-()","Rails rails::engine::railties#-()","Rails time#-()","Ruby bigdecimal#-@()","Ruby bignum#-@()","Ruby complex#-@()","Ruby dl::cptr#-@()","Ruby fiddle::pointer#-@()","Ruby fixnum#-@()","Ruby float#-@()","Ruby numeric#-@()","Ruby benchmark::tms#/()","Ruby bigdecimal#/()","Ruby bignum#/()","Ruby complex#/()","Ruby fixnum#/()","Ruby float#/()","Ruby matrix#/()","Ruby openssl::bn#/()","Ruby rational#/()","Ruby vector#/()","Ruby bigdecimal#<()","Ruby bignum#<()","Ruby comparable#<()","Ruby fixnum#<()","Ruby float#<()","Ruby module#<()","Ruby set#<()","Ruby shell::filter#<()","Ruby array#<<()","Ruby bignum#<<()","Ruby csv#<<()","Ruby csv::row#<<()","Ruby csv::table#<<()","Ruby curses::window#<<()","Ruby date#<<()","Ruby digest::hmac#<<()","Ruby digest::instance#<<()","Ruby fixnum#<<()","Ruby gem::availableset#<<()","Ruby gem::sourcelist#<<()","Ruby io#<<()","Ruby io::writable#<<()","Ruby ipaddr#<<()","Ruby logger#<<()","Ruby net::internetmessageio::writeadapter#<<()","Ruby openssl::buffering#<<()","Ruby openssl::digest#<<()","Ruby openssl::hmac#<<()","Ruby psych::visitors::yamltree#<<()","Ruby queue#<<()","Ruby rdoc::markup::document#<<()","Ruby rdoc::markup::list#<<()","Ruby rdoc::markup::listitem#<<()","Ruby rdoc::markup::raw#<<()","Ruby rexml::document#<<()","Ruby rexml::light::node#<<()","Ruby rexml::output#<<()","Ruby rexml::parent#<<()","Ruby rexml::text#<<()","Ruby rexml::validation::choice#<<()","Ruby rexml::validation::state#<<()","Ruby rss::xml::element#<<()","Ruby set#<<()","Ruby sizedqueue#<<()","Ruby string#<<()","Ruby stringscanner#<<()","Ruby webrick::basiclog#<<()","Ruby webrick::httputils::formdata#<<()","Ruby zlib::deflate#<<()","Ruby zlib::gzipwriter#<<()","Ruby zlib::inflate#<<()","Rails activesupport::notifications::event#<<()","Rails activesupport::safebuffer#<<()","Rails rails::paths::path#<<()","Ruby bigdecimal#<=()","Ruby bignum#<=()","Ruby comparable#<=()","Ruby fixnum#<=()","Ruby float#<=()","Ruby module#<=()","Ruby set#<=()","Ruby array#<=>()","Ruby bigdecimal#<=>()","Ruby bignum#<=>()","Ruby dl::cptr#<=>()","Ruby date#<=>()","Ruby fiddle::pointer#<=>()","Ruby file::stat#<=>()","Ruby fixnum#<=>()","Ruby float#<=>()","Ruby gem::dependency#<=>()","Ruby gem::nametuple#<=>()","Ruby gem::source#<=>()","Ruby gem::version#<=>()","Ruby ipaddr#<=>()","Ruby irb::notifier::levelednotifier#<=>()","Ruby module#<=>()","Ruby numeric#<=>()","Ruby object#<=>()","Ruby openssl::x509::name#<=>()","Ruby pathname#<=>()","Ruby rdoc::alias#<=>()","Ruby rdoc::constant#<=>()","Ruby rdoc::context#<=>()","Ruby rdoc::extend#<=>()","Ruby rdoc::include#<=>()","Ruby rdoc::methodattr#<=>()","Ruby rexml::comment#<=>()","Ruby rexml::text#<=>()","Ruby rss::maker::itemsbase::itembase#<=>()","Ruby rake::earlytime#<=>()","Ruby rational#<=>()","Ruby string#<=>()","Ruby symbol#<=>()","Ruby time#<=>()","Ruby webrick::httpversion#<=>()","Rails activemodel::name#<=>()","Rails activerecord::connectionadapters::sqlite3adapter::version#<=>()","Rails activerecord::core#<=>()","Rails activesupport::timewithzone#<=>()","Rails activesupport::timezone#<=>()","Rails date#<=>()","Rails datetime#<=>()","Rails time#<=>()","Ruby array#==()","Ruby basicobject#==()","Ruby bigdecimal#==()","Ruby bignum#==()","Ruby csv::row#==()","Ruby csv::table#==()","Ruby comparable#==()","Ruby complex#==()","Ruby dl::cptr#==()","Ruby delegator#==()","Ruby digest::instance#==()","Ruby encoding::converter#==()","Ruby exception#==()","Ruby fiddle::pointer#==()","Ruby fixnum#==()","Ruby float#==()","Ruby gem::dependencyresolver::activationrequest#==()","Ruby gem::dependencyresolver::dependencyrequest#==()","Ruby gem::nametuple#==()","Ruby gem::platform#==()","Ruby gem::requirement#==()","Ruby gem::requirement#==()","Ruby gem::source#==()","Ruby gem::sourcelist#==()","Ruby hash#==()","Ruby ipaddr#==()","Ruby matchdata#==()","Ruby matrix#==()","Ruby method#==()","Ruby module#==()","Ruby openssl::bn#==()","Ruby openssl::pkey::ec::group#==()","Ruby openssl::pkey::ec::point#==()","Ruby openssl::ssl::session#==()","Ruby openstruct#==()","Ruby pathname#==()","Ruby process::status#==()","Ruby rdoc::attr#==()","Ruby rdoc::constant#==()","Ruby rdoc::context::section#==()","Ruby rdoc::markup::special#==()","Ruby rdoc::toplevel#==()","Ruby rexml::attribute#==()","Ruby rexml::comment#==()","Ruby rexml::instruction#==()","Ruby rexml::validation::event#==()","Ruby rexml::xmldecl#==()","Ruby rss::xml::element#==()","Ruby rake::filelist#==()","Ruby random#==()","Ruby range#==()","Ruby rational#==()","Ruby regexp#==()","Ruby set#==()","Ruby string#==()","Ruby struct#==()","Ruby symbol#==()","Ruby uri::generic#==()","Ruby unboundmethod#==()","Ruby vector#==()","Ruby win32::sspi::sspiresult#==()","Ruby xmlrpc::datetime#==()","Rails actiondispatch::middlewarestack::middleware#==()","Rails actionview::filesystemresolver#==()","Rails actionview::template::types::type#==()","Rails activemodel::name#==()","Rails activerecord::core#==()","Rails activerecord::reflection::macroreflection#==()","Rails activerecord::relation#==()","Rails activesupport::duration#==()","Rails mime::type#==()","Ruby bigdecimal#===()","Ruby bignum#===()","Ruby date#===()","Ruby fixnum#===()","Ruby float#===()","Ruby gem::platform#===()","Ruby gem::requirement#===()","Ruby gem::requirement#===()","Ruby ipaddr#===()","Ruby module#===()","Ruby object#===()","Ruby openssl::bn#===()","Ruby pathname#===()","Ruby proc#===()","Ruby range#===()","Ruby regexp#===()","Ruby rinda::drbobjecttemplate#===()","Ruby rinda::template#===()","Ruby rinda::templateentry#===()","Ruby string#===()","Ruby symbol#===()","Ruby systemcallerror::===()","Rails activemodel::name#===()","Rails activerecord::core::classmethods#===()","Rails activesupport::multibyte::unicode::unicodedatabase#===()","Rails mime::type#===()","Rails time::===()","Ruby gem::dependency#=~()","Ruby gem::platform#=~()","Ruby gem::requirement#=~()","Ruby gem::requirement#=~()","Ruby object#=~()","Ruby rexml::light::node#=~()","Ruby regexp#=~()","Ruby string#=~()","Ruby symbol#=~()","Rails activemodel::name#=~()","Rails activesupport::timezone#=~()","Rails mime::type#=~()","Ruby bigdecimal#>()","Ruby bignum#>()","Ruby comparable#>()","Ruby fixnum#>()","Ruby float#>()","Ruby module#>()","Ruby set#>()","Ruby shell::filter#>()","Ruby bigdecimal#>=()","Ruby bignum#>=()","Ruby comparable#>=()","Ruby fixnum#>=()","Ruby float#>=()","Ruby module#>=()","Ruby set#>=()","Ruby bignum#>>()","Ruby date#>>()","Ruby fixnum#>>()","Ruby ipaddr#>>()","Ruby process::status#>>()","Ruby rake::pseudostatus#>>()","Ruby shell::filter#>>()","Ruby acl","Ruby acl::aclentry","Ruby acl::acllist","Ruby net::pop3::apop()","Ruby argf","Ruby abbrev","Rails abstractcontroller","Rails abstractcontroller::base","Rails abstractcontroller::callbacks","Rails abstractcontroller::callbacks::classmethods","Rails abstractcontroller::collector","Rails abstractcontroller::doublerendererror","Rails abstractcontroller::helpers","Rails abstractcontroller::helpers::classmethods","Rails abstractcontroller::helpers::classmethods::missinghelpererror","Rails abstractcontroller::layouts","Rails abstractcontroller::layouts::classmethods","Rails abstractcontroller::railties","Rails abstractcontroller::railties::routeshelpers","Rails abstractcontroller::rendering","Rails abstractcontroller::rendering::classmethods","Rails abstractcontroller::translation","Rails abstractcontroller::urlfor","Rails abstractcontroller::urlfor::classmethods","Rails abstractcontroller::viewpaths","Rails abstractcontroller::viewpaths::classmethods","Rails actioncontroller","Rails actioncontroller::actioncontroller","Rails actioncontroller::actioncontroller::actioncontroller","Rails actioncontroller::base","Rails actioncontroller::caching","Rails actioncontroller::caching::classmethods","Rails actioncontroller::caching::configmethods","Rails actioncontroller::caching::fragments","Rails actioncontroller::conditionalget","Rails actioncontroller::conditionalget::classmethods","Rails actioncontroller::cookies","Rails actioncontroller::datastreaming","Rails actioncontroller::flash","Rails actioncontroller::flash::classmethods","Rails actioncontroller::forcessl","Rails actioncontroller::forcessl::classmethods","Rails actioncontroller::head","Rails actioncontroller::helpers","Rails actioncontroller::helpers::classmethods","Rails actioncontroller::hideactions","Rails actioncontroller::hideactions::classmethods","Rails actioncontroller::httpauthentication","Rails actioncontroller::httpauthentication::basic","Rails actioncontroller::httpauthentication::basic::controllermethods","Rails actioncontroller::httpauthentication::basic::controllermethods::classmethods","Rails actioncontroller::httpauthentication::digest","Rails actioncontroller::httpauthentication::digest::controllermethods","Rails actioncontroller::httpauthentication::token","Rails actioncontroller::httpauthentication::token::controllermethods","Rails actioncontroller::implicitrender","Rails actioncontroller::instrumentation","Rails actioncontroller::instrumentation::classmethods","Rails actioncontroller::live","Rails actioncontroller::live::response","Rails actioncontroller::live::response::header","Rails actioncontroller::logsubscriber","Rails actioncontroller::metal","Rails actioncontroller::middleware","Rails actioncontroller::middleware::actionmiddleware","Rails actioncontroller::mimeresponds","Rails actioncontroller::mimeresponds::classmethods","Rails actioncontroller::mimeresponds::collector","Rails actioncontroller::modelnaming","Rails actioncontroller::parametermissing","Rails actioncontroller::parameters","Rails actioncontroller::paramswrapper","Rails actioncontroller::paramswrapper::classmethods","Rails actioncontroller::rackdelegation","Rails actioncontroller::railties","Rails actioncontroller::railties::helpers","Rails actioncontroller::recordidentifier","Rails actioncontroller::redirecting","Rails actioncontroller::renderers","Rails actioncontroller::renderers::all","Rails actioncontroller::renderers::classmethods","Rails actioncontroller::rendering","Rails actioncontroller::requestforgeryprotection","Rails actioncontroller::requestforgeryprotection::classmethods","Rails actioncontroller::requestforgeryprotection::protectionmethods","Rails actioncontroller::requestforgeryprotection::protectionmethods::exception","Rails actioncontroller::requestforgeryprotection::protectionmethods::nullsession","Rails actioncontroller::requestforgeryprotection::protectionmethods::resetsession","Rails actioncontroller::rescue","Rails actioncontroller::responder","Rails actioncontroller::streaming","Rails actioncontroller::strongparameters","Rails actioncontroller::unpermittedparameters","Rails actioncontroller::urlfor","Rails actiondispatch","Rails actiondispatch::callbacks","Rails actiondispatch::cookies","Rails actiondispatch::cookies::chainedcookiejars","Rails actiondispatch::cookies::verifyandupgradelegacysignedmessage","Rails actiondispatch::debugexceptions","Rails actiondispatch::exceptionwrapper","Rails actiondispatch::filehandler","Rails actiondispatch::flash","Rails actiondispatch::flash::flashhash","Rails actiondispatch::http","Rails actiondispatch::http::cache","Rails actiondispatch::http::cache::request","Rails actiondispatch::http::cache::response","Rails actiondispatch::http::filterparameters","Rails actiondispatch::http::filterredirect","Rails actiondispatch::http::headers","Rails actiondispatch::http::mimenegotiation","Rails actiondispatch::http::parameterfilter","Rails actiondispatch::http::parameters","Rails actiondispatch::http::url","Rails actiondispatch::http::uploadedfile","Rails actiondispatch::illegalstateerror","Rails actiondispatch::middlewarestack","Rails actiondispatch::middlewarestack::middleware","Rails actiondispatch::paramsparser","Rails actiondispatch::paramsparser::parseerror","Rails actiondispatch::publicexceptions","Rails actiondispatch::railsentitystore","Rails actiondispatch::railsmetastore","Rails actiondispatch::reloader","Rails actiondispatch::remoteip","Rails actiondispatch::remoteip::getip","Rails actiondispatch::remoteip::ipspoofattackerror","Rails actiondispatch::request","Rails actiondispatch::requestid","Rails actiondispatch::response","Rails actiondispatch::routing","Rails actiondispatch::routing::consoleformatter","Rails actiondispatch::routing::htmltableformatter","Rails actiondispatch::routing::mapper","Rails actiondispatch::routing::mapper::base","Rails actiondispatch::routing::mapper::concerns","Rails actiondispatch::routing::mapper::httphelpers","Rails actiondispatch::routing::mapper::resources","Rails actiondispatch::routing::mapper::scoping","Rails actiondispatch::routing::pathredirect","Rails actiondispatch::routing::polymorphicroutes","Rails actiondispatch::routing::redirection","Rails actiondispatch::routing::routewrapper","Rails actiondispatch::routing::urlfor","Rails actiondispatch::ssl","Rails actiondispatch::session","Rails actiondispatch::session::abstractstore","Rails actiondispatch::session::cachestore","Rails actiondispatch::session::compatibility","Rails actiondispatch::session::cookiestore","Rails actiondispatch::session::memcachestore","Rails actiondispatch::session::stalesessioncheck","Rails actiondispatch::showexceptions","Rails actiondispatch::static","Rails actionmailer","Rails actionmailer::base","Rails actionmailer::collector","Rails actionmailer::deliverymethods","Rails actionmailer::deliverymethods::classmethods","Rails actionmailer::logsubscriber","Rails actionmailer::mailhelper","Rails actionpack","Rails actionview","Rails actionview::base","Rails actionview::context","Rails actionview::dependencytracker","Rails actionview::dependencytracker::erbtracker","Rails actionview::digestor","Rails actionview::filesystemresolver","Rails actionview::helpers","Rails actionview::helpers::activemodelhelper","Rails actionview::helpers::activemodelinstancetag","Rails actionview::helpers::assettaghelper","Rails actionview::helpers::asseturlhelper","Rails actionview::helpers::atomfeedhelper","Rails actionview::helpers::cachehelper","Rails actionview::helpers::capturehelper","Rails actionview::helpers::csrfhelper","Rails actionview::helpers::datehelper","Rails actionview::helpers::debughelper","Rails actionview::helpers::formbuilder","Rails actionview::helpers::formhelper","Rails actionview::helpers::formoptionshelper","Rails actionview::helpers::formtaghelper","Rails actionview::helpers::javascripthelper","Rails actionview::helpers::numberhelper","Rails actionview::helpers::numberhelper::invalidnumbererror","Rails actionview::helpers::outputsafetyhelper","Rails actionview::helpers::recordtaghelper","Rails actionview::helpers::renderinghelper","Rails actionview::helpers::sanitizehelper","Rails actionview::helpers::taghelper","Rails actionview::helpers::texthelper","Rails actionview::helpers::translationhelper","Rails actionview::helpers::urlhelper","Rails actionview::helpers::urlhelper::classmethods","Rails actionview::logsubscriber","Rails actionview::lookupcontext","Rails actionview::lookupcontext::detailscache","Rails actionview::lookupcontext::viewpaths","Rails actionview::modelnaming","Rails actionview::partialrenderer","Rails actionview::recordidentifier","Rails actionview::renderer","Rails actionview::resolver","Rails actionview::resolver::cache","Rails actionview::resolver::cache::smallcache","Rails actionview::resolver::path","Rails actionview::routingurlfor","Rails actionview::template","Rails actionview::template::handlers","Rails actionview::template::handlers::builder","Rails actionview::template::handlers::erb","Rails actionview::template::handlers::erubis","Rails actionview::template::handlers::raw","Rails actionview::template::types","Rails actionview::template::types::type","Rails activemodel","Rails activemodel::attributemethods","Rails activemodel::attributemethods::classmethods","Rails activemodel::callbacks","Rails activemodel::conversion","Rails activemodel::dirty","Rails activemodel::errors","Rails activemodel::forbiddenattributeserror","Rails activemodel::lint","Rails activemodel::lint::tests","Rails activemodel::missingattributeerror","Rails activemodel::model","Rails activemodel::name","Rails activemodel::naming","Rails activemodel::securepassword","Rails activemodel::securepassword::classmethods","Rails activemodel::securepassword::classmethods::instancemethodsonactivation","Rails activemodel::serialization","Rails activemodel::serializers","Rails activemodel::serializers::json","Rails activemodel::serializers::xml","Rails activemodel::strictvalidationfailed","Rails activemodel::translation","Rails activemodel::validations","Rails activemodel::validations::callbacks","Rails activemodel::validations::callbacks::classmethods","Rails activemodel::validations::classmethods","Rails activemodel::validations::helpermethods","Rails activemodel::validator","Rails activerecord","Rails activerecord::activerecorderror","Rails activerecord::adapternotfound","Rails activerecord::adapternotspecified","Rails activerecord::aggregations","Rails activerecord::aggregations::classmethods","Rails activerecord::associationrelation","Rails activerecord::associationtypemismatch","Rails activerecord::associations","Rails activerecord::associations::classmethods","Rails activerecord::associations::collectionproxy","Rails activerecord::attributeassignment","Rails activerecord::attributeassignmenterror","Rails activerecord::attributemethods","Rails activerecord::attributemethods::beforetypecast","Rails activerecord::attributemethods::classmethods","Rails activerecord::attributemethods::primarykey","Rails activerecord::attributemethods::primarykey::classmethods","Rails activerecord::attributemethods::query","Rails activerecord::attributemethods::read","Rails activerecord::attributemethods::read::classmethods","Rails activerecord::attributemethods::serialization","Rails activerecord::attributemethods::serialization::classmethods","Rails activerecord::attributemethods::timezoneconversion","Rails activerecord::attributemethods::timezoneconversion::classmethods","Rails activerecord::attributemethods::write","Rails activerecord::attributemethods::write::classmethods","Rails activerecord::autosaveassociation","Rails activerecord::autosaveassociation::classmethods","Rails activerecord::base","Rails activerecord::batches","Rails activerecord::calculations","Rails activerecord::callbacks","Rails activerecord::callbacks::classmethods","Rails activerecord::configurationerror","Rails activerecord::connectionadapters","Rails activerecord::connectionadapters::abstractadapter","Rails activerecord::connectionadapters::abstractadapter::schemacreation","Rails activerecord::connectionadapters::abstractmysqladapter","Rails activerecord::connectionadapters::abstractmysqladapter::schemacreation","Rails activerecord::connectionadapters::column","Rails activerecord::connectionadapters::column::format","Rails activerecord::connectionadapters::columndumper","Rails activerecord::connectionadapters::connectionhandler","Rails activerecord::connectionadapters::connectionmanagement","Rails activerecord::connectionadapters::connectionpool","Rails activerecord::connectionadapters::connectionpool::queue","Rails activerecord::connectionadapters::connectionpool::reaper","Rails activerecord::connectionadapters::databaselimits","Rails activerecord::connectionadapters::databasestatements","Rails activerecord::connectionadapters::mysql2adapter","Rails activerecord::connectionadapters::mysqladapter","Rails activerecord::connectionadapters::mysqladapter::fields","Rails activerecord::connectionadapters::mysqladapter::fields::boolean","Rails activerecord::connectionadapters::mysqladapter::fields::date","Rails activerecord::connectionadapters::mysqladapter::fields::datetime","Rails activerecord::connectionadapters::mysqladapter::fields::decimal","Rails activerecord::connectionadapters::mysqladapter::fields::float","Rails activerecord::connectionadapters::mysqladapter::fields::identity","Rails activerecord::connectionadapters::mysqladapter::fields::integer","Rails activerecord::connectionadapters::mysqladapter::fields::time","Rails activerecord::connectionadapters::mysqladapter::fields::type","Rails activerecord::connectionadapters::mysqladapter::statementpool","Rails activerecord::connectionadapters::postgresqladapter","Rails activerecord::connectionadapters::postgresqladapter::columndefinition","Rails activerecord::connectionadapters::postgresqladapter::columnmethods","Rails activerecord::connectionadapters::postgresqladapter::databasestatements","Rails activerecord::connectionadapters::postgresqladapter::oid","Rails activerecord::connectionadapters::postgresqladapter::oid::array","Rails activerecord::connectionadapters::postgresqladapter::oid::bit","Rails activerecord::connectionadapters::postgresqladapter::oid::boolean","Rails activerecord::connectionadapters::postgresqladapter::oid::bytea","Rails activerecord::connectionadapters::postgresqladapter::oid::cidr","Rails activerecord::connectionadapters::postgresqladapter::oid::date","Rails activerecord::connectionadapters::postgresqladapter::oid::decimal","Rails activerecord::connectionadapters::postgresqladapter::oid::float","Rails activerecord::connectionadapters::postgresqladapter::oid::hstore","Rails activerecord::connectionadapters::postgresqladapter::oid::identity","Rails activerecord::connectionadapters::postgresqladapter::oid::integer","Rails activerecord::connectionadapters::postgresqladapter::oid::json","Rails activerecord::connectionadapters::postgresqladapter::oid::money","Rails activerecord::connectionadapters::postgresqladapter::oid::point","Rails activerecord::connectionadapters::postgresqladapter::oid::range","Rails activerecord::connectionadapters::postgresqladapter::oid::time","Rails activerecord::connectionadapters::postgresqladapter::oid::timestamp","Rails activerecord::connectionadapters::postgresqladapter::oid::type","Rails activerecord::connectionadapters::postgresqladapter::oid::typemap","Rails activerecord::connectionadapters::postgresqladapter::oid::vector","Rails activerecord::connectionadapters::postgresqladapter::quoting","Rails activerecord::connectionadapters::postgresqladapter::referentialintegrity","Rails activerecord::connectionadapters::postgresqladapter::schemacreation","Rails activerecord::connectionadapters::postgresqladapter::schemastatements","Rails activerecord::connectionadapters::postgresqladapter::statementpool","Rails activerecord::connectionadapters::postgresqladapter::table","Rails activerecord::connectionadapters::postgresqladapter::tabledefinition","Rails activerecord::connectionadapters::postgresqladapter::utils","Rails activerecord::connectionadapters::postgresqlcolumn","Rails activerecord::connectionadapters::postgresqlcolumn::arrayparser","Rails activerecord::connectionadapters::postgresqlcolumn::cast","Rails activerecord::connectionadapters::querycache","Rails activerecord::connectionadapters::quoting","Rails activerecord::connectionadapters::sqlite3adapter","Rails activerecord::connectionadapters::sqlite3adapter::explainprettyprinter","Rails activerecord::connectionadapters::sqlite3adapter::statementpool","Rails activerecord::connectionadapters::sqlite3adapter::version","Rails activerecord::connectionadapters::schemacache","Rails activerecord::connectionadapters::schemastatements","Rails activerecord::connectionadapters::statementpool","Rails activerecord::connectionadapters::table","Rails activerecord::connectionadapters::tabledefinition","Rails activerecord::connectionadapters::transactionstate","Rails activerecord::connectionhandling","Rails activerecord::connectionnotestablished","Rails activerecord::connectiontimeouterror","Rails activerecord::core","Rails activerecord::core::classmethods","Rails activerecord::countercache","Rails activerecord::countercache::classmethods","Rails activerecord::dangerousattributeerror","Rails activerecord::dynamicmatchers","Rails activerecord::dynamicmatchers::findby","Rails activerecord::dynamicmatchers::findbybang","Rails activerecord::dynamicmatchers::finder","Rails activerecord::dynamicmatchers::method","Rails activerecord::explain","Rails activerecord::findermethods","Rails activerecord::fixtureset","Rails activerecord::immutablerelation","Rails activerecord::inheritance","Rails activerecord::inheritance::classmethods","Rails activerecord::integration","Rails activerecord::invalidforeignkey","Rails activerecord::irreversiblemigration","Rails activerecord::locking","Rails activerecord::locking::optimistic","Rails activerecord::locking::optimistic::classmethods","Rails activerecord::locking::pessimistic","Rails activerecord::logsubscriber","Rails activerecord::migration","Rails activerecord::migration::checkpending","Rails activerecord::migration::commandrecorder","Rails activerecord::migration::commandrecorder::straightreversions","Rails activerecord::migrationproxy","Rails activerecord::modelschema","Rails activerecord::modelschema::classmethods","Rails activerecord::multiparameterassignmenterrors","Rails activerecord::nestedattributes","Rails activerecord::nestedattributes::classmethods","Rails activerecord::nestedattributes::toomanyrecords","Rails activerecord::persistence","Rails activerecord::persistence::classmethods","Rails activerecord::preparedstatementinvalid","Rails activerecord::querycache","Rails activerecord::querycache::classmethods","Rails activerecord::querymethods","Rails activerecord::querymethods::wherechain","Rails activerecord::querying","Rails activerecord::readonlyrecord","Rails activerecord::readonlyattributes","Rails activerecord::readonlyattributes::classmethods","Rails activerecord::recordinvalid","Rails activerecord::recordnotdestroyed","Rails activerecord::recordnotfound","Rails activerecord::recordnotsaved","Rails activerecord::recordnotunique","Rails activerecord::reflection","Rails activerecord::reflection::classmethods","Rails activerecord::reflection::macroreflection","Rails activerecord::relation","Rails activerecord::result","Rails activerecord::rollback","Rails activerecord::sanitization","Rails activerecord::sanitization::classmethods","Rails activerecord::schema","Rails activerecord::schemamigration","Rails activerecord::scoping","Rails activerecord::scoping::classmethods","Rails activerecord::scoping::default","Rails activerecord::scoping::default::classmethods","Rails activerecord::scoping::named","Rails activerecord::scoping::named::classmethods","Rails activerecord::serialization","Rails activerecord::serializationtypemismatch","Rails activerecord::spawnmethods","Rails activerecord::staleobjecterror","Rails activerecord::statementcache","Rails activerecord::statementinvalid","Rails activerecord::store","Rails activerecord::store::classmethods","Rails activerecord::tasks","Rails activerecord::tasks::databasealreadyexists","Rails activerecord::tasks::databasenotsupported","Rails activerecord::tasks::databasetasks","Rails activerecord::testfixtures","Rails activerecord::testfixtures::classmethods","Rails activerecord::throwresult","Rails activerecord::timestamp","Rails activerecord::transactionisolationerror","Rails activerecord::transactions","Rails activerecord::transactions::classmethods","Rails activerecord::translation","Rails activerecord::unknownattributeerror","Rails activerecord::unknownprimarykey","Rails activerecord::validations","Rails activerecord::validations::classmethods","Rails activerecord::wrappeddatabaseexception","Rails activesupport","Rails activesupport::autoload","Rails activesupport::backtracecleaner","Rails activesupport::benchmarkable","Rails activesupport::bufferedlogger","Rails activesupport::cache","Rails activesupport::cache::filestore","Rails activesupport::cache::memcachestore","Rails activesupport::cache::memorystore","Rails activesupport::cache::nullstore","Rails activesupport::cache::store","Rails activesupport::cache::strategy","Rails activesupport::cache::strategy::localcache","Rails activesupport::cache::strategy::localcache::localstore","Rails activesupport::cachingkeygenerator","Rails activesupport::callbacks","Rails activesupport::callbacks::classmethods","Rails activesupport::concern","Rails activesupport::concurrency","Rails activesupport::concurrency::latch","Rails activesupport::configurable","Rails activesupport::configurable::classmethods","Rails activesupport::configurable::configuration","Rails activesupport::dependencies","Rails activesupport::dependencies::classcache","Rails activesupport::dependencies::watchstack","Rails activesupport::deprecation","Rails activesupport::deprecation::behavior","Rails activesupport::deprecation::deprecatedconstantproxy","Rails activesupport::deprecation::deprecatedinstancevariableproxy","Rails activesupport::deprecation::deprecatedobjectproxy","Rails activesupport::deprecation::methodwrapper","Rails activesupport::deprecation::reporting","Rails activesupport::deprecationexception","Rails activesupport::descendantstracker","Rails activesupport::duration","Rails activesupport::fileupdatechecker","Rails activesupport::filewatcher","Rails activesupport::filewatcher::backend","Rails activesupport::gzip","Rails activesupport::gzip::stream","Rails activesupport::hashwithindifferentaccess","Rails activesupport::hashwithindifferentaccess::hashwithindifferentaccess","Rails activesupport::inflector","Rails activesupport::inflector::inflections","Rails activesupport::inheritableoptions","Rails activesupport::json","Rails activesupport::json::encoding","Rails activesupport::json::encoding::circularreferenceerror","Rails activesupport::json::encoding::encoder","Rails activesupport::json::variable","Rails activesupport::keygenerator","Rails activesupport::logsubscriber","Rails activesupport::logger","Rails activesupport::logger::simpleformatter","Rails activesupport::messageencryptor","Rails activesupport::messageencryptor::invalidmessage","Rails activesupport::messageverifier","Rails activesupport::messageverifier::invalidsignature","Rails activesupport::multibyte","Rails activesupport::multibyte::chars","Rails activesupport::multibyte::unicode","Rails activesupport::multibyte::unicode::codepoint","Rails activesupport::multibyte::unicode::unicodedatabase","Rails activesupport::notifications","Rails activesupport::notifications::event","Rails activesupport::notifications::fanout","Rails activesupport::notifications::fanout::subscribers","Rails activesupport::notifications::fanout::subscribers::timed","Rails activesupport::notifications::instrumenter","Rails activesupport::numberhelper","Rails activesupport::orderedhash","Rails activesupport::orderedoptions","Rails activesupport::perthreadregistry","Rails activesupport::proxyobject","Rails activesupport::rescuable","Rails activesupport::rescuable::classmethods","Rails activesupport::safebuffer","Rails activesupport::safebuffer::safeconcaterror","Rails activesupport::stringinquirer","Rails activesupport::subscriber","Rails activesupport::taggedlogging","Rails activesupport::timewithzone","Rails activesupport::timezone","Rails activesupport::xmlconverter","Rails activesupport::xmlconverter::disallowedtype","Rails activesupport::xmlmini","Rails activesupport::xmlmini_libxmlsax","Rails activesupport::xmlmini_libxmlsax::hashbuilder","Rails activesupport::xmlmini_nokogirisax","Rails activesupport::xmlmini_nokogirisax::hashbuilder","Ruby addrinfo","Rails applicationhelper","Ruby argumenterror","Ruby array","Ruby kernel#array()","Rails array","Ruby base64","Ruby basicobject","Ruby basicsocket","Ruby benchmark","Rails benchmark","Ruby benchmark::tms","Ruby bigdecimal","Ruby kernel#bigdecimal()","Rails bigdecimal","Ruby bigmath","Ruby bignum","Ruby binding","Rails build","Ruby cgi","Ruby cgi::cookie","Ruby cgi::htmlextension","Ruby cgi::invalidencoding","Ruby cgi::queryextension","Ruby cgi::session","Ruby cgi::session::filestore","Ruby cgi::session::memorystore","Ruby cgi::session::nullstore","Ruby cgi::session::pstore","Ruby cmath","Ruby csv","Ruby object#csv()","Ruby csv::malformedcsverror","Ruby csv::row","Ruby csv::table","Ruby win32api#call()","Ruby ","Ruby ","Ruby ","Ruby ","Ruby class","Rails class","Ruby win32::registry::api#closekey()","Ruby comparable","Ruby complex","Ruby kernel#complex()","Ruby complex::compatible","Ruby compositepublisher","Ruby conditionvariable","Ruby continuation","Ruby coverage","Ruby win32::registry::api#createkey()","Ruby irb::currentcontext()","Ruby curses","Ruby curses::key","Ruby curses::mouseevent","Ruby curses::pad","Ruby curses::window","Ruby dbm","Ruby dbmerror","Ruby thread::debug()","Ruby thread::debug=()","Ruby debugger__","Ruby debugger__::thread","Ruby dl","Ruby dl::basictypes","Ruby dl::cfunc","Ruby dl::cparser","Ruby dl::cptr","Ruby dl::cstruct","Ruby dl::cstructbuilder","Ruby dl::cstructentity","Ruby dl::cunion","Ruby dl::cunionentity","Ruby dl::carriedfunction","Ruby dl::compositehandler","Ruby dl::dlerror","Ruby dl::dltypeerror","Ruby dl::fiddle","Ruby dl::function","Ruby dl::handle","Ruby dl::importer","Ruby dl::packinfo","Ruby dl::packer","Ruby dl::stack","Ruby dl::tempfunction","Ruby dl::valueutil","Ruby dl::win32types","Ruby drb","Ruby drb::drbarray","Ruby drb::drbbadscheme","Ruby drb::drbbaduri","Ruby drb::drbconn","Ruby drb::drbconnerror","Ruby drb::drberror","Ruby drb::drbidconv","Ruby drb::drbidconv","Ruby drb::drbmessage","Ruby drb::drbobject","Ruby drb::drbobject","Ruby drb::drbobservable","Ruby drb::drbprotocol","Ruby drb::drbremoteerror","Ruby drb::drbsslsocket","Ruby drb::drbsslsocket::sslconfig","Ruby drb::drbserver","Ruby drb::drbservernotfound","Ruby drb::drbtcpsocket","Ruby drb::drbunixsocket","Ruby drb::drbundumped","Ruby drb::drbundumped","Ruby drb::drbunknown","Ruby drb::drbunknownerror","Ruby drb::extserv","Ruby drb::extservmanager","Ruby drb::gw","Ruby drb::gwidconv","Ruby drb::timeridconv","Ruby drb::timeridconv::timerholder2","Ruby drb::timeridconv::timerholder2::invalidindexerror","Ruby data","Ruby date","Rails date","Rails dateandtime","Rails dateandtime::calculations","Ruby datetime","Rails datetime","Ruby object#delegateclass()","Ruby delegator","Ruby win32::registry::api#deletekey()","Ruby win32::registry::api#deletevalue()","Ruby digest","Ruby object#digest()","Ruby openssl::digest()","Ruby digest::base","Ruby digest::class","Ruby digest::hmac","Ruby digest::instance","Ruby digest::md5","Ruby digest::rmd160","Ruby digest::sha1","Ruby dir","Ruby bigmath#e()","Ruby e2mm","Ruby env","Ruby eoferror","Ruby erb","Rails erb","Ruby erb::defmethod","Ruby erb::util","Rails erb::util","Ruby curses::escdelay()","Ruby curses::escdelay=()","Ruby exception_type","Ruby exception_type","Ruby exception_type","Ruby exception_type","Ruby encoding","Ruby encoding::compatibilityerror","Ruby encoding::converter","Ruby encoding::converternotfounderror","Ruby encoding::invalidbytesequenceerror","Ruby encoding::undefinedconversionerror","Ruby encodingerror","Ruby english","Ruby win32::registry::api#enumkey()","Ruby win32::registry::api#enumvalue()","Ruby enumerable","Rails enumerable","Ruby enumerator","Ruby enumerator::generator","Ruby enumerator::lazy","Ruby enumerator::yielder","Ruby errno","Ruby errno::econnaborted","Ruby errno::econnreset","Ruby errno::eproto","Ruby etc","Ruby exception","Ruby exception2messagemapper","Ruby e2mm::fail()","Ruby e2mm::fail()","Ruby exception2messagemapper#fail()","Ruby exception2messagemapper#fail()","Ruby sync_m::err::fail()","Ruby sync_m::err::lockmodefailer::fail()","Ruby sync_m::err::unknownlocker::fail()","Ruby falseclass","Rails falseclass","Ruby fcntl","Ruby fiber","Ruby fibererror","Ruby fiddle","Ruby fiddle::basictypes","Ruby fiddle::cparser","Ruby fiddle::cstruct","Ruby fiddle::cstructbuilder","Ruby fiddle::cstructentity","Ruby fiddle::cunion","Ruby fiddle::cunionentity","Ruby fiddle::closure","Ruby fiddle::closure::blockcaller","Ruby fiddle::compositehandler","Ruby fiddle::dlerror","Ruby fiddle::function","Ruby fiddle::handle","Ruby fiddle::importer","Ruby fiddle::pointer","Ruby fiddle::win32types","Ruby file","Rails file","Ruby file::constants","Ruby file::stat","Ruby filetest","Ruby fileutils","Ruby fileutils::dryrun","Ruby fileutils::lowmethods","Ruby fileutils::nowrite","Ruby fileutils::streamutils_","Ruby fileutils::verbose","Ruby find","Ruby fixnum","Ruby float","Ruby kernel#float()","Rails float","Ruby floatdomainerror","Ruby win32::registry::api#flushkey()","Ruby foo","Ruby forwardable","Ruby gc","Ruby gc::profiler","Ruby gdbm","Ruby gdbmerror","Ruby gdbmfatalerror","Rails actiondispatch::request#get()","Ruby gserver","Ruby gem","Ruby gem::availableset","Ruby gem::command","Ruby gem::commandlineerror","Ruby gem::commandmanager","Ruby gem::commands","Ruby gem::commands::buildcommand","Ruby gem::commands::certcommand","Ruby gem::commands::checkcommand","Ruby gem::commands::cleanupcommand","Ruby gem::commands::contentscommand","Ruby gem::commands::dependencycommand","Ruby gem::commands::environmentcommand","Ruby gem::commands::fetchcommand","Ruby gem::commands::generateindexcommand","Ruby gem::commands::helpcommand","Ruby gem::commands::installcommand","Ruby gem::commands::listcommand","Ruby gem::commands::lockcommand","Ruby gem::commands::mirrorcommand","Ruby gem::commands::outdatedcommand","Ruby gem::commands::ownercommand","Ruby gem::commands::pristinecommand","Ruby gem::commands::pushcommand","Ruby gem::commands::querycommand","Ruby gem::commands::rdoccommand","Ruby gem::commands::searchcommand","Ruby gem::commands::servercommand","Ruby gem::commands::setupcommand","Ruby gem::commands::sourcescommand","Ruby gem::commands::specificationcommand","Ruby gem::commands::stalecommand","Ruby gem::commands::uninstallcommand","Ruby gem::commands::unpackcommand","Ruby gem::commands::updatecommand","Ruby gem::commands::whichcommand","Ruby gem::commands::yankcommand","Ruby gem::configfile","Ruby gem::configfile::rbconfig","Ruby gem::consoleui","Ruby gem::defaultuserinteraction","Ruby gem::dependency","Ruby gem::dependencyerror","Ruby gem::dependencyinstaller","Ruby gem::dependencylist","Ruby gem::dependencyremovalexception","Ruby gem::dependencyresolutionerror","Ruby gem::dependencyresolver","Ruby gem::dependencyresolver::apiset","Ruby gem::dependencyresolver::apispecification","Ruby gem::dependencyresolver::activationrequest","Ruby gem::dependencyresolver::currentset","Ruby gem::dependencyresolver::dependencyconflict","Ruby gem::dependencyresolver::dependencyrequest","Ruby gem::dependencyresolver::indexset","Ruby gem::dependencyresolver::indexspecification","Ruby gem::deprecate","Ruby gem::doctor","Ruby gem::documenterror","Ruby gem::endofyamlexception","Ruby gem::errorreason","Ruby gem::exception","Ruby gem::ext","Ruby gem::ext::builder","Ruby gem::ext::cmakebuilder","Ruby gem::ext::configurebuilder","Ruby gem::ext::extconfbuilder","Ruby gem::ext::rakebuilder","Ruby gem::filepermissionerror","Ruby gem::formatexception","Ruby gem::gemnotfoundexception","Ruby gem::gemnotinhomeexception","Ruby gem::gemrunner","Ruby gem::gemcutterutilities","Ruby gem::impossibledependencieserror","Ruby gem::indexer","Ruby gem::installerror","Ruby gem::installupdateoptions","Ruby gem::installer","Ruby gem::installer::extensionbuilderror","Ruby gem::invalidspecificationexception","Ruby gem::loaderror","Ruby gem::localremoteoptions","Ruby gem::mockgemui","Ruby gem::mockgemui::inputeoferror","Ruby gem::mockgemui::systemexitexception","Ruby gem::mockgemui::tty","Ruby gem::mockgemui::termerror","Ruby gem::nametuple","Ruby gem::noaliasyamltree","Ruby gem::operationnotsupportederror","Ruby gem::package","Ruby gem::package::digestio","Ruby gem::package::error","Ruby gem::package::formaterror","Ruby gem::package::nonseekableio","Ruby gem::package::old","Ruby gem::package::patherror","Ruby gem::package::tarheader","Ruby gem::package::tarinvaliderror","Ruby gem::package::tarreader","Ruby gem::package::tarreader::entry","Ruby gem::package::tarreader::unexpectedeof","Ruby gem::package::tarwriter","Ruby gem::package::tarwriter::boundedstream","Ruby gem::package::tarwriter::fileoverflow","Ruby gem::package::tarwriter::restrictedstream","Ruby gem::package::toolongfilename","Ruby gem::packagetask","Ruby gem::pathsupport","Ruby gem::platform","Ruby gem::platformmismatch","Ruby gem::rbconfig","Ruby gem::remoteerror","Ruby gem::remotefetcher","Ruby gem::remotefetcher::fetcherror","Ruby gem::remotefetcher::unknownhosterror","Ruby gem::remoteinstallationcancelled","Ruby gem::remoteinstallationskipped","Ruby gem::remotesourceexception","Ruby gem::requestset","Ruby gem::requestset::gemdepedencyapi","Ruby gem::requirement","Ruby gem::requirement::badrequirementerror","Ruby gem::security","Ruby gem::security::digest_algorithm","Ruby gem::security::exception","Ruby gem::security::key_algorithm","Ruby gem::security::policy","Ruby gem::security::signer","Ruby gem::security::trustdir","Ruby gem::server","Ruby gem::silentui","Ruby gem::source","Ruby gem::source::local","Ruby gem::source::specificfile","Ruby gem::sourcefetchproblem","Ruby gem::sourcelist","Ruby gem::specfetcher","Ruby gem::specificgemnotfoundexception","Ruby gem::specification","Ruby gem::streamui","Ruby gem::streamui::silentdownloadreporter","Ruby gem::streamui::silentprogressreporter","Ruby gem::streamui::simpleprogressreporter","Ruby gem::streamui::verbosedownloadreporter","Ruby gem::streamui::verboseprogressreporter","Ruby gem::systemexitexception","Ruby gem::text","Ruby gem::uninstaller","Ruby gem::unsatisfiabledepedencyerror","Ruby gem::userinteraction","Ruby gem::validator","Ruby gem::verificationerror","Ruby gem::version","Ruby gem::versionoption","Rails ","Rails ","Rails ","Ruby getoptlong","Ruby getoptlong::ambiguousoption","Ruby getoptlong::error","Ruby getoptlong::invalidoption","Ruby getoptlong::missingargument","Ruby getoptlong::needlessargument","Rails html","Rails html::fullsanitizer","Rails html::linksanitizer","Rails html::sanitizer","Rails html::selector","Rails html::tag","Rails html::whitelistsanitizer","Ruby httpmovedtemporarily","Ruby httpmultiplechoice","Ruby httprequesturitoolarge","Ruby hash","Ruby kernel#hash()","Rails hash","Ruby httpserver","Ruby httpserver::request","Ruby httpserver::response","Ruby httpserver::table","Ruby matrix::i()","Rails i18n","Rails i18n::railtie","Ruby io","Ruby io::waitreadable","Ruby io::waitwritable","Ruby io::readable","Ruby io::writable","Ruby ioerror","Ruby ipaddr","Ruby ipaddr::addressfamilyerror","Ruby ipaddr::error","Ruby ipaddr::invalidaddresserror","Ruby ipaddr::invalidprefixerror","Ruby ipsocket","Ruby irb","Ruby irb::abort","Ruby irb::context","Ruby irb::contextextender","Ruby irb::extendcommand","Ruby irb::extendcommand::changeworkspace","Ruby irb::extendcommand::currentworkingworkspace","Ruby irb::extendcommand::foreground","Ruby irb::extendcommand::fork","Ruby irb::extendcommand::help","Ruby irb::extendcommand::irbcommand","Ruby irb::extendcommand::jobs","Ruby irb::extendcommand::kill","Ruby irb::extendcommand::load","Ruby irb::extendcommand::nop","Ruby irb::extendcommand::popworkspace","Ruby irb::extendcommand::pushworkspace","Ruby irb::extendcommand::require","Ruby irb::extendcommand::source","Ruby irb::extendcommand::workspaces","Ruby irb::extendcommandbundle","Ruby irb::fileinputmethod","Ruby irb::frame","Ruby irb::inputmethod","Ruby irb::inspector","Ruby irb::irb","Ruby irb::irbloader","Ruby irb::jobmanager","Ruby irb::loadabort","Ruby irb::locale","Ruby irb::methodextender","Ruby irb::notifier","Ruby irb::notifier::abstractnotifier","Ruby irb::notifier::compositenotifier","Ruby irb::notifier::levelednotifier","Ruby irb::notifier::nomsgnotifier","Ruby irb::outputmethod","Ruby irb::readlineinputmethod","Ruby irb::slex","Ruby irb::slex::node","Ruby irb::stdioinputmethod","Ruby irb::stdiooutputmethod","Ruby irb::workspace","Ruby indexerror","Ruby integer","Ruby kernel#integer()","Rails integer","Ruby interrupt","Ruby json","Ruby json::circulardatastructure","Ruby json::ext","Ruby json::generatorerror","Ruby json::genericobject","Ruby json::jsonerror","Ruby json::missingunicodesupport","Ruby json::nestingerror","Ruby json::parsererror","Ruby json::unparsererror","Ruby jacobian","Ruby irb::jobmanager()","Ruby kconv","Ruby kernel","Rails kernel","Ruby keyerror","Ruby ","Ruby syslog::macros#log_mask()","Ruby syslog::macros#log_upto()","Ruby lusolve","Ruby loaderror","Rails loaderror","Ruby localjumperror","Ruby logger","Rails logger","Ruby logger::application","Ruby logger::formatter","Ruby logger::logdevice","Ruby logger::logdevice::logdevicemutex","Ruby logger::severity","Rails logger::simpleformatter","Rails loggersilence","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Ruby makemakefile","Ruby makemakefile::logging","Ruby makemakefile::rbconfig","Ruby makemakefile::string_or_failed_format","Ruby marshal","Rails marshal","Ruby matchdata","Ruby math","Ruby math::domainerror","Ruby matrix","Ruby matrix::eigenvaluedecomposition","Ruby matrix::lupdecomposition","Ruby method","Rails mime","Rails mime::mimes","Rails mime::nulltype","Rails mime::type","Ruby module","Rails module","Ruby monitor","Ruby monitormixin","Ruby monitormixin::conditionvariable","Ruby monitormixin::conditionvariable::timeout","Ruby mutex","Ruby mutex_m","Rails mysql","Rails mysql::result","Rails mysql::stmt","Rails mysql::time","Ruby ","Ruby ","Ruby ","Ruby ","Ruby ","Ruby nkf","Ruby nqxml","Ruby nqxml::node","Ruby nameerror","Rails nameerror","Ruby net","Ruby net::apop","Ruby net::apopsession","Ruby net::ftp","Ruby net::ftp::bufferedsocket","Ruby net::ftp::nullsocket","Ruby net::ftpconnectionerror","Ruby net::ftperror","Ruby net::ftppermerror","Ruby net::ftpprotoerror","Ruby net::ftpreplyerror","Ruby net::ftptemperror","Ruby net::http","Ruby net::http::copy","Ruby net::http::delete","Ruby net::http::get","Ruby net::http::head","Ruby net::http::lock","Ruby net::http::mkcol","Ruby net::http::move","Ruby net::http::options","Ruby net::http::patch","Ruby net::http::post","Ruby net::http::propfind","Ruby net::http::proppatch","Ruby net::http::put","Ruby net::http::trace","Ruby net::http::unlock","Ruby net::httpaccepted","Ruby net::httpbadgateway","Ruby net::httpbadrequest","Ruby net::httpbadresponse","Ruby net::httpclienterror","Ruby net::httpconflict","Ruby net::httpcontinue","Ruby net::httpcreated","Ruby net::httperror","Ruby net::httpexceptions","Ruby net::httpexpectationfailed","Ruby net::httpfaileddependency","Ruby net::httpfatalerror","Ruby net::httpforbidden","Ruby net::httpfound","Ruby net::httpgatewaytimeout","Ruby net::httpgenericrequest","Ruby net::httpgone","Ruby net::httpheader","Ruby net::httpheadersyntaxerror","Ruby net::httpinformation","Ruby net::httpinsufficientstorage","Ruby net::httpinternalservererror","Ruby net::httplengthrequired","Ruby net::httplocked","Ruby net::httpmethodnotallowed","Ruby net::httpmovedpermanently","Ruby net::httpmultistatus","Ruby net::httpmultiplechoices","Ruby net::httpnetworkauthenticationrequired","Ruby net::httpnocontent","Ruby net::httpnonauthoritativeinformation","Ruby net::httpnotacceptable","Ruby net::httpnotfound","Ruby net::httpnotimplemented","Ruby net::httpnotmodified","Ruby net::httpok","Ruby net::httppartialcontent","Ruby net::httppaymentrequired","Ruby net::httppreconditionfailed","Ruby net::httppreconditionrequired","Ruby net::httpproxyauthenticationrequired","Ruby net::httpredirection","Ruby net::httprequest","Ruby net::httprequestentitytoolarge","Ruby net::httprequestheaderfieldstoolarge","Ruby net::httprequesttimeout","Ruby net::httprequesturitoolong","Ruby net::httprequestedrangenotsatisfiable","Ruby net::httpresetcontent","Ruby net::httpresponse","Ruby net::httpretriableerror","Ruby net::httpseeother","Ruby net::httpservererror","Ruby net::httpserverexception","Ruby net::httpserviceunavailable","Ruby net::httpsuccess","Ruby net::httpswitchprotocol","Ruby net::httptemporaryredirect","Ruby net::httptoomanyrequests","Ruby net::httpunauthorized","Ruby net::httpunknownresponse","Ruby net::httpunprocessableentity","Ruby net::httpunsupportedmediatype","Ruby net::httpupgraderequired","Ruby net::httpuseproxy","Ruby net::httpversionnotsupported","Ruby net::imap","Ruby net::imap::badresponseerror","Ruby net::imap::bodytypeattachment","Ruby net::imap::bodytypebasic","Ruby net::imap::bodytypeextension","Ruby net::imap::bodytypemessage","Ruby net::imap::bodytypemultipart","Ruby net::imap::bodytypetext","Ruby net::imap::byeresponseerror","Ruby net::imap::crammd5authenticator","Ruby net::imap::dataformaterror","Ruby net::imap::digestmd5authenticator","Ruby net::imap::error","Ruby net::imap::flagcounterror","Ruby net::imap::loginauthenticator","Ruby net::imap::noresponseerror","Ruby net::imap::plainauthenticator","Ruby net::imap::responseerror","Ruby net::imap::responseparseerror","Ruby net::internetmessageio","Ruby net::internetmessageio::netprivate","Ruby net::internetmessageio::writeadapter","Ruby net::opentimeout","Ruby net::pop3","Ruby net::popauthenticationerror","Ruby net::popbadresponse","Ruby net::poperror","Ruby net::popmail","Ruby net::protoautherror","Ruby net::protocommanderror","Ruby net::protofatalerror","Ruby net::protoretriableerror","Ruby net::protoservererror","Ruby net::protosyntaxerror","Ruby net::protounknownerror","Ruby net::protocretryerror","Ruby net::protocolerror","Ruby net::readtimeout","Ruby net::smtp","Ruby net::smtp::response","Ruby net::smtpauthenticationerror","Ruby net::smtperror","Ruby net::smtpfatalerror","Ruby net::smtpserverbusy","Ruby net::smtpsyntaxerror","Ruby net::smtpunknownerror","Ruby net::smtpunsupportedcommand","Ruby net::telnet","Ruby newton","Ruby nilclass","Rails nilclass","Ruby nomemoryerror","Ruby nomethoderror","Ruby notimplementederror","Ruby numeric","Rails numeric","Ruby oleproperty","Ruby object","Rails object","Rails object::missingsourcefile","Ruby object::parseerror","Ruby object::timeouterror","Ruby objectspace","Ruby objectspace::weakmap","Ruby observable","Ruby open3","Ruby win32::registry::api#openkey()","Ruby openssl","Ruby openssl::asn1","Ruby openssl::asn1::asn1data","Ruby openssl::asn1::asn1error","Ruby openssl::asn1::constructive","Ruby openssl::asn1::objectid","Ruby openssl::asn1::primitive","Ruby openssl::bn","Ruby openssl::bnerror","Ruby openssl::buffering","Ruby openssl::cipher","Ruby openssl::cipher::cipher","Ruby openssl::cipher::ciphererror","Ruby openssl::config","Ruby openssl::configerror","Ruby openssl::digest","Ruby openssl::digest::digest","Ruby openssl::digest::digesterror","Ruby openssl::engine","Ruby openssl::engine::engineerror","Ruby openssl::hmac","Ruby openssl::hmacerror","Ruby openssl::netscape","Ruby openssl::netscape::spki","Ruby openssl::netscape::spkierror","Ruby openssl::ocsp","Ruby openssl::ocsp::basicresponse","Ruby openssl::ocsp::certificateid","Ruby openssl::ocsp::ocsperror","Ruby openssl::ocsp::request","Ruby openssl::ocsp::response","Ruby openssl::opensslerror","Ruby openssl::pkcs12","Ruby openssl::pkcs12::pkcs12error","Ruby openssl::pkcs5","Ruby openssl::pkcs5::pkcs5error","Ruby openssl::pkcs7","Ruby openssl::pkcs7::pkcs7error","Ruby openssl::pkcs7::recipientinfo","Ruby openssl::pkcs7::signerinfo","Ruby openssl::pkey","Ruby openssl::pkey::dh","Ruby openssl::pkey::dherror","Ruby openssl::pkey::dsa","Ruby openssl::pkey::dsaerror","Ruby openssl::pkey::ec","Ruby openssl::pkey::ec::group","Ruby openssl::pkey::ec::group::error","Ruby openssl::pkey::ec::point","Ruby openssl::pkey::ec::point::error","Ruby openssl::pkey::ecerror","Ruby openssl::pkey::pkey","Ruby openssl::pkey::pkeyerror","Ruby openssl::pkey::rsa","Ruby openssl::pkey::rsaerror","Ruby openssl::random","Ruby openssl::random::randomerror","Ruby openssl::ssl","Ruby openssl::ssl::nonblock","Ruby openssl::ssl::sslcontext","Ruby openssl::ssl::sslerror","Ruby openssl::ssl::sslserver","Ruby openssl::ssl::sslsocket","Ruby openssl::ssl::session","Ruby openssl::ssl::session::sessionerror","Ruby openssl::ssl::socketforwarder","Ruby openssl::x509","Ruby openssl::x509::attribute","Ruby openssl::x509::attributeerror","Ruby openssl::x509::crl","Ruby openssl::x509::crlerror","Ruby openssl::x509::certificate","Ruby openssl::x509::certificateerror","Ruby openssl::x509::extension","Ruby openssl::x509::extensionerror","Ruby openssl::x509::extensionfactory","Ruby openssl::x509::name","Ruby openssl::x509::name::rfc2253dn","Ruby openssl::x509::nameerror","Ruby openssl::x509::request","Ruby openssl::x509::requesterror","Ruby openssl::x509::revoked","Ruby openssl::x509::revokederror","Ruby openssl::x509::store","Ruby openssl::x509::storecontext","Ruby openssl::x509::storeerror","Ruby openstruct","Ruby openuri","Ruby openuri::httperror","Ruby openuri::httpredirect","Ruby openuri::meta","Ruby openuri::openread","Ruby optionparser","Ruby optionparser::ac","Ruby optionparser::acceptables","Ruby optionparser::ambiguousargument","Ruby optionparser::ambiguousoption","Ruby optionparser::arguable","Ruby optionparser::completinghash","Ruby optionparser::completion","Ruby optionparser::invalidargument","Ruby optionparser::invalidoption","Ruby optionparser::list","Ruby optionparser::missingargument","Ruby optionparser::needlessargument","Ruby optionparser::optionmap","Ruby optionparser::parseerror","Ruby optionparser::switch","Ruby optionparser::switch::noargument","Ruby optionparser::switch::optionalargument","Ruby optionparser::switch::placedargument","Ruby optionparser::switch::requiredargument","Ruby bigmath#pi()","Rails actiondispatch::request#post()","Ruby pp","Ruby pp::objectmixin","Ruby pp::ppmethods","Ruby pp::singleline","Ruby pstore","Ruby pstore::error","Ruby pty","Ruby pty::childexited","Ruby pathname","Ruby kernel#pathname()","Ruby rss::rss::channel::item::guid#permalink?()","Ruby prettyprint","Ruby prettyprint::breakable","Ruby prettyprint::group","Ruby prettyprint::groupqueue","Ruby prettyprint::singleline","Ruby prettyprint::text","Ruby prime","Ruby prime::eratosthenesgenerator","Ruby prime::eratosthenessieve","Ruby prime::generator23","Ruby prime::oldcompatibility","Ruby prime::pseudoprimegenerator","Ruby prime::trialdivision","Ruby prime::trialdivisiongenerator","Ruby proc","Ruby process","Rails process","Ruby process::gid","Ruby process::status","Rails process::status","Ruby process::sys","Ruby process::uid","Ruby profiler__","Ruby net::http::proxy()","Ruby psych","Ruby psych::badalias","Ruby psych::coder","Ruby psych::error","Ruby psych::exception","Ruby psych::handler","Ruby psych::handler::dumperoptions","Ruby psych::handlers","Ruby psych::handlers::recorder","Ruby psych::json","Ruby psych::json::stream","Ruby psych::json::treebuilder","Ruby psych::nodes","Ruby psych::nodes::alias","Ruby psych::nodes::document","Ruby psych::nodes::mapping","Ruby psych::nodes::node","Ruby psych::nodes::scalar","Ruby psych::nodes::sequence","Ruby psych::nodes::stream","Ruby psych::omap","Ruby psych::parser","Ruby psych::parser::mark","Ruby psych::privatetype","Ruby psych::scalarscanner","Ruby psych::set","Ruby psych::stream","Ruby psych::streaming","Ruby psych::syntaxerror","Ruby psych::treebuilder","Ruby psych::visitors","Ruby psych::visitors::depthfirst","Ruby psych::visitors::emitter","Ruby psych::visitors::jsontree","Ruby psych::visitors::toruby","Ruby psych::visitors::visitor","Ruby psych::visitors::yamltree","Rails qualifiedconstutils","Ruby win32::registry::api#queryinfokey()","Ruby win32::registry::api#queryvalue()","Ruby queue","Rails ","Rails ","Ruby rdoc","Ruby rdoc","Ruby rdoc::alias","Ruby rdoc::anonclass","Ruby rdoc::anymethod","Ruby rdoc::attr","Ruby rdoc::classmodule","Ruby rdoc::codeobject","Ruby rdoc::comment","Ruby rdoc::constant","Ruby rdoc::context","Ruby rdoc::context::section","Ruby rdoc::crossreference","Ruby rdoc::erbio","Ruby rdoc::erbpartial","Ruby rdoc::encoding","Ruby rdoc::error","Ruby rdoc::extend","Ruby rdoc::generator","Ruby rdoc::generator::darkfish","Ruby rdoc::generator::jsonindex","Ruby rdoc::generator::markup","Ruby rdoc::generator::ri","Ruby rdoc::ghostmethod","Ruby rdoc::include","Ruby rdoc::markdown","Ruby rdoc::markdown::literals","Ruby rdoc::markdown::literals::memoentry","Ruby rdoc::markdown::literals::parseerror","Ruby rdoc::markdown::literals::ruleinfo","Ruby rdoc::markdown::memoentry","Ruby rdoc::markdown::parseerror","Ruby rdoc::markdown::ruleinfo","Ruby rdoc::markup","Ruby rdoc::markup::attrchanger","Ruby rdoc::markup::attrspan","Ruby rdoc::markup::attributemanager","Ruby rdoc::markup::attributes","Ruby rdoc::markup::blankline","Ruby rdoc::markup::blockquote","Ruby rdoc::markup::document","Ruby rdoc::markup::formatter","Ruby rdoc::markup::hardbreak","Ruby rdoc::markup::include","Ruby rdoc::markup::indentedparagraph","Ruby rdoc::markup::list","Ruby rdoc::markup::listitem","Ruby rdoc::markup::paragraph","Ruby rdoc::markup::parser","Ruby rdoc::markup::parser::error","Ruby rdoc::markup::parser::parseerror","Ruby rdoc::markup::preprocess","Ruby rdoc::markup::raw","Ruby rdoc::markup::rule","Ruby rdoc::markup::special","Ruby rdoc::markup::toansi","Ruby rdoc::markup::tobs","Ruby rdoc::markup::tohtml","Ruby rdoc::markup::tohtmlcrossref","Ruby rdoc::markup::tohtmlsnippet","Ruby rdoc::markup::tojoinedparagraph","Ruby rdoc::markup::tolabel","Ruby rdoc::markup::tomarkdown","Ruby rdoc::markup::tordoc","Ruby rdoc::markup::totableofcontents","Ruby rdoc::markup::tottonly","Ruby rdoc::markup::verbatim","Ruby rdoc::metamethod","Ruby rdoc::methodattr","Ruby rdoc::normalclass","Ruby rdoc::normalmodule","Ruby rdoc::options","Ruby rdoc::parser","Ruby rdoc::parser::c","Ruby rdoc::parser::changelog","Ruby rdoc::parser::markdown","Ruby rdoc::parser::rd","Ruby rdoc::parser::ruby","Ruby rdoc::parser::rubytools","Ruby rdoc::parser::simple","Ruby rdoc::parser::text","Ruby rdoc::rd","Ruby rdoc::rd::blockparser","Ruby rdoc::rd::inline","Ruby rdoc::rd::inlineparser","Ruby rdoc::rdoc","Ruby rdoc::ri","Ruby rdoc::ri::driver","Ruby rdoc::ri::driver::error","Ruby rdoc::ri::driver::notfounderror","Ruby rdoc::ri::error","Ruby rdoc::ri::paths","Ruby rdoc::ri::paths::rbconfig","Ruby rdoc::require","Ruby rdoc::rubylex","Ruby rdoc::rubylex::error","Ruby rdoc::rubytoken","Ruby rdoc::rubytoken::tkerror","Ruby rdoc::rubytoken::tkid","Ruby rdoc::rubytoken::tkkw","Ruby rdoc::rubytoken::tknode","Ruby rdoc::rubytoken::tkopasgn","Ruby rdoc::rubytoken::tkop","Ruby rdoc::rubytoken::tksymbol","Ruby rdoc::rubytoken::tkunknownchar","Ruby rdoc::rubytoken::tkval","Ruby rdoc::rubytoken::token","Ruby rdoc::rubygemshook","Ruby rdoc::servlet","Ruby rdoc::singleclass","Ruby rdoc::stats","Ruby rdoc::stats::normal","Ruby rdoc::stats::quiet","Ruby rdoc::stats::verbose","Ruby rdoc::store","Ruby rdoc::store::error","Ruby rdoc::store::missingfileerror","Ruby rdoc::task","Ruby rdoc::text","Ruby rdoc::tokenstream","Ruby rdoc::tomdoc","Ruby rdoc::toplevel","Ruby ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Ruby ","Ruby ","Ruby ","Rails ","Ruby rexml","Ruby rexml::attlistdecl","Ruby rexml::attribute","Ruby rexml::attributes","Ruby rexml::cdata","Ruby rexml::child","Ruby rexml::comment","Ruby rexml::dtd","Ruby rexml::dtd::attlistdecl","Ruby rexml::dtd::elementdecl","Ruby rexml::dtd::entitydecl","Ruby rexml::dtd::notationdecl","Ruby rexml::dtd::parser","Ruby rexml::declaration","Ruby rexml::doctype","Ruby rexml::document","Ruby rexml::element","Ruby rexml::elementdecl","Ruby rexml::elements","Ruby rexml::encoding","Ruby rexml::entity","Ruby rexml::entityconst","Ruby rexml::externalentity","Ruby rexml::formatters","Ruby rexml::formatters::default","Ruby rexml::formatters::pretty","Ruby rexml::formatters::transitive","Ruby rexml::functions","Ruby rexml::iosource","Ruby rexml::instruction","Ruby rexml::light","Ruby rexml::light::node","Ruby rexml::namespace","Ruby rexml::node","Ruby rexml::notationdecl","Ruby rexml::output","Ruby rexml::parent","Ruby rexml::parseexception","Ruby rexml::parsers","Ruby rexml::parsers::baseparser","Ruby rexml::parsers::lightparser","Ruby rexml::parsers::pullevent","Ruby rexml::parsers::pullparser","Ruby rexml::parsers::sax2parser","Ruby rexml::parsers::streamparser","Ruby rexml::parsers::treeparser","Ruby rexml::parsers::ultralightparser","Ruby rexml::parsers::xpathparser","Ruby rexml::quickpath","Ruby rexml::sax2listener","Ruby rexml::source","Ruby rexml::sourcefactory","Ruby rexml::streamlistener","Ruby rexml::syncenumerator","Ruby rexml::text","Ruby rexml::undefinednamespaceexception","Ruby rexml::validation","Ruby rexml::validation::choice","Ruby rexml::validation::event","Ruby rexml::validation::interleave","Ruby rexml::validation::oneormore","Ruby rexml::validation::optional","Ruby rexml::validation::ref","Ruby rexml::validation::relaxng","Ruby rexml::validation::sequence","Ruby rexml::validation::state","Ruby rexml::validation::validationexception","Ruby rexml::validation::validator","Ruby rexml::validation::zeroormore","Ruby rexml::xmldecl","Ruby rexml::xmltokens","Ruby rexml::xpath","Ruby rexml::xpathparser","Ruby rss","Ruby rss::atom","Ruby rss::atom::commonmodel","Ruby rss::atom::contentmodel","Ruby rss::atom::contentmodel::classmethods","Ruby rss::atom::dateconstruct","Ruby rss::atom::duplicatelinkchecker","Ruby rss::atom::entry","Ruby rss::atom::feed","Ruby rss::atom::feed::author","Ruby rss::atom::feed::category","Ruby rss::atom::feed::contributor","Ruby rss::atom::feed::entry","Ruby rss::atom::feed::entry::content","Ruby rss::atom::feed::entry::published","Ruby rss::atom::feed::entry::source","Ruby rss::atom::feed::entry::summary","Ruby rss::atom::feed::generator","Ruby rss::atom::feed::icon","Ruby rss::atom::feed::id","Ruby rss::atom::feed::link","Ruby rss::atom::feed::logo","Ruby rss::atom::feed::rights","Ruby rss::atom::feed::subtitle","Ruby rss::atom::feed::title","Ruby rss::atom::feed::updated","Ruby rss::atom::personconstruct","Ruby rss::atom::personconstruct::email","Ruby rss::atom::personconstruct::name","Ruby rss::atom::personconstruct::uri","Ruby rss::atom::textconstruct","Ruby rss::atom::uricontentmodel","Ruby rss::basedublincoremodel","Ruby rss::baselistener","Ruby rss::basemodel","Ruby rss::baseparser","Ruby rss::basetrackbackmodel","Ruby rss::contentmodel","Ruby rss::conversionerror","Ruby rss::converter","Ruby rss::dublincoremodel","Ruby rss::dublincoremodel","Ruby rss::element","Ruby rss::error","Ruby rss::itunesbasemodel","Ruby rss::ituneschannelmodel","Ruby rss::ituneschannelmodel::itunescategory","Ruby rss::ituneschannelmodel::itunesimage","Ruby rss::ituneschannelmodel::itunesowner","Ruby rss::itunesitemmodel","Ruby rss::itunesitemmodel::itunesduration","Ruby rss::itunesmodelutils","Ruby rss::imagefaviconmodel","Ruby rss::imagefaviconmodel::imagefavicon","Ruby rss::imageitemmodel","Ruby rss::imageitemmodel::imageitem","Ruby rss::imagemodelutils","Ruby rss::invalidrsserror","Ruby rss::listenermixin","Ruby rss::maker","Ruby rss::maker::atom","Ruby rss::maker::atom::entry","Ruby rss::maker::atom::entry::channel","Ruby rss::maker::atom::entry::channel::cloud","Ruby rss::maker::atom::entry::channel::description","Ruby rss::maker::atom::entry::channel::generator","Ruby rss::maker::atom::entry::channel::skipdays","Ruby rss::maker::atom::entry::channel::skipdays::day","Ruby rss::maker::atom::entry::channel::skiphours","Ruby rss::maker::atom::entry::channel::skiphours::hour","Ruby rss::maker::atom::entry::image","Ruby rss::maker::atom::entry::items","Ruby rss::maker::atom::entry::items::item","Ruby rss::maker::atom::entry::textinput","Ruby rss::maker::atom::feed","Ruby rss::maker::atom::feed::channel","Ruby rss::maker::atom::feed::channel::categories","Ruby rss::maker::atom::feed::channel::categories::category","Ruby rss::maker::atom::feed::channel::cloud","Ruby rss::maker::atom::feed::channel::generator","Ruby rss::maker::atom::feed::channel::links","Ruby rss::maker::atom::feed::channel::links::link","Ruby rss::maker::atom::feed::channel::skipdays","Ruby rss::maker::atom::feed::channel::skipdays::day","Ruby rss::maker::atom::feed::channel::skiphours","Ruby rss::maker::atom::feed::channel::skiphours::hour","Ruby rss::maker::atom::feed::image","Ruby rss::maker::atom::feed::items","Ruby rss::maker::atom::feed::items::item","Ruby rss::maker::atom::feed::items::item::categories","Ruby rss::maker::atom::feed::items::item::categories::category","Ruby rss::maker::atom::feed::items::item::content","Ruby rss::maker::atom::feed::items::item::enclosure","Ruby rss::maker::atom::feed::items::item::guid","Ruby rss::maker::atom::feed::items::item::links","Ruby rss::maker::atom::feed::items::item::links::link","Ruby rss::maker::atom::feed::items::item::source","Ruby rss::maker::atom::feed::items::item::source::categories","Ruby rss::maker::atom::feed::items::item::source::categories::category","Ruby rss::maker::atom::feed::items::item::source::generator","Ruby rss::maker::atom::feed::items::item::source::icon","Ruby rss::maker::atom::feed::items::item::source::links","Ruby rss::maker::atom::feed::items::item::source::links::link","Ruby rss::maker::atom::feed::items::item::source::logo","Ruby rss::maker::atom::feed::textinput","Ruby rss::maker::atomcategory","Ruby rss::maker::atomgenerator","Ruby rss::maker::atomlink","Ruby rss::maker::atomlogo","Ruby rss::maker::atompersonconstructbase","Ruby rss::maker::atompersons","Ruby rss::maker::atomtextconstruct","Ruby rss::maker::atomtextconstructbase","Ruby rss::maker::atomtextconstructbase::ensurexmlcontent","Ruby rss::maker::base","Ruby rss::maker::channelbase","Ruby rss::maker::channelbase::authorsbase","Ruby rss::maker::channelbase::authorsbase::authorbase","Ruby rss::maker::channelbase::categoriesbase","Ruby rss::maker::channelbase::categoriesbase::categorybase","Ruby rss::maker::channelbase::cloudbase","Ruby rss::maker::channelbase::contributorsbase","Ruby rss::maker::channelbase::contributorsbase::contributorbase","Ruby rss::maker::channelbase::copyrightbase","Ruby rss::maker::channelbase::descriptionbase","Ruby rss::maker::channelbase::generatorbase","Ruby rss::maker::channelbase::itunescategories","Ruby rss::maker::channelbase::itunescategories::itunescategory","Ruby rss::maker::channelbase::itunesimage","Ruby rss::maker::channelbase::itunesowner","Ruby rss::maker::channelbase::linksbase","Ruby rss::maker::channelbase::linksbase::linkbase","Ruby rss::maker::channelbase::skipdaysbase","Ruby rss::maker::channelbase::skipdaysbase::daybase","Ruby rss::maker::channelbase::skiphoursbase","Ruby rss::maker::channelbase::skiphoursbase::hourbase","Ruby rss::maker::channelbase::titlebase","Ruby rss::maker::contentmodel","Ruby rss::maker::dublincoremodel","Ruby rss::maker::itunesbasemodel","Ruby rss::maker::ituneschannelmodel","Ruby rss::maker::ituneschannelmodel::itunescategoriesbase","Ruby rss::maker::ituneschannelmodel::itunescategoriesbase::itunescategorybase","Ruby rss::maker::ituneschannelmodel::itunesimagebase","Ruby rss::maker::ituneschannelmodel::itunesownerbase","Ruby rss::maker::itunesitemmodel","Ruby rss::maker::itunesitemmodel::itunesdurationbase","Ruby rss::maker::imagebase","Ruby rss::maker::imagefaviconmodel","Ruby rss::maker::imagefaviconmodel::imagefaviconbase","Ruby rss::maker::imageitemmodel","Ruby rss::maker::imageitemmodel::imageitembase","Ruby rss::maker::itemsbase","Ruby rss::maker::itemsbase::itembase","Ruby rss::maker::itemsbase::itembase::contentbase","Ruby rss::maker::itemsbase::itembase::descriptionbase","Ruby rss::maker::itemsbase::itembase::enclosurebase","Ruby rss::maker::itemsbase::itembase::guidbase","Ruby rss::maker::itemsbase::itembase::itunesduration","Ruby rss::maker::itemsbase::itembase::rightsbase","Ruby rss::maker::itemsbase::itembase::sourcebase","Ruby rss::maker::itemsbase::itembase::sourcebase::iconbase","Ruby rss::maker::itemsbase::itembase::sourcebase::logobase","Ruby rss::maker::itemsbase::itembase::sourcebase::rightsbase","Ruby rss::maker::itemsbase::itembase::sourcebase::subtitlebase","Ruby rss::maker::itemsbase::itembase::sourcebase::titlebase","Ruby rss::maker::itemsbase::itembase::titlebase","Ruby rss::maker::rss09","Ruby rss::maker::rss091","Ruby rss::maker::rss091::channel","Ruby rss::maker::rss091::image","Ruby rss::maker::rss091::items","Ruby rss::maker::rss091::items::item","Ruby rss::maker::rss091::textinput","Ruby rss::maker::rss092","Ruby rss::maker::rss092::channel","Ruby rss::maker::rss092::image","Ruby rss::maker::rss092::items","Ruby rss::maker::rss092::items::item","Ruby rss::maker::rss092::textinput","Ruby rss::maker::rss09::channel","Ruby rss::maker::rss09::channel::authors","Ruby rss::maker::rss09::channel::authors::author","Ruby rss::maker::rss09::channel::categories","Ruby rss::maker::rss09::channel::categories::category","Ruby rss::maker::rss09::channel::cloud","Ruby rss::maker::rss09::channel::contributors","Ruby rss::maker::rss09::channel::contributors::contributor","Ruby rss::maker::rss09::channel::copyright","Ruby rss::maker::rss09::channel::description","Ruby rss::maker::rss09::channel::generator","Ruby rss::maker::rss09::channel::links","Ruby rss::maker::rss09::channel::links::link","Ruby rss::maker::rss09::channel::skipdays","Ruby rss::maker::rss09::channel::skipdays::day","Ruby rss::maker::rss09::channel::skiphours","Ruby rss::maker::rss09::channel::skiphours::hour","Ruby rss::maker::rss09::channel::title","Ruby rss::maker::rss09::image","Ruby rss::maker::rss09::items","Ruby rss::maker::rss09::items::item","Ruby rss::maker::rss09::items::item::authors","Ruby rss::maker::rss09::items::item::authors::author","Ruby rss::maker::rss09::items::item::categories","Ruby rss::maker::rss09::items::item::categories::category","Ruby rss::maker::rss09::items::item::content","Ruby rss::maker::rss09::items::item::contributors","Ruby rss::maker::rss09::items::item::contributors::contributor","Ruby rss::maker::rss09::items::item::description","Ruby rss::maker::rss09::items::item::enclosure","Ruby rss::maker::rss09::items::item::guid","Ruby rss::maker::rss09::items::item::links","Ruby rss::maker::rss09::items::item::links::link","Ruby rss::maker::rss09::items::item::rights","Ruby rss::maker::rss09::items::item::source","Ruby rss::maker::rss09::items::item::source::authors","Ruby rss::maker::rss09::items::item::source::authors::author","Ruby rss::maker::rss09::items::item::source::categories","Ruby rss::maker::rss09::items::item::source::categories::category","Ruby rss::maker::rss09::items::item::source::contributors","Ruby rss::maker::rss09::items::item::source::contributors::contributor","Ruby rss::maker::rss09::items::item::source::generator","Ruby rss::maker::rss09::items::item::source::icon","Ruby rss::maker::rss09::items::item::source::links","Ruby rss::maker::rss09::items::item::source::links::link","Ruby rss::maker::rss09::items::item::source::logo","Ruby rss::maker::rss09::items::item::source::rights","Ruby rss::maker::rss09::items::item::source::subtitle","Ruby rss::maker::rss09::items::item::source::title","Ruby rss::maker::rss09::items::item::title","Ruby rss::maker::rss09::textinput","Ruby rss::maker::rss10","Ruby rss::maker::rss10::channel","Ruby rss::maker::rss10::channel::authors","Ruby rss::maker::rss10::channel::authors::author","Ruby rss::maker::rss10::channel::categories","Ruby rss::maker::rss10::channel::categories::category","Ruby rss::maker::rss10::channel::cloud","Ruby rss::maker::rss10::channel::contributors","Ruby rss::maker::rss10::channel::contributors::contributor","Ruby rss::maker::rss10::channel::copyright","Ruby rss::maker::rss10::channel::description","Ruby rss::maker::rss10::channel::generator","Ruby rss::maker::rss10::channel::links","Ruby rss::maker::rss10::channel::links::link","Ruby rss::maker::rss10::channel::skipdays","Ruby rss::maker::rss10::channel::skipdays::day","Ruby rss::maker::rss10::channel::skiphours","Ruby rss::maker::rss10::channel::skiphours::hour","Ruby rss::maker::rss10::channel::title","Ruby rss::maker::rss10::image","Ruby rss::maker::rss10::items","Ruby rss::maker::rss10::items::item","Ruby rss::maker::rss10::items::item::authors","Ruby rss::maker::rss10::items::item::authors::author","Ruby rss::maker::rss10::items::item::categories","Ruby rss::maker::rss10::items::item::categories::category","Ruby rss::maker::rss10::items::item::content","Ruby rss::maker::rss10::items::item::contributors","Ruby rss::maker::rss10::items::item::contributors::contributor","Ruby rss::maker::rss10::items::item::description","Ruby rss::maker::rss10::items::item::enclosure","Ruby rss::maker::rss10::items::item::guid","Ruby rss::maker::rss10::items::item::links","Ruby rss::maker::rss10::items::item::links::link","Ruby rss::maker::rss10::items::item::rights","Ruby rss::maker::rss10::items::item::source","Ruby rss::maker::rss10::items::item::source::authors","Ruby rss::maker::rss10::items::item::source::authors::author","Ruby rss::maker::rss10::items::item::source::categories","Ruby rss::maker::rss10::items::item::source::categories::category","Ruby rss::maker::rss10::items::item::source::contributors","Ruby rss::maker::rss10::items::item::source::contributors::contributor","Ruby rss::maker::rss10::items::item::source::generator","Ruby rss::maker::rss10::items::item::source::icon","Ruby rss::maker::rss10::items::item::source::links","Ruby rss::maker::rss10::items::item::source::links::link","Ruby rss::maker::rss10::items::item::source::logo","Ruby rss::maker::rss10::items::item::source::rights","Ruby rss::maker::rss10::items::item::source::subtitle","Ruby rss::maker::rss10::items::item::source::title","Ruby rss::maker::rss10::items::item::title","Ruby rss::maker::rss10::textinput","Ruby rss::maker::rss20","Ruby rss::maker::rss20::channel","Ruby rss::maker::rss20::channel::categories","Ruby rss::maker::rss20::channel::categories::category","Ruby rss::maker::rss20::channel::cloud","Ruby rss::maker::rss20::channel::generator","Ruby rss::maker::rss20::channel::skipdays","Ruby rss::maker::rss20::channel::skipdays::day","Ruby rss::maker::rss20::channel::skiphours","Ruby rss::maker::rss20::channel::skiphours::hour","Ruby rss::maker::rss20::image","Ruby rss::maker::rss20::items","Ruby rss::maker::rss20::items::item","Ruby rss::maker::rss20::items::item::authors","Ruby rss::maker::rss20::items::item::authors::author","Ruby rss::maker::rss20::items::item::categories","Ruby rss::maker::rss20::items::item::categories::category","Ruby rss::maker::rss20::items::item::enclosure","Ruby rss::maker::rss20::items::item::guid","Ruby rss::maker::rss20::items::item::source","Ruby rss::maker::rss20::items::item::source::links","Ruby rss::maker::rss20::items::item::source::links::link","Ruby rss::maker::rss20::textinput","Ruby rss::maker::rssbase","Ruby rss::maker::setupdefaultdate","Ruby rss::maker::setupdefaultlanguage","Ruby rss::maker::slashmodel","Ruby rss::maker::syndicationmodel","Ruby rss::maker::taxonomytopicmodel","Ruby rss::maker::taxonomytopicmodel::taxonomytopicsbase","Ruby rss::maker::taxonomytopicmodel::taxonomytopicsbase::taxonomytopicbase","Ruby rss::maker::taxonomytopicsmodel","Ruby rss::maker::taxonomytopicsmodel::taxonomytopicsbase","Ruby rss::maker::textinputbase","Ruby rss::maker::trackbackmodel","Ruby rss::maker::trackbackmodel::trackbackaboutsbase","Ruby rss::maker::trackbackmodel::trackbackaboutsbase::trackbackaboutbase","Ruby rss::maker::xmlstylesheets","Ruby rss::maker::xmlstylesheets::xmlstylesheet","Ruby rss::missingattributeerror","Ruby rss::missingtagerror","Ruby rss::nserror","Ruby rss::notavailablevalueerror","Ruby rss::notexceptedtagerror","Ruby rss::notexpectedtagerror","Ruby rss::notseterror","Ruby rss::notvalidxmlparser","Ruby rss::notwellformederror","Ruby rss::overlappedprefixerror","Ruby rss::parser","Ruby rss::rdf","Ruby rss::rdf::bag","Ruby rss::rdf::channel","Ruby rss::rdf::channel::image","Ruby rss::rdf::channel::items","Ruby rss::rdf::channel::textinput","Ruby rss::rdf::image","Ruby rss::rdf::item","Ruby rss::rdf::li","Ruby rss::rdf::li","Ruby rss::rdf::seq","Ruby rss::rdf::seq","Ruby rss::rdf::seq::li","Ruby rss::rdf::textinput","Ruby rss::rexmllikexmlparser","Ruby rss::rexmllistener","Ruby rss::rexmlparser","Ruby rss::rss09","Ruby rss::rss10","Ruby rss::rootelementmixin","Ruby rss::rss","Ruby rss::rss::channel","Ruby rss::rss::channel::cloud","Ruby rss::rss::channel::image","Ruby rss::rss::channel::item","Ruby rss::rss::channel::item::category","Ruby rss::rss::channel::item::enclosure","Ruby rss::rss::channel::item::guid","Ruby rss::rss::channel::item::source","Ruby rss::rss::channel::skipdays","Ruby rss::rss::channel::skipdays::day","Ruby rss::rss::channel::skiphours","Ruby rss::rss::channel::skiphours::hour","Ruby rss::rss::channel::textinput","Ruby rss::setupmaker","Ruby rss::slashmodel","Ruby rss::syndicationmodel","Ruby rss::taxonomytopicmodel","Ruby rss::taxonomytopicmodel::taxonomytopic","Ruby rss::taxonomytopicsmodel","Ruby rss::taxonomytopicsmodel::taxonomytopics","Ruby rss::taxonomytopicsmodel::taxonomytopics::bag","Ruby rss::toomuchtagerror","Ruby rss::trackbackmodel10","Ruby rss::trackbackmodel10::trackbackabout","Ruby rss::trackbackmodel10::trackbackping","Ruby rss::trackbackmodel20","Ruby rss::trackbackmodel20::trackbackabout","Ruby rss::trackbackmodel20::trackbackping","Ruby rss::trackbackutils","Ruby rss::unknownconversionmethoderror","Ruby rss::unknownconvertmethod","Ruby rss::unknowntagerror","Ruby rss::unsupportedmakerversionerror","Ruby rss::utils","Ruby rss::utils::csv","Ruby rss::utils::inheritedreader","Ruby rss::utils::yescleanother","Ruby rss::utils::yesother","Ruby rss::xml","Ruby rss::xml::element","Ruby rss::xmlparserlistener","Ruby rss::xmlparsernotfound","Ruby rss::xmlparserparser","Ruby rss::xmlscanlistener","Ruby rss::xmlscanparser","Ruby rss::xmlstylesheet","Ruby rss::xmlstylesheetmixin","Rails ","Rails ","Ruby racc","Ruby racc::cparseparams","Ruby racc::parseerror","Ruby racc::parseerror","Ruby racc::parser","Rails rails","Rails rails::api","Rails rails::api::apptask","Rails rails::api::edgetask","Rails rails::api::repotask","Rails rails::api::stabletask","Rails rails::api::task","Rails rails::appbuilder","Rails rails::apprailsloader","Rails rails::application","Rails rails::application::bootstrap","Rails rails::application::configuration","Rails rails::application::finisher","Rails rails::application::routesreloader","Rails rails::backtracecleaner","Rails rails::configuration","Rails rails::configuration::middlewarestackproxy","Rails rails::console","Rails rails::consolemethods","Rails rails::dbconsole","Rails rails::deprecatedconstant","Rails rails::engine","Rails rails::engine:::","Rails rails::engine::configuration","Rails rails::engine::railties","Rails rails::generators","Rails rails::generators::actions","Rails rails::generators::activemodel","Rails rails::generators::base","Rails rails::generators::mailergenerator","Rails rails::generators::migration","Rails rails::generators::migration::classmethods","Rails rails::generators::namedbase","Rails rails::info","Rails rails::initializable","Rails rails::initializable::classmethods","Rails rails::initializable::collection","Rails rails::initializable::initializer","Rails rails::paths","Rails rails::paths::path","Rails rails::paths::root","Rails rails::pluginbuilder","Rails rails::rack","Rails rails::rack::debugger","Rails rails::rack::logtailer","Rails rails::rack::logger","Rails rails::railtie","Rails rails::railtie::configurable","Rails rails::railtie::configurable::classmethods","Rails rails::railtie::configuration","Rails rails::server","Rails rails::server::options","Rails rails::version","Ruby e2mm::raise()","Ruby e2mm::raise()","Ruby exception2messagemapper#raise()","Ruby exception2messagemapper#raise()","Ruby rake","Ruby rake::altsystem","Ruby rake::application","Ruby rake::backtrace","Ruby rake::cloneable","Ruby rake::compositepublisher","Ruby rake::dsl","Ruby rake::defaultloader","Ruby rake::earlytime","Ruby rake::filecreationtask","Ruby rake::filelist","Ruby rake::filetask","Ruby rake::fileutilsext","Ruby rake::ftpfile","Ruby rake::ftpuploader","Ruby rake::invocationchain","Ruby rake::invocationchain::emptyinvocationchain","Ruby rake::invocationexceptionmixin","Ruby rake::makefileloader","Ruby rake::multitask","Ruby rake::namespace","Ruby rake::packagetask","Ruby rake::privatereader","Ruby rake::privatereader::classmethods","Ruby rake::pseudostatus","Ruby rake::rdoctask","Ruby rake::rakeapp","Ruby rake::rubyforgepublisher","Ruby rake::rulerecursionoverflowerror","Ruby rake::sshdirpublisher","Ruby rake::sshfilepublisher","Ruby rake::sshfreshdirpublisher","Ruby rake::task","Ruby rake::taskargumenterror","Ruby rake::taskarguments","Ruby rake::tasklib","Ruby rake::taskmanager","Ruby rake::traceoutput","Ruby rake::win32","Ruby rake::win32::win32homeerror","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Ruby random","Ruby range","Rails range","Ruby rangeerror","Ruby rational","Ruby kernel#rational()","Ruby rational::compatible","Ruby readline","Ruby regexp","Ruby regexperror","Rails requireprofiler","Ruby requirement","Ruby resolv","Ruby resolv::dns","Ruby resolv::dns::config","Ruby resolv::dns::config::nxdomain","Ruby resolv::dns::config::otherresolverror","Ruby resolv::dns::decodeerror","Ruby resolv::dns::encodeerror","Ruby resolv::dns::name","Ruby resolv::dns::query","Ruby resolv::dns::requester","Ruby resolv::dns::requester::requesterror","Ruby resolv::dns::resource","Ruby resolv::dns::resource::any","Ruby resolv::dns::resource::cname","Ruby resolv::dns::resource::domainname","Ruby resolv::dns::resource::generic","Ruby resolv::dns::resource::hinfo","Ruby resolv::dns::resource::in","Ruby resolv::dns::resource::in::a","Ruby resolv::dns::resource::in::aaaa","Ruby resolv::dns::resource::in::srv","Ruby resolv::dns::resource::in::wks","Ruby resolv::dns::resource::minfo","Ruby resolv::dns::resource::mx","Ruby resolv::dns::resource::ns","Ruby resolv::dns::resource::ptr","Ruby resolv::dns::resource::soa","Ruby resolv::dns::resource::txt","Ruby resolv::hosts","Ruby resolv::ipv4","Ruby resolv::ipv6","Ruby resolv::resolverror","Ruby resolv::resolvtimeout","Ruby rinda","Ruby rinda::drbobjecttemplate","Ruby rinda::invalidhashtuplekey","Ruby rinda::notifytemplateentry","Ruby rinda::requestcancelederror","Ruby rinda::requestexpirederror","Ruby rinda::rindaerror","Ruby rinda::ringfinger","Ruby rinda::ringprovider","Ruby rinda::ringserver","Ruby rinda::simplerenewer","Ruby rinda::template","Ruby rinda::templateentry","Ruby rinda::tuple","Ruby rinda::tuplebag","Ruby rinda::tuplebag::tuplebin","Ruby rinda::tupleentry","Ruby rinda::tuplespace","Ruby rinda::tuplespaceproxy","Ruby rinda::waittemplateentry","Ruby ripper","Ruby ripper::filter","Ruby rubylex","Ruby rubytoken","Ruby rubytoken::tkerror","Ruby rubytoken::tkid","Ruby rubytoken::tknode","Ruby rubytoken::tkopasgn","Ruby rubytoken::tkop","Ruby rubytoken::tkunknownchar","Ruby rubytoken::tkval","Ruby rubytoken::token","Ruby rubyvm","Ruby rubyvm::env","Ruby rubyvm::instructionsequence","Ruby runtimeerror","Ruby sdbm","Ruby sdbmerror","Ruby sockssocket","Ruby scanf","Ruby scanf::formatspecifier","Ruby scanf::formatstring","Ruby scripterror","Ruby securerandom","Ruby securityerror","Ruby set","Ruby win32::registry::api#setvalue()","Ruby shell","Ruby shell::appendfile","Ruby shell::appendio","Ruby shell::builtincommand","Ruby shell::cat","Ruby shell::commandprocessor","Ruby shell::concat","Ruby shell::echo","Ruby shell::error","Ruby shell::filter","Ruby shell::glob","Ruby shell::processcontroller","Ruby shell::systemcommand","Ruby shell::tee","Ruby shell::void","Ruby shellwords","Ruby signal","Ruby signalexception","Ruby simpledelegator","Ruby singleforwardable","Ruby singleton","Ruby sizedqueue","Ruby socket","Ruby socket::ancillarydata","Ruby socket::option","Ruby socket::udpsource","Ruby socketerror","Ruby sortedset","Rails sourceannotationextractor","Rails sourceannotationextractor::annotation","Ruby sshdirpublisher","Ruby sshfilepublisher","Ruby sshfreshdirpublisher","Ruby standarderror","Ruby stopiteration","Ruby string","Ruby irb::locale#string()","Ruby kernel#string()","Rails string","Ruby stringio","Ruby stringscanner","Ruby stringscanner::error","Ruby struct","Ruby symbol","Ruby symbol","Rails symbol","Ruby sync","Ruby sync_m","Ruby sync_m::err","Ruby sync_m::err::lockmodefailer","Ruby sync_m::err::unknownlocker","Ruby synchronizer","Ruby synchronizer_m","Ruby syntaxerror","Ruby sys","Ruby syslog","Ruby syslog::constants","Ruby syslog::facility","Ruby syslog::level","Ruby syslog::logger","Ruby syslog::logger::formatter","Ruby syslog::logger::severity","Ruby syslog::macros","Ruby syslog::option","Ruby systemcallerror","Ruby systemexit","Ruby systemstackerror","Ruby curses::tabsize()","Ruby curses::tabsize=()","Ruby tcpserver","Ruby tcpsocket","Ruby tsort","Ruby tsort::cyclic","Ruby tempfile","Ruby tempfile::remover","Ruby thwait","Ruby thread","Rails thread","Ruby thread::backtrace::location","Ruby threaderror","Ruby threadgroup","Ruby threadswait","Ruby time","Rails time","Ruby timeout","Ruby timeout::error","Ruby timeout::timeouterror","Ruby tracepoint","Ruby tracer","Ruby trueclass","Rails trueclass","Ruby typeerror","Ruby udpsocket","Ruby unixserver","Ruby unixsocket","Ruby uri","Rails uri","Ruby uri::badurierror","Ruby uri::error","Ruby uri::escape","Ruby uri::ftp","Ruby uri::generic","Ruby uri::http","Ruby uri::https","Ruby uri::invalidcomponenterror","Ruby uri::invalidurierror","Ruby uri::ldap","Ruby uri::ldaps","Ruby uri::mailto","Ruby uri::parser","Ruby uri::regexp","Ruby uri::regexp::pattern","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Ruby unboundmethod","Ruby vector","Ruby vector::zerovectorerror","Ruby webrick","Ruby webrick::accesslog","Ruby webrick::accesslog::accesslogerror","Ruby webrick::basiclog","Ruby webrick::cgi","Ruby webrick::config","Ruby webrick::cookie","Ruby webrick::daemon","Ruby webrick::genericserver","Ruby webrick::htmlutils","Ruby webrick::httpauth","Ruby webrick::httpauth::authenticator","Ruby webrick::httpauth::basicauth","Ruby webrick::httpauth::digestauth","Ruby webrick::httpauth::htdigest","Ruby webrick::httpauth::htgroup","Ruby webrick::httpauth::htpasswd","Ruby webrick::httpauth::proxyauthenticator","Ruby webrick::httpauth::proxybasicauth","Ruby webrick::httpauth::proxydigestauth","Ruby webrick::httpauth::userdb","Ruby webrick::httpproxyserver","Ruby webrick::httprequest","Ruby webrick::httpresponse","Ruby webrick::httpserver","Ruby webrick::httpservererror","Ruby webrick::httpservlet","Ruby webrick::httpservlet::abstractservlet","Ruby webrick::httpservlet::cgihandler","Ruby webrick::httpservlet::defaultfilehandler","Ruby webrick::httpservlet::erbhandler","Ruby webrick::httpservlet::filehandler","Ruby webrick::httpservlet::httpservleterror","Ruby webrick::httpservlet::prochandler","Ruby webrick::httpstatus","Ruby webrick::httpstatus::clienterror","Ruby webrick::httpstatus::eoferror","Ruby webrick::httpstatus::error","Ruby webrick::httpstatus::info","Ruby webrick::httpstatus::redirect","Ruby webrick::httpstatus::servererror","Ruby webrick::httpstatus::status","Ruby webrick::httpstatus::success","Ruby webrick::httputils","Ruby webrick::httputils::formdata","Ruby webrick::httpversion","Ruby webrick::log","Ruby webrick::servererror","Ruby webrick::simpleserver","Ruby webrick::utils","Ruby webrick::utils::timeouthandler","Ruby win32ole","Ruby win32ole::variant","Ruby win32oleruntimeerror","Ruby win32ole_event","Ruby win32ole_method","Ruby win32ole_param","Ruby win32ole_type","Ruby win32ole_typelib","Ruby win32ole_variable","Ruby win32ole_variant","Ruby weakref","Ruby weakref::referror","Ruby win32","Ruby win32::registry","Ruby win32::registry::api","Ruby win32::registry::constants","Ruby win32::registry::error","Ruby win32::registry::error::kernel32","Ruby win32::registry::predefinedkey","Ruby win32::resolv","Ruby win32::resolv::kernel32","Ruby win32::sspi","Ruby win32::sspi::api","Ruby win32::sspi::identity","Ruby win32::sspi::negotiateauth","Ruby win32::sspi::sspiresult","Ruby win32::sspi::securitybuffer","Ruby win32::sspi::securityhandle","Ruby win32::sspi::timestamp","Ruby win32api","Ruby xml","Ruby xml::parser","Ruby xmlencoding_ja","Ruby xmlencoding_ja::sjishandler","Ruby xmlrpc","Ruby xmlrpc::base64","Ruby xmlrpc::basicserver","Ruby xmlrpc::cgiserver","Ruby xmlrpc::client","Ruby xmlrpc::client::proxy","Ruby xmlrpc::config","Ruby xmlrpc::convert","Ruby xmlrpc::create","Ruby xmlrpc::datetime","Ruby xmlrpc::faultexception","Ruby xmlrpc::marshal","Ruby xmlrpc::marshallable","Ruby xmlrpc::modrubyserver","Ruby xmlrpc::parsecontenttype","Ruby xmlrpc::parserwriterchoosemixin","Ruby xmlrpc::server","Ruby xmlrpc::service","Ruby xmlrpc::service::basicinterface","Ruby xmlrpc::service::interface","Ruby xmlrpc::service::publicinstancemethodsinterface","Ruby xmlrpc::webrickservlet","Ruby xmlrpc::xmlparser","Ruby xmlrpc::xmlparser::abstractstreamparser","Ruby xmlrpc::xmlparser::abstracttreeparser","Ruby xmlrpc::xmlparser::nqxmlparser","Ruby xmlrpc::xmlparser::nqxmlstreamparser","Ruby xmlrpc::xmlparser::nqxmlstreamparser::xmlrpcparser","Ruby xmlrpc::xmlparser::nqxmltreeparser","Ruby xmlrpc::xmlparser::rexmlstreamparser","Ruby xmlrpc::xmlparser::rexmlstreamparser::streamlistener","Ruby xmlrpc::xmlparser::streamparsermixin","Ruby xmlrpc::xmlparser::xmlparser","Ruby xmlrpc::xmlparser::xmlscanstreamparser","Ruby xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser","Ruby xmlrpc::xmlparser::xmlstreamparser","Ruby xmlrpc::xmlparser::xmltreeparser","Ruby xmlrpc::xmlwriter","Ruby xmlrpc::xmlwriter::abstract","Ruby xmlrpc::xmlwriter::simple","Ruby xmlrpc::xmlwriter::xmlparser","Ruby xmp","Ruby xmp::stringinputmethod","Ruby yaml","Ruby yaml::dbm","Ruby yaml::store","Ruby yaml::syck","Ruby yaml::syck::defaultkey","Ruby zerodivisionerror","Ruby zlib","Ruby zlib::buferror","Ruby zlib::dataerror","Ruby zlib::deflate","Ruby zlib::error","Ruby zlib::gzipfile","Ruby zlib::gzipfile::crcerror","Ruby zlib::gzipfile::error","Ruby zlib::gzipfile::lengtherror","Ruby zlib::gzipfile::nofooter","Ruby zlib::gzipreader","Ruby zlib::gzipwriter","Ruby zlib::inflate","Ruby zlib::memerror","Ruby zlib::needdict","Ruby zlib::streamend","Ruby zlib::streamerror","Ruby zlib::versionerror","Ruby zlib::zstream","Ruby array::[]()","Ruby array#[]()","Ruby bignum#[]()","Ruby cgi::queryextension#[]()","Ruby cgi::session#[]()","Ruby csv::row#[]()","Ruby csv::table#[]()","Ruby continuation#[]()","Ruby dbm#[]()","Ruby dl::cfunc#[]()","Ruby dl::cptr#[]()","Ruby dl::cptr::[]()","Ruby dl::cstructentity#[]()","Ruby dl::compositehandler#[]()","Ruby dl::handle#[]()","Ruby dl::handle::[]()","Ruby dl::importer#[]()","Ruby dl::packer::[]()","Ruby dl::stack::[]()","Ruby drb::drbsslsocket::sslconfig#[]()","Ruby drb::gw#[]()","Ruby dir::[]()","Ruby env::[]()","Ruby fiddle::cstructentity#[]()","Ruby fiddle::compositehandler#[]()","Ruby fiddle::handle#[]()","Ruby fiddle::handle::[]()","Ruby fiddle::importer#[]()","Ruby fiddle::pointer::[]()","Ruby fiddle::pointer#[]()","Ruby fixnum#[]()","Ruby gdbm#[]()","Ruby gem::commandmanager#[]()","Ruby gem::configfile#[]()","Ruby hash#[]()","Ruby hash::[]()","Ruby httpserver::table#[]()","Ruby json#[]()","Ruby json::genericobject#[]()","Ruby matchdata#[]()","Ruby matrix::[]()","Ruby matrix#[]()","Ruby method#[]()","Ruby nqxml::node#[]()","Ruby net::httpheader#[]()","Ruby oleproperty#[]()","Ruby objectspace::weakmap#[]()","Ruby openssl::config#[]()","Ruby openstruct#[]()","Ruby pstore#[]()","Ruby prime::trialdivision#[]()","Ruby proc#[]()","Ruby psych::coder#[]()","Ruby rdoc::markup::attrspan#[]()","Ruby rexml::attlistdecl#[]()","Ruby rexml::light::node#[]()","Ruby rexml::parent#[]()","Ruby rexml::parsers::pullevent#[]()","Ruby rss::maker#[]()","Ruby rss::xml::element#[]()","Ruby rake::namespace#[]()","Ruby rake::task#[]()","Ruby rake::taskarguments#[]()","Ruby rake::taskmanager#[]()","Ruby rinda::tuple#[]()","Ruby rinda::tupleentry#[]()","Ruby sdbm#[]()","Ruby set::[]()","Ruby shell::commandprocessor#[]()","Ruby string#[]()","Ruby stringscanner#[]()","Ruby struct#[]()","Ruby symbol#[]()","Ruby thread#[]()","Ruby vector::[]()","Ruby vector#[]()","Ruby webrick::cgi#[]()","Ruby webrick::genericserver#[]()","Ruby webrick::httprequest#[]()","Ruby webrick::httpresponse#[]()","Ruby webrick::httpstatus::[]()","Ruby webrick::httputils::formdata#[]()","Ruby win32ole#[]()","Ruby win32ole_variant#[]()","Ruby win32::registry#[]()","Ruby yaml::dbm#[]()","Rails actioncontroller::parameters#[]()","Rails actiondispatch::flash::flashhash#[]()","Rails actiondispatch::http::headers#[]()","Rails actiondispatch::middlewarestack#[]()","Rails actionview::template::types::[]()","Rails actionview::template::types::type::[]()","Rails activemodel::errors#[]()","Rails activerecord::attributemethods#[]()","Rails activerecord::connectionadapters::mysqladapter::statementpool#[]()","Rails activerecord::connectionadapters::postgresqladapter::oid::typemap#[]()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#[]()","Rails activerecord::connectionadapters::sqlite3adapter::statementpool#[]()","Rails activerecord::connectionadapters::statementpool#[]()","Rails activerecord::connectionadapters::tabledefinition#[]()","Rails activerecord::fixtureset#[]()","Rails activerecord::result#[]()","Rails activesupport::dependencies::classcache#[]()","Rails activesupport::hashwithindifferentaccess::[]()","Rails activesupport::hashwithindifferentaccess::[]()","Rails activesupport::orderedoptions#[]()","Rails activesupport::safebuffer#[]()","Rails activesupport::timezone::[]()","Rails mime::[]()","Rails rails::paths::root#[]()","Ruby array#[]=()","Ruby cgi::session#[]=()","Ruby csv::row#[]=()","Ruby csv::table#[]=()","Ruby dbm#[]=()","Ruby dl::cptr#[]=()","Ruby dl::cstructentity#[]=()","Ruby drb::gw#[]=()","Ruby env::[]=()","Ruby fiddle::cstructentity#[]=()","Ruby fiddle::pointer#[]=()","Ruby gdbm#[]=()","Ruby gem::configfile#[]=()","Ruby hash#[]=()","Ruby httpserver::table#[]=()","Ruby json::genericobject#[]=()","Ruby net::httpheader#[]=()","Ruby oleproperty#[]=()","Ruby objectspace::weakmap#[]=()","Ruby openssl::config#[]=()","Ruby openstruct#[]=()","Ruby pstore#[]=()","Ruby psych::coder#[]=()","Ruby rexml::light::node#[]=()","Ruby rexml::parent#[]=()","Ruby rexml::xpathparser#[]=()","Ruby rss::xml::element#[]=()","Ruby sdbm#[]=()","Ruby string#[]=()","Ruby struct#[]=()","Ruby thread#[]=()","Ruby webrick::httpresponse#[]=()","Ruby win32ole#[]=()","Ruby win32ole_variant#[]=()","Ruby win32::registry#[]=()","Ruby yaml::dbm#[]=()","Rails actiondispatch::flash::flashhash#[]=()","Rails actiondispatch::http::headers#[]=()","Rails activemodel::errors#[]=()","Rails activerecord::attributemethods#[]=()","Rails activerecord::connectionadapters::mysqladapter::statementpool#[]=()","Rails activerecord::connectionadapters::postgresqladapter::oid::typemap#[]=()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#[]=()","Rails activerecord::connectionadapters::sqlite3adapter::statementpool#[]=()","Rails activerecord::connectionadapters::statementpool#[]=()","Rails activerecord::fixtureset#[]=()","Rails activesupport::hashwithindifferentaccess#[]=()","Rails activesupport::hashwithindifferentaccess#[]=()","Rails activesupport::orderedoptions#[]=()","Rails rails::paths::root#[]=()","Ruby bignum#^()","Ruby falseclass#^()","Ruby fixnum#^()","Ruby nilclass#^()","Ruby set#^()","Ruby trueclass#^()","Ruby rss::rss::channel::item::guid#_permalink?()","Rails activesupport::callbacks::classmethods#__callback_runner_name()","Rails activesupport::callbacks::classmethods#__callback_runner_name_cache()","Ruby kernel#__callee__()","Ruby kernel#__dir__()","Ruby drb::drbobject#__drbref()","Ruby drb::drbobject#__drbref()","Ruby drb::drbobject#__drburi()","Ruby drb::drbobject#__drburi()","Ruby irb::workspace#__evaluate__()","Ruby irb::context#__exit__()","Rails activesupport::callbacks::classmethods#__generate_callback_runner_name()","Ruby delegator#__getobj__()","Ruby simpledelegator#__getobj__()","Ruby basicobject#__id__()","Ruby kernel#__method__()","Rails activesupport::callbacks::classmethods#__reset_runner()","Ruby basicobject#__send__()","Ruby delegator#__setobj__()","Ruby simpledelegator#__setobj__()","Rails activerecord::readonlyattributes#_attr_readonly()","Rails activesupport::xmlmini#_dasherize()","Rails activesupport::bufferedlogger::_deprecation_warning()","Ruby bigdecimal#_dump()","Ruby drb::drbobject#_dump()","Ruby drb::drbobject#_dump()","Ruby gem::specification#_dump()","Ruby singleton#_dump()","Ruby win32::registry#_dump()","Rails time#_dump()","Rails time#_dump_without_zone()","Rails activesupport::orderedoptions#_get()","Ruby win32ole#_getproperty()","Rails actioncontroller::renderers#_handle_render_options()","Ruby date::_httpdate()","Ruby objectspace::_id2ref()","Rails abstractcontroller::callbacks::classmethods#_insert_callbacks()","Ruby win32ole#_invoke()","Ruby date::_iso8601()","Ruby date::_jisx0301()","Rails actionview::context#_layout_for()","Rails actionview::helpers::renderinghelper#_layout_for()","Ruby bigdecimal::_load()","Ruby drb::drbobject::_load()","Ruby drb::drbobject::_load()","Ruby gem::specification::_load()","Ruby singleton::_load()","Rails time::_load()","Rails time::_load_without_zone()","Rails abstractcontroller::callbacks::classmethods#_normalize_callback_options()","Rails bigdecimal#_original_to_s()","Ruby date::_parse()","Rails activesupport::xmlmini#_parse_file()","Rails abstractcontroller::viewpaths#_prefixes()","Rails actionview::context#_prepare_context()","Ruby racc::parser#_racc_do_parse_rb()","Ruby racc::parser#_racc_do_reduce()","Ruby racc::parser#_racc_evalact()","Ruby racc::parser#_racc_init_sysvars()","Ruby racc::parser#_racc_setup()","Ruby racc::parser#_racc_yyparse_rb()","Ruby date::_rfc2822()","Ruby date::_rfc3339()","Ruby date::_rfc822()","Rails abstractcontroller::urlfor#_routes()","Rails abstractcontroller::urlfor::classmethods#_routes()","Rails actiondispatch::routing::urlfor#_routes_context()","Rails actionview::lookupcontext::detailscache#_set_detail()","Ruby irb::context#_set_last_value()","Rails actioncontroller::paramswrapper::classmethods#_set_wrapper_options()","Ruby win32ole#_setproperty()","Rails activerecord::store::classmethods#_store_accessors_module()","Ruby date::_strptime()","Ruby datetime::_strptime()","Rails actionview::helpers::formbuilder::_to_partial_path()","Rails actionview::helpers::urlhelper::classmethods#_url_for_modules()","Rails actiondispatch::routing::urlfor#_with_routes()","Ruby date::_xmlschema()","Ruby kernel#`()","Ruby cgi::htmlextension#a()","Ruby abbrev::abbrev()","Ruby array#abbrev()","Ruby gem::indexer#abbreviate()","Ruby rexml::parsers::xpathparser#abbreviate()","Ruby kernel#abort()","Ruby net::ftp#abort()","Ruby optionparser#abort()","Ruby pstore#abort()","Ruby process::abort()","Ruby thread::abort_on_exception()","Ruby thread#abort_on_exception()","Ruby thread::abort_on_exception=()","Ruby thread#abort_on_exception=()","Ruby bigdecimal#abs()","Ruby bignum#abs()","Ruby complex#abs()","Ruby fixnum#abs()","Ruby float#abs()","Ruby numeric#abs()","Ruby complex#abs2()","Ruby numeric#abs2()","Ruby uri::generic#absolute()","Ruby pathname#absolute?()","Ruby resolv::dns::name#absolute?()","Ruby uri::generic#absolute?()","Ruby file::absolute_path()","Ruby rubyvm::instructionsequence#absolute_path()","Ruby thread::backtrace::location#absolute_path()","Rails abstractcontroller::base::abstract!()","Rails activerecord::inheritance::classmethods#abstract_class?()","Rails rails::railtie::abstract_railtie?()","Ruby optionparser::ac#ac_arg_disable()","Ruby optionparser::ac#ac_arg_enable()","Ruby optionparser::ac#ac_arg_with()","Ruby drb::drbsslsocket::sslconfig#accept()","Ruby openssl::ssl::sslsocket#accept()","Ruby optionparser::accept()","Ruby optionparser#accept()","Ruby optionparser::list#accept()","Ruby psych::visitors::jsontree#accept()","Ruby psych::visitors::toruby#accept()","Ruby psych::visitors::visitor#accept()","Ruby psych::visitors::yamltree#accept()","Ruby rdoc::markup::blankline#accept()","Ruby rdoc::markup::blockquote#accept()","Ruby rdoc::markup::document#accept()","Ruby rdoc::markup::hardbreak#accept()","Ruby rdoc::markup::indentedparagraph#accept()","Ruby rdoc::markup::list#accept()","Ruby rdoc::markup::listitem#accept()","Ruby rdoc::markup::paragraph#accept()","Ruby rdoc::markup::raw#accept()","Ruby rdoc::markup::rule#accept()","Ruby rdoc::markup::verbatim#accept()","Ruby socket#accept()","Ruby tcpserver#accept()","Ruby unixserver#accept()","Rails activerecord::connectionadapters::abstractadapter::schemacreation#accept()","Ruby rdoc::markup::tohtml#accept_blank_line()","Ruby rdoc::markup::tordoc#accept_blank_line()","Ruby rdoc::markup::tottonly#accept_blank_line()","Ruby rdoc::markup::tohtml#accept_block_quote()","Ruby rdoc::markup::tordoc#accept_block_quote()","Ruby rdoc::markup::tottonly#accept_block_quote()","Ruby cgi::accept_charset()","Ruby cgi::accept_charset=()","Ruby rdoc::markup::formatter#accept_document()","Ruby rdoc::markup::totableofcontents#accept_document()","Ruby rdoc::markup::tobs#accept_heading()","Ruby rdoc::markup::tohtml#accept_heading()","Ruby rdoc::markup::tohtmlsnippet#accept_heading()","Ruby rdoc::markup::tordoc#accept_heading()","Ruby rdoc::markup::totableofcontents#accept_heading()","Ruby rdoc::markup::tottonly#accept_heading()","Ruby rdoc::markup::tordoc#accept_indented_paragraph()","Ruby rdoc::markup::tohtml#accept_list_end()","Ruby rdoc::markup::tomarkdown#accept_list_end()","Ruby rdoc::markup::tordoc#accept_list_end()","Ruby rdoc::markup::tottonly#accept_list_end()","Ruby rdoc::markup::toansi#accept_list_item_end()","Ruby rdoc::markup::tohtml#accept_list_item_end()","Ruby rdoc::markup::tohtmlsnippet#accept_list_item_end()","Ruby rdoc::markup::tomarkdown#accept_list_item_end()","Ruby rdoc::markup::tordoc#accept_list_item_end()","Ruby rdoc::markup::tottonly#accept_list_item_end()","Ruby rdoc::markup::toansi#accept_list_item_start()","Ruby rdoc::markup::tohtml#accept_list_item_start()","Ruby rdoc::markup::tohtmlsnippet#accept_list_item_start()","Ruby rdoc::markup::tomarkdown#accept_list_item_start()","Ruby rdoc::markup::tordoc#accept_list_item_start()","Ruby rdoc::markup::tottonly#accept_list_item_start()","Ruby rdoc::markup::tohtml#accept_list_start()","Ruby rdoc::markup::tohtmlsnippet#accept_list_start()","Ruby rdoc::markup::tomarkdown#accept_list_start()","Ruby rdoc::markup::tordoc#accept_list_start()","Ruby rdoc::markup::tottonly#accept_list_start()","Ruby socket::accept_loop()","Ruby openssl::ssl::sslsocket#accept_nonblock()","Ruby socket#accept_nonblock()","Ruby tcpserver#accept_nonblock()","Ruby unixserver#accept_nonblock()","Ruby rdoc::markup::tohtml#accept_paragraph()","Ruby rdoc::markup::tohtmlsnippet#accept_paragraph()","Ruby rdoc::markup::tojoinedparagraph#accept_paragraph()","Ruby rdoc::markup::tordoc#accept_paragraph()","Ruby rdoc::markup::tottonly#accept_paragraph()","Ruby rdoc::markup::tohtml#accept_raw()","Ruby rdoc::markup::tordoc#accept_raw()","Ruby rdoc::markup::tottonly#accept_raw()","Ruby rdoc::markup::tohtml#accept_rule()","Ruby rdoc::markup::tomarkdown#accept_rule()","Ruby rdoc::markup::tordoc#accept_rule()","Ruby rdoc::markup::tottonly#accept_rule()","Ruby gem::localremoteoptions#accept_uri_http()","Ruby rdoc::markup::tohtml#accept_verbatim()","Ruby rdoc::markup::tohtmlsnippet#accept_verbatim()","Ruby rdoc::markup::tomarkdown#accept_verbatim()","Ruby rdoc::markup::tordoc#accept_verbatim()","Ruby rdoc::markup::tottonly#accept_verbatim()","Rails actiondispatch::http::mimenegotiation#accepts()","Rails activerecord::nestedattributes::classmethods#accepts_nested_attributes_for()","Ruby webrick::httpserver#access_log()","Ruby net::ftp#acct()","Ruby cmath::acos()","Ruby math::acos()","Ruby cmath::acos!()","Ruby cmath::acosh()","Ruby math::acosh()","Ruby cmath::acosh!()","Rails activesupport::inflector::inflections#acronym()","Rails actioncontroller::metal::action()","Rails actiondispatch::routing::routewrapper#action()","Rails abstractcontroller::layouts#action_has_layout?()","Rails abstractcontroller::base::action_methods()","Rails abstractcontroller::base#action_methods()","Rails abstractcontroller::urlfor::classmethods#action_methods()","Rails actioncontroller::hideactions::classmethods#action_methods()","Ruby gem::specification#activate()","Ruby shell::processcontroller#activate()","Ruby gem::specification#activate_dependencies()","Ruby net::http#active?()","Ruby net::pop3#active?()","Ruby shell::builtincommand#active?()","Ruby shell::systemcommand#active?()","Rails activerecord::connectionadapters::abstractadapter#active?()","Rails activerecord::connectionadapters::mysql2adapter#active?()","Rails activerecord::connectionadapters::mysqladapter#active?()","Rails activerecord::connectionadapters::postgresqladapter#active?()","Rails activerecord::connectionadapters::sqlite3adapter#active?()","Rails activerecord::connectionadapters::connectionpool#active_connection?()","Rails activerecord::connectionadapters::connectionhandler#active_connections?()","Ruby shell::processcontroller#active_job?()","Ruby shell::processcontroller#active_jobs()","Ruby shell::processcontroller#active_jobs_exist?()","Ruby shell::processcontroller#active_process_controllers()","Rails build#activerecord?()","Rails object#acts_like?()","Rails date#acts_like_date?()","Rails datetime#acts_like_date?()","Rails string#acts_like_string?()","Rails activesupport::timewithzone#acts_like_time?()","Rails datetime#acts_like_time?()","Rails time#acts_like_time?()","Rails build#adapter()","Rails activerecord::connectionadapters::abstractadapter#adapter_name()","Rails activerecord::connectionadapters::postgresqladapter#adapter_name()","Ruby acl::acllist#add()","Ruby benchmark::tms#add()","Ruby bigdecimal#add()","Ruby compositepublisher#add()","Ruby gem::availableset#add()","Ruby gem::dependencylist#add()","Ruby logger#add()","Ruby prettyprint::text#add()","Ruby psych::coder#add()","Ruby rexml::doctype#add()","Ruby rexml::document#add()","Ruby rexml::parent#add()","Ruby rake::compositepublisher#add()","Ruby rake::filelist#add()","Ruby rinda::tuplebag::tuplebin#add()","Ruby set#add()","Ruby syslog::logger#add()","Ruby threadgroup#add()","Ruby webrick::httpauth::htgroup#add()","Rails actioncontroller::renderers::add()","Rails activemodel::errors#add()","Rails activerecord::connectionadapters::connectionpool::queue#add()","Rails activerecord::connectionadapters::schemacache#add()","Rails rails::paths::root#add()","Ruby benchmark::tms#add!()","Ruby set#add?()","Ruby rdoc::anymethod#add_alias()","Ruby rdoc::attr#add_alias()","Ruby rdoc::context#add_alias()","Ruby rdoc::methodattr#add_alias()","Ruby rdoc::stats#add_alias()","Ruby rdoc::toplevel#add_alias()","Ruby rdoc::ri::driver#add_also_in()","Ruby openssl::x509::request#add_attribute()","Ruby rdoc::context#add_attribute()","Ruby rdoc::stats#add_attribute()","Ruby rexml::element#add_attribute()","Ruby rexml::element#add_attributes()","Ruby net::imap::add_authenticator()","Rails activerecord::connectionadapters::schemastatements#add_belongs_to()","Ruby gem::specification#add_bindir()","Ruby gem::localremoteoptions#add_bulk_threshold_option()","Ruby rdoc::store#add_c_enclosure()","Ruby rdoc::store#add_c_variables()","Ruby openssl::x509::store#add_cert()","Ruby openssl::ocsp::request#add_certid()","Ruby openssl::pkcs7#add_certificate()","Ruby gem::package#add_checksums()","Ruby rdoc::context#add_class()","Ruby rdoc::ri::driver#add_class()","Ruby rdoc::stats#add_class()","Ruby rdoc::context#add_class_or_module()","Ruby gem::localremoteoptions#add_clear_sources_option()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#add_column()","Rails activerecord::connectionadapters::schemastatements#add_column()","Rails activerecord::connectionadapters::abstractmysqladapter#add_column_position!()","Rails activerecord::connectionadapters::abstractmysqladapter#add_column_sql()","Ruby rdoc::classmodule#add_comment()","Ruby rdoc::context::section#add_comment()","Ruby gem::command::add_common_option()","Ruby rdoc::context#add_constant()","Ruby rdoc::stats#add_constant()","Ruby rdoc::toplevel#add_constant()","Ruby openssl::pkcs7#add_crl()","Ruby openssl::x509::store#add_crl()","Ruby openssl::pkcs7#add_data()","Ruby gem::server#add_date()","Rails actionmailer::deliverymethods::classmethods#add_delivery_method()","Ruby gem::specification#add_dependency()","Ruby rake::task#add_description()","Ruby gem::specification#add_development_dependency()","Ruby zlib::inflate#add_dictionary()","Ruby rexml::document#add_element()","Ruby rexml::element#add_element()","Ruby openssl::x509::name#add_entry()","Ruby rexml::validation::choice#add_event_to_arry()","Ruby rexml::validation::state#add_event_to_arry()","Rails actionview::template::handlers::erubis#add_expr()","Rails actionview::template::handlers::erubis#add_expr_escaped()","Rails actionview::template::handlers::erubis#add_expr_literal()","Ruby rdoc::context#add_extend()","Ruby rdoc::ri::driver#add_extends()","Ruby openssl::x509::crl#add_extension()","Ruby openssl::x509::certificate#add_extension()","Ruby openssl::x509::revoked#add_extension()","Ruby rdoc::ri::driver#add_extension_modules()","Ruby gem::command#add_extra_args()","Ruby net::httpheader#add_field()","Ruby gem::package::tarwriter#add_file()","Ruby openssl::x509::store#add_file()","Ruby rdoc::stats#add_file()","Ruby rdoc::store#add_file()","Ruby gem::package::tarwriter#add_file_digest()","Ruby gem::package::tarwriter#add_file_signed()","Ruby gem::package::tarwriter#add_file_simple()","Ruby tracer::add_filter()","Rails activesupport::backtracecleaner#add_filter()","Rails actioncontroller::flash::classmethods#add_flash_types()","Ruby rdoc::rd::blockparser#add_footnote()","Ruby gem::dependencyinstaller#add_found_dependencies()","Ruby rdoc::ri::driver#add_from()","Ruby rdoc::rdoc::add_generator()","Ruby webrick::httpservlet::filehandler::add_handler()","Ruby xmlrpc::basicserver#add_handler()","Ruby rss::element#add_have_children_element()","Ruby rdoc::markup#add_html()","Ruby rdoc::markup::attributemanager#add_html()","Ruby rake::application#add_import()","Ruby rake::application#add_import()","Ruby rdoc::context#add_include()","Ruby rdoc::toplevel#add_include()","Ruby rdoc::ri::driver#add_includes()","Rails activerecord::connectionadapters::schemastatements#add_index()","Rails activerecord::connectionadapters::abstractmysqladapter#add_index_length()","Rails activerecord::connectionadapters::schemastatements#add_index_options()","Rails activerecord::connectionadapters::schemastatements#add_index_sort_order()","Rails activerecord::connectionadapters::abstractmysqladapter#add_index_sql()","Ruby gem::installupdateoptions#add_install_update_options()","Ruby xmlrpc::basicserver#add_introspection()","Ruby gem::gemcutterutilities#add_key_option()","Ruby rdoc::rd::blockparser#add_label()","Ruby rdoc::methodattr#add_line_numbers()","Ruby rexml::parsers::baseparser#add_listener()","Ruby rexml::parsers::lightparser#add_listener()","Ruby rexml::parsers::pullparser#add_listener()","Ruby rexml::parsers::sax2parser#add_listener()","Ruby rexml::parsers::streamparser#add_listener()","Ruby rexml::parsers::treeparser#add_listener()","Ruby rexml::parsers::ultralightparser#add_listener()","Ruby rake::application#add_loader()","Ruby rake::application#add_loader()","Ruby gem::localremoteoptions#add_local_remote_options()","Ruby rss::maker#add_maker()","Ruby rdoc::context#add_method()","Ruby rdoc::ri::driver#add_method()","Ruby rdoc::stats#add_method()","Ruby rdoc::toplevel#add_method()","Ruby xmlrpc::service::basicinterface#add_method()","Ruby rdoc::ri::driver#add_method_documentation()","Ruby rdoc::ri::driver#add_method_list()","Ruby rdoc::context#add_module()","Ruby rdoc::stats#add_module()","Ruby rdoc::context#add_module_alias()","Ruby xmlrpc::basicserver#add_multicall()","Ruby rexml::element#add_namespace()","Ruby rss::element#add_need_initialize_variable()","Ruby rss::maker::base#add_need_initialize_variable()","Ruby openssl::ocsp::basicresponse#add_nonce()","Ruby openssl::ocsp::request#add_nonce()","Ruby observable#add_observer()","Rails activemodel::errors#add_on_blank()","Rails activemodel::errors#add_on_empty()","Ruby gem::command#add_option()","Ruby rss::maker::base#add_other_element()","Ruby gem::commands::ownercommand#add_owners()","Ruby rdoc::markup::tohtmlsnippet#add_paragraph()","Ruby openssl::x509::store#add_path()","Ruby gem::platformmismatch#add_platform()","Ruby gem::versionoption#add_platform_option()","Ruby rss::element#add_plural_form()","Rails actionview::template::handlers::erubis#add_postamble()","Rails actionview::template::handlers::erubis#add_preamble()","Ruby gem::versionoption#add_prerelease_option()","Ruby psych::add_private_type()","Ruby drb::drbprotocol::add_protocol()","Ruby gem::localremoteoptions#add_proxy_option()","Ruby rake#add_rakelib()","Ruby openssl::pkcs7#add_recipient()","Rails activerecord::connectionadapters::schemastatements#add_reference()","Rails actioncontroller::add_renderer()","Ruby rdoc::context#add_require()","Ruby net::imap#add_response_handler()","Ruby openssl::x509::crl#add_revoked()","Ruby csv#add_row()","Ruby psych::add_ruby_type()","Ruby gem::remotefetcher#add_rubygems_trusted_certs()","Ruby gem::specification#add_runtime_dependency()","Ruby shell::processcontroller#add_schedule()","Ruby rdoc::context#add_section()","Ruby gem::specification#add_self_to_load_path()","Rails rails::generators::base::add_shebang_option!()","Ruby openssl::pkcs7#add_signer()","Rails activesupport::backtracecleaner#add_silencer()","Rails rails::generators::actions#add_source()","Ruby gem::localremoteoptions#add_source_option()","Ruby gem::specification::add_spec()","Ruby rdoc::markup#add_special()","Ruby rdoc::markup::attributemanager#add_special()","Ruby rdoc::markup::formatter#add_special_rdoclink()","Ruby rdoc::markup::formatter#add_special_tidylink()","Ruby gem::command::add_specific_extra_args()","Ruby gem::specification::add_specs()","Ruby openssl::ocsp::basicresponse#add_status()","Rails actionview::template::handlers::erubis#add_stmt()","Ruby rdoc::markup::formatter#add_tag()","Ruby rake::rulerecursionoverflowerror#add_target()","Ruby rexml::element#add_text()","Rails actionview::template::handlers::erubis#add_text()","Rails activerecord::connectionadapters::schemastatements#add_timestamps()","Rails activerecord::connectionadapters::abstractmysqladapter#add_timestamps_sql()","Ruby rdoc::context#add_to()","Ruby rdoc::toplevel#add_to_classes_or_modules()","Ruby rss::element#add_to_element_method()","Rails activerecord::transactions#add_to_transaction()","Ruby rdoc::tokenstream#add_token()","Ruby rdoc::parser::rubytools#add_token_listener()","Ruby rdoc::tokenstream#add_tokens()","Ruby thread#add_trace_func()","Rails activerecord::connectionadapters::databasestatements#add_transaction_record()","Ruby gem::localremoteoptions#add_update_sources_option()","Ruby openssl::config#add_value()","Ruby gem::versionoption#add_version_option()","Ruby rdoc::markup#add_word_pair()","Ruby rdoc::markup::attributemanager#add_word_pair()","Ruby curses::addch()","Ruby curses::window#addch()","Rails activemodel::errors#added?()","Ruby ipsocket#addr()","Ruby unixsocket#addr()","Ruby curses::addstr()","Ruby curses::window#addstr()","Ruby zlib::zstream#adler()","Ruby zlib::adler32()","Ruby zlib::adler32_combine()","Rails activesupport::timewithzone#advance()","Rails date#advance()","Rails datetime#advance()","Rails time#advance()","Ruby io#advise()","Ruby addrinfo#afamily()","Rails actiondispatch::callbacks::after()","Rails rails::initializable::initializer#after()","Rails abstractcontroller::callbacks::classmethods#after_action()","Rails activerecord::transactions::classmethods#after_commit()","Rails rails::railtie::configuration#after_initialize()","Rails activerecord::transactions::classmethods#after_rollback()","Rails activerecord::testfixtures#after_teardown()","Rails activemodel::validations::callbacks::classmethods#after_validation()","Rails activesupport::duration#ago()","Rails activesupport::timewithzone#ago()","Rails date#ago()","Rails datetime#ago()","Rails numeric#ago()","Rails time#ago()","Ruby date#ajd()","Ruby gem::streamui#alert()","Ruby gem::userinteraction#alert()","Rails actiondispatch::flash::flashhash#alert()","Rails actiondispatch::flash::flashhash#alert=()","Ruby gem::streamui#alert_error()","Ruby gem::userinteraction#alert_error()","Ruby gem::streamui#alert_warning()","Ruby gem::userinteraction#alert_warning()","Ruby psych::handler#alias()","Ruby psych::treebuilder#alias()","Rails activemodel::attributemethods::classmethods#alias_attribute()","Rails module#alias_attribute()","Ruby shell::alias_command()","Ruby shell::commandprocessor::alias_command()","Ruby rdoc::parser::alias_extension()","Ruby shell::commandprocessor::alias_map()","Rails module#alias_method_chain()","Rails activerecord::connectionadapters::mysqladapter::fields::alias_type()","Rails activerecord::connectionadapters::postgresqladapter::oid::alias_type()","Ruby encoding::aliases()","Ruby gem::validator#alien()","Ruby dl::packinfo::align()","Ruby drb::drbserver#alive?()","Ruby drb::extserv#alive?()","Ruby fiber#alive?()","Ruby rinda::tupleentry#alive?()","Ruby thread#alive?()","Ruby gem::specification::all()","Ruby net::popmail#all()","Rails actioncontroller::mimeresponds::collector#all()","Rails actionmailer::collector#all()","Rails activerecord::scoping::named::classmethods#all()","Rails activesupport::timezone::all()","Rails rails::generators::activemodel::all()","Ruby gem::specification::all=()","Ruby enumerable#all?()","Ruby rdoc::store#all_classes()","Ruby rdoc::store#all_classes_and_modules()","Rails time#all_day()","Ruby rdoc::store#all_files()","Rails actioncontroller::helpers::classmethods#all_helpers_from_path()","Ruby rdoc::store#all_modules()","Rails time#all_month()","Ruby gem::specification::all_names()","Rails rails::paths::root#all_paths()","Rails time#all_quarter()","Ruby gem::availableset#all_specs()","Ruby symbol::all_symbols()","Ruby threadswait#all_waits()","Ruby threadswait::all_waits()","Ruby threadswait::all_waits()","Ruby threadswait#all_waits()","Rails time#all_week()","Rails time#all_year()","Ruby class#allocate()","Ruby acl#allow_addr?()","Rails rails::application#allow_concurrency?()","Ruby acl#allow_socket?()","Rails activerecord::connectionadapters::databaselimits#allowed_index_name_length()","Rails activerecord::connectionadapters::sqlite3adapter#allowed_index_name_length()","Ruby gem::security::alt_name_or_x509_entry()","Ruby rss::xmlstylesheet#alternate=()","Ruby date#amjd()","Ruby module#ancestors()","Ruby rdoc::classmodule#ancestors()","Ruby rdoc::normalclass#ancestors()","Ruby rdoc::singleclass#ancestors()","Ruby rdoc::store#ancestors()","Ruby rdoc::ri::driver#ancestors_of()","Ruby complex#angle()","Ruby float#angle()","Ruby numeric#angle()","Ruby rdoc::markup::formatter#annotate()","Ruby rdoc::markup::tobs#annotate()","Rails activerecord::migration#announce()","Rails build#announce()","Rails module#anonymous?()","Rails actioncontroller::mimeresponds::collector#any()","Rails actionmailer::collector#any()","Ruby enumerable#any?()","Rails activerecord::associations::collectionproxy#any?()","Rails activerecord::relation#any?()","Ruby rdoc::context#any_content()","Rails activerecord::connectionadapters::connectionpool::queue#any_waiting?()","Rails actioncontroller::responder#api_behavior()","Rails rails::api::apptask#api_dir()","Rails rails::api::repotask#api_dir()","Ruby gem::remotefetcher#api_endpoint()","Ruby gem::gemcutterutilities#api_key()","Ruby gem::configfile#api_keys()","Rails actioncontroller::responder#api_location()","Rails rails::api::task#api_main()","Ruby gem::source#api_uri()","Ruby net::apop#apop?()","Ruby net::apop#apop?()","Ruby net::pop3#apop?()","Rails rails::appbuilder#app()","Rails rails::consolemethods#app()","Rails rails::engine::app()","Rails rails::pluginbuilder#app()","Rails rails::server#app()","Rails rails::railtie::configuration#app_generators()","Rails rails::railtie::configuration#app_middleware()","Ruby gem::installer#app_script_text()","Ruby net::imap#append()","Ruby optionparser::list#append()","Ruby rdoc::rd::inline#append()","Ruby rake::invocationchain::append()","Ruby rake::invocationchain#append()","Ruby rake::invocationchain::emptyinvocationchain#append()","Ruby shell::commandprocessor#append()","Rails abstractcontroller::callbacks::classmethods#append_after_action()","Rails abstractcontroller::callbacks::classmethods#append_around_action()","Rails abstractcontroller::callbacks::classmethods#append_before_action()","Ruby webrick::httputils::formdata#append_data()","Ruby rss::atom::commonmodel::append_features()","Ruby rss::atom::contentmodel#append_features()","Ruby rss::atom::dateconstruct::append_features()","Ruby rss::atom::personconstruct::append_features()","Ruby rss::atom::textconstruct::append_features()","Ruby rss::atom::uricontentmodel#append_features()","Ruby rss::basedublincoremodel#append_features()","Ruby rss::basetrackbackmodel#append_features()","Ruby rss::contentmodel::append_features()","Ruby rss::ituneschannelmodel#append_features()","Ruby rss::itunesitemmodel#append_features()","Ruby rss::imagefaviconmodel::append_features()","Ruby rss::imageitemmodel::append_features()","Ruby rss::maker::atompersonconstructbase::append_features()","Ruby rss::maker::atomtextconstructbase::append_features()","Ruby rss::maker::contentmodel::append_features()","Ruby rss::maker::dublincoremodel::append_features()","Ruby rss::maker::ituneschannelmodel#append_features()","Ruby rss::maker::itunesitemmodel#append_features()","Ruby rss::maker::imagefaviconmodel::append_features()","Ruby rss::maker::imageitemmodel::append_features()","Ruby rss::maker::slashmodel::append_features()","Ruby rss::maker::syndicationmodel::append_features()","Ruby rss::maker::taxonomytopicmodel::append_features()","Ruby rss::maker::taxonomytopicsmodel::append_features()","Ruby rss::maker::trackbackmodel::append_features()","Ruby rss::rss09::append_features()","Ruby rss::rss10::append_features()","Ruby rss::slashmodel#append_features()","Ruby rss::syndicationmodel::append_features()","Ruby rss::taxonomytopicmodel::append_features()","Ruby rss::taxonomytopicsmodel::append_features()","Ruby sync_m::append_features()","Ruby sync_m::append_features()","Rails activesupport::concern#append_features()","Rails abstractcontroller::viewpaths#append_view_path()","Rails abstractcontroller::viewpaths::classmethods#append_view_path()","Ruby rake#application()","Rails rails::generators::actions#application()","Ruby rake#application=()","Rails rails::generators::namedbase#application_name()","Rails actiondispatch::exceptionwrapper#application_trace()","Rails activerecord::findermethods#apply_join_dependency()","Ruby gem::version#approximate_recommendation()","Ruby rdoc::alias#aref()","Ruby rdoc::context::section#aref()","Ruby rdoc::methodattr#aref()","Ruby rdoc::anymethod#aref_prefix()","Ruby rdoc::attr#aref_prefix()","Ruby rdoc::methodattr#aref_prefix()","Ruby rdoc::generator::markup#aref_to()","Rails activerecord::querymethods#arel()","Rails activerecord::core::classmethods#arel_engine()","Rails activerecord::core::classmethods#arel_table()","Ruby complex#arg()","Ruby float#arg()","Ruby numeric#arg()","Ruby rake::task#arg_names()","Ruby rdoc::anymethod#arglists()","Ruby nomethoderror#args()","Ruby gem::command#arguments()","Ruby argf#argv()","Ruby method#arity()","Ruby proc#arity()","Ruby unboundmethod#arity()","Rails abstractcontroller::callbacks::classmethods#around_action()","Ruby win32ole_variant::array()","Ruby gem::specification::array_attributes()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#array_to_string()","Ruby rdoc::generator::markup#as_href()","Ruby bigdecimal#as_json()","Ruby complex#as_json()","Ruby date#as_json()","Ruby datetime#as_json()","Ruby exception#as_json()","Ruby json::genericobject#as_json()","Ruby openstruct#as_json()","Ruby range#as_json()","Ruby rational#as_json()","Ruby regexp#as_json()","Ruby struct#as_json()","Ruby symbol#as_json()","Ruby time#as_json()","Rails activemodel::errors#as_json()","Rails activemodel::serializers::json#as_json()","Rails activesupport::json::encoding::encoder#as_json()","Rails activesupport::json::variable#as_json()","Rails activesupport::timewithzone#as_json()","Rails process::status#as_json()","Ruby rdoc::markup::attributes#as_string()","Ruby pathname#ascend()","Ruby encoding#ascii_compatible?()","Ruby string#ascii_only?()","Ruby encoding::converter::asciicompat_encoding()","Ruby date#asctime()","Ruby time#asctime()","Ruby cmath::asin()","Ruby math::asin()","Ruby cmath::asin!()","Ruby cmath::asinh()","Ruby math::asinh()","Ruby cmath::asinh!()","Ruby gem::mockgemui#ask()","Ruby gem::streamui#ask()","Ruby gem::userinteraction#ask()","Ruby gem::streamui#ask_for_password()","Ruby gem::userinteraction#ask_for_password()","Ruby gem::streamui#ask_for_password_on_unix()","Ruby gem::streamui#ask_for_password_on_windows()","Ruby gem::uninstaller#ask_if_ok()","Ruby gem::streamui#ask_yes_no()","Ruby gem::userinteraction#ask_yes_no()","Ruby openssl::pkey::ec::group#asn1_flag()","Ruby openssl::pkey::ec::group#asn1_flag=()","Ruby rdoc::generator::darkfish#assemble_template()","Rails actiondispatch::middlewarestack#assert_index()","Rails hash#assert_valid_keys()","Ruby rdoc::servlet#asset()","Rails actionview::helpers::asseturlhelper#asset_path()","Rails actionview::helpers::asseturlhelper#asset_url()","Rails activerecord::attributeassignment#assign_attributes()","Ruby dl::cstructentity#assign_names()","Ruby fiddle::cstructentity#assign_names()","Ruby ","Ruby array#assoc()","Ruby env::assoc()","Ruby hash#assoc()","Rails activerecord::connectionadapters::schemastatements#assume_migrated_upto_version()","Ruby array#at()","Ruby time::at()","Rails activesupport::timezone#at()","Rails string#at()","Rails time::at()","Rails date#at_beginning_of_day()","Rails datetime#at_beginning_of_day()","Rails time#at_beginning_of_day()","Rails datetime#at_beginning_of_hour()","Rails time#at_beginning_of_hour()","Rails datetime#at_beginning_of_minute()","Rails time#at_beginning_of_minute()","Rails dateandtime::calculations#at_beginning_of_month()","Rails dateandtime::calculations#at_beginning_of_quarter()","Rails dateandtime::calculations#at_beginning_of_week()","Rails dateandtime::calculations#at_beginning_of_year()","Rails date#at_end_of_day()","Rails datetime#at_end_of_day()","Rails time#at_end_of_day()","Rails datetime#at_end_of_hour()","Rails time#at_end_of_hour()","Rails datetime#at_end_of_minute()","Rails time#at_end_of_minute()","Rails dateandtime::calculations#at_end_of_month()","Rails dateandtime::calculations#at_end_of_quarter()","Rails dateandtime::calculations#at_end_of_week()","Rails dateandtime::calculations#at_end_of_year()","Ruby kernel#at_exit()","Rails date#at_midnight()","Rails datetime#at_midnight()","Rails time#at_midnight()","Rails time::at_with_coercion()","Rails time::at_without_coercion()","Ruby bigmath#atan()","Ruby cmath::atan()","Ruby math::atan()","Ruby cmath::atan!()","Ruby cmath::atan2()","Ruby math::atan2()","Ruby cmath::atan2!()","Ruby cmath::atanh()","Ruby math::atanh()","Ruby cmath::atanh!()","Ruby file#atime()","Ruby file::atime()","Ruby file::stat#atime()","Ruby pathname#atime()","Rails actionview::helpers::atomfeedhelper#atom_feed()","Ruby rss::atom::dateconstruct#atom_validate()","Ruby rss::atom::feed::entry::content#atom_validate()","Ruby rss::atom::textconstruct#atom_validate()","Rails file::atomic_write()","Rails activesupport::subscriber::attach_to()","Rails actionmailer::base#attachments()","Rails actionmailer::mailhelper#attachments()","Ruby rexml::sax2listener#attlistdecl()","Ruby rexml::streamlistener#attlistdecl()","Ruby rexml::parsers::pullevent#attlistdecl?()","Rails module#attr_internal()","Rails module#attr_internal_accessor()","Rails module#attr_internal_reader()","Rails module#attr_internal_writer()","Rails activerecord::readonlyattributes::classmethods#attr_readonly()","Ruby rdoc::markup::attributemanager#attribute()","Ruby rexml::element#attribute()","Ruby rexml::quickpath::attribute()","Rails activerecord::attributemethods#attribute_for_inspect()","Rails html::selector#attribute_match()","Rails activemodel::validations::classmethods#attribute_method?()","Rails activerecord::attributemethods::classmethods#attribute_method?()","Rails activerecord::attributemethods::primarykey#attribute_method?()","Rails activemodel::attributemethods::classmethods#attribute_method_affix()","Rails activemodel::attributemethods::classmethods#attribute_method_prefix()","Rails activemodel::attributemethods::classmethods#attribute_method_suffix()","Rails activemodel::attributemethods#attribute_missing()","Ruby gem::specification::attribute_names()","Rails activerecord::attributemethods#attribute_names()","Rails activerecord::attributemethods::classmethods#attribute_names()","Ruby rexml::doctype#attribute_of()","Rails activerecord::attributemethods#attribute_present?()","Ruby openssl::x509::request#attributes()","Ruby rdoc::markup::tordoc#attributes()","Ruby rdoc::store#attributes()","Ruby uri::ldap#attributes()","Rails activerecord::attributemethods#attributes()","Ruby openssl::x509::request#attributes=()","Ruby uri::ldap#attributes=()","Rails activerecord::attributeassignment#attributes=()","Rails activerecord::attributemethods::beforetypecast#attributes_before_type_cast()","Rails activerecord::dynamicmatchers::finder#attributes_hash()","Rails rails::generators::namedbase#attributes_names()","Ruby rexml::doctype#attributes_of()","Ruby curses::attroff()","Ruby curses::window#attroff()","Ruby curses::attron()","Ruby curses::window#attron()","Ruby curses::attrset()","Ruby curses::window#attrset()","Rails actionview::helpers::asseturlhelper#audio_path()","Rails actionview::helpers::assettaghelper#audio_tag()","Rails actionview::helpers::asseturlhelper#audio_url()","Ruby net::smtp#auth_cram_md5()","Ruby openssl::cipher#auth_data=()","Ruby net::smtp#auth_login()","Ruby net::pop3::auth_only()","Ruby net::pop3#auth_only()","Ruby net::smtp#auth_plain()","Ruby openssl::cipher#auth_tag()","Ruby openssl::cipher#auth_tag=()","Ruby net::imap#authenticate()","Ruby net::smtp#authenticate()","Ruby webrick::httpauth::basicauth#authenticate()","Ruby webrick::httpauth::digestauth#authenticate()","Rails actioncontroller::httpauthentication::basic#authenticate()","Rails actioncontroller::httpauthentication::digest#authenticate()","Rails actioncontroller::httpauthentication::token#authenticate()","Rails activemodel::securepassword::classmethods::instancemethodsonactivation#authenticate()","Rails actioncontroller::httpauthentication::basic::controllermethods#authenticate_or_request_with_http_basic()","Rails actioncontroller::httpauthentication::digest::controllermethods#authenticate_or_request_with_http_digest()","Rails actioncontroller::httpauthentication::token::controllermethods#authenticate_or_request_with_http_token()","Rails actioncontroller::httpauthentication::basic::controllermethods#authenticate_with_http_basic()","Rails actioncontroller::httpauthentication::digest::controllermethods#authenticate_with_http_digest()","Rails actioncontroller::httpauthentication::token::controllermethods#authenticate_with_http_token()","Ruby openssl::cipher#authenticated?()","Rails actioncontroller::httpauthentication::digest#authentication_header()","Rails actioncontroller::httpauthentication::basic#authentication_request()","Rails actioncontroller::httpauthentication::digest#authentication_request()","Rails actioncontroller::httpauthentication::token#authentication_request()","Ruby gem::specification#author()","Ruby gem::specification#author=()","Rails actiondispatch::request#authorization()","Ruby gem::specification#authors()","Ruby gem::specification#authors=()","Rails actionview::helpers::assettaghelper#auto_discovery_link_tag()","Ruby io#autoclose=()","Ruby io#autoclose?()","Ruby kernel#autoload()","Ruby module#autoload()","Rails activesupport::autoload#autoload()","Ruby kernel#autoload?()","Ruby module#autoload?()","Rails activesupport::autoload#autoload_at()","Rails rails::paths::root#autoload_once()","Rails rails::engine::configuration#autoload_once_paths()","Rails rails::engine::configuration#autoload_paths()","Rails rails::paths::root#autoload_paths()","Rails activesupport::autoload#autoload_under()","Rails activesupport::autoload#autoloads()","Ruby zlib::zstream#avail_in()","Ruby zlib::zstream#avail_out()","Ruby zlib::zstream#avail_out=()","Rails abstractcontroller::base#available_action?()","Rails rails::dbconsole#available_environments()","Ruby gem::specfetcher#available_specs()","Ruby rss::baselistener#available_tags()","Rails activerecord::calculations#average()","Rails activesupport::concurrency::latch#await()","Rails actiondispatch::response#await_commit()","Ruby rexml::quickpath::axe()","Ruby string#b()","Rails activesupport::json::backend()","Rails activesupport::xmlmini#backend()","Rails activesupport::json::backend=()","Rails activesupport::xmlmini#backend=()","Ruby rake::altsystem#backticks()","Ruby exception#backtrace()","Ruby gem::configfile#backtrace()","Ruby gem::streamui#backtrace()","Ruby thread#backtrace()","Rails rails::backtrace_cleaner()","Ruby thread#backtrace_locations()","Ruby optionparser#banner()","Rails rails::generators::base::banner()","Ruby cgi::htmlextension#base()","Ruby optionparser#base()","Ruby securerandom::base64()","Ruby xmlrpc::convert::base64()","Ruby digest::class::base64digest()","Ruby digest::instance#base64digest()","Ruby digest::instance#base64digest!()","Rails activerecord::inheritance::classmethods#base_class()","Ruby gem::specification#base_dir()","Ruby rubyvm::instructionsequence#base_label()","Ruby thread::backtrace::location#base_label()","Ruby rdoc::toplevel#base_name()","Rails rails::generators::base::base_name()","Rails rails::generators::base::base_root()","Ruby file::basename()","Ruby pathname#basename()","Rails activerecord::migrationproxy#basename()","Ruby openssl::ocsp::response#basic()","Ruby net::httpheader#basic_auth()","Ruby webrick::httpauth#basic_auth()","Ruby readline::basic_quote_characters()","Ruby readline::basic_quote_characters=()","Ruby readline::basic_word_break_characters()","Ruby readline::basic_word_break_characters=()","Rails activerecord::persistence#becomes()","Rails activerecord::persistence#becomes!()","Ruby curses::beep()","Rails actiondispatch::callbacks::before()","Rails rails::initializable::initializer#before()","Rails abstractcontroller::callbacks::classmethods#before_action()","Rails rails::railtie::configuration#before_configuration()","Rails rails::railtie::configuration#before_eager_load()","Rails rails::railtie::configuration#before_initialize()","Ruby rdoc::task#before_running_rdoc()","Rails activerecord::testfixtures#before_setup()","Rails activemodel::validations::callbacks::classmethods#before_validation()","Ruby matchdata#begin()","Ruby range#begin()","Ruby rdoc::stats#begin_adding()","Ruby rdoc::stats::quiet#begin_adding()","Rails activerecord::connectionadapters::abstractmysqladapter#begin_db_transaction()","Rails activerecord::connectionadapters::databasestatements#begin_db_transaction()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#begin_db_transaction()","Rails activerecord::connectionadapters::abstractmysqladapter#begin_isolated_db_transaction()","Rails activerecord::connectionadapters::databasestatements#begin_isolated_db_transaction()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#begin_isolated_db_transaction()","Rails date#beginning_of_day()","Rails datetime#beginning_of_day()","Rails time#beginning_of_day()","Rails datetime#beginning_of_hour()","Rails time#beginning_of_hour()","Ruby stringscanner#beginning_of_line?()","Rails datetime#beginning_of_minute()","Rails time#beginning_of_minute()","Rails dateandtime::calculations#beginning_of_month()","Rails dateandtime::calculations#beginning_of_quarter()","Rails date::beginning_of_week()","Rails dateandtime::calculations#beginning_of_week()","Rails date::beginning_of_week=()","Rails dateandtime::calculations#beginning_of_year()","Ruby gem::command#begins?()","Ruby curses::window#begx()","Ruby curses::window#begy()","Rails activesupport::deprecation::behavior#behavior()","Rails activesupport::deprecation::behavior#behavior=()","Rails activerecord::associations::classmethods#belongs_to()","Rails activerecord::connectionadapters::table#belongs_to()","Rails activerecord::connectionadapters::tabledefinition#belongs_to()","Rails rails::initializable::initializer#belongs_to?()","Ruby benchmark::benchmark()","Rails activesupport::benchmarkable#benchmark()","Ruby comparable#between?()","Rails activesupport::timewithzone#between?()","Rails rails::appbuilder#bin()","Rails rails::pluginbuilder#bin()","Ruby gem::specification#bin_dir()","Ruby gem::specification#bin_file()","Ruby gem::bin_path()","Ruby net::ftp#binary=()","Ruby rdoc::parser::binary?()","Ruby gem::binary_mode()","Ruby addrinfo#bind()","Ruby dl::function#bind()","Ruby dl::importer#bind()","Ruby exception2messagemapper#bind()","Ruby exception2messagemapper#bind()","Ruby fiddle::importer#bind()","Ruby socket#bind()","Ruby udpsocket#bind()","Ruby unboundmethod#bind()","Rails activerecord::querymethods#bind()","Rails rails::initializable::initializer#bind()","Ruby dl::carriedfunction#bind_at_call()","Ruby dl::function#bind_at_call()","Ruby dl::tempfunction#bind_at_call()","Ruby dl::importer#bind_function()","Ruby fiddle::importer#bind_function()","Ruby kernel#binding()","Ruby proc#binding()","Ruby tracepoint#binding()","Ruby gem::bindir()","Ruby argf#binmode()","Ruby io#binmode()","Ruby net::telnet#binmode()","Ruby stringio#binmode()","Ruby net::telnet#binmode=()","Ruby argf#binmode?()","Ruby io#binmode?()","Ruby io::binread()","Ruby pathname#binread()","Ruby io::binwrite()","Ruby openssl::bn#bit_set?()","Ruby rdoc::markup::attributes#bitmap_for()","Ruby curses::bkgd()","Ruby curses::window#bkgd()","Ruby curses::bkgdset()","Ruby curses::window#bkgdset()","Rails activemodel::errors#blank?()","Rails activerecord::relation#blank?()","Rails falseclass#blank?()","Rails nilclass#blank?()","Rails object#blank?()","Rails string#blank?()","Rails trueclass#blank?()","Ruby openssl::pkey::rsa#blinding_off!()","Ruby openssl::pkey::rsa#blinding_off!()","Ruby openssl::pkey::rsa#blinding_on!()","Ruby openssl::pkey::rsa#blinding_on!()","Ruby file::stat#blksize()","Rails actionmailer::mailhelper#block_format()","Ruby kernel#block_given?()","Ruby digest::hmac#block_length()","Ruby digest::instance#block_length()","Ruby openssl::digest#block_length()","Ruby shell::processcontroller#block_output_synchronize()","Ruby rdoc::methodattr#block_params=()","Ruby string#block_scanf()","Ruby file::blockdev?()","Ruby file::stat#blockdev?()","Ruby filetest#blockdev?()","Ruby pathname#blockdev?()","Ruby cgi::htmlextension#blockquote()","Ruby file::stat#blocks()","Ruby benchmark::bm()","Ruby benchmark::bmbm()","Ruby net::httpresponse#body()","Ruby webrick::httprequest#body()","Rails actiondispatch::request#body()","Rails actiondispatch::response#body()","Rails activerecord::dynamicmatchers::finder#body()","Rails activerecord::dynamicmatchers::method#body()","Ruby net::httpgenericrequest#body=()","Ruby net::httpresponse#body=()","Rails actiondispatch::response#body=()","Ruby net::httpgenericrequest#body_exist?()","Rails actiondispatch::response#body_parts()","Ruby net::httpresponse#body_permitted?()","Ruby net::httpgenericrequest#body_stream=()","Ruby socket::option#bool()","Ruby socket::option::bool()","Ruby rexml::functions::boolean()","Ruby xmlrpc::convert::boolean()","Ruby gem::localremoteoptions#both?()","Ruby irb::frame#bottom()","Ruby irb::frame::bottom()","Ruby dl::function#bound?()","Ruby curses::window#box()","Ruby prettyprint::group#break()","Ruby prettyprint::group#break?()","Ruby rdoc::markdown#break_on_newline()","Ruby prettyprint#break_outmost_groups()","Ruby debugger__#break_points()","Ruby prettyprint#breakable()","Ruby prettyprint::singleline#breakable()","Rails kernel#breakpoint()","Ruby conditionvariable#broadcast()","Ruby monitormixin::conditionvariable#broadcast()","Rails mime::type::browser_generated_types()","Ruby array#bsearch()","Ruby range#bsearch()","Ruby win32::sspi::securitybuffer#buffersize()","Ruby win32::sspi::securitybuffer#buffertype()","Ruby gem::commands::certcommand#build()","Ruby gem::ext::cmakebuilder::build()","Ruby gem::ext::configurebuilder::build()","Ruby gem::ext::extconfbuilder::build()","Ruby gem::ext::rakebuilder::build()","Ruby gem::package#build()","Ruby gem::package::build()","Ruby matrix::build()","Ruby uri::ftp::build()","Ruby uri::generic::build()","Ruby uri::http::build()","Ruby uri::ldap::build()","Ruby uri::mailto::build()","Rails actioncontroller::middleware::build()","Rails actiondispatch::middlewarestack#build()","Rails actiondispatch::middlewarestack::middleware#build()","Rails actionview::resolver::path::build()","Rails activerecord::associations::collectionproxy#build()","Rails activerecord::relation#build()","Rails rails::generators::activemodel::build()","Ruby uri::generic::build2()","Rails activerecord::querymethods#build_arel()","Ruby gem::command::build_args()","Ruby gem::specification#build_args()","Ruby gem::command::build_args=()","Ruby gem::installer#build_extensions()","Ruby rdoc::markup::parser#build_heading()","Ruby rdoc::tomdoc#build_heading()","Ruby rdoc::generator::jsonindex#build_index()","Ruby gem::indexer#build_indicies()","Ruby gem::specification#build_info_dir()","Ruby gem::specification#build_info_file()","Ruby rdoc::markup::parser#build_list()","Ruby gem::indexer#build_marshal_gemspecs()","Rails activesupport::cache::memcachestore::build_mem_cache()","Ruby gem::indexer#build_modern_index()","Ruby gem::indexer#build_modern_indicies()","Ruby rdoc::markup::parser#build_paragraph()","Ruby rdoc::tomdoc#build_paragraph()","Ruby rdoc::markup::parser#build_verbatim()","Ruby rdoc::tomdoc#build_verbatim()","Ruby openssl::pkey::ec::builtin_curves()","Ruby gem::version#bump()","Rails actionview::helpers::formbuilder#button()","Rails actionview::helpers::formtaghelper#button_tag()","Rails actionview::helpers::urlhelper#button_to()","Rails actionview::helpers::javascripthelper#button_to_function()","Ruby csv::table#by_col()","Ruby csv::table#by_col!()","Ruby csv::table#by_col_or_row()","Ruby csv::table#by_col_or_row!()","Ruby openssl::engine::by_id()","Ruby csv::table#by_row()","Ruby csv::table#by_row!()","Rails numeric#byte()","Ruby argf#bytes()","Ruby io#bytes()","Ruby rexml::child#bytes()","Ruby random#bytes()","Ruby string#bytes()","Ruby stringio#bytes()","Ruby zlib::gzipreader#bytes()","Rails numeric#bytes()","Ruby gem::package::tarreader::entry#bytes_read()","Ruby string#bytesize()","Ruby string#byteslice()","Ruby prime::trialdivision#cache()","Rails actioncontroller::caching#cache()","Rails actionview::helpers::cachehelper#cache()","Rails activerecord::connectionadapters::querycache#cache()","Rails activerecord::querycache::classmethods#cache()","Rails activerecord::attributemethods::read::classmethods#cache_attribute?()","Rails activerecord::attributemethods::read::classmethods#cache_attributes()","Ruby gem::source#cache_dir()","Ruby gem::specification#cache_dir()","Ruby gem::specification#cache_file()","Rails activerecord::fixtureset::cache_fixtures()","Rails activerecord::fixtureset::cache_for_connection()","Rails actionview::helpers::cachehelper#cache_fragment_name()","Rails actionview::helpers::cachehelper#cache_if()","Rails activerecord::integration#cache_key()","Ruby rdoc::store#cache_path()","Rails actioncontroller::caching::configmethods#cache_store()","Rails actioncontroller::caching::configmethods#cache_store=()","Rails actionview::base::cache_template_loading()","Rails actionview::base::cache_template_loading=()","Rails actionview::helpers::cachehelper#cache_unless()","Ruby gem::remotefetcher#cache_update_path()","Rails activerecord::attributemethods::read::classmethods#cached_attributes()","Rails activerecord::fixtureset::cached_fixtures()","Rails activesupport::cache::memorystore#cached_size()","Ruby gdbm#cachesize=()","Ruby rdoc::stats#calculate()","Rails activerecord::calculations#calculate()","Rails actiondispatch::remoteip::getip#calculate_ip()","Ruby continuation#call()","Ruby dl::cfunc#call()","Ruby dl::function#call()","Ruby fiddle::closure::blockcaller#call()","Ruby fiddle::function#call()","Ruby logger::formatter#call()","Ruby method#call()","Ruby proc#call()","Ruby syslog::logger::formatter#call()","Ruby win32api#call()","Ruby xmlrpc::client#call()","Rails actioncontroller::metal::call()","Rails actioncontroller::middleware::actionmiddleware#call()","Rails actioncontroller::responder::call()","Rails actiondispatch::callbacks#call()","Rails actiondispatch::cookies#call()","Rails actiondispatch::debugexceptions#call()","Rails actiondispatch::filehandler#call()","Rails actiondispatch::flash#call()","Rails actiondispatch::paramsparser#call()","Rails actiondispatch::publicexceptions#call()","Rails actiondispatch::reloader#call()","Rails actiondispatch::remoteip#call()","Rails actiondispatch::requestid#call()","Rails actiondispatch::ssl#call()","Rails actiondispatch::showexceptions#call()","Rails actiondispatch::static#call()","Rails actionview::dependencytracker::erbtracker::call()","Rails actionview::template::handlers::builder#call()","Rails actionview::template::handlers::erb::call()","Rails actionview::template::handlers::erb#call()","Rails actionview::template::handlers::raw#call()","Rails activerecord::connectionadapters::connectionmanagement#call()","Rails activerecord::migration::checkpending#call()","Rails activerecord::querycache#call()","Rails activesupport::logger::simpleformatter#call()","Rails logger::simpleformatter#call()","Rails rails::application#call()","Rails rails::engine::call()","Rails rails::rack::debugger#call()","Rails rails::rack::logtailer#call()","Rails rails::rack::logger#call()","Ruby xmlrpc::client#call2()","Ruby xmlrpc::client#call2_async()","Rails rails::rack::logger#call_app()","Ruby xmlrpc::client#call_async()","Ruby kernel#callcc()","Ruby kernel#caller()","Ruby kernel#caller_locations()","Ruby ","Ruby dl::cfunc#calltype()","Ruby dl::cfunc#calltype=()","Rails string#camelcase()","Rails activesupport::inflector#camelize()","Rails string#camelize()","Ruby curses::can_change_color?()","Ruby rdoc::parser::can_parse()","Ruby rdoc::parser::can_parse_by_name()","Ruby rinda::tupleentry#cancel()","Ruby rinda::waittemplateentry#cancel()","Ruby webrick::utils::timeouthandler::cancel()","Ruby webrick::utils::timeouthandler#cancel()","Ruby rinda::tupleentry#canceled?()","Ruby optionparser#candidate()","Ruby optionparser::completion::candidate()","Ruby optionparser::completion#candidate()","Ruby net::httpheader#canonical_each()","Ruby addrinfo#canonname()","Ruby net::smtp::response#capabilities()","Ruby net::imap#capability()","Ruby net::smtp#capable_auth_types()","Ruby net::smtp#capable_cram_md5_auth?()","Ruby net::smtp#capable_login_auth?()","Ruby net::smtp#capable_plain_auth?()","Ruby net::smtp#capable_starttls?()","Rails rails::generators::actions#capify!()","Ruby string#capitalize()","Ruby symbol#capitalize()","Rails activesupport::multibyte::chars#capitalize()","Ruby string#capitalize!()","Ruby cgi::htmlextension#caption()","Rails actionview::helpers::capturehelper#capture()","Rails kernel#capture()","Ruby open3::capture2()","Ruby open3::capture2e()","Ruby open3::capture3()","Ruby matchdata#captures()","Rails activerecord::connectionadapters::abstractadapter#case_insensitive_comparison()","Rails activerecord::connectionadapters::abstractmysqladapter#case_insensitive_comparison()","Rails activerecord::connectionadapters::databasestatements#case_sensitive_equality_operator()","Rails activerecord::connectionadapters::abstractadapter#case_sensitive_modifier()","Rails activerecord::connectionadapters::abstractmysqladapter#case_sensitive_modifier()","Ruby string#casecmp()","Ruby symbol#casecmp()","Ruby regexp#casefold?()","Ruby shell::commandprocessor#cat()","Ruby kernel#catch()","Rails class#cattr_accessor()","Rails class#cattr_reader()","Rails class#cattr_writer()","Ruby curses::cbreak()","Ruby cmath::cbrt()","Ruby math::cbrt()","Ruby cmath::cbrt!()","Ruby fileutils::cd()","Ruby shell#cd()","Ruby rexml::sax2listener#cdata()","Ruby rexml::streamlistener#cdata()","Ruby rexml::parsers::pullevent#cdata?()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#cdata_block()","Rails actionview::helpers::taghelper#cdata_section()","Ruby rexml::element#cdatas()","Ruby bigdecimal#ceil()","Ruby float#ceil()","Ruby integer#ceil()","Ruby integer#ceil()","Ruby numeric#ceil()","Ruby rational#ceil()","Ruby rexml::functions::ceiling()","Ruby string#center()","Ruby openssl::ssl::sslsocket#cert()","Ruby gem::security::trustdir#cert_path()","Ruby openssl::ocsp::request#certid()","Ruby openssl::pkcs7#certificates()","Ruby openssl::pkcs7#certificates=()","Ruby gem::commands::certcommand#certificates_matching()","Ruby net::pop3::certs()","Ruby rake::invocationexceptionmixin#chain()","Ruby rake::invocationexceptionmixin#chain=()","Ruby openssl::netscape::spki#challenge()","Ruby webrick::httpauth::basicauth#challenge()","Ruby webrick::httpauth::digestauth#challenge()","Ruby openssl::netscape::spki#challenge=()","Rails activerecord::connectionadapters::table#change()","Rails date#change()","Rails datetime#change()","Rails time#change()","Ruby rdoc::markup::attributemanager#change_attribute()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#change_column()","Rails activerecord::connectionadapters::schemastatements#change_column()","Rails activerecord::connectionadapters::abstractmysqladapter#change_column_default()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#change_column_default()","Rails activerecord::connectionadapters::schemastatements#change_column_default()","Rails activerecord::connectionadapters::abstractmysqladapter#change_column_null()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#change_column_null()","Rails activerecord::connectionadapters::sqlite3adapter#change_column_null()","Rails activerecord::connectionadapters::schemastatements#change_column_null()","Rails activerecord::connectionadapters::abstractmysqladapter#change_column_sql()","Rails activerecord::connectionadapters::table#change_default()","Ruby process::gid::change_privilege()","Ruby process::uid::change_privilege()","Rails activerecord::connectionadapters::schemastatements#change_table()","Rails activerecord::migration::commandrecorder#change_table()","Ruby irb::context#change_workspace()","Ruby observable#changed()","Rails activemodel::dirty#changed()","Ruby observable#changed?()","Rails activemodel::dirty#changed?()","Ruby rdoc::markup::attributemanager#changed_attribute_by_name()","Rails activemodel::dirty#changed_attributes()","Rails activerecord::autosaveassociation#changed_for_autosave?()","Rails activemodel::dirty#changes()","Ruby rdoc::markup::parser#char_pos()","Ruby rss::rexmllikexmlparser#character()","Ruby xmlrpc::xmlparser::streamparsermixin#character()","Ruby rexml::sax2listener#characters()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#characters()","Ruby file::chardev?()","Ruby file::stat#chardev?()","Ruby filetest#chardev?()","Ruby pathname#chardev?()","Ruby stringscanner#charpos()","Ruby argf#chars()","Ruby io#chars()","Ruby string#chars()","Ruby stringio#chars()","Ruby openuri::meta#charset()","Rails activerecord::connectionadapters::abstractmysqladapter#charset()","Rails activerecord::tasks::databasetasks#charset()","Rails activerecord::tasks::databasetasks#charset_current()","Ruby dir::chdir()","Ruby fileutils::chdir()","Ruby net::ftp#chdir()","Ruby shell#chdir()","Ruby net::imap#check()","Ruby pty::check()","Ruby rexml::text::check()","Ruby stringscanner#check()","Ruby win32::registry::api#check()","Rails actionview::helpers::formbuilder#check_box()","Rails actionview::helpers::formhelper#check_box()","Rails actionview::helpers::formtaghelper#check_box_tag()","Ruby gem::security::policy#check_cert()","Ruby gem::security::policy#check_chain()","Rails rails::generators::namedbase::check_class_collision()","Ruby gem::package::tarwriter#check_closed()","Ruby gem::configfile#check_credentials_permissions()","Ruby gem::security::policy#check_data()","Ruby rdoc::options#check_files()","Ruby gem::commands::checkcommand#check_gems()","Ruby rdoc::options#check_generator()","Ruby drb::drbserver#check_insecure_method()","Ruby pp::ppmethods#check_inspect_key()","Ruby gem::security::policy#check_key()","Ruby openssl::pkey::ec#check_key()","Ruby rdoc::parser::check_modeline()","Ruby rdoc::task#check_names()","Ruby openssl::ocsp::request#check_nonce()","Rails activerecord::migration::check_pending!()","Ruby openssl::x509::certificate#check_private_key()","Ruby gem::security::policy#check_root()","Ruby gem::commands::setupcommand#check_ruby_version()","Ruby makemakefile#check_signedness()","Ruby makemakefile#check_sizeof()","Ruby gem::installer#check_that_user_bin_dir_is_in_path()","Ruby gem::security::policy#check_trust()","Ruby stringscanner#check_until()","Ruby cgi::htmlextension#checkbox()","Ruby cgi::htmlextension#checkbox_group()","Rails activerecord::connectionadapters::connectionpool#checkin()","Rails activerecord::connectionadapters::connectionpool#checkout()","Ruby nqxml::node#childnodes()","Ruby rdoc::context#child_name()","Ruby pathname#children()","Ruby rexml::light::node#children()","Ruby rexml::parent#children()","Rails rails::paths::path#children()","Ruby file::chmod()","Ruby file#chmod()","Ruby fileutils::chmod()","Ruby object#chmod()","Ruby pathname#chmod()","Ruby fileutils::chmod_r()","Ruby kernel#chomp()","Ruby string#chomp()","Ruby string#chomp!()","Ruby gem::streamui#choose_from_list()","Ruby gem::userinteraction#choose_from_list()","Ruby kernel#chop()","Ruby string#chop()","Ruby string#chop!()","Ruby file::chown()","Ruby file#chown()","Ruby fileutils::chown()","Ruby pathname#chown()","Ruby fileutils::chown_r()","Ruby integer#chr()","Ruby integer#chr()","Ruby string#chr()","Ruby dir::chroot()","Ruby enumerable#chunk()","Ruby enumerator::lazy#chunk()","Ruby webrick::httpresponse#chunked=()","Ruby net::httpheader#chunked?()","Ruby webrick::httpresponse#chunked?()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#cidr()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#cidr_to_string()","Ruby openssl::engine#cipher()","Ruby openssl::ssl::sslsocket#cipher()","Ruby openssl::pkcs7#cipher=()","Ruby openssl::cipher::ciphers()","Ruby openssl::ssl::sslcontext#ciphers()","Ruby openssl::ssl::sslcontext#ciphers=()","Ruby date::civil()","Ruby datetime::civil()","Rails datetime::civil_from_format()","Ruby object#class()","Ruby win32::registry::predefinedkey#class()","Rails activesupport::deprecation::deprecatedconstantproxy#class()","Rails class#class_attribute()","Ruby rdoc::context#class_attributes()","Ruby rdoc::generator::darkfish#class_dir()","Ruby rdoc::generator::jsonindex#class_dir()","Ruby rdoc::ri::driver#class_document()","Ruby module#class_eval()","Rails kernel#class_eval()","Ruby module#class_exec()","Ruby rdoc::store#class_file()","Ruby rdoc::context#class_method_list()","Ruby rdoc::store#class_methods()","Ruby gem::ext::builder::class_name()","Ruby rss::baselistener#class_name()","Rails activerecord::reflection::macroreflection#class_name()","Rails rails::generators::namedbase#class_name()","Ruby rdoc::store#class_path()","Rails rails::generators::namedbase#class_path()","Ruby module#class_variable_defined?()","Ruby module#class_variable_get()","Ruby module#class_variable_set()","Ruby module#class_variables()","Ruby rdoc::context#classes()","Ruby rdoc::ri::driver#classes()","Ruby rdoc::ri::driver#classes_and_includes_and_extends_for()","Ruby rdoc::context#classes_and_modules()","Ruby rdoc::context#classes_hash()","Ruby rdoc::store#classes_hash()","Ruby set#classify()","Rails activesupport::inflector#classify()","Rails string#classify()","Rails activesupport::backtracecleaner#clean()","Ruby gem::commands::cleanupcommand#clean_gems()","Ruby pathname#cleanpath()","Ruby openssl::engine::cleanup()","Rails activesupport::cache::filestore#cleanup()","Rails activesupport::cache::memorystore#cleanup()","Rails activesupport::cache::nullstore#cleanup()","Rails activesupport::cache::store#cleanup()","Rails actiondispatch::reloader::cleanup!()","Ruby array#clear()","Ruby curses::clear()","Ruby curses::window#clear()","Ruby dbm#clear()","Ruby env::clear()","Ruby gc::profiler::clear()","Ruby gdbm#clear()","Ruby gem::dependencylist#clear()","Ruby hash#clear()","Ruby queue#clear()","Ruby rake::task#clear()","Ruby rake::taskmanager#clear()","Ruby sdbm#clear()","Ruby set#clear()","Ruby sizedqueue#clear()","Ruby string#clear()","Ruby stringscanner#clear()","Rails actiondispatch::flash::flashhash#clear()","Rails activemodel::errors#clear()","Rails activerecord::connectionadapters::connectionpool::queue#clear()","Rails activerecord::connectionadapters::mysqladapter::statementpool#clear()","Rails activerecord::connectionadapters::postgresqladapter::oid::typemap#clear()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#clear()","Rails activerecord::connectionadapters::sqlite3adapter::statementpool#clear()","Rails activerecord::connectionadapters::statementpool#clear()","Rails activesupport::cache::filestore#clear()","Rails activesupport::cache::memcachestore#clear()","Rails activesupport::cache::memorystore#clear()","Rails activesupport::cache::nullstore#clear()","Rails activesupport::cache::store#clear()","Rails activesupport::cache::strategy::localcache::localstore#clear()","Rails activesupport::descendantstracker::clear()","Rails activesupport::inflector::inflections#clear()","Rails activerecord::connectionadapters::schemacache#clear!()","Rails activesupport::dependencies::classcache#clear!()","Rails abstractcontroller::base::clear_action_methods!()","Ruby rake::task#clear_actions()","Rails activerecord::connectionadapters::connectionhandler#clear_active_connections!()","Rails activerecord::connectionadapters::connectionhandler#clear_all_connections!()","Rails actionview::resolver#clear_cache()","Rails activerecord::connectionadapters::abstractadapter#clear_cache!()","Rails activerecord::connectionadapters::mysqladapter#clear_cache!()","Rails activerecord::connectionadapters::postgresqladapter#clear_cache!()","Rails activerecord::connectionadapters::sqlite3adapter#clear_cache!()","Ruby rdoc::classmodule#clear_comment()","Ruby rake::task#clear_comments()","Ruby gem#clear_default_specs()","Ruby rake::filelist#clear_exclude()","Rails abstractcontroller::helpers::classmethods#clear_helpers()","Ruby gem::clear_paths()","Ruby rake::task#clear_prerequisites()","Rails activerecord::connectionadapters::querycache#clear_query_cache()","Rails activerecord::connectionadapters::connectionhandler#clear_reloadable_connections!()","Rails activerecord::connectionadapters::connectionpool#clear_reloadable_connections!()","Rails actioncontroller::mimeresponds::classmethods#clear_respond_to()","Rails activerecord::connectionadapters::schemacache#clear_table_cache!()","Rails activemodel::validations::classmethods#clear_validators!()","Ruby openssl::ssl::sslsocket#client_ca()","Rails activerecord::connectionadapters::mysqladapter#client_encoding()","Ruby webrick::httpstatus::client_error?()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#client_min_messages()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#client_min_messages=()","Ruby rdoc::task#clobber_task_description()","Ruby matrix#clone()","Ruby method#clone()","Ruby object#clone()","Ruby rexml::attribute#clone()","Ruby rexml::cdata#clone()","Ruby rexml::comment#clone()","Ruby rexml::doctype#clone()","Ruby rexml::document#clone()","Ruby rexml::element#clone()","Ruby rexml::instruction#clone()","Ruby rexml::text#clone()","Ruby rexml::xmldecl#clone()","Ruby singleton#clone()","Ruby unboundmethod#clone()","Ruby vector#clone()","Rails activerecord::core#clone()","Rails activesupport::safebuffer#clone_empty()","Ruby argf#close()","Ruby cgi::session#close()","Ruby cgi::session::filestore#close()","Ruby cgi::session::memorystore#close()","Ruby cgi::session::nullstore#close()","Ruby cgi::session::pstore#close()","Ruby curses::window#close()","Ruby dbm#close()","Ruby dl::handle#close()","Ruby dir#close()","Ruby fiddle::handle#close()","Ruby gdbm#close()","Ruby gem::package::tarreader#close()","Ruby gem::package::tarreader::entry#close()","Ruby gem::package::tarwriter#close()","Ruby io#close()","Ruby logger#close()","Ruby logger::logdevice#close()","Ruby net::ftp#close()","Ruby net::imap#close()","Ruby net::telnet#close()","Ruby openssl::buffering#close()","Ruby rake::ftpuploader#close()","Ruby resolv::dns#close()","Ruby sdbm#close()","Ruby sockssocket#close()","Ruby stringio#close()","Ruby syslog::close()","Ruby tempfile#close()","Ruby webrick::basiclog#close()","Ruby win32::registry#close()","Ruby win32::registry::predefinedkey#close()","Ruby zlib::gzipfile#close()","Ruby zlib::zstream#close()","Rails actiondispatch::http::uploadedfile#close()","Rails actiondispatch::response#close()","Rails activerecord::connectionadapters::abstractadapter#close()","Rails activesupport::gzip::stream#close()","Ruby tempfile#close!()","Ruby dl::handle#close_enabled?()","Ruby fiddle::handle#close_enabled?()","Ruby io#close_on_exec=()","Ruby io#close_on_exec?()","Ruby basicsocket#close_read()","Ruby io#close_read()","Ruby stringio#close_read()","Ruby curses::close_screen()","Ruby basicsocket#close_write()","Ruby io#close_write()","Ruby stringio#close_write()","Ruby argf#closed?()","Ruby curses::closed?()","Ruby dbm#closed?()","Ruby gdbm#closed?()","Ruby gem::package::tarreader::entry#closed?()","Ruby gem::package::tarwriter#closed?()","Ruby io#closed?()","Ruby net::ftp#closed?()","Ruby sdbm#closed?()","Ruby stringio#closed?()","Ruby zlib::gzipfile#closed?()","Ruby zlib::zstream#closed?()","Ruby stringio#closed_read?()","Ruby stringio#closed_write?()","Ruby curses::clrtoeol()","Ruby curses::window#clrtoeol()","Ruby net::telnet#cmd()","Ruby openssl::engine#cmds()","Ruby fileutils::cmp()","Ruby openssl::ocsp::certificateid#cmp()","Ruby openssl::x509::name#cmp()","Ruby openssl::ocsp::certificateid#cmp_issuer()","Ruby socket::ancillarydata#cmsg_is?()","Ruby webrick::httpstatus::status#code()","Rails actiondispatch::response#code()","Ruby win32ole::codepage()","Ruby win32ole::codepage=()","Ruby argf#codepoints()","Ruby io#codepoints()","Ruby string#codepoints()","Ruby stringio#codepoints()","Ruby bigdecimal#coerce()","Ruby bignum#coerce()","Ruby float#coerce()","Ruby matrix#coerce()","Ruby numeric#coerce()","Ruby openssl::bn#coerce()","Ruby uri::generic#coerce()","Ruby vector#coerce()","Ruby openssl::pkey::ec::group#cofactor()","Ruby rake::backtrace::collapse()","Rails activerecord::connectionadapters::abstractmysqladapter#collation()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#collation()","Rails activerecord::tasks::databasetasks#collation()","Rails activerecord::tasks::databasetasks#collation_current()","Ruby array#collect()","Ruby enumerable#collect()","Ruby enumerator::lazy#collect()","Ruby matrix#collect()","Ruby vector#collect()","Ruby array#collect!()","Ruby set#collect!()","Ruby vector#collect2()","Ruby enumerable#collect_concat()","Ruby enumerator::lazy#collect_concat()","Ruby rdoc::parser::ruby#collect_first_comment()","Ruby rake::application#collect_tasks()","Ruby rake::application#collect_tasks()","Ruby rdoc::tokenstream#collect_tokens()","Rails actiondispatch::routing::mapper::resources#collection()","Rails actionview::helpers::formbuilder#collection_check_boxes()","Rails actionview::helpers::formoptionshelper#collection_check_boxes()","Rails actionview::helpers::formbuilder#collection_radio_buttons()","Rails actionview::helpers::formoptionshelper#collection_radio_buttons()","Rails actionview::helpers::formbuilder#collection_select()","Rails actionview::helpers::formoptionshelper#collection_select()","Rails activesupport::logsubscriber#color()","Ruby curses::color_content()","Rails actionview::helpers::formhelper#color_field()","Rails actionview::helpers::formtaghelper#color_field_tag()","Ruby curses::color_pair()","Ruby curses::color_pairs()","Ruby curses::window#color_set()","Rails rails::application::configuration#colorize_logging()","Rails rails::application::configuration#colorize_logging=()","Ruby curses::colors()","Ruby curses::cols()","Ruby matrix#column()","Ruby ripper::filter#column()","Rails activerecord::connectionadapters::postgresqladapter::tabledefinition#column()","Rails activerecord::connectionadapters::table#column()","Rails activerecord::connectionadapters::tabledefinition#column()","Rails activerecord::locking::optimistic::classmethods#column_defaults()","Rails activerecord::modelschema::classmethods#column_defaults()","Rails activerecord::connectionadapters::schemastatements#column_exists?()","Rails activerecord::connectionadapters::table#column_exists?()","Rails activerecord::attributemethods#column_for_attribute()","Rails activerecord::connectionadapters::databaselimits#column_name_length()","Rails activerecord::modelschema::classmethods#column_names()","Rails activerecord::connectionadapters::columndumper#column_spec()","Ruby matrix::column_vector()","Ruby matrix#column_vectors()","Ruby matrix::columns()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#columns()","Rails activerecord::connectionadapters::schemacache#columns()","Rails activerecord::connectionadapters::schemastatements#columns()","Rails activerecord::connectionadapters::tabledefinition#columns()","Rails activerecord::modelschema::classmethods#columns()","Rails activerecord::connectionadapters::schemastatements#columns_for_remove()","Rails activerecord::connectionadapters::schemacache#columns_hash()","Rails activerecord::modelschema::classmethods#columns_hash()","Rails activerecord::connectionadapters::databaselimits#columns_per_multicolumn_index()","Rails activerecord::connectionadapters::databaselimits#columns_per_table()","Ruby array#combination()","Ruby pp::ppmethods#comma_breakable()","Ruby drb::extservmanager::command()","Ruby drb::extservmanager::command=()","Ruby gem::commandmanager#command_names()","Ruby rexml::sax2listener#comment()","Ruby rexml::streamlistener#comment()","Ruby zlib::gzipfile#comment()","Ruby rdoc::codeobject#comment=()","Ruby rake::task#comment=()","Ruby zlib::gzipwriter#comment=()","Ruby rexml::parsers::pullevent#comment?()","Ruby rexml::element#comments()","Ruby date::commercial()","Ruby datetime::commercial()","Ruby pstore#commit()","Rails actiondispatch::response#commit!()","Rails activerecord::connectionadapters::databasestatements#commit_db_transaction()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#commit_db_transaction()","Rails actiondispatch::response#committed?()","Rails activerecord::connectionadapters::transactionstate#committed?()","Ruby gem::command::common_options()","Ruby array#compact()","Ruby array#compact!()","Ruby gem::indexer#compact_specs()","Rails activesupport::timewithzone#comparable_time()","Ruby hash#compare_by_identity()","Ruby hash#compare_by_identity?()","Ruby fileutils::compare_file()","Ruby rexml::functions::compare_language()","Ruby fileutils::compare_stream()","Rails date#compare_with_coercion()","Rails time#compare_with_coercion()","Rails date#compare_without_coercion()","Rails time#compare_without_coercion()","Ruby encoding::compatible?()","Ruby regexp::compile()","Ruby rubyvm::instructionsequence::compile()","Ruby rubyvm::instructionsequence::compile_file()","Rails activesupport::configurable::configuration::compile_methods!()","Rails activesupport::configurable::configuration#compile_methods!()","Ruby rubyvm::instructionsequence::compile_option()","Ruby rubyvm::instructionsequence::compile_option=()","Ruby gem::commands::lockcommand#complain()","Ruby optionparser::completion#complete()","Ruby optionparser::list#complete()","Ruby rdoc::classmodule#complete()","Ruby rdoc::ri::driver#complete()","Ruby rdoc::store#complete()","Ruby win32::sspi::negotiateauth#complete_authentication()","Ruby readline::completer_quote_characters()","Ruby readline::completer_quote_characters=()","Ruby readline::completer_word_break_characters()","Ruby readline::completer_word_break_characters=()","Ruby readline::completion_append_character()","Ruby readline::completion_append_character=()","Ruby readline::completion_case_fold()","Ruby readline::completion_case_fold=()","Ruby readline::completion_proc()","Ruby readline::completion_proc=()","Ruby matrix#component()","Ruby uri::generic#component()","Ruby uri::generic::component()","Ruby vector#component()","Ruby uri::generic#component_ary()","Rails rails::api::apptask#component_root_dir()","Rails rails::api::repotask#component_root_dir()","Rails activesupport::multibyte::chars#compose()","Rails activesupport::multibyte::unicode#compose()","Rails activerecord::aggregations::classmethods#composed_of()","Ruby gem::indexer#compress()","Rails activesupport::gzip::compress()","Ruby gem::indexer#compress_indicies()","Rails actionview::helpers::asseturlhelper#compute_asset_extname()","Rails actionview::helpers::asseturlhelper#compute_asset_host()","Rails actionview::helpers::asseturlhelper#compute_asset_path()","Ruby openssl::pkey::dh#compute_key()","Rails rails::rack::logger#compute_tags()","Rails activerecord::inheritance::classmethods#compute_type()","Ruby array#concat()","Ruby rdoc::markup::document#concat()","Ruby rexml::functions::concat()","Ruby shell::commandprocessor#concat()","Ruby string#concat()","Ruby stringscanner#concat()","Rails actionview::helpers::texthelper#concat()","Rails activerecord::associations::collectionproxy#concat()","Rails activesupport::safebuffer#concat()","Rails rails::paths::path#concat()","Rails actiondispatch::routing::mapper::concerns#concern()","Rails actiondispatch::routing::mapper::concerns#concerns()","Ruby irb::conf()","Ruby drb::config()","Rails activesupport::configurable#config()","Rails activesupport::configurable::classmethods#config()","Rails rails::appbuilder#config()","Rails rails::dbconsole#config()","Rails rails::engine::config()","Rails rails::pluginbuilder#config()","Rails rails::railtie#config()","Ruby openssl::x509::extensionfactory#config=()","Rails activesupport::configurable::classmethods#config_accessor()","Ruby gem::config_file()","Ruby gem::configfile#config_file_name()","Rails rails::appbuilder#configru()","Ruby gem::configuration()","Rails rails::configuration()","Ruby gem::configuration=()","Rails activesupport::configurable::classmethods#configure()","Rails rails::railtie::configurable::classmethods#configure()","Ruby gem::remotefetcher#configure_connection_for_https()","Rails rails::api::task#configure_rdoc_files()","Ruby gem::dependencyresolutionerror#conflicting_dependencies()","Ruby gem::dependencyresolver::dependencyconflict#conflicting_dependencies()","Ruby gem::specification#conflicts()","Ruby complex#conj()","Ruby matrix#conj()","Ruby numeric#conj()","Ruby complex#conjugate()","Ruby matrix#conjugate()","Ruby numeric#conjugate()","Ruby addrinfo#connect()","Ruby drb::drbsslsocket::sslconfig#connect()","Ruby net::ftp#connect()","Ruby openssl::ssl::sslsocket#connect()","Ruby rake::ftpuploader#connect()","Ruby socket#connect()","Ruby udpsocket#connect()","Ruby win32ole::connect()","Ruby basicsocket#connect_address()","Ruby addrinfo#connect_from()","Ruby openssl::ssl::sslsocket#connect_nonblock()","Ruby socket#connect_nonblock()","Ruby addrinfo#connect_to()","Rails activerecord::connectionadapters::connectionhandler#connected?()","Rails activerecord::connectionadapters::connectionpool#connected?()","Rails activerecord::connectionhandling#connected?()","Ruby gserver#connecting()","Rails activerecord::connectionadapters::connectionpool#connection()","Rails activerecord::connectionhandling#connection()","Rails activerecord::core#connection()","Rails activerecord::migration#connection()","Ruby net::httpheader#connection_close?()","Rails activerecord::connectionhandling#connection_config()","Ruby gem::remotefetcher#connection_for()","Rails activerecord::core#connection_handler()","Rails activerecord::core::connection_handler()","Rails activerecord::core::connection_handler=()","Rails activerecord::connectionhandling#connection_id()","Rails activerecord::connectionhandling#connection_id=()","Ruby net::httpheader#connection_keep_alive?()","Rails activerecord::connectionhandling#connection_pool()","Rails activerecord::connectionadapters::connectionhandler#connection_pool_list()","Rails activerecord::connectionadapters::connectionhandler#connection_pools()","Ruby gserver#connections()","Ruby gem::dependencyinstaller#consider_local?()","Ruby gem::dependencyinstaller#consider_remote?()","Ruby io::console()","Rails rails::railtie::console()","Ruby module#const_defined?()","Ruby json::const_defined_in?()","Ruby module#const_get()","Ruby win32ole::const_load()","Ruby module#const_missing()","Ruby module#const_set()","Ruby rake::application#const_warning()","Ruby rake::application#const_warning()","Rails activesupport::inflector#constantize()","Rails string#constantize()","Ruby module::constants()","Ruby module#constants()","Rails actiondispatch::routing::mapper::scoping#constraints()","Rails actiondispatch::routing::routewrapper#constraints()","Ruby rss::itunesitemmodel::itunesduration#construct()","Rails activerecord::findermethods#construct_join_dependency_for_association_find()","Rails activerecord::findermethods#construct_limited_ids_condition()","Rails activerecord::findermethods#construct_relation_for_association_calculations()","Rails activerecord::findermethods#construct_relation_for_association_find()","Ruby rexml::iosource#consume()","Ruby rexml::source#consume()","Rails activesupport::multibyte::chars::consumes?()","Ruby rexml::functions::contains()","Rails html::whitelistsanitizer#contains_bad_protocols?()","Ruby gem::specification#contains_requirable_file?()","Ruby rdoc::rd::blockparser#content()","Ruby rss::itunesitemmodel::itunesduration#content=()","Ruby rss::maker::itunesitemmodel::itunesdurationbase#content=()","Rails activerecord::modelschema::classmethods#content_columns()","Ruby openuri::meta#content_encoding()","Rails actionview::helpers::capturehelper#content_for()","Rails actionview::helpers::capturehelper#content_for?()","Ruby httpserver::request#content_length()","Ruby net::httpheader#content_length()","Ruby webrick::httprequest#content_length()","Ruby webrick::httpresponse#content_length()","Rails actiondispatch::request#content_length()","Ruby net::httpheader#content_length=()","Ruby webrick::httpresponse#content_length=()","Rails actiondispatch::http::mimenegotiation#content_mime_type()","Ruby net::httpheader#content_range()","Ruby rss::element#content_setup()","Rails actionview::helpers::activemodelinstancetag#content_tag()","Rails actionview::helpers::taghelper#content_tag()","Rails actionview::helpers::recordtaghelper#content_tag_for()","Ruby net::httpheader#content_type()","Ruby openuri::meta#content_type()","Ruby rss::atom::contentmodel::classmethods#content_type()","Ruby webrick::httprequest#content_type()","Ruby webrick::httpresponse#content_type()","Rails actioncontroller::metal#content_type()","Rails actiondispatch::http::mimenegotiation#content_type()","Ruby net::httpheader#content_type=()","Ruby webrick::httpresponse#content_type=()","Rails actioncontroller::metal#content_type=()","Rails actiondispatch::response#content_type=()","Ruby gem::package#contents()","Ruby gem::package::old#contents()","Ruby debugger__#context()","Ruby rexml::doctype#context()","Ruby rexml::parseexception#context()","Ruby rexml::functions::context=()","Ruby net::smtp::response#continue?()","Ruby rdoc::parser::changelog#continue_entry_body()","Ruby net::http#continue_timeout=()","Ruby ","Rails actiondispatch::routing::mapper::scoping#controller()","Rails actiondispatch::routing::routewrapper#controller()","Rails rails::consolemethods#controller()","Rails actioncontroller::metal::controller_name()","Rails actioncontroller::metal#controller_name()","Rails abstractcontroller::base#controller_path()","Rails abstractcontroller::base::controller_path()","Rails actionmailer::base::controller_path()","Ruby xmlrpc::create#conv2value()","Ruby csv#convert()","Ruby encoding::converter#convert()","Ruby optionparser::completion#convert()","Ruby rdoc::markup#convert()","Ruby rdoc::markup::formatter#convert()","Ruby rdoc::markup::tohtmlsnippet#convert()","Ruby rdoc::markup::tolabel#convert()","Ruby rss::converter#convert()","Ruby rss::element#convert()","Ruby webrick::httpversion::convert()","Ruby rdoc::markup::attributemanager#convert_attrs()","Ruby rdoc::markup::formatter#convert_flow()","Ruby rdoc::markup::tohtmlsnippet#convert_flow()","Ruby rdoc::markup::attributemanager#convert_html()","Rails activesupport::hashwithindifferentaccess#convert_key()","Rails activesupport::hashwithindifferentaccess#convert_key()","Ruby rdoc::markup::formatter#convert_special()","Ruby rdoc::markup::tobs#convert_special()","Ruby rdoc::markup::attributemanager#convert_specials()","Ruby rdoc::markup::formatter#convert_string()","Ruby rdoc::markup::tobs#convert_string()","Ruby rdoc::markup::tohtml#convert_string()","Rails actioncontroller::modelnaming#convert_to_model()","Rails actionview::modelnaming#convert_to_model()","Rails activesupport::hashwithindifferentaccess#convert_value()","Rails activesupport::hashwithindifferentaccess#convert_value()","Ruby rss::element#converter=()","Ruby csv#converters()","Ruby makemakefile#convertible_int()","Ruby encoding::converter#convpath()","Ruby io#cooked()","Ruby io#cooked!()","Rails actiondispatch::request#cookie_jar()","Rails actiondispatch::response#cookies()","Ruby fileutils::copy()","Ruby net::http#copy()","Ruby net::imap#copy()","Ruby openssl::bn#copy()","Ruby sys#copy()","Rails activerecord::migration#copy()","Ruby fileutils::copy_entry()","Ruby fileutils::copy_file()","Ruby sys#copy_files()","Ruby openssl::ocsp::basicresponse#copy_nonce()","Ruby rdoc::generator::darkfish#copy_static()","Ruby fileutils::copy_stream()","Ruby io::copy_stream()","Ruby rdoc::markup::attributemanager#copy_string()","Ruby process::status#coredump?()","Ruby gem::version::correct?()","Ruby gem::remotefetcher#correct_for_windows_path()","Ruby bigmath#cos()","Ruby cmath::cos()","Ruby math::cos()","Ruby cmath::cos!()","Ruby cmath::cosh()","Ruby math::cosh()","Ruby cmath::cosh!()","Ruby array#count()","Ruby enumerable#count()","Ruby gc::count()","Ruby rexml::functions::count()","Ruby string#count()","Rails activemodel::errors#count()","Rails activerecord::associations::collectionproxy#count()","Rails activerecord::calculations#count()","Rails activerecord::querying#count_by_sql()","Ruby objectspace::count_objects()","Ruby observable#count_observers()","Ruby vector#covector()","Ruby range#cover?()","Ruby rdoc::stats#coverage_level=()","Ruby fileutils::cp()","Ruby object#cp()","Ruby fileutils::cp_r()","Ruby net::smtp::response#cram_md5_challenge()","Ruby zlib::gzipfile#crc()","Ruby zlib::crc32()","Ruby zlib::crc32_combine()","Ruby zlib::crc_table()","Ruby dl::cstructbuilder::create()","Ruby fiddle::cstructbuilder::create()","Ruby gem::noaliasyamltree::create()","Ruby gem::requirement::create()","Ruby gem::requirement::create()","Ruby gem::version::create()","Ruby net::imap#create()","Ruby openssl::ocsp::response::create()","Ruby openssl::pkcs12::create()","Ruby resolv::dns::name::create()","Ruby resolv::ipv4::create()","Ruby resolv::ipv6::create()","Ruby win32::registry::create()","Ruby win32::registry#create()","Rails activerecord::associations::collectionproxy#create()","Rails activerecord::connectionadapters::mysql2adapter#create()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#create()","Rails activerecord::persistence::classmethods#create()","Rails activerecord::relation#create()","Rails activerecord::tasks::databasetasks#create()","Rails activesupport::timezone::create()","Rails activerecord::associations::collectionproxy#create!()","Rails activerecord::relation#create!()","Rails activerecord::validations::classmethods#create!()","Rails activerecord::tasks::databasetasks#create_all()","Ruby dl::importer#create_carried_function()","Ruby dl::carriedfunction#create_carrier()","Ruby gem::security::create_cert()","Ruby gem::security::create_cert_email()","Ruby gem::security::create_cert_self_signed()","Rails activerecord::tasks::databasetasks#create_current()","Rails activerecord::connectionadapters::abstractmysqladapter#create_database()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#create_database()","Rails activerecord::tasks::databasetasks#create_database_url()","Ruby rdoc::parser::changelog#create_document()","Ruby rdoc::parser::changelog#create_entries()","Ruby openssl::x509::extensionfactory#create_ext()","Ruby openssl::x509::extensionfactory#create_ext_from_array()","Ruby openssl::x509::extensionfactory#create_ext_from_hash()","Ruby openssl::x509::extensionfactory#create_ext_from_string()","Ruby openssl::x509::extensionfactory#create_extension()","Rails activerecord::fixtureset::create_fixtures()","Ruby rexml::sourcefactory::create_from()","Ruby win32ole::create_guid()","Ruby makemakefile#create_header()","Ruby rdoc::parser::changelog#create_items()","Rails activerecord::connectionadapters::schemastatements#create_join_table()","Ruby gem::security::create_key()","Ruby webrick::utils::create_listeners()","Rails rails::generators::mailergenerator#create_mailer_file()","Ruby makemakefile#create_makefile()","Rails activerecord::reflection::classmethods#create_reflection()","Ruby rake::task#create_rule()","Ruby rake::taskmanager#create_rule()","Rails activerecord::connectionadapters::abstractadapter#create_savepoint()","Rails activerecord::connectionadapters::abstractmysqladapter#create_savepoint()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#create_savepoint()","Rails activerecord::connectionadapters::sqlite3adapter#create_savepoint()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#create_schema()","Ruby webrick::utils::create_self_signed_cert()","Ruby net::pop3::create_ssl_params()","Rails activerecord::connectionadapters::schemastatements#create_table()","Rails activerecord::schemamigration::create_table()","Ruby dl::importer#create_temp_function()","Ruby dl::importer#create_value()","Ruby fiddle::importer#create_value()","Rails activerecord::querymethods#create_with()","Ruby win32::registry#created?()","Ruby gem::configfile#credentials_path()","Ruby openssl::x509::extension#critical=()","Ruby openssl::x509::extension#critical?()","Ruby openssl::x509::extensionfactory#crl=()","Ruby openssl::pkcs7#crls()","Ruby openssl::pkcs7#crls=()","Ruby curses::crmode()","Ruby rdoc::markup::tohtmlcrossref#cross_reference()","Ruby string#crypt()","Rails actionview::helpers::csrfhelper#csrf_meta_tag()","Rails actionview::helpers::csrfhelper#csrf_meta_tags()","Ruby rdoc::markdown#css()","Ruby date#ctime()","Ruby file::ctime()","Ruby file#ctime()","Ruby file::stat#ctime()","Ruby pathname#ctime()","Ruby time#ctime()","Ruby openssl::engine#ctrl_cmd()","Ruby dl::cfunc#ctype()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#ctype()","Ruby dl::cfunc#ctype=()","Ruby fiber::current()","Ruby rdoc::rdoc::current()","Ruby thread::current()","Rails date::current()","Rails datetime::current()","Rails time::current()","Ruby rdoc::rdoc::current=()","Rails activerecord::tasks::databasetasks#current_config()","Rails actionview::helpers::texthelper#current_cycle()","Rails activerecord::connectionadapters::abstractmysqladapter#current_database()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#current_database()","Ruby prettyprint#current_group()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#current_hash()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#current_hash()","Ruby rexml::iosource#current_line()","Ruby rexml::source#current_line()","Rails actionview::helpers::urlhelper#current_page?()","Rails activerecord::connectionadapters::abstractadapter#current_savepoint_name()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#current_schema()","Ruby rake::taskmanager#current_scope()","Ruby rdoc::context#current_section()","Ruby drb::current_server()","Ruby proc#curry()","Ruby curses::curs_set()","Ruby openssl::pkey::ec::group#curve_name()","Ruby curses::window#curx()","Ruby curses::window#cury()","Rails actioncontroller::mimeresponds::collector#custom()","Rails actionmailer::collector#custom()","Ruby rdoc::generator::markup#cvs_url()","Ruby rdoc::toplevel#cvs_url()","Ruby date#cwday()","Ruby date#cweek()","Ruby date#cwyear()","Ruby array#cycle()","Ruby enumerable#cycle()","Rails actionview::helpers::texthelper#cycle()","Ruby matrix::eigenvaluedecomposition#d()","Ruby process::daemon()","Rails activerecord::attributemethods::primarykey::classmethods#dangerous_attribute_method?()","Rails activesupport::inflector#dasherize()","Rails string#dasherize()","Ruby net::smtp#data()","Ruby openssl::config#data()","Ruby resolv::dns::resource::txt#data()","Ruby socket::ancillarydata#data()","Ruby socket::option#data()","Ruby openssl::pkcs7#data=()","Ruby zlib::zstream#data_type()","Rails rails::application::configuration#database_configuration()","Rails rails::appbuilder#database_yml()","Ruby gem::datadir()","Ruby gem::specification#date()","Ruby rake::ftpfile::date()","Rails actiondispatch::http::cache::response#date()","Ruby gem::specification#date=()","Ruby rss::maker::channelbase#date=()","Ruby rss::maker::itemsbase::itembase#date=()","Ruby rss::maker::itemsbase::itembase::sourcebase#date=()","Rails actiondispatch::http::cache::response#date=()","Rails actiondispatch::http::cache::response#date?()","Ruby xmlrpc::convert::datetime()","Rails actionview::helpers::formhelper#date_field()","Rails actionview::helpers::formtaghelper#date_field_tag()","Rails actionview::helpers::datehelper#date_select()","Rails actionview::helpers::formbuilder#date_select()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#daterange()","Rails actionview::helpers::formhelper#datetime_field()","Rails actionview::helpers::formtaghelper#datetime_field_tag()","Ruby logger#datetime_format()","Ruby logger#datetime_format=()","Rails actionview::helpers::formhelper#datetime_local_field()","Rails actionview::helpers::formtaghelper#datetime_local_field_tag()","Rails actionview::helpers::datehelper#datetime_select()","Rails actionview::helpers::formbuilder#datetime_select()","Ruby date#day()","Ruby time#day()","Rails numeric#day()","Ruby xmlrpc::datetime#day=()","Ruby date#day_fraction()","Rails numeric#days()","Rails dateandtime::calculations#days_ago()","Rails time::days_in_month()","Rails dateandtime::calculations#days_since()","Rails dateandtime::calculations#days_to_week_start()","Rails rails::appbuilder#db()","Ruby array#dclone()","Ruby fixnum#dclone()","Ruby float#dclone()","Ruby object#dclone()","Ruby symbol#dclone()","Ruby rexml::parsers::sax2parser#deafen()","Ruby gem::streamui#debug()","Ruby logger#debug()","Ruby net::imap::debug()","Ruby openssl::debug()","Ruby syslog::logger#debug()","Ruby webrick::basiclog#debug()","Rails actionview::helpers::debughelper#debug()","Ruby net::imap::debug=()","Ruby openssl::debug=()","Ruby shell#debug=()","Ruby irb::context#debug?()","Ruby logger#debug?()","Ruby webrick::basiclog#debug?()","Ruby irb::context#debug_level=()","Ruby rdoc::generator::darkfish#debug_msg()","Ruby rdoc::generator::jsonindex#debug_msg()","Ruby net::smtp#debug_output=()","Ruby debugger__#debug_thread_info()","Rails kernel#debugger()","Rails rails::console#debugger?()","Ruby openssl::asn1::decode()","Ruby rexml::encoding#decode()","Ruby uri::escape#decode()","Ruby xmlrpc::base64::decode()","Rails activesupport::json::decode()","Ruby base64#decode64()","Ruby openssl::asn1::decode_all()","Rails actioncontroller::httpauthentication::basic#decode_credentials()","Rails actioncontroller::httpauthentication::digest#decode_credentials()","Rails actioncontroller::httpauthentication::digest#decode_credentials_header()","Ruby net::imap::decode_utf7()","Ruby uri::decode_www_form()","Ruby uri::decode_www_form_component()","Ruby xmlrpc::base64#decoded()","Rails activesupport::multibyte::chars#decompose()","Rails activesupport::multibyte::unicode#decompose()","Rails activesupport::gzip::decompress()","Rails activesupport::inflector#deconstantize()","Rails string#deconstantize()","Rails activerecord::persistence#decrement()","Rails activesupport::cache::filestore#decrement()","Rails activesupport::cache::memorystore#decrement()","Rails activesupport::cache::nullstore#decrement()","Rails activesupport::cache::store#decrement()","Rails activerecord::persistence#decrement!()","Rails activerecord::countercache::classmethods#decrement_counter()","Rails activerecord::connectionadapters::abstractadapter#decrement_open_transactions()","Ruby openssl::cipher#decrypt()","Ruby openssl::pkcs7#decrypt()","Rails activesupport::messageencryptor#decrypt_and_verify()","Ruby rexml::parent#deep_clone()","Rails array#deep_dup()","Rails hash#deep_dup()","Rails object#deep_dup()","Rails hash#deep_merge()","Rails hash#deep_merge!()","Rails actiondispatch::request#deep_munge()","Rails activesupport::hashwithindifferentaccess#deep_stringify_keys()","Rails activesupport::hashwithindifferentaccess#deep_stringify_keys()","Rails hash#deep_stringify_keys()","Rails activesupport::hashwithindifferentaccess#deep_stringify_keys!()","Rails activesupport::hashwithindifferentaccess#deep_stringify_keys!()","Rails hash#deep_stringify_keys!()","Rails activesupport::hashwithindifferentaccess#deep_symbolize_keys()","Rails activesupport::hashwithindifferentaccess#deep_symbolize_keys()","Rails hash#deep_symbolize_keys()","Rails hash#deep_symbolize_keys!()","Rails hash#deep_transform_keys()","Rails hash#deep_transform_keys!()","Ruby rss::maker::base#def_array_element()","Ruby rss::maker::atompersons#def_atom_persons()","Ruby rss::maker::atomtextconstruct#def_atom_text_construct()","Ruby erb#def_class()","Ruby rss::itunesmodelutils#def_class_accessor()","Ruby rss::maker::itunesbasemodel#def_class_accessor()","Ruby rss::maker::base#def_classed_element()","Ruby rss::maker::base#def_classed_element_without_accessor()","Ruby rss::maker::base#def_classed_elements()","Ruby rss::converter#def_convert()","Ruby rss::element#def_corresponded_attr_reader()","Ruby rss::element#def_corresponded_attr_writer()","Ruby rss::maker::itunesbasemodel#def_csv_accessor()","Ruby rss::maker::base#def_csv_element()","Ruby forwardable#def_delegator()","Ruby singleforwardable#def_delegator()","Ruby forwardable#def_delegators()","Ruby singleforwardable#def_delegators()","Ruby e2mm::def_e2message()","Ruby e2mm::def_e2message()","Ruby exception2messagemapper#def_e2message()","Ruby exception2messagemapper#def_e2message()","Ruby rss::itunesmodelutils#def_element_class_accessor()","Ruby rss::itunesmodelutils#def_elements_class_accessor()","Ruby rss::maker::itunesbasemodel#def_elements_class_accessor()","Ruby rss::converter#def_else_enc()","Ruby erb::defmethod::def_erb_method()","Ruby e2mm::def_exception()","Ruby e2mm::def_exception()","Ruby exception2messagemapper#def_exception()","Ruby exception2messagemapper#def_exception()","Ruby irb::contextextender::def_extend_command()","Ruby irb::extendcommandbundle::def_extend_command()","Ruby optionparser#def_head_option()","Ruby rss::converter#def_iconv_convert()","Ruby irb::inspector::def_inspector()","Ruby forwardable#def_instance_delegator()","Ruby forwardable#def_instance_delegators()","Ruby erb#def_method()","Ruby erb#def_module()","Ruby irb::notifier::def_notifier()","Ruby irb::notifier::compositenotifier#def_notifier()","Ruby optionparser#def_option()","Ruby rss::maker::base#def_other_element()","Ruby rss::maker::base#def_other_element_without_accessor()","Ruby irb::methodextender#def_post_proc()","Ruby irb::methodextender#def_pre_proc()","Ruby curses::def_prog_mode()","Ruby rss::converter#def_same_enc()","Ruby singleforwardable#def_single_delegator()","Ruby singleforwardable#def_single_delegators()","Ruby shell::def_system_command()","Ruby shell::commandprocessor::def_system_command()","Ruby optionparser#def_tail_option()","Ruby rss::converter#def_to_euc_jp_from_iso_2022_jp()","Ruby rss::converter#def_to_euc_jp_from_shift_jis()","Ruby rss::converter#def_to_euc_jp_from_utf_8()","Ruby rss::converter#def_to_iso_2022_jp_from_euc_jp()","Ruby rss::converter#def_to_iso_8859_1_from_utf_8()","Ruby rss::converter#def_to_shift_jis_from_euc_jp()","Ruby rss::converter#def_to_shift_jis_from_utf_8()","Ruby rss::converter#def_to_utf_8_from_euc_jp()","Ruby rss::converter#def_to_utf_8_from_iso_8859_1()","Ruby rss::converter#def_to_utf_8_from_shift_jis()","Ruby rss::converter#def_uconv_convert_if_can()","Ruby rss::maker::itunesbasemodel#def_yes_clean_other_accessor()","Ruby rss::maker::itunesbasemodel#def_yes_other_accessor()","Ruby gem::requirement::default()","Ruby gem::requirement::default()","Ruby hash#default()","Ruby rexml::xmldecl::default()","Ruby win32ole_param#default()","Rails actionmailer::base::default()","Rails activesupport::hashwithindifferentaccess#default()","Rails activesupport::hashwithindifferentaccess#default()","Ruby hash#default=()","Ruby drb::drbserver::default_acl()","Rails actioncontroller::responder#default_action()","Rails rails::generators::base::default_aliases_for_option()","Ruby drb::drbserver::default_argc_limit()","Ruby gem::default_bindir()","Ruby gem::default_cert_path()","Ruby gem::default_dir()","Ruby win32ole_type#default_event_sources()","Ruby gem::default_exec_format()","Ruby encoding::default_external()","Ruby encoding::default_external=()","Rails rails::generators::base::default_for_option()","Ruby gem::specification#default_gem?()","Rails rails::generators::base::default_generator_root()","Rails actiondispatch::ssl::default_hsts_options()","Rails actionmailer::base#default_i18n_subject()","Ruby drb::drbserver::default_id_conv()","Ruby net::imap::default_imap_port()","Ruby net::imap::default_imaps_port()","Rails date#default_inspect()","Rails datetime#default_inspect()","Ruby encoding::default_internal()","Ruby encoding::default_internal=()","Ruby gem::default_key_path()","Ruby drb::drbserver::default_load_limit()","Ruby win32ole_type#default_ole_types()","Ruby rdoc::ri::driver::default_options()","Rails rails::server#default_options()","Rails actionmailer::base::default_options=()","Ruby rss::parser#default_parser()","Ruby rss::parser#default_parser=()","Ruby gem::default_path()","Ruby net::pop3::default_pop3_port()","Ruby net::pop3::default_pop3s_port()","Ruby net::http::default_port()","Ruby net::imap::default_port()","Ruby net::pop3::default_port()","Ruby net::smtp::default_port()","Ruby uri::generic#default_port()","Ruby uri::generic::default_port()","Rails activerecord::connectionadapters::sqlite3adapter#default_primary_key_type()","Ruby hash#default_proc()","Ruby hash#default_proc=()","Ruby shell#default_record_separator()","Ruby shell#default_record_separator=()","Rails actioncontroller::implicitrender#default_render()","Rails actioncontroller::responder#default_render()","Ruby gem::default_rubygems_dirs()","Ruby drb::drbserver::default_safe_level()","Rails activerecord::scoping::default::classmethods#default_scope()","Rails activerecord::scoping::default::default_scopes?()","Rails activerecord::connectionadapters::databasestatements#default_sequence_name()","Rails rails::generators::base::default_source_root()","Ruby gem::default_sources()","Ruby gem::specification#default_specifications_dir()","Ruby object#default_src_encoding()","Ruby net::smtp::default_ssl_context()","Ruby net::imap::default_ssl_port()","Ruby net::smtp::default_ssl_port()","Ruby net::smtp::default_submission_port()","Ruby shell#default_system_path()","Ruby shell#default_system_path=()","Ruby rdoc::options#default_title=()","Ruby net::imap::default_tls_port()","Ruby net::smtp::default_tls_port()","Rails actiondispatch::routing::mapper::base#default_url_options()","Rails actiondispatch::routing::mapper::base#default_url_options=()","Ruby gem::specification#default_value()","Rails rails::generators::base::default_value_for_option()","Ruby rdoc::task#defaults()","Rails actiondispatch::routing::mapper::scoping#defaults()","Ruby gem::command#defaults_str()","Ruby gem::commands::sourcescommand#defaults_str()","Ruby gem::packagetask#define()","Ruby optionparser#define()","Ruby rdoc::task#define()","Ruby rake::packagetask#define()","Rails activerecord::dynamicmatchers::method#define()","Rails activerecord::schema::define()","Ruby sync_m::define_aliases()","Ruby sync_m::define_aliases()","Rails activemodel::attributemethods::classmethods#define_attribute_method()","Rails activemodel::attributemethods::classmethods#define_attribute_methods()","Rails activesupport::callbacks::classmethods#define_callbacks()","Ruby objectspace::define_finalizer()","Ruby optionparser#define_head()","Rails activerecord::attributemethods::primarykey::classmethods#define_method_attribute()","Rails activerecord::attributemethods::read::classmethods#define_method_attribute()","Rails activerecord::attributemethods::timezoneconversion::classmethods#define_method_attribute=()","Rails activerecord::attributemethods::write::classmethods#define_method_attribute=()","Rails activemodel::callbacks#define_model_callbacks()","Ruby rake::altsystem#define_module_function()","Ruby object#define_singleton_method()","Ruby optionparser#define_tail()","Ruby rake::task#define_task()","Ruby rake::taskmanager#define_task()","Ruby tracepoint#defined_class()","Ruby rdoc::context#defined_in?()","Ruby rdoc::attr#definition()","Ruby rdoc::normalclass#definition()","Ruby rdoc::normalmodule#definition()","Ruby rdoc::singleclass#definition()","Ruby rdoc::markdown#definition_lists()","Ruby gem::deflate()","Ruby zlib::deflate()","Ruby zlib::deflate#deflate()","Ruby zlib::deflate::deflate()","Ruby openssl::pkey::ec::group#degree()","Ruby curses::delch()","Ruby curses::window#delch()","Ruby forwardable#delegate()","Ruby singleforwardable#delegate()","Rails module#delegate()","Rails actionview::template::types::delegate_to()","Ruby array#delete()","Ruby cgi::session#delete()","Ruby cgi::session::filestore#delete()","Ruby cgi::session::memorystore#delete()","Ruby cgi::session::nullstore#delete()","Ruby cgi::session::pstore#delete()","Ruby csv::row#delete()","Ruby csv::table#delete()","Ruby dbm#delete()","Ruby dir::delete()","Ruby env::delete()","Ruby file::delete()","Ruby gdbm#delete()","Ruby gem::sourcelist#delete()","Ruby hash#delete()","Ruby irb::jobmanager#delete()","Ruby net::ftp#delete()","Ruby net::http#delete()","Ruby net::httpheader#delete()","Ruby net::imap#delete()","Ruby net::popmail#delete()","Ruby pstore#delete()","Ruby pathname#delete()","Ruby prettyprint::groupqueue#delete()","Ruby rexml::parent#delete()","Ruby rinda::tuplebag#delete()","Ruby rinda::tuplebag::tuplebin#delete()","Ruby sdbm#delete()","Ruby set#delete()","Ruby string#delete()","Ruby sys#delete()","Ruby tempfile#delete()","Ruby win32::registry#delete()","Ruby yaml::dbm#delete()","Rails actiondispatch::flash::flashhash#delete()","Rails actiondispatch::middlewarestack#delete()","Rails actiondispatch::routing::mapper::httphelpers#delete()","Rails activemodel::errors#delete()","Rails activerecord::associations::collectionproxy#delete()","Rails activerecord::connectionadapters::connectionpool::queue#delete()","Rails activerecord::connectionadapters::databasestatements#delete()","Rails activerecord::connectionadapters::mysqladapter::statementpool#delete()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#delete()","Rails activerecord::connectionadapters::statementpool#delete()","Rails activerecord::persistence#delete()","Rails activerecord::relation#delete()","Rails activesupport::cache::store#delete()","Rails activesupport::hashwithindifferentaccess#delete()","Rails activesupport::hashwithindifferentaccess#delete()","Rails rails::configuration::middlewarestackproxy#delete()","Ruby net::popmail#delete!()","Ruby string#delete!()","Ruby set#delete?()","Rails actiondispatch::request#delete?()","Ruby net::pop3#delete_all()","Ruby net::pop3::delete_all()","Ruby sys#delete_all()","Rails activerecord::associations::collectionproxy#delete_all()","Rails activerecord::relation#delete_all()","Ruby array#delete_at()","Ruby rexml::parent#delete_at()","Ruby rexml::element#delete_attribute()","Rails actiondispatch::response#delete_cookie()","Ruby rexml::element#delete_element()","Rails activesupport::cache::filestore#delete_entry()","Rails activesupport::cache::strategy::localcache::localstore#delete_entry()","Ruby openstruct#delete_field()","Ruby array#delete_if()","Ruby csv::row#delete_if()","Ruby csv::table#delete_if()","Ruby dbm#delete_if()","Ruby env::delete_if()","Ruby gdbm#delete_if()","Ruby hash#delete_if()","Ruby rexml::parent#delete_if()","Ruby sdbm#delete_if()","Ruby set#delete_if()","Ruby yaml::dbm#delete_if()","Ruby win32::registry#delete_key()","Ruby rdoc::rubygemshook#delete_legacy_args()","Ruby rdoc::rubygemshook#delete_legacy_args()","Rails activesupport::cache::filestore#delete_matched()","Rails activesupport::cache::memorystore#delete_matched()","Rails activesupport::cache::nullstore#delete_matched()","Rails activesupport::cache::store#delete_matched()","Ruby rexml::element#delete_namespace()","Ruby observable#delete_observer()","Ruby observable#delete_observers()","Ruby webrick::httpauth::htdigest#delete_passwd()","Ruby webrick::httpauth::htpasswd#delete_passwd()","Rails activerecord::connectionadapters::databasestatements#delete_sql()","Ruby rinda::tuplebag#delete_unless_alive()","Ruby win32::registry#delete_value()","Ruby net::popmail#deleted?()","Ruby curses::deleteln()","Ruby curses::window#deleteln()","Rails actionmailer::logsubscriber#deliver()","Rails activesupport::inflector#demodulize()","Rails string#demodulize()","Ruby complex#denominator()","Ruby float#denominator()","Ruby integer#denominator()","Ruby integer#denominator()","Ruby numeric#denominator()","Ruby rational#denominator()","Ruby makemakefile#depend_rules()","Ruby gem::dependencyresolver::indexspecification#dependencies()","Ruby gem::specification#dependencies()","Rails actionview::dependencytracker::erbtracker#dependencies()","Rails actionview::digestor#dependencies()","Ruby gem::uninstaller#dependencies_ok?()","Ruby gem::impossibledependencieserror#dependency()","Ruby gem::dependencylist#dependency_order()","Ruby gem::specification#dependent_gems()","Ruby gem::specification#dependent_specs()","Ruby gem::deprecate::deprecate()","Ruby rake::application#deprecate()","Ruby rake::application#deprecate()","Rails module#deprecate()","Rails rails::deprecatedconstant::deprecate()","Rails activesupport::deprecation::methodwrapper#deprecate_methods()","Rails activesupport::deprecation::reporting#deprecation_warning()","Ruby prettyprint::groupqueue#deq()","Ruby queue#deq()","Ruby sizedqueue#deq()","Ruby webrick::httputils::dequote()","Rails rails::api::task#desc()","Rails rails::generators::base::desc()","Ruby pathname#descend()","Rails activesupport::descendantstracker#descendants()","Rails activesupport::descendantstracker::descendants()","Rails activerecord::inheritance::classmethods#descends_from_active_record?()","Ruby gem::command#description()","Ruby rdoc::classmodule#description()","Ruby rdoc::generator::markup#description()","Ruby gem::specification#description=()","Ruby encoding::converter#destination_encoding()","Ruby encoding::invalidbytesequenceerror#destination_encoding()","Ruby encoding::undefinedconversionerror#destination_encoding()","Ruby encoding::invalidbytesequenceerror#destination_encoding_name()","Ruby encoding::undefinedconversionerror#destination_encoding_name()","Rails activerecord::associations::collectionproxy#destroy()","Rails activerecord::persistence#destroy()","Rails activerecord::relation#destroy()","Rails rails::generators::activemodel#destroy()","Rails activerecord::persistence#destroy!()","Rails activerecord::associations::collectionproxy#destroy_all()","Rails activerecord::relation#destroy_all()","Rails actiondispatch::session::cachestore#destroy_session()","Rails actiondispatch::session::cookiestore#destroy_session()","Rails activerecord::persistence#destroyed?()","Rails activerecord::autosaveassociation#destroyed_by_association()","Rails activerecord::autosaveassociation#destroyed_by_association=()","Ruby matrix#det()","Ruby matrix::lupdecomposition#det()","Ruby matrix#det_e()","Ruby process::detach()","Ruby openssl::pkcs7#detached()","Ruby openssl::pkcs7#detached=()","Ruby openssl::pkcs7#detached?()","Rails actionview::lookupcontext::viewpaths#detail_args_for()","Rails abstractcontroller::viewpaths#details_for_lookup()","Ruby enumerable#detect()","Ruby gem::specfetcher#detect()","Ruby gem::detect_gemdeps()","Ruby psych::detect_implicit()","Ruby matrix#determinant()","Ruby matrix::lupdecomposition#determinant()","Ruby matrix#determinant_e()","Ruby file::stat#dev()","Ruby file::stat#dev_major()","Ruby file::stat#dev_minor()","Ruby gem::specification#development_dependencies()","Ruby jacobian#dfdxi()","Ruby openssl::pkey::ec#dh_compute_key()","Ruby matrix::diagonal()","Ruby matrix#diagonal?()","Rails hash#diff()","Ruby set#difference()","Ruby digest::class::digest()","Ruby digest::instance#digest()","Ruby openssl::digest::digest()","Ruby openssl::engine#digest()","Ruby openssl::hmac#digest()","Ruby openssl::hmac::digest()","Rails actionview::digestor#digest()","Rails actionview::digestor::digest()","Ruby digest::instance#digest!()","Ruby digest::hmac#digest_length()","Ruby digest::instance#digest_length()","Ruby openssl::digest#digest_length()","Ruby gem::dir()","Ruby gem::installer#dir()","Ruby net::ftp#dir()","Rails build#dir()","Ruby makemakefile#dir_config()","Ruby rdoc::classmodule#direct_ancestors()","Ruby rdoc::normalclass#direct_ancestors()","Rails activesupport::descendantstracker#direct_descendants()","Rails activesupport::descendantstracker::direct_descendants()","Rails sourceannotationextractor::annotation::directories()","Ruby file::directory?()","Ruby file::stat#directory?()","Ruby filetest#directory?()","Ruby gem::package::tarreader::entry#directory?()","Ruby pathname#directory?()","Ruby rake::ftpfile#directory?()","Ruby file::dirname()","Ruby pathname#dirname()","Rails activesupport::multibyte::unicode::unicodedatabase::dirname()","Ruby gem::specification::dirs()","Ruby gem::specification::dirs=()","Rails activerecord::connectionadapters::querycache::dirties_query_cache()","Ruby gc::disable()","Ruby gc::profiler::disable()","Ruby tracepoint#disable()","Rails actionview::lookupcontext::detailscache#disable_cache()","Ruby dl::handle#disable_close()","Ruby fiddle::handle#disable_close()","Rails activerecord::migration::disable_ddl_transaction!()","Rails activerecord::connectionadapters::abstractadapter#disable_extension()","Rails activerecord::connectionadapters::postgresqladapter#disable_extension()","Rails activerecord::connectionadapters::querycache#disable_query_cache!()","Rails activerecord::connectionadapters::abstractadapter#disable_referential_integrity()","Ruby net::pop3#disable_ssl()","Ruby net::pop3::disable_ssl()","Ruby net::smtp#disable_ssl()","Ruby net::smtp#disable_starttls()","Ruby net::smtp#disable_tls()","Ruby rubyvm::instructionsequence::disasm()","Ruby rubyvm::instructionsequence#disasm()","Ruby rubyvm::instructionsequence::disassemble()","Ruby rubyvm::instructionsequence#disassemble()","Rails actiondispatch::flash::flashhash#discard()","Ruby net::imap#disconnect()","Rails activerecord::connectionadapters::abstractadapter#disconnect!()","Rails activerecord::connectionadapters::connectionpool#disconnect!()","Rails activerecord::connectionadapters::mysql2adapter#disconnect!()","Rails activerecord::connectionadapters::mysqladapter#disconnect!()","Rails activerecord::connectionadapters::postgresqladapter#disconnect!()","Rails activerecord::connectionadapters::sqlite3adapter#disconnect!()","Ruby net::imap#disconnected?()","Ruby gserver#disconnecting()","Rails actioncontroller::rackdelegation#dispatch()","Ruby win32ole_method#dispid()","Ruby debugger__#display()","Ruby object#display()","Ruby rdoc::ri::driver#display()","Rails actioncontroller::responder#display()","Rails sourceannotationextractor#display()","Ruby rdoc::codeobject#display?()","Ruby rdoc::toplevel#display?()","Ruby rdoc::markup::attributemanager#display_attributes()","Ruby rdoc::ri::driver#display_class()","Ruby rake::application#display_error_message()","Ruby rake::application#display_error_message()","Rails actioncontroller::responder#display_errors()","Ruby rdoc::ri::driver#display_method()","Ruby rdoc::ri::driver#display_name()","Ruby rdoc::ri::driver#display_names()","Ruby rdoc::ri::driver#display_page()","Ruby rdoc::ri::driver#display_page_list()","Ruby rake::application#display_prerequisites()","Ruby rake::application#display_prerequisites()","Ruby rake::application#display_tasks_and_comments()","Ruby rake::application#display_tasks_and_comments()","Rails actionview::helpers::datehelper#distance_of_time_in_words()","Rails actionview::helpers::datehelper#distance_of_time_in_words_to_now()","Rails activerecord::associations::collectionproxy#distinct()","Rails activerecord::connectionadapters::schemastatements#distinct()","Rails activerecord::querymethods#distinct()","Ruby bigdecimal#div()","Ruby bignum#div()","Ruby fixnum#div()","Ruby numeric#div()","Rails actionview::helpers::recordtaghelper#div_for()","Ruby set#divide()","Ruby bigdecimal#divmod()","Ruby bignum#divmod()","Ruby fixnum#divmod()","Ruby float#divmod()","Ruby numeric#divmod()","Ruby dl::importer#dlload()","Ruby fiddle::importer#dlload()","Ruby dl::dlopen()","Ruby fiddle::dlopen()","Ruby dl::dlunwrap()","Ruby fiddle::dlunwrap()","Ruby dl::dlwrap()","Ruby fiddle::dlwrap()","Ruby uri::ldap#dn()","Ruby uri::ldap#dn=()","Ruby rdoc::servlet#do_get()","Ruby webrick::httpservlet::abstractservlet#do_get()","Ruby webrick::httpservlet::erbhandler#do_get()","Ruby webrick::httpservlet::abstractservlet#do_head()","Ruby webrick::httpserver#do_options()","Ruby webrick::httpservlet::abstractservlet#do_options()","Ruby webrick::httpservlet::erbhandler#do_post()","Ruby rdoc::parser::c#do_aliases()","Ruby rdoc::parser::c#do_attrs()","Ruby rdoc::parser::c#do_boot_defclass()","Ruby rdoc::parser::c#do_classes()","Ruby rdoc::parser::c#do_constants()","Ruby rdoc::parser::c#do_define_class()","Ruby rdoc::parser::c#do_define_class_under()","Ruby rdoc::parser::c#do_define_module()","Ruby rdoc::parser::c#do_define_module_under()","Ruby rdoc::parser::c#do_includes()","Ruby rdoc::parser::c#do_methods()","Ruby rdoc::parser::c#do_missing()","Ruby rdoc::parser::c#do_modules()","Ruby basicsocket#do_not_reverse_lookup()","Ruby basicsocket::do_not_reverse_lookup()","Ruby basicsocket::do_not_reverse_lookup=()","Ruby basicsocket#do_not_reverse_lookup=()","Ruby rdoc::markup::tottonly#do_nothing()","Ruby racc::parser#do_parse()","Ruby rinda::ringserver#do_reply()","Ruby rdoc::parser::c#do_singleton_class()","Ruby rdoc::parser::c#do_struct_define_without_accessor()","Ruby rss::baseparser#do_validate()","Ruby rss::baseparser#do_validate=()","Ruby rinda::ringserver#do_write()","Ruby gem::specification#doc_dir()","Ruby gem::server#doc_root()","Ruby rdoc::stats#doc_stats()","Ruby gem::commands::checkcommand#doctor()","Ruby gem::doctor#doctor()","Ruby rexml::attribute#doctype()","Ruby rexml::document#doctype()","Ruby rexml::sax2listener#doctype()","Ruby rexml::streamlistener#doctype()","Ruby rexml::text#doctype()","Ruby rexml::parsers::pullevent#doctype?()","Ruby rexml::streamlistener#doctype_end()","Ruby rdoc::rdoc#document()","Ruby rdoc::rubygemshook#document()","Ruby rdoc::rubygemshook#document()","Ruby rexml::child#document()","Ruby rexml::element#document()","Ruby xmlrpc::xmlwriter::simple#document()","Ruby xmlrpc::xmlwriter::xmlparser#document()","Ruby rdoc::codeobject#document_children=()","Ruby rdoc::codeobject#document_self=()","Ruby rdoc::classmodule#document_self_or_methods()","Ruby xmlrpc::xmlwriter::simple#document_to_str()","Ruby xmlrpc::xmlwriter::xmlparser#document_to_str()","Ruby rdoc::servlet#documentation_page()","Ruby rdoc::servlet#documentation_search()","Ruby rdoc::servlet#documentation_source()","Ruby rdoc::classmodule#documented?()","Ruby rdoc::codeobject#documented?()","Ruby rdoc::constant#documented?()","Ruby rdoc::methodattr#documented?()","Rails actioncontroller::recordidentifier#dom_class()","Rails actioncontroller::recordidentifier::dom_class()","Rails actionview::recordidentifier#dom_class()","Rails actioncontroller::recordidentifier::dom_id()","Rails actioncontroller::recordidentifier#dom_id()","Rails actionview::recordidentifier#dom_id()","Rails actiondispatch::http::url#domain()","Ruby gem::streamui::silentdownloadreporter#done()","Ruby gem::streamui::silentprogressreporter#done()","Ruby gem::streamui::simpleprogressreporter#done()","Ruby gem::streamui::verbosedownloadreporter#done()","Ruby gem::streamui::verboseprogressreporter#done()","Ruby rexml::validation::event#done?()","Ruby rdoc::stats#done_adding()","Ruby rdoc::stats::quiet#done_adding()","Ruby rdoc::codeobject#done_documenting=()","Ruby gem::done_installing()","Ruby xmlrpc::convert::double()","Ruby bigdecimal::double_fig()","Ruby curses::doupdate()","Rails activerecord::migration#down()","Ruby string#downcase()","Ruby symbol#downcase()","Rails activesupport::multibyte::chars#downcase()","Rails activesupport::multibyte::unicode#downcase()","Ruby string#downcase!()","Ruby gem::dependencyresolver::activationrequest#download()","Ruby gem::remotefetcher#download()","Ruby gem::source#download()","Ruby gem::source::local#download()","Ruby gem::source::specificfile#download()","Ruby gem::silentui#download_reporter()","Ruby gem::streamui#download_reporter()","Ruby gem::remotefetcher#download_to_cache()","Ruby date#downto()","Ruby integer#downto()","Ruby integer#downto()","Ruby rexml::xmldecl#dowrite()","Ruby array#drop()","Ruby enumerable#drop()","Ruby enumerator::lazy#drop()","Rails activerecord::tasks::databasetasks#drop()","Rails activerecord::tasks::databasetasks#drop_all()","Rails activerecord::tasks::databasetasks#drop_current()","Rails activerecord::tasks::databasetasks#drop_database_url()","Rails activerecord::connectionadapters::schemastatements#drop_join_table()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#drop_schema()","Rails activerecord::connectionadapters::schemastatements#drop_table()","Rails activerecord::schemamigration::drop_table()","Ruby array#drop_while()","Ruby enumerable#drop_while()","Ruby enumerator::lazy#drop_while()","Ruby openssl::pkey::ec#dsa_sign_asn1()","Ruby openssl::pkey::ec#dsa_verify_asn1()","Ruby time#dst?()","Rails activesupport::timewithzone#dst?()","Ruby encoding#dummy?()","Ruby makemakefile#dummy_makefile()","Ruby json#dump()","Ruby marshal::dump()","Ruby psych::dump()","Ruby rdoc::ri::driver::dump()","Ruby rexml::validation::validator#dump()","Ruby string#dump()","Ruby xmlrpc::marshal#dump_call()","Ruby xmlrpc::marshal#dump_response()","Ruby psych::dump_stream()","Ruby object#dup()","Ruby singleton#dup()","Rails actioncontroller::parameters#dup()","Rails activerecord::core#dup()","Rails activesupport::hashwithindifferentaccess#dup()","Rails activesupport::hashwithindifferentaccess#dup()","Rails bigdecimal#duplicable?()","Rails falseclass#duplicable?()","Rails nilclass#duplicable?()","Rails numeric#duplicable?()","Rails object#duplicable?()","Rails symbol#duplicable?()","Rails trueclass#duplicable?()","Rails activesupport::notifications::event#duration()","Ruby rake::application#dynamic_width()","Ruby rake::application#dynamic_width()","Ruby rake::application#dynamic_width_stty()","Ruby rake::application#dynamic_width_stty()","Ruby rake::application#dynamic_width_tput()","Ruby rake::application#dynamic_width_tput()","Ruby e2mm::e2mm_message()","Ruby e2mm::e2mm_message()","Ruby argf#each()","Ruby array#each()","Ruby csv#each()","Ruby csv::row#each()","Ruby csv::table#each()","Ruby dbm#each()","Ruby dir#each()","Ruby env::each()","Ruby enumerator#each()","Ruby gdbm#each()","Ruby gem::configfile#each()","Ruby gem::dependencylist#each()","Ruby gem::package::tarreader#each()","Ruby gem::sourcelist#each()","Ruby gem::specification::each()","Ruby getoptlong#each()","Ruby hash#each()","Ruby httpserver::table#each()","Ruby io#each()","Ruby matrix#each()","Ruby net::httpheader#each()","Ruby net::pop3#each()","Ruby openssl::asn1::constructive#each()","Ruby openssl::buffering#each()","Ruby openssl::config#each()","Ruby prime#each()","Ruby prime::oldcompatibility#each()","Ruby prime::pseudoprimegenerator#each()","Ruby psych::nodes::node#each()","Ruby rdoc::markup::document#each()","Ruby rdoc::ri::paths::each()","Ruby rexml::attlistdecl#each()","Ruby rexml::light::node#each()","Ruby rexml::parent#each()","Ruby rexml::parsers::pullparser#each()","Ruby rexml::quickpath::each()","Ruby rexml::syncenumerator#each()","Ruby rexml::xpath::each()","Ruby rss::xml::element#each()","Ruby rake::taskarguments#each()","Ruby range#each()","Ruby rinda::notifytemplateentry#each()","Ruby rinda::ringfinger#each()","Ruby rinda::tuple#each()","Ruby sdbm#each()","Ruby set#each()","Ruby shell::cat#each()","Ruby shell::concat#each()","Ruby shell::echo#each()","Ruby shell::filter#each()","Ruby shell::glob#each()","Ruby shell::systemcommand#each()","Ruby shell::tee#each()","Ruby shell::void#each()","Ruby stringio#each()","Ruby struct#each()","Ruby vector#each()","Ruby webrick::httpauth::htdigest#each()","Ruby webrick::httpauth::htpasswd#each()","Ruby webrick::httprequest#each()","Ruby webrick::httpresponse#each()","Ruby win32ole#each()","Ruby win32::registry#each()","Ruby yaml::dbm#each()","Ruby zlib::gzipreader#each()","Rails actiondispatch::flash::flashhash#each()","Rails actiondispatch::http::headers#each()","Rails actiondispatch::middlewarestack#each()","Rails activemodel::errors#each()","Rails activerecord::connectionadapters::mysqladapter::statementpool#each()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#each()","Rails activerecord::connectionadapters::sqlite3adapter::statementpool#each()","Rails activerecord::connectionadapters::statementpool#each()","Rails activerecord::fixtureset#each()","Rails activerecord::result#each()","Rails activesupport::dependencies::watchstack#each()","Rails rails::engine::railties#each()","Rails rails::paths::path#each()","Ruby vector#each2()","Ruby shell::processcontroller#each_active_object()","Ruby resolv::each_address()","Ruby resolv#each_address()","Ruby resolv::dns#each_address()","Ruby resolv::hosts#each_address()","Ruby rdoc::classmodule#each_ancestor()","Ruby rdoc::context#each_attribute()","Ruby argf#each_byte()","Ruby io#each_byte()","Ruby openssl::buffering#each_byte()","Ruby string#each_byte()","Ruby stringio#each_byte()","Ruby zlib::gzipreader#each_byte()","Ruby net::httpheader#each_capitalized()","Ruby net::httpheader#each_capitalized_name()","Ruby gem::security::trustdir#each_certificate()","Ruby argf#each_char()","Ruby io#each_char()","Ruby string#each_char()","Ruby stringio#each_char()","Ruby zlib::gzipreader#each_char()","Ruby pathname#each_child()","Ruby rexml::parent#each_child()","Ruby rdoc::context#each_classmodule()","Ruby argf#each_codepoint()","Ruby io#each_codepoint()","Ruby string#each_codepoint()","Ruby stringio#each_codepoint()","Ruby enumerable#each_cons()","Ruby optionparser#each_const()","Ruby rdoc::context#each_constant()","Ruby webrick::httputils::formdata#each_data()","Ruby rexml::element#each_element()","Ruby rexml::element#each_element_with_attribute()","Ruby rexml::element#each_element_with_text()","Ruby enumerable#each_entry()","Ruby gem::package::tarreader#each_entry()","Ruby pathname#each_entry()","Ruby rdoc::context#each_extend()","Ruby pathname#each_filename()","Ruby net::httpheader#each_header()","Ruby rdoc::context#each_include()","Ruby array#each_index()","Ruby rexml::parent#each_index()","Ruby xmlrpc::xmlparser::each_installed_parser()","Ruby xmlrpc::xmlwriter::each_installed_writer()","Ruby dbm#each_key()","Ruby env::each_key()","Ruby gdbm#each_key()","Ruby hash#each_key()","Ruby net::httpheader#each_key()","Ruby sdbm#each_key()","Ruby win32::registry#each_key()","Ruby argf#each_line()","Ruby io#each_line()","Ruby openssl::buffering#each_line()","Ruby pathname#each_line()","Ruby string#each_line()","Ruby stringio#each_line()","Ruby zlib::gzipreader#each_line()","Ruby net::pop3#each_mail()","Ruby rdoc::context#each_method()","Ruby net::httpheader#each_name()","Ruby resolv::each_name()","Ruby resolv#each_name()","Ruby resolv::dns#each_name()","Ruby resolv::hosts#each_name()","Ruby rdoc::markup::attributes#each_name_of()","Ruby objectspace::each_object()","Ruby getoptlong#each_option()","Ruby optionparser::list#each_option()","Ruby dbm#each_pair()","Ruby env::each_pair()","Ruby gdbm#each_pair()","Ruby hash#each_pair()","Ruby openstruct#each_pair()","Ruby sdbm#each_pair()","Ruby struct#each_pair()","Ruby yaml::dbm#each_pair()","Ruby rdoc::codeobject#each_parent()","Ruby integer::each_prime()","Ruby integer::each_prime()","Ruby rexml::node#each_recursive()","Ruby resolv::dns#each_resource()","Ruby rdoc::context#each_section()","Ruby enumerable#each_slice()","Ruby gem::sourcelist#each_source()","Ruby tsort#each_strongly_connected_component()","Ruby tsort#each_strongly_connected_component_from()","Ruby dbm#each_value()","Ruby env::each_value()","Ruby gdbm#each_value()","Ruby hash#each_value()","Ruby net::httpheader#each_value()","Ruby sdbm#each_value()","Ruby win32::registry#each_value()","Ruby yaml::dbm#each_value()","Ruby enumerable#each_with_index()","Ruby enumerator#each_with_index()","Ruby matrix#each_with_index()","Ruby enumerable#each_with_object()","Ruby enumerator#each_with_object()","Rails activesupport::autoload#eager_autoload()","Rails activerecord::querymethods#eager_load()","Rails rails::paths::root#eager_load()","Rails actioncontroller::eager_load!()","Rails actionview::eager_load!()","Rails activemodel#eager_load!()","Rails activerecord::eager_load!()","Rails activesupport::autoload#eager_load!()","Rails rails::engine::eager_load!()","Rails rails::railtie::configuration#eager_load_namespaces()","Rails rails::engine::configuration#eager_load_paths()","Rails activerecord::relation#eager_loading?()","Ruby curses::echo()","Ruby shell::commandprocessor#echo()","Ruby io#echo=()","Ruby io#echo?()","Ruby process::egid()","Ruby process::egid=()","Ruby net::smtp#ehlo()","Ruby process::gid::eid()","Ruby process::uid::eid()","Ruby matrix#eigen()","Ruby matrix#eigensystem()","Ruby matrix::eigenvaluedecomposition#eigenvalue_matrix()","Ruby matrix::eigenvaluedecomposition#eigenvalues()","Ruby matrix::eigenvaluedecomposition#eigenvector_matrix()","Ruby matrix::eigenvaluedecomposition#eigenvector_matrix_inv()","Ruby matrix::eigenvaluedecomposition#eigenvectors()","Ruby xmlrpc::xmlwriter::abstract#ele()","Ruby matrix#element()","Ruby vector#element()","Ruby xmlrpc::xmlwriter::simple#element()","Ruby xmlrpc::xmlwriter::xmlparser#element()","Ruby rexml::attribute#element=()","Ruby rss::utils#element_initialize_arguments?()","Ruby rexml::sax2listener#elementdecl()","Ruby rexml::streamlistener#elementdecl()","Ruby rexml::parsers::pullevent#elementdecl?()","Ruby vector::elements()","Ruby matrix#elements_to_f()","Ruby vector#elements_to_f()","Ruby matrix#elements_to_i()","Ruby vector#elements_to_i()","Ruby matrix#elements_to_r()","Ruby vector#elements_to_r()","Ruby readline::emacs_editing_mode()","Ruby readline::emacs_editing_mode?()","Rails actionview::helpers::formhelper#email_field()","Rails actionview::helpers::formtaghelper#email_field_tag()","Ruby gem::security::email_to_name()","Rails actionview::helpers::formbuilder#emitted_hidden_id?()","Ruby rdoc::markdown#emphasis()","Ruby matrix::empty()","Ruby psych::handler#empty()","Ruby array#empty?()","Ruby dbm#empty?()","Ruby env::empty?()","Ruby gdbm#empty?()","Ruby gem::availableset#empty?()","Ruby gem::package::tarheader#empty?()","Ruby hash#empty?()","Ruby matrix#empty?()","Ruby queue#empty?()","Ruby rdoc::comment#empty?()","Ruby rdoc::markup::document#empty?()","Ruby rdoc::markup::list#empty?()","Ruby rdoc::markup::listitem#empty?()","Ruby rexml::iosource#empty?()","Ruby rexml::parsers::baseparser#empty?()","Ruby rexml::source#empty?()","Ruby rexml::text#empty?()","Ruby sdbm#empty?()","Ruby set#empty?()","Ruby string#empty?()","Ruby stringscanner#empty?()","Ruby symbol#empty?()","Ruby threadswait#empty?()","Ruby threadswait#empty?()","Rails actiondispatch::flash::flashhash#empty?()","Rails activemodel::errors#empty?()","Rails activerecord::associations::collectionproxy#empty?()","Rails activerecord::relation#empty?()","Rails activerecord::result#empty?()","Rails activesupport::dependencies::classcache#empty?()","Rails activerecord::connectionadapters::abstractmysqladapter#empty_insert_statement_value()","Rails activerecord::connectionadapters::databasestatements#empty_insert_statement_value()","Rails activerecord::connectionadapters::abstractmysqladapter::emulate_booleans()","Ruby gc::enable()","Ruby gc::profiler::enable()","Ruby tracepoint#enable()","Ruby dl::handle#enable_close()","Ruby fiddle::handle#enable_close()","Ruby makemakefile#enable_config()","Rails activerecord::connectionadapters::abstractadapter#enable_extension()","Rails activerecord::connectionadapters::postgresqladapter#enable_extension()","Rails activerecord::connectionadapters::querycache#enable_query_cache!()","Ruby net::pop3#enable_ssl()","Ruby net::pop3::enable_ssl()","Ruby net::smtp#enable_ssl()","Ruby net::smtp#enable_starttls()","Ruby net::smtp#enable_starttls_auto()","Ruby net::smtp#enable_tls()","Rails kernel#enable_warnings()","Ruby gc::profiler::enabled?()","Ruby tracepoint#enabled?()","Ruby openssl::pkcs7::recipientinfo#enc_key()","Ruby threadgroup#enclose()","Ruby threadgroup#enclosed?()","Ruby rexml::encoding#encode()","Ruby string#encode()","Ruby uri::escape#encode()","Ruby xmlrpc::base64::encode()","Rails activesupport::json::encode()","Rails activesupport::json::encoding::encoder#encode()","Ruby string#encode!()","Rails actionview::template#encode!()","Ruby base64#encode64()","Rails actioncontroller::httpauthentication::basic#encode_credentials()","Rails actioncontroller::httpauthentication::digest#encode_credentials()","Rails actioncontroller::httpauthentication::token#encode_credentials()","Ruby rdoc::text::encode_fallback()","Rails activesupport::json::variable#encode_json()","Ruby net::imap::encode_utf7()","Ruby gem::requirement#encode_with()","Ruby gem::requirement#encode_with()","Ruby gem::version#encode_with()","Rails activerecord::core#encode_with()","Rails activesupport::orderedhash#encode_with()","Rails activesupport::safebuffer#encode_with()","Rails activesupport::timewithzone#encode_with()","Rails bigdecimal#encode_with()","Ruby uri::encode_www_form()","Ruby uri::encode_www_form_component()","Ruby xmlrpc::base64#encoded()","Ruby irb::fileinputmethod#encoding()","Ruby irb::readlineinputmethod#encoding()","Ruby irb::stdioinputmethod#encoding()","Ruby rexml::document#encoding()","Ruby regexp#encoding()","Ruby string#encoding()","Ruby symbol#encoding()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#encoding()","Rails activerecord::connectionadapters::sqlite3adapter#encoding()","Ruby rexml::encoding#encoding=()","Ruby rexml::source#encoding=()","Ruby rexml::xmldecl#encoding=()","Rails rails::application::configuration#encoding=()","Rails string#encoding_aware?()","Ruby openssl::cipher#encrypt()","Ruby openssl::pkcs7::encrypt()","Rails activesupport::messageencryptor#encrypt_and_sign()","Rails actiondispatch::cookies::chainedcookiejars#encrypted()","Ruby matchdata#end()","Ruby range#end()","Ruby zlib::zstream#end()","Ruby rss::rexmllikexmlparser#endelement()","Ruby xmlrpc::xmlparser::streamparsermixin#endelement()","Ruby rdoc::markup::tohtml#end_accepting()","Ruby rdoc::markup::tordoc#end_accepting()","Ruby rdoc::markup::totableofcontents#end_accepting()","Ruby rdoc::markup::tottonly#end_accepting()","Ruby psych::handler#end_document()","Ruby psych::treebuilder#end_document()","Ruby rexml::sax2listener#end_document()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#end_document()","Ruby rexml::sax2listener#end_element()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#end_element()","Ruby rexml::parsers::pullevent#end_element?()","Ruby psych::handler#end_mapping()","Rails date#end_of_day()","Rails datetime#end_of_day()","Rails time#end_of_day()","Rails datetime#end_of_hour()","Rails time#end_of_hour()","Rails datetime#end_of_minute()","Rails time#end_of_minute()","Rails dateandtime::calculations#end_of_month()","Rails dateandtime::calculations#end_of_quarter()","Rails dateandtime::calculations#end_of_week()","Rails dateandtime::calculations#end_of_year()","Ruby rexml::sax2listener#end_prefix_mapping()","Ruby psych::handler#end_sequence()","Ruby psych::handler#end_stream()","Ruby psych::treebuilder#end_stream()","Ruby string#end_with?()","Ruby zlib::zstream#ended?()","Ruby etc::endgrent()","Rails actiondispatch::routing::routewrapper#endpoint()","Rails rails::engine::endpoint()","Ruby etc::endpwent()","Rails activesupport::json::engine()","Rails activesupport::json::engine=()","Rails actiondispatch::routing::routewrapper#engine?()","Ruby openssl::engine::engines()","Rails rails::engine::railties::engines()","Ruby date#england()","Ruby rake::task#enhance()","Ruby rake::taskmanager#enhance_with_matching_rule()","Rails activerecord::testfixtures#enlist_fixture_connections()","Ruby prettyprint::groupqueue#enq()","Ruby queue#enq()","Ruby sizedqueue#enq()","Ruby gem::installer#ensure_dependencies_met()","Ruby gem::installer#ensure_dependency()","Ruby gem::ensure_gem_subdirectories()","Ruby gem::installer#ensure_loadable_spec()","Ruby gem::installer#ensure_required_ruby_version_met()","Ruby gem::installer#ensure_required_rubygems_version_met()","Ruby rss::maker::atomtextconstructbase::ensurexmlcontent#ensure_xml_content()","Ruby net::httpresponse#entity()","Ruby rexml::doctype#entity()","Ruby rexml::parsers::baseparser#entity()","Ruby rexml::streamlistener#entity()","Ruby rexml::parsers::pullevent#entity?()","Ruby dl::cstruct::entity_class()","Ruby dl::cunion::entity_class()","Ruby fiddle::cstruct::entity_class()","Ruby fiddle::cunion::entity_class()","Ruby rexml::document::entity_expansion_limit()","Ruby rexml::document::entity_expansion_limit=()","Ruby rexml::entity_expansion_text_limit()","Ruby rexml::document::entity_expansion_text_limit()","Ruby rexml::entity_expansion_text_limit=()","Ruby rexml::document::entity_expansion_text_limit=()","Ruby rexml::sax2listener#entitydecl()","Ruby rexml::streamlistener#entitydecl()","Ruby rexml::parsers::pullevent#entitydecl?()","Ruby dir::entries()","Ruby enumerable#entries()","Ruby pathname#entries()","Ruby enumerator::lazy#enum_for()","Ruby object#enum_for()","Rails sourceannotationextractor::enumerate()","Rails actioncontroller::metal#env()","Rails rails::env()","Rails rails::env=()","Rails rails::application#env_config()","Rails rails::engine::env_config()","Rails actiondispatch::http::filterparameters#env_filter()","Ruby optionparser#environment()","Rails rails::console#environment()","Rails rails::dbconsole#environment()","Rails rails::generators::actions#environment()","Rails rails::console#environment?()","Ruby argf#eof()","Ruby io#eof()","Ruby openssl::buffering#eof()","Ruby stringio#eof()","Ruby zlib::gzipreader#eof()","Ruby argf#eof?()","Ruby gem::package::tarreader::entry#eof?()","Ruby io#eof?()","Ruby irb::fileinputmethod#eof?()","Ruby irb::readlineinputmethod#eof?()","Ruby irb::stdioinputmethod#eof?()","Ruby openssl::buffering#eof?()","Ruby stringio#eof?()","Ruby xmp::stringinputmethod#eof?()","Ruby zlib::gzipreader#eof?()","Rails actiondispatch::http::uploadedfile#eof?()","Ruby stringscanner#eos?()","Ruby array#eql?()","Ruby bigdecimal#eql?()","Ruby bignum#eql?()","Ruby dl::cptr#eql?()","Ruby fiddle::pointer#eql?()","Ruby float#eql?()","Ruby gem::nametuple#eql?()","Ruby gem::platform#eql?()","Ruby gem::source#eql?()","Ruby gem::version#eql?()","Ruby hash#eql?()","Ruby ipaddr#eql?()","Ruby matchdata#eql?()","Ruby matrix#eql?()","Ruby method#eql?()","Ruby numeric#eql?()","Ruby object#eql?()","Ruby openssl::bn#eql?()","Ruby openssl::pkey::ec::group#eql?()","Ruby openssl::pkey::ec::point#eql?()","Ruby openssl::x509::name#eql?()","Ruby openstruct#eql?()","Ruby pathname#eql?()","Ruby rdoc::toplevel#eql?()","Ruby range#eql?()","Ruby regexp#eql?()","Ruby string#eql?()","Ruby struct#eql?()","Ruby time#eql?()","Ruby uri::generic#eql?()","Ruby unboundmethod#eql?()","Ruby vector#eql?()","Rails actionview::filesystemresolver#eql?()","Rails activemodel::name#eql?()","Rails activerecord::core#eql?()","Rails activesupport::timewithzone#eql?()","Rails time#eql?()","Rails time#eql_with_coercion()","Rails time#eql_without_coercion()","Ruby basicobject#equal?()","Ruby math::erf()","Ruby math::erfc()","Ruby systemcallerror#errno()","Ruby gserver#error()","Ruby gem::mockgemui#error()","Ruby logger#error()","Ruby rdoc::parser::ruby#error()","Ruby rdoc::rdoc#error()","Ruby rdoc::servlet#error()","Ruby syslog::logger#error()","Ruby webrick::basiclog#error()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#error()","Ruby logger#error?()","Ruby rexml::parsers::pullevent#error?()","Ruby webrick::basiclog#error?()","Ruby webrick::httpstatus::error?()","Ruby encoding::invalidbytesequenceerror#error_bytes()","Ruby encoding::undefinedconversionerror#error_char()","Ruby getoptlong#error_message()","Rails actionview::helpers::activemodelinstancetag#error_message()","Rails activerecord::connectionadapters::mysql2adapter#error_number()","Rails actionview::helpers::activemodelinstancetag#error_wrapping()","Ruby openssl::errors()","Rails activemodel::validations#errors()","Rails rails::generators::activemodel#errors()","Ruby cgi::escape()","Ruby gem::remotefetcher#escape()","Ruby regexp::escape()","Ruby shellwords::escape()","Ruby uri::escape#escape()","Ruby uri::parser#escape()","Ruby webrick::accesslog#escape()","Ruby webrick::htmlutils::escape()","Ruby webrick::httputils#escape()","Rails activesupport::json::encoding::encoder#escape()","Ruby webrick::httputils#escape8bit()","Ruby cgi::escapeelement()","Ruby cgi::escapehtml()","Ruby gem::remotefetcher#escape_auth_info()","Rails activerecord::connectionadapters::postgresqladapter::quoting#escape_bytea()","Ruby cgi::escape_element()","Ruby webrick::httputils#escape_form()","Rails actiondispatch::filehandler#escape_glob_chars()","Ruby cgi::escape_html()","Rails actionview::helpers::javascripthelper#escape_javascript()","Rails actionview::helpers::taghelper#escape_once()","Ruby webrick::httputils#escape_path()","Rails activerecord::connectionadapters::connectionhandler#establish_connection()","Rails activerecord::connectionhandling#establish_connection()","Rails actioncontroller::conditionalget::classmethods#etag()","Rails actiondispatch::http::cache::response#etag=()","Rails actiondispatch::http::cache::request#etag_matches?()","Ruby process::euid()","Ruby process::euid=()","Ruby binding#eval()","Ruby kernel#eval()","Ruby rubyvm::instructionsequence#eval()","Ruby irb::context#eval_history=()","Ruby irb::irb#eval_input()","Ruby irb::workspace#evaluate()","Ruby bignum#even?()","Ruby fixnum#even?()","Ruby integer#even?()","Ruby integer#even?()","Ruby tracepoint#event()","Ruby win32ole_method#event?()","Ruby win32ole_method#event_interface()","Ruby rexml::parsers::pullevent#event_type()","Rails numeric#exabyte()","Rails numeric#exabytes()","Ruby net::imap#examine()","Rails activerecord::spawnmethods#except()","Rails hash#except()","Rails hash#except!()","Ruby drb::drbunknown#exception()","Ruby exception::exception()","Ruby exception#exception()","Ruby net::smtp::response#exception_class()","Ruby ","Rails actionview::helpers::texthelper#excerpt()","Ruby rake::filelist#exclude()","Rails enumerable#exclude?()","Rails string#exclude?()","Ruby range#exclude_end?()","Ruby thread::exclusive()","Ruby kernel#exec()","Ruby process::exec()","Rails rails::apprailsloader::exec_app_rails()","Rails activerecord::connectionadapters::databasestatements#exec_delete()","Rails activerecord::connectionadapters::mysql2adapter#exec_delete()","Rails activerecord::connectionadapters::mysqladapter#exec_delete()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#exec_delete()","Rails activerecord::connectionadapters::sqlite3adapter#exec_delete()","Ruby gem::installer#exec_format()","Ruby irb::notifier::abstractnotifier#exec_if()","Rails activerecord::connectionadapters::databasestatements#exec_insert()","Rails activerecord::connectionadapters::mysql2adapter#exec_insert()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#exec_insert()","Rails activerecord::migration#exec_migration()","Rails activerecord::connectionadapters::databasestatements#exec_query()","Rails activerecord::connectionadapters::mysql2adapter#exec_query()","Rails activerecord::connectionadapters::mysqladapter#exec_query()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#exec_query()","Rails activerecord::connectionadapters::sqlite3adapter#exec_query()","Rails activerecord::connectionadapters::databasestatements#exec_update()","Rails activerecord::connectionadapters::mysql2adapter#exec_update()","Rails activerecord::connectionadapters::mysqladapter#exec_update()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#exec_update()","Rails activerecord::connectionadapters::sqlite3adapter#exec_update()","Rails activerecord::connectionadapters::mysql2adapter#exec_without_stmt()","Ruby gem::specification#executable()","Ruby gem::specification#executable=()","Ruby file::executable?()","Ruby file::stat#executable?()","Ruby filetest#executable?()","Ruby pathname#executable?()","Ruby file::executable_real?()","Ruby file::stat#executable_real?()","Ruby filetest#executable_real?()","Ruby pathname#executable_real?()","Ruby gem::specification#executables()","Ruby gem::specification#executables=()","Ruby gem::command#execute()","Ruby gem::commands::buildcommand#execute()","Ruby gem::commands::certcommand#execute()","Ruby gem::commands::checkcommand#execute()","Ruby gem::commands::cleanupcommand#execute()","Ruby gem::commands::contentscommand#execute()","Ruby gem::commands::dependencycommand#execute()","Ruby gem::commands::environmentcommand#execute()","Ruby gem::commands::fetchcommand#execute()","Ruby gem::commands::generateindexcommand#execute()","Ruby gem::commands::helpcommand#execute()","Ruby gem::commands::installcommand#execute()","Ruby gem::commands::listcommand#execute()","Ruby gem::commands::lockcommand#execute()","Ruby gem::commands::mirrorcommand#execute()","Ruby gem::commands::outdatedcommand#execute()","Ruby gem::commands::ownercommand#execute()","Ruby gem::commands::pristinecommand#execute()","Ruby gem::commands::pushcommand#execute()","Ruby gem::commands::querycommand#execute()","Ruby gem::commands::rdoccommand#execute()","Ruby gem::commands::searchcommand#execute()","Ruby gem::commands::servercommand#execute()","Ruby gem::commands::setupcommand#execute()","Ruby gem::commands::sourcescommand#execute()","Ruby gem::commands::specificationcommand#execute()","Ruby gem::commands::stalecommand#execute()","Ruby gem::commands::uninstallcommand#execute()","Ruby gem::commands::unpackcommand#execute()","Ruby gem::commands::updatecommand#execute()","Ruby gem::commands::whichcommand#execute()","Ruby gem::commands::yankcommand#execute()","Ruby rake::task#execute()","Rails activerecord::connectionadapters::abstractmysqladapter#execute()","Rails activerecord::connectionadapters::databasestatements#execute()","Rails activerecord::connectionadapters::mysql2adapter#execute()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#execute()","Rails activerecord::statementcache#execute()","Rails activesupport::fileupdatechecker#execute()","Rails activerecord::connectionadapters::mysqladapter#execute_and_free()","Rails activesupport::execute_hook()","Rails activesupport::fileupdatechecker#execute_if_updated()","Ruby dir::exist?()","Ruby file::exist?()","Ruby filetest#exist?()","Ruby pathname#exist?()","Ruby stringscanner#exist?()","Rails actiondispatch::railsentitystore#exist?()","Rails activesupport::cache::store#exist?()","Rails rails::paths::path#existent()","Rails rails::paths::path#existent_directories()","Ruby dir::exists?()","Ruby file::exists?()","Ruby filetest#exists?()","Rails actionview::lookupcontext::viewpaths#exists?()","Rails activerecord::findermethods#exists?()","Ruby irb::context#exit()","Ruby kernel#exit()","Ruby process::exit()","Ruby thread#exit()","Ruby thread::exit()","Ruby kernel#exit!()","Ruby process::exit!()","Ruby localjumperror#exit_value()","Ruby process::status#exited?()","Ruby rake::pseudostatus#exited?()","Ruby process::status#exitstatus()","Ruby bigmath::exp()","Ruby cmath::exp()","Ruby math::exp()","Ruby cmath::exp!()","Ruby rexml::parsers::xpathparser#expand()","Ruby rexml::text::expand()","Rails activesupport::cache::expand_cache_key()","Ruby rdoc::ri::driver#expand_class()","Ruby win32::registry::expand_environ()","Rails activerecord::sanitization::classmethods#expand_hash_conditions_for_aggregates()","Ruby openssl::x509::name::rfc2253dn#expand_hexstring()","Ruby rdoc::ri::driver#expand_name()","Ruby openssl::x509::name::rfc2253dn#expand_pair()","Ruby file::expand_path()","Ruby pathname#expand_path()","Ruby shell#expand_path()","Ruby shell::commandprocessor#expand_path()","Ruby rexml::validation::state#expand_ref_in()","Ruby rdoc::text#expand_tabs()","Ruby openssl::x509::name::rfc2253dn#expand_value()","Rails rails::paths::path#expanded()","Ruby rexml::document#expanded_name()","Ruby io#expect()","Ruby rexml::validation::choice#expected()","Ruby rexml::validation::interleave#expected()","Ruby rexml::validation::oneormore#expected()","Ruby rexml::validation::optional#expected()","Ruby rexml::validation::state#expected()","Ruby rexml::validation::zeroormore#expected()","Rails actioncontroller::httpauthentication::digest#expected_response()","Rails activerecord::connectionadapters::abstractadapter#expire()","Rails actioncontroller::caching::fragments#expire_fragment()","Ruby rinda::tupleentry#expired?()","Ruby webrick::cookie#expires()","Ruby webrick::cookie#expires=()","Rails actioncontroller::conditionalget#expires_in()","Rails actioncontroller::conditionalget#expires_now()","Rails activerecord::connectionadapters::mysql2adapter#explain()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#explain()","Rails activerecord::connectionadapters::sqlite3adapter#explain()","Rails activerecord::relation#explain()","Ruby bigdecimal#exponent()","Ruby openssl::pkey::dh#export()","Ruby openssl::pkey::dsa#export()","Ruby openssl::pkey::ec#export()","Ruby openssl::pkey::rsa#export()","Ruby openssl::pkey::rsa#export()","Ruby net::imap#expunge()","Ruby string#ext()","Rails actiondispatch::filehandler#ext()","Ruby object#extend()","Ruby e2mm::extend_object()","Ruby e2mm::extend_object()","Ruby irb::extendcommandbundle::extend_object()","Ruby monitormixin::extend_object()","Ruby optionparser::arguable::extend_object()","Ruby sync_m::extend_object()","Ruby sync_m::extend_object()","Rails activerecord::querymethods#extending()","Ruby rdoc::markdown::extension()","Ruby rdoc::markdown#extension()","Ruby rdoc::markdown#extension?()","Ruby gem::installer#extension_build_error()","Rails activerecord::connectionadapters::postgresqladapter#extension_enabled?()","Ruby gem::specification#extensions()","Ruby openssl::x509::crl#extensions()","Ruby openssl::x509::certificate#extensions()","Ruby openssl::x509::revoked#extensions()","Ruby uri::ldap#extensions()","Rails activerecord::connectionadapters::abstractadapter#extensions()","Rails activerecord::connectionadapters::postgresqladapter#extensions()","Ruby gem::specification#extensions=()","Ruby openssl::x509::crl#extensions=()","Ruby openssl::x509::certificate#extensions=()","Ruby openssl::x509::revoked#extensions=()","Ruby uri::ldap#extensions=()","Ruby dl::importer#extern()","Ruby fiddle::importer#extern()","Ruby argf#external_encoding()","Ruby io#external_encoding()","Ruby stringio#external_encoding()","Rails rails::generators::actions#extify()","Ruby file::extname()","Ruby pathname#extname()","Ruby gem::command::extra_args()","Ruby gem::command::extra_args=()","Ruby gem::specification#extra_rdoc_files()","Ruby gem::specification#extra_rdoc_files=()","Ruby uri::extract()","Ruby uri::parser#extract()","Rails hash#extract!()","Rails sourceannotationextractor#extract_annotations_from()","Rails activerecord::connectionadapters::postgresqladapter::oid::range#extract_bounds()","Ruby rdoc::comment#extract_call_seq()","Ruby rdoc::context::section#extract_comment()","Rails actiondispatch::http::url::extract_domain()","Ruby gem::installer#extract_files()","Ruby gem::package#extract_files()","Ruby gem::package::old#extract_files()","Rails array#extract_options!()","Rails activerecord::connectionadapters::postgresqladapter::utils#extract_schema_and_table()","Rails actiondispatch::session::stalesessioncheck#extract_session_id()","Rails actiondispatch::http::url::extract_subdomain()","Rails actiondispatch::http::url::extract_subdomains()","Rails activerecord::connectionadapters::postgresqlcolumn::extract_value_from_default()","Rails activesupport::hashwithindifferentaccess#extractable_options?()","Rails activesupport::hashwithindifferentaccess#extractable_options?()","Rails activesupport::orderedhash#extractable_options?()","Rails hash#extractable_options?()","Ruby syslog::facility()","Ruby exception2messagemapper#fail()","Ruby exception2messagemapper#fail()","Ruby kernel#fail()","Rails rails::generators::fallbacks()","Ruby rexml::functions::false()","Ruby socket::ancillarydata#family()","Ruby socket::option#family()","Ruby addrinfo#family_addrinfo()","Ruby json#fast_generate()","Ruby gdbm#fastmode=()","Ruby fatal","Ruby logger#fatal()","Ruby syslog::logger#fatal()","Ruby webrick::basiclog#fatal()","Ruby logger#fatal?()","Ruby webrick::basiclog#fatal?()","Ruby xmlrpc::convert::fault()","Rails actionview::helpers::assettaghelper#favicon_link_tag()","Ruby io#fcntl()","Ruby stringio#fcntl()","Ruby io#fdatasync()","Ruby bignum#fdiv()","Ruby complex#fdiv()","Ruby fixnum#fdiv()","Ruby float#fdiv()","Ruby numeric#fdiv()","Ruby rational#fdiv()","Ruby enumerator#feed()","Ruby rss::rootelementmixin#feed_info()","Ruby array#fetch()","Ruby csv::row#fetch()","Ruby dbm#fetch()","Ruby env::fetch()","Ruby gdbm#fetch()","Ruby gem::streamui::silentdownloadreporter#fetch()","Ruby gem::streamui::verbosedownloadreporter#fetch()","Ruby hash#fetch()","Ruby net::httpheader#fetch()","Ruby net::imap#fetch()","Ruby pstore#fetch()","Ruby rinda::tuple#fetch()","Ruby rinda::tupleentry#fetch()","Ruby sdbm#fetch()","Ruby yaml::dbm#fetch()","Rails actioncontroller::parameters#fetch()","Rails actiondispatch::http::headers#fetch()","Rails activerecord::connectionadapters::postgresqladapter::oid::typemap#fetch()","Rails activesupport::cache::store#fetch()","Rails activesupport::hashwithindifferentaccess#fetch()","Rails activesupport::hashwithindifferentaccess#fetch()","Rails mime::fetch()","Ruby gem::remotefetcher#fetch_file()","Ruby gem::remotefetcher#fetch_http()","Ruby gem::remotefetcher#fetch_https()","Ruby gem::remotefetcher#fetch_path()","Ruby drb::fetch_server()","Ruby gem::remotefetcher#fetch_size()","Ruby gem::source#fetch_spec()","Ruby gem::source::local#fetch_spec()","Ruby gem::source::specificfile#fetch_spec()","Ruby gem::remotefetcher::fetcher()","Ruby gem::specfetcher::fetcher()","Ruby dl::fiddle?()","Ruby csv::row#field()","Ruby csv::row#field?()","Ruby csv::row#field_row?()","Rails actionview::helpers::formtaghelper#field_set_tag()","Ruby csv::row#fields()","Rails actionview::helpers::formbuilder#fields_for()","Rails actionview::helpers::formhelper#fields_for()","Rails array#fifth()","Ruby argf#file()","Ruby digest::class::file()","Ruby digest::instance#file()","Ruby rdoc::markup::document#file=()","Ruby file::file?()","Ruby file::stat#file?()","Ruby filetest#file?()","Ruby gem::package::tarreader::entry#file?()","Ruby pathname#file?()","Ruby rdoc::generator::darkfish#file_dir()","Ruby rdoc::generator::jsonindex#file_dir()","Ruby cgi::htmlextension#file_field()","Rails actionview::helpers::formbuilder#file_field()","Rails actionview::helpers::formhelper#file_field()","Rails actionview::helpers::formtaghelper#file_field_tag()","Ruby irb::context#file_input?()","Ruby gem::specification#file_name()","Ruby rdoc::codeobject#file_name()","Rails rails::generators::namedbase#file_path()","Ruby argf#filename()","Ruby ripper::filter#filename()","Rails activesupport::multibyte::unicode::unicodedatabase::filename()","Ruby readline::filename_quote_characters()","Ruby readline::filename_quote_characters=()","Ruby argf#fileno()","Ruby io#fileno()","Ruby stringio#fileno()","Ruby gem::specification#files()","Ruby gem::specification#files=()","Ruby rdoc::store#files_hash()","Ruby array#fill()","Ruby prettyprint#fill_breakable()","Ruby csv::filter()","Ruby rexml::quickpath::filter()","Ruby uri::ldap#filter()","Rails actiondispatch::http::parameterfilter#filter()","Rails activesupport::backtracecleaner#filter()","Ruby uri::ldap#filter=()","Ruby irb::workspace#filter_backtrace()","Ruby optionparser::parseerror::filter_backtrace()","Rails rails::paths::root#filter_by()","Ruby rdoc::ri::driver#filter_methods()","Rails actiondispatch::remoteip::getip#filter_proxies()","Rails actiondispatch::http::filterparameters#filtered_env()","Rails actiondispatch::http::filterredirect#filtered_location()","Rails actiondispatch::http::filterparameters#filtered_parameters()","Rails actiondispatch::http::filterparameters#filtered_path()","Rails actiondispatch::http::filterparameters#filtered_query_string()","Ruby openssl::cipher#final()","Ruby encoding::find()","Ruby enumerable#find()","Ruby find::find()","Ruby irb::locale#find()","Ruby pathname#find()","Ruby rinda::tuplebag#find()","Ruby rinda::tuplebag::tuplebin#find()","Rails actionview::lookupcontext::viewpaths#find()","Rails activerecord::associations::collectionproxy#find()","Rails activerecord::findermethods#find()","Rails rails::engine::find()","Rails rails::generators::activemodel::find()","Rails sourceannotationextractor#find()","Ruby rdoc::parser::c#find_alias_comment()","Ruby enumerable#find_all()","Ruby enumerator::lazy#find_all()","Ruby gem::dependencyresolver::apiset#find_all()","Ruby gem::dependencyresolver::currentset#find_all()","Ruby gem::dependencyresolver::indexset#find_all()","Ruby rinda::tuplebag#find_all()","Rails actionview::lookupcontext::viewpaths#find_all()","Rails actionview::resolver#find_all()","Ruby gem::specification::find_all_by_name()","Ruby rinda::tuplebag#find_all_template()","Ruby rdoc::classmodule#find_ancestor_local_symbol()","Ruby rdoc::parser::c#find_attr_comment()","Ruby rdoc::context#find_attribute()","Ruby rdoc::context#find_attribute_named()","Rails date::find_beginning_of_week!()","Ruby rdoc::parser::c#find_body()","Rails activerecord::findermethods#find_by()","Rails activerecord::findermethods#find_by!()","Ruby gem::specification::find_by_name()","Ruby gem::specification::find_by_path()","Rails activerecord::querying#find_by_sql()","Ruby rdoc::store#find_c_enclosure()","Ruby rdoc::parser::c#find_class()","Ruby rdoc::parser::c#find_class_comment()","Ruby rdoc::context#find_class_method_named()","Ruby rdoc::classmodule#find_class_named()","Ruby rdoc::store#find_class_named()","Ruby rdoc::store#find_class_named_from()","Ruby rdoc::store#find_class_or_module()","Ruby rdoc::toplevel#find_class_or_module()","Rails rails::dbconsole#find_cmd_and_exec()","Ruby gem::commandmanager#find_command()","Ruby gem::commandmanager#find_command_possibilities()","Ruby rdoc::parser::c#find_const_comment()","Ruby rdoc::context#find_constant_named()","Rails actionview::dependencytracker::find_dependencies()","Rails activerecord::batches#find_each()","Ruby rdoc::context#find_enclosing_module_named()","Ruby makemakefile#find_executable()","Rails rails::apprailsloader::find_executable()","Ruby rdoc::context#find_external_alias()","Ruby rdoc::context#find_external_alias_named()","Ruby rdoc::context#find_file_named()","Ruby rdoc::store#find_file_named()","Ruby gem::find_files()","Rails activerecord::findermethods#find_first()","Ruby rexml::node#find_first_recursive()","Ruby gem::source::local#find_gem()","Ruby gem::dependencyinstaller#find_gems_with_sources()","Ruby makemakefile#find_header()","Rails sourceannotationextractor#find_in()","Rails activerecord::batches#find_in_batches()","Ruby gem::commands::unpackcommand#find_in_cache()","Ruby gem::specification::find_in_unresolved()","Ruby gem::specification::find_in_unresolved_tree()","Ruby gem::specification::find_inactive_by_path()","Ruby rdoc::markup::preprocess#find_include_file()","Ruby array#find_index()","Ruby enumerable#find_index()","Ruby matrix#find_index()","Ruby rdoc::context#find_instance_method_named()","Rails activerecord::findermethods#find_last()","Ruby makemakefile#find_library()","Ruby rdoc::context#find_local_symbol()","Ruby rdoc::toplevel#find_local_symbol()","Ruby rdoc::context#find_method()","Ruby rdoc::context#find_method_named()","Ruby rdoc::ri::driver#find_methods()","Ruby rdoc::parser::c#find_modifiers()","Ruby rdoc::context#find_module_named()","Ruby rdoc::store#find_module_named()","Ruby rdoc::toplevel#find_module_named()","Ruby gem::dependencylist#find_name()","Rails activerecord::findermethods#find_one()","Rails activerecord::relation#find_or_create_by()","Rails activerecord::relation#find_or_create_by!()","Rails activerecord::relation#find_or_initialize_by()","Ruby rdoc::parser::c#find_override_comment()","Ruby rdoc::ri::driver#find_pager_jruby()","Ruby gem::commands::whichcommand#find_paths()","Ruby uri::generic#find_proxy()","Ruby rake::application#find_rakefile_location()","Ruby rake::application#find_rakefile_location()","Ruby gem::commands::dependencycommand#find_reverse_dependencies()","Ruby rake::altsystem#find_runnable()","Rails activerecord::findermethods#find_some()","Ruby gem::dependencyinstaller#find_spec_by_name_and_version()","Ruby rdoc::ri::driver#find_store()","Ruby rdoc::context#find_symbol()","Ruby rdoc::context#find_symbol_module()","Ruby shell::commandprocessor#find_system_command()","Rails activerecord::findermethods#find_take()","Rails actionview::lookupcontext::viewpaths#find_template()","Ruby rdoc::store#find_text_page()","Ruby makemakefile#find_type()","Rails activerecord::connectionadapters::mysqladapter::fields::find_type()","Rails activesupport::timezone::find_tzinfo()","Ruby rdoc::store#find_unique()","Ruby gem#find_unresolved_default_spec()","Rails activerecord::findermethods#find_with_associations()","Rails activerecord::findermethods#find_with_ids()","Rails time::find_zone()","Rails time::find_zone!()","Rails activerecord::dynamicmatchers::findby#finder()","Rails activerecord::dynamicmatchers::findbybang#finder()","Rails activerecord::dynamicmatchers::finder#finder()","Ruby rinda::ringfinger::finger()","Ruby encoding::converter#finish()","Ruby net::http#finish()","Ruby net::pop3#finish()","Ruby net::smtp#finish()","Ruby openssl::engine#finish()","Ruby psych::visitors::yamltree#finish()","Ruby rdoc::options#finish()","Ruby zlib::gzipfile#finish()","Ruby zlib::zstream#finish()","Rails activesupport::logsubscriber#finish()","Rails activesupport::notifications::fanout#finish()","Rails activesupport::notifications::fanout::subscribers::timed#finish()","Rails activesupport::notifications::instrumenter#finish()","Rails activesupport::subscriber#finish()","Ruby rdoc::options#finish_page_dir()","Ruby gem::finish_resolve()","Ruby threadswait#finished?()","Ruby threadswait#finished?()","Ruby zlib::zstream#finished?()","Ruby bigdecimal#finite?()","Ruby float#finite?()","Ruby openssl::fips_mode=()","Ruby array#first()","Ruby enumerable#first()","Ruby gem::sourcelist#first()","Ruby rexml::quickpath::first()","Ruby rexml::xpath::first()","Ruby rexml::xpathparser#first()","Ruby range#first()","Rails activerecord::associations::collectionproxy#first()","Rails activerecord::findermethods#first()","Rails rails::paths::path#first()","Rails string#first()","Rails activerecord::findermethods#first!()","Ruby prettyprint#first?()","Ruby prettyprint::group#first?()","Ruby prettyprint::singleline#first?()","Ruby rubyvm::instructionsequence#first_lineno()","Ruby bigdecimal#fix()","Ruby rdoc::store#fix_basic_object_inheritance()","Ruby regexp#fixed_encoding?()","Rails activerecord::fixtureset::fixture_is_cached?()","Rails activerecord::testfixtures::classmethods#fixtures()","Ruby openssl::x509::store#flags=()","Ruby curses::flash()","Rails actiondispatch::request#flash()","Ruby enumerable#flat_map()","Ruby enumerator::lazy#flat_map()","Ruby array#flatten()","Ruby hash#flatten()","Ruby set#flatten()","Ruby array#flatten!()","Ruby set#flatten!()","Ruby file#flock()","Ruby bigdecimal#floor()","Ruby float#floor()","Ruby integer#floor()","Ruby integer#floor()","Ruby numeric#floor()","Ruby rexml::functions::floor()","Ruby rational#floor()","Ruby rdoc::markup::attributemanager#flow()","Ruby gem::package::tarwriter#flush()","Ruby io#flush()","Ruby openssl::buffering#flush()","Ruby prettyprint#flush()","Ruby prettyprint::singleline#flush()","Ruby shell::systemcommand#flush()","Ruby stringio#flush()","Ruby webrick::httpauth::htdigest#flush()","Ruby webrick::httpauth::htgroup#flush()","Ruby webrick::httpauth::htpasswd#flush()","Ruby win32::registry#flush()","Ruby zlib::deflate#flush()","Ruby zlib::gzipwriter#flush()","Rails activesupport::taggedlogging#flush()","Rails activesupport::logsubscriber::flush_all!()","Ruby rdoc::text#flush_left()","Rails actionview::template::handlers::erubis#flush_newline_if_pending()","Ruby zlib::zstream#flush_next_in()","Ruby zlib::zstream#flush_next_out()","Ruby openssl::ssl::sslcontext#flush_sessions()","Ruby file::fnmatch()","Ruby pathname#fnmatch()","Ruby file::fnmatch?()","Ruby pathname#fnmatch?()","Rails actionview::helpers::asseturlhelper#font_path()","Rails actionview::helpers::asseturlhelper#font_url()","Ruby rdoc::parser::for()","Ruby gem::specification#for_cache()","Rails html::selector::for_class()","Ruby gem::dependencyresolver::for_current_gems()","Ruby basicsocket::for_fd()","Ruby io::for_fd()","Ruby sys#for_files()","Rails html::selector::for_id()","Ruby gem::dependencyresolver::dependencyconflict#for_spec?()","Ruby rdoc::codeobject#force_documentation=()","Ruby rdoc::comment#force_encoding()","Ruby string#force_encoding()","Ruby csv#force_quotes?()","Rails actioncontroller::forcessl::classmethods#force_ssl()","Rails actioncontroller::forcessl#force_ssl_redirect()","Ruby addrinfo::foreach()","Ruby csv::foreach()","Ruby dir::foreach()","Ruby io::foreach()","Ruby net::pop3::foreach()","Ruby shell::commandprocessor#foreach()","Rails activesupport::inflector#foreign_key()","Rails string#foreign_key()","Ruby kernel#fork()","Ruby process::fork()","Ruby thread::fork()","Ruby cgi::htmlextension#form()","Rails actioncontroller::requestforgeryprotection#form_authenticity_param()","Rails actioncontroller::requestforgeryprotection#form_authenticity_token()","Ruby net::httpheader#form_data=()","Rails actiondispatch::request#form_data?()","Rails actionview::helpers::formhelper#form_for()","Rails actionview::helpers::formtaghelper#form_tag()","Ruby benchmark::tms#format()","Ruby irb::locale#format()","Ruby kernel#format()","Ruby prettyprint::format()","Ruby webrick::accesslog#format()","Rails actiondispatch::http::mimenegotiation#format()","Ruby rdoc::comment#format=()","Rails actiondispatch::http::mimenegotiation#format=()","Ruby net::imap::format_date()","Ruby net::imap::format_datetime()","Rails actionmailer::mailhelper#format_paragraph()","Ruby gem::text#format_text()","Rails actiondispatch::http::mimenegotiation#formats()","Rails actiondispatch::http::mimenegotiation#formats=()","Rails activesupport::timewithzone#formatted_offset()","Rails activesupport::timezone#formatted_offset()","Rails datetime#formatted_offset()","Rails time#formatted_offset()","Ruby gem::installer#formatted_program_filename()","Ruby gem::uninstaller#formatted_program_filename()","Ruby rdoc::generator::markup#formatter()","Ruby rdoc::ri::driver#formatter()","Rails numeric#fortnight()","Rails numeric#fortnights()","Rails array#forty_two()","Rails array#fourth()","Ruby bigdecimal#frac()","Ruby uri::generic#fragment=()","Rails actioncontroller::caching::fragments#fragment_cache_key()","Rails actioncontroller::caching::fragments#fragment_exist?()","Rails actiondispatch::exceptionwrapper#framework_trace()","Rails rails::info::framework_version()","Rails rails::info::frameworks()","Ruby dl::free()","Ruby dl::cptr#free()","Ruby fiddle::free()","Ruby fiddle::pointer#free()","Ruby dl::cptr#free=()","Ruby fiddle::pointer#free=()","Ruby delegator#freeze()","Ruby module#freeze()","Ruby object#freeze()","Ruby pathname#freeze()","Rails activerecord::core#freeze()","Rails activesupport::timewithzone#freeze()","Rails thread#freeze()","Rails actiondispatch::http::cache::request#fresh?()","Rails actioncontroller::conditionalget#fresh_when()","Ruby math::frexp()","Ruby date#friday?()","Ruby time#friday?()","Ruby rdoc::store#friendly_path()","Ruby gem::package::tarheader::from()","Ruby gem::sourcelist::from()","Rails activerecord::querymethods#from()","Rails array#from()","Rails string#from()","Ruby json::genericobject#from_hash()","Rails activemodel::serializers::json#from_json()","Ruby gem::nametuple::from_list()","Ruby rdoc::classmodule::from_module()","Ruby process::gid::from_name()","Ruby process::uid::from_name()","Rails activesupport::duration#from_now()","Rails numeric#from_now()","Ruby integer::from_prime_division()","Ruby integer::from_prime_division()","Rails actionview::logsubscriber#from_rails_root()","Rails actiondispatch::flash::flashhash::from_session_value()","Ruby gem::dependencylist::from_specs()","Rails hash::from_trusted_xml()","Rails activemodel::serializers::xml#from_xml()","Rails hash::from_xml()","Ruby gem::specification::from_yaml()","Ruby drb::front()","Ruby drb::extserv#front()","Ruby array#frozen?()","Ruby object#frozen?()","Rails activerecord::core#frozen?()","Ruby io#fsync()","Ruby stringio#fsync()","Ruby file::ftype()","Ruby file::stat#ftype()","Ruby pathname#ftype()","Ruby gem::specification#full_gem_path()","Rails activemodel::errors#full_message()","Rails activemodel::errors#full_messages()","Rails activemodel::errors#full_messages_for()","Ruby gem::dependencyresolver::apispecification#full_name()","Ruby gem::dependencyresolver::activationrequest#full_name()","Ruby gem::dependencyresolver::indexspecification#full_name()","Ruby gem::package::tarreader::entry#full_name()","Ruby gem::specification#full_name()","Ruby rdoc::classmodule#full_name()","Ruby rdoc::constant#full_name()","Ruby rdoc::context#full_name()","Ruby rdoc::extend#full_name()","Ruby rdoc::include#full_name()","Ruby rdoc::methodattr#full_name()","Ruby rdoc::toplevel#full_name()","Ruby rss::element#full_name()","Ruby rss::ituneschannelmodel::itunescategory#full_name()","Ruby rss::ituneschannelmodel::itunesimage#full_name()","Ruby rss::ituneschannelmodel::itunesowner#full_name()","Ruby rss::itunesitemmodel::itunesduration#full_name()","Ruby rss::imagefaviconmodel::imagefavicon#full_name()","Ruby rss::imageitemmodel::imageitem#full_name()","Ruby rss::rdf#full_name()","Ruby rss::rdf::li#full_name()","Ruby rss::rdf::li#full_name()","Ruby rss::rdf::li#full_name()","Ruby rss::rdf::seq#full_name()","Ruby rss::rdf::seq#full_name()","Ruby rss::taxonomytopicmodel::taxonomytopic#full_name()","Ruby rss::taxonomytopicsmodel::taxonomytopics#full_name()","Ruby rss::trackbackmodel10::trackbackabout#full_name()","Ruby rss::trackbackmodel10::trackbackping#full_name()","Ruby rss::trackbackmodel20::trackbackabout#full_name()","Ruby rss::trackbackmodel20::trackbackping#full_name()","Ruby rss::xml::element#full_name()","Ruby rdoc::codeobject#full_name=()","Ruby rdoc::alias#full_old_name()","Ruby gem::dependencyresolver::activationrequest#full_spec()","Rails actiondispatch::exceptionwrapper#full_trace()","Rails actiondispatch::request#fullpath()","Ruby rdoc::context#fully_documented?()","Ruby rdoc::stats#fully_documented?()","Ruby rexml::namespace#fully_expanded_name()","Ruby rexml::quickpath::function()","Rails activesupport::timewithzone#future?()","Rails dateandtime::calculations#future?()","Rails datetime#future?()","Ruby math::gamma()","Ruby gc#garbage_collect()","Ruby objectspace::garbage_collect()","Ruby gem::dependencyinstaller#gather_dependencies()","Ruby rdoc::rdoc#gather_files()","Ruby integer#gcd()","Ruby integer#gcd()","Ruby integer#gcdlcm()","Ruby integer#gcdlcm()","Ruby gem::requestset#gem()","Ruby gem::requestset::gemdepedencyapi#gem()","Ruby kernel#gem()","Rails build#gem()","Rails rails::generators::actions#gem()","Ruby gem::installer#gem_dir()","Ruby gem::specification#gem_dir()","Ruby rdoc::ri::paths::gem_dir()","Ruby gem::indexer#gem_file_list()","Rails rails::generators::actions#gem_group()","Ruby kernel#gem_original_require()","Ruby gem::commands::whichcommand#gem_paths()","Ruby gem::doctor#gem_repository?()","Ruby rdoc::ri::paths::gemdirs()","Rails rails::appbuilder#gemfile()","Rails rails::pluginbuilder#gemfile()","Rails rails::pluginbuilder#gemfile_entry()","Ruby gem::specification#gems_dir()","Rails rails::pluginbuilder#gemspec()","Ruby rdoc::markup::formatter::gen_relative_url()","Ruby rdoc::generator::darkfish#gen_sub_directories()","Ruby rdoc::markup::tohtml#gen_url()","Ruby rdoc::markup::tohtmlcrossref#gen_url()","Ruby rdoc::markup::tohtmlsnippet#gen_url()","Ruby rdoc::markup::tomarkdown#gen_url()","Ruby csv::generate()","Ruby json#generate()","Ruby openssl::pkey::dh::generate()","Ruby openssl::pkey::dsa::generate()","Ruby openssl::pkey::rsa::generate()","Ruby openssl::pkey::rsa::generate()","Ruby rdoc::generator::darkfish#generate()","Ruby rdoc::generator::jsonindex#generate()","Ruby rdoc::generator::ri#generate()","Ruby rdoc::rdoc#generate()","Ruby rdoc::rubygemshook#generate()","Ruby rdoc::rubygemshook#generate()","Rails activesupport::messageverifier#generate()","Rails rails::generators::actions#generate()","Ruby gem::installer#generate_bin()","Ruby gem::installer#generate_bin_script()","Ruby gem::installer#generate_bin_symlink()","Ruby rdoc::generator::darkfish#generate_class()","Ruby rdoc::generator::darkfish#generate_class_files()","Ruby gem::commands::setupcommand#generate_default_dirs()","Ruby rexml::validation::state#generate_event()","Ruby rdoc::generator::darkfish#generate_file_files()","Ruby gem::indexer#generate_index()","Ruby rdoc::generator::darkfish#generate_index()","Ruby openssl::pkey::ec#generate_key()","Rails activesupport::cachingkeygenerator#generate_key()","Rails activesupport::keygenerator#generate_key()","Ruby openssl::pkey::dh#generate_key!()","Ruby csv::generate_line()","Rails activemodel::errors#generate_message()","Rails abstractcontroller::collector::generate_method_for_mime()","Ruby rdoc::generator::darkfish#generate_page()","Ruby openssl::bn::generate_prime()","Rails rails::railtie::generate_railtie_name()","Ruby rdoc::generator::darkfish#generate_servlet_not_found()","Ruby rdoc::generator::darkfish#generate_servlet_root()","Rails actiondispatch::session::compatibility#generate_sid()","Ruby rdoc::generator::darkfish#generate_table_of_contents()","Rails rails::pluginbuilder#generate_test_dummy()","Ruby gem::installer#generate_windows_script()","Rails activerecord::core::classmethods#generated_feature_methods()","Ruby rdoc::rubygemshook::generation_hook()","Ruby rdoc::rubygemshook::generation_hook()","Ruby openssl::pkey::ec::group#generator()","Ruby rdoc::options#generator_descriptions()","Ruby rdoc::servlet#generator_for()","Rails rails::generators::base::generator_name()","Rails rails::railtie::generators()","Ruby getoptlong#get()","Ruby net::ftp#get()","Ruby net::http#get()","Ruby net::http::get()","Ruby rdoc::markup::parser#get()","Rails actiondispatch::routing::mapper::httphelpers#get()","Rails activemodel::errors#get()","Rails activesupport::dependencies::classcache#get()","Ruby net::http#get2()","Rails actiondispatch::request#get?()","Ruby gem::command#get_all_gem_names()","Ruby gem::command#get_all_gem_names_and_versions()","Ruby rss::element#get_attributes()","Ruby rdoc::parser::ruby#get_bool()","Ruby stringscanner#get_byte()","Ruby gem::commands::cleanupcommand#get_candidate_gems()","Ruby rdoc::parser::ruby#get_class_or_module()","Ruby rdoc::parser::ruby#get_class_specification()","Ruby rdoc::parser::ruby#get_constant()","Ruby rdoc::parser::ruby#get_constant_with_optional_parens()","Ruby xmlrpc::basicserver#get_default_handler()","Ruby rexml::element#get_elements()","Ruby net::httpheader#get_fields()","Ruby rss::utils#get_file_and_line_from_caller()","Ruby rexml::xpathparser#get_first()","Ruby gem::commands::cleanupcommand#get_gems_to_cleanup()","Ruby win32::resolv::get_hosts_path()","Ruby win32::sspi::negotiateauth#get_initial_token()","Ruby webrick::httpservlet::abstractservlet::get_instance()","Ruby xmlrpc::webrickservlet#get_instance()","Ruby gem::commands::unpackcommand#get_metadata()","Ruby xmlrpc::service::interface#get_methods()","Ruby xmlrpc::service::publicinstancemethodsinterface#get_methods()","Ruby rexml::functions::get_namespace()","Ruby gem::remotefetcher#get_no_proxy_from_env()","Ruby gem::command#get_one_gem_name()","Ruby gem::command#get_one_optional_argument()","Ruby getoptlong#get_option()","Ruby webrick::httpauth::htdigest#get_passwd()","Ruby webrick::httpauth::htpasswd#get_passwd()","Ruby webrick::httpauth::userdb#get_passwd()","Ruby gem::commands::unpackcommand#get_path()","Ruby gem::commands::cleanupcommand#get_primary_gems()","Ruby net::http::get_print()","Ruby gem::remotefetcher#get_proxy_from_env()","Ruby win32::resolv::get_resolv_info()","Ruby net::http::get_response()","Ruby readline::get_screen_size()","Ruby xmlrpc::basicserver#get_service_hook()","Rails actiondispatch::session::cachestore#get_session()","Ruby rdoc::generator::darkfish#get_sorted_module_list()","Ruby rdoc::generator::darkfish#get_svninfo()","Ruby rdoc::parser::ruby#get_symbol_or_name()","Ruby rexml::element#get_text()","Ruby debugger__#get_thread()","Ruby rdoc::parser::rubytools#get_tk()","Ruby rdoc::parser::rubytools#get_tk_until()","Ruby rdoc::parser::rubytools#get_tkread()","Ruby xmlrpc::webrickservlet#get_valid_ip()","Ruby openssl::config#get_value()","Ruby net::imap#getacl()","Ruby ipsocket::getaddress()","Ruby ipsocket#getaddress()","Ruby resolv::getaddress()","Ruby resolv#getaddress()","Ruby resolv::dns#getaddress()","Ruby resolv::hosts#getaddress()","Ruby resolv#getaddresses()","Ruby resolv::getaddresses()","Ruby resolv::dns#getaddresses()","Ruby resolv::hosts#getaddresses()","Ruby addrinfo::getaddrinfo()","Ruby socket::getaddrinfo()","Ruby net::ftp#getbinaryfile()","Ruby curses::window#getbkgd()","Ruby argf#getbyte()","Ruby io#getbyte()","Ruby string#getbyte()","Ruby stringio#getbyte()","Ruby stringscanner#getbyte()","Ruby zlib::gzipreader#getbyte()","Ruby argf#getc()","Ruby gem::package::tarreader::entry#getc()","Ruby io#getc()","Ruby openssl::buffering#getc()","Ruby stringio#getc()","Ruby zlib::gzipreader#getc()","Ruby curses::getch()","Ruby curses::window#getch()","Ruby io#getch()","Ruby io::readable#getch()","Ruby stringscanner#getch()","Ruby net::ftp#getdir()","Ruby process::sys::getegid()","Ruby process::sys::geteuid()","Ruby process::sys::getgid()","Ruby time#getgm()","Rails activesupport::timewithzone#getgm()","Ruby etc::getgrent()","Ruby etc::getgrgid()","Ruby etc::getgrnam()","Ruby socket::gethostbyaddr()","Ruby socket::gethostbyname()","Ruby tcpsocket::gethostbyname()","Ruby socket::gethostname()","Ruby time#getlocal()","Rails activesupport::timewithzone#getlocal()","Ruby etc::getlogin()","Ruby curses::getmouse()","Ruby resolv#getname()","Ruby resolv::getname()","Ruby resolv::dns#getname()","Ruby resolv::hosts#getname()","Ruby addrinfo#getnameinfo()","Ruby socket::getnameinfo()","Ruby resolv::getnames()","Ruby resolv#getnames()","Ruby resolv::dns#getnames()","Ruby resolv::hosts#getnames()","Ruby optionparser::getopts()","Ruby optionparser#getopts()","Ruby optionparser::arguable#getopts()","Ruby basicsocket#getpeereid()","Ruby basicsocket#getpeername()","Ruby process::getpgid()","Ruby process::getpgrp()","Ruby process::getpriority()","Ruby pty::getpty()","Ruby etc::getpwent()","Ruby etc::getpwnam()","Ruby etc::getpwuid()","Ruby net::imap#getquota()","Ruby net::imap#getquotaroot()","Ruby resolv::dns#getresource()","Ruby resolv::dns#getresources()","Ruby process::getrlimit()","Ruby argf#gets()","Ruby csv#gets()","Ruby io#gets()","Ruby irb::fileinputmethod#gets()","Ruby irb::inputmethod#gets()","Ruby irb::locale#gets()","Ruby irb::readlineinputmethod#gets()","Ruby irb::stdioinputmethod#gets()","Ruby kernel#gets()","Ruby openssl::buffering#gets()","Ruby stringio#gets()","Ruby xmp::stringinputmethod#gets()","Ruby zlib::gzipreader#gets()","Ruby socket::getservbyname()","Ruby socket::getservbyport()","Ruby webrick::utils::getservername()","Ruby process::getsid()","Ruby basicsocket#getsockname()","Ruby basicsocket#getsockopt()","Ruby curses::getstr()","Ruby curses::window#getstr()","Ruby rss::baselistener#getter()","Ruby net::ftp#gettextfile()","Ruby process::sys::getuid()","Ruby time#getutc()","Rails activesupport::timewithzone#getutc()","Rails datetime#getutc()","Ruby dir::getwd()","Ruby fileutils::getwd()","Ruby pathname::getwd()","Ruby file::stat#gid()","Ruby process::gid()","Ruby process::gid=()","Rails numeric#gigabyte()","Rails numeric#gigabytes()","Rails rails::generators::actions#git()","Ruby rdoc::markdown#github()","Rails ","Rails ","Rails rails::appbuilder#gitignore()","Rails rails::pluginbuilder#gitignore()","Ruby dir::glob()","Ruby pathname::glob()","Ruby shell::commandprocessor#glob()","Ruby kernel#global_variables()","Ruby ","Ruby time::gm()","Ruby time#gmt?()","Rails activesupport::timewithzone#gmt?()","Ruby time#gmt_offset()","Rails activesupport::timewithzone#gmt_offset()","Ruby time#gmtime()","Rails activesupport::timewithzone#gmtime()","Ruby time#gmtoff()","Rails activesupport::timewithzone#gmtoff()","Ruby ","Ruby process::gid::grant_privilege()","Ruby process::uid::grant_privilege()","Rails activesupport::multibyte::chars#grapheme_length()","Ruby rdoc::stats#great_job()","Ruby date#gregorian()","Ruby date#gregorian?()","Ruby date::gregorian_leap?()","Ruby enumerable#grep()","Ruby enumerator::lazy#grep()","Ruby etc::group()","Ruby gem::requestset::gemdepedencyapi#group()","Ruby openssl::pkey::ec#group()","Ruby prettyprint#group()","Ruby prettyprint::singleline#group()","Ruby thread#group()","Rails activerecord::querymethods#group()","Ruby openssl::pkey::ec#group=()","Ruby enumerable#group_by()","Ruby rdoc::parser::changelog#group_entries()","Ruby prettyprint#group_sub()","Rails actionview::helpers::formbuilder#grouped_collection_select()","Rails actionview::helpers::formoptionshelper#grouped_collection_select()","Rails actionview::helpers::formoptionshelper#grouped_options_for_select()","Ruby process::groups()","Rails rails::groups()","Ruby process::groups=()","Ruby file::grpowned?()","Ruby file::stat#grpowned?()","Ruby filetest#grpowned?()","Ruby pathname#grpowned?()","Ruby kernel#gsub()","Ruby string#gsub()","Ruby string#gsub!()","Ruby pp::ppmethods#guard_inspect_key()","Ruby kconv::guess()","Ruby nkf::guess()","Ruby optionparser::switch::guess()","Ruby win32ole_type#guid()","Ruby win32ole_typelib#guid()","Ruby gem::gunzip()","Ruby gem::gzip()","Ruby gem::indexer#gzip()","Ruby gem::package#gzip_to()","Ruby erb::util::h()","Ruby rss::utils#h()","Rails erb::util::h()","Rails actioncontroller::httpauthentication::digest#ha1()","Rails actioncontroller::logsubscriber#halted_callback()","Ruby rdoc::markup::preprocess#handle()","Ruby gem::configfile#handle_arguments()","Ruby rdoc::parser::c#handle_attr()","Ruby rdoc::parser::c#handle_class_module()","Ruby rdoc::parser::c#handle_constants()","Ruby rdoc::markup::preprocess#handle_directive()","Ruby rdoc::parser::c#handle_ifdefs_in()","Ruby thread::handle_interrupt()","Ruby rdoc::parser::c#handle_method()","Ruby gem::command#handle_options()","Ruby rake::application#handle_options()","Ruby rake::application#handle_options()","Ruby rdoc::rdoc#handle_pipe()","Ruby rdoc::markup::tomarkdown#handle_rdoc_link()","Ruby rdoc::parser::c#handle_singleton()","Ruby rdoc::markup::tohtmlcrossref#handle_special_crossref()","Ruby rdoc::markup::tohtmlsnippet#handle_special_crossref()","Ruby rdoc::markup::tolabel#handle_special_crossref()","Ruby rdoc::markup::tohtml#handle_special_hard_break()","Ruby rdoc::markup::tohtmlsnippet#handle_special_hard_break()","Ruby rdoc::markup::tomarkdown#handle_special_hard_break()","Ruby rdoc::markup::tordoc#handle_special_hard_break()","Ruby rdoc::markup::tohtml#handle_special_hyperlink()","Ruby rdoc::markup::tohtmlcrossref#handle_special_hyperlink()","Ruby rdoc::markup::tohtml#handle_special_rdoclink()","Ruby rdoc::markup::tohtmlcrossref#handle_special_rdoclink()","Ruby rdoc::markup::tomarkdown#handle_special_rdoclink()","Ruby rdoc::markup::tordoc#handle_special_suppressed_crossref()","Ruby rdoc::markup::tohtml#handle_special_tidylink()","Ruby rdoc::markup::tolabel#handle_special_tidylink()","Ruby rdoc::markup::tomarkdown#handle_special_tidylink()","Ruby rdoc::parser::c#handle_tab_width()","Rails actioncontroller::requestforgeryprotection#handle_unverified_request()","Rails actioncontroller::requestforgeryprotection::protectionmethods::exception#handle_unverified_request()","Rails actioncontroller::requestforgeryprotection::protectionmethods::nullsession#handle_unverified_request()","Rails actioncontroller::requestforgeryprotection::protectionmethods::resetsession#handle_unverified_request()","Ruby dl::importer#handler()","Ruby fiddle::importer#handler()","Ruby win32ole_event#handler()","Ruby win32ole_event#handler=()","Rails activesupport::rescuable#handler_for_rescue()","Ruby dl::compositehandler#handlers()","Ruby fiddle::compositehandler#handlers()","Ruby gem::command#handles?()","Rails actionview::template::handlers::erb#handles_encoding?()","Ruby nqxml::node#haschildnodes()","Rails activerecord::associations::classmethods#has_and_belongs_to_many()","Rails activerecord::attributemethods#has_attribute?()","Ruby rexml::element#has_attributes?()","Ruby curses::has_colors?()","Ruby rexml::element#has_elements?()","Rails actioncontroller::responder#has_errors?()","Ruby rinda::tuplebag#has_expires?()","Ruby cgi::queryextension#has_key?()","Ruby csv::row#has_key?()","Ruby dbm#has_key?()","Ruby env::has_key?()","Ruby gdbm#has_key?()","Ruby hash#has_key?()","Ruby sdbm#has_key?()","Rails activemodel::errors#has_key?()","Rails activerecord::associations::classmethods#has_many()","Ruby rexml::light::node#has_name?()","Ruby rexml::namespace#has_name?()","Rails actiondispatch::routing::mapper::base#has_named_route?()","Ruby rexml::parsers::baseparser#has_next?()","Rails activerecord::associations::classmethods#has_one()","Rails activemodel::securepassword::classmethods#has_secure_password()","Ruby rexml::element#has_text?()","Ruby gem::specification#has_unit_tests?()","Ruby dbm#has_value?()","Ruby env::has_value?()","Ruby gdbm#has_value?()","Ruby hash#has_value?()","Ruby sdbm#has_value?()","Ruby yaml::dbm#has_value?()","Ruby array#hash()","Ruby bigdecimal#hash()","Ruby bignum#hash()","Ruby float#hash()","Ruby gem::nametuple#hash()","Ruby gem::source#hash()","Ruby hash#hash()","Ruby ipaddr#hash()","Ruby matchdata#hash()","Ruby matrix#hash()","Ruby method#hash()","Ruby object#hash()","Ruby openssl::x509::name#hash()","Ruby openstruct#hash()","Ruby proc#hash()","Ruby rdoc::toplevel#hash()","Ruby rexml::attribute#hash()","Ruby range#hash()","Ruby regexp#hash()","Ruby string#hash()","Ruby struct#hash()","Ruby time#hash()","Ruby uri::generic#hash()","Ruby unboundmethod#hash()","Ruby vector#hash()","Rails activerecord::core#hash()","Rails activesupport::timewithzone#hash()","Ruby openssl::x509::name#hash_old()","Ruby rss::atom::entry#have_author?()","Ruby rss::atom::feed#have_author?()","Ruby rss::atom::feed::entry#have_author?()","Ruby rss::atom::feed::entry::source#have_author?()","Ruby rss::element#have_children_elements()","Ruby makemakefile#have_const()","Ruby rss::element#have_content?()","Ruby makemakefile#have_framework()","Ruby makemakefile#have_func()","Ruby makemakefile#have_header()","Ruby makemakefile#have_library()","Ruby makemakefile#have_macro()","Ruby rake::application#have_rakefile()","Ruby rake::application#have_rakefile()","Ruby gem::server#have_rdoc_4_plus?()","Ruby rss::element#have_required_elements?()","Ruby rss::maker::atom::feed::channel#have_required_values?()","Ruby rss::maker::atom::feed::items::item#have_required_values?()","Ruby rss::maker::base#have_required_values?()","Ruby rss::maker::ituneschannelmodel::itunescategoriesbase::itunescategorybase#have_required_values?()","Ruby rss::maker::imagefaviconmodel::imagefaviconbase#have_required_values?()","Ruby rss::maker::imageitemmodel::imageitembase#have_required_values?()","Ruby rss::maker::rss10::image#have_required_values?()","Ruby rss::maker::rss10::textinput#have_required_values?()","Ruby rss::maker::taxonomytopicmodel::taxonomytopicsbase::taxonomytopicbase#have_required_values?()","Ruby rss::maker::trackbackmodel::trackbackaboutsbase::trackbackaboutbase#have_required_values?()","Ruby makemakefile#have_struct_member()","Ruby makemakefile#have_type()","Ruby makemakefile#have_var()","Ruby rss::atom::feed::entry::content#have_xml_content?()","Ruby rss::atom::textconstruct#have_xml_content?()","Ruby rss::element#have_xml_content?()","Rails activerecord::querymethods#having()","Ruby net::http#head()","Rails actioncontroller::head#head()","Ruby net::http#head2()","Rails actiondispatch::request#head?()","Ruby cgi#header()","Ruby net::popmail#header()","Rails actiondispatch::routing::consoleformatter#header()","Rails actiondispatch::routing::htmltableformatter#header()","Ruby csv::row#header?()","Ruby csv#header_convert()","Ruby csv#header_converters()","Ruby csv#header_row?()","Ruby csv::row#header_row?()","Ruby csv#headers()","Ruby csv::row#headers()","Ruby csv::table#headers()","Rails actiondispatch::request#headers()","Rails actionmailer::base#headers()","Ruby uri::mailto#headers=()","Rails build#heading()","Ruby net::smtp#helo()","Ruby net::ftp#help()","Ruby object#help()","Ruby optionparser#help()","Rails rails::generators::help()","Ruby win32ole_method#helpcontext()","Ruby win32ole_type#helpcontext()","Rails abstractcontroller::helpers::classmethods#helper()","Rails rails::consolemethods#helper()","Rails actioncontroller::helpers::classmethods#helper_attr()","Rails abstractcontroller::helpers::classmethods#helper_method()","Rails actioncontroller::helpers::classmethods#helpers()","Rails rails::engine::helpers()","Rails rails::engine::helpers_paths()","Ruby win32ole_method#helpfile()","Ruby win32ole_type#helpfile()","Ruby win32ole_method#helpstring()","Ruby win32ole_type#helpstring()","Ruby drb::here?()","Ruby drb::drbserver#here?()","Ruby matrix#hermitian?()","Ruby securerandom::hex()","Ruby string#hex()","Ruby digest::class::hexdigest()","Ruby digest::instance#hexdigest()","Ruby openssl::hmac#hexdigest()","Ruby openssl::hmac::hexdigest()","Ruby digest::instance#hexdigest!()","Ruby digest::hexencode()","Ruby cgi::htmlextension#hidden()","Rails abstractcontroller::base::hidden_actions()","Rails actionview::helpers::formbuilder#hidden_field()","Rails actionview::helpers::formhelper#hidden_field()","Rails actionview::helpers::formtaghelper#hidden_field_tag()","Rails rails::generators::hidden_namespaces()","Rails rails::generators::base::hide!()","Rails actioncontroller::hideactions::classmethods#hide_action()","Rails rails::generators::hide_namespace()","Rails rails::generators::hide_namespaces()","Ruby uri::generic#hierarchical?()","Ruby uri::ldap#hierarchical?()","Rails actionview::helpers::texthelper#highlight()","Ruby irb::context#history_file()","Ruby irb::context#history_file=()","Ruby dir::home()","Ruby rdoc::ri::paths::home_dir()","Ruby irb::context#home_workspace()","Rails rails::generators::base::hook_for()","Ruby gem::host()","Ruby gem::gemcutterutilities#host()","Ruby webrick::httprequest#host()","Rails actiondispatch::http::url#host()","Ruby gem::host=()","Ruby uri::generic#host=()","Rails actiondispatch::http::url#host_with_port()","Ruby uri::generic#hostname()","Ruby uri::generic#hostname=()","Ruby time#hour()","Rails numeric#hour()","Ruby rss::itunesitemmodel::itunesduration#hour=()","Ruby rss::maker::itunesitemmodel::itunesdurationbase#hour=()","Ruby xmlrpc::datetime#hour=()","Rails numeric#hours()","Ruby rss::xmlstylesheet#href=()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#hstore()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#hstore_to_string()","Ruby cgi::htmlextension#html()","Ruby rdoc::markdown#html()","Rails mime::type#html?()","Ruby erb::util::html_escape()","Ruby rss::utils#html_escape()","Rails erb::util::html_escape()","Rails erb::util::html_escape_once()","Ruby rdoc::markup::tohtml#html_list_name()","Ruby rdoc::markup::tohtmlsnippet#html_list_name()","Ruby rdoc::alias#html_name()","Ruby rdoc::methodattr#html_name()","Rails string#html_safe()","Rails activesupport::safebuffer#html_safe?()","Rails numeric#html_safe?()","Rails object#html_safe?()","Ruby ipaddr#hton()","Rails actioncontroller::httpauthentication::basic::controllermethods::classmethods#http_basic_authenticate_with()","Ruby httpserver#http_date()","Ruby net::http::http_default_port()","Ruby cgi#http_header()","Ruby httpserver#http_header()","Ruby httpserver#http_resp()","Ruby rdoc::context#http_url()","Ruby rdoc::toplevel#http_url()","Ruby object#httpd()","Ruby date#httpdate()","Ruby date::httpdate()","Ruby datetime::httpdate()","Ruby time#httpdate()","Rails activesupport::timewithzone#httpdate()","Ruby gem::remotefetcher#https?()","Ruby net::http::https_default_port()","Rails activemodel::name#human()","Rails activesupport::inflector::inflections#human()","Rails activemodel::translation#human_attribute_name()","Rails rails::generators::namedbase#human_name()","Rails activesupport::inflector#humanize()","Rails string#humanize()","Ruby math::hypot()","Ruby numeric#i()","Rails activemodel::translation#i18n_scope()","Rails rails::generators::namedbase#i18n_scope()","Ruby rss::maker::channelbase#icon()","Ruby rss::maker::channelbase#icon=()","Ruby json::iconv()","Ruby openssl::engine#id()","Ruby openssl::ssl::session#id()","Ruby rexml::functions::id()","Rails activerecord::attributemethods::primarykey#id()","Ruby symbol#id2name()","Rails activerecord::attributemethods::primarykey#id=()","Rails activerecord::attributemethods::primarykey#id?()","Rails activerecord::attributemethods::primarykey#id_before_type_cast()","Ruby syslog::ident()","Ruby file::identical?()","Ruby filetest#identical?()","Ruby fileutils::identical?()","Rails activerecord::fixtureset::identify()","Ruby matrix::identity()","Rails activerecord::logsubscriber#identity()","Ruby net::imap#idle()","Ruby net::imap#idle_done()","Ruby curses::window#idlok()","Rails activerecord::calculations#ids()","Ruby rdoc::servlet#if_modified_since()","Rails actiondispatch::http::cache::request#if_modified_since()","Rails actiondispatch::http::cache::request#if_none_match()","Rails actiondispatch::http::cache::request#if_none_match_etags()","Ruby io#iflush()","Ruby rdoc::codeobject#ignore()","Ruby rdoc::markup::formatter#ignore()","Ruby rss::baseparser#ignore_unknown_element()","Ruby rss::baseparser#ignore_unknown_element=()","Ruby rexml::element#ignore_whitespace_nodes()","Ruby rdoc::codeobject#ignored?()","Ruby complex#imag()","Ruby matrix#imag()","Ruby numeric#imag()","Ruby rss::rss#image()","Rails actionview::helpers::assettaghelper#image_alt()","Ruby cgi::htmlextension#image_button()","Rails actionview::helpers::asseturlhelper#image_path()","Ruby rss::imagefaviconmodel::imagefavicon#image_size=()","Rails actionview::helpers::formtaghelper#image_submit_tag()","Rails actionview::helpers::assettaghelper#image_tag()","Rails actionview::helpers::asseturlhelper#image_url()","Ruby complex#imaginary()","Ruby matrix#imaginary()","Ruby numeric#imaginary()","Ruby cgi::htmlextension#img()","Ruby win32ole_type#implemented_ole_types()","Ruby gem::requestset#import()","Ruby dl::importer#import_function()","Ruby fiddle::importer#import_function()","Ruby dl::importer#import_symbol()","Ruby fiddle::importer#import_symbol()","Ruby dl::importer#import_value()","Ruby fiddle::importer#import_value()","Rails date#in()","Rails datetime#in()","Rails time#in()","Rails object#in?()","Ruby gem::dependencyinstaller#in_background()","Rails activesupport::multibyte::unicode#in_char_class?()","Rails activerecord::connectionadapters::databaselimits#in_clause_length()","Ruby rdoc::context::section#in_files()","Rails array#in_groups()","Rails array#in_groups_of()","Ruby rake::taskmanager#in_namespace()","Ruby rdoc::ri::driver#in_path?()","Ruby gserver::in_service?()","Rails activesupport::timewithzone#in_time_zone()","Rails date#in_time_zone()","Rails datetime#in_time_zone()","Rails string#in_time_zone()","Rails time#in_time_zone()","Ruby rdoc::markup::formatter#in_tt?()","Ruby shell::processcontroller#inactivate()","Ruby optionparser::inc()","Ruby optionparser#inc()","Ruby curses::inch()","Ruby curses::window#inch()","Ruby rake::filelist#include()","Ruby array#include?()","Ruby cgi::queryextension#include?()","Ruby csv::row#include?()","Ruby dbm#include?()","Ruby env::include?()","Ruby enumerable#include?()","Ruby gdbm#include?()","Ruby gem::sourcelist#include?()","Ruby hash#include?()","Ruby ipaddr#include?()","Ruby module#include?()","Ruby rexml::attlistdecl#include?()","Ruby range#include?()","Ruby sdbm#include?()","Ruby set#include?()","Ruby string#include?()","Rails actiondispatch::http::headers#include?()","Rails activemodel::errors#include?()","Rails activerecord::associations::collectionproxy#include?()","Rails i18n::railtie::include_fallbacks_module()","Ruby rdoc::markup::preprocess#include_file()","Rails range#include_with_range?()","Ruby rss::maker::atomtextconstructbase::ensurexmlcontent#included()","Ruby syslog::constants::included()","Ruby syslog::macros::included()","Rails activesupport::concern#included()","Ruby module#included_modules()","Rails activerecord::querymethods#includes()","Ruby optionparser::switch::incompatible_argument_styles()","Ruby optionparser::switch::noargument::incompatible_argument_styles()","Ruby encoding::invalidbytesequenceerror#incomplete_input?()","Rails activerecord::persistence#increment()","Rails activesupport::cache::filestore#increment()","Rails activesupport::cache::memorystore#increment()","Rails activesupport::cache::nullstore#increment()","Rails activesupport::cache::store#increment()","Rails activerecord::persistence#increment!()","Rails activerecord::countercache::classmethods#increment_counter()","Rails activerecord::connectionadapters::abstractadapter#increment_open_transactions()","Ruby rexml::node#indent()","Rails rails::generators::namedbase#indent()","Rails string#indent()","Rails string#indent!()","Ruby rexml::text#indent_text()","Ruby array#index()","Ruby csv::row#index()","Ruby env::index()","Ruby matrix#index()","Ruby rexml::parent#index()","Ruby string#index()","Ruby yaml::dbm#index()","Rails actioncontroller::middleware#index()","Rails activerecord::connectionadapters::table#index()","Rails activerecord::connectionadapters::tabledefinition#index()","Rails activerecord::connectionadapters::abstractadapter#index_algorithms()","Rails activerecord::connectionadapters::abstractmysqladapter#index_algorithms()","Rails activerecord::connectionadapters::postgresqladapter#index_algorithms()","Rails enumerable#index_by()","Ruby rdoc::generator::jsonindex#index_classes()","Rails activerecord::connectionadapters::schemastatements#index_exists?()","Rails activerecord::connectionadapters::table#index_exists?()","Rails rails::generators::namedbase#index_helper()","Ruby rexml::node#index_in_parent()","Ruby rdoc::generator::jsonindex#index_methods()","Rails activerecord::schemamigration::index_name()","Rails activerecord::connectionadapters::schemastatements#index_name_exists?()","Rails activerecord::connectionadapters::schemastatements#index_name_for_remove()","Rails activerecord::connectionadapters::databaselimits#index_name_length()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#index_name_length()","Ruby rdoc::generator::jsonindex#index_pages()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#indexes()","Rails activerecord::connectionadapters::databaselimits#indexes_per_table()","Ruby sys#indir()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#inet()","Ruby bigdecimal#infinite?()","Ruby float#infinite?()","Rails activerecord::connectionadapters::postgresqladapter::oid::range#infinity()","Ruby openssl::pkey::ec::point#infinity?()","Rails activerecord::connectionadapters::postgresqladapter::oid::range#infinity?()","Ruby gem::inflate()","Ruby zlib::inflate()","Ruby zlib::inflate::inflate()","Ruby zlib::inflate#inflate()","Rails activesupport::inflector#inflections()","Ruby logger#info()","Ruby syslog::logger#info()","Ruby webrick::basiclog#info()","Ruby win32::registry#info()","Ruby logger#info?()","Ruby webrick::basiclog#info?()","Ruby webrick::httpstatus::info?()","Rails activesupport::inheritableoptions#inheritable_copy()","Rails activerecord::modelschema::classmethods#inheritance_column()","Rails activerecord::modelschema::classmethods#inheritance_column=()","Ruby rss::element#inherited()","Ruby rss::maker::base#inherited()","Rails abstractcontroller::helpers::classmethods#inherited()","Rails actioncontroller::paramswrapper::classmethods#inherited()","Rails actioncontroller::railties::helpers#inherited()","Rails activesupport::bufferedlogger::inherited()","Rails activesupport::descendantstracker#inherited()","Rails rails::application::inherited()","Rails rails::engine::inherited()","Rails rails::railtie::inherited()","Rails rails::railtie::configurable::classmethods#inherited()","Ruby rss::utils::inheritedreader#inherited_array_reader()","Ruby rss::element#inherited_base()","Ruby rss::maker::base#inherited_base()","Ruby rss::utils::inheritedreader#inherited_hash_reader()","Ruby rss::utils::inheritedreader#inherited_reader()","Ruby gem::packagetask#init()","Ruby irb::inspector#init()","Ruby rake::application#init()","Ruby rake::application#init()","Ruby rake::packagetask#init()","Ruby curses::init_color()","Rails i18n::railtie::init_fallbacks()","Ruby curses::init_pair()","Ruby curses::init_screen()","Ruby rdoc::markup::toansi#init_tags()","Ruby rdoc::markup::tobs#init_tags()","Ruby rdoc::markup::tohtml#init_tags()","Ruby rdoc::markup::tomarkdown#init_tags()","Ruby rdoc::markup::tordoc#init_tags()","Rails activerecord::core#init_with()","Ruby process::initgroups()","Ruby gem::package#initialize()","Ruby rdoc::generator::ri#initialize()","Ruby rdoc::rd::inline#initialize()","Ruby shell::commandprocessor::initialize()","Rails rails::engine::initialize()","Rails rails::initialize!()","Ruby array#initialize_copy()","Ruby gem::sourcelist#initialize_copy()","Ruby gem::specification#initialize_copy()","Ruby hash#initialize_copy()","Ruby openstruct#initialize_copy()","Ruby rake::cloneable#initialize_copy()","Ruby set#initialize_copy()","Ruby string#initialize_copy()","Ruby zlib::deflate#initialize_copy()","Rails actiondispatch::flash::flashhash#initialize_copy()","Rails actiondispatch::middlewarestack#initialize_copy()","Rails activerecord::relation#initialize_copy()","Rails activerecord::result#initialize_copy()","Rails activesupport::safebuffer#initialize_copy()","Rails activerecord::core::classmethods#initialize_generated_modules()","Ruby net::httpheader#initialize_http_header()","Rails i18n::railtie::initialize_i18n()","Ruby rdoc::context#initialize_methods_etc()","Rails activerecord::connectionadapters::mysql2adapter#initialize_schema_migrations_table()","Rails activerecord::connectionadapters::schemastatements#initialize_schema_migrations_table()","Rails actiondispatch::session::compatibility#initialize_sid()","Ruby irb::initialize_tracer()","Rails rails::initialized?()","Rails rails::application#initialized?()","Rails rails::generators::actions#initializer()","Rails rails::initializable::classmethods#initializer()","Rails rails::initializable#initializers()","Rails rails::initializable::classmethods#initializers()","Rails rails::initializable::classmethods#initializers_chain()","Rails rails::initializable::classmethods#initializers_for()","Ruby enumerable#inject()","Ruby gem::availableset#inject_into_list()","Ruby rdoc::rd::inlineparser#inline()","Ruby rss::atom::feed::entry::content#inline_html?()","Ruby rss::maker::itemsbase::itembase::contentbase#inline_html?()","Ruby rss::atom::feed::entry::content#inline_other?()","Ruby rss::maker::itemsbase::itembase::contentbase#inline_other?()","Ruby rss::atom::feed::entry::content#inline_other_base64?()","Ruby rss::maker::itemsbase::itembase::contentbase#inline_other_base64?()","Ruby rss::atom::feed::entry::content#inline_other_text?()","Ruby rss::maker::itemsbase::itembase::contentbase#inline_other_text?()","Ruby rss::atom::feed::entry::content#inline_other_xml?()","Ruby rss::maker::itemsbase::itembase::contentbase#inline_other_xml?()","Ruby rss::atom::feed::entry::content#inline_text?()","Ruby rss::maker::itemsbase::itembase::contentbase#inline_text?()","Ruby rss::atom::feed::entry::content#inline_xhtml?()","Ruby rss::maker::itemsbase::itembase::contentbase#inline_xhtml?()","Ruby vector#inner_product()","Ruby file::stat#ino()","Ruby argf#inplace_mode()","Ruby argf#inplace_mode=()","Ruby gem::mockgemui#input()","Ruby readline::input=()","Ruby shell::appendfile#input=()","Ruby shell::appendio#input=()","Ruby shell::filter#input=()","Ruby shell::systemcommand#input=()","Ruby win32ole_param#input?()","Rails string#inquiry()","Ruby curses::insch()","Ruby curses::window#insch()","Ruby array#insert()","Ruby irb::jobmanager#insert()","Ruby string#insert()","Rails actiondispatch::middlewarestack#insert()","Rails activerecord::connectionadapters::databasestatements#insert()","Rails activerecord::relation#insert()","Rails rails::configuration::middlewarestackproxy#insert()","Ruby rexml::parent#insert_after()","Rails actiondispatch::middlewarestack#insert_after()","Rails rails::configuration::middlewarestackproxy#insert_after()","Ruby rexml::parent#insert_before()","Rails actiondispatch::middlewarestack#insert_before()","Rails rails::configuration::middlewarestackproxy#insert_before()","Rails activerecord::connectionadapters::databasestatements#insert_fixture()","Ruby encoding::converter#insert_output()","Rails activerecord::connectionadapters::databasestatements#insert_sql()","Rails activerecord::connectionadapters::mysql2adapter#insert_sql()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#insert_sql()","Ruby readline::insert_text()","Ruby curses::insertln()","Ruby curses::window#insertln()","Rails rails::generators::namedbase#inside_template()","Rails rails::generators::namedbase#inside_template?()","Ruby argf#inspect()","Ruby addrinfo#inspect()","Ruby array#inspect()","Ruby bigdecimal#inspect()","Ruby bignum#inspect()","Ruby csv#inspect()","Ruby csv::row#inspect()","Ruby csv::table#inspect()","Ruby complex#inspect()","Ruby dl::cfunc#inspect()","Ruby dl::cptr#inspect()","Ruby date#inspect()","Ruby digest::hmac#inspect()","Ruby digest::instance#inspect()","Ruby dir#inspect()","Ruby env::inspect()","Ruby encoding#inspect()","Ruby encoding::converter#inspect()","Ruby enumerator#inspect()","Ruby exception#inspect()","Ruby falseclass#inspect()","Ruby fiddle::pointer#inspect()","Ruby file::stat#inspect()","Ruby fixnum#inspect()","Ruby float#inspect()","Ruby gem::platform#inspect()","Ruby gem::specification#inspect()","Ruby hash#inspect()","Ruby io#inspect()","Ruby ipaddr#inspect()","Ruby irb::irb#inspect()","Ruby irb::jobmanager#inspect()","Ruby matchdata#inspect()","Ruby matrix#inspect()","Ruby method#inspect()","Ruby module#inspect()","Ruby net::http#inspect()","Ruby net::httpgenericrequest#inspect()","Ruby net::httpresponse#inspect()","Ruby net::internetmessageio::writeadapter#inspect()","Ruby net::pop3#inspect()","Ruby net::popmail#inspect()","Ruby net::smtp#inspect()","Ruby nilclass#inspect()","Ruby object#inspect()","Ruby openssl::config#inspect()","Ruby openssl::engine#inspect()","Ruby openssl::hmac#inspect()","Ruby openssl::x509::certificate#inspect()","Ruby openstruct#inspect()","Ruby optionparser::parseerror#inspect()","Ruby proc#inspect()","Ruby process::status#inspect()","Ruby rexml::attribute#inspect()","Ruby rexml::element#inspect()","Ruby rexml::instruction#inspect()","Ruby rexml::parsers::pullevent#inspect()","Ruby rexml::text#inspect()","Ruby rexml::validation::choice#inspect()","Ruby rexml::validation::event#inspect()","Ruby rexml::validation::interleave#inspect()","Ruby rexml::validation::ref#inspect()","Ruby rexml::validation::state#inspect()","Ruby rexml::xmldecl#inspect()","Ruby rake::task#inspect()","Ruby rake::taskarguments#inspect()","Ruby range#inspect()","Ruby rational#inspect()","Ruby regexp#inspect()","Ruby rubyvm::instructionsequence#inspect()","Ruby set#inspect()","Ruby shell#inspect()","Ruby shell::filter#inspect()","Ruby socket::ancillarydata#inspect()","Ruby socket::option#inspect()","Ruby string#inspect()","Ruby stringscanner#inspect()","Ruby struct#inspect()","Ruby symbol#inspect()","Ruby syslog::inspect()","Ruby tempfile#inspect()","Ruby thread#inspect()","Ruby thread::backtrace::location#inspect()","Ruby time#inspect()","Ruby tracepoint#inspect()","Ruby trueclass#inspect()","Ruby uri::generic#inspect()","Ruby uri::parser#inspect()","Ruby unboundmethod#inspect()","Ruby vector#inspect()","Ruby win32ole_method#inspect()","Ruby win32ole_param#inspect()","Ruby win32ole_type#inspect()","Ruby win32ole_typelib#inspect()","Ruby win32ole_variable#inspect()","Ruby win32::registry#inspect()","Ruby zlib::gzipfile::error#inspect()","Rails actiondispatch::middlewarestack::middleware#inspect()","Rails actiondispatch::routing::pathredirect#inspect()","Rails actionview::template#inspect()","Rails activerecord::core#inspect()","Rails activerecord::core::classmethods#inspect()","Rails activerecord::relation#inspect()","Rails activesupport::timewithzone#inspect()","Rails date#inspect()","Rails datetime#inspect()","Rails rails::info::inspect()","Ruby irb::context#inspect?()","Ruby irb::context#inspect_mode=()","Ruby addrinfo#inspect_sockaddr()","Ruby irb::inspector#inspect_value()","Ruby fileutils::install()","Ruby gem::install()","Ruby gem::dependencyinstaller#install()","Ruby gem::installer#install()","Ruby gem::requestset#install()","Ruby object#install()","Ruby sys#install()","Ruby drb::install_acl()","Ruby irb::extendcommandbundle#install_alias_method()","Ruby rss::baselistener#install_class_name()","Ruby rss::basemodel#install_date_element()","Ruby rss::maker::dublincoremodel::install_dublin_core()","Ruby gem::commands::setupcommand#install_executables()","Ruby irb::contextextender::install_extend_commands()","Ruby irb::extendcommandbundle::install_extend_commands()","Ruby gem::commands::setupcommand#install_file()","Ruby gem::commands::installcommand#install_from_gemdeps()","Ruby rss::element#install_get_attribute()","Ruby rss::baselistener#install_get_text_element()","Ruby rss::basemodel#install_have_attribute_element()","Ruby rss::basemodel#install_have_child_element()","Ruby rss::basemodel#install_have_children_element()","Ruby drb::install_id_conv()","Ruby rss::maker::imagefaviconmodel::install_image_favicon()","Ruby rss::maker::imageitemmodel::install_image_item()","Ruby gem::indexer#install_indicies()","Ruby gem::requestset#install_into()","Ruby gem::commands::setupcommand#install_lib()","Ruby acl#install_list()","Ruby rss::element#install_model()","Ruby rss::element#install_must_call_validator()","Ruby rss::element#install_ns()","Ruby gem::commands::setupcommand#install_rdoc()","Ruby rdoc::rdoc#install_siginfo_handler()","Ruby shell::install_system_commands()","Ruby rss::maker::taxonomytopicmodel::install_taxo_topic()","Ruby rss::maker::taxonomytopicsmodel::install_taxo_topics()","Ruby rss::basemodel#install_text_element()","Ruby gem::installupdateoptions#install_update_defaults_str()","Ruby gem::installer#installation_satisfies_dependency?()","Ruby gem::dependencyresolver::activationrequest#installed?()","Ruby rdoc::servlet#installed_docs()","Ruby gem::installer#installed_specs()","Ruby csv::instance()","Ruby gem::commandmanager#instance()","Ruby gem::commandmanager::instance()","Ruby prime#instance()","Ruby syslog::instance()","Rails activesupport::inflector::inflections::instance()","Rails rails::railtie::configurable::classmethods#instance()","Ruby rdoc::context#instance_attributes()","Ruby forwardable#instance_delegate()","Ruby basicobject#instance_eval()","Ruby basicobject#instance_exec()","Ruby module#instance_method()","Rails activerecord::attributemethods::classmethods#instance_method_already_implemented?()","Ruby rdoc::context#instance_method_list()","Ruby module#instance_methods()","Ruby rdoc::store#instance_methods()","Ruby object#instance_of?()","Rails object#instance_values()","Ruby object#instance_variable_defined?()","Ruby object#instance_variable_get()","Rails object#instance_variable_names()","Ruby object#instance_variable_set()","Ruby object#instance_variables()","Rails activerecord::persistence::classmethods#instantiate()","Rails activerecord::fixtureset::instantiate_all_loaded_fixtures()","Rails activerecord::fixtureset::instantiate_fixtures()","Ruby rexml::streamlistener#instruction()","Ruby rss::listenermixin#instruction()","Ruby rexml::parsers::pullevent#instruction?()","Ruby rexml::element#instructions()","Rails activesupport::cache::store::instrument()","Rails activesupport::notifications::instrument()","Rails activesupport::notifications::instrumenter#instrument()","Rails activesupport::cache::store::instrument=()","Rails activesupport::notifications::instrumenter()","Ruby socket::ancillarydata::int()","Ruby socket::ancillarydata#int()","Ruby socket::option#int()","Ruby socket::option::int()","Ruby xmlrpc::convert::int()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#int4range()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#int8range()","Ruby prime#int_from_prime_division()","Ruby integer#integer?()","Ruby integer#integer?()","Ruby numeric#integer?()","Ruby rdoc::ri::driver#interactive()","Ruby rake::taskmanager#intern()","Ruby string#intern()","Ruby symbol#intern()","Rails actiondispatch::routing::routewrapper#internal?()","Ruby argf#internal_encoding()","Ruby io#internal_encoding()","Ruby stringio#internal_encoding()","Rails abstractcontroller::base::internal_methods()","Ruby debugger__#interrupt()","Ruby webrick::utils::timeouthandler#interrupt()","Ruby set#intersection()","Ruby matrix#inv()","Rails activemodel::validations#invalid?()","Ruby matrix#inverse()","Rails activerecord::migration::commandrecorder#inverse_of()","Ruby dbm#invert()","Ruby env::invert()","Ruby gdbm#invert()","Ruby hash#invert()","Ruby sdbm#invert()","Ruby yaml::dbm#invert()","Ruby openssl::pkey::ec::point#invert!()","Ruby rake::task#investigation()","Ruby win32ole_method#invkind()","Ruby gem::command#invoke()","Ruby rake::task#invoke()","Ruby win32ole#invoke()","Rails rails::generators::invoke()","Ruby win32ole_method#invoke_kind()","Ruby rake::application#invoke_task()","Ruby rake::application#invoke_task()","Ruby gem::command#invoke_with_build_args()","Ruby io#ioctl()","Ruby io#ioflush()","Ruby addrinfo::ip()","Rails actiondispatch::request#ip()","Ruby ipaddr#ip6_arpa()","Ruby ipaddr#ip6_int()","Ruby addrinfo#ip?()","Ruby addrinfo#ip_address()","Ruby socket::ip_address_list()","Ruby socket::ancillarydata::ip_pktinfo()","Ruby socket::ancillarydata#ip_pktinfo()","Ruby addrinfo#ip_port()","Ruby addrinfo#ip_unpack()","Rails actiondispatch::remoteip::getip#ips_from()","Ruby addrinfo#ipv4?()","Ruby ipaddr#ipv4?()","Ruby ipaddr#ipv4_compat()","Ruby ipaddr#ipv4_compat?()","Ruby addrinfo#ipv4_loopback?()","Ruby ipaddr#ipv4_mapped()","Ruby ipaddr#ipv4_mapped?()","Ruby addrinfo#ipv4_multicast?()","Ruby addrinfo#ipv4_private?()","Ruby addrinfo#ipv6?()","Ruby ipaddr#ipv6?()","Ruby addrinfo#ipv6_linklocal?()","Ruby addrinfo#ipv6_loopback?()","Ruby addrinfo#ipv6_mc_global?()","Ruby addrinfo#ipv6_mc_linklocal?()","Ruby addrinfo#ipv6_mc_nodelocal?()","Ruby addrinfo#ipv6_mc_orglocal?()","Ruby addrinfo#ipv6_mc_sitelocal?()","Ruby addrinfo#ipv6_multicast?()","Ruby socket::ancillarydata#ipv6_pktinfo()","Ruby socket::ancillarydata::ipv6_pktinfo()","Ruby socket::ancillarydata#ipv6_pktinfo_addr()","Ruby socket::ancillarydata#ipv6_pktinfo_ifindex()","Ruby addrinfo#ipv6_sitelocal?()","Ruby addrinfo#ipv6_to_ipv4()","Ruby addrinfo#ipv6_unique_local?()","Ruby addrinfo#ipv6_unspecified?()","Ruby addrinfo#ipv6_v4compat?()","Ruby addrinfo#ipv6_v4mapped?()","Ruby irb::irb()","Ruby irb::jobmanager#irb()","Ruby irb::irb_abort()","Ruby irb::irb_at_exit()","Ruby irb::extendcommandbundle#irb_context()","Ruby irb::irb_exit()","Ruby irb::extendcommandbundle#irb_exit()","Ruby irb::context#irb_level()","Ruby irb::extendcommandbundle#irb_load()","Ruby irb::irbloader#irb_load()","Ruby irb::extendcommandbundle#irb_require()","Rails activesupport::inflector::inflections#irregular()","Ruby jacobian#isequal()","Ruby object#is_a?()","Ruby rake::filelist#is_a?()","Rails activesupport::timewithzone#is_a?()","Ruby rdoc::constant#is_alias_for()","Rails loaderror#is_missing?()","Rails loaderror#is_missing?()","Rails string#is_utf8?()","Ruby net::http::is_version_1_2?()","Ruby io#isatty()","Ruby stringio#isatty()","Ruby time#isdst()","Rails activesupport::timewithzone#isdst()","Ruby kconv::iseuc()","Ruby string#iseuc()","Ruby kconv::isjis()","Ruby string#isjis()","Ruby date#iso8601()","Ruby date::iso8601()","Ruby datetime::iso8601()","Ruby datetime#iso8601()","Ruby time#iso8601()","Rails activesupport::timewithzone#iso8601()","Rails rails::engine::isolate_namespace()","Rails build#isolated?()","Ruby process::sys::issetugid()","Ruby kconv::issjis()","Ruby string#issjis()","Ruby openssl::pkcs7::recipientinfo#issuer()","Ruby openssl::pkcs7::signerinfo#issuer()","Ruby openssl::x509::crl#issuer()","Ruby openssl::x509::certificate#issuer()","Ruby openssl::x509::crl#issuer=()","Ruby openssl::x509::certificate#issuer=()","Ruby openssl::x509::extensionfactory#issuer_certificate=()","Ruby gem::security::trustdir#issuer_of()","Ruby kconv::isutf8()","Ruby string#isutf8()","Ruby date#italy()","Ruby rss::atom::entry#items()","Ruby rss::rss#items()","Ruby kernel#iterator?()","Ruby openssl::cipher#iv=()","Rails actionview::helpers::javascripthelper#j()","Ruby jacobian#jacobian()","Rails actionview::helpers::assettaghelper#javascript_include_tag()","Rails actionview::helpers::asseturlhelper#javascript_path()","Rails actionview::helpers::javascripthelper#javascript_tag()","Rails actionview::helpers::asseturlhelper#javascript_url()","Rails rails::pluginbuilder#javascripts()","Ruby date#jd()","Ruby date::jd()","Ruby datetime::jd()","Ruby date#jisx0301()","Ruby date::jisx0301()","Ruby datetime::jisx0301()","Ruby datetime#jisx0301()","Ruby shell#jobs()","Ruby shell::processcontroller#jobs()","Ruby shell::processcontroller#jobs_exist?()","Ruby array#join()","Ruby file::join()","Ruby gserver#join()","Ruby pathname#join()","Ruby shellwords::join()","Ruby thread#join()","Ruby threadswait#join()","Ruby threadswait#join()","Ruby uri::join()","Ruby uri::parser#join()","Ruby threadswait#join_nowait()","Ruby threadswait#join_nowait()","Rails activerecord::relation#joined_includes_values()","Rails activerecord::querymethods#joins()","Rails activerecord::connectionadapters::databaselimits#joins_per_query()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#json()","Ruby json::genericobject#json_creatable?()","Ruby bigdecimal::json_create()","Ruby complex::json_create()","Ruby date::json_create()","Ruby datetime::json_create()","Ruby exception::json_create()","Ruby json::genericobject#json_create()","Ruby openstruct::json_create()","Ruby range::json_create()","Ruby rational::json_create()","Ruby regexp::json_create()","Ruby struct::json_create()","Ruby symbol::json_create()","Ruby time::json_create()","Rails erb::util::json_escape()","Rails actiondispatch::routing::routewrapper#json_regexp()","Rails actioncontroller::responder#json_resource_errors()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#json_to_string()","Ruby date#julian()","Ruby date#julian?()","Ruby date::julian_leap?()","Ruby kconv::kconv()","Ruby string#kconv()","Rails actiondispatch::flash::flashhash#keep()","Ruby webrick::httprequest#keep_alive?()","Ruby webrick::httpresponse#keep_alive?()","Ruby array#keep_if()","Ruby env::keep_if()","Ruby hash#keep_if()","Ruby set#keep_if()","Ruby dbm#key()","Ruby env::key()","Ruby gdbm#key()","Ruby hash#key()","Ruby sdbm#key()","Ruby yaml::dbm#key()","Rails build#key()","Ruby openssl::cipher#key=()","Ruby cgi::queryextension#key?()","Ruby csv::row#key?()","Ruby dbm#key?()","Ruby env::key?()","Ruby gdbm#key?()","Ruby hash#key?()","Ruby net::httpheader#key?()","Ruby sdbm#key?()","Ruby thread#key?()","Rails actiondispatch::flash::flashhash#key?()","Rails actiondispatch::http::headers#key?()","Rails actiondispatch::request#key?()","Rails activerecord::connectionadapters::mysqladapter::statementpool#key?()","Rails activerecord::connectionadapters::postgresqladapter::oid::typemap#key?()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#key?()","Rails activerecord::connectionadapters::sqlite3adapter::statementpool#key?()","Rails activerecord::connectionadapters::statementpool#key?()","Rails activesupport::dependencies::classcache#key?()","Rails activesupport::hashwithindifferentaccess#key?()","Rails activesupport::hashwithindifferentaccess#key?()","Rails rails::application#key_generator()","Ruby openssl::cipher#key_len=()","Rails activesupport::cache::store#key_matcher()","Ruby curses::keyname()","Ruby curses::window#keypad()","Ruby curses::window#keypad=()","Ruby cgi::queryextension#keys()","Ruby dbm#keys()","Ruby env::keys()","Ruby gdbm#keys()","Ruby hash#keys()","Ruby sdbm#keys()","Ruby thread#keys()","Ruby win32::registry#keys()","Rails actiondispatch::flash::flashhash#keys()","Rails activemodel::errors#keys()","Rails rails::paths::root#keys()","Ruby irb::inspector::keys_with_inspector()","Ruby irb::jobmanager#kill()","Ruby process::kill()","Ruby shell#kill()","Ruby shell::systemcommand#kill()","Ruby thread::kill()","Ruby thread#kill()","Ruby shell::processcontroller#kill_job()","Rails numeric#kilobyte()","Rails numeric#kilobytes()","Rails activemodel::validator#kind()","Rails activemodel::validator::kind()","Ruby object#kind_of?()","Ruby rake::filelist#kind_of?()","Rails activesupport::timewithzone#kind_of?()","Rails actiondispatch::middlewarestack::middleware#klass()","Rails activerecord::reflection::macroreflection#klass()","Ruby matrix::lupdecomposition#l()","Rails abstractcontroller::translation#l()","Rails actionview::helpers::translationhelper#l()","Ruby rubyvm::instructionsequence#label()","Ruby thread::backtrace::location#label()","Rails actionview::helpers::formbuilder#label()","Rails actionview::helpers::formhelper#label()","Rails actionview::helpers::formtaghelper#label_tag()","Ruby kernel#lambda()","Ruby proc#lambda?()","Ruby rexml::functions::lang()","Ruby array#last()","Ruby rdoc::markup::list#last()","Ruby rexml::functions::last()","Ruby range#last()","Rails actiondispatch::middlewarestack#last()","Rails activerecord::associations::collectionproxy#last()","Rails activerecord::findermethods#last()","Rails activerecord::result#last()","Rails rails::paths::path#last()","Rails string#last()","Rails activerecord::findermethods#last!()","Ruby rss::maker::channelbase#lastbuilddate=()","Ruby dl::cfunc::last_error()","Ruby encoding::converter#last_error()","Ruby fiddle::last_error()","Ruby fiddle::last_error=()","Rails activerecord::connectionadapters::databasestatements#last_inserted_id()","Rails activerecord::connectionadapters::mysql2adapter#last_inserted_id()","Rails activerecord::connectionadapters::mysqladapter#last_inserted_id()","Rails activerecord::connectionadapters::sqlite3adapter#last_inserted_id()","Ruby regexp::last_match()","Ruby openuri::meta#last_modified()","Ruby rdoc::toplevel#last_modified()","Rails actiondispatch::http::cache::response#last_modified()","Rails actiondispatch::http::cache::response#last_modified=()","Rails actiondispatch::http::cache::response#last_modified?()","Rails dateandtime::calculations#last_month()","Rails dateandtime::calculations#last_quarter()","Ruby openssl::x509::crl#last_update()","Ruby openssl::x509::crl#last_update=()","Rails dateandtime::calculations#last_week()","Rails dateandtime::calculations#last_year()","Ruby gem::latest_rubygems_version()","Ruby gem::latest_spec_for()","Ruby gem::server#latest_specs()","Ruby gem::specification::latest_specs()","Ruby gem::dependency#latest_version?()","Ruby gem::latest_version_for()","Ruby gem::server#launch()","Rails abstractcontroller::layouts::classmethods#layout()","Ruby enumerable#lazy()","Ruby enumerator::lazy#lazy()","Ruby file::lchmod()","Ruby pathname#lchmod()","Ruby file::lchown()","Ruby pathname#lchown()","Ruby integer#lcm()","Ruby integer#lcm()","Ruby date#ld()","Ruby math::ldexp()","Ruby date::leap?()","Ruby date#leap?()","Rails activerecord::connectionadapters::abstractadapter#lease()","Ruby array#length()","Ruby dbm#length()","Ruby digest::instance#length()","Ruby env::length()","Ruby gdbm#length()","Ruby hash#length()","Ruby matchdata#length()","Ruby queue#length()","Ruby rdoc::markup::listitem#length()","Ruby rexml::parent#length()","Ruby rexml::syncenumerator#length()","Ruby sdbm#length()","Ruby set#length()","Ruby string#length()","Ruby stringio#length()","Ruby struct#length()","Ruby symbol#length()","Ruby tempfile#length()","Rails activerecord::associations::collectionproxy#length()","Rails activerecord::connectionadapters::mysqladapter::statementpool#length()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#length()","Rails activerecord::connectionadapters::sqlite3adapter::statementpool#length()","Rails activerecord::connectionadapters::statementpool#length()","Ruby socket::ancillarydata#level()","Ruby socket::option#level()","Ruby zlib::gzipfile#level()","Ruby irb::notifier::compositenotifier#level=()","Ruby logger::application#level=()","Ruby irb::notifier::compositenotifier#level_notifier=()","Ruby gem::text#levenshtein_distance()","Ruby ripper::lex()","Ruby math::lgamma()","Rails rails::appbuilder#lib()","Rails rails::generators::actions#lib()","Rails rails::pluginbuilder#lib()","Ruby gem::specification#lib_dirs_glob()","Ruby gem::specification#lib_files()","Ruby win32ole_typelib#library_name()","Ruby psych::libyaml_version()","Ruby gem::specification#license()","Rails rails::pluginbuilder#license()","Ruby gem::specification#license=()","Ruby gem::specification#licenses()","Ruby gem::specification#licenses=()","Ruby bigdecimal::limit()","Rails activerecord::querymethods#limit()","Rails activesupport::multibyte::chars#limit()","Rails activerecord::connectionadapters::abstractmysqladapter#limited_update_conditions()","Rails activerecord::connectionadapters::databasestatements#limited_update_conditions()","Ruby irb::readlineinputmethod#line()","Ruby irb::stdioinputmethod#line()","Ruby rexml::parseexception#line()","Ruby readline::line_buffer()","Ruby rdoc::rd::blockparser#line_index()","Ruby rubyvm::instructionsequence#line_trace_all()","Ruby rubyvm::instructionsequence#line_trace_specify()","Ruby argf#lineno()","Ruby io#lineno()","Ruby ripper::filter#lineno()","Ruby stringio#lineno()","Ruby thread::backtrace::location#lineno()","Ruby tracepoint#lineno()","Ruby zlib::gzipreader#lineno()","Ruby argf#lineno=()","Ruby io#lineno=()","Ruby stringio#lineno=()","Ruby zlib::gzipreader#lineno=()","Ruby argf#lines()","Ruby curses::lines()","Ruby io#lines()","Ruby string#lines()","Ruby stringio#lines()","Ruby zlib::gzipreader#lines()","Ruby socket::option::linger()","Ruby socket::option#linger()","Ruby file::link()","Ruby fileutils::link()","Ruby rdoc::markup::tohtmlcrossref#link()","Ruby rss::maker::imagebase#link()","Ruby sys#link()","Ruby sys#link_files()","Ruby rdoc::markdown#link_to()","Rails actionview::helpers::urlhelper#link_to()","Rails actionview::helpers::javascripthelper#link_to_function()","Rails actionview::helpers::urlhelper#link_to_if()","Rails actionview::helpers::urlhelper#link_to_unless()","Rails actionview::helpers::urlhelper#link_to_unless_current()","Ruby encoding::list()","Ruby net::ftp#list()","Ruby net::imap#list()","Ruby signal::list()","Ruby thread::list()","Ruby threadgroup#list()","Ruby webrick::httputils::formdata#list()","Ruby rdoc::markup::tohtml#list_end_for()","Ruby rdoc::rdoc#list_files_in_directory()","Ruby rdoc::markdown#list_item_from()","Ruby rdoc::markup::tohtml#list_item_start()","Ruby rdoc::markup::tohtmlsnippet#list_item_start()","Ruby rdoc::ri::driver#list_known_classes()","Ruby rdoc::ri::driver#list_methods_matching()","Ruby addrinfo#listen()","Ruby gem::server#listen()","Ruby rexml::parsers::sax2parser#listen()","Ruby socket#listen()","Ruby tcpserver#listen()","Ruby unixserver#listen()","Ruby webrick::genericserver#listen()","Ruby rss::rexmlparser#listener()","Ruby rss::xmlparserparser#listener()","Ruby rss::xmlscanparser#listener()","Ruby rss::rexmllikexmlparser#listener=()","Rails activesupport::notifications::fanout#listeners_for()","Rails activesupport::notifications::fanout#listening?()","Ruby ","Ruby string#ljust()","Ruby fileutils::ln()","Ruby object#ln()","Ruby openssl::asn1::objectid#ln()","Ruby fileutils::ln_s()","Ruby fileutils::ln_sf()","Ruby gem::requestset::gemdepedencyapi#load()","Ruby gem::specification::load()","Ruby irb::locale#load()","Ruby json#load()","Ruby kernel#load()","Ruby marshal::load()","Ruby openssl::engine::load()","Ruby optionparser#load()","Ruby psych::load()","Ruby rake::defaultloader#load()","Ruby rake::makefileloader#load()","Rails activerecord::relation#load()","Rails activesupport::multibyte::unicode::unicodedatabase#load()","Ruby rdoc::store#load_all()","Rails rails::api::repotask#load_and_configure_sdoc()","Rails rails::api::task#load_and_configure_sdoc()","Ruby gem::configfile#load_api_keys()","Ruby rdoc::store#load_cache()","Ruby xmlrpc::marshal#load_call()","Ruby gem::security::trustdir#load_certificate()","Ruby rdoc::store#load_class()","Ruby rdoc::store#load_class_data()","Rails rails::engine::load_console()","Ruby gem::commands::certcommand#load_default_cert()","Ruby gem::commands::certcommand#load_default_key()","Ruby gem::specification::load_defaults()","Ruby psych::load_documents()","Ruby gem::load_env_plugins()","Ruby gem::configfile#load_file()","Ruby irb::irbloader#load_file()","Ruby psych::load_file()","Ruby gem::requestset#load_gemdeps()","Rails rails::engine::load_generators()","Ruby rake::application#load_imports()","Ruby rake::application#load_imports()","Ruby rdoc::ri::driver#load_method()","Ruby rdoc::store#load_method()","Ruby rdoc::ri::driver#load_methods_matching()","Ruby webrick::httputils::load_mime_types()","Ruby rdoc::rdoc#load_options()","Ruby rdoc::store#load_page()","Ruby gem::load_path_insert_index()","Rails rails::paths::root#load_paths()","Ruby gem::load_plugin_files()","Ruby gem::load_plugins()","Ruby openssl::engine#load_private_key()","Ruby openssl::engine#load_public_key()","Rails rails::application#load_rack_cache()","Ruby rake#load_rakefile()","Ruby rake::application#load_rakefile()","Ruby rake::application#load_rakefile()","Ruby rdoc::rubygemshook::load_rdoc()","Ruby rdoc::rubygemshook::load_rdoc()","Ruby xmlrpc::marshal#load_response()","Rails rails::engine::load_runner()","Rails activerecord::tasks::databasetasks#load_seed()","Rails rails::engine::load_seed()","Rails actiondispatch::session::cookiestore#load_session()","Rails actiondispatch::session::stalesessioncheck#load_session()","Ruby gem::dependencyresolver::indexset#load_spec()","Ruby gem::source#load_specs()","Ruby gem::source::local#load_specs()","Ruby gem::source::specificfile#load_specs()","Ruby psych::load_stream()","Rails activerecord::associations::collectionproxy#load_target()","Rails rails::engine::load_tasks()","Ruby rdoc::parser::c#load_variable_map()","Rails marshal::load_with_autoloading()","Ruby gem::load_yaml()","Ruby rdoc::load_yaml()","Rails activerecord::associations::collectionproxy#loaded?()","Ruby gem::specification#loaded_from=()","Ruby gem::platform::local()","Ruby time::local()","Rails activesupport::timezone#local()","Ruby gem::localremoteoptions#local?()","Rails actiondispatch::request#local?()","Ruby basicsocket#local_address()","Rails module#local_constant_names()","Ruby rexml::functions::local_name()","Ruby rexml::light::node#local_name()","Ruby rexml::light::node#local_name=()","Rails datetime::local_offset()","Rails time::local_time()","Rails activesupport::timezone#local_to_utc()","Ruby kernel#local_variables()","Ruby win32ole::locale()","Ruby win32ole::locale=()","Ruby encoding::locale_charmap()","Rails abstractcontroller::translation#localize()","Rails actionview::helpers::translationhelper#localize()","Ruby time#localtime()","Rails activesupport::timewithzone#localtime()","Rails actioncontroller::metal#location()","Rails actiondispatch::response#location()","Rails actioncontroller::metal#location=()","Rails actiondispatch::response#location=()","Ruby gem::location_of_caller()","Ruby mutex#lock()","Ruby net::http#lock()","Rails activerecord::querymethods#lock()","Rails activerecord::locking::pessimistic#lock!()","Ruby mutex#locked?()","Rails activerecord::locking::optimistic::classmethods#locking_column()","Rails activerecord::locking::optimistic::classmethods#locking_column=()","Rails activerecord::locking::optimistic::classmethods#locking_enabled?()","Ruby bigmath::log()","Ruby cmath::log()","Ruby gserver#log()","Ruby logger#log()","Ruby logger::application#log()","Ruby math::log()","Ruby sys#log()","Ruby syslog::log()","Ruby webrick::basiclog#log()","Ruby webrick::log#log()","Rails activerecord::connectionadapters::abstractadapter#log()","Rails rails::appbuilder#log()","Rails rails::generators::actions#log()","Ruby cmath::log!()","Ruby cmath::log10()","Ruby math::log10()","Ruby cmath::log10!()","Ruby cmath::log2()","Ruby math::log2()","Ruby cmath::log2!()","Ruby logger::application#log=()","Rails actioncontroller::live#log_error()","Rails rails::application::configuration#log_level()","Rails rails::server#log_path()","Rails activesupport::logsubscriber::log_subscribers()","Ruby logger::application#logger()","Rails actioncontroller::logsubscriber#logger()","Rails actionmailer::logsubscriber#logger()","Rails actionview::logsubscriber#logger()","Rails activerecord::logsubscriber#logger()","Rails activesupport::logsubscriber#logger()","Rails activesupport::logsubscriber::logger()","Ruby logger::application#logger=()","Ruby net::pop3#logging()","Ruby net::ftp#login()","Ruby net::imap#login()","Ruby net::telnet#login()","Ruby rss::maker::channelbase#logo()","Ruby rss::maker::channelbase#logo=()","Ruby net::imap#logout()","Ruby openssl::asn1::objectid#long_name()","Ruby rdoc::parser::c#look_for_directives_in()","Ruby rdoc::parser::ruby#look_for_directives_in()","Ruby rake::taskarguments#lookup()","Ruby rake::taskmanager#lookup()","Rails mime::type::lookup()","Rails activemodel::translation#lookup_ancestors()","Rails mime::type::lookup_by_extension()","Rails abstractcontroller::viewpaths#lookup_context()","Ruby rdoc::ri::driver#lookup_method()","Ruby rinda::ringfinger#lookup_ring()","Ruby rinda::ringfinger#lookup_ring_any()","Ruby webrick::httpserver#lookup_server()","Rails activesupport::cache::lookup_store()","Ruby kernel#loop()","Ruby win32::sspi::securityhandle#lower()","Ruby matrix#lower_triangular?()","Ruby net::ftp#ls()","Ruby file::lstat()","Ruby file#lstat()","Ruby pathname#lstat()","Ruby string#lstrip()","Ruby string#lstrip!()","Ruby net::imap#lsub()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#ltree()","Ruby lusolve#ludecomp()","Ruby matrix#lup()","Ruby matrix#lup_decomposition()","Ruby lusolve#lusolve()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#macaddr()","Ruby bignum#magnitude()","Ruby complex#magnitude()","Ruby fixnum#magnitude()","Ruby float#magnitude()","Ruby numeric#magnitude()","Ruby vector#magnitude()","Ruby net::popmail#mail()","Rails actionmailer::base#mail()","Rails actionview::helpers::urlhelper#mail_to()","Rails actionmailer::mailhelper#mailer()","Rails actionmailer::base#mailer_name()","Rails actionmailer::base::mailer_name()","Ruby net::smtp#mailfrom()","Ruby net::pop3#mails()","Ruby irb::context#main()","Ruby rdoc::store#main()","Ruby thread::main()","Ruby rdoc::store#main=()","Ruby irb::jobmanager#main_irb()","Ruby irb::jobmanager#main_thread()","Ruby net::httpheader#main_type()","Ruby win32ole_type#major_version()","Ruby win32ole_typelib#major_version()","Ruby gem::ext::builder::make()","Ruby rss::maker#make()","Ruby rss::maker::rssbase#make()","Ruby openssl::pkey::ec::point#make_affine!()","Ruby erb#make_compiler()","Ruby gem::commands::setupcommand#make_destination_dirs()","Ruby rinda::tupleentry#make_expires()","Ruby pathname#make_link()","Ruby rdoc::parser::ruby#make_message()","Ruby syslog::logger::make_methods()","Ruby webrick::httpauth::basicauth::make_passwd()","Ruby webrick::httpauth::digestauth::make_passwd()","Ruby webrick::httpauth::userdb#make_passwd()","Ruby uri::parser#make_regexp()","Ruby optionparser#make_switch()","Ruby pathname#make_symlink()","Ruby gem::indexer#make_temp_directories()","Ruby debugger__#make_thread_list()","Ruby rinda::tupleentry#make_tuple()","Ruby rdoc::store#make_variable_map()","Ruby fileutils::makedirs()","Ruby rake::ftpuploader#makedirs()","Ruby sys#makedirs()","Ruby rss::atom::contentmodel#maker_target()","Ruby rss::atom::feed::logo#maker_target()","Ruby rss::atom::personconstruct#maker_target()","Ruby rss::taxonomytopicmodel::taxonomytopic#maker_target()","Ruby rss::taxonomytopicsmodel::taxonomytopics#maker_target()","Ruby rss::maker#makers()","Ruby dl::malloc()","Ruby dl::cptr::malloc()","Ruby dl::cstructentity::malloc()","Ruby dl::cunionentity::malloc()","Ruby fiddle::malloc()","Ruby fiddle::cstructentity::malloc()","Ruby fiddle::cunionentity::malloc()","Ruby fiddle::pointer::malloc()","Ruby gc::malloc_allocated_size()","Ruby gc::malloc_allocations()","Ruby gem::commands::ownercommand#manage_owners()","Rails activerecord::associations::collectionproxy#many?()","Rails activerecord::relation#many?()","Rails enumerable#many?()","Ruby array#map()","Ruby enumerable#map()","Ruby enumerator::lazy#map()","Ruby matrix#map()","Ruby psych::coder#map()","Ruby vector#map()","Ruby array#map!()","Ruby set#map!()","Ruby vector#map2()","Ruby psych::coder#map=()","Ruby gem::indexer#map_gems_to_specs()","Rails activerecord::autosaveassociation#mark_for_destruction()","Ruby gem::specification#mark_version()","Rails activerecord::autosaveassociation#marked_for_destruction?()","Ruby rdoc::text#markup()","Ruby rdoc::methodattr#markup_code()","Ruby delegator#marshal_dump()","Ruby gem::version#marshal_dump()","Ruby openstruct#marshal_dump()","Ruby rdoc::anymethod#marshal_dump()","Ruby rdoc::attr#marshal_dump()","Ruby rdoc::constant#marshal_dump()","Ruby rdoc::context::section#marshal_dump()","Ruby rdoc::toplevel#marshal_dump()","Rails activerecord::connectionadapters::schemacache#marshal_dump()","Rails activesupport::timewithzone#marshal_dump()","Ruby delegator#marshal_load()","Ruby gem::version#marshal_load()","Ruby openstruct#marshal_load()","Ruby rdoc::anymethod#marshal_load()","Ruby rdoc::attr#marshal_load()","Ruby rdoc::constant#marshal_load()","Ruby rdoc::context::section#marshal_load()","Rails activerecord::connectionadapters::schemacache#marshal_load()","Rails activesupport::timewithzone#marshal_load()","Ruby gem::marshal_version()","Ruby ipaddr#mask()","Ruby syslog::mask()","Ruby ipaddr#mask!()","Ruby syslog::mask=()","Ruby rdoc::markup::attributemanager#mask_protected_sequences()","Ruby acl::aclentry#match()","Ruby acl::acllist#match()","Ruby gem::platform::match()","Ruby optionparser::completinghash#match()","Ruby rexml::iosource#match()","Ruby rexml::quickpath::match()","Ruby rexml::source#match()","Ruby rexml::xpath::match()","Ruby rexml::xpathparser#match()","Ruby regexp#match()","Ruby rinda::template#match()","Ruby rinda::templateentry#match()","Ruby string#match()","Ruby symbol#match()","Rails actiondispatch::routing::mapper::base#match()","Rails actiondispatch::routing::mapper::resources#match()","Rails activerecord::dynamicmatchers::method::match()","Rails html::selector#match()","Ruby gem::dependency#match?()","Ruby stringscanner#match?()","Rails actiondispatch::filehandler#match?()","Ruby gem::availableset#match_platform!()","Ruby gem::nametuple#match_platform?()","Ruby rexml::source#match_to()","Ruby rexml::source#match_to_consume()","Ruby stringscanner#matched()","Ruby stringscanner#matched?()","Ruby stringscanner#matched_size()","Ruby rexml::entity::matches?()","Ruby rexml::validation::choice#matches?()","Ruby rexml::validation::event#matches?()","Ruby rexml::validation::interleave#matches?()","Ruby rexml::validation::oneormore#matches?()","Ruby rexml::validation::optional#matches?()","Ruby rexml::validation::sequence#matches?()","Ruby gem::specification#matches_for_glob()","Ruby gem::dependency#matches_spec?()","Ruby gem::dependencyresolver::dependencyrequest#matches_spec?()","Ruby gem::dependency#matching_specs()","Ruby irb::context#math_mode=()","Rails module#mattr_accessor()","Rails module#mattr_reader()","Rails module#mattr_writer()","Ruby enumerable#max()","Ruby range#max()","Ruby sizedqueue#max()","Ruby sizedqueue#max=()","Ruby enumerable#max_by()","Ruby net::imap::max_flag_count()","Ruby net::imap::max_flag_count=()","Ruby process::maxgroups()","Ruby process::maxgroups=()","Rails activerecord::calculations#maximum()","Ruby curses::window#maxx()","Ruby curses::window#maxy()","Rails string#mb_chars()","Ruby date#mday()","Ruby time#mday()","Ruby net::ftp#mdtm()","Ruby benchmark::measure()","Ruby net::imap::bodytypebasic#media_subtype()","Ruby net::imap::bodytypemessage#media_subtype()","Ruby net::imap::bodytypemultipart#media_subtype()","Ruby net::imap::bodytypetext#media_subtype()","Rails actiondispatch::request#media_type()","Rails numeric#megabyte()","Rails numeric#megabytes()","Rails actiondispatch::routing::mapper::resources#member()","Ruby csv::row#member?()","Ruby dbm#member?()","Ruby env::member?()","Ruby enumerable#member?()","Ruby gdbm#member?()","Ruby hash#member?()","Ruby rake::invocationchain#member?()","Ruby rake::invocationchain::emptyinvocationchain#member?()","Ruby range#member?()","Ruby sdbm#member?()","Ruby set#member?()","Ruby struct#members()","Ruby webrick::httpauth::htgroup#members()","Ruby benchmark::tms#memberwise()","Ruby gem::dependency#merge()","Ruby hash#merge()","Ruby rdoc::classmodule#merge()","Ruby rdoc::markup::document#merge()","Ruby rdoc::markup::raw#merge()","Ruby set#merge()","Ruby uri::generic#merge()","Rails actiondispatch::http::headers#merge()","Rails activerecord::spawnmethods#merge()","Rails activesupport::hashwithindifferentaccess#merge()","Rails activesupport::hashwithindifferentaccess#merge()","Ruby hash#merge!()","Ruby uri::generic#merge!()","Rails actiondispatch::http::headers#merge!()","Ruby gem::command#merge_options()","Ruby rdoc::markup::document#merged?()","Ruby exception#message()","Ruby exception2messagemapper::message()","Ruby exception2messagemapper::message()","Ruby net::smtp::response#message()","Ruby optionparser::parseerror#message()","Ruby rake::rulerecursionoverflowerror#message()","Rails actiondispatch::response#message()","Rails actionmailer::mailhelper#message()","Ruby win32ole_event::message_loop()","Ruby webrick::httprequest#meta_vars()","Ruby object#method()","Rails actiondispatch::request#method()","Ruby xmlrpc::create#methodcall()","Ruby xmlrpc::create#methodresponse()","Ruby shell::commandprocessor::method_added()","Rails abstractcontroller::base::method_added()","Ruby module#method_defined?()","Ruby rdoc::ri::driver#method_document()","Ruby rdoc::store#method_file()","Rails actioncontroller::implicitrender#method_for_action()","Ruby tracepoint#method_id()","Ruby drb::drbobject#method_missing()","Ruby drb::drbobject#method_missing()","Ruby delegator#method_missing()","Ruby rexml::functions::method_missing()","Ruby rexml::quickpath::method_missing()","Ruby rake::taskarguments#method_missing()","Ruby win32ole#method_missing()","Ruby xmlrpc::client::proxy#method_missing()","Ruby xmlrpc::xmlparser::rexmlstreamparser::streamlistener#method_missing()","Ruby xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#method_missing()","Rails abstractcontroller::collector#method_missing()","Rails actionmailer::base::method_missing()","Rails activemodel::attributemethods#method_missing()","Rails activerecord::migration#method_missing()","Rails activesupport::multibyte::chars#method_missing()","Rails activesupport::orderedoptions#method_missing()","Rails activesupport::timewithzone#method_missing()","Rails rails::railtie::configurable::classmethods#method_missing()","Rails actiondispatch::request#method_symbol()","Ruby rdoc::ri::driver#method_type()","Ruby ","Ruby delegator#methods()","Ruby object#methods()","Ruby rdoc::context#methods_by_type()","Ruby rdoc::context#methods_matching()","Rails actioncontroller::metal::middleware()","Rails activesupport::cache::strategy::localcache#middleware()","Rails rails::engine::configuration#middleware()","Rails rails::server#middleware()","Rails date#midnight()","Rails datetime#midnight()","Rails time#midnight()","Rails activerecord::migration::migrate()","Rails activerecord::migration#migrate()","Rails activerecord::connectionadapters::columndumper#migration_keys()","Rails activerecord::connectionadapters::postgresqladapter#migration_keys()","Rails rails::generators::migration#migration_template()","Rails activerecord::schema#migrations_paths()","Ruby rss::atom::feed::entry::content#mime_split()","Ruby webrick::httputils::mime_type()","Rails actionview::template#mime_type()","Ruby enumerable#min()","Ruby range#min()","Ruby time#min()","Ruby xmlrpc::datetime#min=()","Ruby enumerable#min_by()","Rails activerecord::calculations#minimum()","Ruby enumerable#minmax()","Ruby enumerable#minmax_by()","Ruby matrix#minor()","Ruby win32ole_type#minor_version()","Ruby win32ole_typelib#minor_version()","Rails time#minus_with_coercion()","Rails time#minus_without_coercion()","Rails time#minus_without_duration()","Rails numeric#minute()","Ruby rss::itunesitemmodel::itunesduration#minute=()","Ruby rss::maker::itunesitemmodel::itunesdurationbase#minute=()","Rails numeric#minutes()","Ruby ","Rails nameerror#missing_name()","Rails nameerror#missing_name?()","Ruby date#mjd()","Ruby net::http#mkcol()","Ruby dir::mkdir()","Ruby fileutils::mkdir()","Ruby gem::package::tarwriter#mkdir()","Ruby net::ftp#mkdir()","Ruby object#mkdir()","Ruby pathname#mkdir()","Ruby shell::commandprocessor#mkdir()","Ruby fileutils::mkdir_p()","Ruby object#mkmf()","Ruby fileutils::mkpath()","Ruby pathname#mkpath()","Ruby time::mktime()","Ruby dir::mktmpdir()","Ruby bigdecimal::mode()","Ruby file::stat#mode()","Ruby rake::ftpfile#mode()","Rails activemodel::naming#model_name()","Rails actioncontroller::modelnaming#model_name_from_record_or_class()","Rails actionview::modelnaming#model_name_from_record_or_class()","Ruby rss::element#models()","Ruby openstruct#modifiable()","Ruby rdoc::extend#module()","Ruby rdoc::include#module()","Ruby rdoc::classmodule#module?()","Ruby rdoc::normalmodule#module?()","Ruby module#module_eval()","Ruby module#module_exec()","Ruby rdoc::store#module_names()","Rails rails::generators::namedbase#module_namespacing()","Ruby rdoc::context#modules()","Ruby ","Rails abstractcontroller::helpers::classmethods#modules_for_helpers()","Rails actioncontroller::helpers::classmethods#modules_for_helpers()","Ruby rdoc::context#modules_hash()","Ruby rdoc::store#modules_hash()","Ruby bigdecimal#modulo()","Ruby bignum#modulo()","Ruby fixnum#modulo()","Ruby float#modulo()","Ruby numeric#modulo()","Ruby date#mon()","Ruby time#mon()","Ruby xmlrpc::datetime#mon=()","Ruby monitormixin#mon_enter()","Ruby monitormixin#mon_exit()","Ruby monitormixin#mon_synchronize()","Ruby monitormixin#mon_try_enter()","Rails dateandtime::calculations#monday()","Ruby date#monday?()","Ruby time#monday?()","Ruby date#month()","Ruby time#month()","Rails integer#month()","Ruby xmlrpc::datetime#month=()","Rails actionview::helpers::formhelper#month_field()","Rails actionview::helpers::formtaghelper#month_field_tag()","Rails integer#months()","Rails dateandtime::calculations#months_ago()","Rails dateandtime::calculations#months_since()","Ruby webrick::httpserver#mount()","Rails actiondispatch::routing::mapper::base#mount()","Ruby webrick::httpserver#mount_proc()","Ruby pathname#mountpoint?()","Ruby curses::mouseinterval()","Ruby curses::mousemask()","Ruby curses::window#move()","Ruby fileutils::move()","Ruby net::http#move()","Ruby rinda::tuplespace#move()","Rails benchmark::ms()","Ruby file#mtime()","Ruby file::mtime()","Ruby file::stat#mtime()","Ruby net::ftp#mtime()","Ruby pathname#mtime()","Ruby zlib::gzipfile#mtime()","Rails activerecord::migrationproxy#mtime()","Ruby zlib::gzipwriter#mtime=()","Ruby mutex_m#mu_lock()","Ruby mutex_m#mu_locked?()","Ruby mutex_m#mu_synchronize()","Ruby mutex_m#mu_try_lock()","Ruby mutex_m#mu_unlock()","Ruby openssl::pkey::ec::point#mul()","Ruby bigdecimal#mult()","Ruby xmlrpc::client#multicall()","Ruby xmlrpc::client#multicall2()","Ruby xmlrpc::client#multicall2_async()","Ruby xmlrpc::client#multicall_async()","Rails actionview::helpers::formbuilder#multipart=()","Ruby cgi::queryextension#multipart?()","Ruby net::imap::bodytypeattachment#multipart?()","Ruby net::imap::bodytypebasic#multipart?()","Ruby net::imap::bodytypeextension#multipart?()","Ruby net::imap::bodytypemessage#multipart?()","Ruby net::imap::bodytypemultipart#multipart?()","Ruby net::imap::bodytypetext#multipart?()","Ruby cgi::htmlextension#multipart_form()","Rails integer#multiple_of?()","Ruby stringscanner::must_c_version()","Ruby rss::element#must_call_validators()","Rails activesupport::cache::store#mute()","Ruby fileutils::mv()","Ruby object#mv()","Ruby net::pop3#n_bytes()","Ruby irb::jobmanager#n_jobs()","Ruby net::pop3#n_mails()","Ruby dl::cfunc#name()","Ruby dl::function#name()","Ruby encoding#name()","Ruby gem::dependencyresolver::activationrequest#name()","Ruby gem::dependencyresolver::dependencyrequest#name()","Ruby method#name()","Ruby module#name()","Ruby nameerror#name()","Ruby openssl::cipher#name()","Ruby openssl::digest#name()","Ruby openssl::engine#name()","Ruby openssl::pkcs7::signerinfo#name()","Ruby rdoc::anymethod#name()","Ruby rdoc::toplevel#name()","Ruby rexml::document#name()","Ruby rexml::functions::name()","Ruby rexml::light::node#name()","Ruby rexml::quickpath::name()","Ruby rake::task#name()","Ruby unboundmethod#name()","Ruby win32ole_method#name()","Ruby win32ole_param#name()","Ruby win32ole_type#name()","Ruby win32ole_typelib#name()","Ruby win32ole_variable#name()","Ruby win32::registry#name()","Rails actiondispatch::routing::routewrapper#name()","Rails activesupport::timewithzone::name()","Ruby rdoc::classmodule#name=()","Ruby rexml::light::node#name=()","Ruby rexml::namespace#name=()","Ruby rdoc::classmodule#name_for_path()","Ruby rdoc::context#name_for_path()","Ruby encoding::name_list()","Ruby gem::security::trustdir#name_path()","Ruby rdoc::alias#name_prefix()","Ruby rdoc::methodattr#name_prefix()","Ruby rdoc::ri::driver#name_regexp()","Ruby gem::specification#name_tuple()","Ruby regexp#named_captures()","Ruby encoding#names()","Ruby matchdata#names()","Ruby regexp#names()","Rails qualifiedconstutils::names()","Ruby rexml::attribute#namespace()","Ruby rexml::element#namespace()","Ruby rexml::light::node#namespace()","Rails actiondispatch::routing::mapper::resources#namespace()","Rails actiondispatch::routing::mapper::scoping#namespace()","Rails rails::generators::base::namespace()","Rails rails::generators::namedbase#namespace()","Ruby rexml::light::node#namespace=()","Ruby rexml::functions::namespace_context()","Ruby rexml::functions::namespace_context=()","Ruby rexml::functions::namespace_uri()","Rails rails::generators::namedbase#namespaced?()","Rails rails::generators::namedbase#namespaced_class_path()","Rails rails::generators::namedbase#namespaced_file_path()","Rails rails::generators::namedbase#namespaced_path()","Ruby rexml::element#namespaces()","Ruby rexml::parsers::xpathparser#namespaces=()","Ruby rexml::xpathparser#namespaces=()","Ruby bigdecimal#nan?()","Ruby float#nan?()","Ruby ipaddr#native()","Rails activerecord::connectionadapters::abstractmysqladapter#native_database_types()","Rails activerecord::connectionadapters::schemastatements#native_database_types()","Rails actioncontroller::responder#navigation_behavior()","Rails actioncontroller::responder#navigation_location()","Ruby rss::atom::feed::entry::content#need_base64_encode?()","Ruby rss::element#need_base64_encode?()","Ruby rss::element#need_initialize_variables()","Ruby rss::maker::base#need_initialize_variables()","Ruby rss::atom::commonmodel#need_parent?()","Ruby rss::element#need_parent?()","Ruby rake::filecreationtask#needed?()","Ruby rake::filetask#needed?()","Ruby rake::task#needed?()","Ruby gem::needs()","Rails actioncontroller::mimeresponds::collector#negotiate_format()","Rails actiondispatch::http::mimenegotiation#negotiate_mime()","Ruby prettyprint#nest()","Ruby prettyprint::singleline#nest()","Rails actiondispatch::routing::mapper::resources#nested()","Rails actionview::digestor#nested_dependencies()","Rails activesupport::hashwithindifferentaccess#nested_under_indifferent_access()","Rails activesupport::hashwithindifferentaccess#nested_under_indifferent_access()","Rails activesupport::orderedhash#nested_under_indifferent_access()","Rails hash#nested_under_indifferent_access()","Ruby module::nesting()","Ruby acl::new()","Ruby acl::aclentry::new()","Ruby acl::acllist::new()","Ruby addrinfo::new()","Ruby array::new()","Ruby basicobject::new()","Ruby benchmark::tms::new()","Ruby bigdecimal::new()","Ruby cgi::new()","Ruby cgi::cookie::new()","Ruby cgi::session::new()","Ruby cgi::session::filestore::new()","Ruby cgi::session::memorystore::new()","Ruby cgi::session::nullstore::new()","Ruby cgi::session::pstore::new()","Ruby csv::new()","Ruby csv::row::new()","Ruby csv::table::new()","Ruby class#new()","Ruby class::new()","Ruby compositepublisher::new()","Ruby conditionvariable::new()","Ruby curses::pad::new()","Ruby curses::window::new()","Ruby dbm::new()","Ruby dl::cfunc::new()","Ruby dl::cptr::new()","Ruby dl::cstructentity::new()","Ruby dl::carriedfunction::new()","Ruby dl::compositehandler::new()","Ruby dl::function::new()","Ruby dl::handle::new()","Ruby dl::packer::new()","Ruby dl::stack::new()","Ruby drb::drbarray::new()","Ruby drb::drbobject::new()","Ruby drb::drbobject::new()","Ruby drb::drbremoteerror::new()","Ruby drb::drbsslsocket::new()","Ruby drb::drbsslsocket::sslconfig::new()","Ruby drb::drbserver::new()","Ruby drb::drbunknown::new()","Ruby drb::drbunknownerror::new()","Ruby drb::extserv::new()","Ruby drb::extservmanager::new()","Ruby drb::gw::new()","Ruby drb::timeridconv::new()","Ruby date::new()","Ruby datetime::new()","Ruby delegator::new()","Ruby digest::hmac::new()","Ruby digest::instance#new()","Ruby dir::new()","Ruby erb::new()","Ruby encoding::converter::new()","Ruby enumerator::new()","Ruby enumerator::lazy::new()","Ruby exception::new()","Ruby fiddle::cstructentity::new()","Ruby fiddle::closure::new()","Ruby fiddle::closure::blockcaller::new()","Ruby fiddle::compositehandler::new()","Ruby fiddle::function::new()","Ruby fiddle::handle::new()","Ruby fiddle::pointer::new()","Ruby file::new()","Ruby file::stat::new()","Ruby gdbm::new()","Ruby gserver::new()","Ruby gem::availableset::new()","Ruby gem::command::new()","Ruby gem::commandmanager::new()","Ruby gem::commands::buildcommand::new()","Ruby gem::commands::certcommand::new()","Ruby gem::commands::checkcommand::new()","Ruby gem::commands::cleanupcommand::new()","Ruby gem::commands::contentscommand::new()","Ruby gem::commands::dependencycommand::new()","Ruby gem::commands::environmentcommand::new()","Ruby gem::commands::fetchcommand::new()","Ruby gem::commands::generateindexcommand::new()","Ruby gem::commands::helpcommand::new()","Ruby gem::commands::installcommand::new()","Ruby gem::commands::listcommand::new()","Ruby gem::commands::lockcommand::new()","Ruby gem::commands::mirrorcommand::new()","Ruby gem::commands::outdatedcommand::new()","Ruby gem::commands::ownercommand::new()","Ruby gem::commands::pristinecommand::new()","Ruby gem::commands::pushcommand::new()","Ruby gem::commands::querycommand::new()","Ruby gem::commands::rdoccommand::new()","Ruby gem::commands::searchcommand::new()","Ruby gem::commands::servercommand::new()","Ruby gem::commands::setupcommand::new()","Ruby gem::commands::sourcescommand::new()","Ruby gem::commands::specificationcommand::new()","Ruby gem::commands::stalecommand::new()","Ruby gem::commands::uninstallcommand::new()","Ruby gem::commands::unpackcommand::new()","Ruby gem::commands::updatecommand::new()","Ruby gem::commands::whichcommand::new()","Ruby gem::commands::yankcommand::new()","Ruby gem::configfile::new()","Ruby gem::consoleui::new()","Ruby gem::dependency::new()","Ruby gem::dependencyinstaller::new()","Ruby gem::dependencylist::new()","Ruby gem::dependencyresolutionerror::new()","Ruby gem::dependencyresolver::new()","Ruby gem::dependencyresolver::apiset::new()","Ruby gem::dependencyresolver::apispecification::new()","Ruby gem::dependencyresolver::activationrequest::new()","Ruby gem::dependencyresolver::dependencyconflict::new()","Ruby gem::dependencyresolver::dependencyrequest::new()","Ruby gem::dependencyresolver::indexset::new()","Ruby gem::dependencyresolver::indexspecification::new()","Ruby gem::doctor::new()","Ruby gem::filepermissionerror::new()","Ruby gem::gemrunner::new()","Ruby gem::impossibledependencieserror::new()","Ruby gem::indexer::new()","Ruby gem::installer::new()","Ruby gem::mockgemui::new()","Ruby gem::mockgemui::inputeoferror::new()","Ruby gem::mockgemui::termerror::new()","Ruby gem::nametuple::new()","Ruby gem::package::new()","Ruby gem::package::digestio::new()","Ruby gem::package::formaterror::new()","Ruby gem::package::old::new()","Ruby gem::package::patherror::new()","Ruby gem::package::tarheader::new()","Ruby gem::package::tarreader::new()","Ruby gem::package::tarreader::new()","Ruby gem::package::tarreader::entry::new()","Ruby gem::package::tarwriter::new()","Ruby gem::package::tarwriter::new()","Ruby gem::package::tarwriter::boundedstream::new()","Ruby gem::package::tarwriter::restrictedstream::new()","Ruby gem::packagetask::new()","Ruby gem::pathsupport::new()","Ruby gem::platform::new()","Ruby gem::platformmismatch::new()","Ruby gem::remotefetcher::new()","Ruby gem::remotefetcher::fetcherror::new()","Ruby gem::requestset::new()","Ruby gem::requestset::gemdepedencyapi::new()","Ruby gem::requirement::new()","Ruby gem::requirement::new()","Ruby gem::security::policy::new()","Ruby gem::security::signer::new()","Ruby gem::security::trustdir::new()","Ruby gem::server::new()","Ruby gem::silentui::new()","Ruby gem::source::new()","Ruby gem::source::local::new()","Ruby gem::source::specificfile::new()","Ruby gem::sourcefetchproblem::new()","Ruby gem::sourcelist::new()","Ruby gem::specfetcher::new()","Ruby gem::specificgemnotfoundexception::new()","Ruby gem::specification::new()","Ruby gem::streamui::new()","Ruby gem::streamui::silentdownloadreporter::new()","Ruby gem::streamui::silentprogressreporter::new()","Ruby gem::streamui::simpleprogressreporter::new()","Ruby gem::streamui::verbosedownloadreporter::new()","Ruby gem::streamui::verboseprogressreporter::new()","Ruby gem::systemexitexception::new()","Ruby gem::uninstaller::new()","Ruby gem::unsatisfiabledepedencyerror::new()","Ruby gem::validator::new()","Ruby gem::version::new()","Ruby getoptlong::new()","Ruby hash::new()","Ruby httpserver::new()","Ruby httpserver::request::new()","Ruby httpserver::response::new()","Ruby httpserver::table::new()","Ruby io::new()","Ruby ipaddr::new()","Ruby irb::context::new()","Ruby irb::fileinputmethod::new()","Ruby irb::frame::new()","Ruby irb::inputmethod::new()","Ruby irb::inspector::new()","Ruby irb::irb::new()","Ruby irb::jobmanager::new()","Ruby irb::locale::new()","Ruby irb::notifier::abstractnotifier::new()","Ruby irb::notifier::compositenotifier::new()","Ruby irb::notifier::levelednotifier::new()","Ruby irb::notifier::nomsgnotifier::new()","Ruby irb::readlineinputmethod::new()","Ruby irb::stdioinputmethod::new()","Ruby irb::workspace::new()","Ruby logger::new()","Ruby logger::application::new()","Ruby logger::formatter::new()","Ruby logger::logdevice::new()","Ruby matrix::new()","Ruby matrix::eigenvaluedecomposition::new()","Ruby matrix::lupdecomposition::new()","Ruby module::new()","Ruby monitormixin::new()","Ruby monitormixin::conditionvariable::new()","Ruby mutex::new()","Ruby nameerror::new()","Ruby net::ftp::new()","Ruby net::http::new()","Ruby net::http::new()","Ruby net::httpgenericrequest::new()","Ruby net::httprequest::new()","Ruby net::imap::new()","Ruby net::imap::crammd5authenticator::new()","Ruby net::imap::digestmd5authenticator::new()","Ruby net::imap::loginauthenticator::new()","Ruby net::imap::plainauthenticator::new()","Ruby net::imap::responseerror::new()","Ruby net::internetmessageio::writeadapter::new()","Ruby net::pop3::new()","Ruby net::smtp::new()","Ruby net::smtp::response::new()","Ruby net::telnet::new()","Ruby nomethoderror::new()","Ruby oleproperty::new()","Ruby openssl::asn1::asn1data::new()","Ruby openssl::asn1::constructive::new()","Ruby openssl::asn1::primitive::new()","Ruby openssl::bn::new()","Ruby openssl::buffering::new()","Ruby openssl::cipher::new()","Ruby openssl::config::new()","Ruby openssl::digest::new()","Ruby openssl::digest::digest::new()","Ruby openssl::hmac::new()","Ruby openssl::netscape::spki::new()","Ruby openssl::ocsp::basicresponse::new()","Ruby openssl::ocsp::certificateid::new()","Ruby openssl::ocsp::request::new()","Ruby openssl::ocsp::response::new()","Ruby openssl::pkcs12::new()","Ruby openssl::pkcs7::new()","Ruby openssl::pkcs7::recipientinfo::new()","Ruby openssl::pkcs7::signerinfo::new()","Ruby openssl::pkey::dh::new()","Ruby openssl::pkey::dsa::new()","Ruby openssl::pkey::ec::new()","Ruby openssl::pkey::ec::group::new()","Ruby openssl::pkey::ec::point::new()","Ruby openssl::pkey::pkey::new()","Ruby openssl::pkey::rsa::new()","Ruby openssl::pkey::rsa::new()","Ruby openssl::ssl::sslcontext::new()","Ruby openssl::ssl::sslsocket::new()","Ruby openssl::ssl::session::new()","Ruby openssl::x509::attribute::new()","Ruby openssl::x509::crl::new()","Ruby openssl::x509::certificate::new()","Ruby openssl::x509::extension::new()","Ruby openssl::x509::extensionfactory::new()","Ruby openssl::x509::name::new()","Ruby openssl::x509::request::new()","Ruby openssl::x509::revoked::new()","Ruby openssl::x509::store::new()","Ruby openstruct::new()","Ruby openuri::httperror::new()","Ruby openuri::httpredirect::new()","Ruby optionparser#new()","Ruby optionparser::new()","Ruby optionparser::arguable::new()","Ruby optionparser::list::new()","Ruby optionparser::parseerror::new()","Ruby optionparser::switch::new()","Ruby pstore::new()","Ruby pathname::new()","Ruby prettyprint::new()","Ruby prettyprint::breakable::new()","Ruby prettyprint::group::new()","Ruby prettyprint::groupqueue::new()","Ruby prettyprint::singleline::new()","Ruby prettyprint::text::new()","Ruby prime::new()","Ruby prime::eratosthenesgenerator::new()","Ruby prime::generator23::new()","Ruby prime::pseudoprimegenerator::new()","Ruby prime::trialdivisiongenerator::new()","Ruby proc::new()","Ruby psych::coder::new()","Ruby psych::handler::dumperoptions::new()","Ruby psych::handlers::recorder::new()","Ruby psych::nodes::alias::new()","Ruby psych::nodes::document::new()","Ruby psych::nodes::mapping::new()","Ruby psych::nodes::node::new()","Ruby psych::nodes::scalar::new()","Ruby psych::nodes::sequence::new()","Ruby psych::nodes::stream::new()","Ruby psych::parser::new()","Ruby psych::scalarscanner::new()","Ruby psych::streaming::new()","Ruby psych::syntaxerror::new()","Ruby psych::treebuilder::new()","Ruby psych::visitors::depthfirst::new()","Ruby psych::visitors::emitter::new()","Ruby psych::visitors::jsontree::new()","Ruby psych::visitors::toruby::new()","Ruby psych::visitors::yamltree::new()","Ruby queue::new()","Ruby rdoc::alias::new()","Ruby rdoc::anymethod::new()","Ruby rdoc::attr::new()","Ruby rdoc::classmodule::new()","Ruby rdoc::codeobject::new()","Ruby rdoc::comment::new()","Ruby rdoc::constant::new()","Ruby rdoc::context::new()","Ruby rdoc::context::section::new()","Ruby rdoc::crossreference::new()","Ruby rdoc::erbio::new()","Ruby rdoc::extend::new()","Ruby rdoc::generator::darkfish::new()","Ruby rdoc::generator::jsonindex::new()","Ruby rdoc::include::new()","Ruby rdoc::markdown::new()","Ruby rdoc::markup::new()","Ruby rdoc::markup::attrspan::new()","Ruby rdoc::markup::attributemanager::new()","Ruby rdoc::markup::attributes::new()","Ruby rdoc::markup::blankline::new()","Ruby rdoc::markup::document::new()","Ruby rdoc::markup::formatter::new()","Ruby rdoc::markup::hardbreak::new()","Ruby rdoc::markup::include::new()","Ruby rdoc::markup::indentedparagraph::new()","Ruby rdoc::markup::list::new()","Ruby rdoc::markup::listitem::new()","Ruby rdoc::markup::parser::new()","Ruby rdoc::markup::preprocess::new()","Ruby rdoc::markup::raw::new()","Ruby rdoc::markup::special::new()","Ruby rdoc::markup::toansi::new()","Ruby rdoc::markup::tobs::new()","Ruby rdoc::markup::tohtml::new()","Ruby rdoc::markup::tohtmlcrossref::new()","Ruby rdoc::markup::tohtmlsnippet::new()","Ruby rdoc::markup::tolabel::new()","Ruby rdoc::markup::tomarkdown::new()","Ruby rdoc::markup::tordoc::new()","Ruby rdoc::markup::tottonly::new()","Ruby rdoc::methodattr::new()","Ruby rdoc::parser::new()","Ruby rdoc::parser::c::new()","Ruby rdoc::parser::ruby::new()","Ruby rdoc::parser::simple::new()","Ruby rdoc::rd::blockparser::new()","Ruby rdoc::rd::inline::new()","Ruby rdoc::rd::inlineparser::new()","Ruby rdoc::rdoc::new()","Ruby rdoc::ri::driver::new()","Ruby rdoc::require::new()","Ruby rdoc::rubylex::new()","Ruby rdoc::rubygemshook::new()","Ruby rdoc::rubygemshook::new()","Ruby rdoc::servlet::new()","Ruby rdoc::stats::new()","Ruby rdoc::stats::quiet::new()","Ruby rdoc::store::new()","Ruby rdoc::store::missingfileerror::new()","Ruby rdoc::task::new()","Ruby rdoc::tomdoc::new()","Ruby rdoc::toplevel::new()","Ruby rexml::attlistdecl::new()","Ruby rexml::attribute::new()","Ruby rexml::cdata::new()","Ruby rexml::child::new()","Ruby rexml::comment::new()","Ruby rexml::dtd::elementdecl::new()","Ruby rexml::dtd::entitydecl::new()","Ruby rexml::dtd::notationdecl::new()","Ruby rexml::doctype::new()","Ruby rexml::document::new()","Ruby rexml::element::new()","Ruby rexml::entity::new()","Ruby rexml::formatters::default::new()","Ruby rexml::formatters::pretty::new()","Ruby rexml::formatters::transitive::new()","Ruby rexml::iosource::new()","Ruby rexml::instruction::new()","Ruby rexml::light::node::new()","Ruby rexml::output::new()","Ruby rexml::parent::new()","Ruby rexml::parseexception::new()","Ruby rexml::parsers::baseparser::new()","Ruby rexml::parsers::lightparser::new()","Ruby rexml::parsers::pullevent::new()","Ruby rexml::parsers::pullparser::new()","Ruby rexml::parsers::sax2parser::new()","Ruby rexml::parsers::streamparser::new()","Ruby rexml::parsers::treeparser::new()","Ruby rexml::parsers::ultralightparser::new()","Ruby rexml::source::new()","Ruby rexml::syncenumerator::new()","Ruby rexml::text::new()","Ruby rexml::undefinednamespaceexception::new()","Ruby rexml::validation::choice::new()","Ruby rexml::validation::event::new()","Ruby rexml::validation::interleave::new()","Ruby rexml::validation::oneormore::new()","Ruby rexml::validation::ref::new()","Ruby rexml::validation::relaxng::new()","Ruby rexml::validation::state::new()","Ruby rexml::validation::validationexception::new()","Ruby rexml::xmldecl::new()","Ruby rexml::xpathparser::new()","Ruby rss::atom::entry::new()","Ruby rss::atom::feed::new()","Ruby rss::baseparser::new()","Ruby rss::conversionerror::new()","Ruby rss::converter::new()","Ruby rss::element::new()","Ruby rss::ituneschannelmodel::itunescategory::new()","Ruby rss::ituneschannelmodel::itunesimage::new()","Ruby rss::ituneschannelmodel::itunesowner::new()","Ruby rss::itunesitemmodel::itunesduration::new()","Ruby rss::imagefaviconmodel::imagefavicon::new()","Ruby rss::imageitemmodel::imageitem::new()","Ruby rss::listenermixin::new()","Ruby rss::maker::atom::entry::new()","Ruby rss::maker::atom::feed::new()","Ruby rss::maker::base::new()","Ruby rss::maker::itemsbase::new()","Ruby rss::maker::rss09::new()","Ruby rss::maker::rss091::new()","Ruby rss::maker::rss092::new()","Ruby rss::maker::rss10::new()","Ruby rss::maker::rss20::new()","Ruby rss::maker::rssbase::new()","Ruby rss::missingattributeerror::new()","Ruby rss::missingtagerror::new()","Ruby rss::nserror::new()","Ruby rss::notavailablevalueerror::new()","Ruby rss::notexpectedtagerror::new()","Ruby rss::notexpectedtagerror::new()","Ruby rss::notseterror::new()","Ruby rss::notvalidxmlparser::new()","Ruby rss::notwellformederror::new()","Ruby rss::overlappedprefixerror::new()","Ruby rss::parser::new()","Ruby rss::rdf::new()","Ruby rss::rdf::li::new()","Ruby rss::rdf::li::new()","Ruby rss::rdf::li::new()","Ruby rss::rdf::seq::new()","Ruby rss::rdf::seq::new()","Ruby rss::rootelementmixin::new()","Ruby rss::rss::new()","Ruby rss::rss::channel::cloud::new()","Ruby rss::rss::channel::image::new()","Ruby rss::rss::channel::item::category::new()","Ruby rss::rss::channel::item::enclosure::new()","Ruby rss::rss::channel::item::guid::new()","Ruby rss::rss::channel::item::source::new()","Ruby rss::rss::channel::skipdays::day::new()","Ruby rss::rss::channel::skiphours::hour::new()","Ruby rss::rss::channel::textinput::new()","Ruby rss::taxonomytopicmodel::taxonomytopic::new()","Ruby rss::taxonomytopicsmodel::taxonomytopics::new()","Ruby rss::toomuchtagerror::new()","Ruby rss::trackbackmodel10::trackbackabout::new()","Ruby rss::trackbackmodel10::trackbackping::new()","Ruby rss::trackbackmodel20::trackbackabout::new()","Ruby rss::trackbackmodel20::trackbackping::new()","Ruby rss::unknownconversionmethoderror::new()","Ruby rss::unknownconversionmethoderror::new()","Ruby rss::unknowntagerror::new()","Ruby rss::unsupportedmakerversionerror::new()","Ruby rss::xml::element::new()","Ruby rss::xmlparsernotfound::new()","Ruby rss::xmlstylesheet::new()","Ruby rss::xmlstylesheetmixin::new()","Ruby rake::application::new()","Ruby rake::application::new()","Ruby rake::compositepublisher::new()","Ruby rake::filelist::new()","Ruby rake::ftpfile::new()","Ruby rake::ftpuploader::new()","Ruby rake::invocationchain::new()","Ruby rake::namespace::new()","Ruby rake::packagetask::new()","Ruby rake::pseudostatus::new()","Ruby rake::rubyforgepublisher::new()","Ruby rake::rulerecursionoverflowerror::new()","Ruby rake::sshdirpublisher::new()","Ruby rake::sshfilepublisher::new()","Ruby rake::task::new()","Ruby rake::taskarguments::new()","Ruby rake::taskmanager::new()","Ruby random::new()","Ruby range::new()","Ruby regexp::new()","Ruby resolv::new()","Ruby resolv::dns::new()","Ruby resolv::dns::resource::domainname::new()","Ruby resolv::dns::resource::generic::new()","Ruby resolv::dns::resource::hinfo::new()","Ruby resolv::dns::resource::in::a::new()","Ruby resolv::dns::resource::in::aaaa::new()","Ruby resolv::dns::resource::in::srv::new()","Ruby resolv::dns::resource::in::wks::new()","Ruby resolv::dns::resource::minfo::new()","Ruby resolv::dns::resource::mx::new()","Ruby resolv::dns::resource::soa::new()","Ruby resolv::dns::resource::txt::new()","Ruby resolv::hosts::new()","Ruby rinda::drbobjecttemplate::new()","Ruby rinda::notifytemplateentry::new()","Ruby rinda::ringfinger::new()","Ruby rinda::ringprovider::new()","Ruby rinda::ringserver::new()","Ruby rinda::simplerenewer::new()","Ruby rinda::tuple::new()","Ruby rinda::tuplebag::tuplebin::new()","Ruby rinda::tupleentry::new()","Ruby rinda::tuplespace::new()","Ruby rinda::tuplespaceproxy::new()","Ruby rinda::waittemplateentry::new()","Ruby ripper::filter::new()","Ruby rubyvm::instructionsequence::new()","Ruby sdbm::new()","Ruby sockssocket::new()","Ruby sockssocket::new()","Ruby set::new()","Ruby shell::new()","Ruby shell::appendfile::new()","Ruby shell::appendio::new()","Ruby shell::cat::new()","Ruby shell::commandprocessor::new()","Ruby shell::concat::new()","Ruby shell::echo::new()","Ruby shell::filter::new()","Ruby shell::glob::new()","Ruby shell::processcontroller::new()","Ruby shell::systemcommand::new()","Ruby shell::tee::new()","Ruby shell::void::new()","Ruby signalexception::new()","Ruby sizedqueue::new()","Ruby socket::new()","Ruby socket::ancillarydata::new()","Ruby socket::option::new()","Ruby socket::udpsource::new()","Ruby sshdirpublisher::new()","Ruby sshfilepublisher::new()","Ruby string::new()","Ruby stringio::new()","Ruby stringscanner::new()","Ruby struct::new()","Ruby sync_m::new()","Ruby sync_m::new()","Ruby syslog::logger::new()","Ruby systemcallerror::new()","Ruby systemexit::new()","Ruby tcpserver::new()","Ruby tcpsocket::new()","Ruby tcpsocket::new()","Ruby tempfile::new()","Ruby thread::new()","Ruby threadswait::new()","Ruby threadswait::new()","Ruby time::new()","Ruby tracepoint::new()","Ruby udpsocket::new()","Ruby unixserver::new()","Ruby unixsocket::new()","Ruby uri::ftp::new()","Ruby uri::generic::new()","Ruby uri::http::new()","Ruby uri::ldap::new()","Ruby uri::mailto::new()","Ruby uri::parser::new()","Ruby vector::new()","Ruby webrick::basiclog::new()","Ruby webrick::cgi::new()","Ruby webrick::cookie::new()","Ruby webrick::genericserver::new()","Ruby webrick::httpauth::basicauth::new()","Ruby webrick::httpauth::digestauth::new()","Ruby webrick::httpauth::htdigest::new()","Ruby webrick::httpauth::htgroup::new()","Ruby webrick::httpauth::htpasswd::new()","Ruby webrick::httpproxyserver::new()","Ruby webrick::httprequest::new()","Ruby webrick::httpresponse::new()","Ruby webrick::httpserver::new()","Ruby webrick::httpservlet::abstractservlet::new()","Ruby webrick::httpservlet::cgihandler::new()","Ruby webrick::httpservlet::defaultfilehandler::new()","Ruby webrick::httpservlet::erbhandler::new()","Ruby webrick::httpservlet::filehandler::new()","Ruby webrick::httputils::formdata::new()","Ruby webrick::httpversion::new()","Ruby webrick::log::new()","Ruby webrick::utils::timeouthandler::new()","Ruby win32ole::new()","Ruby win32ole_event::new()","Ruby win32ole_method::new()","Ruby win32ole_param::new()","Ruby win32ole_type::new()","Ruby win32ole_typelib::new()","Ruby win32ole_variant::new()","Ruby weakref::new()","Ruby win32::registry::error::new()","Ruby win32::registry::predefinedkey::new()","Ruby win32::sspi::identity::new()","Ruby win32::sspi::negotiateauth::new()","Ruby win32::sspi::sspiresult::new()","Ruby win32::sspi::securitybuffer::new()","Ruby win32api::new()","Ruby xmlrpc::base64::new()","Ruby xmlrpc::basicserver::new()","Ruby xmlrpc::cgiserver::new()","Ruby xmlrpc::cgiserver::new()","Ruby xmlrpc::client::new()","Ruby xmlrpc::client::proxy::new()","Ruby xmlrpc::create::new()","Ruby xmlrpc::datetime::new()","Ruby xmlrpc::faultexception::new()","Ruby xmlrpc::marshal::new()","Ruby xmlrpc::modrubyserver::new()","Ruby xmlrpc::server::new()","Ruby xmlrpc::service::basicinterface::new()","Ruby xmlrpc::service::interface::new()","Ruby xmlrpc::service::publicinstancemethodsinterface::new()","Ruby xmlrpc::webrickservlet::new()","Ruby xmlrpc::xmlparser::nqxmlstreamparser::new()","Ruby xmlrpc::xmlparser::nqxmltreeparser::new()","Ruby xmlrpc::xmlparser::nqxmltreeparser::new()","Ruby xmlrpc::xmlparser::rexmlstreamparser::new()","Ruby xmlrpc::xmlparser::streamparsermixin::new()","Ruby xmlrpc::xmlparser::xmlscanstreamparser::new()","Ruby xmlrpc::xmlparser::xmlstreamparser::new()","Ruby xmlrpc::xmlparser::xmltreeparser::new()","Ruby xmlrpc::xmlparser::xmltreeparser::new()","Ruby xmlrpc::xmlwriter::xmlparser::new()","Ruby xmp::new()","Ruby xmp::stringinputmethod::new()","Ruby yaml::store::new()","Ruby zlib::deflate::new()","Ruby zlib::gzipreader::new()","Ruby zlib::gzipwriter::new()","Ruby zlib::inflate::new()","Rails abstractcontroller::doublerendererror::new()","Rails abstractcontroller::helpers::classmethods::missinghelpererror::new()","Rails actioncontroller::metal::new()","Rails actioncontroller::middleware::new()","Rails actioncontroller::middleware::new()","Rails actioncontroller::middleware::actionmiddleware::new()","Rails actioncontroller::mimeresponds::collector::new()","Rails actioncontroller::parameters::new()","Rails actioncontroller::requestforgeryprotection::protectionmethods::exception::new()","Rails actioncontroller::requestforgeryprotection::protectionmethods::nullsession::new()","Rails actioncontroller::requestforgeryprotection::protectionmethods::resetsession::new()","Rails actioncontroller::responder::new()","Rails actiondispatch::callbacks::new()","Rails actiondispatch::cookies::new()","Rails actiondispatch::cookies::verifyandupgradelegacysignedmessage::new()","Rails actiondispatch::debugexceptions::new()","Rails actiondispatch::exceptionwrapper::new()","Rails actiondispatch::filehandler::new()","Rails actiondispatch::flash::new()","Rails actiondispatch::http::filterparameters::new()","Rails actiondispatch::http::headers::new()","Rails actiondispatch::http::parameterfilter::new()","Rails actiondispatch::http::parameters::new()","Rails actiondispatch::http::url::new()","Rails actiondispatch::middlewarestack::new()","Rails actiondispatch::middlewarestack::middleware::new()","Rails actiondispatch::paramsparser::new()","Rails actiondispatch::paramsparser::parseerror::new()","Rails actiondispatch::publicexceptions::new()","Rails actiondispatch::railsentitystore::new()","Rails actiondispatch::railsmetastore::new()","Rails actiondispatch::reloader::new()","Rails actiondispatch::remoteip::new()","Rails actiondispatch::remoteip::getip::new()","Rails actiondispatch::request::new()","Rails actiondispatch::requestid::new()","Rails actiondispatch::response::new()","Rails actiondispatch::routing::consoleformatter::new()","Rails actiondispatch::routing::htmltableformatter::new()","Rails actiondispatch::routing::mapper::resources#new()","Rails actiondispatch::routing::urlfor::new()","Rails actiondispatch::ssl::new()","Rails actiondispatch::session::cachestore::new()","Rails actiondispatch::session::compatibility::new()","Rails actiondispatch::session::cookiestore::new()","Rails actiondispatch::session::memcachestore::new()","Rails actiondispatch::showexceptions::new()","Rails actiondispatch::static::new()","Rails actionmailer::base::new()","Rails actionmailer::collector::new()","Rails actionview::dependencytracker::erbtracker::new()","Rails actionview::digestor::new()","Rails actionview::filesystemresolver::new()","Rails actionview::helpers::formbuilder::new()","Rails actionview::helpers::numberhelper::invalidnumbererror::new()","Rails actionview::partialrenderer::new()","Rails actionview::renderer::new()","Rails actionview::resolver::new()","Rails actionview::resolver::cache::smallcache::new()","Rails actionview::resolver::path::new()","Rails actionview::template::new()","Rails actionview::template::types::type::new()","Rails activemodel::errors::new()","Rails activemodel::model::new()","Rails activemodel::name::new()","Rails activemodel::validator::new()","Rails activerecord::associationrelation::new()","Rails activerecord::associations::collectionproxy#new()","Rails activerecord::attributeassignmenterror::new()","Rails activerecord::connectionadapters::abstractadapter::schemacreation::new()","Rails activerecord::connectionadapters::abstractmysqladapter::new()","Rails activerecord::connectionadapters::connectionhandler::new()","Rails activerecord::connectionadapters::connectionmanagement::new()","Rails activerecord::connectionadapters::connectionpool::new()","Rails activerecord::connectionadapters::connectionpool::queue::new()","Rails activerecord::connectionadapters::connectionpool::reaper::new()","Rails activerecord::connectionadapters::databasestatements::new()","Rails activerecord::connectionadapters::mysql2adapter::new()","Rails activerecord::connectionadapters::mysqladapter::new()","Rails activerecord::connectionadapters::mysqladapter::statementpool::new()","Rails activerecord::connectionadapters::postgresqladapter::new()","Rails activerecord::connectionadapters::postgresqladapter::oid::array::new()","Rails activerecord::connectionadapters::postgresqladapter::oid::range::new()","Rails activerecord::connectionadapters::postgresqladapter::oid::typemap::new()","Rails activerecord::connectionadapters::postgresqladapter::oid::vector::new()","Rails activerecord::connectionadapters::postgresqladapter::statementpool::new()","Rails activerecord::connectionadapters::sqlite3adapter::new()","Rails activerecord::connectionadapters::sqlite3adapter::statementpool::new()","Rails activerecord::connectionadapters::sqlite3adapter::version::new()","Rails activerecord::connectionadapters::schemacache::new()","Rails activerecord::connectionadapters::statementpool::new()","Rails activerecord::connectionadapters::table::new()","Rails activerecord::connectionadapters::tabledefinition::new()","Rails activerecord::connectionadapters::transactionstate::new()","Rails activerecord::core::new()","Rails activerecord::dynamicmatchers::method::new()","Rails activerecord::fixtureset::new()","Rails activerecord::inheritance::classmethods#new()","Rails activerecord::logsubscriber::new()","Rails activerecord::migration::new()","Rails activerecord::migration::checkpending::new()","Rails activerecord::migration::commandrecorder::new()","Rails activerecord::migrationproxy::new()","Rails activerecord::multiparameterassignmenterrors::new()","Rails activerecord::querycache::new()","Rails activerecord::querymethods::wherechain::new()","Rails activerecord::reflection::macroreflection::new()","Rails activerecord::relation#new()","Rails activerecord::relation::new()","Rails activerecord::result::new()","Rails activerecord::staleobjecterror::new()","Rails activerecord::statementcache::new()","Rails activerecord::statementinvalid::new()","Rails activerecord::unknownprimarykey::new()","Rails activesupport::backtracecleaner::new()","Rails activesupport::bufferedlogger::new()","Rails activesupport::cache::filestore::new()","Rails activesupport::cache::memcachestore::new()","Rails activesupport::cache::memorystore::new()","Rails activesupport::cache::nullstore::new()","Rails activesupport::cache::store::new()","Rails activesupport::cache::strategy::localcache::localstore::new()","Rails activesupport::cachingkeygenerator::new()","Rails activesupport::concurrency::latch::new()","Rails activesupport::dependencies::classcache::new()","Rails activesupport::dependencies::watchstack::new()","Rails activesupport::deprecation::new()","Rails activesupport::deprecation::deprecatedconstantproxy::new()","Rails activesupport::deprecation::deprecatedinstancevariableproxy::new()","Rails activesupport::deprecation::deprecatedobjectproxy::new()","Rails activesupport::fileupdatechecker::new()","Rails activesupport::filewatcher::new()","Rails activesupport::filewatcher::backend::new()","Rails activesupport::gzip::stream::new()","Rails activesupport::hashwithindifferentaccess::new()","Rails activesupport::hashwithindifferentaccess::new()","Rails activesupport::inflector::inflections::new()","Rails activesupport::inheritableoptions::new()","Rails activesupport::json::encoding::encoder::new()","Rails activesupport::json::variable::new()","Rails activesupport::keygenerator::new()","Rails activesupport::logger::new()","Rails activesupport::messageencryptor::new()","Rails activesupport::messageverifier::new()","Rails activesupport::multibyte::chars::new()","Rails activesupport::multibyte::unicode::unicodedatabase::new()","Rails activesupport::notifications::event::new()","Rails activesupport::notifications::fanout::new()","Rails activesupport::notifications::fanout::subscribers::timed::new()","Rails activesupport::notifications::instrumenter::new()","Rails activesupport::safebuffer::new()","Rails activesupport::safebuffer::safeconcaterror::new()","Rails activesupport::subscriber::new()","Rails activesupport::taggedlogging::new()","Rails activesupport::timewithzone::new()","Rails activesupport::timezone::new()","Rails activesupport::timezone::new()","Rails activesupport::xmlconverter::disallowedtype::new()","Rails build::new()","Rails html::selector::new()","Rails mime::type::new()","Rails rails::api::task::new()","Rails rails::application::new()","Rails rails::application::configuration::new()","Rails rails::application::routesreloader::new()","Rails rails::backtracecleaner::new()","Rails rails::configuration::middlewarestackproxy::new()","Rails rails::console::new()","Rails rails::dbconsole::new()","Rails rails::engine::configuration::new()","Rails rails::engine::railties::new()","Rails rails::generators::activemodel::new()","Rails rails::initializable::initializer::new()","Rails rails::paths::path::new()","Rails rails::paths::root::new()","Rails rails::rack::debugger::new()","Rails rails::rack::logtailer::new()","Rails rails::rack::logger::new()","Rails rails::railtie::configuration::new()","Rails rails::server::new()","Rails sourceannotationextractor::new()","Ruby xmlrpc::client#new2()","Ruby xmlrpc::client#new3()","Ruby irb::methodextender#new_alias_name()","Ruby rdoc::parser::ruby#new_comment()","Ruby monitormixin#new_cond()","Rails activesupport::dependencies::watchstack#new_constants()","Rails activesupport::hashwithindifferentaccess::new_from_hash_copying_default()","Rails activesupport::hashwithindifferentaccess::new_from_hash_copying_default()","Ruby ipaddr::new_ntoh()","Ruby openstruct#new_ostruct_member()","Rails activerecord::persistence#new_record?()","Ruby rake::taskarguments#new_scope()","Ruby random::new_seed()","Rails rails::consolemethods#new_session()","Ruby date#new_start()","Ruby drb::drbobject::new_with()","Ruby drb::drbobject::new_with()","Ruby drb::drbobject::new_with_uri()","Ruby drb::drbobject::new_with_uri()","Ruby rss::utils#new_with_value_if_need()","Ruby net::http::newobj()","Ruby date#next()","Ruby enumerator#next()","Ruby integer#next()","Ruby integer#next()","Ruby prime::eratosthenesgenerator#next()","Ruby prime::generator23#next()","Ruby prime::oldcompatibility#next()","Ruby prime::pseudoprimegenerator#next()","Ruby prime::trialdivisiongenerator#next()","Ruby rexml::validation::choice#next()","Ruby rexml::validation::interleave#next()","Ruby rexml::validation::oneormore#next()","Ruby rexml::validation::optional#next()","Ruby rexml::validation::state#next()","Ruby rexml::validation::zeroormore#next()","Ruby string#next()","Ruby symbol#next()","Ruby string#next!()","Ruby rexml::validation::interleave#next_current()","Ruby date#next_day()","Ruby rexml::element#next_element()","Rails html::selector#next_element()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#next_key()","Rails activerecord::migration#next_migration_number()","Ruby date#next_month()","Rails dateandtime::calculations#next_month()","Rails dateandtime::calculations#next_quarter()","Rails html::selector#next_selector()","Ruby rexml::child#next_sibling=()","Ruby rexml::node#next_sibling_node()","Ruby prime::eratosthenessieve#next_to()","Ruby rdoc::rd::inlineparser#next_token()","Ruby racc::parser#next_token()","Ruby openssl::x509::crl#next_update()","Ruby openssl::x509::crl#next_update=()","Ruby enumerator#next_values()","Ruby threadswait#next_wait()","Ruby threadswait#next_wait()","Rails dateandtime::calculations#next_week()","Ruby rdoc::rd::inlineparser#next_words_on_error()","Ruby date#next_year()","Rails dateandtime::calculations#next_year()","Ruby nilclass#nil?()","Ruby object#nil?()","Rails mime::nulltype#nil?()","Ruby nkf::nkf()","Ruby curses::nl()","Ruby file::stat#nlink()","Ruby newton#nlsolve()","Ruby net::ftp#nlst()","Rails rails::generators::no_color!()","Ruby gem::remotefetcher#no_proxy?()","Rails actiondispatch::routing::consoleformatter#no_routes()","Rails actiondispatch::routing::htmltableformatter#no_routes()","Ruby curses::nocbreak()","Ruby curses::nocrmode()","Ruby nqxml::node#nodename()","Ruby nqxml::node#nodetype()","Ruby nqxml::node#nodevalue()","Ruby rexml::attlistdecl#node_type()","Ruby rexml::attribute#node_type()","Ruby rexml::comment#node_type()","Ruby rexml::doctype#node_type()","Ruby rexml::document#node_type()","Ruby rexml::element#node_type()","Ruby rexml::instruction#node_type()","Ruby rexml::light::node#node_type()","Ruby rexml::text#node_type()","Ruby rexml::xmldecl#node_type()","Ruby curses::window#nodelay=()","Ruby rdoc::stats::verbose#nodoc()","Ruby curses::noecho()","Ruby gem::mockgemui::tty#noecho()","Ruby io#noecho()","Ruby rdoc::classmodule#non_aliases()","Ruby gem::specification::non_nil_attributes()","Rails actioncontroller::httpauthentication::digest#nonce()","Rails activerecord::querymethods#none()","Ruby enumerable#none?()","Ruby gem::requirement#none?()","Ruby gem::requirement#none?()","Ruby curses::nonl()","Ruby bigdecimal#nonzero?()","Ruby numeric#nonzero?()","Ruby net::ftp#noop()","Ruby net::imap#noop()","Ruby curses::noraw()","Ruby newton#norm()","Ruby vector#norm()","Ruby matrix#normal?()","Ruby gem::specification#normalize()","Ruby rdoc::comment#normalize()","Ruby rdoc::markup::verbatim#normalize()","Ruby rexml::parsers::baseparser#normalize()","Ruby rexml::text::normalize()","Ruby rss::maker::itemsbase#normalize()","Ruby rake::win32#normalize()","Ruby uri::generic#normalize()","Ruby vector#normalize()","Rails activesupport::multibyte::chars#normalize()","Rails activesupport::multibyte::unicode#normalize()","Ruby uri::generic#normalize!()","Ruby rdoc::text#normalize_comment()","Rails actiondispatch::routing::mapper::normalize_name()","Ruby webrick::httputils::normalize_path()","Rails actiondispatch::routing::mapper::normalize_path()","Ruby rexml::functions::normalize_space()","Ruby gem::remotefetcher#normalize_uri()","Ruby gem::specification::normalize_yaml_input()","Ruby rexml::entity#normalized()","Ruby rdoc::rdoc#normalized_file_list()","Ruby rexml::functions::not()","Rails activerecord::querymethods::wherechain#not()","Ruby openssl::x509::certificate#not_after()","Ruby openssl::x509::certificate#not_after=()","Ruby openssl::x509::certificate#not_before()","Ruby openssl::x509::certificate#not_before=()","Ruby rdoc::servlet#not_found()","Rails actiondispatch::http::cache::request#not_modified?()","Ruby rss::maker::atom::entry::channel::generator::not_set_name()","Ruby rss::maker::atom::feed::channel::categories::category::not_set_name()","Ruby rss::maker::atom::feed::channel::generator::not_set_name()","Ruby rss::maker::atom::feed::channel::links::link::not_set_name()","Ruby rss::maker::atom::feed::items::item::categories::category::not_set_name()","Ruby rss::maker::atom::feed::items::item::links::link::not_set_name()","Ruby rss::maker::atom::feed::items::item::source::categories::category::not_set_name()","Ruby rss::maker::atom::feed::items::item::source::generator::not_set_name()","Ruby rss::maker::atom::feed::items::item::source::links::link::not_set_name()","Ruby rss::maker::atom::feed::items::item::source::logo::not_set_name()","Ruby rexml::doctype#notation()","Ruby rexml::sax2listener#notationdecl()","Ruby rexml::streamlistener#notationdecl()","Ruby rexml::parsers::pullevent#notationdecl?()","Ruby rexml::doctype#notations()","Ruby rdoc::markdown#note()","Ruby rdoc::markdown#note_for()","Ruby rdoc::markdown#notes()","Rails actiondispatch::flash::flashhash#notice()","Rails actiondispatch::flash::flashhash#notice=()","Ruby rinda::notifytemplateentry#notify()","Ruby rinda::tuplespace#notify()","Ruby rinda::tuplespaceproxy#notify()","Ruby shell::notify()","Ruby shell::commandprocessor#notify()","Ruby shell::systemcommand#notify()","Ruby irb::notifier::abstractnotifier#notify?()","Ruby irb::notifier::levelednotifier#notify?()","Ruby irb::notifier::nomsgnotifier#notify?()","Ruby drb::drbobservable#notify_observers()","Ruby observable#notify_observers()","Ruby curses::pad#noutrefresh()","Ruby curses::window#noutrefresh()","Ruby datetime::now()","Ruby time::now()","Rails actiondispatch::flash::flashhash#now()","Rails activesupport::timezone#now()","Rails actiondispatch::flash::flashhash#now_is_loaded?()","Ruby rexml::xmldecl#nowrite()","Ruby rake::fileutilsext#nowrite()","Ruby openssl::ssl::sslsocket#npn_protocol()","Ruby io#nread()","Ruby time#nsec()","Rails datetime#nsec()","Rails html::selector#nth_child()","Ruby ipaddr::ntop()","Ruby gem::nametuple::null()","Ruby dl::cptr#null?()","Ruby fiddle::pointer#null?()","Ruby queue#num_waiting()","Ruby sizedqueue#num_waiting()","Rails activerecord::connectionadapters::connectionpool::queue#num_waiting()","Ruby rexml::functions::number()","Rails actionview::helpers::formhelper#number_field()","Rails actionview::helpers::formtaghelper#number_field_tag()","Rails actionview::helpers::numberhelper#number_to_currency()","Rails activesupport::numberhelper#number_to_currency()","Rails activesupport::numberhelper#number_to_delimited()","Rails actionview::helpers::numberhelper#number_to_human()","Rails activesupport::numberhelper#number_to_human()","Rails actionview::helpers::numberhelper#number_to_human_size()","Rails activesupport::numberhelper#number_to_human_size()","Rails actionview::helpers::numberhelper#number_to_percentage()","Rails activesupport::numberhelper#number_to_percentage()","Rails actionview::helpers::numberhelper#number_to_phone()","Rails activesupport::numberhelper#number_to_phone()","Rails activesupport::numberhelper#number_to_rounded()","Rails actionview::helpers::numberhelper#number_with_delimiter()","Rails actionview::helpers::numberhelper#number_with_precision()","Ruby complex#numerator()","Ruby float#numerator()","Ruby integer#numerator()","Ruby integer#numerator()","Ruby numeric#numerator()","Ruby rational#numerator()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#numrange()","Rails actionview::helpers::activemodelinstancetag#object()","Ruby pp::ppmethods#object_address_group()","Ruby rdoc::toplevel#object_class()","Ruby pp::ppmethods#object_group()","Ruby object#object_id()","Ruby psych::object_maker()","Ruby string#oct()","Ruby bignum#odd?()","Ruby fixnum#odd?()","Ruby integer#odd?()","Ruby integer#odd?()","Rails activerecord::logsubscriber#odd?()","Ruby rubyvm::instructionsequence::of()","Ruby tracer::off()","Ruby win32ole_event#off_event()","Ruby rdoc::markup::formatter#off_tags()","Ruby rdoc::markup::tohtmlsnippet#off_tags()","Ruby matchdata#offset()","Rails activerecord::querymethods#offset()","Ruby win32ole_method#offset_vtbl()","Ruby io#oflush()","Ruby openssl::asn1::objectid#oid()","Ruby openssl::x509::attribute#oid()","Ruby openssl::x509::extension#oid()","Ruby openssl::x509::attribute#oid=()","Ruby openssl::x509::extension#oid=()","Ruby gem::dependencylist#ok?()","Ruby win32::sspi::sspiresult#ok?()","Ruby gem::dependencylist#ok_to_remove?()","Ruby rexml::xmldecl#old_enc=()","Ruby win32ole#ole_activex_initialize()","Ruby win32ole_type::ole_classes()","Ruby win32ole_typelib#ole_classes()","Ruby win32ole#ole_free()","Ruby win32ole::ole_free()","Ruby win32ole#ole_func_methods()","Ruby win32ole#ole_get_methods()","Ruby win32ole::ole_initialize()","Ruby win32ole#ole_method()","Ruby win32ole#ole_method_help()","Ruby win32ole#ole_methods()","Ruby win32ole_type#ole_methods()","Ruby win32ole#ole_obj_help()","Ruby win32ole#ole_put_methods()","Ruby win32ole#ole_query_interface()","Ruby win32ole::ole_reference_count()","Ruby win32ole#ole_respond_to?()","Ruby win32ole::ole_show_help()","Ruby win32ole#ole_type()","Ruby win32ole_param#ole_type()","Ruby win32ole_type#ole_type()","Ruby win32ole_variable#ole_type()","Ruby win32ole_param#ole_type_detail()","Ruby win32ole_variable#ole_type_detail()","Ruby win32ole#ole_typelib()","Ruby win32ole_type#ole_typelib()","Ruby win32ole_typelib#ole_types()","Ruby win32ole::ole_uninitialize()","Ruby optionparser#on()","Ruby tracer::on()","Ruby rss::xmlscanlistener#on_attr_charref()","Ruby rss::xmlscanlistener#on_attr_charref_hex()","Ruby rss::xmlscanlistener#on_attr_entityref()","Ruby rss::xmlscanlistener#on_attr_value()","Ruby rss::xmlscanlistener#on_attribute()","Ruby xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_cdata()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_cdata_block()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_characters()","Ruby xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_chardata()","Ruby rss::xmlscanlistener#on_charref()","Ruby xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_charref()","Ruby rss::xmlscanlistener#on_charref_hex()","Ruby xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_charref_hex()","Ruby openssl::pkey::ec::point#on_curve?()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_end_document()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_end_element()","Ruby rss::xmlscanlistener#on_entityref()","Ruby xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_entityref()","Ruby rdoc::rd::blockparser#on_error()","Ruby rdoc::rd::inlineparser#on_error()","Ruby racc::parser#on_error()","Ruby rss::xmlscanlistener#on_etag()","Ruby win32ole_event#on_event()","Ruby win32ole_event#on_event_with_outargs()","Ruby optionparser#on_head()","Rails activesupport::on_load()","Ruby rss::xmlscanlistener#on_stag()","Ruby rss::xmlscanlistener#on_stag_end()","Ruby xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_stag_end()","Ruby rss::xmlscanlistener#on_stag_end_empty()","Ruby xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#on_stag_end_empty()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_start_document()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_start_element()","Ruby rdoc::markup::formatter#on_tags()","Ruby rdoc::markup::tohtmlsnippet#on_tags()","Ruby optionparser#on_tail()","Ruby rss::xmlscanlistener#on_xmldecl_encoding()","Ruby rss::xmlscanlistener#on_xmldecl_end()","Ruby rss::xmlscanlistener#on_xmldecl_standalone()","Ruby rss::xmlscanlistener#on_xmldecl_version()","Ruby enumerable#one?()","Ruby rdoc::context#ongoing_visibility=()","Rails activerecord::spawnmethods#only()","Rails html::selector#only_child()","Rails actioncontroller::httpauthentication::digest#opaque()","Ruby uri::generic#opaque=()","Ruby csv::open()","Ruby dbm::open()","Ruby drb::drbprotocol::open()","Ruby drb::drbsslsocket::open()","Ruby dir::open()","Ruby file::open()","Ruby gdbm::open()","Ruby io::open()","Ruby kernel::open()","Ruby net::ftp::open()","Ruby openuri::openread#open()","Ruby pty::open()","Ruby pathname#open()","Ruby resolv::dns::open()","Ruby sdbm::open()","Ruby shell::commandprocessor#open()","Ruby stringio::open()","Ruby syslog::open()","Ruby tempfile#open()","Ruby win32::registry#open()","Ruby win32::registry::open()","Ruby zlib::gzipreader::open()","Ruby zlib::gzipwriter::open()","Rails actiondispatch::http::uploadedfile#open()","Rails actiondispatch::railsentitystore#open()","Ruby syslog::open!()","Ruby win32::registry#open?()","Ruby net::smtp#open_message_stream()","Ruby drb::drbprotocol::open_server()","Ruby drb::drbsslsocket::open_server()","Rails activerecord::connectionadapters::abstractadapter#open_transactions()","Ruby pathname#opendir()","Ruby syslog::opened?()","Rails rails::server#opt_parser()","Rails actiondispatch::routing::urlfor#optimize_routes_generation?()","Rails actionview::helpers::formoptionshelper#option_groups_from_collection_for_select()","Ruby rdoc::task#option_list()","Ruby win32ole_param#optional?()","Rails actiondispatch::http::url#optional_port()","Ruby net::http#options()","Ruby optionparser::arguable#options()","Ruby rake::application#options()","Ruby rake::application#options()","Ruby regexp#options()","Ruby syslog::options()","Ruby optionparser::arguable#options=()","Rails activesupport::json::encoding::encoder#options_for()","Rails actionview::helpers::formoptionshelper#options_for_select()","Rails actionview::helpers::formoptionshelper#options_from_collection_for_select()","Rails activerecord::connectionadapters::schemastatements#options_include_default?()","Ruby socket::option#optname()","Ruby integer#ord()","Ruby integer#ord()","Ruby string#ord()","Ruby openssl::pkey::ec::group#order()","Ruby optionparser#order()","Rails activerecord::querymethods#order()","Ruby optionparser#order!()","Ruby optionparser::arguable#order!()","Ruby getoptlong#ordering=()","Ruby date::ordinal()","Ruby datetime::ordinal()","Rails activesupport::inflector#ordinal()","Rails integer#ordinal()","Rails activesupport::inflector#ordinalize()","Rails integer#ordinalize()","Ruby rdoc::markdown#orig_initialize()","Ruby zlib::gzipfile#orig_name()","Ruby zlib::gzipwriter#orig_name=()","Rails activesupport::safebuffer#original_concat()","Ruby rake#original_dir()","Rails actiondispatch::request#original_fullpath()","Rails actiondispatch::request#original_url()","Ruby matrix#orthogonal?()","Ruby zlib::gzipfile#os_code()","Ruby rss::maker::base#other_elements()","Ruby gem::dependencyresolver::activationrequest#others_possible?()","Ruby cgi#out()","Ruby shell::commandprocessor#out()","Ruby rss::atom::feed::entry::content#out_of_line?()","Ruby rss::maker::itemsbase::itembase::contentbase#out_of_line?()","Ruby gem::specification::outdated()","Ruby gem::mockgemui#output()","Ruby prettyprint::breakable#output()","Ruby prettyprint::text#output()","Ruby readline::output=()","Ruby win32ole_param#output?()","Ruby rss::rootelementmixin#output_encoding=()","Ruby rdoc::rdoc#output_flag_file()","Ruby rdoc::methodattr#output_name()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#outside_transaction?()","Rails range#overlaps?()","Ruby file::owned?()","Ruby file::stat#owned?()","Ruby filetest#owned?()","Ruby mutex#owned?()","Ruby pathname#owned?()","Ruby method#owner()","Ruby unboundmethod#owner()","Ruby kernel#p()","Ruby matrix::lupdecomposition#p()","Ruby array#pack()","Ruby dl::packer#pack()","Ruby dl::stack#pack()","Rails activesupport::multibyte::unicode#pack_graphemes()","Ruby socket::pack_sockaddr_in()","Ruby socket::pack_sockaddr_un()","Ruby rake::packagetask#package_dir_path()","Ruby rake::packagetask#package_name()","Ruby win32::registry::api#packdw()","Ruby win32::registry::api#packqw()","Ruby openssl::cipher#padding=()","Ruby rdoc::ri::driver#page()","Ruby rdoc::store#page()","Rails actioncontroller::caching::page_cache_extension()","Rails actioncontroller::caching::page_cache_extension=()","Ruby rdoc::store#page_file()","Ruby rdoc::toplevel#page_name()","Ruby rdoc::ri::driver#paging?()","Ruby socket::pair()","Ruby unixsocket::pair()","Ruby curses::pair_content()","Ruby curses::pair_number()","Ruby rdoc::markdown#paragraph()","Ruby rdoc::rd::blockparser#paragraph()","Rails activemodel::naming::param_key()","Ruby rdoc::anymethod#param_list()","Ruby rdoc::anymethod#param_seq()","Rails actiondispatch::http::filterparameters#parameter_filter()","Rails actiondispatch::http::filterparameters#parameter_filter_for()","Rails activesupport::inflector#parameterize()","Rails string#parameterize()","Ruby method#parameters()","Ruby proc#parameters()","Ruby unboundmethod#parameters()","Rails actiondispatch::http::parameters#parameters()","Ruby openssl::pkey::dh#params()","Ruby openssl::pkey::dsa#params()","Ruby openssl::pkey::rsa#params()","Ruby openssl::pkey::rsa#params()","Ruby win32ole_method#params()","Ruby zlib::deflate#params()","Rails actioncontroller::metal#params()","Rails actioncontroller::strongparameters#params()","Rails actiondispatch::http::parameters#params()","Ruby cgi::queryextension#params=()","Rails actioncontroller::metal#params=()","Rails actioncontroller::strongparameters#params=()","Rails actioncontroller::httpauthentication::token#params_array_from()","Ruby openssl::pkey::dh#params_ok?()","Ruby gem::indexer#paranoid()","Ruby gem::dependencyresolver::activationrequest#parent()","Ruby pathname#parent()","Ruby rdoc::codeobject#parent()","Ruby rexml::light::node#parent()","Rails module#parent()","Ruby rexml::child#parent=()","Ruby rexml::light::node#parent=()","Ruby rexml::text#parent=()","Ruby rexml::node#parent?()","Ruby rexml::parent#parent?()","Ruby rdoc::codeobject#parent_file_name()","Ruby rdoc::codeobject#parent_name()","Ruby rdoc::methodattr#parent_name()","Rails module#parent_name()","Rails activesupport::notifications::event#parent_of?()","Rails abstractcontroller::viewpaths::classmethods#parent_prefixes()","Rails module#parents()","Ruby cgi::parse()","Ruby cgi::cookie::parse()","Ruby csv::parse()","Ruby date::parse()","Ruby datetime::parse()","Ruby gem::requirement::parse()","Ruby gem::requirement::parse()","Ruby json#parse()","Ruby net::smtp::response::parse()","Ruby openssl::config#parse()","Ruby optionparser#parse()","Ruby optionparser::switch::noargument#parse()","Ruby optionparser::switch::optionalargument#parse()","Ruby optionparser::switch::placedargument#parse()","Ruby optionparser::switch::requiredargument#parse()","Ruby psych::parse()","Ruby rdoc::classmodule#parse()","Ruby rdoc::comment#parse()","Ruby rdoc::context::section#parse()","Ruby rdoc::markdown#parse()","Ruby rdoc::markdown::parse()","Ruby rdoc::markup::parse()","Ruby rdoc::markup::parser#parse()","Ruby rdoc::markup::parser::parse()","Ruby rdoc::options#parse()","Ruby rdoc::rd::parse()","Ruby rdoc::rd::blockparser#parse()","Ruby rdoc::rd::inlineparser#parse()","Ruby rdoc::text#parse()","Ruby rdoc::tomdoc::parse()","Ruby rexml::dtd::parser::parse()","Ruby rexml::parsers::lightparser#parse()","Ruby rexml::parsers::sax2parser#parse()","Ruby rexml::parsers::streamparser#parse()","Ruby rexml::parsers::treeparser#parse()","Ruby rexml::parsers::ultralightparser#parse()","Ruby rexml::parsers::xpathparser#parse()","Ruby rexml::xpathparser#parse()","Ruby rss::baseparser#parse()","Ruby rss::itunesitemmodel::itunesduration#parse()","Ruby rss::parser#parse()","Ruby rss::utils::csv#parse()","Ruby rss::utils::yescleanother#parse()","Ruby rss::utils::yesother#parse()","Ruby ripper::parse()","Ruby ripper::filter#parse()","Ruby time#parse()","Ruby uri::parse()","Ruby uri::parser#parse()","Ruby webrick::cookie::parse()","Ruby webrick::httprequest#parse()","Ruby xmlrpc::xmlparser::nqxmlstreamparser::xmlrpcparser#parse()","Ruby xmlrpc::xmlparser::rexmlstreamparser::streamlistener#parse()","Ruby xmlrpc::xmlparser::xmlscanstreamparser::xmlscanparser#parse()","Rails activesupport::timezone#parse()","Rails mime::type::parse()","Ruby json#parse!()","Ruby optionparser#parse!()","Ruby optionparser::arguable#parse!()","Rails rails::server::options#parse!()","Ruby xmlrpc::xmlparser::abstractstreamparser#parsemethodcall()","Ruby xmlrpc::xmlparser::abstracttreeparser#parsemethodcall()","Ruby xmlrpc::xmlparser::abstractstreamparser#parsemethodresponse()","Ruby xmlrpc::xmlparser::abstracttreeparser#parsemethodresponse()","Ruby rdoc::parser::ruby#parse_alias()","Ruby rexml::quickpath::parse_args()","Rails rails::console::parse_arguments()","Rails rails::dbconsole#parse_arguments()","Ruby rdoc::parser::ruby#parse_attr()","Ruby rdoc::parser::ruby#parse_attr_accessor()","Ruby rdoc::parser::ruby#parse_call_parameters()","Ruby rdoc::parser::ruby#parse_class()","Ruby rdoc::parser::ruby#parse_comment()","Ruby rdoc::parser::ruby#parse_comment_tomdoc()","Ruby openssl::config#parse_config()","Ruby rdoc::parser::ruby#parse_constant()","Ruby xmlrpc::parsecontenttype#parse_content_type()","Ruby dl::cparser#parse_ctype()","Ruby fiddle::cparser#parse_ctype()","Rails mime::type::parse_data_with_trailing_star()","Ruby rdoc::rdoc#parse_dot_doc_file()","Ruby rdoc::parser::changelog#parse_entries()","Rails activesupport::json::parse_error()","Ruby rdoc::parser::ruby#parse_extend()","Ruby psych::parse_file()","Ruby rdoc::rdoc#parse_file()","Ruby rdoc::rdoc#parse_files()","Ruby rdoc::parser::parse_files_matching()","Ruby webrick::httputils::parse_form_data()","Ruby webrick::httputils::parse_header()","Ruby rexml::dtd::parser::parse_helper()","Ruby rdoc::parser::ruby#parse_include()","Ruby psych::scalarscanner#parse_int()","Ruby csv::parse_line()","Ruby rdoc::parser::ruby#parse_meta_attr()","Ruby rdoc::parser::ruby#parse_meta_method()","Ruby rdoc::parser::ruby#parse_method()","Ruby rdoc::parser::ruby#parse_method_dummy()","Ruby rdoc::parser::ruby#parse_method_or_yield_parameters()","Ruby rdoc::parser::ruby#parse_method_parameters()","Ruby rdoc::parser::ruby#parse_module()","Ruby rdoc::ri::driver#parse_name()","Ruby openssl::x509::name#parse_openssl()","Ruby irb::outputmethod#parse_printf_format()","Ruby webrick::httputils::parse_query()","Rails actiondispatch::request#parse_query()","Ruby webrick::httputils::parse_qvalues()","Ruby webrick::httputils::parse_range_header()","Ruby rdoc::parser::ruby#parse_require()","Ruby rdoc::parser::ruby#parse_rescue()","Ruby openssl::x509::name#parse_rfc2253()","Ruby webrick::cookie::parse_set_cookie()","Ruby webrick::cookie::parse_set_cookies()","Ruby dl::cparser#parse_signature()","Ruby fiddle::cparser#parse_signature()","Ruby rexml::dtd::entitydecl::parse_source()","Ruby rexml::dtd::notationdecl::parse_source()","Ruby rdoc::parser::ruby#parse_statements()","Ruby psych::parse_stream()","Ruby rexml::document::parse_stream()","Ruby dl::cparser#parse_struct_signature()","Ruby fiddle::cparser#parse_struct_signature()","Ruby rdoc::parser::ruby#parse_symbol_arg()","Ruby rdoc::parser::ruby#parse_symbol_in_arg()","Ruby rake::application#parse_task_string()","Ruby rake::application#parse_task_string()","Ruby psych::scalarscanner#parse_time()","Ruby rdoc::parser::ruby#parse_top_level_statements()","Rails mime::type::parse_trailing_star()","Ruby rdoc::markup::formatter#parse_url()","Ruby rdoc::parser::ruby#parse_visibility()","Ruby rdoc::parser::ruby#parse_yield()","Ruby rdoc::markup::tohtml#parseable?()","Ruby psych::parser()","Ruby uri::generic#parser()","Rails uri::parser()","Ruby enumerable#partition()","Ruby string#partition()","Ruby thread::pass()","Ruby etc::passwd()","Ruby uri::generic#password()","Ruby uri::generic#password=()","Ruby xmlrpc::client#password=()","Rails activemodel::securepassword::classmethods::instancemethodsonactivation#password=()","Rails activemodel::securepassword::classmethods::instancemethodsonactivation#password_confirmation=()","Ruby cgi::htmlextension#password_field()","Rails actionview::helpers::formhelper#password_field()","Rails actionview::helpers::formtaghelper#password_field_tag()","Rails activesupport::timewithzone#past?()","Rails dateandtime::calculations#past?()","Rails datetime#past?()","Ruby net::http#patch()","Rails actiondispatch::routing::mapper::httphelpers#patch()","Rails actiondispatch::request#patch?()","Ruby argf#path()","Ruby dir#path()","Ruby file::path()","Ruby file#path()","Ruby gem::path()","Ruby pstore#path()","Ruby rdoc::classmodule#path()","Ruby rdoc::constant#path()","Ruby rdoc::methodattr#path()","Ruby rdoc::ri::paths::path()","Ruby rdoc::toplevel#path()","Ruby rake::ftpfile#path()","Ruby rubyvm::instructionsequence#path()","Ruby tempfile#path()","Ruby thread::backtrace::location#path()","Ruby tracepoint#path()","Ruby unixsocket#path()","Ruby uri::ftp#path()","Ruby win32ole_typelib#path()","Rails actiondispatch::http::uploadedfile#path()","Rails actiondispatch::routing::pathredirect#path()","Rails actiondispatch::routing::routewrapper#path()","Rails loaderror#path()","Rails loaderror#path()","Ruby uri::generic#path=()","Ruby gem::uninstaller#path_ok?()","Rails actiondispatch::http::parameters#path_parameters()","Ruby gem::path_separator()","Rails actionview::helpers::asseturlhelper#path_to_asset()","Rails actionview::helpers::asseturlhelper#path_to_audio()","Rails actionview::helpers::asseturlhelper#path_to_font()","Rails actionview::helpers::asseturlhelper#path_to_image()","Rails actionview::helpers::asseturlhelper#path_to_javascript()","Rails actionview::helpers::asseturlhelper#path_to_stylesheet()","Rails actionview::helpers::asseturlhelper#path_to_video()","Ruby string#pathmap()","Ruby string#pathmap_explode()","Ruby string#pathmap_partial()","Ruby string#pathmap_replace()","Ruby gem::paths()","Rails rails::application::configuration#paths()","Rails rails::engine::configuration#paths()","Ruby gem::paths=()","Ruby optionparser::switch::pattern()","Ruby optionparser::switch::noargument::pattern()","Rails activerecord::dynamicmatchers::method::pattern()","Ruby openssl::pkcs5::pbkdf2_hmac()","Ruby openssl::pkcs5::pbkdf2_hmac_sha1()","Ruby enumerator#peek()","Ruby rexml::parsers::baseparser#peek()","Ruby rexml::parsers::pullparser#peek()","Ruby stringscanner#peek()","Ruby rdoc::parser::rubytools#peek_read()","Ruby rdoc::parser::rubytools#peek_tk()","Ruby rdoc::markup::parser#peek_token()","Ruby enumerator#peek_values()","Ruby stringscanner#peep()","Ruby net::http#peer_cert()","Ruby openssl::ssl::sslsocket#peer_cert()","Ruby openssl::ssl::sslsocket#peer_cert_chain()","Ruby ipsocket#peeraddr()","Ruby unixsocket#peeraddr()","Ruby rdoc::markdown#peg_parse()","Ruby gem::commands::setupcommand#pem_files_in()","Ruby openssl::ssl::sslsocket#pending()","Ruby thread::pending_interrupt?()","Ruby thread#pending_interrupt?()","Ruby rdoc::stats#percent_doc()","Rails actioncontroller::metal#performed?()","Rails activesupport::timewithzone#period()","Rails activesupport::timezone#period_for_local()","Rails activesupport::timezone#period_for_utc()","Rails actiondispatch::cookies::chainedcookiejars#permanent()","Ruby rss::maker::itemsbase::itembase::guidbase#permanent_link=()","Ruby rss::maker::itemsbase::itembase::guidbase#permanent_link?()","Rails actioncontroller::parameters#permit()","Rails actioncontroller::parameters#permit!()","Rails actioncontroller::parameters#permitted?()","Ruby array#permutation()","Ruby matrix#permutation?()","Ruby optionparser#permute()","Ruby optionparser#permute!()","Ruby optionparser::arguable#permute!()","Rails activemodel::model#persisted?()","Rails activerecord::persistence#persisted?()","Rails numeric#petabyte()","Rails numeric#petabytes()","Ruby addrinfo#pfamily()","Ruby complex#phase()","Ruby float#phase()","Ruby numeric#phase()","Rails actionview::helpers::formhelper#phone_field()","Rails actionview::helpers::formtaghelper#phone_field_tag()","Ruby xmlrpc::xmlwriter::simple#pi()","Ruby xmlrpc::xmlwriter::xmlparser#pi()","Ruby gem::availableset#pick_best!()","Ruby io#pid()","Ruby process::pid()","Ruby process::status#pid()","Ruby stringio#pid()","Ruby io::pipe()","Ruby file::pipe?()","Ruby file::stat#pipe?()","Ruby filetest#pipe?()","Ruby pathname#pipe?()","Ruby open3::pipeline()","Ruby open3::pipeline_r()","Ruby open3::pipeline_rw()","Ruby open3::pipeline_start()","Ruby open3::pipeline_w()","Rails activerecord::connectionadapters::abstractmysqladapter#pk_and_sequence_for()","Ruby openssl::cipher#pkcs5_keyivgen()","Ruby rdoc::context::section#plain_html()","Ruby gem::requestset::gemdepedencyapi#platform()","Ruby gem::specification#platform()","Ruby gem::specification#platform=()","Ruby gem::platforms()","Ruby gem::requestset::gemdepedencyapi#platforms()","Ruby gem::platforms=()","Rails activerecord::calculations#pluck()","Rails activemodel::naming::plural()","Rails activesupport::inflector::inflections#plural()","Rails rails::generators::namedbase#plural_file_name()","Ruby rss::element#plural_forms()","Rails rails::generators::namedbase#plural_name()","Rails rails::generators::namedbase#plural_table_name()","Rails actionview::helpers::texthelper#pluralize()","Rails activesupport::inflector#pluralize()","Rails string#pluralize()","Rails rails::generators::namedbase#pluralize_table_names?()","Ruby readline::point()","Ruby openssl::pkey::ec::group#point_conversion_form()","Ruby openssl::pkey::ec::group#point_conversion_form=()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#point_to_string()","Ruby stringscanner#pointer()","Ruby stringscanner#pointer=()","Ruby complex::polar()","Ruby complex#polar()","Ruby numeric#polar()","Rails activerecord::connectionadapters::connectionpool::queue#poll()","Rails actiondispatch::routing::polymorphicroutes#polymorphic_path()","Rails actiondispatch::routing::polymorphicroutes#polymorphic_url()","Ruby array#pop()","Ruby net::popmail#pop()","Ruby queue#pop()","Ruby rinda::notifytemplateentry#pop()","Ruby sizedqueue#pop()","Ruby pp::ppmethods#pop_inspect_key()","Ruby rdoc::tokenstream#pop_token()","Ruby irb::context#pop_workspace()","Ruby shell#popd()","Ruby shell#popdir()","Ruby io::popen()","Ruby open3::popen2()","Ruby open3::popen2e()","Ruby open3::popen3()","Rails activerecord::scoping#populate_with_current_scope_attributes()","Ruby cgi::htmlextension#popup_menu()","Ruby net::pop3#port()","Ruby webrick::httprequest#port()","Rails actiondispatch::http::url#port()","Ruby uri::generic#port=()","Rails actiondispatch::http::url#port_string()","Ruby argf#pos()","Ruby dir#pos()","Ruby gem::package::tarreader::entry#pos()","Ruby io#pos()","Ruby stringio#pos()","Ruby stringscanner#pos()","Ruby zlib::gzipreader#pos()","Ruby zlib::gzipwriter#pos()","Ruby argf#pos=()","Ruby dir#pos=()","Ruby io#pos=()","Ruby stringio#pos=()","Ruby stringscanner#pos=()","Ruby rexml::functions::position()","Ruby rexml::iosource#position()","Ruby rexml::parseexception#position()","Ruby rexml::parsers::baseparser#position()","Ruby rexml::source#position()","Ruby net::http#post()","Rails actiondispatch::routing::mapper::httphelpers#post()","Ruby net::http#post2()","Rails actiondispatch::request#post?()","Ruby gem::post_build()","Ruby net::http::post_form()","Ruby gem::post_install()","Ruby matchdata#post_match()","Ruby stringscanner#post_match()","Ruby rdoc::markup::preprocess::post_process()","Ruby rdoc::markup::preprocess::post_processors()","Ruby gem::post_reset()","Ruby gem::post_uninstall()","Rails activerecord::connectionadapters::postgresqladapter#postgresql_version()","Ruby bigdecimal#power()","Ruby bignum#power!()","Ruby fixnum#power!()","Ruby float#power!()","Ruby irb::notifier::abstractnotifier#pp()","Ruby irb::outputmethod#pp()","Ruby kernel#pp()","Ruby kernel::pp()","Ruby pp::pp()","Ruby pp::ppmethods#pp()","Ruby pp::ppmethods#pp_hash()","Ruby pp::ppmethods#pp_object()","Ruby process::ppid()","Ruby irb::notifier::abstractnotifier#ppx()","Ruby irb::outputmethod#ppx()","Ruby readline::pre_input_hook()","Ruby readline::pre_input_hook=()","Ruby gem::pre_install()","Ruby gem::installer#pre_install_checks()","Ruby matchdata#pre_match()","Ruby stringscanner#pre_match()","Ruby gem::pre_reset()","Ruby gem::pre_uninstall()","Ruby ","Ruby bigdecimal#precs()","Ruby integer#pred()","Ruby integer#pred()","Ruby rexml::parsers::xpathparser#predicate()","Ruby rexml::quickpath::predicate()","Ruby rexml::xpathparser#predicate()","Ruby rexml::parsers::xpathparser#predicate_to_string()","Ruby gem::dependencyresolver::apiset#prefetch()","Ruby gem::dependencyresolver::currentset#prefetch()","Ruby gem::dependencyresolver::indexset#prefetch()","Rails activerecord::connectionadapters::abstractadapter#prefetch_primary_key?()","Ruby gem::prefix()","Ruby rexml::attribute#prefix()","Ruby rexml::light::node#prefix()","Rails activerecord::dynamicmatchers::findby::prefix()","Rails activerecord::dynamicmatchers::findbybang::prefix()","Rails activerecord::dynamicmatchers::method::prefix()","Ruby rexml::element#prefixes()","Rails activerecord::querymethods#preload()","Rails actiondispatch::reloader::prepare!()","Rails actiondispatch::response#prepare!()","Rails activerecord::connectionadapters::columndumper#prepare_column_options()","Rails activerecord::connectionadapters::postgresqladapter#prepare_column_options()","Ruby optionparser::list#prepend()","Ruby string#prepend()","Rails abstractcontroller::callbacks::classmethods#prepend_after_action()","Rails abstractcontroller::callbacks::classmethods#prepend_around_action()","Rails abstractcontroller::callbacks::classmethods#prepend_before_action()","Rails abstractcontroller::viewpaths#prepend_view_path()","Rails abstractcontroller::viewpaths::classmethods#prepend_view_path()","Ruby net::telnet#preprocess()","Ruby gem::dependency#prerelease?()","Ruby gem::nametuple#prerelease?()","Ruby gem::requirement#prerelease?()","Ruby gem::requirement#prerelease?()","Ruby gem::version#prerelease?()","Ruby rake::task#prerequisite_tasks()","Rails object#presence()","Rails object#present?()","Ruby cgi::pretty()","Ruby json#pretty_generate()","Ruby kernel#pretty_inspect()","Ruby rdoc::alias#pretty_name()","Ruby rdoc::methodattr#pretty_name()","Ruby rdoc::alias#pretty_new_name()","Ruby rdoc::alias#pretty_old_name()","Ruby array#pretty_print()","Ruby env#pretty_print()","Ruby file::stat#pretty_print()","Ruby hash#pretty_print()","Ruby matchdata#pretty_print()","Ruby object#pretty_print()","Ruby pp::objectmixin#pretty_print()","Ruby range#pretty_print()","Ruby struct#pretty_print()","Rails activerecord::relation#pretty_print()","Ruby array#pretty_print_cycle()","Ruby hash#pretty_print_cycle()","Ruby object#pretty_print_cycle()","Ruby pp::objectmixin#pretty_print_cycle()","Ruby struct#pretty_print_cycle()","Ruby pp::objectmixin#pretty_print_inspect()","Ruby pp::objectmixin#pretty_print_instance_variables()","Ruby date#prev_day()","Ruby date#prev_month()","Rails dateandtime::calculations#prev_month()","Rails dateandtime::calculations#prev_quarter()","Rails dateandtime::calculations#prev_week()","Ruby rdoc::rd::inlineparser#prev_words_on_error()","Ruby date#prev_year()","Rails dateandtime::calculations#prev_year()","Ruby rexml::validation::state#previous=()","Rails activemodel::dirty#previous_changes()","Ruby rexml::element#previous_element()","Ruby rexml::child#previous_sibling=()","Ruby rexml::node#previous_sibling_node()","Ruby rinda::ringfinger::primary()","Rails activerecord::attributemethods::primarykey::classmethods#primary_key()","Rails activerecord::connectionadapters::abstractmysqladapter#primary_key()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#primary_key()","Rails activerecord::connectionadapters::postgresqladapter::tabledefinition#primary_key()","Rails activerecord::connectionadapters::tabledefinition#primary_key()","Rails activerecord::attributemethods::primarykey::classmethods#primary_key=()","Rails activerecord::connectionadapters::schemacache#primary_keys()","Ruby integer#prime?()","Ruby integer#prime?()","Ruby openssl::bn#prime?()","Ruby prime#prime?()","Ruby integer#prime_division()","Ruby integer#prime_division()","Ruby prime#prime_division()","Ruby openssl::bn#prime_fasttest?()","Ruby prime::trialdivision#primes()","Ruby prime::trialdivision#primes_so_far()","Ruby encoding::converter#primitive_convert()","Ruby encoding::converter#primitive_errinfo()","Ruby argf#print()","Ruby cgi#print()","Ruby io#print()","Ruby io::writable#print()","Ruby irb::locale#print()","Ruby irb::notifier::abstractnotifier#print()","Ruby irb::outputmethod#print()","Ruby irb::stdiooutputmethod#print()","Ruby kernel#print()","Ruby net::internetmessageio::writeadapter#print()","Ruby net::telnet#print()","Ruby openssl::buffering#print()","Ruby zlib::gzipwriter#print()","Ruby rdoc::stats::quiet#print_alias()","Ruby rdoc::stats::quiet#print_attribute()","Ruby rdoc::stats::quiet#print_class()","Ruby rdoc::stats::quiet#print_constant()","Ruby gem::commands::dependencycommand#print_dependencies()","Ruby rdoc::stats::normal#print_file()","Ruby rdoc::stats::quiet#print_file()","Ruby rdoc::stats::quiet#print_method()","Ruby rdoc::stats::quiet#print_module()","Ruby profiler__#print_profile()","Ruby rake::application#print_rakefile_directory()","Ruby rake::application#print_rakefile_directory()","Ruby irb::print_usage()","Ruby argf#printf()","Ruby io#printf()","Ruby io::writable#printf()","Ruby irb::locale#printf()","Ruby irb::notifier::abstractnotifier#printf()","Ruby irb::outputmethod#printf()","Ruby kernel#printf()","Ruby net::internetmessageio::writeadapter#printf()","Ruby openssl::buffering#printf()","Ruby zlib::gzipwriter#printf()","Ruby irb::notifier::abstractnotifier#printn()","Ruby irb::outputmethod#printn()","Ruby thread#priority()","Ruby thread#priority=()","Ruby openssl::pkey::dh#private?()","Ruby openssl::pkey::dsa#private?()","Ruby openssl::pkey::rsa#private?()","Ruby openssl::pkey::rsa#private?()","Ruby module#private_class_method()","Ruby module#private_constant()","Ruby openssl::pkey::rsa#private_decrypt()","Ruby openssl::pkey::rsa#private_decrypt()","Ruby openssl::pkey::rsa#private_encrypt()","Ruby openssl::pkey::rsa#private_encrypt()","Ruby module#private_instance_methods()","Ruby openssl::pkey::ec#private_key()","Ruby openssl::pkey::ec#private_key=()","Ruby openssl::pkey::ec#private_key?()","Ruby module#private_method_defined?()","Ruby object#private_methods()","Ruby kernel#proc()","Ruby net::imap::crammd5authenticator#process()","Ruby net::imap::digestmd5authenticator#process()","Ruby net::imap::loginauthenticator#process()","Ruby net::imap::plainauthenticator#process()","Ruby xmlrpc::basicserver#process()","Rails abstractcontroller::base#process()","Rails actioncontroller::live#process()","Rails actioncontroller::middleware#process()","Rails abstractcontroller::callbacks#process_action()","Rails actioncontroller::instrumentation#process_action()","Rails actioncontroller::logsubscriber#process_action()","Rails actioncontroller::paramswrapper#process_action()","Ruby gem::commandmanager#process_args()","Ruby rdoc::ri::driver::process_args()","Rails html::whitelistsanitizer#process_attributes_for()","Ruby rdoc::parser::process_directive()","Rails html::fullsanitizer#process_node()","Rails html::linksanitizer#process_node()","Rails html::sanitizer#process_node()","Rails html::whitelistsanitizer#process_node()","Ruby gem::installer#process_options()","Ruby rss::rexmllikexmlparser#processinginstruction()","Ruby rexml::functions::processing_instruction()","Ruby rexml::sax2listener#processing_instruction()","Ruby array#product()","Ruby win32ole_type#progid()","Ruby win32ole_type::progids()","Ruby optionparser#program_name()","Ruby rexml::sax2listener#progress()","Ruby gem::silentui#progress_reporter()","Ruby gem::streamui#progress_reporter()","Ruby irb::context#prompt_mode=()","Ruby irb::context#prompting?()","Ruby set#proper_subset?()","Ruby set#proper_superset?()","Rails rails::info::property()","Ruby net::http#propfind()","Ruby net::http#proppatch()","Rails actioncontroller::requestforgeryprotection#protect_against_forgery?()","Rails actioncontroller::requestforgeryprotection::classmethods#protect_from_forgery()","Ruby module#protected_instance_methods()","Ruby module#protected_method_defined?()","Ruby delegator#protected_methods()","Ruby object#protected_methods()","Ruby addrinfo#protocol()","Rails actiondispatch::http::url#protocol()","Ruby rinda::ringprovider#provide()","Rails actionview::helpers::capturehelper#provide()","Ruby xmlrpc::client#proxy()","Ruby xmlrpc::client#proxy2()","Ruby xmlrpc::client#proxy2_async()","Ruby net::http#proxy?()","Ruby net::http#proxy_address()","Rails activerecord::associationrelation#proxy_association()","Rails activerecord::associations::collectionproxy#proxy_association()","Ruby xmlrpc::client#proxy_async()","Ruby win32::sspi::negotiateauth::proxy_auth_get()","Ruby net::httpheader#proxy_basic_auth()","Ruby webrick::httpauth#proxy_basic_auth()","Rails activesupport::multibyte::proxy_class()","Rails activesupport::multibyte::proxy_class=()","Ruby net::http#proxy_class?()","Ruby net::http#proxy_from_env?()","Ruby net::http#proxy_pass()","Ruby net::http#proxy_port()","Ruby net::http#proxy_user()","Ruby net::http#proxyaddr()","Ruby net::http#proxyport()","Ruby find::prune()","Rails activesupport::cache::memorystore#prune()","Rails activesupport::cache::memorystore#pruning?()","Ruby object#psych_to_yaml()","Ruby module#psych_yaml_as()","Ruby dl::cfunc#ptr()","Ruby dl::cptr#ptr()","Ruby fiddle::pointer#ptr()","Ruby dl::cfunc#ptr=()","Ruby rss::maker::channelbase#pubdate()","Ruby rss::maker::itemsbase::itembase#pubdate()","Ruby rss::maker::channelbase#pubdate=()","Ruby rss::maker::itemsbase::itembase#pubdate=()","Ruby rexml::doctype#public()","Ruby openssl::pkey::dh#public?()","Ruby openssl::pkey::dsa#public?()","Ruby openssl::pkey::rsa#public?()","Ruby openssl::pkey::rsa#public?()","Ruby module#public_class_method()","Ruby module#public_constant()","Ruby openssl::pkey::rsa#public_decrypt()","Ruby openssl::pkey::rsa#public_decrypt()","Rails rails::appbuilder#public_directory()","Ruby openssl::pkey::rsa#public_encrypt()","Ruby openssl::pkey::rsa#public_encrypt()","Ruby module#public_instance_method()","Ruby module#public_instance_methods()","Ruby openssl::netscape::spki#public_key()","Ruby openssl::pkey::dh#public_key()","Ruby openssl::pkey::dsa#public_key()","Ruby openssl::pkey::ec#public_key()","Ruby openssl::pkey::rsa#public_key()","Ruby openssl::pkey::rsa#public_key()","Ruby openssl::x509::certificate#public_key()","Ruby openssl::x509::request#public_key()","Ruby openssl::netscape::spki#public_key=()","Ruby openssl::pkey::ec#public_key=()","Ruby openssl::x509::certificate#public_key=()","Ruby openssl::x509::request#public_key=()","Ruby openssl::pkey::ec#public_key?()","Ruby object#public_method()","Ruby module#public_method_defined?()","Ruby delegator#public_methods()","Ruby object#public_methods()","Rails rails::public_path()","Ruby object#public_send()","Rails activesupport::notifications::publish()","Rails activesupport::notifications::fanout#publish()","Rails activesupport::notifications::fanout::subscribers::timed#publish()","Ruby rexml::parsers::baseparser#pull()","Ruby rexml::parsers::pullparser#pull()","Rails activerecord::tasks::databasetasks#purge()","Ruby openssl::x509::store#purpose=()","Ruby array#push()","Ruby csv::row#push()","Ruby csv::table#push()","Ruby psych::visitors::yamltree#push()","Ruby queue#push()","Ruby rdoc::markup::document#push()","Ruby rdoc::markup::list#push()","Ruby rdoc::markup::listitem#push()","Ruby rdoc::markup::raw#push()","Ruby rexml::parent#push()","Ruby rinda::tuplebag#push()","Ruby sizedqueue#push()","Rails rails::paths::path#push()","Ruby pp::ppmethods#push_inspect_key()","Ruby irb::context#push_workspace()","Ruby shell#pushd()","Ruby shell#pushdir()","Ruby net::ftp#put()","Rails actiondispatch::routing::mapper::httphelpers#put()","Rails actiondispatch::request#put?()","Ruby encoding::converter#putback()","Ruby net::ftp#putbinaryfile()","Ruby argf#putc()","Ruby io#putc()","Ruby kernel#putc()","Ruby stringio#putc()","Ruby zlib::gzipwriter#putc()","Ruby argf#puts()","Ruby csv#puts()","Ruby io#puts()","Ruby io::writable#puts()","Ruby irb::locale#puts()","Ruby irb::notifier::abstractnotifier#puts()","Ruby irb::outputmethod#puts()","Ruby kernel#puts()","Ruby net::internetmessageio::writeadapter#puts()","Ruby net::telnet#puts()","Ruby openssl::buffering#puts()","Ruby xmp#puts()","Ruby xmp::stringinputmethod#puts()","Ruby zlib::gzipwriter#puts()","Ruby net::ftp#puttextfile()","Ruby dir::pwd()","Ruby fileutils::pwd()","Ruby net::ftp#pwd()","Ruby pathname::pwd()","Rails module#qualified_const_defined?()","Rails module#qualified_const_get()","Rails module#qualified_const_set()","Ruby webrick::httprequest#query()","Ruby uri::generic#query=()","Rails activerecord::attributemethods::query#query_attribute()","Rails actiondispatch::request#query_parameters()","Ruby gem::server#quick()","Ruby rdoc::options#quiet()","Ruby sys#quiet()","Ruby rdoc::options#quiet=()","Rails kernel#quietly()","Ruby net::ftp#quit()","Ruby net::smtp#quit()","Ruby bigdecimal#quo()","Ruby complex#quo()","Ruby float#quo()","Ruby numeric#quo()","Ruby rational#quo()","Ruby regexp::quote()","Ruby webrick::httputils::quote()","Rails activerecord::connectionadapters::abstractmysqladapter#quote()","Rails activerecord::connectionadapters::quoting#quote()","Rails activerecord::connectionadapters::sqlite3adapter#quote()","Rails activerecord::connectionadapters::quoting#quote_column_name()","Rails activerecord::connectionadapters::mysql2adapter#quote_string()","Rails activerecord::connectionadapters::quoting#quote_string()","Rails activerecord::connectionadapters::postgresqladapter::quoting#quote_table_name()","Rails activerecord::connectionadapters::quoting#quote_table_name()","Rails activerecord::connectionadapters::postgresqladapter::quoting#quote_table_name_for_assignment()","Rails activerecord::connectionadapters::quoting#quote_table_name_for_assignment()","Rails activerecord::connectionadapters::sqlite3adapter#quote_table_name_for_assignment()","Rails activerecord::connectionadapters::abstractmysqladapter#quoted_columns_for_index()","Rails activerecord::connectionadapters::schemastatements#quoted_columns_for_index()","Rails activerecord::connectionadapters::quoting#quoted_date()","Rails activerecord::connectionadapters::abstractmysqladapter#quoted_false()","Rails activerecord::connectionadapters::quoting#quoted_false()","Rails activerecord::sanitization#quoted_id()","Rails activerecord::locking::optimistic::classmethods#quoted_locking_column()","Rails activerecord::attributemethods::primarykey::classmethods#quoted_primary_key()","Rails activerecord::modelschema::classmethods#quoted_table_name()","Rails activerecord::connectionadapters::abstractmysqladapter#quoted_true()","Rails activerecord::connectionadapters::quoting#quoted_true()","Ruby vector#r()","Ruby racc::parser#racc_accept()","Ruby racc::parser#racc_e_pop()","Ruby racc::parser#racc_next_state()","Ruby racc::parser#racc_print_stacks()","Ruby racc::parser#racc_print_states()","Ruby racc::parser#racc_read_token()","Ruby racc::parser#racc_reduce()","Ruby racc::parser#racc_shift()","Ruby racc::parser#racc_token2str()","Rails actiondispatch::routing::routewrapper#rack_app()","Ruby cgi::htmlextension#radio_button()","Rails actionview::helpers::formbuilder#radio_button()","Rails actionview::helpers::formhelper#radio_button()","Rails actionview::helpers::formtaghelper#radio_button_tag()","Ruby cgi::htmlextension#radio_group()","Rails rails::api::apptask#rails_version()","Rails rails::api::edgetask#rails_version()","Rails rails::api::stabletask#rails_version()","Rails rails::railtie::railtie_name()","Rails rails::railtie#railtie_namespace()","Rails rails::engine::railties()","Ruby kernel#raise()","Ruby thread#raise()","Rails activesupport::proxyobject#raise()","Ruby rss::baselistener#raise_for_undefined_entity?()","Ruby rss::baseparser#raise_for_undefined_entity?()","Ruby rss::rexmllistener#raise_for_undefined_entity?()","Rails qualifiedconstutils::raise_if_absolute()","Ruby gem::specification#raise_if_conflicts()","Ruby tracepoint#raised_exception()","Rails build#rake()","Rails rails::generators::actions#rake()","Ruby rake::fileutilsext#rake_check_options()","Ruby module#rake_extension()","Ruby rake::fileutilsext#rake_merge_option()","Ruby module#rake_original_const_missing()","Ruby time#rake_original_time_compare()","Ruby rake::fileutilsext#rake_output_message()","Ruby rake::application#rake_require()","Ruby rake::application#rake_require()","Ruby rake::win32#rake_system()","Rails rails::railtie::rake_tasks()","Rails rails::appbuilder#rakefile()","Rails rails::generators::actions#rakefile()","Rails rails::pluginbuilder#rakefile()","Ruby rake::application#rakefile_location()","Ruby rake::application#rakefile_location()","Ruby kernel#rand()","Ruby random::rand()","Ruby random#rand()","Ruby securerandom::random_bytes()","Ruby openssl::cipher#random_iv()","Ruby openssl::cipher#random_key()","Ruby securerandom::random_number()","Ruby webrick::utils::random_string()","Ruby net::httpheader#range()","Ruby net::httpheader#range=()","Rails actionview::helpers::formhelper#range_field()","Rails actionview::helpers::formtaghelper#range_field_tag()","Ruby net::httpheader#range_length()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#range_to_string()","Ruby matrix#rank()","Ruby matrix#rank_e()","Ruby array#rassoc()","Ruby env::rassoc()","Ruby hash#rassoc()","Ruby complex#rationalize()","Ruby float#rationalize()","Ruby integer#rationalize()","Ruby integer#rationalize()","Ruby nilclass#rationalize()","Ruby rational#rationalize()","Ruby curses::raw()","Ruby io#raw()","Ruby rexml::element#raw()","Rails actionview::helpers::outputsafetyhelper#raw()","Ruby io#raw!()","Rails activerecord::connectionadapters::abstractadapter#raw_connection()","Ruby cgi::queryextension#raw_cookie()","Ruby cgi::queryextension#raw_cookie2()","Ruby gc::profiler::raw_data()","Rails actiondispatch::http::url#raw_host_with_port()","Rails actioncontroller::httpauthentication::token#raw_params()","Ruby rdoc::ri::paths::raw_path()","Rails actiondispatch::request#raw_post()","Rails activerecord::attributemethods::write#raw_write_attribute()","Ruby gem::commands::setupcommand#rb_files_in()","Ruby rdoc::parser::c#rb_scan_args()","Ruby net::smtp#rcptto()","Ruby net::smtp#rcptto_list()","Ruby file::stat#rdev()","Ruby file::stat#rdev_major()","Ruby file::stat#rdev_minor()","Ruby gem::server#rdoc()","Ruby rdoc::rubygemshook#rdoc_installed?()","Ruby rdoc::rubygemshook#rdoc_installed?()","Ruby gem::specification#rdoc_options()","Ruby gem::specification#rdoc_options=()","Ruby rdoc::task#rdoc_task_description()","Ruby ","Ruby process::gid::re_exchange()","Ruby process::uid::re_exchange()","Ruby process::gid::re_exchangeable?()","Ruby process::uid::re_exchangeable?()","Ruby gem::security::re_sign()","Ruby argf#read()","Ruby csv#read()","Ruby csv::read()","Ruby dir#read()","Ruby gem::package::tarreader::entry#read()","Ruby io::read()","Ruby io#read()","Ruby openssl::buffering#read()","Ruby openssl::pkey::read()","Ruby openuri::openread#read()","Ruby pathname#read()","Ruby rexml::iosource#read()","Ruby rexml::source#read()","Ruby rinda::tuplespace#read()","Ruby rinda::tuplespaceproxy#read()","Ruby rinda::waittemplateentry#read()","Ruby stringio#read()","Ruby win32::registry#read()","Ruby zlib::gzipreader#read()","Rails actiondispatch::http::uploadedfile#read()","Rails actiondispatch::railsentitystore#read()","Rails actiondispatch::railsmetastore#read()","Rails activesupport::cache::store#read()","Ruby rinda::tuplespace#read_all()","Ruby rinda::tuplespaceproxy#read_all()","Rails activerecord::attributemethods::read#read_attribute()","Rails activerecord::attributemethods::beforetypecast#read_attribute_before_type_cast()","Ruby win32::registry#read_bin()","Ruby gem::read_binary()","Ruby net::httpresponse#read_body()","Ruby gem::package#read_checksums()","Ruby rdoc::parser::ruby#read_directive()","Ruby rdoc::parser::ruby#read_documentation_modifiers()","Rails activesupport::cache::filestore#read_entry()","Rails activesupport::cache::strategy::localcache::localstore#read_entry()","Ruby rdoc::encoding::read_file()","Rails actioncontroller::caching::fragments#read_fragment()","Ruby win32::registry#read_i()","Rails activesupport::cache::memcachestore#read_multi()","Rails activesupport::cache::store#read_multi()","Ruby argf#read_nonblock()","Ruby io#read_nonblock()","Ruby io::readable#read_nonblock()","Ruby openssl::buffering#read_nonblock()","Ruby win32::registry#read_s()","Ruby win32::registry#read_s_expand()","Ruby openssl::pkcs7::read_smime()","Rails activerecord::store#read_store_attribute()","Ruby net::ftp#read_timeout=()","Ruby net::http#read_timeout=()","Ruby net::pop3#read_timeout=()","Ruby net::smtp#read_timeout=()","Ruby psych::read_type_class()","Ruby rexml::text::read_with_substitution()","Ruby file::readable?()","Ruby file::stat#readable?()","Ruby filetest#readable?()","Ruby pathname#readable?()","Ruby irb::inputmethod#readable_after_eof?()","Ruby irb::readlineinputmethod#readable_after_eof?()","Ruby irb::stdioinputmethod#readable_after_eof?()","Rails date#readable_inspect()","Rails datetime#readable_inspect()","Ruby file::readable_real?()","Ruby file::stat#readable_real?()","Ruby filetest#readable_real?()","Ruby pathname#readable_real?()","Ruby encoding::invalidbytesequenceerror#readagain_bytes()","Ruby argf#readbyte()","Ruby io#readbyte()","Ruby io::readable#readbyte()","Ruby zlib::gzipreader#readbyte()","Ruby argf#readchar()","Ruby io#readchar()","Ruby io::readable#readchar()","Ruby openssl::buffering#readchar()","Ruby zlib::gzipreader#readchar()","Ruby argf#readline()","Ruby csv#readline()","Ruby io#readline()","Ruby io::readable#readline()","Ruby irb::locale#readline()","Ruby kernel#readline()","Ruby openssl::buffering#readline()","Ruby readline::readline()","Ruby zlib::gzipreader#readline()","Ruby argf#readlines()","Ruby csv::readlines()","Ruby csv#readlines()","Ruby io::readlines()","Ruby io#readlines()","Ruby kernel#readlines()","Ruby openssl::buffering#readlines()","Ruby pathname#readlines()","Ruby stringio#readlines()","Ruby zlib::gzipreader#readlines()","Ruby file::readlink()","Ruby pathname#readlink()","Rails rails::appbuilder#readme()","Rails rails::generators::actions#readme()","Rails rails::pluginbuilder#readme()","Rails activerecord::querymethods#readonly()","Rails activerecord::core#readonly!()","Rails activerecord::core#readonly?()","Rails activerecord::readonlyattributes::classmethods#readonly_attributes()","Ruby argf#readpartial()","Ruby io#readpartial()","Ruby io::readable#readpartial()","Ruby openssl::buffering#readpartial()","Ruby zlib::gzipreader#readpartial()","Ruby net::smtp#ready()","Ruby io#ready?()","Ruby complex#real()","Ruby matrix#real()","Ruby numeric#real()","Ruby complex#real?()","Ruby matrix#real?()","Ruby numeric#real?()","Ruby file::realdirpath()","Ruby pathname#realdirpath()","Ruby dl::realloc()","Ruby fiddle::realloc()","Ruby gem::configfile#really_verbose()","Ruby file::realpath()","Ruby pathname#realpath()","Ruby benchmark::realtime()","Rails activerecord::connectionadapters::connectionpool#reap()","Ruby localjumperror#reason()","Ruby optionparser::parseerror#reason()","Ruby webrick::httpstatus::reason_phrase()","Ruby webrick::httpstatus::status#reason_phrase()","Ruby rexml::validation::relaxng#receive()","Rails actionmailer::base::receive()","Rails actionmailer::logsubscriber#receive()","Ruby method#receiver()","Ruby openssl::pkcs7#recipients()","Rails activerecord::connectionadapters::abstractadapter#reconnect!()","Rails activerecord::connectionadapters::mysql2adapter#reconnect!()","Rails activerecord::connectionadapters::mysqladapter#reconnect!()","Rails activerecord::connectionadapters::postgresqladapter#reconnect!()","Rails activerecord::migration::commandrecorder#record()","Ruby rexml::document#record_entity_expansion()","Rails actionview::recordidentifier#record_key_for_dom_id()","Ruby rdoc::codeobject#record_location()","Ruby rdoc::context#record_location()","Ruby optionparser::parseerror#recover()","Rails activerecord::connectionadapters::abstractmysqladapter#recreate_database()","Ruby complex#rect()","Ruby complex::rect()","Ruby matrix#rect()","Ruby numeric#rect()","Ruby complex#rectangular()","Ruby complex::rectangular()","Ruby matrix#rectangular()","Ruby numeric#rectangular()","Ruby json#recurse_proc()","Ruby basicsocket#recv()","Ruby unixsocket#recv_io()","Ruby basicsocket#recv_nonblock()","Ruby ipsocket#recvfrom()","Ruby socket#recvfrom()","Ruby unixsocket#recvfrom()","Ruby socket#recvfrom_nonblock()","Ruby udpsocket#recvfrom_nonblock()","Ruby basicsocket#recvmsg()","Ruby basicsocket#recvmsg_nonblock()","Rails module#redefine_method()","Rails actiondispatch::routing::redirection#redirect()","Ruby webrick::httpstatus::redirect?()","Rails actioncontroller::flash#redirect_to()","Rails actioncontroller::instrumentation#redirect_to()","Rails actioncontroller::logsubscriber#redirect_to()","Rails actioncontroller::redirecting#redirect_to()","Rails actiondispatch::response#redirect_url()","Ruby gem::ext::builder::redirector()","Ruby readline::redisplay()","Ruby enumerable#reduce()","Ruby rake::task#reenable()","Ruby dl::cptr#ref()","Ruby fiddle::pointer#ref()","Rails actionview::template::types::type#ref()","Rails mime::nulltype#ref()","Rails mime::type#ref()","Ruby rdoc::markdown#reference()","Rails activerecord::connectionadapters::table#references()","Rails activerecord::connectionadapters::tabledefinition#references()","Rails activerecord::querymethods#references()","Ruby ","Rails activerecord::reflection::classmethods#reflect_on_aggregation()","Rails activerecord::reflection::classmethods#reflect_on_all_aggregations()","Rails activerecord::reflection::classmethods#reflect_on_all_associations()","Rails activerecord::reflection::classmethods#reflect_on_all_autosave_associations()","Rails activerecord::reflection::classmethods#reflect_on_association()","Ruby curses::refresh()","Ruby curses::pad#refresh()","Ruby curses::window#refresh()","Ruby gem::refresh()","Rails actionview::template#refresh()","Ruby readline::refresh_line()","Ruby matchdata#regexp()","Ruby optionparser::completion::regexp()","Ruby uri::regexp()","Rails actiondispatch::routing::routewrapper#regexp()","Ruby drb::extservmanager#regist()","Ruby drb::regist_server()","Ruby gem::noaliasyamltree#register()","Ruby openssl::asn1::objectid::register()","Ruby rdoc::markup::preprocess::register()","Ruby webrick::utils::timeouthandler::register()","Ruby webrick::utils::timeouthandler#register()","Rails actionview::template::types::type::register()","Rails mime::type::register()","Rails mime::type::register_alias()","Rails mime::type::register_callback()","Ruby gem::commandmanager#register_command()","Ruby gem#register_default_spec()","Rails actionmailer::base::register_interceptor()","Rails actionmailer::base::register_interceptors()","Rails actionmailer::base::register_observer()","Rails actionmailer::base::register_observers()","Rails activerecord::tasks::databasetasks#register_task()","Rails actionview::dependencytracker::register_tracker()","Rails activerecord::connectionadapters::mysqladapter::fields::register_type()","Rails activerecord::connectionadapters::postgresqladapter::oid::register_type()","Ruby rss::baselistener#register_uri()","Ruby rdoc::markup::preprocess::registered()","Rails activerecord::connectionadapters::postgresqladapter::oid::registered_type?()","Ruby uri::generic#registry=()","Ruby matrix#regular?()","Rails rails::generators::namedbase#regular_class_path()","Rails activesupport::hashwithindifferentaccess#regular_update()","Rails activesupport::hashwithindifferentaccess#regular_update()","Rails activesupport::hashwithindifferentaccess#regular_writer()","Rails activesupport::hashwithindifferentaccess#regular_writer()","Ruby env::rehash()","Ruby hash#rehash()","Ruby shell::commandprocessor#rehash()","Ruby array#reject()","Ruby dbm#reject()","Ruby env::reject()","Ruby enumerable#reject()","Ruby enumerator::lazy#reject()","Ruby gdbm#reject()","Ruby hash#reject()","Ruby optionparser::reject()","Ruby optionparser#reject()","Ruby optionparser::list#reject()","Ruby sdbm#reject()","Ruby yaml::dbm#reject()","Ruby array#reject!()","Ruby dbm#reject!()","Ruby env::reject!()","Ruby gdbm#reject!()","Ruby hash#reject!()","Ruby sdbm#reject!()","Ruby set#reject!()","Ruby pathname#relative?()","Ruby uri::generic#relative?()","Ruby pathname#relative_path_from()","Ruby gem::version#release()","Ruby optionparser#release()","Rails activesupport::concurrency::latch#release()","Rails activerecord::connectionadapters::connectionpool#release_connection()","Rails activerecord::connectionadapters::abstractadapter#release_savepoint()","Rails activerecord::connectionadapters::abstractmysqladapter#release_savepoint()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#release_savepoint()","Rails activerecord::connectionadapters::sqlite3adapter#release_savepoint()","Ruby drb::drbunknown#reload()","Ruby webrick::httpauth::htdigest#reload()","Ruby webrick::httpauth::htgroup#reload()","Ruby webrick::httpauth::htpasswd#reload()","Rails activerecord::autosaveassociation#reload()","Rails activerecord::persistence#reload()","Rails activerecord::relation#reload()","Rails rails::application::routesreloader#reload!()","Rails rails::consolemethods#reload!()","Rails rails::application#reload_routes!()","Ruby bigdecimal#remainder()","Ruby bignum#remainder()","Ruby numeric#remainder()","Ruby gem::localremoteoptions#remote?()","Ruby basicsocket#remote_address()","Ruby webrick::httprequest#remote_ip()","Rails actiondispatch::request#remote_ip()","Ruby fileutils::remove()","Ruby gem::uninstaller#remove()","Ruby optionparser#remove()","Ruby rdoc::rubygemshook#remove()","Ruby rdoc::rubygemshook#remove()","Ruby rexml::attribute#remove()","Ruby rexml::child#remove()","Rails activerecord::connectionadapters::connectionpool#remove()","Rails activerecord::connectionadapters::table#remove()","Ruby nqxml::node#removechild()","Ruby gem::uninstaller#remove_all()","Rails activerecord::connectionadapters::schemastatements#remove_belongs_to()","Rails activerecord::connectionadapters::table#remove_belongs_to()","Ruby gem::dependencylist#remove_by_name()","Ruby dl#remove_callback()","Ruby dl#remove_callback_internal()","Ruby dl#remove_cdecl_callback()","Ruby module#remove_class_variable()","Ruby rdoc::parser::simple#remove_coding_comment()","Rails activerecord::connectionadapters::schemastatements#remove_column()","Rails activerecord::connectionadapters::tabledefinition#remove_column()","Rails activerecord::connectionadapters::abstractmysqladapter#remove_column_sql()","Rails activerecord::connectionadapters::schemastatements#remove_columns()","Rails activerecord::connectionadapters::abstractmysqladapter#remove_columns_sql()","Ruby rdoc::context::section#remove_comment()","Ruby rdoc::parser::c#remove_commented_out_lines()","Rails activerecord::connectionadapters::connectionhandler#remove_connection()","Rails activerecord::connectionhandling#remove_connection()","Ruby fileutils::remove_dir()","Ruby fileutils::remove_entry()","Ruby fileutils::remove_entry_secure()","Ruby gem::uninstaller#remove_executables()","Ruby fileutils::remove_file()","Rails activesupport::backtracecleaner#remove_filters!()","Ruby rdoc::context#remove_from_documentation?()","Ruby webrick::httpservlet::filehandler::remove_handler()","Rails rails::generators::base::remove_hook_for()","Rails activerecord::connectionadapters::schemastatements#remove_index()","Rails activerecord::connectionadapters::table#remove_index()","Rails activerecord::connectionadapters::abstractmysqladapter#remove_index_sql()","Ruby gem::availableset#remove_installed!()","Ruby object#remove_instance_variable()","Ruby rdoc::context#remove_invisible()","Ruby rdoc::store#remove_nodoc()","Ruby rdoc::classmodule#remove_nodoc_children()","Ruby gem::commands::setupcommand#remove_old_bin_files()","Ruby gem::commands::setupcommand#remove_old_lib_files()","Ruby gem::command#remove_option()","Ruby gem::commands::ownercommand#remove_owners()","Rails module#remove_possible_method()","Ruby rdoc::comment#remove_private()","Ruby rdoc::parser::simple#remove_private_comment()","Ruby rdoc::parser::ruby#remove_private_comments()","Rails activerecord::connectionadapters::schemastatements#remove_reference()","Rails activerecord::connectionadapters::table#remove_references()","Ruby net::imap#remove_response_handler()","Ruby drb::remove_server()","Ruby rdoc::rdoc#remove_siginfo_handler()","Rails activesupport::backtracecleaner#remove_silencers!()","Ruby gem::specification::remove_spec()","Ruby gem::dependencylist#remove_specs_unsatisfied_by()","Ruby dl#remove_stdcall_callback()","Rails activerecord::connectionadapters::schemastatements#remove_timestamps()","Rails activerecord::connectionadapters::table#remove_timestamps()","Rails activerecord::connectionadapters::abstractmysqladapter#remove_timestamps_sql()","Ruby rdoc::parser::rubytools#remove_token_listener()","Rails actionview::dependencytracker::remove_tracker()","Ruby rdoc::rdoc#remove_unparseable()","Ruby gem#remove_unresolved_default_spec()","Ruby file::rename()","Ruby net::ftp#rename()","Ruby net::imap#rename()","Ruby pathname#rename()","Rails activerecord::connectionadapters::table#rename()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#rename_column()","Rails activerecord::connectionadapters::schemastatements#rename_column()","Rails activerecord::connectionadapters::schemastatements#rename_column_indexes()","Rails activerecord::connectionadapters::abstractmysqladapter#rename_column_sql()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#rename_index()","Rails activerecord::connectionadapters::schemastatements#rename_index()","Rails activerecord::connectionadapters::table#rename_index()","Rails activesupport::xmlmini#rename_key()","Rails activerecord::connectionadapters::abstractmysqladapter#rename_table()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#rename_table()","Rails activerecord::connectionadapters::sqlite3adapter#rename_table()","Rails activerecord::connectionadapters::schemastatements#rename_table()","Rails activerecord::connectionadapters::schemastatements#rename_table_indexes()","Ruby rdoc::generator::darkfish#render()","Rails abstractcontroller::rendering#render()","Rails actioncontroller::instrumentation#render()","Rails actionview::helpers::renderinghelper#render()","Rails actionview::partialrenderer#render()","Rails actionview::renderer#render()","Rails actionview::template#render()","Rails activerecord::logsubscriber#render_bind()","Rails actionview::renderer#render_body()","Rails actionview::logsubscriber#render_collection()","Rails actionview::partialrenderer#render_collection()","Rails actionview::logsubscriber#render_partial()","Rails actionview::partialrenderer#render_partial()","Ruby rdoc::generator::darkfish#render_template()","Rails actionview::logsubscriber#render_template()","Rails abstractcontroller::rendering#render_to_body()","Rails actioncontroller::renderers#render_to_body()","Rails actioncontroller::rendering#render_to_body()","Rails abstractcontroller::rendering#render_to_string()","Rails actioncontroller::rendering#render_to_string()","Ruby rinda::simplerenewer#renew()","Ruby rinda::tupleentry#renew()","Ruby io#reopen()","Ruby stringio#reopen()","Ruby syslog::reopen()","Rails activerecord::querymethods#reorder()","Rails activesupport::multibyte::unicode#reorder_characters()","Ruby gdbm#reorganize()","Ruby rake::altsystem#repair_command()","Ruby array#repeated_combination()","Ruby array#repeated_permutation()","Ruby array#replace()","Ruby dbm#replace()","Ruby env::replace()","Ruby gdbm#replace()","Ruby gem::sourcelist#replace()","Ruby hash#replace()","Ruby sdbm#replace()","Ruby set#replace()","Ruby string#replace()","Ruby yaml::dbm#replace()","Rails activerecord::associations::collectionproxy#replace()","Rails activesupport::hashwithindifferentaccess#replace()","Rails activesupport::hashwithindifferentaccess#replace()","Ruby rexml::parent#replace_child()","Ruby rexml::child#replace_with()","Ruby encoding::converter#replacement()","Ruby encoding::converter#replacement=()","Ruby encoding#replicate()","Ruby socket::udpsource#reply()","Ruby rinda::ringserver#reply_service()","Ruby gc::profiler::report()","Ruby rdoc::stats#report()","Ruby rdoc::stats#report_attributes()","Ruby rdoc::stats#report_class_module()","Ruby rdoc::stats#report_constants()","Ruby rdoc::stats#report_methods()","Ruby psych::coder#represent_map()","Ruby psych::coder#represent_object()","Ruby psych::coder#represent_scalar()","Ruby psych::coder#represent_seq()","Rails actiondispatch::routing::routewrapper#reqs()","Ruby gem::remotefetcher#request()","Ruby net::http#request()","Rails actioncontroller::base#request()","Ruby net::httpgenericrequest#request_body_permitted?()","Ruby net::http#request_get()","Ruby net::http#request_head()","Rails actioncontroller::httpauthentication::basic::controllermethods#request_http_basic_authentication()","Rails actioncontroller::httpauthentication::digest::controllermethods#request_http_digest_authentication()","Rails actioncontroller::httpauthentication::token::controllermethods#request_http_token_authentication()","Rails actiondispatch::request#request_method()","Rails actiondispatch::request#request_method_symbol()","Rails actiondispatch::request#request_parameters()","Ruby net::http#request_post()","Ruby uri::http#request_uri()","Ruby gem::dependencyresolver::dependencyconflict#requester()","Ruby gem::dependencyresolver#requests()","Ruby irb::locale#require()","Rails actioncontroller::parameters#require()","Rails rails::console#require_debugger()","Rails actionview::template::handlers::builder#require_engine()","Rails activerecord::testfixtures::classmethods#require_fixture_classes()","Ruby gem::specification#require_path()","Ruby gem::specification#require_path=()","Ruby xmlrpc::webrickservlet#require_path_info?()","Ruby kernel#require_relative()","Rails activesupport::timezone::require_tzinfo()","Rails actioncontroller::parameters#required()","Ruby gem::specification::required_attribute?()","Ruby gem::specification::required_attributes()","Ruby rss::element#required_prefix()","Ruby rss::ituneschannelmodel::itunescategory#required_prefix()","Ruby rss::ituneschannelmodel::itunesimage#required_prefix()","Ruby rss::ituneschannelmodel::itunesowner#required_prefix()","Ruby rss::itunesitemmodel::itunesduration#required_prefix()","Ruby rss::imagefaviconmodel::imagefavicon#required_prefix()","Ruby rss::imageitemmodel::imageitem#required_prefix()","Ruby rss::taxonomytopicmodel::taxonomytopic#required_prefix()","Ruby rss::taxonomytopicsmodel::taxonomytopics#required_prefix()","Ruby rss::trackbackmodel10::trackbackabout#required_prefix()","Ruby rss::trackbackmodel10::trackbackping#required_prefix()","Ruby rss::trackbackmodel20::trackbackabout#required_prefix()","Ruby rss::trackbackmodel20::trackbackping#required_prefix()","Ruby gem::specification#required_ruby_version=()","Ruby gem::specification#required_rubygems_version=()","Ruby rss::atom::commonmodel#required_uri()","Ruby rss::element#required_uri()","Ruby rss::ituneschannelmodel::itunescategory#required_uri()","Ruby rss::ituneschannelmodel::itunesimage#required_uri()","Ruby rss::ituneschannelmodel::itunesowner#required_uri()","Ruby rss::itunesitemmodel::itunesduration#required_uri()","Ruby rss::imagefaviconmodel::imagefavicon#required_uri()","Ruby rss::imageitemmodel::imageitem#required_uri()","Ruby rss::rdf#required_uri()","Ruby rss::rdf::li#required_uri()","Ruby rss::rdf::li#required_uri()","Ruby rss::rdf::li#required_uri()","Ruby rss::rdf::seq#required_uri()","Ruby rss::rdf::seq#required_uri()","Ruby rss::taxonomytopicmodel::taxonomytopic#required_uri()","Ruby rss::taxonomytopicsmodel::taxonomytopics#required_uri()","Ruby rss::trackbackmodel10::trackbackabout#required_uri()","Ruby rss::trackbackmodel10::trackbackping#required_uri()","Ruby rss::trackbackmodel20::trackbackabout#required_uri()","Ruby rss::trackbackmodel20::trackbackping#required_uri()","Ruby gem::dependency#requirement()","Ruby gem::specification#requirements()","Ruby gem::specification#requirements=()","Ruby gem::dependency#requirements_list()","Rails activerecord::connectionadapters::abstractadapter#requires_reloading?()","Rails activerecord::connectionadapters::sqlite3adapter#requires_reloading?()","Ruby rdoc::task#rerdoc_task_description()","Rails activesupport::rescuable::classmethods#rescue_from()","Rails actiondispatch::exceptionwrapper#rescue_template()","Rails actioncontroller::rescue#rescue_with_handler()","Rails activesupport::rescuable#rescue_with_handler()","Ruby cgi::htmlextension#reset()","Ruby digest::hmac#reset()","Ruby digest::instance#reset()","Ruby gem::commandmanager::reset()","Ruby gem::remotefetcher#reset()","Ruby gem::security::reset()","Ruby gem::specification::reset()","Ruby net::pop3#reset()","Ruby openssl::cipher#reset()","Ruby openssl::digest#reset()","Ruby openssl::hmac#reset()","Ruby rdoc::markup::preprocess::reset()","Ruby rdoc::parser::rubytools#reset()","Ruby rexml::validation::choice#reset()","Ruby rexml::validation::interleave#reset()","Ruby rexml::validation::oneormore#reset()","Ruby rexml::validation::state#reset()","Ruby rexml::validation::validator#reset()","Ruby stringscanner#reset()","Ruby zlib::zstream#reset()","Rails activerecord::relation#reset()","Rails activerecord::connectionadapters::abstractadapter#reset!()","Rails activerecord::connectionadapters::mysql2adapter#reset!()","Rails activerecord::connectionadapters::mysqladapter#reset!()","Rails activerecord::connectionadapters::postgresqladapter#reset!()","Rails activerecord::fixtureset::reset_cache()","Rails activesupport::callbacks::classmethods#reset_callbacks()","Rails activerecord::modelschema::classmethods#reset_column_information()","Rails activerecord::countercache::classmethods#reset_counters()","Rails actionview::helpers::texthelper#reset_cycle()","Rails activerecord::locking::optimistic::classmethods#reset_locking_column()","Ruby gem::specification#reset_nil_attributes_to_default()","Ruby curses::reset_prog_mode()","Rails activerecord::logsubscriber::reset_runtime()","Rails activerecord::connectionadapters::databasestatements#reset_sequence!()","Rails actioncontroller::rackdelegation#reset_session()","Rails actiondispatch::request#reset_session()","Ruby curses::resize()","Ruby curses::window#resize()","Ruby curses::resizeterm()","Ruby gem::dependencyresolver#resolve()","Ruby gem::requestset#resolve()","Ruby rdoc::crossreference#resolve()","Ruby rake::filelist#resolve()","Rails actiondispatch::railsentitystore::resolve()","Rails actiondispatch::railsmetastore::resolve()","Ruby rake::filelist#resolve_add()","Ruby rdoc::context#resolve_aliases()","Ruby rake::taskmanager#resolve_args()","Ruby gem::requestset#resolve_current()","Ruby gem::dependencyresolver#resolve_for()","Rails actiondispatch::routing::mapper::resources#resource()","Rails actioncontroller::responder#resource_errors()","Rails actioncontroller::responder#resource_location()","Rails actioncontroller::responder#resourceful?()","Ruby rss::taxonomytopicsmodel::taxonomytopics#resources()","Rails actiondispatch::routing::mapper::resources#resources()","Rails actiondispatch::routing::mapper::resources#resources_path_names()","Rails actioncontroller::responder#respond()","Rails actioncontroller::mimeresponds#respond_to()","Rails actioncontroller::mimeresponds::classmethods#respond_to()","Ruby drb::drbobject#respond_to?()","Ruby drb::drbobject#respond_to?()","Ruby object#respond_to?()","Rails actiondispatch::response#respond_to?()","Rails activemodel::attributemethods#respond_to?()","Rails activerecord::attributemethods#respond_to?()","Rails rails::railtie::configurable::classmethods#respond_to?()","Rails rails::railtie::configuration#respond_to?()","Ruby delegator#respond_to_missing?()","Ruby object#respond_to_missing?()","Rails activesupport::multibyte::chars#respond_to_missing?()","Rails activesupport::orderedoptions#respond_to_missing?()","Rails activesupport::timewithzone#respond_to_missing?()","Rails mime::nulltype#respond_to_missing?()","Rails activemodel::attributemethods#respond_to_without_attributes?()","Rails actioncontroller::mimeresponds#respond_with()","Rails actioncontroller::base#response()","Rails actioncontroller::mimeresponds::collector#response()","Rails actioncontroller::live#response_body=()","Rails actioncontroller::metal#response_body=()","Rails actioncontroller::rackdelegation#response_body=()","Ruby net::httpgenericrequest#response_body_permitted?()","Rails actiondispatch::response#response_code()","Rails actioncontroller::responder#response_overridden?()","Ruby stringscanner#rest()","Ruby stringscanner#rest?()","Ruby stringscanner#rest_size()","Ruby cgi::session::filestore#restore()","Ruby cgi::session::memorystore#restore()","Ruby cgi::session::nullstore#restore()","Ruby cgi::session::pstore#restore()","Ruby json::restore()","Ruby marshal::restore()","Ruby stringscanner#restsize()","Ruby coverage::result()","Ruby erb#result()","Ruby gc::profiler::result()","Ruby stopiteration#result()","Rails actiondispatch::routing::consoleformatter#result()","Rails actiondispatch::routing::htmltableformatter#result()","Rails activerecord::dynamicmatchers::finder#result()","Ruby debugger__#resume()","Ruby fiber#resume()","Ruby net::ftp#retrbinary()","Rails activerecord::connectionhandling#retrieve_connection()","Rails activerecord::connectionadapters::connectionhandler#retrieve_connection_pool()","Ruby net::ftp#retrlines()","Ruby csv#return_headers?()","Ruby win32ole_method#return_type()","Ruby win32ole_method#return_type_detail()","Ruby tracepoint#return_value()","Ruby win32ole_method#return_vtype()","Ruby win32ole_param#retval?()","Ruby array#reverse()","Ruby ipaddr#reverse()","Ruby string#reverse()","Rails activesupport::multibyte::chars#reverse()","Ruby array#reverse!()","Ruby string#reverse!()","Ruby array#reverse_each()","Ruby enumerable#reverse_each()","Rails activesupport::hashwithindifferentaccess#reverse_merge()","Rails activesupport::hashwithindifferentaccess#reverse_merge()","Rails hash#reverse_merge()","Rails activesupport::hashwithindifferentaccess#reverse_merge!()","Rails activesupport::hashwithindifferentaccess#reverse_merge!()","Rails hash#reverse_merge!()","Rails activerecord::querymethods#reverse_order()","Rails hash#reverse_update()","Rails activerecord::migration#reversible()","Rails activerecord::migration#revert()","Rails activerecord::migration::commandrecorder#revert()","Rails activerecord::migration#reverting?()","Ruby openssl::x509::crl#revoked()","Ruby openssl::x509::crl#revoked=()","Ruby argf#rewind()","Ruby csv#rewind()","Ruby dir#rewind()","Ruby enumerator#rewind()","Ruby gem::package::tarreader#rewind()","Ruby gem::package::tarreader::entry#rewind()","Ruby io#rewind()","Ruby prime::eratosthenesgenerator#rewind()","Ruby prime::generator23#rewind()","Ruby prime::pseudoprimegenerator#rewind()","Ruby prime::trialdivisiongenerator#rewind()","Ruby rexml::parsers::lightparser#rewind()","Ruby rexml::parsers::ultralightparser#rewind()","Ruby stringio#rewind()","Ruby zlib::gzipreader#rewind()","Rails actiondispatch::http::uploadedfile#rewind()","Rails actioncontroller::httpauthentication::token#rewrite_param_values()","Ruby cgi::rfc1123_date()","Ruby date::rfc2822()","Ruby date#rfc2822()","Ruby datetime::rfc2822()","Ruby time#rfc2822()","Rails activesupport::timewithzone#rfc2822()","Ruby date#rfc3339()","Ruby date::rfc3339()","Ruby datetime#rfc3339()","Ruby datetime::rfc3339()","Ruby date#rfc822()","Ruby date::rfc822()","Ruby datetime::rfc822()","Ruby time#rfc822()","Rails activesupport::timewithzone#rfc822()","Ruby gem::specification#ri_dir()","Ruby rdoc::rubygemshook#ri_installed?()","Ruby rdoc::rubygemshook#ri_installed?()","Ruby rdoc::servlet#ri_paths()","Ruby process::gid::rid()","Ruby process::uid::rid()","Ruby array#rindex()","Ruby string#rindex()","Ruby string#rjust()","Ruby fileutils::rm()","Ruby object#rm()","Ruby fileutils::rm_f()","Ruby fileutils::rm_r()","Ruby fileutils::rm_rf()","Ruby dir::rmdir()","Ruby fileutils::rmdir()","Ruby net::ftp#rmdir()","Ruby object#rmdir()","Ruby pathname#rmdir()","Ruby shell::commandprocessor#rmdir()","Ruby fileutils::rmtree()","Ruby pathname#rmtree()","Rails ","Rails activerecord::transactions#rollback_active_record_state!()","Rails activerecord::connectionadapters::databasestatements#rollback_db_transaction()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#rollback_db_transaction()","Rails activerecord::connectionadapters::abstractadapter#rollback_to_savepoint()","Rails activerecord::connectionadapters::abstractmysqladapter#rollback_to_savepoint()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#rollback_to_savepoint()","Rails activerecord::connectionadapters::sqlite3adapter#rollback_to_savepoint()","Rails activerecord::connectionadapters::transactionstate#rolledback?()","Ruby gem::server#root()","Ruby psych::nodes::document#root()","Ruby rdoc::servlet#root()","Ruby rexml::document#root()","Ruby rexml::element#root()","Ruby rexml::light::node#root()","Rails actiondispatch::routing::mapper::base#root()","Rails actiondispatch::routing::mapper::resources#root()","Rails rails::root()","Rails rails::engine::configuration#root=()","Ruby pstore#root?()","Ruby pathname#root?()","Ruby rexml::element#root_node()","Ruby rdoc::servlet#root_search()","Ruby pstore#roots()","Ruby array#rotate()","Ruby array#rotate!()","Ruby bigdecimal#round()","Ruby float#round()","Ruby integer#round()","Ruby integer#round()","Ruby matrix#round()","Ruby numeric#round()","Ruby rexml::functions::round()","Ruby rational#round()","Ruby time#round()","Rails rails::generators::actions#route()","Ruby uri::generic#route_from()","Rails activemodel::naming::route_key()","Ruby uri::generic#route_to()","Rails rails::generators::namedbase#route_url()","Rails rails::engine::routes()","Ruby matrix#row()","Ruby matrix#row_count()","Ruby matrix#row_size()","Ruby matrix::row_vector()","Ruby matrix#row_vectors()","Ruby matrix::rows()","Ruby string#rpartition()","Ruby math::rsqrt()","Ruby rss::baseparser#rss()","Ruby string#rstrip()","Ruby string#rstrip!()","Ruby fileutils#ruby()","Ruby gem::ruby()","Ruby sys#ruby()","Ruby rdoc::markup::verbatim#ruby?()","Ruby gem::ruby_engine()","Ruby gem::ruby_version()","Ruby gem::configfile#rubygems_api_key()","Ruby gem::configfile#rubygems_api_key=()","Ruby gem::gemcutterutilities#rubygems_api_request()","Ruby gem::rubygems_version()","Ruby erb#run()","Ruby gem::commandmanager#run()","Ruby gem::ext::builder::run()","Ruby gem::gemrunner#run()","Ruby gem::server#run()","Ruby gem::server::run()","Ruby rdoc::ri::driver::run()","Ruby rdoc::ri::driver#run()","Ruby rake::application#run()","Ruby rake::application#run()","Ruby sys#run()","Ruby thread#run()","Ruby webrick::genericserver#run()","Ruby webrick::httpserver#run()","Rails activerecord::connectionadapters::connectionpool::reaper#run()","Rails activerecord::migration#run()","Rails rails::initializable::initializer#run()","Rails build#run!()","Rails activesupport::callbacks#run_callbacks()","Ruby shell::commandprocessor::run_config()","Rails activerecord::testfixtures#run_in_transaction?()","Rails rails::initializable#run_initializers()","Rails activesupport::run_load_hooks()","Ruby rake::application#run_with_threads()","Ruby rake::application#run_with_threads()","Rails rails::railtie::runner()","Rails activerecord::logsubscriber::runtime()","Rails activerecord::logsubscriber::runtime=()","Ruby gem::specification#runtime_dependencies()","Rails actionview::helpers::texthelper#safe_concat()","Rails activesupport::safebuffer#safe_concat()","Rails activesupport::inflector#safe_constantize()","Rails string#safe_constantize()","Rails activesupport::dependencies::classcache#safe_get()","Rails actionview::helpers::outputsafetyhelper#safe_join()","Ruby thread#safe_level()","Ruby fileutils#safe_ln()","Ruby fileutils::safe_unlink()","Ruby array#sample()","Rails rails::console#sandbox?()","Ruby gem::indexer#sanitize()","Rails actionview::helpers::sanitizehelper#sanitize()","Rails html::fullsanitizer#sanitize()","Rails html::sanitizer#sanitize()","Rails activerecord::sanitization::classmethods#sanitize_conditions()","Rails actionview::helpers::sanitizehelper#sanitize_css()","Rails html::whitelistsanitizer#sanitize_css()","Rails activerecord::connectionadapters::databasestatements#sanitize_limit()","Ruby rdoc::options#sanitize_path()","Rails activerecord::sanitization::classmethods#sanitize_sql()","Rails activerecord::sanitization::classmethods#sanitize_sql_array()","Rails activerecord::sanitization::classmethods#sanitize_sql_for_assignment()","Rails activerecord::sanitization::classmethods#sanitize_sql_for_conditions()","Rails activerecord::sanitization::classmethods#sanitize_sql_hash()","Rails activerecord::sanitization::classmethods#sanitize_sql_hash_for_assignment()","Rails activerecord::sanitization::classmethods#sanitize_sql_hash_for_conditions()","Ruby gem::indexer#sanitize_string()","Rails html::linksanitizer#sanitizeable?()","Rails html::sanitizer#sanitizeable?()","Ruby gem::requirement#satisfied_by?()","Ruby gem::requirement#satisfied_by?()","Ruby gem::specification#satisfies_requirement?()","Ruby date#saturday?()","Ruby time#saturday?()","Ruby rdoc::store#save()","Rails activerecord::persistence#save()","Rails activerecord::validations#save()","Rails rails::generators::activemodel#save()","Rails activerecord::persistence#save!()","Rails activerecord::validations#save!()","Ruby rdoc::store#save_cache()","Ruby rdoc::store#save_class()","Ruby bigdecimal::save_exception_mode()","Ruby irb::context#save_history()","Ruby irb::context#save_history=()","Ruby bigdecimal::save_limit()","Ruby rdoc::store#save_method()","Ruby rdoc::store#save_page()","Ruby bigdecimal::save_rounding_mode()","Ruby gem::streamui#say()","Ruby gem::userinteraction#say()","Rails activerecord::migration#say()","Rails activerecord::migration#say_with_time()","Ruby matrix::scalar()","Ruby psych::coder#scalar()","Ruby psych::handler#scalar()","Ruby psych::treebuilder#scalar()","Ruby psych::coder#scalar=()","Ruby openssl::x509::name::rfc2253dn#scan()","Ruby rdoc::parser::c#scan()","Ruby rdoc::parser::changelog#scan()","Ruby rdoc::parser::markdown#scan()","Ruby rdoc::parser::rd#scan()","Ruby rdoc::parser::ruby#scan()","Ruby rdoc::parser::simple#scan()","Ruby rexml::iosource#scan()","Ruby rexml::source#scan()","Ruby string#scan()","Ruby stringscanner#scan()","Ruby stringscanner#scan_full()","Ruby stringscanner#scan_until()","Ruby io#scanf()","Ruby kernel#scanf()","Ruby string#scanf()","Rails activerecord::connectionadapters::abstractadapter#schema_cache=()","Rails activerecord::connectionadapters::abstractadapter#schema_creation()","Rails activerecord::connectionadapters::abstractmysqladapter#schema_creation()","Rails activerecord::connectionadapters::postgresqladapter#schema_creation()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#schema_exists?()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#schema_names()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#schema_search_path()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#schema_search_path=()","Ruby uri::generic#scheme=()","Ruby uri::scheme_list()","Ruby uri::ldap#scope()","Rails actiondispatch::routing::mapper::scoping#scope()","Rails activerecord::associations::collectionproxy#scope()","Rails activerecord::scoping::named::classmethods#scope()","Ruby uri::ldap#scope=()","Rails activerecord::relation#scope_for_create()","Ruby rake::task#scope_name()","Rails activerecord::associations::collectionproxy#scoping()","Rails activerecord::relation#scoping()","Ruby curses::scrl()","Ruby curses::window#scrl()","Ruby curses::window#scroll()","Ruby cgi::htmlextension#scrolling_list()","Ruby curses::window#scrollok()","Ruby irb::jobmanager#search()","Ruby net::imap#search()","Ruby optionparser::list#search()","Ruby optionparser#search_const()","Ruby encoding::converter::search_convpath()","Rails actionview::helpers::formhelper#search_field()","Rails actionview::helpers::formtaghelper#search_field_tag()","Ruby gem::specfetcher#search_for_dependency()","Ruby stringscanner#search_full()","Ruby rdoc::classmodule#search_record()","Ruby rdoc::methodattr#search_record()","Ruby rdoc::toplevel#search_record()","Ruby webrick::httpserver#search_servlet()","Ruby rdoc::generator::jsonindex#search_string()","Ruby time#sec()","Ruby xmlrpc::datetime#sec=()","Rails array#second()","Rails numeric#second()","Ruby rss::itunesitemmodel::itunesduration#second=()","Ruby rss::maker::itunesitemmodel::itunesdurationbase#second=()","Rails numeric#seconds()","Rails datetime#seconds_since_midnight()","Rails time#seconds_since_midnight()","Rails activesupport::timezone::seconds_to_utc_offset()","Rails datetime#seconds_until_end_of_day()","Rails time#seconds_until_end_of_day()","Rails actioncontroller::httpauthentication::digest#secret_token()","Ruby openssl::config#section()","Ruby rdoc::codeobject#section()","Rails actiondispatch::routing::consoleformatter#section()","Rails actiondispatch::routing::htmltableformatter#section()","Ruby rdoc::context#section_contents()","Rails actiondispatch::routing::consoleformatter#section_title()","Rails actiondispatch::routing::htmltableformatter#section_title()","Ruby openssl::config#sections()","Ruby rdoc::context#sections()","Ruby cgi::cookie#secure=()","Ruby ","Ruby rdoc::methodattr#see()","Ruby openssl::pkey::ec::group#seed()","Ruby random#seed()","Ruby openssl::pkey::ec::group#seed=()","Ruby argf#seek()","Ruby dir#seek()","Ruby gem::package::tarreader#seek()","Ruby io#seek()","Ruby stringio#seek()","Ruby array#select()","Ruby dbm#select()","Ruby env::select()","Ruby enumerable#select()","Ruby enumerator::lazy#select()","Ruby gdbm#select()","Ruby hash#select()","Ruby io::select()","Ruby kernel#select()","Ruby net::imap#select()","Ruby sdbm#select()","Ruby struct#select()","Ruby uri::generic#select()","Ruby yaml::dbm#select()","Rails actionview::helpers::formbuilder#select()","Rails actionview::helpers::formoptionshelper#select()","Rails activerecord::associations::collectionproxy#select()","Rails activerecord::connectionadapters::databasestatements#select()","Rails activerecord::connectionadapters::mysql2adapter#select()","Rails activerecord::querymethods#select()","Rails html::selector#select()","Rails html::tag#select()","Ruby array#select!()","Ruby env::select!()","Ruby hash#select!()","Ruby set#select!()","Rails activerecord::connectionadapters::databasestatements#select_all()","Rails activerecord::connectionadapters::querycache#select_all()","Rails actionview::helpers::datehelper#select_date()","Rails actionview::helpers::datehelper#select_datetime()","Rails actionview::helpers::datehelper#select_day()","Rails html::selector#select_first()","Rails actionview::helpers::datehelper#select_hour()","Rails actionview::helpers::datehelper#select_minute()","Rails actionview::helpers::datehelper#select_month()","Rails activerecord::connectionadapters::databasestatements#select_one()","Rails activerecord::connectionadapters::databasestatements#select_rows()","Rails activerecord::connectionadapters::mysql2adapter#select_rows()","Rails activerecord::connectionadapters::mysqladapter#select_rows()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#select_rows()","Rails activerecord::connectionadapters::sqlite3adapter#select_rows()","Rails actionview::helpers::datehelper#select_second()","Rails actionview::helpers::formtaghelper#select_tag()","Rails actionview::helpers::datehelper#select_time()","Rails activerecord::connectionadapters::databasestatements#select_value()","Rails activerecord::connectionadapters::databasestatements#select_values()","Rails actionview::helpers::datehelper#select_year()","Rails html::selector()","Ruby tracepoint#self()","Ruby basicsocket#send()","Ruby object#send()","Ruby udpsocket#send()","Rails actioncontroller::implicitrender#send_action()","Rails actioncontroller::datastreaming#send_data()","Rails actioncontroller::instrumentation#send_data()","Rails actioncontroller::logsubscriber#send_data()","Rails actioncontroller::datastreaming#send_file()","Rails actioncontroller::instrumentation#send_file()","Rails actioncontroller::logsubscriber#send_file()","Ruby gem::commands::pushcommand#send_gem()","Ruby unixsocket#send_io()","Ruby net::smtp#send_mail()","Ruby net::smtp#send_message()","Ruby net::http#send_request()","Ruby net::ftp#sendcmd()","Ruby irb::frame::sender()","Ruby net::smtp#sendmail()","Ruby basicsocket#sendmsg()","Ruby basicsocket#sendmsg_nonblock()","Ruby optionparser#separator()","Ruby pp::ppmethods#seplist()","Ruby psych::coder#seq=()","Ruby rdoc::context::section#sequence()","Rails activerecord::modelschema::classmethods#sequence_name()","Rails activerecord::modelschema::classmethods#sequence_name=()","Ruby openssl::ocsp::certificateid#serial()","Ruby openssl::pkcs7::recipientinfo#serial()","Ruby openssl::pkcs7::signerinfo#serial()","Ruby openssl::x509::certificate#serial()","Ruby openssl::x509::revoked#serial()","Ruby openssl::x509::certificate#serial=()","Ruby openssl::x509::revoked#serial=()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#serial_sequence()","Rails activemodel::serialization#serializable_hash()","Rails activerecord::serialization#serializable_hash()","Rails activerecord::attributemethods::serialization::classmethods#serialize()","Rails activerecord::attributemethods::serialization#serialized_attributes()","Rails activerecord::attributemethods::serialization::classmethods#serialized_attributes()","Ruby gserver#serve()","Ruby httpserver#serve()","Ruby xmlrpc::cgiserver#serve()","Ruby xmlrpc::modrubyserver#serve()","Ruby xmlrpc::server#serve()","Ruby webrick::httpstatus::server_error?()","Ruby webrick::httprequest#server_name()","Rails actiondispatch::http::url#server_port()","Rails actiondispatch::request#server_software()","Ruby drb::extservmanager#service()","Ruby webrick::cgi#service()","Ruby webrick::httpserver#service()","Ruby webrick::httpservlet::abstractservlet#service()","Ruby xmlrpc::webrickservlet#service()","Ruby openssl::ssl::sslsocket#session=()","Ruby openssl::ssl::sslcontext#session_add()","Rails activerecord::connectionadapters::postgresqladapter#session_auth=()","Ruby openssl::ssl::sslcontext#session_cache_mode()","Ruby openssl::ssl::sslcontext#session_cache_mode=()","Ruby openssl::ssl::sslcontext#session_cache_size()","Ruby openssl::ssl::sslcontext#session_cache_size=()","Ruby openssl::ssl::sslcontext#session_cache_stats()","Rails actiondispatch::request#session_options=()","Ruby openssl::ssl::sslcontext#session_remove()","Ruby openssl::ssl::sslsocket#session_reused?()","Rails rails::application::configuration#session_store()","Ruby ipaddr#set()","Rails activemodel::errors#set()","Ruby rake::task#set_arg_names()","Ruby uri::ldap#set_attributes()","Ruby rdoc::markup::attrspan#set_attrs()","Ruby exception#set_backtrace()","Ruby optionparser::parseerror#set_backtrace()","Ruby dl#set_callback()","Rails activesupport::callbacks::classmethods#set_callback()","Ruby dl#set_callback_internal()","Ruby dl#set_cdecl_callback()","Ruby webrick::utils::set_close_on_exec()","Ruby net::httpheader#set_content_type()","Rails actionmailer::base#set_content_type()","Rails actiondispatch::response#set_cookie()","Ruby dl::cstructentity#set_ctypes()","Ruby dl::cunionentity#set_ctypes()","Ruby fiddle::cstructentity#set_ctypes()","Ruby fiddle::cunionentity#set_ctypes()","Ruby rdoc::context#set_current_section()","Ruby net::http#set_debug_output()","Ruby net::pop3#set_debug_output()","Ruby net::smtp#set_debug_output()","Ruby openssl::engine#set_default()","Ruby xmlrpc::basicserver#set_default_handler()","Ruby openssl::x509::store#set_default_paths()","Ruby zlib::deflate#set_dictionary()","Ruby zlib::inflate#set_dictionary()","Ruby uri::ldap#set_dn()","Ruby argf#set_encoding()","Ruby io#set_encoding()","Ruby rdoc::encoding::set_encoding()","Ruby stringio#set_encoding()","Rails rails::server#set_environment()","Rails rails::console#set_environment!()","Ruby erb#set_eoutvar()","Ruby rdoc::erbio#set_eoutvar()","Ruby rdoc::erbpartial#set_eoutvar()","Ruby getoptlong#set_error()","Ruby webrick::httpresponse#set_error()","Ruby uri::ldap#set_extensions()","Ruby uri::ldap#set_filter()","Rails activerecord::testfixtures::classmethods#set_fixture_class()","Ruby net::httpheader#set_form()","Ruby net::httpheader#set_form_data()","Ruby uri::generic#set_fragment()","Ruby openssl::pkey::ec::group#set_generator()","Ruby tracer::set_get_line_procs()","Ruby uri::mailto#set_headers()","Ruby uri::generic#set_host()","Ruby debugger__#set_last_thread()","Ruby irb::context#set_last_value()","Ruby logger::application#set_log()","Rails actiondispatch::routing::mapper::resources#set_member_mappings_for_resource()","Rails activerecord::attributemethods::classmethods::set_name_cache()","Ruby rss::element#set_next_element()","Ruby webrick::utils::set_non_blocking()","Ruby uri::generic#set_opaque()","Ruby optionparser::parseerror#set_option()","Ruby getoptlong#set_options()","Ruby openssl::ssl::sslcontext#set_params()","Ruby xmlrpc::parserwriterchoosemixin#set_parser()","Ruby webrick::httpauth::htdigest#set_passwd()","Ruby webrick::httpauth::htpasswd#set_passwd()","Ruby webrick::httpauth::userdb#set_passwd()","Ruby uri::generic#set_password()","Ruby uri::ftp#set_path()","Ruby uri::generic#set_path()","Ruby uri::generic#set_port()","Ruby uri::generic#set_query()","Ruby net::httpheader#set_range()","Ruby webrick::httpresponse#set_redirect()","Ruby uri::generic#set_registry()","Rails actioncontroller::live#set_response!()","Ruby uri::generic#set_scheme()","Ruby uri::ldap#set_scope()","Ruby readline::set_screen_size()","Ruby xmlrpc::basicserver#set_service_hook()","Rails actiondispatch::session::cachestore#set_session()","Ruby rss::imagefaviconmodel::imagefavicon#set_size()","Ruby net::ftp#set_socket()","Rails activerecord::connectionadapters::postgresqladapter#set_standard_conforming_strings()","Rails activerecord::connectionadapters::transactionstate#set_state()","Ruby dl#set_stdcall_callback()","Ruby uri::mailto#set_to()","Ruby openssl::pkey::ec::point#set_to_infinity!()","Ruby debugger__#set_trace()","Ruby kernel#set_trace_func()","Ruby thread#set_trace_func()","Ruby uri::ftp#set_typecode()","Ruby uri::generic#set_user()","Ruby uri::generic#set_userinfo()","Ruby xmlrpc::webrickservlet#set_valid_ip()","Ruby rdoc::context#set_visibility_for()","Ruby xmlrpc::parserwriterchoosemixin#set_writer()","Ruby net::imap#setacl()","Ruby string#setbyte()","Ruby process::sys::setegid()","Ruby process::sys::seteuid()","Ruby process::sys::setgid()","Ruby file::setgid?()","Ruby file::stat#setgid?()","Ruby filetest#setgid?()","Ruby pathname#setgid?()","Ruby etc::setgrent()","Ruby process::setpgid()","Ruby process::setpgrp()","Ruby curses::setpos()","Ruby curses::window#setpos()","Ruby process::setpriority()","Ruby win32ole#setproperty()","Ruby etc::setpwent()","Ruby net::imap#setquota()","Ruby process::sys::setregid()","Ruby process::sys::setresgid()","Ruby process::sys::setresuid()","Ruby process::sys::setreuid()","Ruby process::sys::setrgid()","Ruby process::setrlimit()","Ruby process::sys::setruid()","Ruby curses::setscrreg()","Ruby curses::window#setscrreg()","Ruby process::setsid()","Ruby basicsocket#setsockopt()","Ruby rss::baselistener#setter()","Ruby process::sys::setuid()","Ruby file::setuid?()","Ruby file::stat#setuid?()","Ruby filetest#setuid?()","Ruby pathname#setuid?()","Ruby object#setup()","Ruby openssl::ssl::sslcontext#setup()","Ruby rdoc::generator::darkfish#setup()","Ruby rdoc::rubygemshook#setup()","Ruby rdoc::rubygemshook#setup()","Ruby drb::drbsslsocket::sslconfig#setup_certificate()","Rails activerecord::testfixtures::classmethods#setup_fixture_accessors()","Rails activerecord::testfixtures#setup_fixtures()","Ruby rdoc::options#setup_generator()","Rails rails::api::task#setup_horo_variables()","Ruby rss::atom::entry#setup_maker()","Ruby rss::rdf::seq#setup_maker()","Ruby rss::rdf::seq#setup_maker()","Ruby rss::rootelementmixin#setup_maker()","Ruby rss::setupmaker#setup_maker()","Ruby rss::xmlstylesheet#setup_maker()","Ruby rss::rss#setup_maker_elements()","Ruby rdoc::rdoc#setup_output_dir()","Ruby rdoc::ri::driver#setup_pager()","Ruby webrick::accesslog#setup_params()","Ruby rdoc::markup::parser#setup_scanner()","Ruby gem::package#setup_signer()","Ruby drb::drbsslsocket::sslconfig#setup_ssl_context()","Ruby ripper::sexp()","Ruby ripper::sexp_raw()","Ruby shell::processcontroller#sfork()","Ruby fileutils#sh()","Rails actiondispatch::routing::mapper::resources#shallow()","Rails actiondispatch::routing::mapper::resources#shallow?()","Ruby gem::installer#shebang()","Ruby shellwords::shellescape()","Ruby string#shellescape()","Ruby array#shelljoin()","Ruby shellwords::shelljoin()","Ruby shellwords::shellsplit()","Ruby string#shellsplit()","Ruby shellwords::shellwords()","Ruby array#shift()","Ruby csv#shift()","Ruby dbm#shift()","Ruby env::shift()","Ruby gdbm#shift()","Ruby hash#shift()","Ruby queue#shift()","Ruby sdbm#shift()","Ruby sizedqueue#shift()","Ruby yaml::dbm#shift()","Ruby openssl::asn1::objectid#short_name()","Rails actioncontroller::rescue#show_detailed_exceptions?()","Ruby rdoc::servlet#show_documentation()","Rails rails::application#show_exceptions_app()","Ruby gem::command#show_help()","Ruby gem::command#show_lookup_failure()","Ruby gem::commands::ownercommand#show_owners()","Ruby gem::server#show_rdoc_for_pattern()","Ruby gem::commands::setupcommand#show_release_notes()","Rails activerecord::connectionadapters::abstractmysqladapter#show_variable()","Ruby optionparser#show_version()","Ruby array#shuffle()","Ruby array#shuffle!()","Ruby basicsocket#shutdown()","Ruby gserver#shutdown()","Ruby webrick::genericserver#shutdown()","Ruby xmlrpc::server#shutdown()","Ruby process::gid::sid_available?()","Ruby process::uid::sid_available?()","Ruby bigdecimal#sign()","Ruby gem::commands::certcommand#sign()","Ruby gem::security::sign()","Ruby gem::security::signer#sign()","Ruby openssl::netscape::spki#sign()","Ruby openssl::ocsp::basicresponse#sign()","Ruby openssl::ocsp::request#sign()","Ruby openssl::pkcs7::sign()","Ruby openssl::pkey::pkey#sign()","Ruby openssl::x509::crl#sign()","Ruby openssl::x509::certificate#sign()","Ruby openssl::x509::request#sign()","Ruby gem::gemcutterutilities#sign_in()","Ruby conditionvariable#signal()","Ruby monitormixin::conditionvariable#signal()","Ruby rinda::waittemplateentry#signal()","Ruby irb::irb#signal_handle()","Ruby irb::irb#signal_status()","Ruby process::status#signaled?()","Ruby signal::signame()","Ruby rdoc::tomdoc::signature()","Rails activerecord::dynamicmatchers::finder#signature()","Ruby openssl::x509::crl#signature_algorithm()","Ruby openssl::x509::certificate#signature_algorithm()","Ruby openssl::x509::request#signature_algorithm()","Rails actiondispatch::cookies::chainedcookiejars#signed()","Rails actiondispatch::cookies::chainedcookiejars#signed_or_encrypted()","Ruby openssl::pkcs7::signerinfo#signed_time()","Ruby dl::valueutil#signed_value()","Ruby openssl::pkcs7#signers()","Ruby signalexception#signo()","Rails activesupport::benchmarkable#silence()","Rails activesupport::deprecation::reporting#silence()","Rails kernel#silence()","Rails loggersilence#silence()","Rails activesupport::cache::store#silence!()","Rails kernel#silence_stream()","Rails kernel#silence_warnings()","Rails actionview::helpers::texthelper#simple_format()","Rails html::selector#simple_selector()","Ruby bigmath#sin()","Ruby cmath::sin()","Ruby math::sin()","Ruby cmath::sin!()","Rails activesupport::duration#since()","Rails activesupport::timewithzone#since()","Rails date#since()","Rails datetime#since()","Rails numeric#since()","Rails time#since()","Ruby rexml::validation::event#single?()","Ruby singleforwardable#single_delegate()","Ruby prettyprint::singleline_format()","Ruby pp::singleline_pp()","Ruby object#singleton_class()","Ruby numeric#singleton_method_added()","Ruby object#singleton_methods()","Rails activemodel::naming::singular()","Rails activesupport::inflector::inflections#singular()","Ruby matrix#singular?()","Ruby matrix::lupdecomposition#singular?()","Rails activemodel::naming::singular_route_key()","Rails rails::generators::namedbase#singular_table_name()","Rails activesupport::inflector#singularize()","Rails string#singularize()","Ruby cmath::sinh()","Ruby math::sinh()","Ruby cmath::sinh!()","Ruby net::ftp#site()","Ruby rdoc::ri::paths::site_dir()","Ruby array#size()","Ruby bignum#size()","Ruby dbm#size()","Ruby dl::cptr#size()","Ruby dl::cstructentity::size()","Ruby dl::cunionentity::size()","Ruby dl::packer#size()","Ruby dl::stack#size()","Ruby digest::instance#size()","Ruby env::size()","Ruby enumerator#size()","Ruby fiddle::cstructentity::size()","Ruby fiddle::cunionentity::size()","Ruby fiddle::pointer#size()","Ruby file::size()","Ruby file#size()","Ruby file::stat#size()","Ruby filetest#size()","Ruby fixnum#size()","Ruby gdbm#size()","Ruby gem::availableset#size()","Ruby hash#size()","Ruby matchdata#size()","Ruby net::ftp#size()","Ruby pathname#size()","Ruby queue#size()","Ruby rexml::light::node#size()","Ruby rexml::parent#size()","Ruby rexml::syncenumerator#size()","Ruby range#size()","Ruby rinda::tuple#size()","Ruby rinda::tupleentry#size()","Ruby sdbm#size()","Ruby set#size()","Ruby string#size()","Ruby stringio#size()","Ruby struct#size()","Ruby symbol#size()","Ruby tempfile#size()","Ruby vector#size()","Rails actiondispatch::http::uploadedfile#size()","Rails actiondispatch::middlewarestack#size()","Rails activemodel::errors#size()","Rails activerecord::associations::collectionproxy#size()","Rails activerecord::connectionadapters::schemacache#size()","Rails activerecord::fixtureset#size()","Rails activerecord::relation#size()","Ruby dl::cptr#size=()","Ruby fiddle::pointer#size=()","Ruby rss::imagefaviconmodel::imagefavicon#size=()","Ruby file::size?()","Ruby file::stat#size?()","Ruby filetest#size?()","Ruby pathname#size?()","Ruby win32ole_method#size_opt_params()","Ruby win32ole_method#size_params()","Ruby dl::importer#sizeof()","Ruby fiddle::importer#sizeof()","Ruby argf#skip()","Ruby rdoc::markup::parser#skip()","Ruby stringscanner#skip()","Rails abstractcontroller::callbacks::classmethods#skip_action_callback()","Rails abstractcontroller::callbacks::classmethods#skip_after_action()","Rails abstractcontroller::callbacks::classmethods#skip_around_action()","Rails abstractcontroller::callbacks::classmethods#skip_before_action()","Ruby csv#skip_blanks?()","Rails activesupport::callbacks::classmethods#skip_callback()","Ruby gem::deprecate::skip_during()","Rails abstractcontroller::callbacks::classmethods#skip_filter()","Ruby rdoc::parser::ruby#skip_for_variable()","Ruby rdoc::parser::ruby#skip_method()","Ruby rdoc::parser::ruby#skip_optional_do_after_expression()","Ruby rdoc::parser::rubytools#skip_tkspace()","Ruby rdoc::parser::ruby#skip_tkspace_comment()","Ruby stringscanner#skip_until()","Ruby kernel#sleep()","Ruby mutex#sleep()","Ruby mutex_m#sleep()","Ruby array#slice()","Ruby ripper::slice()","Ruby string#slice()","Ruby symbol#slice()","Rails actioncontroller::parameters#slice()","Rails activerecord::core#slice()","Rails hash#slice()","Ruby array#slice!()","Ruby string#slice!()","Rails activesupport::multibyte::chars#slice!()","Rails hash#slice!()","Ruby enumerable#slice_before()","Ruby enumerator::lazy#slice_before()","Ruby openssl::asn1::objectid#sn()","Ruby rdoc::text#snippet()","Ruby socket::sockaddr_in()","Ruby socket::sockaddr_un()","Ruby file::socket?()","Ruby file::stat#socket?()","Ruby filetest#socket?()","Ruby pathname#socket?()","Ruby socket::socketpair()","Ruby unixsocket::socketpair()","Ruby addrinfo#socktype()","Ruby matrix::lupdecomposition#solve()","Ruby array#sort()","Ruby enumerable#sort()","Ruby net::imap#sort()","Ruby array#sort!()","Ruby enumerable#sort_by()","Ruby array#sort_by!()","Ruby gem::specification#sort_obj()","Ruby rdoc::context#sort_sections()","Ruby gem::availableset#sorted()","Ruby gem::requestset#sorted_requests()","Ruby gem::requestset::gemdepedencyapi#source()","Ruby rdoc::store#source()","Ruby rexml::parsers::sax2parser#source()","Ruby rake::task#source()","Ruby regexp#source()","Ruby encoding::converter#source_encoding()","Ruby encoding::invalidbytesequenceerror#source_encoding()","Ruby encoding::undefinedconversionerror#source_encoding()","Ruby encoding::invalidbytesequenceerror#source_encoding_name()","Ruby encoding::undefinedconversionerror#source_encoding_name()","Rails actiondispatch::exceptionwrapper#source_extract()","Ruby irb::irbloader#source_file()","Ruby gem::availableset#source_for()","Ruby method#source_location()","Ruby proc#source_location()","Ruby unboundmethod#source_location()","Ruby win32ole_type#source_ole_types()","Rails rails::generators::base::source_root()","Ruby gem::sources()","Ruby rake::task#sources()","Ruby gem::sources=()","Ruby kernel#spawn()","Ruby pty::spawn()","Ruby process::spawn()","Ruby gem::dependencyresolver::indexspecification#spec()","Ruby gem::installer#spec()","Ruby gem::package#spec()","Ruby gem::package::old#spec()","Ruby gem::specification#spec_dir()","Ruby gem::installer#spec_file()","Ruby gem::specification#spec_file()","Ruby gem::specfetcher#spec_for_dependency()","Ruby gem::nametuple#spec_name()","Ruby gem::specification#spec_name()","Ruby gem::commands::lockcommand#spec_path()","Ruby gem::dependencylist#spec_predecessors()","Ruby readline::special_prefixes()","Ruby readline::special_prefixes=()","Ruby gem::dependency#specific?()","Ruby gem::requirement#specific?()","Ruby gem::requirement#specific?()","Ruby gem::command::specific_extra_args()","Ruby gem::command::specific_extra_args_hash()","Ruby gem::requestset#specs()","Ruby gem::server#specs()","Ruby gem::requestset#specs_in()","Ruby bigdecimal#split()","Ruby file::split()","Ruby pathname#split()","Ruby shellwords::split()","Ruby string#split()","Ruby uri::split()","Ruby uri::parser#split()","Rails activesupport::multibyte::chars#split()","Rails array#split()","Ruby fileutils#split_all()","Ruby sys#split_all()","Ruby webrick::httputils::split_header_value()","Ruby rdoc::markup::attributemanager#split_into_flow()","Ruby kernel#sprintf()","Rails activerecord::logsubscriber#sql()","Rails activerecord::connectionadapters::databasestatements#sql_for_insert()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#sql_for_insert()","Rails activerecord::connectionadapters::databaselimits#sql_query_length()","Rails activerecord::connectionadapters::sqlite3adapter#sqlite_version()","Ruby bigdecimal#sqrt()","Ruby bigmath#sqrt()","Ruby cmath::sqrt()","Ruby math::sqrt()","Ruby cmath::sqrt!()","Ruby matrix#square?()","Ruby string#squeeze()","Ruby string#squeeze!()","Rails string#squish()","Rails string#squish!()","Ruby kernel#srand()","Ruby random::srand()","Ruby win32ole_type#src_type()","Ruby net::smtp#ssl?()","Ruby webrick::httprequest#ssl?()","Ruby net::pop3::ssl_params()","Ruby openssl::ssl::sslsocket#ssl_version()","Ruby openssl::ssl::sslcontext#ssl_version=()","Rails actioncontroller::conditionalget#stale?()","Rails actiondispatch::session::stalesessioncheck#stale_session_check!()","Ruby rexml::document#stand_alone?()","Ruby rake::application#standard_exception_handling()","Ruby rake::application#standard_exception_handling()","Ruby ","Rails actiondispatch::http::url#standard_port()","Rails actiondispatch::http::url#standard_port?()","Ruby rake::application#standard_rake_options()","Ruby rake::application#standard_rake_options()","Ruby curses::standend()","Ruby curses::window#standend()","Ruby curses::standout()","Ruby curses::window#standout()","Ruby coverage::start()","Ruby date#start()","Ruby gc::start()","Ruby gserver#start()","Ruby irb::start()","Ruby logger::application#start()","Ruby net::http#start()","Ruby net::http::start()","Ruby net::pop3::start()","Ruby net::pop3#start()","Ruby net::smtp::start()","Ruby net::smtp#start()","Ruby psych::streaming#start()","Ruby psych::visitors::yamltree#start()","Ruby shell::systemcommand#start()","Ruby thread::start()","Ruby webrick::cgi#start()","Ruby webrick::daemon::start()","Ruby webrick::genericserver#start()","Ruby webrick::simpleserver::start()","Rails activesupport::logsubscriber#start()","Rails activesupport::notifications::fanout#start()","Rails activesupport::notifications::fanout::subscribers::timed#start()","Rails activesupport::notifications::instrumenter#start()","Rails activesupport::subscriber#start()","Rails rails::console::start()","Rails rails::console#start()","Rails rails::dbconsole::start()","Rails rails::dbconsole#start()","Rails rails::server#start()","Ruby rss::rexmllikexmlparser#startelement()","Ruby xmlrpc::xmlparser::streamparsermixin#startelement()","Ruby rdoc::markup::toansi#start_accepting()","Ruby rdoc::markup::tohtml#start_accepting()","Ruby rdoc::markup::tohtmlsnippet#start_accepting()","Ruby rdoc::markup::tordoc#start_accepting()","Ruby rdoc::markup::totableofcontents#start_accepting()","Ruby rdoc::markup::tottonly#start_accepting()","Ruby rdoc::tokenstream#start_collecting_tokens()","Ruby curses::start_color()","Ruby rdoc::codeobject#start_doc()","Ruby psych::handler#start_document()","Ruby psych::treebuilder#start_document()","Ruby rexml::sax2listener#start_document()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#start_document()","Ruby rexml::sax2listener#start_element()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#start_element()","Ruby rexml::parsers::pullevent#start_element?()","Ruby shell::systemcommand#start_export()","Ruby shell::systemcommand#start_import()","Ruby shell::processcontroller#start_job()","Ruby psych::handler#start_mapping()","Ruby rexml::sax2listener#start_prefix_mapping()","Rails actioncontroller::logsubscriber#start_processing()","Ruby profiler__#start_profile()","Ruby psych::handler#start_sequence()","Ruby rdoc::ri::driver#start_server()","Ruby drb::start_service()","Ruby psych::handler#start_stream()","Ruby psych::treebuilder#start_stream()","Ruby string#start_with?()","Ruby net::http#started?()","Ruby net::pop3#started?()","Ruby net::smtp#started?()","Rails rails::rack::logger#started_request_message()","Ruby gserver#starting()","Ruby rexml::functions::starts_with()","Ruby net::imap#starttls()","Ruby net::smtp#starttls()","Ruby net::smtp#starttls?()","Ruby net::smtp#starttls_always?()","Ruby net::smtp#starttls_auto?()","Ruby file::stat()","Ruby gc::stat()","Ruby io#stat()","Ruby pathname#stat()","Ruby openssl::ssl::sslsocket#state()","Rails activesupport::cache::memcachestore#stats()","Ruby net::ftp#status()","Ruby net::imap#status()","Ruby openssl::ocsp::basicresponse#status()","Ruby openssl::ocsp::response#status()","Ruby pty::childexited#status()","Ruby systemexit#status()","Ruby thread#status()","Rails actioncontroller::metal#status()","Ruby webrick::httpresponse#status=()","Rails actioncontroller::metal#status=()","Rails actiondispatch::response#status=()","Rails actiondispatch::exceptionwrapper#status_code()","Rails actiondispatch::exceptionwrapper::status_code_for_exception()","Ruby webrick::httpresponse#status_line()","Rails actiondispatch::response#status_message()","Ruby openssl::ocsp::response#status_string()","Ruby net::smtp::response#status_type_char()","Ruby debugger__#stdout()","Ruby debugger__#stdout=()","Ruby curses::stdscr()","Ruby date#step()","Ruby numeric#step()","Ruby range#step()","Rails activerecord::inheritance::classmethods#sti_name()","Ruby file::sticky?()","Ruby file::stat#sticky?()","Ruby filetest#sticky?()","Ruby pathname#sticky?()","Ruby gserver#stop()","Ruby gserver::stop()","Ruby thread::stop()","Ruby webrick::genericserver#stop()","Ruby thread#stop?()","Ruby rdoc::codeobject#stop_doc()","Ruby profiler__#stop_profile()","Ruby drb::stop_service()","Ruby drb::drbserver#stop_service()","Ruby drb::extserv#stop_service()","Ruby gserver#stopped?()","Ruby process::status#stopped?()","Ruby rake::pseudostatus#stopped?()","Ruby gserver#stopping()","Ruby process::status#stopsig()","Ruby net::ftp#storbinary()","Ruby dbm#store()","Ruby env::store()","Ruby gdbm#store()","Ruby hash#store()","Ruby net::imap#store()","Ruby sdbm#store()","Ruby yaml::dbm#store()","Rails activerecord::store::classmethods#store()","Rails activesupport::dependencies::classcache#store()","Ruby rdoc::anymethod#store=()","Ruby rdoc::classmodule#store=()","Ruby rdoc::constant#store=()","Ruby rdoc::extend#store=()","Ruby rdoc::include#store=()","Ruby rdoc::methodattr#store=()","Ruby rdoc::rdoc#store=()","Rails activerecord::store::classmethods#store_accessor()","Ruby rdoc::servlet#store_for()","Rails activesupport::descendantstracker::store_inherited()","Ruby net::ftp#storlines()","Ruby rexml::parsers::baseparser#stream=()","Ruby zlib::zstream#stream_end?()","Ruby psych::handler#streaming?()","Ruby gc::stress()","Ruby gc::stress=()","Ruby date#strftime()","Ruby datetime#strftime()","Ruby time#strftime()","Rails activesupport::timewithzone#strftime()","Ruby base64#strict_decode64()","Ruby base64#strict_encode64()","Rails activerecord::connectionadapters::abstractmysqladapter#strict_mode?()","Ruby matchdata#string()","Ruby rexml::functions::string()","Ruby stringio#string()","Ruby stringscanner#string()","Ruby stringio#string=()","Ruby stringscanner#string=()","Ruby rexml::functions::string_length()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#string_to_array()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#string_to_bit()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#string_to_cidr()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#string_to_hstore()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#string_to_json()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#string_to_point()","Rails activerecord::connectionadapters::postgresqlcolumn::cast#string_to_time()","Ruby rexml::functions::string_value()","Rails activesupport::hashwithindifferentaccess#stringify_keys()","Rails activesupport::hashwithindifferentaccess#stringify_keys()","Rails hash#stringify_keys()","Rails activesupport::hashwithindifferentaccess#stringify_keys!()","Rails activesupport::hashwithindifferentaccess#stringify_keys!()","Rails hash#stringify_keys!()","Ruby string#strip()","Ruby string#strip!()","Ruby rdoc::text#strip_hashes()","Rails string#strip_heredoc()","Rails actionview::helpers::sanitizehelper#strip_links()","Ruby rdoc::text#strip_newlines()","Ruby rdoc::text#strip_stars()","Rails actionview::helpers::sanitizehelper#strip_tags()","Ruby rdoc::markdown#strong()","Ruby tsort#strongly_connected_components()","Ruby date::strptime()","Ruby datetime::strptime()","Ruby time#strptime()","Ruby dl::importer#struct()","Ruby fiddle::importer#struct()","Ruby xmlrpc::convert::struct()","Rails activerecord::tasks::databasetasks#structure_dump()","Rails activerecord::tasks::databasetasks#structure_load()","Rails actionview::helpers::assettaghelper#stylesheet_link_tag()","Rails actionview::helpers::asseturlhelper#stylesheet_path()","Rails actionview::helpers::asseturlhelper#stylesheet_url()","Rails rails::pluginbuilder#stylesheets()","Ruby webrick::utils::su()","Ruby bigdecimal#sub()","Ruby kernel#sub()","Ruby pathname#sub()","Ruby string#sub()","Ruby string#sub!()","Ruby pathname#sub_ext()","Ruby net::httpheader#sub_type()","Rails class#subclasses()","Rails rails::generators::subclasses()","Rails rails::railtie::subclasses()","Rails actiondispatch::http::url#subdomain()","Ruby resolv::dns::name#subdomain_of?()","Rails actiondispatch::http::url#subdomains()","Ruby openssl::x509::certificate#subject()","Ruby openssl::x509::request#subject()","Ruby openssl::x509::certificate#subject=()","Ruby openssl::x509::request#subject=()","Ruby openssl::x509::extensionfactory#subject_certificate=()","Ruby openssl::x509::extensionfactory#subject_request=()","Ruby cgi::htmlextension#submit()","Rails actionview::helpers::formbuilder#submit()","Rails actionview::helpers::formtaghelper#submit_tag()","Ruby curses::pad#subpad()","Rails activerecord::connectionadapters::abstractmysqladapter#subquery_for()","Rails activerecord::connectionadapters::databasestatements#subquery_for()","Ruby net::imap#subscribe()","Rails activesupport::notifications::subscribe()","Rails activesupport::notifications::fanout#subscribe()","Rails activesupport::notifications::subscribed()","Rails activesupport::subscriber::subscribers()","Ruby time#subsec()","Ruby set#subset?()","Rails activerecord::connectionadapters::abstractadapter#substitute_at()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#substitute_at()","Ruby rexml::functions::substring()","Ruby rexml::functions::substring_after()","Ruby rexml::functions::substring_before()","Ruby set#subtract()","Ruby curses::window#subwin()","Ruby date#succ()","Ruby fixnum#succ()","Ruby ipaddr#succ()","Ruby integer#succ()","Ruby integer#succ()","Ruby prime::eratosthenesgenerator#succ()","Ruby prime::generator23#succ()","Ruby prime::oldcompatibility#succ()","Ruby prime::pseudoprimegenerator#succ()","Ruby prime::trialdivisiongenerator#succ()","Ruby string#succ()","Ruby symbol#succ()","Ruby time#succ()","Ruby string#succ!()","Ruby net::smtp::response#success?()","Ruby process::status#success?()","Ruby systemexit#success?()","Ruby webrick::httpstatus::success?()","Rails activerecord::dynamicmatchers::findbybang::suffix()","Rails activerecord::dynamicmatchers::method::suffix()","Ruby gem::suffix_pattern()","Ruby gem::suffixes()","Ruby gem::specfetcher#suggest_gems_from_name()","Ruby rexml::functions::sum()","Ruby string#sum()","Rails activerecord::calculations#sum()","Rails enumerable#sum()","Ruby optionparser#summarize()","Ruby optionparser::list#summarize()","Ruby optionparser::switch#summarize()","Ruby rdoc::stats#summary()","Ruby gem::specification#summary=()","Rails dateandtime::calculations#sunday()","Ruby date#sunday?()","Ruby time#sunday?()","Ruby shell::systemcommand#super_each()","Ruby class#superclass()","Ruby rdoc::classmodule#superclass()","Ruby rdoc::normalmodule#superclass()","Ruby rdoc::classmodule#superclass=()","Rails class#superclass_delegating_accessor()","Ruby rdoc::anymethod#superclass_method()","Ruby set#superset?()","Ruby rss::maker#supported?()","Rails activerecord::connectionadapters::sqlite3adapter#supports_add_column?()","Rails activerecord::connectionadapters::abstractadapter#supports_bulk_alter?()","Rails activerecord::connectionadapters::abstractadapter#supports_count_distinct?()","Rails activerecord::connectionadapters::abstractadapter#supports_ddl_transactions?()","Rails activerecord::connectionadapters::postgresqladapter#supports_ddl_transactions?()","Rails activerecord::connectionadapters::sqlite3adapter#supports_ddl_transactions?()","Rails activerecord::connectionadapters::abstractadapter#supports_explain?()","Rails activerecord::connectionadapters::mysql2adapter#supports_explain?()","Rails activerecord::connectionadapters::postgresqladapter#supports_explain?()","Rails activerecord::connectionadapters::sqlite3adapter#supports_explain?()","Rails activerecord::connectionadapters::abstractadapter#supports_extensions?()","Rails activerecord::connectionadapters::postgresqladapter#supports_extensions?()","Rails activerecord::connectionadapters::abstractadapter#supports_index_sort_order?()","Rails activerecord::connectionadapters::abstractmysqladapter#supports_index_sort_order?()","Rails activerecord::connectionadapters::postgresqladapter#supports_index_sort_order?()","Rails activerecord::connectionadapters::sqlite3adapter#supports_index_sort_order?()","Rails activerecord::connectionadapters::postgresqladapter#supports_insert_with_returning?()","Rails activerecord::connectionadapters::abstractadapter#supports_migrations?()","Rails activerecord::connectionadapters::abstractmysqladapter#supports_migrations?()","Rails activerecord::connectionadapters::postgresqladapter#supports_migrations?()","Rails activerecord::connectionadapters::abstractadapter#supports_partial_index?()","Rails activerecord::connectionadapters::postgresqladapter#supports_partial_index?()","Rails activerecord::connectionadapters::abstractadapter#supports_primary_key?()","Rails activerecord::connectionadapters::abstractmysqladapter#supports_primary_key?()","Rails activerecord::connectionadapters::postgresqladapter#supports_ranges?()","Rails activerecord::connectionadapters::abstractadapter#supports_savepoints?()","Rails activerecord::connectionadapters::abstractmysqladapter#supports_savepoints?()","Rails activerecord::connectionadapters::postgresqladapter#supports_savepoints?()","Rails activerecord::connectionadapters::sqlite3adapter#supports_savepoints?()","Rails activerecord::connectionadapters::databasestatements#supports_statement_cache?()","Rails activerecord::connectionadapters::mysqladapter#supports_statement_cache?()","Rails activerecord::connectionadapters::postgresqladapter#supports_statement_cache?()","Rails activerecord::connectionadapters::sqlite3adapter#supports_statement_cache?()","Rails actionview::template#supports_streaming?()","Rails actionview::template::handlers::erb#supports_streaming?()","Rails activerecord::connectionadapters::abstractadapter#supports_transaction_isolation?()","Rails activerecord::connectionadapters::abstractmysqladapter#supports_transaction_isolation?()","Rails activerecord::connectionadapters::postgresqladapter#supports_transaction_isolation?()","Rails kernel#suppress()","Rails activerecord::migration#suppress_messages()","Ruby rdoc::markup::totableofcontents#suppressed?()","Ruby debugger__#suspend()","Ruby irb::irb#suspend_context()","Ruby irb::irb#suspend_input_method()","Ruby irb::irb#suspend_name()","Ruby irb::irb#suspend_workspace()","Rails actiondispatch::middlewarestack#swap()","Rails rails::configuration::middlewarestackproxy#swap()","Ruby string#swapcase()","Ruby symbol#swapcase()","Rails activesupport::multibyte::chars#swapcase()","Rails activesupport::multibyte::unicode#swapcase()","Ruby string#swapcase!()","Rails activesupport::multibyte::unicode::codepoint#swapcase_mapping()","Ruby irb::jobmanager#switch()","Ruby process::gid::switch()","Ruby process::uid::switch()","Ruby optionparser::switch#switch_name()","Ruby dl::compositehandler#sym()","Ruby dl::handle#sym()","Ruby dl::handle::sym()","Ruby fiddle::compositehandler#sym()","Ruby fiddle::handle::sym()","Ruby fiddle::handle#sym()","Rails activesupport::hashwithindifferentaccess#symbolize_keys()","Rails activesupport::hashwithindifferentaccess#symbolize_keys()","Rails hash#symbolize_keys()","Rails hash#symbolize_keys!()","Rails activerecord::inheritance::classmethods#symbolized_base_class()","Rails actiondispatch::http::parameters#symbolized_path_parameters()","Rails activerecord::inheritance::classmethods#symbolized_sti_name()","Rails mime::mimes#symbols()","Ruby file::symlink()","Ruby fileutils::symlink()","Ruby sys#symlink()","Ruby file::symlink?()","Ruby file::stat#symlink?()","Ruby filetest#symlink?()","Ruby pathname#symlink?()","Ruby rake::ftpfile#symlink?()","Ruby sys#symlink_files()","Ruby matrix#symmetric?()","Ruby gdbm#sync()","Ruby io#sync()","Ruby stringio#sync()","Ruby zlib::gzipfile#sync()","Ruby zlib::inflate#sync()","Ruby io#sync=()","Ruby stringio#sync=()","Ruby zlib::gzipfile#sync=()","Ruby sync_m#sync_exclusive?()","Ruby sync_m#sync_exclusive?()","Ruby sync_m#sync_extend()","Ruby sync_m#sync_extend()","Ruby sync_m#sync_inspect()","Ruby sync_m#sync_inspect()","Ruby sync_m#sync_lock()","Ruby sync_m#sync_lock()","Ruby sync_m#sync_locked?()","Ruby sync_m#sync_locked?()","Ruby zlib::inflate#sync_point?()","Ruby sync_m#sync_shared?()","Ruby sync_m#sync_shared?()","Ruby sync_m#sync_synchronize()","Ruby sync_m#sync_synchronize()","Ruby sync_m#sync_try_lock()","Ruby sync_m#sync_try_lock()","Ruby sync_m#sync_unlock()","Ruby sync_m#sync_unlock()","Ruby monitormixin#synchronize()","Ruby mutex#synchronize()","Ruby gdbm#syncmode=()","Ruby ","Ruby rake::taskmanager#synthesize_file_task()","Ruby socket#sysaccept()","Ruby tcpserver#sysaccept()","Ruby unixserver#sysaccept()","Ruby kernel#syscall()","Ruby openssl::ssl::sslsocket#sysclose()","Ruby etc::sysconfdir()","Ruby syslog::logger::syslog()","Ruby syslog::logger::syslog=()","Ruby io::sysopen()","Ruby pathname#sysopen()","Ruby io#sysread()","Ruby io::readable#sysread()","Ruby object#sysread()","Ruby openssl::ssl::sslsocket#sysread()","Ruby io#sysseek()","Ruby openssl::pkey::dsa#syssign()","Ruby kernel#system()","Ruby net::ftp#system()","Ruby rexml::doctype#system()","Ruby rake::altsystem#system()","Ruby shell::commandprocessor#system()","Ruby rdoc::ri::paths::system_dir()","Ruby rake::application#system_dir()","Ruby rake::application#system_dir()","Ruby shell#system_path=()","Ruby etc::systmpdir()","Ruby openssl::pkey::dsa#sysverify()","Ruby io#syswrite()","Ruby openssl::ssl::sslsocket#syswrite()","Ruby matrix#t()","Rails abstractcontroller::translation#t()","Rails actionview::helpers::translationhelper#t()","Ruby csv::table()","Rails activerecord::connectionadapters::schemastatements#table_alias_for()","Rails activerecord::connectionadapters::databaselimits#table_alias_length()","Rails activerecord::connectionadapters::postgresqladapter#table_alias_length()","Rails activerecord::connectionadapters::abstractmysqladapter#table_exists?()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#table_exists?()","Rails activerecord::connectionadapters::sqlite3adapter#table_exists?()","Rails activerecord::connectionadapters::schemacache#table_exists?()","Rails activerecord::connectionadapters::schemastatements#table_exists?()","Rails activerecord::modelschema::classmethods#table_exists?()","Rails activerecord::modelschema::classmethods#table_name()","Rails activerecord::schemamigration::table_name()","Rails rails::generators::namedbase#table_name()","Rails activerecord::modelschema::classmethods#table_name=()","Rails activerecord::connectionadapters::databaselimits#table_name_length()","Ruby rdoc::markup::document#table_of_contents()","Rails activerecord::fixtureset#table_rows()","Rails activerecord::connectionadapters::sqlite3adapter#table_structure()","Rails activesupport::inflector#tableize()","Rails string#tableize()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#tables()","Rails activerecord::connectionadapters::schemacache#tables()","Ruby xmlrpc::xmlwriter::abstract#tag()","Rails actionview::helpers::activemodelinstancetag#tag()","Rails actionview::helpers::taghelper#tag()","Ruby rexml::streamlistener#tag_end()","Ruby rss::listenermixin#tag_end()","Ruby rss::element#tag_name()","Ruby rexml::streamlistener#tag_start()","Ruby rss::listenermixin#tag_start()","Rails activesupport::taggedlogging#tagged()","Ruby psych::tagurize()","Rails rails::rack::logtailer#tail!()","Ruby delegator#taint()","Ruby object#taint()","Ruby pathname#taint()","Ruby object#tainted?()","Ruby array#take()","Ruby enumerable#take()","Ruby enumerator::lazy#take()","Ruby rinda::tuplespace#take()","Ruby rinda::tuplespaceproxy#take()","Rails activerecord::findermethods#take()","Rails activerecord::findermethods#take!()","Ruby array#take_while()","Ruby enumerable#take_while()","Ruby enumerator::lazy#take_while()","Ruby cmath::tan()","Ruby math::tan()","Ruby cmath::tan!()","Ruby cmath::tanh()","Ruby math::tanh()","Ruby cmath::tanh!()","Ruby object#tap()","Ruby rake::packagetask#tar_bz2_file()","Ruby rake::packagetask#tar_gz_file()","Rails activerecord::associations::collectionproxy#target()","Ruby rake::task#task_defined?()","Ruby rake::namespace#tasks()","Ruby rake::task#tasks()","Ruby rake::taskmanager#tasks()","Rails build#tasks()","Ruby rake::taskmanager#tasks_in_scope()","Ruby addrinfo::tcp()","Ruby socket::tcp_server_loop()","Ruby socket::tcp_server_sockets()","Rails activerecord::testfixtures#teardown_fixtures()","Ruby shell::commandprocessor#tee()","Rails actionview::helpers::formhelper#telephone_field()","Rails actionview::helpers::formtaghelper#telephone_field_tag()","Ruby argf#tell()","Ruby dir#tell()","Ruby io#tell()","Ruby stringio#tell()","Ruby zlib::gzipreader#tell()","Ruby zlib::gzipwriter#tell()","Ruby net::telnet#telnetmode()","Ruby net::telnet#telnetmode=()","Rails rails::generators::namedbase#template()","Ruby rdoc::options#template_dir_for()","Rails actionview::lookupcontext::viewpaths#template_exists?()","Ruby rdoc::generator::darkfish#template_for()","Ruby rdoc::generator::darkfish#template_result()","Rails numeric#terabyte()","Rails numeric#terabytes()","Ruby rake::application#terminal_width()","Ruby rake::application#terminal_width()","Ruby getoptlong#terminate()","Ruby optionparser::terminate()","Ruby optionparser#terminate()","Ruby shell::systemcommand#terminate()","Ruby stringscanner#terminate()","Ruby thread#terminate()","Ruby gem::mockgemui#terminate_interaction()","Ruby gem::streamui#terminate_interaction()","Ruby gem::userinteraction#terminate_interaction()","Ruby shell::processcontroller#terminate_job()","Ruby gem::mockgemui#terminated?()","Ruby getoptlong#terminated?()","Ruby process::status#termsig()","Ruby kernel#test()","Ruby shell::commandprocessor#test()","Rails rails::appbuilder#test()","Rails rails::pluginbuilder#test()","Rails rails::pluginbuilder#test_dummy_assets()","Rails rails::pluginbuilder#test_dummy_clean()","Rails rails::pluginbuilder#test_dummy_config()","Rails activemodel::lint::tests#test_errors_aref()","Ruby gem::specification#test_file()","Ruby gem::specification#test_file=()","Ruby gem::specification#test_files()","Ruby gem::specification#test_files=()","Rails activemodel::lint::tests#test_model_naming()","Rails activemodel::lint::tests#test_persisted?()","Rails activemodel::lint::tests#test_to_key()","Rails activemodel::lint::tests#test_to_param()","Rails activemodel::lint::tests#test_to_partial_path()","Ruby prettyprint#text()","Ruby prettyprint::singleline#text()","Ruby rdoc::markup::indentedparagraph#text()","Ruby rdoc::markup::paragraph#text()","Ruby rdoc::markup::raw#text()","Ruby rdoc::markup::verbatim#text()","Ruby rexml::element#text()","Ruby rexml::functions::text()","Ruby rexml::streamlistener#text()","Ruby rss::listenermixin#text()","Ruby xmlrpc::xmlwriter::simple#text()","Ruby xmlrpc::xmlwriter::xmlparser#text()","Ruby rdoc::comment#text=()","Ruby rexml::element#text=()","Ruby rexml::light::node#text=()","Ruby rdoc::toplevel#text?()","Ruby rexml::parsers::pullevent#text?()","Rails actionview::helpers::formhelper#text_area()","Rails actionview::helpers::formtaghelper#text_area_tag()","Ruby cgi::htmlextension#text_field()","Rails actionview::helpers::formhelper#text_field()","Rails actionview::helpers::formtaghelper#text_field_tag()","Ruby cgi::htmlextension#textarea()","Ruby rss::rss#textinput()","Ruby rexml::element#texts()","Ruby rake::packagetask#tgz_file()","Rails array#third()","Ruby drb::thread()","Ruby irb::jobmanager#thread()","Ruby net::imap#thread()","Ruby debugger__#thread_list()","Ruby debugger__#thread_list_all()","Ruby thread#thread_variable?()","Rails thread#thread_variable?()","Ruby thread#thread_variable_get()","Rails thread#thread_variable_get()","Ruby thread#thread_variable_set()","Rails thread#thread_variable_set()","Ruby thread#thread_variables()","Rails thread#thread_variables()","Rails rails::application::configuration#threadsafe!()","Ruby kernel#throw()","Ruby date#thursday?()","Ruby time#thursday?()","Rails activesupport::multibyte::chars#tidy_bytes()","Rails activesupport::multibyte::unicode#tidy_bytes()","Ruby gem::time()","Ruby openssl::ssl::session#time()","Ruby openssl::x509::revoked#time()","Ruby rake::ftpfile::time()","Rails activesupport::timewithzone#time()","Ruby win32::registry::time2wtime()","Ruby openssl::ssl::session#time=()","Ruby openssl::x509::revoked#time=()","Ruby openssl::x509::store#time=()","Rails actionview::helpers::datehelper#time_ago_in_words()","Ruby rdoc::generator::darkfish#time_delta_string()","Rails actionview::helpers::formhelper#time_field()","Rails actionview::helpers::formtaghelper#time_field_tag()","Rails actionview::helpers::datehelper#time_select()","Rails actionview::helpers::formbuilder#time_select()","Rails actionview::helpers::datehelper#time_tag()","Rails time::time_with_datetime_fallback()","Rails actionview::helpers::formoptionshelper#time_zone_options_for_select()","Rails actionview::helpers::formbuilder#time_zone_select()","Rails actionview::helpers::formoptionshelper#time_zone_select()","Ruby object#timeout()","Ruby openssl::ssl::session#timeout()","Ruby timeout::timeout()","Ruby webrick::utils::timeout()","Ruby curses::timeout=()","Ruby curses::window#timeout=()","Ruby openssl::ssl::session#timeout=()","Ruby xmlrpc::client#timeout=()","Ruby resolv::dns#timeouts=()","Ruby integer#times()","Ruby integer#times()","Ruby process::times()","Ruby rake::filecreationtask#timestamp()","Ruby rake::filetask#timestamp()","Ruby rake::task#timestamp()","Ruby socket::ancillarydata#timestamp()","Rails activerecord::connectionadapters::table#timestamps()","Rails activerecord::connectionadapters::tabledefinition#timestamps()","Ruby rdoc::store#title()","Ruby rdoc::store#title=()","Rails activesupport::multibyte::chars#titlecase()","Rails string#titlecase()","Rails activesupport::inflector#titleize()","Rails activesupport::multibyte::chars#titleize()","Rails string#titleize()","Ruby net::smtp#tls?()","Rails rails::appbuilder#tmp()","Ruby dir::tmpdir()","Rails array#to()","Rails string#to()","Ruby uri::mailto#to=()","Ruby argf#to_a()","Ruby array#to_a()","Ruby benchmark::tms#to_a()","Ruby csv::table#to_a()","Ruby dbm#to_a()","Ruby env::to_a()","Ruby enumerable#to_a()","Ruby gdbm#to_a()","Ruby gem::nametuple#to_a()","Ruby gem::platform#to_a()","Ruby gem::sourcelist#to_a()","Ruby hash#to_a()","Ruby matchdata#to_a()","Ruby matrix#to_a()","Ruby matrix::eigenvaluedecomposition#to_a()","Ruby matrix::lupdecomposition#to_a()","Ruby nilclass#to_a()","Ruby openssl::x509::extension#to_a()","Ruby openssl::x509::name#to_a()","Ruby optionparser#to_a()","Ruby rexml::parent#to_a()","Ruby rake::filelist#to_a()","Ruby rinda::ringfinger::to_a()","Ruby rinda::ringfinger#to_a()","Ruby rubyvm::instructionsequence#to_a()","Ruby sdbm#to_a()","Ruby set#to_a()","Ruby shell::filter#to_a()","Ruby struct#to_a()","Ruby time#to_a()","Ruby vector#to_a()","Ruby xmlrpc::datetime#to_a()","Ruby yaml::dbm#to_a()","Rails actiondispatch::response#to_a()","Rails activemodel::errors#to_a()","Rails activerecord::relation#to_a()","Rails activesupport::timewithzone#to_a()","Rails rails::paths::path#to_a()","Ruby array#to_ary()","Ruby gem::sourcelist#to_ary()","Ruby matrix::eigenvaluedecomposition#to_ary()","Ruby matrix::lupdecomposition#to_ary()","Ruby rake::filelist#to_ary()","Ruby webrick::httputils::formdata#to_ary()","Rails actiondispatch::response#to_ary()","Rails activerecord::result#to_ary()","Rails rails::paths::path#to_ary()","Ruby rss::rootelementmixin#to_atom()","Ruby gem::nametuple::to_basic()","Ruby integer#to_bn()","Ruby integer#to_bn()","Ruby openssl::bn#to_bn()","Ruby openssl::pkey::ec::point#to_bn()","Ruby complex#to_c()","Ruby nilclass#to_c()","Ruby numeric#to_c()","Ruby string#to_c()","Ruby rss::utils#to_class_name()","Rails actiondispatch::reloader::to_cleanup()","Ruby csv::row#to_csv()","Ruby csv::table#to_csv()","Ruby bigdecimal#to_d()","Ruby float#to_d()","Ruby integer#to_d()","Ruby integer#to_d()","Ruby rational#to_d()","Ruby string#to_d()","Rails bigdecimal#to_d()","Ruby date#to_date()","Ruby datetime#to_date()","Ruby time#to_date()","Ruby xmlrpc::datetime#to_date()","Rails mysql::time#to_date()","Rails string#to_date()","Ruby date#to_datetime()","Ruby datetime#to_datetime()","Ruby time#to_datetime()","Rails activesupport::timewithzone#to_datetime()","Rails string#to_datetime()","Rails array#to_default_s()","Rails date#to_default_s()","Rails datetime#to_default_s()","Rails range#to_default_s()","Rails time#to_default_s()","Ruby openssl::asn1::asn1data#to_der()","Ruby openssl::asn1::constructive#to_der()","Ruby openssl::asn1::primitive#to_der()","Ruby openssl::netscape::spki#to_der()","Ruby openssl::ocsp::request#to_der()","Ruby openssl::ocsp::response#to_der()","Ruby openssl::pkcs12#to_der()","Ruby openssl::pkcs7#to_der()","Ruby openssl::pkey::dh#to_der()","Ruby openssl::pkey::dsa#to_der()","Ruby openssl::pkey::ec#to_der()","Ruby openssl::pkey::ec::group#to_der()","Ruby openssl::pkey::rsa#to_der()","Ruby openssl::pkey::rsa#to_der()","Ruby openssl::ssl::session#to_der()","Ruby openssl::x509::attribute#to_der()","Ruby openssl::x509::crl#to_der()","Ruby openssl::x509::certificate#to_der()","Ruby openssl::x509::extension#to_der()","Ruby openssl::x509::name#to_der()","Ruby openssl::x509::request#to_der()","Ruby bigdecimal#to_digits()","Ruby rss::element#to_element_methods()","Ruby enumerator::lazy#to_enum()","Ruby object#to_enum()","Ruby bigdecimal#to_f()","Ruby bignum#to_f()","Ruby complex#to_f()","Ruby fixnum#to_f()","Ruby float#to_f()","Ruby nilclass#to_f()","Ruby rational#to_f()","Ruby string#to_f()","Ruby time#to_f()","Rails activesupport::timewithzone#to_f()","Rails datetime#to_f()","Ruby rss::maker::atom::entry::items#to_feed()","Ruby rss::maker::atom::entry::items::item#to_feed()","Ruby rss::maker::atom::feed::channel#to_feed()","Ruby rss::maker::atom::feed::channel::cloud#to_feed()","Ruby rss::maker::atom::feed::channel::skipdays#to_feed()","Ruby rss::maker::atom::feed::channel::skiphours#to_feed()","Ruby rss::maker::atom::feed::image#to_feed()","Ruby rss::maker::atom::feed::items#to_feed()","Ruby rss::maker::atom::feed::items::item#to_feed()","Ruby rss::maker::atom::feed::items::item::content#to_feed()","Ruby rss::maker::atom::feed::items::item::enclosure#to_feed()","Ruby rss::maker::atom::feed::items::item::guid#to_feed()","Ruby rss::maker::atom::feed::items::item::source#to_feed()","Ruby rss::maker::atom::feed::items::item::source::icon#to_feed()","Ruby rss::maker::atomcategory#to_feed()","Ruby rss::maker::atomgenerator#to_feed()","Ruby rss::maker::atomlink#to_feed()","Ruby rss::maker::atomlogo#to_feed()","Ruby rss::maker::ituneschannelmodel::itunescategoriesbase::itunescategorybase#to_feed()","Ruby rss::maker::ituneschannelmodel::itunesimagebase#to_feed()","Ruby rss::maker::ituneschannelmodel::itunesownerbase#to_feed()","Ruby rss::maker::itunesitemmodel::itunesdurationbase#to_feed()","Ruby rss::maker::imagefaviconmodel::imagefaviconbase#to_feed()","Ruby rss::maker::imageitemmodel::imageitembase#to_feed()","Ruby rss::maker::rss09::channel#to_feed()","Ruby rss::maker::rss09::channel::authors#to_feed()","Ruby rss::maker::rss09::channel::authors::author#to_feed()","Ruby rss::maker::rss09::channel::categories#to_feed()","Ruby rss::maker::rss09::channel::cloud#to_feed()","Ruby rss::maker::rss09::channel::contributors#to_feed()","Ruby rss::maker::rss09::channel::copyright#to_feed()","Ruby rss::maker::rss09::channel::description#to_feed()","Ruby rss::maker::rss09::channel::generator#to_feed()","Ruby rss::maker::rss09::channel::links#to_feed()","Ruby rss::maker::rss09::channel::links::link#to_feed()","Ruby rss::maker::rss09::channel::skipdays#to_feed()","Ruby rss::maker::rss09::channel::skipdays::day#to_feed()","Ruby rss::maker::rss09::channel::skiphours#to_feed()","Ruby rss::maker::rss09::channel::skiphours::hour#to_feed()","Ruby rss::maker::rss09::channel::title#to_feed()","Ruby rss::maker::rss09::image#to_feed()","Ruby rss::maker::rss09::items#to_feed()","Ruby rss::maker::rss09::items::item#to_feed()","Ruby rss::maker::rss09::items::item::authors#to_feed()","Ruby rss::maker::rss09::items::item::categories#to_feed()","Ruby rss::maker::rss09::items::item::content#to_feed()","Ruby rss::maker::rss09::items::item::contributors#to_feed()","Ruby rss::maker::rss09::items::item::description#to_feed()","Ruby rss::maker::rss09::items::item::enclosure#to_feed()","Ruby rss::maker::rss09::items::item::guid#to_feed()","Ruby rss::maker::rss09::items::item::links#to_feed()","Ruby rss::maker::rss09::items::item::links::link#to_feed()","Ruby rss::maker::rss09::items::item::rights#to_feed()","Ruby rss::maker::rss09::items::item::source#to_feed()","Ruby rss::maker::rss09::items::item::source::authors#to_feed()","Ruby rss::maker::rss09::items::item::source::categories#to_feed()","Ruby rss::maker::rss09::items::item::source::contributors#to_feed()","Ruby rss::maker::rss09::items::item::source::generator#to_feed()","Ruby rss::maker::rss09::items::item::source::icon#to_feed()","Ruby rss::maker::rss09::items::item::source::links#to_feed()","Ruby rss::maker::rss09::items::item::source::logo#to_feed()","Ruby rss::maker::rss09::items::item::source::rights#to_feed()","Ruby rss::maker::rss09::items::item::source::subtitle#to_feed()","Ruby rss::maker::rss09::items::item::source::title#to_feed()","Ruby rss::maker::rss09::items::item::title#to_feed()","Ruby rss::maker::rss09::textinput#to_feed()","Ruby rss::maker::rss10::channel#to_feed()","Ruby rss::maker::rss10::channel::authors#to_feed()","Ruby rss::maker::rss10::channel::authors::author#to_feed()","Ruby rss::maker::rss10::channel::categories#to_feed()","Ruby rss::maker::rss10::channel::cloud#to_feed()","Ruby rss::maker::rss10::channel::contributors#to_feed()","Ruby rss::maker::rss10::channel::copyright#to_feed()","Ruby rss::maker::rss10::channel::description#to_feed()","Ruby rss::maker::rss10::channel::generator#to_feed()","Ruby rss::maker::rss10::channel::links#to_feed()","Ruby rss::maker::rss10::channel::links::link#to_feed()","Ruby rss::maker::rss10::channel::skipdays#to_feed()","Ruby rss::maker::rss10::channel::skiphours#to_feed()","Ruby rss::maker::rss10::channel::title#to_feed()","Ruby rss::maker::rss10::image#to_feed()","Ruby rss::maker::rss10::items#to_feed()","Ruby rss::maker::rss10::items::item#to_feed()","Ruby rss::maker::rss10::items::item::authors#to_feed()","Ruby rss::maker::rss10::items::item::categories#to_feed()","Ruby rss::maker::rss10::items::item::content#to_feed()","Ruby rss::maker::rss10::items::item::contributors#to_feed()","Ruby rss::maker::rss10::items::item::description#to_feed()","Ruby rss::maker::rss10::items::item::enclosure#to_feed()","Ruby rss::maker::rss10::items::item::guid#to_feed()","Ruby rss::maker::rss10::items::item::links#to_feed()","Ruby rss::maker::rss10::items::item::rights#to_feed()","Ruby rss::maker::rss10::items::item::source#to_feed()","Ruby rss::maker::rss10::items::item::source::authors#to_feed()","Ruby rss::maker::rss10::items::item::source::categories#to_feed()","Ruby rss::maker::rss10::items::item::source::contributors#to_feed()","Ruby rss::maker::rss10::items::item::source::generator#to_feed()","Ruby rss::maker::rss10::items::item::source::icon#to_feed()","Ruby rss::maker::rss10::items::item::source::links#to_feed()","Ruby rss::maker::rss10::items::item::source::logo#to_feed()","Ruby rss::maker::rss10::items::item::source::rights#to_feed()","Ruby rss::maker::rss10::items::item::source::subtitle#to_feed()","Ruby rss::maker::rss10::items::item::source::title#to_feed()","Ruby rss::maker::rss10::items::item::title#to_feed()","Ruby rss::maker::rss10::textinput#to_feed()","Ruby rss::maker::rss20::channel::categories#to_feed()","Ruby rss::maker::rss20::channel::categories::category#to_feed()","Ruby rss::maker::rss20::channel::cloud#to_feed()","Ruby rss::maker::rss20::channel::generator#to_feed()","Ruby rss::maker::rss20::items::item::authors#to_feed()","Ruby rss::maker::rss20::items::item::authors::author#to_feed()","Ruby rss::maker::rss20::items::item::categories#to_feed()","Ruby rss::maker::rss20::items::item::categories::category#to_feed()","Ruby rss::maker::rss20::items::item::enclosure#to_feed()","Ruby rss::maker::rss20::items::item::guid#to_feed()","Ruby rss::maker::rss20::items::item::source#to_feed()","Ruby rss::maker::rss20::items::item::source::links#to_feed()","Ruby rss::maker::rss20::items::item::source::links::link#to_feed()","Ruby rss::maker::rssbase#to_feed()","Ruby rss::maker::trackbackmodel::trackbackaboutsbase::trackbackaboutbase#to_feed()","Ruby rss::maker::xmlstylesheets::xmlstylesheet#to_feed()","Ruby rss::rootelementmixin#to_feed()","Ruby rss::maker::ituneschannelmodel::itunescategoriesbase::itunescategorybase#to_feed_for_categories()","Rails actioncontroller::responder#to_format()","Rails activesupport::timewithzone#to_formatted_s()","Rails array#to_formatted_s()","Rails bigdecimal#to_formatted_s()","Rails date#to_formatted_s()","Rails datetime#to_formatted_s()","Rails numeric#to_formatted_s()","Rails range#to_formatted_s()","Rails time#to_formatted_s()","Ruby env::to_h()","Ruby hash#to_h()","Ruby nilclass#to_h()","Ruby openssl::x509::extension#to_h()","Ruby openstruct#to_h()","Ruby struct#to_h()","Ruby xmlrpc::faultexception#to_h()","Ruby csv::row#to_hash()","Ruby dbm#to_hash()","Ruby env::to_hash()","Ruby gdbm#to_hash()","Ruby hash#to_hash()","Ruby json::genericobject#to_hash()","Ruby net::httpheader#to_hash()","Ruby rake::taskarguments#to_hash()","Ruby sdbm#to_hash()","Ruby yaml::dbm#to_hash()","Rails actiondispatch::flash::flashhash#to_hash()","Rails activemodel::errors#to_hash()","Rails activerecord::result#to_hash()","Rails activesupport::hashwithindifferentaccess#to_hash()","Rails activesupport::hashwithindifferentaccess#to_hash()","Ruby rdoc::markup::tohtml#to_html()","Ruby rdoc::text#to_html()","Ruby rdoc::tokenstream::to_html()","Rails actioncontroller::responder#to_html()","Rails rails::info::to_html()","Ruby argf#to_i()","Ruby bigdecimal#to_i()","Ruby complex#to_i()","Ruby dl::cfunc#to_i()","Ruby dl::cptr#to_i()","Ruby dl::function#to_i()","Ruby dl::handle#to_i()","Ruby fiddle::closure#to_i()","Ruby fiddle::function#to_i()","Ruby fiddle::handle#to_i()","Ruby fiddle::pointer#to_i()","Ruby float#to_i()","Ruby io#to_i()","Ruby ipaddr#to_i()","Ruby integer#to_i()","Ruby integer#to_i()","Ruby nilclass#to_i()","Ruby openssl::bn#to_i()","Ruby process::status#to_i()","Ruby rake::pseudostatus#to_i()","Ruby rational#to_i()","Ruby string#to_i()","Ruby time#to_i()","Ruby webrick::httpstatus::status#to_i()","Rails activesupport::timewithzone#to_i()","Rails datetime#to_i()","Ruby drb::to_id()","Ruby drb::drbidconv#to_id()","Ruby drb::drbidconv#to_id()","Ruby drb::drbserver#to_id()","Ruby bigdecimal#to_int()","Ruby dl::cptr#to_int()","Ruby fiddle::pointer#to_int()","Ruby float#to_int()","Ruby integer#to_int()","Ruby integer#to_int()","Ruby numeric#to_int()","Ruby openssl::bn#to_int()","Rails activerecord::connectionadapters::postgresqladapter::oid::range#to_integer()","Ruby argf#to_io()","Ruby io#to_io()","Ruby zlib::gzipfile#to_io()","Rails actioncontroller::responder#to_js()","Ruby bigdecimal#to_json()","Ruby complex#to_json()","Ruby date#to_json()","Ruby datetime#to_json()","Ruby exception#to_json()","Ruby json::genericobject#to_json()","Ruby openstruct#to_json()","Ruby psych::to_json()","Ruby range#to_json()","Ruby rational#to_json()","Ruby regexp#to_json()","Ruby struct#to_json()","Ruby symbol#to_json()","Ruby time#to_json()","Rails object#to_json()","Rails activemodel::conversion#to_key()","Rails activerecord::attributemethods::primarykey#to_key()","Ruby uri::mailto#to_mailtext()","Rails actionview::helpers::formbuilder#to_model()","Rails activemodel::conversion#to_model()","Ruby resolv::ipv4#to_name()","Ruby resolv::ipv6#to_name()","Ruby drb::to_obj()","Ruby drb::drbidconv#to_obj()","Ruby drb::drbidconv#to_obj()","Ruby drb::drbserver#to_obj()","Rails hash#to_options()","Rails activesupport::hashwithindifferentaccess#to_options!()","Rails activesupport::hashwithindifferentaccess#to_options!()","Rails hash#to_options!()","Ruby win32::sspi::identity#to_p()","Ruby win32::sspi::securitybuffer#to_p()","Ruby win32::sspi::securityhandle#to_p()","Ruby win32::sspi::timestamp#to_p()","Rails activemodel::conversion#to_param()","Rails activerecord::integration#to_param()","Rails activesupport::safebuffer#to_param()","Rails array#to_param()","Rails falseclass#to_param()","Rails hash#to_param()","Rails nilclass#to_param()","Rails object#to_param()","Rails trueclass#to_param()","Rails actionview::helpers::formbuilder#to_partial_path()","Rails activemodel::conversion#to_partial_path()","Ruby dir#to_path()","Ruby file#to_path()","Ruby pathname#to_path()","Rails actiondispatch::response#to_path()","Rails actionview::filesystemresolver#to_path()","Ruby openssl::netscape::spki#to_pem()","Ruby openssl::pkcs7#to_pem()","Ruby openssl::pkey::dh#to_pem()","Ruby openssl::pkey::dsa#to_pem()","Ruby openssl::pkey::ec#to_pem()","Ruby openssl::pkey::ec::group#to_pem()","Ruby openssl::pkey::rsa#to_pem()","Ruby openssl::pkey::rsa#to_pem()","Ruby openssl::ssl::session#to_pem()","Ruby openssl::x509::crl#to_pem()","Ruby openssl::x509::certificate#to_pem()","Ruby openssl::x509::request#to_pem()","Rails actiondispatch::reloader::to_prepare()","Rails rails::railtie::configuration#to_prepare()","Rails rails::railtie::configuration#to_prepare_blocks()","Ruby method#to_proc()","Ruby proc#to_proc()","Ruby symbol#to_proc()","Ruby dl::cptr::to_ptr()","Ruby fiddle::pointer::to_ptr()","Rails array#to_query()","Rails hash#to_query()","Rails object#to_query()","Ruby bigdecimal#to_r()","Ruby complex#to_r()","Ruby float#to_r()","Ruby integer#to_r()","Ruby integer#to_r()","Ruby nilclass#to_r()","Ruby rational#to_r()","Ruby string#to_r()","Ruby time#to_r()","Rails activesupport::timewithzone#to_r()","Ruby ipaddr#to_range()","Ruby uri::mailto#to_rfc822text()","Ruby rss::rootelementmixin#to_rss()","Ruby gem::specification#to_ruby()","Ruby psych::nodes::node#to_ruby()","Ruby gem::specification#to_ruby_for_cache()","Ruby argf#to_s()","Ruby addrinfo#to_s()","Ruby array#to_s()","Ruby benchmark::tms#to_s()","Ruby bigdecimal#to_s()","Ruby bignum#to_s()","Ruby cgi::cookie#to_s()","Ruby csv::row#to_s()","Ruby csv::table#to_s()","Ruby complex#to_s()","Ruby dl::cfunc#to_s()","Ruby dl::cptr#to_s()","Ruby date#to_s()","Ruby datetime#to_s()","Ruby digest::instance#to_s()","Ruby env::to_s()","Ruby encoding#to_s()","Ruby exception#to_s()","Ruby falseclass#to_s()","Ruby fiddle::pointer#to_s()","Ruby fixnum#to_s()","Ruby float#to_s()","Ruby gem::dependencyresolver::dependencyrequest#to_s()","Ruby gem::nametuple#to_s()","Ruby gem::platform#to_s()","Ruby hash#to_s()","Ruby ipaddr#to_s()","Ruby matchdata#to_s()","Ruby matrix#to_s()","Ruby method#to_s()","Ruby module#to_s()","Ruby nameerror#to_s()","Ruby nilclass#to_s()","Ruby object#to_s()","Ruby openssl::bn#to_s()","Ruby openssl::config#to_s()","Ruby openssl::hmac#to_s()","Ruby openssl::netscape::spki#to_s()","Ruby openssl::pkcs7#to_s()","Ruby openssl::pkey::dh#to_s()","Ruby openssl::pkey::dsa#to_s()","Ruby openssl::pkey::rsa#to_s()","Ruby openssl::pkey::rsa#to_s()","Ruby openssl::x509::crl#to_s()","Ruby openssl::x509::certificate#to_s()","Ruby openssl::x509::extension#to_s()","Ruby openssl::x509::name#to_s()","Ruby openssl::x509::request#to_s()","Ruby openstruct#to_s()","Ruby optionparser#to_s()","Ruby optionparser::parseerror#to_s()","Ruby pathname#to_s()","Ruby proc#to_s()","Ruby process::status#to_s()","Ruby rexml::attribute#to_s()","Ruby rexml::cdata#to_s()","Ruby rexml::dtd::entitydecl#to_s()","Ruby rexml::dtd::notationdecl#to_s()","Ruby rexml::entity#to_s()","Ruby rexml::light::node#to_s()","Ruby rexml::node#to_s()","Ruby rexml::output#to_s()","Ruby rexml::parseexception#to_s()","Ruby rexml::text#to_s()","Ruby rexml::validation::event#to_s()","Ruby rexml::validation::ref#to_s()","Ruby rexml::validation::state#to_s()","Ruby rss::element#to_s()","Ruby rss::xml::element#to_s()","Ruby rss::xmlstylesheet#to_s()","Ruby rake::earlytime#to_s()","Ruby rake::invocationchain#to_s()","Ruby rake::invocationchain::emptyinvocationchain#to_s()","Ruby rake::task#to_s()","Ruby rake::taskarguments#to_s()","Ruby range#to_s()","Ruby rational#to_s()","Ruby regexp#to_s()","Ruby resolv::dns::name#to_s()","Ruby shell::filter#to_s()","Ruby socket::option#to_s()","Ruby string#to_s()","Ruby struct#to_s()","Ruby symbol#to_s()","Ruby thread::backtrace::location#to_s()","Ruby time#to_s()","Ruby trueclass#to_s()","Ruby uri::ftp#to_s()","Ruby uri::generic#to_s()","Ruby uri::mailto#to_s()","Ruby unboundmethod#to_s()","Ruby vector#to_s()","Ruby webrick::cookie#to_s()","Ruby webrick::httputils::formdata#to_s()","Ruby webrick::httpversion#to_s()","Ruby win32ole_method#to_s()","Ruby win32ole_param#to_s()","Ruby win32ole_type#to_s()","Ruby win32ole_typelib#to_s()","Ruby win32ole_variable#to_s()","Ruby win32::sspi::sspiresult#to_s()","Rails actiondispatch::remoteip::getip#to_s()","Rails actionview::filesystemresolver#to_s()","Rails actionview::resolver::path#to_s()","Rails activemodel::name#to_s()","Rails activesupport::safebuffer#to_s()","Rails activesupport::timewithzone#to_s()","Rails activesupport::timezone#to_s()","Rails array#to_s()","Rails bigdecimal#to_s()","Rails date#to_s()","Rails datetime#to_s()","Rails mime::type#to_s()","Rails rails::info::to_s()","Rails range#to_s()","Rails sourceannotationextractor::annotation#to_s()","Rails time#to_s()","Rails array#to_sentence()","Rails actiondispatch::flash::flashhash#to_session_value()","Ruby enumerable#to_set()","Ruby addrinfo#to_sockaddr()","Ruby gem::dependency#to_spec()","Ruby gem::dependency#to_specs()","Rails activerecord::connectionadapters::databasestatements#to_sql()","Rails activerecord::relation#to_sql()","Ruby dl::cptr#to_str()","Ruby fiddle::pointer#to_str()","Ruby string#to_str()","Rails actionview::resolver::path#to_str()","Rails activemodel::name#to_str()","Rails mime::type#to_str()","Ruby ipaddr#to_string()","Ruby rexml::attribute#to_string()","Ruby string#to_sym()","Ruby symbol#to_sym()","Rails mime::type#to_sym()","Rails activesupport::xmlmini#to_tag()","Ruby openssl::netscape::spki#to_text()","Ruby openssl::pkey::dh#to_text()","Ruby openssl::pkey::dsa#to_text()","Ruby openssl::pkey::ec#to_text()","Ruby openssl::pkey::ec::group#to_text()","Ruby openssl::pkey::rsa#to_text()","Ruby openssl::pkey::rsa#to_text()","Ruby openssl::ssl::session#to_text()","Ruby openssl::x509::crl#to_text()","Ruby openssl::x509::certificate#to_text()","Ruby openssl::x509::request#to_text()","Ruby date#to_time()","Ruby datetime#to_time()","Ruby time#to_time()","Ruby xmlrpc::datetime#to_time()","Rails activesupport::timewithzone#to_time()","Rails date#to_time()","Rails string#to_time()","Rails date#to_time_in_current_zone()","Ruby rdoc::markup::totableofcontents::to_toc()","Ruby dl::cptr#to_value()","Ruby fiddle::pointer#to_value()","Ruby argf#to_write_io()","Ruby rss::rootelementmixin#to_xml()","Rails activemodel::errors#to_xml()","Rails activemodel::serializers::xml#to_xml()","Rails activerecord::serialization#to_xml()","Rails array#to_xml()","Rails hash#to_xml()","Ruby object#to_yaml()","Ruby psych::nodes::node#to_yaml()","Ruby gem::requirement#to_yaml_properties()","Ruby gem::requirement#to_yaml_properties()","Ruby gem::version#to_yaml_properties()","Rails activesupport::orderedhash#to_yaml_type()","Ruby date::today()","Rails activesupport::timezone#today()","Rails activesupport::timewithzone#today?()","Rails dateandtime::calculations#today?()","Ruby kconv::toeuc()","Ruby string#toeuc()","Rails activerecord::persistence#toggle()","Rails activerecord::persistence#toggle!()","Ruby kconv::tojis()","Ruby string#tojis()","Ruby win32::sspi::securitybuffer#token()","Rails actioncontroller::httpauthentication::token#token_and_options()","Ruby rdoc::parser::rubytools#token_listener()","Rails actioncontroller::httpauthentication::token#token_params_from()","Ruby rdoc::markup::parser#token_pos()","Ruby rdoc::tokenstream#token_stream()","Ruby racc::parser#token_to_str()","Ruby psych::scalarscanner#tokenize()","Ruby rdoc::markup::parser::tokenize()","Ruby rdoc::markup::parser#tokenize()","Ruby rdoc::rubylex::tokenize()","Ruby rdoc::tomdoc#tokenize()","Ruby ripper::tokenize()","Rails html::sanitizer#tokenize()","Rails html::whitelistsanitizer#tokenize()","Ruby rdoc::tokenstream#tokens_to_s()","Ruby kconv::tolocale()","Ruby string#tolocale()","Ruby rdoc::comment#tomdoc?()","Rails date::tomorrow()","Rails dateandtime::calculations#tomorrow()","Ruby irb::frame::top()","Ruby irb::frame#top()","Ruby net::popmail#top()","Ruby optionparser::top()","Ruby optionparser#top()","Ruby rdoc::context#top_level()","Ruby rdoc::require#top_level()","Ruby rake::application#top_level()","Ruby rake::application#top_level()","Ruby shell::commandprocessor#top_level_test()","Ruby irb::locale#toplevel_load()","Ruby kconv::tosjis()","Ruby string#tosjis()","Ruby zlib::zstream#total_in()","Ruby zlib::zstream#total_out()","Ruby gc::profiler::total_time()","Ruby fileutils::touch()","Ruby object#touch()","Rails activerecord::persistence#touch()","Ruby kconv::toutf16()","Ruby string#toutf16()","Ruby kconv::toutf32()","Ruby string#toutf32()","Ruby kconv::toutf8()","Ruby string#toutf8()","Ruby matrix#tr()","Ruby string#tr()","Ruby string#tr!()","Ruby string#tr_s()","Ruby string#tr_s!()","Ruby matrix#trace()","Ruby net::http#trace()","Ruby rake::application#trace()","Ruby rake::application#trace()","Ruby tracepoint::trace()","Ruby irb::frame#trace_func()","Ruby rake::traceoutput#trace_on()","Ruby kernel#trace_var()","Ruby shell::commandprocessor#transact()","Ruby pstore#transaction()","Rails activerecord::connectionadapters::databasestatements#transaction()","Rails activerecord::transactions#transaction()","Rails activerecord::transactions::classmethods#transaction()","Rails activerecord::connectionadapters::databasestatements#transaction_isolation_levels()","Rails activerecord::connectionadapters::abstractadapter#transaction_joinable=()","Rails activerecord::connectionadapters::databasestatements#transaction_open?()","Ruby fiber#transfer()","Ruby psych::nodes::node#transform()","Rails hash#transform_keys()","Rails hash#transform_keys!()","Ruby rexml::functions::translate()","Rails abstractcontroller::translation#translate()","Rails actionview::helpers::translationhelper#translate()","Rails activerecord::connectionadapters::abstractadapter#translate_exception()","Rails activerecord::connectionadapters::abstractmysqladapter#translate_exception()","Rails activerecord::connectionadapters::postgresqladapter#translate_exception()","Rails activerecord::connectionadapters::sqlite3adapter#translate_exception()","Rails activesupport::inflector#transliterate()","Ruby array#transpose()","Ruby matrix#transpose()","Ruby kernel#trap()","Ruby signal::trap()","Ruby gem::specification#traverse()","Ruby openssl::asn1::traverse()","Ruby psych::visitors::yamltree#tree()","Rails activesupport::filewatcher#trigger()","Rails activesupport::filewatcher::backend#trigger()","Ruby rexml::functions::true()","Ruby bigdecimal#truncate()","Ruby file::truncate()","Ruby file#truncate()","Ruby float#truncate()","Ruby integer#truncate()","Ruby integer#truncate()","Ruby numeric#truncate()","Ruby pathname#truncate()","Ruby rdoc::markup::tohtmlsnippet#truncate()","Ruby rake::application#truncate()","Ruby rake::application#truncate()","Ruby rational#truncate()","Ruby stringio#truncate()","Rails actionview::helpers::texthelper#truncate()","Rails string#truncate()","Ruby rake::application#truncate_output?()","Ruby rake::application#truncate_output?()","Ruby delegator#trust()","Ruby object#trust()","Ruby openssl::x509::store#trust=()","Ruby gem::security::trustdir#trust_cert()","Ruby gem::security::trust_dir()","Ruby gem::security::trusted_certificates()","Rails nilclass#try()","Rails object#try()","Rails nilclass#try!()","Rails object#try!()","Ruby gem::try_activate()","Ruby makemakefile#try_const()","Ruby array::try_convert()","Ruby hash::try_convert()","Ruby io::try_convert()","Ruby regexp::try_convert()","Ruby string::try_convert()","Ruby mutex#try_lock()","Ruby monitormixin#try_mon_enter()","Rails activerecord::testfixtures::classmethods#try_to_load_dependency()","Ruby makemakefile#try_type()","Ruby tsort#tsort()","Ruby tsort#tsort_each()","Ruby gem::dependencylist#tsort_each_child()","Ruby gem::requestset#tsort_each_child()","Ruby tsort#tsort_each_child()","Rails rails::initializable::collection#tsort_each_child()","Ruby gem::dependencylist#tsort_each_node()","Ruby gem::requestset#tsort_each_node()","Ruby tsort#tsort_each_node()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#tsrange()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#tstzrange()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#tsvector()","Ruby rdoc::markup::formatter#tt?()","Ruby rdoc::markup::tottonly#tt_sections()","Ruby gem::mockgemui::tty#tty?()","Ruby gem::streamui#tty?()","Ruby io#tty?()","Ruby stringio#tty?()","Ruby rake::application#tty_output=()","Ruby rake::application#tty_output=()","Ruby rake::application#tty_output?()","Ruby rake::application#tty_output?()","Ruby date#tuesday?()","Ruby time#tuesday?()","Ruby gem::specfetcher#tuples_for()","Ruby time#tv_nsec()","Ruby time#tv_sec()","Rails activesupport::timewithzone#tv_sec()","Ruby time#tv_usec()","Ruby gem::dependency#type()","Ruby openssl::pkcs7#type()","Ruby rdoc::classmodule#type()","Ruby rdoc::methodattr#type()","Ruby socket::ancillarydata#type()","Rails actionview::template#type()","Rails activerecord::connectionadapters::mysqladapter::fields::date#type()","Rails activerecord::connectionadapters::mysqladapter::fields::datetime#type()","Rails activerecord::connectionadapters::mysqladapter::fields::float#type()","Rails activerecord::connectionadapters::mysqladapter::fields::time#type()","Rails activerecord::connectionadapters::mysqladapter::fields::type#type()","Rails activerecord::connectionadapters::postgresqladapter::oid::date#type()","Rails activerecord::connectionadapters::postgresqladapter::oid::timestamp#type()","Rails activerecord::connectionadapters::postgresqladapter::oid::type#type()","Ruby win32::registry::type2name()","Ruby openssl::pkcs7#type=()","Rails activerecord::calculations#type_cast()","Rails activerecord::connectionadapters::mysqladapter#type_cast()","Rails activerecord::connectionadapters::mysqladapter::fields::boolean#type_cast()","Rails activerecord::connectionadapters::mysqladapter::fields::date#type_cast()","Rails activerecord::connectionadapters::mysqladapter::fields::datetime#type_cast()","Rails activerecord::connectionadapters::mysqladapter::fields::decimal#type_cast()","Rails activerecord::connectionadapters::mysqladapter::fields::float#type_cast()","Rails activerecord::connectionadapters::mysqladapter::fields::identity#type_cast()","Rails activerecord::connectionadapters::mysqladapter::fields::integer#type_cast()","Rails activerecord::connectionadapters::mysqladapter::fields::time#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::array#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::bit#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::boolean#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::bytea#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::cidr#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::date#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::decimal#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::float#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::hstore#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::identity#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::integer#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::json#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::money#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::point#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::range#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::time#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::timestamp#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::oid::vector#type_cast()","Rails activerecord::connectionadapters::postgresqladapter::quoting#type_cast()","Rails activerecord::connectionadapters::postgresqlcolumn#type_cast()","Rails activerecord::connectionadapters::quoting#type_cast()","Rails activerecord::connectionadapters::abstractadapter::type_cast_config_to_boolean()","Rails activerecord::connectionadapters::abstractadapter::type_cast_config_to_integer()","Rails activerecord::connectionadapters::mysqladapter::fields::type#type_cast_for_write()","Rails activerecord::connectionadapters::postgresqladapter::oid::type#type_cast_for_write()","Ruby net::httpheader#type_params()","Rails activerecord::connectionadapters::abstractmysqladapter#type_to_sql()","Rails activerecord::connectionadapters::postgresqladapter::schemastatements#type_to_sql()","Ruby dl::importer#typealias()","Ruby fiddle::importer#typealias()","Ruby uri::ftp#typecode=()","Ruby win32ole_type#typekind()","Ruby win32ole_type::typelibs()","Ruby win32ole_typelib::typelibs()","Ruby dl::stack#types()","Ruby erb::util::u()","Ruby matrix::lupdecomposition#u()","Ruby addrinfo::udp()","Ruby socket::udp_server_loop()","Ruby socket::udp_server_loop_on()","Ruby socket::udp_server_recv()","Ruby socket::udp_server_sockets()","Ruby gem::ui()","Ruby gem::defaultuserinteraction#ui()","Ruby gem::defaultuserinteraction::ui()","Ruby gem::defaultuserinteraction::ui=()","Ruby gem::defaultuserinteraction#ui=()","Ruby file::stat#uid()","Ruby process::uid()","Ruby process::uid=()","Ruby net::imap#uid_copy()","Ruby net::imap#uid_fetch()","Ruby net::imap#uid_search()","Ruby net::imap#uid_sort()","Ruby net::imap#uid_store()","Ruby net::imap#uid_thread()","Ruby net::popmail#uidl()","Ruby file::umask()","Ruby webrick::httpserver#umount()","Ruby win32ole_event#unadvise()","Ruby shell::unalias_command()","Ruby shell::commandprocessor::unalias_command()","Ruby dl::function#unbind()","Ruby method#unbind()","Ruby dl::function#unbind_at_call()","Ruby dl::tempfunction#unbind_at_call()","Rails activerecord::connectionadapters::querycache#uncached()","Rails activerecord::querycache::classmethods#uncached()","Ruby csv#unconverted_fields?()","Rails activesupport::inflector::inflections#uncountable()","Rails activemodel::naming::uncountable?()","Rails rails::generators::namedbase#uncountable?()","Ruby shell::undef_system_command()","Ruby shell::commandprocessor::undef_system_command()","Rails activemodel::attributemethods::classmethods#undefine_attribute_methods()","Ruby objectspace::undefine_finalizer()","Rails activesupport::inflector#underscore()","Rails string#underscore()","Ruby rdoc::stats#undoc_params()","Ruby cgi::unescape()","Ruby gem::remotefetcher#unescape()","Ruby uri::escape#unescape()","Ruby uri::parser#unescape()","Ruby webrick::httputils#unescape()","Rails object#unescape()","Ruby cgi::unescapeelement()","Ruby cgi::unescapehtml()","Ruby gem::remotefetcher#unescape_auth_info()","Rails activerecord::connectionadapters::postgresqladapter::quoting#unescape_bytea()","Ruby cgi::unescape_element()","Ruby webrick::httputils#unescape_form()","Ruby cgi::unescape_html()","Rails actiondispatch::filehandler#unescape_path()","Ruby rdoc::markup::parser#unget()","Ruby rdoc::parser::rubytools#unget_tk()","Ruby io#ungetbyte()","Ruby stringio#ungetbyte()","Ruby zlib::gzipreader#ungetbyte()","Ruby io#ungetc()","Ruby openssl::buffering#ungetc()","Ruby stringio#ungetc()","Ruby zlib::gzipreader#ungetc()","Ruby curses::ungetch()","Ruby curses::ungetmouse()","Ruby gem::uninstaller#uninstall()","Ruby gem::commands::cleanupcommand#uninstall_dep()","Ruby gem::uninstaller#uninstall_gem()","Ruby gem::commands::setupcommand#uninstall_old_gemcutter()","Ruby dl::importer#union()","Ruby fiddle::importer#union()","Ruby regexp::union()","Ruby set#union()","Ruby array#uniq()","Rails activerecord::associations::collectionproxy#uniq()","Rails activerecord::querymethods#uniq()","Ruby array#uniq!()","Rails array#uniq_by()","Rails array#uniq_by!()","Rails activerecord::relation#uniq_value()","Ruby rdoc::store#unique_classes()","Ruby rdoc::store#unique_classes_and_modules()","Ruby net::popmail#unique_id()","Ruby rdoc::store#unique_modules()","Ruby matrix::unit()","Ruby matrix#unitary?()","Ruby addrinfo::unix()","Ruby socket::unix()","Ruby addrinfo#unix?()","Ruby rake::application#unix?()","Ruby rake::application#unix?()","Ruby addrinfo#unix_path()","Ruby socket::ancillarydata#unix_rights()","Ruby socket::ancillarydata::unix_rights()","Ruby socket::unix_server_loop()","Ruby socket::unix_server_socket()","Ruby unknown","Ruby unknown","Ruby logger#unknown()","Ruby syslog::logger#unknown()","Ruby dir::unlink()","Ruby file::unlink()","Ruby pathname#unlink()","Ruby shell::commandprocessor#unlink()","Ruby tempfile#unlink()","Ruby mutex#unlock()","Ruby net::http#unlock()","Ruby rdoc::markup::attributemanager#unmask_protected_sequences()","Ruby webrick::httpserver#unmount()","Ruby rexml::parsers::baseparser#unnormalize()","Ruby rexml::text::unnormalize()","Ruby rexml::entity#unnormalized()","Ruby dl::packer#unpack()","Ruby dl::stack#unpack()","Ruby gem::installer#unpack()","Ruby socket::option#unpack()","Ruby string#unpack()","Rails activesupport::multibyte::unicode#unpack_graphemes()","Ruby socket::unpack_sockaddr_in()","Ruby socket::unpack_sockaddr_un()","Ruby win32::registry::api#unpackdw()","Ruby win32::registry::api#unpackqw()","Rails actioncontroller::logsubscriber#unpermitted_parameters()","Rails activerecord::connectionadapters::abstractadapter#unprepared_statement()","Rails activerecord::connectionadapters::abstractadapter#unprepared_visitor()","Ruby drb::extservmanager#unregist()","Rails mime::type::unregister()","Ruby gem::commandmanager#unregister_command()","Ruby gem::specification::unresolved_deps()","Ruby stringscanner#unscan()","Rails activerecord::querymethods#unscope()","Rails activerecord::scoping::default::classmethods#unscoped()","Ruby array#unshift()","Ruby rexml::parent#unshift()","Ruby rexml::parsers::baseparser#unshift()","Ruby rexml::parsers::pullparser#unshift()","Rails actiondispatch::middlewarestack#unshift()","Rails rails::paths::path#unshift()","Ruby dl::valueutil#unsigned_value()","Ruby net::imap#unsubscribe()","Rails activesupport::notifications::unsubscribe()","Rails activesupport::notifications::fanout#unsubscribe()","Ruby delegator#untaint()","Ruby object#untaint()","Ruby pathname#untaint()","Rails activesupport::duration#until()","Rails numeric#until()","Ruby kernel#untrace_var()","Ruby delegator#untrust()","Ruby object#untrust()","Ruby object#untrusted?()","Ruby zlib::gzipreader#unused()","Ruby gem::commands::yankcommand#unyank_gem()","Rails activerecord::migration#up()","Ruby string#upcase()","Ruby symbol#upcase()","Rails activesupport::multibyte::chars#upcase()","Rails activesupport::multibyte::unicode#upcase()","Ruby string#upcase!()","Ruby cgi::session#update()","Ruby cgi::session::filestore#update()","Ruby cgi::session::memorystore#update()","Ruby cgi::session::nullstore#update()","Ruby cgi::session::pstore#update()","Ruby dbm#update()","Ruby digest::hmac#update()","Ruby digest::instance#update()","Ruby env::update()","Ruby gdbm#update()","Ruby gem::streamui::silentdownloadreporter#update()","Ruby gem::streamui::verbosedownloadreporter#update()","Ruby hash#update()","Ruby httpserver::table#update()","Ruby openssl::cipher#update()","Ruby openssl::digest#update()","Ruby openssl::hmac#update()","Ruby sdbm#update()","Ruby yaml::dbm#update()","Rails activerecord::connectionadapters::databasestatements#update()","Rails activerecord::persistence#update()","Rails activerecord::relation#update()","Rails activesupport::hashwithindifferentaccess#update()","Rails activesupport::hashwithindifferentaccess#update()","Rails rails::generators::activemodel#update()","Rails activerecord::persistence#update!()","Ruby rdoc::classmodule#update_aliases()","Rails activerecord::relation#update_all()","Rails activerecord::persistence#update_attribute()","Rails activerecord::persistence#update_attributes()","Rails activerecord::persistence#update_attributes!()","Ruby gem::source#update_cache?()","Ruby gem::package::tarheader#update_checksum()","Rails activerecord::persistence#update_column()","Rails activerecord::persistence#update_columns()","Rails activerecord::countercache::classmethods#update_counters()","Rails activerecord::locking::optimistic::classmethods#update_counters()","Ruby rdoc::classmodule#update_extends()","Ruby gem::commands::updatecommand#update_gem()","Ruby gem::commands::updatecommand#update_gems()","Ruby rdoc::classmodule#update_includes()","Ruby gem::indexer#update_index()","Ruby rdoc::rdoc#update_output_dir()","Ruby gem::commands::updatecommand#update_rubygems()","Ruby gem::indexer#update_specs_index()","Rails activerecord::connectionadapters::databasestatements#update_sql()","Rails activerecord::connectionadapters::postgresqladapter::databasestatements#update_sql()","Ruby gem::streamui::silentprogressreporter#updated()","Ruby gem::streamui::simpleprogressreporter#updated()","Ruby gem::streamui::verboseprogressreporter#updated()","Ruby rss::maker::channelbase#updated()","Ruby rss::maker::itemsbase::itembase#updated()","Ruby rss::maker::itemsbase::itembase::sourcebase#updated()","Ruby rss::maker::channelbase#updated=()","Ruby rss::maker::itemsbase::itembase#updated=()","Ruby rss::maker::itemsbase::itembase::sourcebase#updated=()","Rails activesupport::fileupdatechecker#updated?()","Ruby rdoc::context#upgrade_to_class()","Ruby compositepublisher#upload()","Ruby rake::compositepublisher#upload()","Ruby rake::sshdirpublisher#upload()","Ruby rake::sshfilepublisher#upload()","Ruby rake::sshfreshdirpublisher#upload()","Ruby sshdirpublisher#upload()","Ruby sshfilepublisher#upload()","Ruby sshfreshdirpublisher#upload()","Ruby rake::ftpuploader#upload_files()","Ruby win32::sspi::securityhandle#upper()","Ruby prime::pseudoprimegenerator#upper_bound()","Ruby prime::pseudoprimegenerator#upper_bound=()","Ruby matrix#upper_triangular?()","Ruby date#upto()","Ruby integer#upto()","Ruby integer#upto()","Ruby string#upto()","Ruby fileutils::uptodate?()","Ruby drb::uri()","Ruby gem::remotefetcher#uri_escaper()","Ruby drb::drbprotocol::uri_option()","Ruby rss::baselistener#uri_registered?()","Rails actiondispatch::http::url#url()","Ruby erb::util::url_encode()","Rails actionview::helpers::formhelper#url_field()","Rails actionview::helpers::formtaghelper#url_field_tag()","Rails actioncontroller::metal#url_for()","Rails actiondispatch::http::url::url_for()","Rails actiondispatch::routing::urlfor#url_for()","Rails actionview::routingurlfor#url_for()","Rails actioncontroller::urlfor#url_options()","Rails actiondispatch::routing::urlfor#url_options()","Rails actionview::helpers::asseturlhelper#url_to_asset()","Rails actionview::helpers::asseturlhelper#url_to_audio()","Rails actionview::helpers::asseturlhelper#url_to_font()","Rails actionview::helpers::asseturlhelper#url_to_image()","Rails actionview::helpers::asseturlhelper#url_to_javascript()","Rails actionview::helpers::asseturlhelper#url_to_stylesheet()","Rails actionview::helpers::asseturlhelper#url_to_video()","Ruby securerandom::urlsafe_base64()","Ruby base64#urlsafe_decode64()","Ruby base64#urlsafe_encode64()","Rails activesupport::timezone::us_zones()","Ruby gem::command#usage()","Rails rails::generators::base::usage_path()","Rails actioncontroller::metal::use()","Rails actiondispatch::middlewarestack#use()","Rails rails::configuration::middlewarestackproxy#use()","Rails actiondispatch::http::mimenegotiation#use_accept_header()","Ruby curses::use_default_colors()","Rails activerecord::connectionadapters::postgresqladapter#use_insert_returning?()","Ruby irb::context#use_loader()","Ruby irb::context#use_loader=()","Ruby irb::context#use_loader?()","Ruby rdoc::parser::use_markup()","Ruby gem::use_paths()","Ruby rdoc::markup::tordoc#use_prefix()","Ruby irb::context#use_readline=()","Ruby uri::generic::use_registry()","Rails actioncontroller::renderers::classmethods#use_renderer()","Rails actioncontroller::renderers::classmethods#use_renderers()","Ruby net::http#use_ssl=()","Ruby net::http#use_ssl?()","Ruby net::pop3#use_ssl?()","Ruby net::pop3::use_ssl?()","Ruby irb::context#use_tracer=()","Ruby gem::defaultuserinteraction#use_ui()","Ruby gem::defaultuserinteraction::use_ui()","Rails time::use_zone()","Ruby time#usec()","Rails datetime#usec()","Ruby uri::generic#user()","Ruby uri::generic#user=()","Ruby xmlrpc::client#user=()","Ruby gem::remotefetcher#user_agent()","Ruby gem::user_dir()","Ruby gem::user_home()","Rails actioncontroller::httpauthentication::basic#user_name_and_password()","Ruby uri::generic#userinfo()","Ruby uri::generic#userinfo=()","Rails activerecord::testfixtures::classmethods#uses_transaction()","Rails activerecord::testfixtures::classmethods#uses_transaction?()","Rails activerecord::findermethods#using_limitable_reflections?()","Rails actiondispatch::routing::mapper::resources#using_match_shorthand?()","Ruby time::utc()","Ruby time#utc()","Rails activesupport::timewithzone#utc()","Rails datetime#utc()","Ruby time#utc?()","Rails activesupport::timewithzone#utc?()","Rails datetime#utc?()","Ruby time#utc_offset()","Rails activesupport::timewithzone#utc_offset()","Rails activesupport::timezone#utc_offset()","Rails datetime#utc_offset()","Rails time::utc_time()","Rails activesupport::timezone#utc_to_local()","Rails actionview::helpers::formtaghelper#utf8_enforcer_tag()","Ruby file::utime()","Ruby pathname#utime()","Ruby securerandom::uuid()","Rails actiondispatch::request#uuid()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#uuid()","Ruby matrix::eigenvaluedecomposition#v()","Ruby matrix::eigenvaluedecomposition#v_inv()","Ruby rss::element#valid?()","Rails activemodel::validations#valid?()","Rails activerecord::dynamicmatchers::method#valid?()","Rails activerecord::validations#valid?()","Rails actiondispatch::http::mimenegotiation#valid_accept_header()","Rails activerecord::connectionadapters::sqlite3adapter#valid_alter_table_options()","Ruby date::valid_civil?()","Ruby date::valid_commercial?()","Ruby date::valid_date?()","Ruby string#valid_encoding?()","Ruby date::valid_jd?()","Ruby date::valid_ordinal?()","Rails activerecord::connectionadapters::abstractadapter#valid_type?()","Rails activerecord::connectionadapters::abstractmysqladapter#valid_type?()","Rails activerecord::connectionadapters::postgresqladapter#valid_type?()","Ruby gem::specification#validate()","Ruby rexml::validation::validator#validate()","Ruby rss::element#validate()","Rails activemodel::validations::classmethods#validate()","Rails activemodel::validator#validate()","Rails actioncontroller::httpauthentication::digest#validate_digest_response()","Ruby rss::atom::duplicatelinkchecker#validate_duplicate_links()","Rails i18n::railtie::validate_fallbacks()","Ruby rss::element#validate_for_stream()","Rails actioncontroller::httpauthentication::digest#validate_nonce()","Ruby rss::imagemodelutils#validate_one_tag_name()","Rails html::sanitizer#validate_options()","Ruby gem::specification#validate_permissions()","Rails activemodel::validations::classmethods#validates()","Rails activemodel::validations::classmethods#validates!()","Rails activemodel::validations::helpermethods#validates_absence_of()","Rails activemodel::validations::helpermethods#validates_acceptance_of()","Rails activerecord::validations::classmethods#validates_associated()","Rails activemodel::validations::helpermethods#validates_confirmation_of()","Rails activemodel::validations::classmethods#validates_each()","Rails activemodel::validations::helpermethods#validates_exclusion_of()","Rails activemodel::validations::helpermethods#validates_format_of()","Rails activemodel::validations::helpermethods#validates_inclusion_of()","Rails activemodel::validations::helpermethods#validates_length_of()","Rails activemodel::validations::helpermethods#validates_numericality_of()","Rails activemodel::validations::helpermethods#validates_presence_of()","Rails activerecord::validations::classmethods#validates_presence_of()","Rails activemodel::validations::helpermethods#validates_size_of()","Rails activerecord::validations::classmethods#validates_uniqueness_of()","Rails activemodel::validations#validates_with()","Rails activemodel::validations::classmethods#validates_with()","Rails activemodel::validations::classmethods#validators()","Rails activemodel::validations::classmethods#validators_on()","Ruby cgi::cookie#value()","Ruby dl::importer#value()","Ruby fiddle::importer#value()","Ruby net::httpresponse#value()","Ruby openssl::config#value()","Ruby openssl::x509::attribute#value()","Ruby openssl::x509::extension#value()","Ruby rexml::attribute#value()","Ruby rexml::cdata#value()","Ruby rexml::entity#value()","Ruby rexml::text#value()","Ruby rinda::tuple#value()","Ruby rinda::tupleentry#value()","Ruby thread#value()","Ruby win32ole_variable#value()","Ruby win32ole_variant#value()","Ruby cgi::cookie#value=()","Ruby openssl::x509::attribute#value=()","Ruby openssl::x509::extension#value=()","Ruby rexml::text#value=()","Ruby rss::itunesitemmodel::itunesduration#value=()","Ruby win32ole_variant#value=()","Ruby dbm#value?()","Ruby env::value?()","Ruby gdbm#value?()","Ruby hash#value?()","Ruby sdbm#value?()","Ruby dbm#values()","Ruby env::values()","Ruby gdbm#values()","Ruby hash#values()","Ruby sdbm#values()","Ruby struct#values()","Ruby yaml::dbm#values()","Rails activemodel::errors#values()","Rails activerecord::relation#values()","Rails rails::paths::root#values()","Ruby array#values_at()","Ruby csv::row#values_at()","Ruby csv::table#values_at()","Ruby dbm#values_at()","Ruby env::values_at()","Ruby gdbm#values_at()","Ruby hash#values_at()","Ruby matchdata#values_at()","Ruby rake::taskarguments#values_at()","Ruby sdbm#values_at()","Ruby struct#values_at()","Ruby yaml::dbm#values_at()","Rails activesupport::hashwithindifferentaccess#values_at()","Rails activesupport::hashwithindifferentaccess#values_at()","Rails rails::paths::root#values_at()","Ruby rss::maker::base#variable_is_set?()","Ruby win32ole_variable#variable_kind()","Ruby rexml::functions::variables()","Ruby win32ole_type#variables()","Ruby rexml::functions::variables=()","Ruby rexml::xpathparser#variables=()","Ruby win32ole_variable#varkind()","Ruby win32ole_variant#vartype()","Rails rails::appbuilder#vendor()","Rails rails::generators::actions#vendor()","Rails rails::appbuilder#vendor_javascripts()","Rails rails::appbuilder#vendor_stylesheets()","Ruby bigdecimal::ver()","Ruby optionparser#ver()","Rails actiondispatch::routing::routewrapper#verb()","Ruby drb::drbserver#verbose()","Ruby drb::drbserver::verbose()","Ruby rake::fileutilsext#verbose()","Ruby sys#verbose()","Ruby drb::drbserver#verbose=()","Ruby drb::drbserver::verbose=()","Ruby irb::context#verbose?()","Rails actioncontroller::requestforgeryprotection#verified_request?()","Ruby gem::package#verify()","Ruby gem::package::old#verify()","Ruby gem::security::policy#verify()","Ruby gem::security::trustdir#verify()","Ruby net::pop3::verify()","Ruby openssl::netscape::spki#verify()","Ruby openssl::ocsp::basicresponse#verify()","Ruby openssl::ocsp::request#verify()","Ruby openssl::pkcs7#verify()","Ruby openssl::pkey::pkey#verify()","Ruby openssl::x509::crl#verify()","Ruby openssl::x509::certificate#verify()","Ruby openssl::x509::request#verify()","Ruby openssl::x509::store#verify()","Rails activesupport::messageverifier#verify()","Rails activerecord::connectionadapters::abstractadapter#verify!()","Rails actiondispatch::cookies::verifyandupgradelegacysignedmessage#verify_and_upgrade_legacy_signed_message()","Ruby gem::gemcutterutilities#verify_api_key()","Rails actioncontroller::requestforgeryprotection#verify_authenticity_token()","Ruby openssl::x509::store#verify_callback=()","Ruby gem::package#verify_files()","Ruby gem::validator#verify_gem()","Ruby gem::validator#verify_gem_file()","Ruby gem::installer#verify_gem_home()","Rails mime::type#verify_request?()","Ruby openssl::ssl::sslsocket#verify_result()","Ruby gem::security::policy#verify_signatures()","Ruby erb::version()","Ruby gem::dependencyresolver::activationrequest#version()","Ruby irb::version()","Ruby openssl::x509::crl#version()","Ruby openssl::x509::certificate#version()","Ruby openssl::x509::request#version()","Ruby optionparser#version()","Ruby rexml::document#version()","Ruby win32ole_typelib#version()","Rails actionmailer::version()","Rails actionpack::version()","Rails activemodel::version()","Rails activerecord::version()","Rails activerecord::schemamigration#version()","Rails activesupport::version()","Rails rails::version()","Ruby gem::specification#version=()","Ruby openssl::x509::crl#version=()","Ruby openssl::x509::certificate#version=()","Ruby openssl::x509::request#version=()","Ruby net::http::version_1_2()","Ruby net::http::version_1_2?()","Ruby gem::dependencyresolver::apiset#versions()","Ruby rss::maker#versions()","Ruby readline::vi_editing_mode()","Ruby readline::vi_editing_mode?()","Rails actionview::helpers::asseturlhelper#video_path()","Rails actionview::helpers::assettaghelper#video_tag()","Rails actionview::helpers::asseturlhelper#video_url()","Rails abstractcontroller::rendering#view_assigns()","Rails actioncontroller::caching#view_cache_dependencies()","Rails actioncontroller::caching::classmethods#view_cache_dependency()","Rails abstractcontroller::rendering#view_context()","Rails abstractcontroller::rendering#view_context_class()","Rails abstractcontroller::rendering::classmethods#view_context_class()","Rails abstractcontroller::viewpaths::classmethods#view_paths()","Rails abstractcontroller::viewpaths::classmethods#view_paths=()","Rails actionview::lookupcontext::viewpaths#view_paths=()","Rails abstractcontroller::rendering#view_renderer()","Ruby webrick::httpserver#virtual_host()","Ruby win32ole_method#visible?()","Ruby win32ole_type#visible?()","Ruby win32ole_typelib#visible?()","Ruby win32ole_variable#visible?()","Rails actioncontroller::hideactions::classmethods#visible_action?()","Ruby psych::visitors::yamltree#visit_array()","Ruby psych::visitors::yamltree#visit_bigdecimal()","Ruby psych::visitors::yamltree#visit_class()","Ruby psych::visitors::yamltree#visit_complex()","Ruby psych::visitors::yamltree#visit_date()","Ruby psych::visitors::yamltree#visit_datetime()","Ruby psych::visitors::yamltree#visit_exception()","Ruby psych::visitors::yamltree#visit_falseclass()","Ruby psych::visitors::yamltree#visit_float()","Ruby psych::visitors::yamltree#visit_hash()","Ruby psych::visitors::yamltree#visit_integer()","Ruby psych::visitors::yamltree#visit_module()","Ruby psych::visitors::yamltree#visit_nilclass()","Ruby psych::visitors::yamltree#visit_object()","Ruby psych::visitors::emitter#visit_psych_nodes_alias()","Ruby psych::visitors::toruby#visit_psych_nodes_alias()","Ruby psych::visitors::emitter#visit_psych_nodes_document()","Ruby psych::visitors::toruby#visit_psych_nodes_document()","Ruby psych::visitors::emitter#visit_psych_nodes_mapping()","Ruby psych::visitors::toruby#visit_psych_nodes_mapping()","Ruby psych::visitors::emitter#visit_psych_nodes_scalar()","Ruby psych::visitors::toruby#visit_psych_nodes_scalar()","Ruby psych::visitors::emitter#visit_psych_nodes_sequence()","Ruby psych::visitors::toruby#visit_psych_nodes_sequence()","Ruby psych::visitors::emitter#visit_psych_nodes_stream()","Ruby psych::visitors::toruby#visit_psych_nodes_stream()","Ruby psych::visitors::yamltree#visit_psych_omap()","Ruby psych::visitors::yamltree#visit_psych_set()","Ruby psych::visitors::yamltree#visit_range()","Ruby psych::visitors::yamltree#visit_rational()","Ruby psych::visitors::yamltree#visit_regexp()","Ruby gem::noaliasyamltree#visit_string()","Ruby psych::visitors::yamltree#visit_string()","Ruby psych::visitors::yamltree#visit_struct()","Ruby psych::visitors::yamltree#visit_symbol()","Ruby psych::visitors::yamltree#visit_time()","Ruby psych::visitors::yamltree#visit_trueclass()","Ruby net::ftp#voidcmd()","Ruby time#w3cdtf()","Ruby conditionvariable#wait()","Ruby io#wait()","Ruby monitormixin::conditionvariable#wait()","Ruby process::wait()","Ruby rinda::waittemplateentry#wait()","Rails activesupport::notifications::fanout#wait()","Ruby process::wait2()","Ruby shell::builtincommand#wait?()","Ruby shell::systemcommand#wait?()","Ruby shell::processcontroller#wait_all_jobs_execution()","Ruby io#wait_readable()","Ruby shell::processcontroller#wait_to_finish_all_process_controllers()","Ruby monitormixin::conditionvariable#wait_until()","Ruby monitormixin::conditionvariable#wait_while()","Ruby io#wait_writable()","Ruby object#wait_writable()","Ruby process::waitall()","Ruby net::telnet#waitfor()","Ruby debugger__#waiting()","Ruby shell::processcontroller#waiting_job?()","Ruby shell::processcontroller#waiting_jobs()","Ruby shell::processcontroller#waiting_jobs_exist?()","Ruby process::waitpid()","Ruby process::waitpid2()","Ruby thread#wakeup()","Ruby kernel#warn()","Ruby logger#warn()","Ruby optionparser#warn()","Ruby rdoc::options#warn()","Ruby rdoc::parser::ruby#warn()","Ruby syslog::logger#warn()","Ruby webrick::basiclog#warn()","Rails activesupport::deprecation::reporting#warn()","Ruby logger#warn?()","Ruby webrick::basiclog#warn?()","Rails activesupport::filewatcher#watch()","Rails activesupport::dependencies::watchstack#watch_namespaces()","Rails rails::railtie::configuration#watchable_dirs()","Rails rails::railtie::configuration#watchable_files()","Rails activesupport::dependencies::watchstack#watching?()","Ruby date#wday()","Ruby time#wday()","Ruby weakref#weakref_alive?()","Ruby date#wednesday?()","Ruby time#wednesday?()","Rails numeric#week()","Rails actionview::helpers::formhelper#week_field()","Rails actionview::helpers::formtaghelper#week_field_tag()","Rails numeric#weeks()","Rails dateandtime::calculations#weeks_ago()","Rails dateandtime::calculations#weeks_since()","Ruby gem::command#when_invoked()","Ruby rake::fileutilsext#when_writing()","Rails activerecord::querymethods#where()","Rails activerecord::relation#where_values_hash()","Ruby gem::commands::updatecommand#which_to_update()","Rails rails::application::configuration#whiny_nils=()","Ruby rexml::element#whitespace()","Ruby gem::dependencylist#why_not_ok?()","Ruby dl::cfunc::win32_last_error()","Ruby fiddle::win32_last_error()","Ruby fiddle::win32_last_error=()","Ruby gem::win_platform?()","Ruby rake::application#windows?()","Ruby rake::application#windows?()","Ruby rake::win32#windows?()","Ruby gem::installer#windows_stub_script()","Ruby io#winsize()","Ruby io#winsize=()","Ruby optionparser::with()","Rails abstractcontroller::railties::routeshelpers::with()","Rails activesupport::json::with_backend()","Rails activesupport::xmlmini#with_backend()","Ruby makemakefile#with_config()","Rails activerecord::connectionadapters::connectionpool#with_connection()","Rails actiondispatch::routing::mapper::base#with_default_scope()","Ruby rake::taskarguments#with_defaults()","Rails actiondispatch::routing::mapper::resources#with_exclusive_scope()","Rails actionview::lookupcontext::viewpaths#with_fallbacks()","Ruby enumerator#with_index()","Rails activesupport::hashwithindifferentaccess#with_indifferent_access()","Rails activesupport::hashwithindifferentaccess#with_indifferent_access()","Rails hash#with_indifferent_access()","Rails activesupport::cache::strategy::localcache#with_local_cache()","Rails activerecord::locking::pessimistic#with_lock()","Ruby enumerator#with_object()","Ruby prime::pseudoprimegenerator#with_object()","Rails object#with_options()","Ruby gem::gemcutterutilities#with_response()","Rails actiondispatch::routing::mapper::resources#with_scope_level()","Rails activerecord::transactions#with_transaction_returning_status()","Rails kernel#with_warnings()","Rails actioncontroller::base::without_modules()","Rails activerecord::connectionadapters::abstractadapter#without_prepared_statement?()","Rails actionview::helpers::texthelper#word_wrap()","Ruby gem::platformmismatch#wordy()","Ruby gem::sourcefetchproblem#wordy()","Ruby irb::context#workspaces()","Ruby file::world_readable?()","Ruby file::stat#world_readable?()","Ruby filetest#world_readable?()","Ruby pathname#world_readable?()","Ruby file::world_writable?()","Ruby file::stat#world_writable?()","Ruby filetest#world_writable?()","Ruby pathname#world_writable?()","Ruby gem::command#wrap()","Ruby gem::package::digestio::wrap()","Ruby json::jsonerror::wrap()","Ruby rdoc::markup::tordoc#wrap()","Ruby rdoc::text#wrap()","Ruby rexml::text#wrap()","Ruby zlib::gzipfile::wrap()","Rails array::wrap()","Ruby dl::valueutil#wrap_arg()","Ruby dl::valueutil#wrap_args()","Rails actioncontroller::paramswrapper::classmethods#wrap_parameters()","Ruby dl::function#wrap_result()","Rails rails::generators::namedbase#wrap_with_namespace()","Ruby file::writable?()","Ruby file::stat#writable?()","Ruby filetest#writable?()","Ruby pathname#writable?()","Ruby file::writable_real?()","Ruby file::stat#writable_real?()","Ruby filetest#writable_real?()","Ruby pathname#writable_real?()","Ruby argf#write()","Ruby gem::configfile#write()","Ruby gem::package::digestio#write()","Ruby gem::package::tarwriter::boundedstream#write()","Ruby gem::package::tarwriter::restrictedstream#write()","Ruby gem::security::write()","Ruby io#write()","Ruby io::write()","Ruby logger::logdevice#write()","Ruby net::internetmessageio::writeadapter#write()","Ruby net::telnet#write()","Ruby openssl::buffering#write()","Ruby rexml::attlistdecl#write()","Ruby rexml::attribute#write()","Ruby rexml::cdata#write()","Ruby rexml::comment#write()","Ruby rexml::dtd::entitydecl#write()","Ruby rexml::dtd::notationdecl#write()","Ruby rexml::doctype#write()","Ruby rexml::document#write()","Ruby rexml::element#write()","Ruby rexml::entity#write()","Ruby rexml::formatters::default#write()","Ruby rexml::instruction#write()","Ruby rexml::text#write()","Ruby rexml::xmldecl#write()","Ruby rinda::tuplespace#write()","Ruby rinda::tuplespaceproxy#write()","Ruby stringio#write()","Ruby win32::registry#write()","Ruby zlib::gzipwriter#write()","Rails actiondispatch::railsentitystore#write()","Rails actiondispatch::railsmetastore#write()","Rails activerecord::migration#write()","Rails activesupport::cache::store#write()","Ruby httpserver::table#writeto()","Rails activerecord::attributemethods::write#write_attribute()","Ruby win32::registry#write_bin()","Ruby gem::installer#write_build_info_file()","Ruby gem::installer#write_cache_file()","Ruby rexml::formatters::default#write_cdata()","Ruby rexml::formatters::pretty#write_cdata()","Ruby rexml::formatters::default#write_comment()","Ruby rexml::formatters::pretty#write_comment()","Ruby rexml::formatters::default#write_document()","Ruby rexml::formatters::pretty#write_document()","Ruby rexml::formatters::default#write_element()","Ruby rexml::formatters::pretty#write_element()","Ruby rexml::formatters::transitive#write_element()","Rails activesupport::cache::filestore#write_entry()","Rails activesupport::cache::strategy::localcache::localstore#write_entry()","Rails actioncontroller::caching::fragments#write_fragment()","Ruby csv#write_headers?()","Ruby win32::registry#write_i()","Ruby rexml::formatters::default#write_instruction()","Ruby io#write_nonblock()","Ruby openssl::buffering#write_nonblock()","Ruby rdoc::options#write_options()","Ruby win32::registry#write_s()","Ruby rinda::ringserver#write_service()","Ruby openssl::pkcs7::write_smime()","Ruby gem::installer#write_spec()","Rails activerecord::store#write_store_attribute()","Ruby rdoc::generator::darkfish#write_style_sheet()","Ruby rexml::formatters::default#write_text()","Ruby rexml::formatters::pretty#write_text()","Ruby rexml::formatters::transitive#write_text()","Ruby rexml::text#write_with_substitution()","Ruby win32::registry::wtime2time()","Rails actiondispatch::request#xhr?()","Ruby rss::atom::feed::entry::content#xhtml()","Ruby rss::atom::textconstruct#xhtml()","Ruby rss::maker::atomtextconstructbase::ensurexmlcontent#xhtml=()","Ruby net::imap#xlist()","Ruby rss::atom::feed::entry::content#xml()","Rails activerecord::connectionadapters::postgresqladapter::columnmethods#xml()","Ruby rss::maker::itemsbase::itembase::contentbase#xml=()","Ruby rss::rexmllikexmlparser#xmldecl()","Ruby rss::maker::atomtextconstructbase::ensurexmlcontent#xml_content=()","Ruby rss::maker::itemsbase::itembase::contentbase#xml_content=()","Ruby rexml::document#xml_decl()","Ruby rss::atom::feed::entry::content#xml_getter()","Ruby rss::atom::textconstruct#xml_getter()","Rails actiondispatch::request#xml_http_request?()","Ruby rss::atom::feed::entry::content#xml_setter()","Ruby rss::atom::textconstruct#xml_setter()","Ruby rexml::sax2listener#xmldecl()","Ruby rexml::streamlistener#xmldecl()","Ruby rexml::xmldecl#xmldecl()","Ruby rss::listenermixin#xmldecl()","Ruby rss::rexmllistener#xmldecl()","Ruby rss::xmlparserlistener#xmldecl()","Ruby rexml::parsers::pullevent#xmldecl?()","Ruby date#xmlschema()","Ruby date::xmlschema()","Ruby datetime#xmlschema()","Ruby datetime::xmlschema()","Ruby time#xmlschema()","Rails activesupport::timewithzone#xmlschema()","Rails date#xmlschema()","Ruby object#xmp()","Ruby rexml::attribute#xpath()","Ruby rexml::element#xpath()","Ruby rexml::text#xpath()","Ruby psych::nodes::node#yaml()","Ruby module#yaml_as()","Ruby gem::version#yaml_initialize()","Ruby object::yaml_tag()","Ruby gem::commands::yankcommand#yank_gem()","Ruby date#yday()","Ruby time#yday()","Ruby date#year()","Ruby time#year()","Rails integer#year()","Ruby xmlrpc::datetime#year=()","Rails integer#years()","Rails dateandtime::calculations#years_ago()","Rails dateandtime::calculations#years_since()","Rails date::yesterday()","Rails dateandtime::calculations#yesterday()","Ruby fiber::yield()","Ruby proc#yield()","Ruby racc::parser#yyaccept()","Ruby racc::parser#yyerrok()","Ruby racc::parser#yyerror()","Ruby racc::parser#yyparse()","Ruby matrix::zero()","Ruby bigdecimal#zero?()","Ruby file::zero?()","Ruby file::stat#zero?()","Ruby filetest#zero?()","Ruby fixnum#zero?()","Ruby float#zero?()","Ruby matrix#zero?()","Ruby numeric#zero?()","Ruby pathname#zero?()","Ruby array#zip()","Ruby enumerable#zip()","Ruby enumerator::lazy#zip()","Ruby rdoc::parser::zip?()","Ruby rake::packagetask#zip_file()","Ruby zlib::zlib_version()","Ruby time#zone()","Rails activesupport::timewithzone#zone()","Rails time::zone()","Rails time::zone=()","Ruby time#zone_offset()","Rails activesupport::timezone::zones_map()","Ruby array#|()","Ruby bignum#|()","Ruby falseclass#|()","Ruby fixnum#|()","Ruby ipaddr#|()","Ruby json::genericobject#|()","Ruby nilclass#|()","Ruby set#|()","Ruby shell::filter#|()","Ruby trueclass#|()","Ruby bignum#~()","Ruby complex#~()","Ruby fixnum#~()","Ruby ipaddr#~()","Ruby regexp#~()"],"info":[["!","BasicObject","Ruby/classes/BasicObject.html#method-i-21","()","<p>Boolean negate.\n",null,0],["!","Delegator","Ruby/classes/Delegator.html#method-i-21","()","<p>Delegates ! to the _<em>getobj</em>_\n",null,0],["!=","BasicObject","Ruby/classes/BasicObject.html#method-i-21-3D","(p1)","<p>Returns true if two objects are not-equal, otherwise false.\n",null,0],["!=","Delegator","Ruby/classes/Delegator.html#method-i-21-3D","(obj)","<p>Returns true if two objects are not considered of equal value.\n",null,0],["!~","Object","Ruby/classes/Object.html#method-i-21-7E","(p1)","<p>Returns true if two objects do not match (using the <em>=~</em> method),\notherwise false.\n",null,0],["!~","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-i-21-7E","","<p>Equivalent to <code>String#!~</code>. Match the class name against the\ngiven regexp. Returns <code>true</code> if there is no match, …\n",null,1],["%","BigDecimal","Ruby/classes/BigDecimal.html#method-i-25","(p1)","<p>Returns the modulus from dividing by b.\n<p>See BigDecimal#divmod.\n",null,0],["%","Bignum","Ruby/classes/Bignum.html#method-i-25","(p1)","<p>Returns big modulo other. See Numeric.divmod for more information.\n",null,0],["%","Fixnum","Ruby/classes/Fixnum.html#method-i-25","(p1)","<p>Returns <code>fix</code> modulo <code>other</code>. See\n<code>numeric.divmod</code> for more information.\n",null,0],["%","Float","Ruby/classes/Float.html#method-i-25","(p1)","<p>Return the modulo after division of <code>float</code> by\n<code>other</code>.\n\n<pre><code>6543.21.modulo(137)      #=&gt; 104.21\n6543.21.modulo(137.24) ...\n</code></pre>\n",null,0],["%","Numeric","Ruby/classes/Numeric.html#method-i-25","(p1)","\n<pre><code>x.modulo(y) means x-y*(x/y).floor</code></pre>\n<p>Equivalent to <em>num.divmod(aNumeric)</em>.\n<p>See <code>Numeric#divmod</code>.\n",null,0],["%","String","Ruby/classes/String.html#method-i-25","(p1)","<p>Format—Uses <em>str</em> as a format specification, and returns the result\nof applying it to <em>arg</em>. If the format …\n",null,0],["%","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-25","(args)","",null,1],["&","Array","Ruby/classes/Array.html#method-i-26","(p1)","<p>Set Intersection — Returns a new array containing elements common to the\ntwo arrays, excluding any …\n",null,0],["&","Bignum","Ruby/classes/Bignum.html#method-i-26","(p1)","<p>Performs bitwise <code>and</code> between <em>big</em> and\n<em>numeric</em>.\n",null,0],["&","FalseClass","Ruby/classes/FalseClass.html#method-i-26","(p1)","<p>And—Returns <code>false</code>. <em>obj</em> is always evaluated as it is\nthe argument to a method call—there is no short-circuit …\n",null,0],["&","Fixnum","Ruby/classes/Fixnum.html#method-i-26","(p1)","<p>Bitwise AND.\n",null,0],["&","IPAddr","Ruby/classes/IPAddr.html#method-i-26","(other)","<p>Returns a new ipaddr built by bitwise AND.\n",null,0],["&","NilClass","Ruby/classes/NilClass.html#method-i-26","(p1)","<p>And—Returns <code>false</code>. <em>obj</em> is always evaluated as it is\nthe argument to a method call—there is no short-circuit …\n",null,0],["&","Process::Status","Ruby/classes/Process/Status.html#method-i-26","(p1)","<p>Logical AND of the bits in <em>stat</em> with <em>num</em>.\n\n<pre><code>fork { exit 0x37 }\nProcess.wait\nsprintf(&#39;%04x&#39;, $?.to_i)    ...</code></pre>\n",null,0],["&","Set","Ruby/classes/Set.html#method-i-26","(enum)","<p>Returns a new set containing elements common to the set and the given\nenumerable object.\n",null,0],["&","TrueClass","Ruby/classes/TrueClass.html#method-i-26","(p1)","<p>And—Returns <code>false</code> if <em>obj</em> is <code>nil</code> or\n<code>false</code>, <code>true</code> otherwise.\n",null,0],["*","Array","Ruby/classes/Array.html#method-i-2A","(p1)","<p>Repetition — With a String argument, equivalent to\n<code>ary.join(str)</code>.\n<p>Otherwise, returns a new array built …\n",null,0],["*","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-i-2A","(x)","<p>Returns a new Tms object obtained by memberwise multiplication of the\nindividual times for this Tms object …\n",null,0],["*","BigDecimal","Ruby/classes/BigDecimal.html#method-i-2A","(p1)","<p>Multiply by the specified value.\n<p>e.g.\n\n<pre><code>c = a.mult(b,n)\nc = a * b</code></pre>\n",null,0],["*","Bignum","Ruby/classes/Bignum.html#method-i-2A","(p1)","<p>Multiplies big and other, returning the result.\n",null,0],["*","Complex","Ruby/classes/Complex.html#method-i-2A","(p1)","<p>Performs multiplication.\n\n<pre><code>Complex(2, 3)  * Complex(2, 3)   #=&gt; (-5+12i)\nComplex(900)   * Complex(1)    ...\n</code></pre>\n",null,0],["*","Fixnum","Ruby/classes/Fixnum.html#method-i-2A","(p1)","<p>Performs multiplication: the class of the resulting object depends on the\nclass of <code>numeric</code> and on the …\n",null,0],["*","Float","Ruby/classes/Float.html#method-i-2A","(p1)","<p>Returns a new float which is the product of <code>float</code> and\n<code>other</code>.\n",null,0],["*","Matrix","Ruby/classes/Matrix.html#method-i-2A","(m)","<p>Matrix multiplication.\n\n<pre><code>Matrix[[2,4], [6,8]] * Matrix.identity(2)\n  =&gt; 2 4\n     6 8\n</code></pre>\n",null,0],["*","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-2A","(other)","<p>Redefine * to return either a string or a new file list.\n",null,0],["*","Rational","Ruby/classes/Rational.html#method-i-2A","(p1)","<p>Performs multiplication.\n\n<pre><code>Rational(2, 3)  * Rational(2, 3)   #=&gt; (4/9)\nRational(900)   * Rational(1)   ...\n</code></pre>\n",null,0],["*","String","Ruby/classes/String.html#method-i-2A","(p1)","<p>Copy — Returns a new String containing <code>integer</code> copies of the\nreceiver. <code>integer</code> must be greater than …\n",null,0],["*","Vector","Ruby/classes/Vector.html#method-i-2A","(x)","<p>Multiplies the vector by <code>x</code>, where <code>x</code> is a number\nor another vector.\n",null,0],["**","BigDecimal","Ruby/classes/BigDecimal.html#method-i-2A-2A","(p1)","<p>It is a synonym of BigDecimal#power(exp).\n",null,0],["**","Bignum","Ruby/classes/Bignum.html#method-i-2A-2A","(p1)","<p>Raises <em>big</em> to the <em>exponent</em> power (which may be an\ninteger, float, or anything that will coerce to a number). …\n",null,0],["**","Complex","Ruby/classes/Complex.html#method-i-2A-2A","(p1)","<p>Performs exponentiation.\n\n<pre><code>Complex(&#39;i&#39;) ** 2              #=&gt; (-1+0i)\nComplex(-8) ** Rational(1, 3)  #=&gt; ...\n</code></pre>\n",null,0],["**","Fixnum","Ruby/classes/Fixnum.html#method-i-2A-2A","(other)","<p>Exponentiate by <code>other</code>\n",null,0],["**","Float","Ruby/classes/Float.html#method-i-2A-2A","(other)","<p>Exponentiate by <code>other</code>\n",null,0],["**","Matrix","Ruby/classes/Matrix.html#method-i-2A-2A","(other)","<p>Matrix exponentiation. Equivalent to multiplying the matrix by itself N\ntimes. Non integer exponents …\n",null,0],["**","Rational","Ruby/classes/Rational.html#method-i-2A-2A","(other)","<p>Exponentiate by <code>other</code>\n\n<pre><code>(1/3) ** 2 # =&gt; 1/9\n</code></pre>\n",null,0],["+","Array","Ruby/classes/Array.html#method-i-2B","(p1)","<p>Concatenation — Returns a new array built by concatenating the two arrays\ntogether to produce a third …\n",null,0],["+","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-i-2B","(other)","<p>Returns a new Tms object obtained by memberwise summation of the individual\ntimes for this Tms object …\n",null,0],["+","BigDecimal","Ruby/classes/BigDecimal.html#method-i-2B","(p1)","<p>Add the specified value.\n<p>e.g.\n\n<pre><code>c = a.add(b,n)\nc = a + b</code></pre>\n",null,0],["+","Bignum","Ruby/classes/Bignum.html#method-i-2B","(p1)","<p>Adds big and other, returning the result.\n",null,0],["+","Complex","Ruby/classes/Complex.html#method-i-2B","(p1)","<p>Performs addition.\n\n<pre><code>Complex(2, 3)  + Complex(2, 3)   #=&gt; (4+6i)\nComplex(900)   + Complex(1)      #=&gt; (901+0i) ...\n</code></pre>\n",null,0],["+","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-2B","(p1)","<p>Returns a new DL::CPtr that has been advanced <code>n</code> bytes.\n",null,0],["+","Date","Ruby/classes/Date.html#method-i-2B","(p1)","<p>Returns a date object pointing other days after self.  The other should be\na numeric value.  If the other …\n",null,0],["+","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-2B","(p1)","<p>Returns a new pointer instance that has been advanced <code>n</code> bytes.\n",null,0],["+","Fixnum","Ruby/classes/Fixnum.html#method-i-2B","(p1)","<p>Performs addition: the class of the resulting object depends on the class\nof <code>numeric</code> and on the magnitude …\n",null,0],["+","Float","Ruby/classes/Float.html#method-i-2B","(p1)","<p>Returns a new float which is the sum of <code>float</code> and\n<code>other</code>.\n",null,0],["+","Matrix","Ruby/classes/Matrix.html#method-i-2B","(m)","<p>Matrix addition.\n\n<pre><code>Matrix.scalar(2,5) + Matrix[[1,0], [-4,7]]\n  =&gt;  6  0\n     -4 12\n</code></pre>\n",null,0],["+","Pathname","Ruby/classes/Pathname.html#method-i-2B","(other)","<p>Appends a pathname fragment to <code>self</code> to produce a new Pathname\nobject.\n\n<pre><code>p1 = Pathname.new(&quot;/usr&quot;)      # ...</code></pre>\n",null,0],["+","Rational","Ruby/classes/Rational.html#method-i-2B","(p1)","<p>Performs addition.\n\n<pre><code>Rational(2, 3)  + Rational(2, 3)   #=&gt; (4/3)\nRational(900)   + Rational(1)      #=&gt; ...\n</code></pre>\n",null,0],["+","Set","Ruby/classes/Set.html#method-i-2B","(enum)","",null,0],["+","Shell::Filter","Ruby/classes/Shell/Filter.html#method-i-2B","(filter)","<p>Outputs <code>filter1</code>, and then <code>filter2</code> using Join.new\n",null,0],["+","String","Ruby/classes/String.html#method-i-2B","(p1)","<p>Concatenation—Returns a new <code>String</code> containing\n<em>other_str</em> concatenated to <em>str</em>.\n\n<pre><code>&quot;Hello from &quot; + self.to_s ...</code></pre>\n",null,0],["+","Time","Ruby/classes/Time.html#method-i-2B","(p1)","<p>Addition — Adds some number of seconds (possibly fractional) to\n<em>time</em> and returns that value as a new …\n",null,0],["+","URI::Generic","Ruby/classes/URI/Generic.html#method-i-2B","(oth)","",null,0],["+","Vector","Ruby/classes/Vector.html#method-i-2B","(v)","<p>Vector addition.\n",null,0],["+","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-2B","(other)","<p>Adds another Duration or a Numeric to this Duration. Numeric values are\ntreated as seconds.\n",null,1],["+","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-2B","(other)","",null,1],["+","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-2B","(other)","",null,1],["+","Rails::Initializable::Collection","Rails/classes/Rails/Initializable/Collection.html#method-i-2B","(other)","",null,1],["+@","BigDecimal","Ruby/classes/BigDecimal.html#method-i-2B-40","()","<p>Return self.\n<p>e.g.\n\n<pre><code>b = +a  # b == a</code></pre>\n",null,0],["+@","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-2B-40","()","<p>Returns a DL::CPtr that is a dereferenced pointer for this DL::CPtr.\nAnalogous to the star operator in …\n",null,0],["+@","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-2B-40","()","<p>Returns a new Fiddle::Pointer instance that is a dereferenced pointer for\nthis pointer.\n<p>Analogous to the …\n",null,0],["+@","Numeric","Ruby/classes/Numeric.html#method-i-2B-40","()","<p>Unary Plus—Returns the receiver&#39;s value.\n",null,0],["-","Array","Ruby/classes/Array.html#method-i-2D","(p1)","<p>Array Difference\n<p>Returns a new array that is a copy of the original array, removing any\nitems that also …\n",null,0],["-","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-i-2D","(other)","<p>Returns a new Tms object obtained by memberwise subtraction of the\nindividual times for the other Tms …\n",null,0],["-","BigDecimal","Ruby/classes/BigDecimal.html#method-i-2D","(p1)","<p>Subtract the specified value.\n<p>e.g.\n\n<pre><code>c = a.sub(b,n)\nc = a - b</code></pre>\n",null,0],["-","Bignum","Ruby/classes/Bignum.html#method-i-2D","(p1)","<p>Subtracts other from big, returning the result.\n",null,0],["-","Complex","Ruby/classes/Complex.html#method-i-2D","(p1)","<p>Performs subtraction.\n\n<pre><code>Complex(2, 3)  - Complex(2, 3)   #=&gt; (0+0i)\nComplex(900)   - Complex(1)      #=&gt; ...\n</code></pre>\n",null,0],["-","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-2D","(p1)","<p>Returns a new DL::CPtr that has been moved back <code>n</code> bytes.\n",null,0],["-","Date","Ruby/classes/Date.html#method-i-2D","(p1)","<p>Returns the difference between the two dates if the other is a date object.\nIf the other is a numeric …\n",null,0],["-","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-2D","(p1)","<p>Returns a new pointer instance that has been moved back <code>n</code>\nbytes.\n",null,0],["-","Fixnum","Ruby/classes/Fixnum.html#method-i-2D","(p1)","<p>Performs subtraction: the class of the resulting object depends on the\nclass of <code>numeric</code> and on the magnitude …\n",null,0],["-","Float","Ruby/classes/Float.html#method-i-2D","(p1)","<p>Returns a new float which is the difference of <code>float</code> and\n<code>other</code>.\n",null,0],["-","Matrix","Ruby/classes/Matrix.html#method-i-2D","(m)","<p>Matrix subtraction.\n\n<pre><code>Matrix[[1,5], [4,2]] - Matrix[[9,3], [-4,1]]\n  =&gt; -8  2\n      8  1\n</code></pre>\n",null,0],["-","Rational","Ruby/classes/Rational.html#method-i-2D","(p1)","<p>Performs subtraction.\n\n<pre><code>Rational(2, 3)  - Rational(2, 3)   #=&gt; (0/1)\nRational(900)   - Rational(1)      ...\n</code></pre>\n",null,0],["-","Set","Ruby/classes/Set.html#method-i-2D","(enum)","<p>Returns a new set built by duplicating the set, removing every element that\nappears in the given enumerable …\n",null,0],["-","Time","Ruby/classes/Time.html#method-i-2D","(p1)","<p>Difference — Returns a new Time object that represents the difference\nbetween <em>time</em> and <code>other_time</code>, …\n",null,0],["-","URI::Generic","Ruby/classes/URI/Generic.html#method-i-2D","(oth)","",null,0],["-","Vector","Ruby/classes/Vector.html#method-i-2D","(v)","<p>Vector subtraction.\n",null,0],["-","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-2D","(other)","<p>Subtracts another Duration or a Numeric from this Duration. Numeric values\nare treated as seconds.\n",null,1],["-","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-2D","(other)","",null,1],["-","Rails::Engine::Railties","Rails/classes/Rails/Engine/Railties.html#method-i-2D","(others)","",null,1],["-","Time","Rails/classes/Time.html#method-i-2D","(other)","",null,1],["-@","BigDecimal","Ruby/classes/BigDecimal.html#method-i-2D-40","()","<p>Return the negation of self.\n<p>e.g.\n\n<pre><code>b = -a\nb == a * -1</code></pre>\n",null,0],["-@","Bignum","Ruby/classes/Bignum.html#method-i-2D-40","()","<p>Unary minus (returns an integer whose value is 0-big)\n",null,0],["-@","Complex","Ruby/classes/Complex.html#method-i-2D-40","()","<p>Returns negation of the value.\n\n<pre><code>-Complex(1, 2)  #=&gt; (-1-2i)\n</code></pre>\n",null,0],["-@","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-2D-40","()","<p>Returns a DL::CPtr that is a reference pointer for this DL::CPtr. Analogous\nto the ampersand operator …\n",null,0],["-@","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-2D-40","()","<p>Returns a new Fiddle::Pointer instance that is a reference pointer for this\npointer.\n<p>Analogous to the …\n",null,0],["-@","Fixnum","Ruby/classes/Fixnum.html#method-i-2D-40","()","<p>Negates <code>fix</code> (which might return a Bignum).\n",null,0],["-@","Float","Ruby/classes/Float.html#method-i-2D-40","()","<p>Returns float, negated.\n",null,0],["-@","Numeric","Ruby/classes/Numeric.html#method-i-2D-40","()","<p>Unary Minus—Returns the receiver&#39;s value, negated.\n",null,0],["/","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-i-2F","(x)","<p>Returns a new Tms object obtained by memberwise division of the individual\ntimes for this Tms object …\n",null,0],["/","BigDecimal","Ruby/classes/BigDecimal.html#method-i-2F","(p1)","<p>Divide by the specified value.\n<p>e.g.\n\n<pre><code>c = a.div(b,n)</code></pre>\n",null,0],["/","Bignum","Ruby/classes/Bignum.html#method-i-2F","(p1)","<p>Performs division: the class of the resulting object depends on the class\nof <code>numeric</code> and on the magnitude …\n",null,0],["/","Complex","Ruby/classes/Complex.html#method-i-2F","(p1)","<p>Performs division.\n\n<pre><code>Complex(2, 3)  / Complex(2, 3)   #=&gt; ((1/1)+(0/1)*i)\nComplex(900)   / Complex(1)   ...\n</code></pre>\n",null,0],["/","Fixnum","Ruby/classes/Fixnum.html#method-i-2F","(p1)","<p>Performs division: the class of the resulting object depends on the class\nof <code>numeric</code> and on the magnitude …\n",null,0],["/","Float","Ruby/classes/Float.html#method-i-2F","(p1)","<p>Returns a new float which is the result of dividing <code>float</code> by\n<code>other</code>.\n",null,0],["/","Matrix","Ruby/classes/Matrix.html#method-i-2F","(other)","<p>Matrix division (multiplication by the inverse).\n\n<pre><code>Matrix[[7,6], [3,9]] / Matrix[[2,9], [3,1]]\n  =&gt; -7  ...\n</code></pre>\n",null,0],["/","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-2F","(p1)","",null,0],["/","Rational","Ruby/classes/Rational.html#method-i-2F","(p1)","<p>Performs division.\n\n<pre><code>Rational(2, 3)  / Rational(2, 3)   #=&gt; (1/1)\nRational(900)   / Rational(1)      #=&gt; ...\n</code></pre>\n",null,0],["/","Vector","Ruby/classes/Vector.html#method-i-2F","(x)","<p>Vector division.\n",null,0],["<","BigDecimal","Ruby/classes/BigDecimal.html#method-i-3C","(p1)","<p>Returns true if a is less than b.\n<p>Values may be coerced to perform the comparison (see ==, BigDecimal#coerce\n…\n",null,0],["<","Bignum","Ruby/classes/Bignum.html#method-i-3C","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is less than\nthat of <code>real</code>.\n",null,0],["<","Comparable","Ruby/classes/Comparable.html#method-i-3C","(p1)","<p>Compares two objects based on the receiver&#39;s <code>&lt;=&gt;</code>\nmethod, returning true if it returns -1.\n",null,0],["<","Fixnum","Ruby/classes/Fixnum.html#method-i-3C","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is less than\nthat of <code>real</code>.\n",null,0],["<","Float","Ruby/classes/Float.html#method-i-3C","(p1)","<p><code>true</code> if <code>flt</code> is less than <code>real</code>. The\nresult of <code>NaN &lt; NaN</code> is undefined, so the\nimplementation-dependent …\n",null,0],["<","Module","Ruby/classes/Module.html#method-i-3C","(p1)","<p>Returns true if <em>mod</em> is a subclass of <em>other</em>. Returns\n<code>nil</code> if there&#39;s no relationship between the two. …\n",null,0],["<","Set","Ruby/classes/Set.html#method-i-3C","(set)","",null,0],["<","Shell::Filter","Ruby/classes/Shell/Filter.html#method-i-3C","(src)","<p>Inputs from <code>source</code>, which is either a string of a file name or\nan IO object.\n",null,0],["<<","Array","Ruby/classes/Array.html#method-i-3C-3C","(p1)","<p>Append—Pushes the given object on to the end of this array. This expression\nreturns the array itself, …\n",null,0],["<<","Bignum","Ruby/classes/Bignum.html#method-i-3C-3C","(p1)","<p>Shifts big left <em>numeric</em> positions (right if <em>numeric</em> is\nnegative).\n",null,0],["<<","CSV","Ruby/classes/CSV.html#method-i-3C-3C","(row)","<p>The primary write method for wrapped Strings and IOs, <code>row</code> (an\nArray or CSV::Row) is converted to CSV …\n",null,0],["<<","CSV::Row","Ruby/classes/CSV/Row.html#method-i-3C-3C","(arg)","<p>If a two-element Array is provided, it is assumed to be a header and field\nand the pair is appended. …\n",null,0],["<<","CSV::Table","Ruby/classes/CSV/Table.html#method-i-3C-3C","(row_or_array)","<p>Adds a new row to the bottom end of this table.  You can provide an Array,\nwhich will be converted to …\n",null,0],["<<","Curses::Window","Ruby/classes/Curses/Window.html#method-i-3C-3C","(p1)","<p>&lt;&lt;\n<p>Add String <code>str</code> to the current string.\n<p>See also Curses::Window.addstr\n",null,0],["<<","Date","Ruby/classes/Date.html#method-i-3C-3C","(p1)","<p>Returns a date object pointing n months before self.  The n should be a\nnumeric value.\n\n<pre><code>Date.new(2001,2,3) ...</code></pre>\n",null,0],["<<","Digest::HMAC","Ruby/classes/Digest/HMAC.html#method-i-3C-3C","(text)","",null,0],["<<","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-3C-3C","(p1)","<p>Updates the digest using a given <em>string</em> and returns self.\n<p>The update() method and the left-shift operator …\n",null,0],["<<","Fixnum","Ruby/classes/Fixnum.html#method-i-3C-3C","(p1)","<p>Shifts <em>fix</em> left <em>count</em> positions (right if <em>count</em>\nis negative).\n",null,0],["<<","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-3C-3C","(o)","",null,0],["<<","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-3C-3C","(obj)","",null,0],["<<","IO","Ruby/classes/IO.html#method-i-3C-3C","(p1)","<p>String Output—Writes <em>obj</em> to <em>ios</em>. <em>obj</em> will be\nconverted to a string using <code>to_s</code>.\n\n<pre><code>$stdout &lt;&lt; &quot;Hello &quot; &lt;&lt; ...</code></pre>\n",null,0],["<<","IO::writable","Ruby/classes/IO/writable.html#method-i-3C-3C","(p1)","<p>See IO#<<.\n",null,0],["<<","IPAddr","Ruby/classes/IPAddr.html#method-i-3C-3C","(num)","<p>Returns a new ipaddr built by bitwise left shift.\n",null,0],["<<","Logger","Ruby/classes/Logger.html#method-i-3C-3C","(msg)","<p>Dump given message to the log device without any formatting.  If no log\ndevice exists, return <code>nil</code>.\n",null,0],["<<","Net::InternetMessageIO::WriteAdapter","Ruby/classes/Net/InternetMessageIO/WriteAdapter.html#method-i-3C-3C","(str)","",null,0],["<<","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-3C-3C","(s)","<p>Writes <code>s</code> to the stream.  <code>s</code> will be converted to a\nString using String#to_s.\n",null,0],["<<","OpenSSL::Digest","Ruby/classes/OpenSSL/Digest.html#method-i-3C-3C","(p1)","",null,0],["<<","OpenSSL::HMAC","Ruby/classes/OpenSSL/HMAC.html#method-i-3C-3C","(p1)","",null,0],["<<","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-3C-3C","(object)","",null,0],["<<","Queue","Ruby/classes/Queue.html#method-i-3C-3C","(obj)","<p>Alias of push\n",null,0],["<<","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-i-3C-3C","(part)","<p>Appends <code>part</code> to the document\n",null,0],["<<","RDoc::Markup::List","Ruby/classes/RDoc/Markup/List.html#method-i-3C-3C","(item)","<p>Appends <code>item</code> to the list\n",null,0],["<<","RDoc::Markup::ListItem","Ruby/classes/RDoc/Markup/ListItem.html#method-i-3C-3C","(part)","<p>Appends <code>part</code> to the ListItem\n",null,0],["<<","RDoc::Markup::Raw","Ruby/classes/RDoc/Markup/Raw.html#method-i-3C-3C","(text)","<p>Appends <code>text</code>\n",null,0],["<<","REXML::Document","Ruby/classes/REXML/Document.html#method-i-3C-3C","( child )","",null,0],["<<","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-3C-3C","(element)","<p>Append a child to this element, optionally under a provided namespace. The\nnamespace argument is ignored …\n",null,0],["<<","REXML::Output","Ruby/classes/REXML/Output.html#method-i-3C-3C","( content )","",null,0],["<<","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-3C-3C","( object )","",null,0],["<<","REXML::Text","Ruby/classes/REXML/Text.html#method-i-3C-3C","( to_append )","<p>Appends text to this text node.  The text is appended in the\n<code>raw</code> mode of this text node.\n",null,0],["<<","REXML::Validation::Choice","Ruby/classes/REXML/Validation/Choice.html#method-i-3C-3C","( event )","",null,0],["<<","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-i-3C-3C","( event )","",null,0],["<<","RSS::XML::Element","Ruby/classes/RSS/XML/Element.html#method-i-3C-3C","(child)","",null,0],["<<","Set","Ruby/classes/Set.html#method-i-3C-3C","(o)","",null,0],["<<","SizedQueue","Ruby/classes/SizedQueue.html#method-i-3C-3C","(obj)","<p>Alias of push\n",null,0],["<<","String","Ruby/classes/String.html#method-i-3C-3C","(p1)","<p>Append—Concatenates the given object to <em>str</em>. If the object is a\n<code>Integer</code>, it is considered as a codepoint, …\n",null,0],["<<","StringScanner","Ruby/classes/StringScanner.html#method-i-3C-3C","(p1)","<p>Appends <code>str</code> to the string being scanned. This method does not\naffect scan pointer.\n\n<pre><code>s = StringScanner.new(&quot;Fri ...</code></pre>\n",null,0],["<<","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-3C-3C","(obj)","<p>Synonym for log(INFO, obj.to_s)\n",null,0],["<<","WEBrick::HTTPUtils::FormData","Ruby/classes/WEBrick/HTTPUtils/FormData.html#method-i-3C-3C","(str)","<p>Adds <code>str</code> to this FormData which may be the body, a header or a\nheader entry.\n<p>This is called by WEBrick::HTTPUtils.parse_form_data …\n",null,0],["<<","Zlib::Deflate","Ruby/classes/Zlib/Deflate.html#method-i-3C-3C","(p1)","<p>Inputs <code>string</code> into the deflate stream just like\nZlib::Deflate#deflate, but returns the Zlib::Deflate …\n",null,0],["<<","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-3C-3C","(p1)","<p>Document-method: &lt;&lt; Same as IO.\n",null,0],["<<","Zlib::Inflate","Ruby/classes/Zlib/Inflate.html#method-i-3C-3C","(p1)","<p>Same as IO.\n",null,0],["<<","ActiveSupport::Notifications::Event","Rails/classes/ActiveSupport/Notifications/Event.html#method-i-3C-3C","(event)","",null,1],["<<","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-3C-3C","(value)","",null,1],["<<","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-3C-3C","(path)","",null,1],["<=","BigDecimal","Ruby/classes/BigDecimal.html#method-i-3C-3D","(p1)","<p>Returns true if a is less than or equal to b.\n<p>Values may be coerced to perform the comparison (see ==, …\n",null,0],["<=","Bignum","Ruby/classes/Bignum.html#method-i-3C-3D","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is less than or\nequal to that of <code>real</code>.\n",null,0],["<=","Comparable","Ruby/classes/Comparable.html#method-i-3C-3D","(p1)","<p>Compares two objects based on the receiver&#39;s <code>&lt;=&gt;</code>\nmethod, returning true if it returns -1 or …\n",null,0],["<=","Fixnum","Ruby/classes/Fixnum.html#method-i-3C-3D","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is less than or\nequal to that of <code>real</code>.\n",null,0],["<=","Float","Ruby/classes/Float.html#method-i-3C-3D","(p1)","<p><code>true</code> if <code>flt</code> is less than or equal to\n<code>real</code>. The result of <code>NaN &lt;= NaN</code> is undefined,\nso the implementation-dependent …\n",null,0],["<=","Module","Ruby/classes/Module.html#method-i-3C-3D","(p1)","<p>Returns true if <em>mod</em> is a subclass of <em>other</em> or is the same\nas <em>other</em>. Returns <code>nil</code> if there&#39;s no relationship\n…\n",null,0],["<=","Set","Ruby/classes/Set.html#method-i-3C-3D","(set)","",null,0],["<=>","Array","Ruby/classes/Array.html#method-i-3C-3D-3E","(p1)","<p>Comparison — Returns an integer (<code>-1</code>, <code>0</code>, or\n<code>+1</code>) if this array is less than, equal to, or greater than …\n",null,0],["<=>","BigDecimal","Ruby/classes/BigDecimal.html#method-i-3C-3D-3E","(p1)","<p>The comparison operator. a &lt;=&gt; b is 0 if a == b, 1 if a &gt; b, -1 if\na &lt; b.\n",null,0],["<=>","Bignum","Ruby/classes/Bignum.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1, 0, or +1 depending on whether <code>big</code> is\nless than, equal to, or greater than <code>numeric</code> …\n",null,0],["<=>","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-3C-3D-3E","(p1)","<p>Returns -1 if less than, 0 if equal to, 1 if greater than\n<code>other</code>.  Returns nil if <code>ptr</code> cannot be compared …\n",null,0],["<=>","Date","Ruby/classes/Date.html#method-i-3C-3D-3E","(p1)","<p>Compares the two dates and returns -1, zero, 1 or nil.  The other should be\na date object or a numeric …\n",null,0],["<=>","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-3C-3D-3E","(p1)","<p>Returns -1 if less than, 0 if equal to, 1 if greater than\n<code>other</code>.\n<p>Returns nil if <code>ptr</code> cannot be compared …\n",null,0],["<=>","File::Stat","Ruby/classes/File/Stat.html#method-i-3C-3D-3E","(p1)","<p>Compares File::Stat objects by comparing their respective modification\ntimes.\n<p><code>nil</code> is returned if the two …\n",null,0],["<=>","Fixnum","Ruby/classes/Fixnum.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1, 0, +1 or nil depending on whether <code>fix</code>\nis less than, equal to, or greater than …\n",null,0],["<=>","Float","Ruby/classes/Float.html#method-i-3C-3D-3E","(p1)","<p>Returns -1, 0, +1 or nil depending on whether <code>float</code> is less\nthan, equal to, or greater than <code>real</code>. This …\n",null,0],["<=>","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-3C-3D-3E","(other)","<p>Dependencies are ordered by name.\n",null,0],["<=>","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-i-3C-3D-3E","(other)","",null,0],["<=>","Gem::Source","Ruby/classes/Gem/Source.html#method-i-3C-3D-3E","(other)","",null,0],["<=>","Gem::Version","Ruby/classes/Gem/Version.html#method-i-3C-3D-3E","(other)","<p>Compares this version with <code>other</code> returning -1, 0, or 1 if the\nother version is larger, the same, or smaller …\n",null,0],["<=>","IPAddr","Ruby/classes/IPAddr.html#method-i-3C-3D-3E","(other)","<p>Compares the ipaddr with another.\n",null,0],["<=>","IRB::Notifier::LeveledNotifier","Ruby/classes/IRB/Notifier/LeveledNotifier.html#method-i-3C-3D-3E","(other)","<p>Compares the level of this notifier object with the given\n<code>other</code> notifier.\n<p>See the Comparable module for …\n",null,0],["<=>","Module","Ruby/classes/Module.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1, 0, +1 or nil depending on whether\n<code>module</code> includes <code>other_module</code>, they are the …\n",null,0],["<=>","Numeric","Ruby/classes/Numeric.html#method-i-3C-3D-3E","(p1)","<p>Returns zero if <code>number</code> equals <code>other</code>, otherwise\n<code>nil</code> is returned if the two values are incomparable.\n",null,0],["<=>","Object","Ruby/classes/Object.html#method-i-3C-3D-3E","(p1)","<p>Returns 0 if <code>obj</code> and <code>other</code> are the same object or\n<code>obj == other</code>, otherwise nil.\n<p>The &lt;=&gt; is used by …\n",null,0],["<=>","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-3C-3D-3E","(p1)","",null,0],["<=>","Pathname","Ruby/classes/Pathname.html#method-i-3C-3D-3E","(p1)","<p>Provides a case-sensitive comparison operator for pathnames.\n\n<pre><code>Pathname.new(&#39;/usr&#39;) &lt;=&gt; Pathname.new(&#39;/usr/bin&#39;) ...\n</code></pre>\n",null,0],["<=>","RDoc::Alias","Ruby/classes/RDoc/Alias.html#method-i-3C-3D-3E","(other)","<p>Order by #singleton then #new_name\n",null,0],["<=>","RDoc::Constant","Ruby/classes/RDoc/Constant.html#method-i-3C-3D-3E","(other)","<p>Constants are ordered by name\n",null,0],["<=>","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-3C-3D-3E","(other)","<p>Contexts are sorted by full_name\n",null,0],["<=>","RDoc::Extend","Ruby/classes/RDoc/Extend.html#method-i-3C-3D-3E","(other)","<p>Extends are sorted by name\n",null,0],["<=>","RDoc::Include","Ruby/classes/RDoc/Include.html#method-i-3C-3D-3E","(other)","<p>Includes are sorted by name\n",null,0],["<=>","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-3C-3D-3E","(other)","<p>Order by #singleton then #name\n",null,0],["<=>","REXML::Comment","Ruby/classes/REXML/Comment.html#method-i-3C-3D-3E","(other)","<p>Compares this Comment to another; the contents of the comment are used in\nthe comparison.\n",null,0],["<=>","REXML::Text","Ruby/classes/REXML/Text.html#method-i-3C-3D-3E","( other )","<p><code>other</code> a String or a Text <code>returns</code> the result of\n(to_s &lt;=&gt; arg.to_s)\n",null,0],["<=>","RSS::Maker::ItemsBase::ItemBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-3C-3D-3E","(other)","",null,0],["<=>","Rake::EarlyTime","Ruby/classes/Rake/EarlyTime.html#method-i-3C-3D-3E","(other)","",null,0],["<=>","Rational","Ruby/classes/Rational.html#method-i-3C-3D-3E","(p1)","<p>Performs comparison and returns -1, 0, or +1.\n<p><code>nil</code> is returned if the two values are incomparable.\n\n<pre><code>Rational(2, ...</code></pre>\n",null,0],["<=>","String","Ruby/classes/String.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1, 0, +1 or nil depending on whether\n<code>string</code> is less than, equal to, or greater …\n",null,0],["<=>","Symbol","Ruby/classes/Symbol.html#method-i-3C-3D-3E","(p1)","<p>Compares <code>symbol</code> with <code>other_symbol</code> after calling\n#to_s on each of the symbols. Returns -1, 0, +1 or nil …\n",null,0],["<=>","Time","Ruby/classes/Time.html#method-i-3C-3D-3E","(other)","<p>Comparison—Compares <code>time</code> with <code>other_time</code>.\n<p>-1, 0, +1 or nil depending on whether <code>time</code> is less  than, …\n",null,0],["<=>","WEBrick::HTTPVersion","Ruby/classes/WEBrick/HTTPVersion.html#method-i-3C-3D-3E","(other)","<p>Compares this version with <code>other</code> according to the HTTP\nspecification rules.\n",null,0],["<=>","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-i-3C-3D-3E","","<p>Equivalent to <code>String#&lt;=&gt;</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">BlogPost</span>\n  <span class=\"ruby-identifier\">extend</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Naming</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-constant\">BlogPost</span>.<span class=\"ruby-identifier\">model_name</span> <span class=\"ruby-operator\">&lt;=&gt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["<=>","ActiveRecord::ConnectionAdapters::SQLite3Adapter::Version","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/Version.html#method-i-3C-3D-3E","(version_string)","",null,1],["<=>","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-3C-3D-3E","(other_object)","<p>Allows sort on objects\n",null,1],["<=>","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-3C-3D-3E","(other)","<p>Use the time in UTC for comparisons.\n",null,1],["<=>","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-3C-3D-3E","(zone)","<p>Compare this time zone to the parameter. The two are compared first on\ntheir offsets, and then by name. …\n",null,1],["<=>","Date","Rails/classes/Date.html#method-i-3C-3D-3E","(other)","",null,1],["<=>","DateTime","Rails/classes/DateTime.html#method-i-3C-3D-3E","(other)","<p>Layers additional behavior on DateTime#&lt;=&gt; so that Time and\nActiveSupport::TimeWithZone instances …\n",null,1],["<=>","Time","Rails/classes/Time.html#method-i-3C-3D-3E","(other)","",null,1],["==","Array","Ruby/classes/Array.html#method-i-3D-3D","(p1)","<p>Equality — Two arrays are equal if they contain the same number of elements\nand if each element is …\n",null,0],["==","BasicObject","Ruby/classes/BasicObject.html#method-i-3D-3D","(p1)","<p>Equality — At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <code>obj</code> and <code>other</code> are the\nsame object. Typically …\n",null,0],["==","BigDecimal","Ruby/classes/BigDecimal.html#method-i-3D-3D","(p1)","<p>Tests for value equality; returns true if the values are equal.\n<p>The == and === operators and the eql? …\n",null,0],["==","Bignum","Ruby/classes/Bignum.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>big</em>. Contrast this with <code>Bignum#eql?</code>, which requires\n<em>obj</em> …\n",null,0],["==","CSV::Row","Ruby/classes/CSV/Row.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if this row contains the same headers and fields\nin the same order as <code>other</code>.\n",null,0],["==","CSV::Table","Ruby/classes/CSV/Table.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if all rows of this table ==()\n<code>other</code>&#39;s rows.\n",null,0],["==","Comparable","Ruby/classes/Comparable.html#method-i-3D-3D","(p1)","<p>Compares two objects based on the receiver&#39;s <code>&lt;=&gt;</code>\nmethod, returning true if it returns 0. Also …\n",null,0],["==","Complex","Ruby/classes/Complex.html#method-i-3D-3D","(p1)","<p>Returns true if cmp equals object numerically.\n\n<pre><code>Complex(2, 3)  == Complex(2, 3)   #=&gt; true\nComplex(5)  ...\n</code></pre>\n",null,0],["==","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-3D-3D","(p1)","<p>Returns true if <code>other</code> wraps the same pointer, otherwise\nreturns false.\n",null,0],["==","Delegator","Ruby/classes/Delegator.html#method-i-3D-3D","(obj)","<p>Returns true if two objects are considered of equal value.\n",null,0],["==","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-3D-3D","(p1)","<p>If a string is given, checks whether it is equal to the hex-encoded hash\nvalue of the digest object. …\n",null,0],["==","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-3D-3D","(p1)","",null,0],["==","Exception","Ruby/classes/Exception.html#method-i-3D-3D","(p1)","<p>Equality—If <em>obj</em> is not an <code>Exception</code>, returns\n<code>false</code>. Otherwise, returns <code>true</code> if <em>exc</em>\nand <em>obj</em> share same …\n",null,0],["==","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-3D-3D","(p1)","<p>Returns true if <code>other</code> wraps the same pointer, otherwise\nreturns false.\n",null,0],["==","Fixnum","Ruby/classes/Fixnum.html#method-i-3D-3D","(p1)","<p>Return <code>true</code> if <code>fix</code> equals <code>other</code>\nnumerically.\n\n<pre><code>1 == 2      #=&gt; false\n1 == 1.0    #=&gt; true\n</code></pre>\n",null,0],["==","Float","Ruby/classes/Float.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>flt</em>. Contrast this with <code>Float#eql?</code>, which requires\n<em>obj</em> …\n",null,0],["==","Gem::DependencyResolver::ActivationRequest","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html#method-i-3D-3D","(other)","",null,0],["==","Gem::DependencyResolver::DependencyRequest","Ruby/classes/Gem/DependencyResolver/DependencyRequest.html#method-i-3D-3D","(other)","",null,0],["==","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-i-3D-3D","(other)","<p>Compare with <code>other</code>. Supports another NameTuple or an Array in\nthe [name, version, platform] format.\n",null,0],["==","Gem::Platform","Ruby/classes/Gem/Platform.html#method-i-3D-3D","(other)","<p>Is <code>other</code> equal to this platform?  Two platforms are equal if\nthey have the same CPU, OS and version. …\n",null,0],["==","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-3D-3D","(other)","<p>DOC: this should probably be :nodoc&#39;d\n",null,0],["==","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-3D-3D","(other)","<p>DOC: this should probably be :nodoc&#39;d\n",null,0],["==","Gem::Source","Ruby/classes/Gem/Source.html#method-i-3D-3D","(other)","",null,0],["==","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-3D-3D","(other)","",null,0],["==","Hash","Ruby/classes/Hash.html#method-i-3D-3D","(p1)","<p>Equality—Two hashes are equal if they each contain the same number of keys\nand if each key-value pair …\n",null,0],["==","IPAddr","Ruby/classes/IPAddr.html#method-i-3D-3D","(other)","<p>Returns true if two ipaddrs are equal.\n",null,0],["==","MatchData","Ruby/classes/MatchData.html#method-i-3D-3D","(p1)","<p>Equality—Two matchdata are equal if their target strings, patterns, and\nmatched positions are identical. …\n",null,0],["==","Matrix","Ruby/classes/Matrix.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if and only if the two matrices contain equal\nelements.\n",null,0],["==","Method","Ruby/classes/Method.html#method-i-3D-3D","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition …\n",null,0],["==","Module","Ruby/classes/Module.html#method-i-3D-3D","(p1)","<p>Equality — At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <code>obj</code> and <code>other</code> are the\nsame object. Typically …\n",null,0],["==","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-3D-3D","(p1)","",null,0],["==","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-3D-3D","(p1)","",null,0],["==","OpenSSL::PKey::EC::Point","Ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-3D-3D","(p1)","",null,0],["==","OpenSSL::SSL::Session","Ruby/classes/OpenSSL/SSL/Session.html#method-i-3D-3D","(p1)","",null,0],["==","OpenStruct","Ruby/classes/OpenStruct.html#method-i-3D-3D","(other)","<p>Compares this object and <code>other</code> for equality.  An OpenStruct is\nequal to <code>other</code> when <code>other</code> is an OpenStruct …\n",null,0],["==","Pathname","Ruby/classes/Pathname.html#method-i-3D-3D","(p1)","<p>Compare this pathname with <code>other</code>.  The comparison is\nstring-based. Be aware that two different paths …\n",null,0],["==","Process::Status","Ruby/classes/Process/Status.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if the integer value of <em>stat</em> equals\n<em>other</em>.\n",null,0],["==","RDoc::Attr","Ruby/classes/RDoc/Attr.html#method-i-3D-3D","(other)","<p>Attributes are equal when their names, singleton and rw are identical\n",null,0],["==","RDoc::Constant","Ruby/classes/RDoc/Constant.html#method-i-3D-3D","(other)","<p>Constants are equal when their #parent and #name is the same\n",null,0],["==","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-3D-3D","(other)","<p>Sections are equal when they have the same #title\n",null,0],["==","RDoc::Markup::Special","Ruby/classes/RDoc/Markup/Special.html#method-i-3D-3D","(o)","<p>Specials are equal when the have the same text and type\n",null,0],["==","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-3D-3D","(other)","<p>An RDoc::TopLevel is equal to another with the same relative_name\n",null,0],["==","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-3D-3D","( other )","<p>Returns true if other is an Attribute and has the same name and value,\nfalse otherwise.\n",null,0],["==","REXML::Comment","Ruby/classes/REXML/Comment.html#method-i-3D-3D","( other )","<p>Compares this Comment to another; the contents of the comment are used in\nthe comparison.\n",null,0],["==","REXML::Instruction","Ruby/classes/REXML/Instruction.html#method-i-3D-3D","( other )","<p>@return true if other is an Instruction, and the content and target of the\nother matches the target and …\n",null,0],["==","REXML::Validation::Event","Ruby/classes/REXML/Validation/Event.html#method-i-3D-3D","( other )","",null,0],["==","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-i-3D-3D","( other )","",null,0],["==","RSS::XML::Element","Ruby/classes/RSS/XML/Element.html#method-i-3D-3D","(other)","",null,0],["==","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-3D-3D","(array)","<p>Define equality.\n",null,0],["==","Random","Ruby/classes/Random.html#method-i-3D-3D","(p1)","<p>Returns true if the two generators have the same internal state, otherwise\nfalse.  Equivalent generators …\n",null,0],["==","Range","Ruby/classes/Range.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <code>obj</code> is a Range, has\nequivalent begin and end items (by comparing them with <code>==</code>), …\n",null,0],["==","Rational","Ruby/classes/Rational.html#method-i-3D-3D","(p1)","<p>Returns true if rat equals object numerically.\n\n<pre><code>Rational(2, 3)  == Rational(2, 3)   #=&gt; true\nRational(5) ...\n</code></pre>\n",null,0],["==","Regexp","Ruby/classes/Regexp.html#method-i-3D-3D","(p1)","<p>Equality—Two regexps are equal if their patterns are identical, they have\nthe same character set code, …\n",null,0],["==","Set","Ruby/classes/Set.html#method-i-3D-3D","(other)","<p>Returns true if two sets are equal.  The equality of each couple of\nelements is defined according to …\n",null,0],["==","String","Ruby/classes/String.html#method-i-3D-3D","(p1)","<p>Equality—If <em>obj</em> is not a <code>String</code>, returns\n<code>false</code>. Otherwise, returns <code>true</code> if <em>str</em>\n<code>&lt;=&gt;</code> <em>obj</em> returns …\n",null,0],["==","Struct","Ruby/classes/Struct.html#method-i-3D-3D","(p1)","<p>Equality—Returns <code>true</code> if <em>other_struct</em> is equal to\nthis one: they must be of the same class as generated …\n",null,0],["==","Symbol","Ruby/classes/Symbol.html#method-i-3D-3D","(p1)","<p>Equality—If <em>sym</em> and <em>obj</em> are exactly the same symbol,\nreturns <code>true</code>.\n",null,0],["==","URI::Generic","Ruby/classes/URI/Generic.html#method-i-3D-3D","(oth)","<p>Compares to URI&#39;s\n",null,0],["==","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-3D-3D","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition …\n",null,0],["==","Vector","Ruby/classes/Vector.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> iff the two vectors have the same elements in the\nsame order.\n",null,0],["==","Win32::SSPI::SSPIResult","Ruby/classes/Win32/SSPI/SSPIResult.html#method-i-3D-3D","(other)","",null,0],["==","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-3D-3D","(o)","<p>Returns whether or not all date/time components are an array.\n",null,0],["==","ActionDispatch::MiddlewareStack::Middleware","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-3D-3D","(middleware)","",null,1],["==","ActionView::FileSystemResolver","Rails/classes/ActionView/FileSystemResolver.html#method-i-3D-3D","(resolver)","",null,1],["==","ActionView::Template::Types::Type","Rails/classes/ActionView/Template/Types/Type.html#method-i-3D-3D","(type)","",null,1],["==","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-i-3D-3D","","<p>Equivalent to <code>String#==</code>. Returns <code>true</code> if the\nclass name and <code>other</code> are equal, otherwise <code>false</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">BlogPost</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["==","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-3D-3D","(comparison_object)","<p>Returns true if <code>comparison_object</code> is the same exact object, or\n<code>comparison_object</code> is of the same type …\n",null,1],["==","ActiveRecord::Reflection::MacroReflection","Rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-3D-3D","(other_aggregation)","<p>Returns <code>true</code> if <code>self</code> and\n<code>other_aggregation</code> have the same <code>name</code> attribute,\n<code>active_record</code> attribute, and …\n",null,1],["==","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-3D-3D","(other)","<p>Compares two relations for equality.\n",null,1],["==","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if <code>other</code> is also a Duration instance\nwith the same <code>value</code>, or if <code>other == value</code>.\n",null,1],["==","Mime::Type","Rails/classes/Mime/Type.html#method-i-3D-3D","(mime_type)","",null,1],["===","BigDecimal","Ruby/classes/BigDecimal.html#method-i-3D-3D-3D","(p1)","<p>Tests for value equality; returns true if the values are equal.\n<p>The == and === operators and the eql? …\n",null,0],["===","Bignum","Ruby/classes/Bignum.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>big</em>. Contrast this with <code>Bignum#eql?</code>, which requires\n<em>obj</em> …\n",null,0],["===","Date","Ruby/classes/Date.html#method-i-3D-3D-3D","(p1)","<p>Returns true if they are the same day.\n\n<pre><code>Date.new(2001,2,3) === Date.new(2001,2,3)\n                     ...</code></pre>\n",null,0],["===","Fixnum","Ruby/classes/Fixnum.html#method-i-3D-3D-3D","(p1)","<p>Return <code>true</code> if <code>fix</code> equals <code>other</code>\nnumerically.\n\n<pre><code>1 == 2      #=&gt; false\n1 == 1.0    #=&gt; true\n</code></pre>\n",null,0],["===","Float","Ruby/classes/Float.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>flt</em>. Contrast this with <code>Float#eql?</code>, which requires\n<em>obj</em> …\n",null,0],["===","Gem::Platform","Ruby/classes/Gem/Platform.html#method-i-3D-3D-3D","(other)","<p>Does <code>other</code> match this platform?  Two platforms match if they\nhave the same CPU, or either has a CPU of …\n",null,0],["===","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-3D-3D-3D","(version)","",null,0],["===","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-3D-3D-3D","(version)","",null,0],["===","IPAddr","Ruby/classes/IPAddr.html#method-i-3D-3D-3D","(other)","",null,0],["===","Module","Ruby/classes/Module.html#method-i-3D-3D-3D","(p1)","<p>Case Equality—Returns <code>true</code> if <em>anObject</em> is an instance\nof <em>mod</em> or one of <em>mod</em>&#39;s descendants. Of limited …\n",null,0],["===","Object","Ruby/classes/Object.html#method-i-3D-3D-3D","(p1)","<p>Case Equality – For class Object, effectively the same as calling\n<code>#==</code>, but typically overridden by descendants …\n",null,0],["===","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-3D-3D-3D","(p1)","",null,0],["===","Pathname","Ruby/classes/Pathname.html#method-i-3D-3D-3D","(p1)","<p>Compare this pathname with <code>other</code>.  The comparison is\nstring-based. Be aware that two different paths …\n",null,0],["===","Proc","Ruby/classes/Proc.html#method-i-3D-3D-3D","(*args)","<p>Invokes the block with <code>obj</code> as the proc&#39;s parameter like\nProc#call.  It is to allow a proc object …\n",null,0],["===","Range","Ruby/classes/Range.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> if <code>obj</code> is an element of the range,\n<code>false</code> otherwise.  Conveniently, <code>===</code> is the\ncomparison …\n",null,0],["===","Regexp","Ruby/classes/Regexp.html#method-i-3D-3D-3D","(p1)","<p>Case Equality—Used in case statements.\n\n<pre><code>a = &quot;HELLO&quot;\ncase a\nwhen /^[a-z]*$/; print &quot;Lower case\\n&quot;\nwhen ...</code></pre>\n",null,0],["===","Rinda::DRbObjectTemplate","Ruby/classes/Rinda/DRbObjectTemplate.html#method-i-3D-3D-3D","(ro)","<p>This DRbObjectTemplate matches <code>ro</code> if the remote object&#39;s\ndrburi and drbref are the same.  <code>nil</code> is …\n",null,0],["===","Rinda::Template","Ruby/classes/Rinda/Template.html#method-i-3D-3D-3D","(tuple)","<p>Alias for #match.\n",null,0],["===","Rinda::TemplateEntry","Ruby/classes/Rinda/TemplateEntry.html#method-i-3D-3D-3D","(tuple)","",null,0],["===","String","Ruby/classes/String.html#method-i-3D-3D-3D","(p1)","<p>Equality—If <em>obj</em> is not a <code>String</code>, returns\n<code>false</code>. Otherwise, returns <code>true</code> if <em>str</em>\n<code>&lt;=&gt;</code> <em>obj</em> returns …\n",null,0],["===","Symbol","Ruby/classes/Symbol.html#method-i-3D-3D-3D","(p1)","<p>Equality—If <em>sym</em> and <em>obj</em> are exactly the same symbol,\nreturns <code>true</code>.\n",null,0],["===","SystemCallError","Ruby/classes/SystemCallError.html#method-c-3D-3D-3D","(p1)","<p>Return <code>true</code> if the receiver is a generic\n<code>SystemCallError</code>, or if the error numbers <code>self</code> and\n<em>other</em> are …\n",null,0],["===","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-i-3D-3D-3D","","<p>Equivalent to <code>#==</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">BlogPost</span>\n  <span class=\"ruby-identifier\">extend</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Naming</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-constant\">BlogPost</span>.<span class=\"ruby-identifier\">model_name</span> <span class=\"ruby-operator\">===</span> <span class=\"ruby-string\">&#39;BlogPost&#39;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["===","ActiveRecord::Core::ClassMethods","Rails/classes/ActiveRecord/Core/ClassMethods.html#method-i-3D-3D-3D","(object)","<p>Overwrite the default class equality method to provide support for\nassociation proxies.\n",null,1],["===","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-i-3D-3D-3D","(other)","",null,1],["===","Mime::Type","Rails/classes/Mime/Type.html#method-i-3D-3D-3D","(list)","",null,1],["===","Time","Rails/classes/Time.html#method-c-3D-3D-3D","(other)","<p>Overriding case equality method so that it returns true for\nActiveSupport::TimeWithZone instances\n",null,1],["=~","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-3D-7E","(other)","<p>Uses this dependency as a pattern to compare to <code>other</code>. This\ndependency will match if the name matches …\n",null,0],["=~","Gem::Platform","Ruby/classes/Gem/Platform.html#method-i-3D-7E","(other)","<p>Does <code>other</code> match this platform?  If <code>other</code> is a\nString it will be converted to a Gem::Platform first. …\n",null,0],["=~","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-3D-7E","(version)","",null,0],["=~","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-3D-7E","(version)","",null,0],["=~","Object","Ruby/classes/Object.html#method-i-3D-7E","(p1)","<p>Pattern Match—Overridden by descendants (notably <code>Regexp</code> and\n<code>String</code>) to provide meaningful pattern-match …\n",null,0],["=~","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-3D-7E","( path )","",null,0],["=~","Regexp","Ruby/classes/Regexp.html#method-i-3D-7E","(p1)","<p>Match—Matches <em>rxp</em> against <em>str</em>.\n\n<pre><code>/at/ =~ &quot;input data&quot;   #=&gt; 7\n/ax/ =~ &quot;input data&quot;   #=&gt; nil\n</code></pre>\n<p>If <code>=~</code> is used …\n",null,0],["=~","String","Ruby/classes/String.html#method-i-3D-7E","(p1)","<p>Match—If <em>obj</em> is a <code>Regexp</code>, use it as a pattern to\nmatch against <em>str</em>,and returns the position the match …\n",null,0],["=~","Symbol","Ruby/classes/Symbol.html#method-i-3D-7E","(p1)","<p>Returns <code>sym.to_s =~ obj</code>.\n",null,0],["=~","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-i-3D-7E","","<p>Equivalent to <code>String#=~</code>. Match the class name against the\ngiven regexp. Returns the position where the …\n",null,1],["=~","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-3D-7E","(re)","<p>Compare #name and TZInfo identifier to a supplied regexp, returning\n<code>true</code> if a match is found.\n",null,1],["=~","Mime::Type","Rails/classes/Mime/Type.html#method-i-3D-7E","(mime_type)","",null,1],[">","BigDecimal","Ruby/classes/BigDecimal.html#method-i-3E","(p1)","<p>Returns true if a is greater than b.\n<p>Values may be coerced to perform the comparison (see ==, BigDecimal#coerce\n…\n",null,0],[">","Bignum","Ruby/classes/Bignum.html#method-i-3E","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is greater than\nthat of <code>real</code>.\n",null,0],[">","Comparable","Ruby/classes/Comparable.html#method-i-3E","(p1)","<p>Compares two objects based on the receiver&#39;s <code>&lt;=&gt;</code>\nmethod, returning true if it returns 1.\n",null,0],[">","Fixnum","Ruby/classes/Fixnum.html#method-i-3E","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is greater than\nthat of <code>real</code>.\n",null,0],[">","Float","Ruby/classes/Float.html#method-i-3E","(p1)","<p><code>true</code> if <code>flt</code> is greater than <code>real</code>.\nThe result of <code>NaN &gt; NaN</code> is undefined, so the\nimplementation-dependent …\n",null,0],[">","Module","Ruby/classes/Module.html#method-i-3E","(p1)","<p>Returns true if <em>mod</em> is an ancestor of <em>other</em>. Returns\n<code>nil</code> if there&#39;s no relationship between the two. …\n",null,0],[">","Set","Ruby/classes/Set.html#method-i-3E","(set)","",null,0],[">","Shell::Filter","Ruby/classes/Shell/Filter.html#method-i-3E","(to)","<p>Outputs from <code>source</code>, which is either a string of a file name\nor an IO object.\n",null,0],[">=","BigDecimal","Ruby/classes/BigDecimal.html#method-i-3E-3D","(p1)","<p>Returns true if a is greater than or equal to b.\n<p>Values may be coerced to perform the comparison (see …\n",null,0],[">=","Bignum","Ruby/classes/Bignum.html#method-i-3E-3D","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is greater than\nor equal to that of <code>real</code>.\n",null,0],[">=","Comparable","Ruby/classes/Comparable.html#method-i-3E-3D","(p1)","<p>Compares two objects based on the receiver&#39;s <code>&lt;=&gt;</code>\nmethod, returning true if it returns 0 or …\n",null,0],[">=","Fixnum","Ruby/classes/Fixnum.html#method-i-3E-3D","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is greater than\nor equal to that of <code>real</code>.\n",null,0],[">=","Float","Ruby/classes/Float.html#method-i-3E-3D","(p1)","<p><code>true</code> if <code>flt</code> is greater than or equal to\n<code>real</code>. The result of <code>NaN &gt;= NaN</code> is undefined,\nso the implementation-dependent …\n",null,0],[">=","Module","Ruby/classes/Module.html#method-i-3E-3D","(p1)","<p>Returns true if <em>mod</em> is an ancestor of <em>other</em>, or the two\nmodules are the same. Returns <code>nil</code> if there&#39;s …\n",null,0],[">=","Set","Ruby/classes/Set.html#method-i-3E-3D","(set)","",null,0],[">>","Bignum","Ruby/classes/Bignum.html#method-i-3E-3E","(p1)","<p>Shifts big right <em>numeric</em> positions (left if <em>numeric</em> is\nnegative).\n",null,0],[">>","Date","Ruby/classes/Date.html#method-i-3E-3E","(p1)","<p>Returns a date object pointing n months after self.  The n should be a\nnumeric value.\n\n<pre><code>Date.new(2001,2,3) ...</code></pre>\n",null,0],[">>","Fixnum","Ruby/classes/Fixnum.html#method-i-3E-3E","(p1)","<p>Shifts <em>fix</em> right <em>count</em> positions (left if <em>count</em>\nis negative).\n",null,0],[">>","IPAddr","Ruby/classes/IPAddr.html#method-i-3E-3E","(num)","<p>Returns a new ipaddr built by bitwise right-shift.\n",null,0],[">>","Process::Status","Ruby/classes/Process/Status.html#method-i-3E-3E","(p1)","<p>Shift the bits in <em>stat</em> right <em>num</em> places.\n\n<pre><code>fork { exit 99 }   #=&gt; 26563\nProcess.wait       #=&gt; 26563\n$?.to_i ...\n</code></pre>\n",null,0],[">>","Rake::PseudoStatus","Ruby/classes/Rake/PseudoStatus.html#method-i-3E-3E","(n)","",null,0],[">>","Shell::Filter","Ruby/classes/Shell/Filter.html#method-i-3E-3E","(to)","<p>Appends the output to <code>source</code>, which is either a string of a\nfile name or an IO object.\n",null,0],["ACL","","Ruby/classes/ACL.html","","<p>Simple Access Control Lists.\n<p>Access control lists are composed of “allow” and “deny” …\n",null,0],["ACL::ACLEntry","","Ruby/classes/ACL/ACLEntry.html","","<p>An entry in an ACL\n",null,0],["ACL::ACLList","","Ruby/classes/ACL/ACLList.html","","<p>A list of ACLEntry objects.  Used to implement the allow and deny halves of\nan ACL\n",null,0],["APOP","Net::POP3","Ruby/classes/Net/POP3.html#method-c-APOP","(isapop)","<p>Returns the APOP class if <code>isapop</code> is true; otherwise, returns\nthe POP class.  For example:\n\n<pre><code># Example 1 ...</code></pre>\n",null,0],["ARGF","","Ruby/classes/ARGF.html","","<p><code>ARGF</code> is a stream designed for use in scripts that process\nfiles given as command-line arguments or passed …\n",null,0],["Abbrev","","Ruby/classes/Abbrev.html","","<p>Calculates the set of unique abbreviations for a given set of strings.\n\n<pre><code>require &#39;abbrev&#39;\nrequire &#39;pp&#39;\n ...\n</code></pre>\n",null,0],["AbstractController","","Rails/classes/AbstractController.html","","",null,1],["AbstractController::Base","","Rails/classes/AbstractController/Base.html","","<p><code>AbstractController::Base</code> is a low-level API. Nobody should be\nusing it directly, and subclasses (like …\n",null,1],["AbstractController::Callbacks","","Rails/classes/AbstractController/Callbacks.html","","",null,1],["AbstractController::Callbacks::ClassMethods","","Rails/classes/AbstractController/Callbacks/ClassMethods.html","","",null,1],["AbstractController::Collector","","Rails/classes/AbstractController/Collector.html","","",null,1],["AbstractController::DoubleRenderError","","Rails/classes/AbstractController/DoubleRenderError.html","","",null,1],["AbstractController::Helpers","","Rails/classes/AbstractController/Helpers.html","","",null,1],["AbstractController::Helpers::ClassMethods","","Rails/classes/AbstractController/Helpers/ClassMethods.html","","",null,1],["AbstractController::Helpers::ClassMethods::MissingHelperError","","Rails/classes/AbstractController/Helpers/ClassMethods/MissingHelperError.html","","",null,1],["AbstractController::Layouts","","Rails/classes/AbstractController/Layouts.html","","<p>Layouts reverse the common pattern of including shared headers and footers\nin many templates to isolate …\n",null,1],["AbstractController::Layouts::ClassMethods","","Rails/classes/AbstractController/Layouts/ClassMethods.html","","",null,1],["AbstractController::Railties","","Rails/classes/AbstractController/Railties.html","","",null,1],["AbstractController::Railties::RoutesHelpers","","Rails/classes/AbstractController/Railties/RoutesHelpers.html","","",null,1],["AbstractController::Rendering","","Rails/classes/AbstractController/Rendering.html","","",null,1],["AbstractController::Rendering::ClassMethods","","Rails/classes/AbstractController/Rendering/ClassMethods.html","","",null,1],["AbstractController::Translation","","Rails/classes/AbstractController/Translation.html","","",null,1],["AbstractController::UrlFor","","Rails/classes/AbstractController/UrlFor.html","","<p>Includes <code>url_for</code> into the host class (e.g. an abstract\ncontroller or mailer). The class has to provide …\n",null,1],["AbstractController::UrlFor::ClassMethods","","Rails/classes/AbstractController/UrlFor/ClassMethods.html","","",null,1],["AbstractController::ViewPaths","","Rails/classes/AbstractController/ViewPaths.html","","",null,1],["AbstractController::ViewPaths::ClassMethods","","Rails/classes/AbstractController/ViewPaths/ClassMethods.html","","",null,1],["ActionController","","Rails/classes/ActionController.html","","",null,1],["ActionController::ActionController","","Rails/classes/ActionController/ActionController.html","","",null,1],["ActionController::ActionController::ActionController","","Rails/classes/ActionController/ActionController/ActionController.html","","",null,1],["ActionController::Base","","Rails/classes/ActionController/Base.html","","<p>Action Controllers are the core of a web request in Rails. They are made up\nof one or more actions that …\n",null,1],["ActionController::Caching","","Rails/classes/ActionController/Caching.html","","<p>Caching is a cheap way of speeding up slow applications by keeping the\nresult of calculations, renderings, …\n",null,1],["ActionController::Caching::ClassMethods","","Rails/classes/ActionController/Caching/ClassMethods.html","","",null,1],["ActionController::Caching::ConfigMethods","","Rails/classes/ActionController/Caching/ConfigMethods.html","","",null,1],["ActionController::Caching::Fragments","","Rails/classes/ActionController/Caching/Fragments.html","","<p>Fragment caching is used for caching various blocks within views without\ncaching the entire action as …\n",null,1],["ActionController::ConditionalGet","","Rails/classes/ActionController/ConditionalGet.html","","",null,1],["ActionController::ConditionalGet::ClassMethods","","Rails/classes/ActionController/ConditionalGet/ClassMethods.html","","",null,1],["ActionController::Cookies","","Rails/classes/ActionController/Cookies.html","","",null,1],["ActionController::DataStreaming","","Rails/classes/ActionController/DataStreaming.html","","<p>Methods for sending arbitrary data and for streaming files to the browser,\ninstead of rendering.\n",null,1],["ActionController::Flash","","Rails/classes/ActionController/Flash.html","","",null,1],["ActionController::Flash::ClassMethods","","Rails/classes/ActionController/Flash/ClassMethods.html","","",null,1],["ActionController::ForceSSL","","Rails/classes/ActionController/ForceSSL.html","","<p>This module provides a method which will redirect browser to use HTTPS\nprotocol. This will ensure that …\n",null,1],["ActionController::ForceSSL::ClassMethods","","Rails/classes/ActionController/ForceSSL/ClassMethods.html","","",null,1],["ActionController::Head","","Rails/classes/ActionController/Head.html","","",null,1],["ActionController::Helpers","","Rails/classes/ActionController/Helpers.html","","<p>The Rails framework provides a large number of helpers for working with\nassets, dates, forms, numbers …\n",null,1],["ActionController::Helpers::ClassMethods","","Rails/classes/ActionController/Helpers/ClassMethods.html","","",null,1],["ActionController::HideActions","","Rails/classes/ActionController/HideActions.html","","<p>Adds the ability to prevent public methods on a controller to be called as\nactions.\n",null,1],["ActionController::HideActions::ClassMethods","","Rails/classes/ActionController/HideActions/ClassMethods.html","","",null,1],["ActionController::HttpAuthentication","","Rails/classes/ActionController/HttpAuthentication.html","","<p>Makes it dead easy to do HTTP Basic, Digest and Token authentication.\n",null,1],["ActionController::HttpAuthentication::Basic","","Rails/classes/ActionController/HttpAuthentication/Basic.html","","<p>Makes it dead easy to do HTTP Basic authentication.\n<p>Simple Basic example\n\n<pre class=\"ruby\"> <span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">PostsController</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ApplicationController</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActionController::HttpAuthentication::Basic::ControllerMethods","","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html","","",null,1],["ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods","","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html","","",null,1],["ActionController::HttpAuthentication::Digest","","Rails/classes/ActionController/HttpAuthentication/Digest.html","","<p>Makes it dead easy to do HTTP Digest authentication.\n<p>Simple Digest example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&#39;digest/md5&#39;</span>\n<span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">PostsController</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActionController::HttpAuthentication::Digest::ControllerMethods","","Rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html","","",null,1],["ActionController::HttpAuthentication::Token","","Rails/classes/ActionController/HttpAuthentication/Token.html","","<p>Makes it dead easy to do HTTP Token authentication.\n<p>Simple Token example:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">PostsController</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ApplicationController</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActionController::HttpAuthentication::Token::ControllerMethods","","Rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html","","",null,1],["ActionController::ImplicitRender","","Rails/classes/ActionController/ImplicitRender.html","","",null,1],["ActionController::Instrumentation","","Rails/classes/ActionController/Instrumentation.html","","<p>Adds instrumentation to several ends in ActionController::Base. It also\nprovides some hooks related with …\n",null,1],["ActionController::Instrumentation::ClassMethods","","Rails/classes/ActionController/Instrumentation/ClassMethods.html","","",null,1],["ActionController::Live","","Rails/classes/ActionController/Live.html","","<p>Mix this module in to your controller, and all actions in that controller\nwill be able to stream data …\n",null,1],["ActionController::Live::Response","","Rails/classes/ActionController/Live/Response.html","","",null,1],["ActionController::Live::Response::Header","","Rails/classes/ActionController/Live/Response/Header.html","","",null,1],["ActionController::LogSubscriber","","Rails/classes/ActionController/LogSubscriber.html","","",null,1],["ActionController::Metal","","Rails/classes/ActionController/Metal.html","","<p><code>ActionController::Metal</code> is the simplest possible controller,\nproviding a valid Rack interface without …\n",null,1],["ActionController::Middleware","","Rails/classes/ActionController/Middleware.html","","",null,1],["ActionController::Middleware::ActionMiddleware","","Rails/classes/ActionController/Middleware/ActionMiddleware.html","","",null,1],["ActionController::MimeResponds","","Rails/classes/ActionController/MimeResponds.html","","",null,1],["ActionController::MimeResponds::ClassMethods","","Rails/classes/ActionController/MimeResponds/ClassMethods.html","","",null,1],["ActionController::MimeResponds::Collector","","Rails/classes/ActionController/MimeResponds/Collector.html","","<p>A container for responses available from the current controller for\nrequests for different mime-types …\n",null,1],["ActionController::ModelNaming","","Rails/classes/ActionController/ModelNaming.html","","",null,1],["ActionController::ParameterMissing","","Rails/classes/ActionController/ParameterMissing.html","","<p>Raised when a required parameter is missing.\n\n<pre>params = ActionController::Parameters.new(a: {})\nparams.fetch(:b) ...</pre>\n",null,1],["ActionController::Parameters","","Rails/classes/ActionController/Parameters.html","","<p>Action Controller Parameters\n<p>Allows to choose which attributes should be whitelisted for mass updating …\n",null,1],["ActionController::ParamsWrapper","","Rails/classes/ActionController/ParamsWrapper.html","","<p>Wraps the parameters hash into a nested hash. This will allow clients to\nsubmit POST requests without …\n",null,1],["ActionController::ParamsWrapper::ClassMethods","","Rails/classes/ActionController/ParamsWrapper/ClassMethods.html","","",null,1],["ActionController::RackDelegation","","Rails/classes/ActionController/RackDelegation.html","","",null,1],["ActionController::Railties","","Rails/classes/ActionController/Railties.html","","",null,1],["ActionController::Railties::Helpers","","Rails/classes/ActionController/Railties/Helpers.html","","",null,1],["ActionController::RecordIdentifier","","Rails/classes/ActionController/RecordIdentifier.html","","",null,1],["ActionController::Redirecting","","Rails/classes/ActionController/Redirecting.html","","",null,1],["ActionController::Renderers","","Rails/classes/ActionController/Renderers.html","","",null,1],["ActionController::Renderers::All","","Rails/classes/ActionController/Renderers/All.html","","",null,1],["ActionController::Renderers::ClassMethods","","Rails/classes/ActionController/Renderers/ClassMethods.html","","",null,1],["ActionController::Rendering","","Rails/classes/ActionController/Rendering.html","","",null,1],["ActionController::RequestForgeryProtection","","Rails/classes/ActionController/RequestForgeryProtection.html","","<p>Controller actions are protected from Cross-Site Request Forgery (CSRF)\nattacks by including a token …\n",null,1],["ActionController::RequestForgeryProtection::ClassMethods","","Rails/classes/ActionController/RequestForgeryProtection/ClassMethods.html","","",null,1],["ActionController::RequestForgeryProtection::ProtectionMethods","","Rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods.html","","",null,1],["ActionController::RequestForgeryProtection::ProtectionMethods::Exception","","Rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/Exception.html","","",null,1],["ActionController::RequestForgeryProtection::ProtectionMethods::NullSession","","Rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/NullSession.html","","",null,1],["ActionController::RequestForgeryProtection::ProtectionMethods::ResetSession","","Rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/ResetSession.html","","",null,1],["ActionController::Rescue","","Rails/classes/ActionController/Rescue.html","","<p>This module is responsible to provide `rescue_from` helpers to controllers\nand configure when detailed …\n",null,1],["ActionController::Responder","","Rails/classes/ActionController/Responder.html","","<p>Responsible for exposing a resource to different mime requests, usually\ndepending on the HTTP verb.  …\n",null,1],["ActionController::Streaming","","Rails/classes/ActionController/Streaming.html","","<p>Allows views to be streamed back to the client as they are rendered.\n<p>The default way Rails renders views …\n",null,1],["ActionController::StrongParameters","","Rails/classes/ActionController/StrongParameters.html","","<p>Strong Parameters\n<p>It provides an interface for protecting attributes from end-user\nassignment. This makes …\n",null,1],["ActionController::UnpermittedParameters","","Rails/classes/ActionController/UnpermittedParameters.html","","<p>Raised when a supplied parameter is not expected.\n\n<pre>params = ActionController::Parameters.new(a: &quot;123&quot;, ...</pre>\n",null,1],["ActionController::UrlFor","","Rails/classes/ActionController/UrlFor.html","","<p>Includes <code>url_for</code> into the host class. The class has to provide\na <code>RouteSet</code> by implementing the <code>_routes</code> …\n",null,1],["ActionDispatch","","Rails/classes/ActionDispatch.html","","",null,1],["ActionDispatch::Callbacks","","Rails/classes/ActionDispatch/Callbacks.html","","<p>Provide callbacks to be executed before and after the request dispatch.\n",null,1],["ActionDispatch::Cookies","","Rails/classes/ActionDispatch/Cookies.html","","<p>Cookies are read and written through ActionController#cookies.\n<p>The cookies being read are the ones received …\n",null,1],["ActionDispatch::Cookies::ChainedCookieJars","","Rails/classes/ActionDispatch/Cookies/ChainedCookieJars.html","","<p>Include in a cookie jar to allow chaining, e.g. cookies.permanent.signed\n",null,1],["ActionDispatch::Cookies::VerifyAndUpgradeLegacySignedMessage","","Rails/classes/ActionDispatch/Cookies/VerifyAndUpgradeLegacySignedMessage.html","","",null,1],["ActionDispatch::DebugExceptions","","Rails/classes/ActionDispatch/DebugExceptions.html","","<p>This middleware is responsible for logging exceptions and showing a\ndebugging page in case the request …\n",null,1],["ActionDispatch::ExceptionWrapper","","Rails/classes/ActionDispatch/ExceptionWrapper.html","","",null,1],["ActionDispatch::FileHandler","","Rails/classes/ActionDispatch/FileHandler.html","","",null,1],["ActionDispatch::Flash","","Rails/classes/ActionDispatch/Flash.html","","<p>The flash provides a way to pass temporary objects between actions.\nAnything you place in the flash will …\n",null,1],["ActionDispatch::Flash::FlashHash","","Rails/classes/ActionDispatch/Flash/FlashHash.html","","",null,1],["ActionDispatch::Http","","Rails/classes/ActionDispatch/Http.html","","",null,1],["ActionDispatch::Http::Cache","","Rails/classes/ActionDispatch/Http/Cache.html","","",null,1],["ActionDispatch::Http::Cache::Request","","Rails/classes/ActionDispatch/Http/Cache/Request.html","","",null,1],["ActionDispatch::Http::Cache::Response","","Rails/classes/ActionDispatch/Http/Cache/Response.html","","",null,1],["ActionDispatch::Http::FilterParameters","","Rails/classes/ActionDispatch/Http/FilterParameters.html","","<p>Allows you to specify sensitive parameters which will be replaced from the\nrequest log by looking in …\n",null,1],["ActionDispatch::Http::FilterRedirect","","Rails/classes/ActionDispatch/Http/FilterRedirect.html","","",null,1],["ActionDispatch::Http::Headers","","Rails/classes/ActionDispatch/Http/Headers.html","","",null,1],["ActionDispatch::Http::MimeNegotiation","","Rails/classes/ActionDispatch/Http/MimeNegotiation.html","","",null,1],["ActionDispatch::Http::ParameterFilter","","Rails/classes/ActionDispatch/Http/ParameterFilter.html","","",null,1],["ActionDispatch::Http::Parameters","","Rails/classes/ActionDispatch/Http/Parameters.html","","",null,1],["ActionDispatch::Http::URL","","Rails/classes/ActionDispatch/Http/URL.html","","",null,1],["ActionDispatch::Http::UploadedFile","","Rails/classes/ActionDispatch/Http/UploadedFile.html","","<p>Models uploaded files.\n<p>The actual file is accessible via the <code>tempfile</code> accessor,\nthough some of its interface …\n",null,1],["ActionDispatch::IllegalStateError","","Rails/classes/ActionDispatch/IllegalStateError.html","","",null,1],["ActionDispatch::MiddlewareStack","","Rails/classes/ActionDispatch/MiddlewareStack.html","","",null,1],["ActionDispatch::MiddlewareStack::Middleware","","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html","","",null,1],["ActionDispatch::ParamsParser","","Rails/classes/ActionDispatch/ParamsParser.html","","",null,1],["ActionDispatch::ParamsParser::ParseError","","Rails/classes/ActionDispatch/ParamsParser/ParseError.html","","",null,1],["ActionDispatch::PublicExceptions","","Rails/classes/ActionDispatch/PublicExceptions.html","","",null,1],["ActionDispatch::RailsEntityStore","","Rails/classes/ActionDispatch/RailsEntityStore.html","","",null,1],["ActionDispatch::RailsMetaStore","","Rails/classes/ActionDispatch/RailsMetaStore.html","","",null,1],["ActionDispatch::Reloader","","Rails/classes/ActionDispatch/Reloader.html","","<p>ActionDispatch::Reloader provides prepare and cleanup callbacks, intended\nto assist with code reloading …\n",null,1],["ActionDispatch::RemoteIp","","Rails/classes/ActionDispatch/RemoteIp.html","","<p>This middleware calculates the IP address of the remote client that is\nmaking the request. It does this …\n",null,1],["ActionDispatch::RemoteIp::GetIp","","Rails/classes/ActionDispatch/RemoteIp/GetIp.html","","<p>The GetIp class exists as a way to defer processing of the request data\ninto an actual IP address. If …\n",null,1],["ActionDispatch::RemoteIp::IpSpoofAttackError","","Rails/classes/ActionDispatch/RemoteIp/IpSpoofAttackError.html","","",null,1],["ActionDispatch::Request","","Rails/classes/ActionDispatch/Request.html","","",null,1],["ActionDispatch::RequestId","","Rails/classes/ActionDispatch/RequestId.html","","<p>Makes a unique request id available to the action_dispatch.request_id env\nvariable (which is then accessible …\n",null,1],["ActionDispatch::Response","","Rails/classes/ActionDispatch/Response.html","","<p>Represents an HTTP response generated by a controller action. Use it to\nretrieve the current state of …\n",null,1],["ActionDispatch::Routing","","Rails/classes/ActionDispatch/Routing.html","","<p>The routing module provides URL rewriting in native Ruby. It&#39;s a way to\nredirect incoming requests …\n",null,1],["ActionDispatch::Routing::ConsoleFormatter","","Rails/classes/ActionDispatch/Routing/ConsoleFormatter.html","","",null,1],["ActionDispatch::Routing::HtmlTableFormatter","","Rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html","","",null,1],["ActionDispatch::Routing::Mapper","","Rails/classes/ActionDispatch/Routing/Mapper.html","","",null,1],["ActionDispatch::Routing::Mapper::Base","","Rails/classes/ActionDispatch/Routing/Mapper/Base.html","","",null,1],["ActionDispatch::Routing::Mapper::Concerns","","Rails/classes/ActionDispatch/Routing/Mapper/Concerns.html","","<p>Routing Concerns allow you to declare common routes that can be reused\ninside others resources and routes. …\n",null,1],["ActionDispatch::Routing::Mapper::HttpHelpers","","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html","","",null,1],["ActionDispatch::Routing::Mapper::Resources","","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html","","<p>Resource routing allows you to quickly declare all of the common routes for\na given resourceful controller. …\n",null,1],["ActionDispatch::Routing::Mapper::Scoping","","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html","","<p>You may wish to organize groups of controllers under a namespace. Most\ncommonly, you might group a number …\n",null,1],["ActionDispatch::Routing::PathRedirect","","Rails/classes/ActionDispatch/Routing/PathRedirect.html","","",null,1],["ActionDispatch::Routing::PolymorphicRoutes","","Rails/classes/ActionDispatch/Routing/PolymorphicRoutes.html","","<p>Polymorphic URL helpers are methods for smart resolution to a named route\ncall when given an Active  …\n",null,1],["ActionDispatch::Routing::Redirection","","Rails/classes/ActionDispatch/Routing/Redirection.html","","",null,1],["ActionDispatch::Routing::RouteWrapper","","Rails/classes/ActionDispatch/Routing/RouteWrapper.html","","",null,1],["ActionDispatch::Routing::UrlFor","","Rails/classes/ActionDispatch/Routing/UrlFor.html","","<p>In <code>config/routes.rb</code> you define URL-to-controller mappings, but\nthe reverse is also possible: an URL can …\n",null,1],["ActionDispatch::SSL","","Rails/classes/ActionDispatch/SSL.html","","",null,1],["ActionDispatch::Session","","Rails/classes/ActionDispatch/Session.html","","",null,1],["ActionDispatch::Session::AbstractStore","","Rails/classes/ActionDispatch/Session/AbstractStore.html","","",null,1],["ActionDispatch::Session::CacheStore","","Rails/classes/ActionDispatch/Session/CacheStore.html","","<p>Session store that uses an ActiveSupport::Cache::Store to store the\nsessions. This store is most useful …\n",null,1],["ActionDispatch::Session::Compatibility","","Rails/classes/ActionDispatch/Session/Compatibility.html","","",null,1],["ActionDispatch::Session::CookieStore","","Rails/classes/ActionDispatch/Session/CookieStore.html","","<p>This cookie-based session store is the Rails default. It is dramatically\nfaster than the alternatives. …\n",null,1],["ActionDispatch::Session::MemCacheStore","","Rails/classes/ActionDispatch/Session/MemCacheStore.html","","",null,1],["ActionDispatch::Session::StaleSessionCheck","","Rails/classes/ActionDispatch/Session/StaleSessionCheck.html","","",null,1],["ActionDispatch::ShowExceptions","","Rails/classes/ActionDispatch/ShowExceptions.html","","<p>This middleware rescues any exception returned by the application and calls\nan exceptions app that will …\n",null,1],["ActionDispatch::Static","","Rails/classes/ActionDispatch/Static.html","","",null,1],["ActionMailer","","Rails/classes/ActionMailer.html","","",null,1],["ActionMailer::Base","","Rails/classes/ActionMailer/Base.html","","<p>Action Mailer allows you to send email from your application using a mailer\nmodel and views.\n<p>Mailer Models …\n",null,1],["ActionMailer::Collector","","Rails/classes/ActionMailer/Collector.html","","",null,1],["ActionMailer::DeliveryMethods","","Rails/classes/ActionMailer/DeliveryMethods.html","","<p>This module handles everything related to mail delivery, from registering\nnew delivery methods to configuring …\n",null,1],["ActionMailer::DeliveryMethods::ClassMethods","","Rails/classes/ActionMailer/DeliveryMethods/ClassMethods.html","","",null,1],["ActionMailer::LogSubscriber","","Rails/classes/ActionMailer/LogSubscriber.html","","",null,1],["ActionMailer::MailHelper","","Rails/classes/ActionMailer/MailHelper.html","","",null,1],["ActionPack","","Rails/classes/ActionPack.html","","",null,1],["ActionView","","Rails/classes/ActionView.html","","",null,1],["ActionView::Base","","Rails/classes/ActionView/Base.html","","<p>Action View Base\n<p>Action View templates can be written in several ways. If the template file\nhas a <code>.erb</code> …\n",null,1],["ActionView::Context","","Rails/classes/ActionView/Context.html","","<p>Action View Context\n<p>Action View contexts are supplied to Action Controller to render a\ntemplate. The default …\n",null,1],["ActionView::DependencyTracker","","Rails/classes/ActionView/DependencyTracker.html","","",null,1],["ActionView::DependencyTracker::ERBTracker","","Rails/classes/ActionView/DependencyTracker/ERBTracker.html","","",null,1],["ActionView::Digestor","","Rails/classes/ActionView/Digestor.html","","",null,1],["ActionView::FileSystemResolver","","Rails/classes/ActionView/FileSystemResolver.html","","<p>A resolver that loads files from the filesystem. It allows setting your own\nresolving pattern. Such pattern …\n",null,1],["ActionView::Helpers","","Rails/classes/ActionView/Helpers.html","","<p>Active Model Helpers\n<p>Action View Asset URL Helpers\n<p>Action View Atom Feed Helpers\n",null,1],["ActionView::Helpers::ActiveModelHelper","","Rails/classes/ActionView/Helpers/ActiveModelHelper.html","","",null,1],["ActionView::Helpers::ActiveModelInstanceTag","","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html","","",null,1],["ActionView::Helpers::AssetTagHelper","","Rails/classes/ActionView/Helpers/AssetTagHelper.html","","<p>This module provides methods for generating HTML that links views to assets\nsuch as images, javascripts, …\n",null,1],["ActionView::Helpers::AssetUrlHelper","","Rails/classes/ActionView/Helpers/AssetUrlHelper.html","","<p>This module provides methods for generating asset paths and urls.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">image_path</span>(<span class=\"ruby-string\">&quot;rails.png&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &quot;/assets/rails.png&quot; ...</span>\n</pre>\n",null,1],["ActionView::Helpers::AtomFeedHelper","","Rails/classes/ActionView/Helpers/AtomFeedHelper.html","","",null,1],["ActionView::Helpers::CacheHelper","","Rails/classes/ActionView/Helpers/CacheHelper.html","","",null,1],["ActionView::Helpers::CaptureHelper","","Rails/classes/ActionView/Helpers/CaptureHelper.html","","<p>CaptureHelper exposes methods to let you extract generated markup which can\nbe used in other parts of …\n",null,1],["ActionView::Helpers::CsrfHelper","","Rails/classes/ActionView/Helpers/CsrfHelper.html","","",null,1],["ActionView::Helpers::DateHelper","","Rails/classes/ActionView/Helpers/DateHelper.html","","<p>Action View Date Helpers\n<p>The Date Helper primarily creates select/option tags for different kinds of\ndates …\n",null,1],["ActionView::Helpers::DebugHelper","","Rails/classes/ActionView/Helpers/DebugHelper.html","","",null,1],["ActionView::Helpers::FormBuilder","","Rails/classes/ActionView/Helpers/FormBuilder.html","","<p>A <code>FormBuilder</code> object is associated with a particular model\nobject and allows you to generate fields associated …\n",null,1],["ActionView::Helpers::FormHelper","","Rails/classes/ActionView/Helpers/FormHelper.html","","<p>Form helpers are designed to make working with resources much easier\ncompared to using vanilla HTML. …\n",null,1],["ActionView::Helpers::FormOptionsHelper","","Rails/classes/ActionView/Helpers/FormOptionsHelper.html","","<p>Provides a number of methods for turning different kinds of containers into\na set of option tags.\n<p>The …\n",null,1],["ActionView::Helpers::FormTagHelper","","Rails/classes/ActionView/Helpers/FormTagHelper.html","","<p>Provides a number of methods for creating form tags that don&#39;t rely on\nan Active Record object assigned …\n",null,1],["ActionView::Helpers::JavaScriptHelper","","Rails/classes/ActionView/Helpers/JavaScriptHelper.html","","",null,1],["ActionView::Helpers::NumberHelper","","Rails/classes/ActionView/Helpers/NumberHelper.html","","<p>Provides methods for converting numbers into formatted strings. Methods are\nprovided for phone numbers, …\n",null,1],["ActionView::Helpers::NumberHelper::InvalidNumberError","","Rails/classes/ActionView/Helpers/NumberHelper/InvalidNumberError.html","","<p>Raised when argument <code>number</code> param given to the helpers is\ninvalid and the option :raise is set to  <code>true</code> …\n",null,1],["ActionView::Helpers::OutputSafetyHelper","","Rails/classes/ActionView/Helpers/OutputSafetyHelper.html","","",null,1],["ActionView::Helpers::RecordTagHelper","","Rails/classes/ActionView/Helpers/RecordTagHelper.html","","",null,1],["ActionView::Helpers::RenderingHelper","","Rails/classes/ActionView/Helpers/RenderingHelper.html","","<p>Action View Rendering\n<p>Implements methods that allow rendering from a view context. In order to\nuse this …\n",null,1],["ActionView::Helpers::SanitizeHelper","","Rails/classes/ActionView/Helpers/SanitizeHelper.html","","<p>The SanitizeHelper module provides a set of methods for scrubbing text of\nundesired HTML elements. These …\n",null,1],["ActionView::Helpers::TagHelper","","Rails/classes/ActionView/Helpers/TagHelper.html","","<p>Provides methods to generate HTML tags programmatically when you can&#39;t\nuse a Builder. By default, …\n",null,1],["ActionView::Helpers::TextHelper","","Rails/classes/ActionView/Helpers/TextHelper.html","","<p>The TextHelper module provides a set of methods for filtering, formatting\nand transforming strings, which …\n",null,1],["ActionView::Helpers::TranslationHelper","","Rails/classes/ActionView/Helpers/TranslationHelper.html","","",null,1],["ActionView::Helpers::UrlHelper","","Rails/classes/ActionView/Helpers/UrlHelper.html","","<p>Provides a set of methods for making links and getting URLs that depend on\nthe routing subsystem (see …\n",null,1],["ActionView::Helpers::UrlHelper::ClassMethods","","Rails/classes/ActionView/Helpers/UrlHelper/ClassMethods.html","","",null,1],["ActionView::LogSubscriber","","Rails/classes/ActionView/LogSubscriber.html","","<p>Action View Log Subscriber\n<p>Provides functionality so that Rails can output logs from Action View.\n",null,1],["ActionView::LookupContext","","Rails/classes/ActionView/LookupContext.html","","",null,1],["ActionView::LookupContext::DetailsCache","","Rails/classes/ActionView/LookupContext/DetailsCache.html","","<p>Add caching behavior on top of Details.\n",null,1],["ActionView::LookupContext::ViewPaths","","Rails/classes/ActionView/LookupContext/ViewPaths.html","","<p>Helpers related to template lookup using the lookup context information.\n",null,1],["ActionView::ModelNaming","","Rails/classes/ActionView/ModelNaming.html","","",null,1],["ActionView::PartialRenderer","","Rails/classes/ActionView/PartialRenderer.html","","<p>Action View Partials\n<p>There&#39;s also a convenience method for rendering sub templates within\nthe current …\n",null,1],["ActionView::RecordIdentifier","","Rails/classes/ActionView/RecordIdentifier.html","","<p>The record identifier encapsulates a number of naming conventions for\ndealing with records, like Active …\n",null,1],["ActionView::Renderer","","Rails/classes/ActionView/Renderer.html","","<p>This is the main entry point for rendering. It basically delegates to other\nobjects like TemplateRenderer …\n",null,1],["ActionView::Resolver","","Rails/classes/ActionView/Resolver.html","","<p>Action View Resolver\n",null,1],["ActionView::Resolver::Cache","","Rails/classes/ActionView/Resolver/Cache.html","","",null,1],["ActionView::Resolver::Cache::SmallCache","","Rails/classes/ActionView/Resolver/Cache/SmallCache.html","","",null,1],["ActionView::Resolver::Path","","Rails/classes/ActionView/Resolver/Path.html","","<p>Keeps all information about view path and builds virtual path.\n",null,1],["ActionView::RoutingUrlFor","","Rails/classes/ActionView/RoutingUrlFor.html","","",null,1],["ActionView::Template","","Rails/classes/ActionView/Template.html","","<p>Action View Template Handlers\n<p>Action View Text Template\n<p>Action View Template\n",null,1],["ActionView::Template::Handlers","","Rails/classes/ActionView/Template/Handlers.html","","",null,1],["ActionView::Template::Handlers::Builder","","Rails/classes/ActionView/Template/Handlers/Builder.html","","",null,1],["ActionView::Template::Handlers::ERB","","Rails/classes/ActionView/Template/Handlers/ERB.html","","",null,1],["ActionView::Template::Handlers::Erubis","","Rails/classes/ActionView/Template/Handlers/Erubis.html","","",null,1],["ActionView::Template::Handlers::Raw","","Rails/classes/ActionView/Template/Handlers/Raw.html","","",null,1],["ActionView::Template::Types","","Rails/classes/ActionView/Template/Types.html","","",null,1],["ActionView::Template::Types::Type","","Rails/classes/ActionView/Template/Types/Type.html","","",null,1],["ActiveModel","","Rails/classes/ActiveModel.html","","",null,1],["ActiveModel::AttributeMethods","","Rails/classes/ActiveModel/AttributeMethods.html","","<p>Active Model Attribute Methods\n<p><code>ActiveModel::AttributeMethods</code> provides a way to add prefixes\nand suffixes …\n",null,1],["ActiveModel::AttributeMethods::ClassMethods","","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html","","",null,1],["ActiveModel::Callbacks","","Rails/classes/ActiveModel/Callbacks.html","","<p>Active Model Callbacks\n<p>Provides an interface for any class to have Active Record like callbacks.\n<p>Like the …\n",null,1],["ActiveModel::Conversion","","Rails/classes/ActiveModel/Conversion.html","","<p>Active Model Conversion\n<p>Handles default conversions: to_model, to_key, to_param, and\nto_partial_path. …\n",null,1],["ActiveModel::Dirty","","Rails/classes/ActiveModel/Dirty.html","","<p>Active Model Dirty\n<p>Provides a way to track changes in your object in the same way as Active\nRecord does. …\n",null,1],["ActiveModel::Errors","","Rails/classes/ActiveModel/Errors.html","","<p>Active Model Errors\n<p>Provides a modified <code>Hash</code> that you can include in your object\nfor handling error messages …\n",null,1],["ActiveModel::ForbiddenAttributesError","","Rails/classes/ActiveModel/ForbiddenAttributesError.html","","<p>Raised when forbidden attributes are used for mass assignment.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n<span class=\"ruby-keyword\">end</span>\n <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActiveModel::Lint","","Rails/classes/ActiveModel/Lint.html","","",null,1],["ActiveModel::Lint::Tests","","Rails/classes/ActiveModel/Lint/Tests.html","","<p>Active Model Lint Tests\n<p>You can test whether an object is compliant with the Active Model API by\nincluding …\n",null,1],["ActiveModel::MissingAttributeError","","Rails/classes/ActiveModel/MissingAttributeError.html","","<p>Raised when an attribute is not defined.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">User</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-identifier\">has_many</span> :<span class=\"ruby-identifier\">pets</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-identifier\">user</span> = <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActiveModel::Model","","Rails/classes/ActiveModel/Model.html","","<p>Active Model Basic Model\n<p>Includes the required interface for an object to interact with\n<code>ActionPack</code>, using …\n",null,1],["ActiveModel::Name","","Rails/classes/ActiveModel/Name.html","","",null,1],["ActiveModel::Naming","","Rails/classes/ActiveModel/Naming.html","","<p>Active Model Naming\n<p>Creates a <code>model_name</code> method on your object.\n<p>To implement, just extend ActiveModel::Naming …\n",null,1],["ActiveModel::SecurePassword","","Rails/classes/ActiveModel/SecurePassword.html","","",null,1],["ActiveModel::SecurePassword::ClassMethods","","Rails/classes/ActiveModel/SecurePassword/ClassMethods.html","","",null,1],["ActiveModel::SecurePassword::ClassMethods::InstanceMethodsOnActivation","","Rails/classes/ActiveModel/SecurePassword/ClassMethods/InstanceMethodsOnActivation.html","","",null,1],["ActiveModel::Serialization","","Rails/classes/ActiveModel/Serialization.html","","<p>Active Model Serialization\n<p>Provides a basic serialization to a serializable_hash for your object.\n<p>A minimal …\n",null,1],["ActiveModel::Serializers","","Rails/classes/ActiveModel/Serializers.html","","",null,1],["ActiveModel::Serializers::JSON","","Rails/classes/ActiveModel/Serializers/JSON.html","","<p>Active Model JSON Serializer\n",null,1],["ActiveModel::Serializers::Xml","","Rails/classes/ActiveModel/Serializers/Xml.html","","<p>Active Model XML Serializer\n",null,1],["ActiveModel::StrictValidationFailed","","Rails/classes/ActiveModel/StrictValidationFailed.html","","<p>Raised when a validation cannot be corrected by end users and are\nconsidered exceptional.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActiveModel::Translation","","Rails/classes/ActiveModel/Translation.html","","<p>Active Model Translation\n<p>Provides integration between your object and the Rails internationalization\n(i18n) …\n",null,1],["ActiveModel::Validations","","Rails/classes/ActiveModel/Validations.html","","<p>Active Model Length Validator\n<p>Active Model Validations\n<p>Provides a full validation framework to your objects. …\n",null,1],["ActiveModel::Validations::Callbacks","","Rails/classes/ActiveModel/Validations/Callbacks.html","","<p>Active Model Validation Callbacks\n<p>Provides an interface for any class to have <code>before_validation</code>\nand <code>after_validation</code> …\n",null,1],["ActiveModel::Validations::Callbacks::ClassMethods","","Rails/classes/ActiveModel/Validations/Callbacks/ClassMethods.html","","",null,1],["ActiveModel::Validations::ClassMethods","","Rails/classes/ActiveModel/Validations/ClassMethods.html","","",null,1],["ActiveModel::Validations::HelperMethods","","Rails/classes/ActiveModel/Validations/HelperMethods.html","","",null,1],["ActiveModel::Validator","","Rails/classes/ActiveModel/Validator.html","","<p>Active Model Validator\n<p>A simple base class that can be used along with\nActiveModel::Validations::ClassMethods.validates_with …\n",null,1],["ActiveRecord","","Rails/classes/ActiveRecord.html","","",null,1],["ActiveRecord::ActiveRecordError","","Rails/classes/ActiveRecord/ActiveRecordError.html","","<p>Active Record Errors\n<p>Generic Active Record exception class.\n",null,1],["ActiveRecord::AdapterNotFound","","Rails/classes/ActiveRecord/AdapterNotFound.html","","<p>Raised when Active Record cannot find database adapter specified in\n<code>config/database.yml</code> or programmatically. …\n",null,1],["ActiveRecord::AdapterNotSpecified","","Rails/classes/ActiveRecord/AdapterNotSpecified.html","","<p>Raised when adapter not specified on connection (or configuration file\n<code>config/database.yml</code> misses adapter …\n",null,1],["ActiveRecord::Aggregations","","Rails/classes/ActiveRecord/Aggregations.html","","",null,1],["ActiveRecord::Aggregations::ClassMethods","","Rails/classes/ActiveRecord/Aggregations/ClassMethods.html","","<p>Active Record implements aggregation through a macro-like class method\ncalled <code>composed_of</code> for representing …\n",null,1],["ActiveRecord::AssociationRelation","","Rails/classes/ActiveRecord/AssociationRelation.html","","",null,1],["ActiveRecord::AssociationTypeMismatch","","Rails/classes/ActiveRecord/AssociationTypeMismatch.html","","<p>Raised when an object assigned to an association has an incorrect type.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Ticket</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActiveRecord::Associations","","Rails/classes/ActiveRecord/Associations.html","","<p>Active Record Belongs To Association\n<p>Active Record Belongs To Polymorphic Association\n<p>Active Record Has …\n",null,1],["ActiveRecord::Associations::ClassMethods","","Rails/classes/ActiveRecord/Associations/ClassMethods.html","","<p>Associations are a set of macro-like class methods for tying objects\ntogether through foreign keys.  …\n",null,1],["ActiveRecord::Associations::CollectionProxy","","Rails/classes/ActiveRecord/Associations/CollectionProxy.html","","<p>Association proxies in Active Record are middlemen between the object that\nholds the association, known …\n",null,1],["ActiveRecord::AttributeAssignment","","Rails/classes/ActiveRecord/AttributeAssignment.html","","",null,1],["ActiveRecord::AttributeAssignmentError","","Rails/classes/ActiveRecord/AttributeAssignmentError.html","","<p>Raised when an error occurred while doing a mass assignment to an attribute\nthrough the <code>attributes=</code> method. …\n",null,1],["ActiveRecord::AttributeMethods","","Rails/classes/ActiveRecord/AttributeMethods.html","","<p>Active Record Attribute Methods\n",null,1],["ActiveRecord::AttributeMethods::BeforeTypeCast","","Rails/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html","","<p>Active Record Attribute Methods Before Type Cast\n<p><code>ActiveRecord::AttributeMethods::BeforeTypeCast</code> provides …\n",null,1],["ActiveRecord::AttributeMethods::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::PrimaryKey","","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html","","",null,1],["ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::Query","","Rails/classes/ActiveRecord/AttributeMethods/Query.html","","",null,1],["ActiveRecord::AttributeMethods::Read","","Rails/classes/ActiveRecord/AttributeMethods/Read.html","","",null,1],["ActiveRecord::AttributeMethods::Read::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::Serialization","","Rails/classes/ActiveRecord/AttributeMethods/Serialization.html","","",null,1],["ActiveRecord::AttributeMethods::Serialization::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::TimeZoneConversion","","Rails/classes/ActiveRecord/AttributeMethods/TimeZoneConversion.html","","",null,1],["ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::Write","","Rails/classes/ActiveRecord/AttributeMethods/Write.html","","",null,1],["ActiveRecord::AttributeMethods::Write::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/Write/ClassMethods.html","","",null,1],["ActiveRecord::AutosaveAssociation","","Rails/classes/ActiveRecord/AutosaveAssociation.html","","<p>Active Record Autosave Association\n<p><code>AutosaveAssociation</code> is a module that takes care of\nautomatically saving …\n",null,1],["ActiveRecord::AutosaveAssociation::ClassMethods","","Rails/classes/ActiveRecord/AutosaveAssociation/ClassMethods.html","","",null,1],["ActiveRecord::Base","","Rails/classes/ActiveRecord/Base.html","","<p>Active Record\n<p>Active Record objects don&#39;t specify their attributes directly, but\nrather infer them …\n",null,1],["ActiveRecord::Batches","","Rails/classes/ActiveRecord/Batches.html","","",null,1],["ActiveRecord::Calculations","","Rails/classes/ActiveRecord/Calculations.html","","",null,1],["ActiveRecord::Callbacks","","Rails/classes/ActiveRecord/Callbacks.html","","<p>Active Record Callbacks\n<p>Callbacks are hooks into the life cycle of an Active Record object that\nallow …\n",null,1],["ActiveRecord::Callbacks::ClassMethods","","Rails/classes/ActiveRecord/Callbacks/ClassMethods.html","","",null,1],["ActiveRecord::ConfigurationError","","Rails/classes/ActiveRecord/ConfigurationError.html","","<p>Raised when association is being configured improperly or user tries to use\noffset and limit together …\n",null,1],["ActiveRecord::ConnectionAdapters","","Rails/classes/ActiveRecord/ConnectionAdapters.html","","",null,1],["ActiveRecord::ConnectionAdapters::AbstractAdapter","","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html","","<p>Active Record supports multiple database systems. AbstractAdapter and\nrelated classes form the abstraction …\n",null,1],["ActiveRecord::ConnectionAdapters::AbstractAdapter::SchemaCreation","","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter/SchemaCreation.html","","",null,1],["ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html","","",null,1],["ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter::SchemaCreation","","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter/SchemaCreation.html","","",null,1],["ActiveRecord::ConnectionAdapters::Column","","Rails/classes/ActiveRecord/ConnectionAdapters/Column.html","","",null,1],["ActiveRecord::ConnectionAdapters::Column::Format","","Rails/classes/ActiveRecord/ConnectionAdapters/Column/Format.html","","",null,1],["ActiveRecord::ConnectionAdapters::ColumnDumper","","Rails/classes/ActiveRecord/ConnectionAdapters/ColumnDumper.html","","<p>The goal of this module is to move Adapter specific column definitions to\nthe Adapter instead of having …\n",null,1],["ActiveRecord::ConnectionAdapters::ConnectionHandler","","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html","","<p>ConnectionHandler is a collection of ConnectionPool objects. It is used for\nkeeping separate connection …\n",null,1],["ActiveRecord::ConnectionAdapters::ConnectionManagement","","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html","","",null,1],["ActiveRecord::ConnectionAdapters::ConnectionPool","","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html","","<p>Connection pool base class for managing Active Record database connections.\n<p>Introduction\n<p>A connection pool …\n",null,1],["ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html","","<p>Threadsafe, fair, FIFO queue.  Meant to be used by ConnectionPool with\nwhich it shares a Monitor.  But …\n",null,1],["ActiveRecord::ConnectionAdapters::ConnectionPool::Reaper","","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Reaper.html","","<p>Every <code>frequency</code> seconds, the reaper will call\n<code>reap</code> on <code>pool</code>. A reaper instantiated with a nil\nfrequency …\n",null,1],["ActiveRecord::ConnectionAdapters::DatabaseLimits","","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html","","",null,1],["ActiveRecord::ConnectionAdapters::DatabaseStatements","","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html","","",null,1],["ActiveRecord::ConnectionAdapters::Mysql2Adapter","","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html","","<p>The MySQL adapter will work with both Ruby/MySQL, which is a Ruby-based\nMySQL adapter that comes bundled …\n",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Boolean","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Boolean.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Date","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Date.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::DateTime","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/DateTime.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Decimal","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Decimal.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Float","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Float.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Identity","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Identity.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Integer","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Integer.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Time","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Time.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Type","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Type.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html","","<p>The PostgreSQL adapter works with the native C (bitbucket.org/ged/ruby-pg)\ndriver.\n<p>Options:\n<p><code>:host</code> - Defaults …\n",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnDefinition","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnDefinition.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Array","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Array.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Bit","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Bit.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Boolean","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Boolean.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Bytea","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Bytea.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Cidr","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Cidr.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Date","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Date.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Decimal","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Decimal.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Float","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Float.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Hstore","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Hstore.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Identity","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Identity.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Integer","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Integer.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Json","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Json.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Money","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Money.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Point","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Point.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Range","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Range.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Time","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Time.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Timestamp","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Timestamp.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Type","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Type.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::TypeMap","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/TypeMap.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Vector","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Vector.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Quoting","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Quoting.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ReferentialIntegrity","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ReferentialIntegrity.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaCreation","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaCreation.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Table","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Table.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Utils","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Utils.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLColumn","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLColumn::ArrayParser","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/ArrayParser.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html","","",null,1],["ActiveRecord::ConnectionAdapters::QueryCache","","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html","","",null,1],["ActiveRecord::ConnectionAdapters::Quoting","","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html","","",null,1],["ActiveRecord::ConnectionAdapters::SQLite3Adapter","","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html","","<p>The SQLite3 adapter works SQLite 3.6.16 or newer with the sqlite3-ruby\ndrivers (available as gem from …\n",null,1],["ActiveRecord::ConnectionAdapters::SQLite3Adapter::ExplainPrettyPrinter","","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/ExplainPrettyPrinter.html","","",null,1],["ActiveRecord::ConnectionAdapters::SQLite3Adapter::StatementPool","","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/StatementPool.html","","",null,1],["ActiveRecord::ConnectionAdapters::SQLite3Adapter::Version","","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/Version.html","","",null,1],["ActiveRecord::ConnectionAdapters::SchemaCache","","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html","","",null,1],["ActiveRecord::ConnectionAdapters::SchemaStatements","","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html","","",null,1],["ActiveRecord::ConnectionAdapters::StatementPool","","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html","","",null,1],["ActiveRecord::ConnectionAdapters::Table","","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html","","<p>Represents an SQL table in an abstract way for updating a table. Also see\nTableDefinition and SchemaStatements#create_table …\n",null,1],["ActiveRecord::ConnectionAdapters::TableDefinition","","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html","","<p>Represents the schema of an SQL table in an abstract way. This class\nprovides methods for manipulating …\n",null,1],["ActiveRecord::ConnectionAdapters::TransactionState","","Rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html","","",null,1],["ActiveRecord::ConnectionHandling","","Rails/classes/ActiveRecord/ConnectionHandling.html","","",null,1],["ActiveRecord::ConnectionNotEstablished","","Rails/classes/ActiveRecord/ConnectionNotEstablished.html","","<p>Raised when connection to the database could not been established (for\nexample when <code>connection=</code> is given …\n",null,1],["ActiveRecord::ConnectionTimeoutError","","Rails/classes/ActiveRecord/ConnectionTimeoutError.html","","<p>Raised when a connection could not be obtained within the connection\nacquisition timeout period: because …\n",null,1],["ActiveRecord::Core","","Rails/classes/ActiveRecord/Core.html","","",null,1],["ActiveRecord::Core::ClassMethods","","Rails/classes/ActiveRecord/Core/ClassMethods.html","","",null,1],["ActiveRecord::CounterCache","","Rails/classes/ActiveRecord/CounterCache.html","","<p>Active Record Counter Cache\n",null,1],["ActiveRecord::CounterCache::ClassMethods","","Rails/classes/ActiveRecord/CounterCache/ClassMethods.html","","",null,1],["ActiveRecord::DangerousAttributeError","","Rails/classes/ActiveRecord/DangerousAttributeError.html","","<p>Raised when attribute has a name reserved by Active Record (when attribute\nhas name of one of Active …\n",null,1],["ActiveRecord::DynamicMatchers","","Rails/classes/ActiveRecord/DynamicMatchers.html","","",null,1],["ActiveRecord::DynamicMatchers::FindBy","","Rails/classes/ActiveRecord/DynamicMatchers/FindBy.html","","",null,1],["ActiveRecord::DynamicMatchers::FindByBang","","Rails/classes/ActiveRecord/DynamicMatchers/FindByBang.html","","",null,1],["ActiveRecord::DynamicMatchers::Finder","","Rails/classes/ActiveRecord/DynamicMatchers/Finder.html","","",null,1],["ActiveRecord::DynamicMatchers::Method","","Rails/classes/ActiveRecord/DynamicMatchers/Method.html","","",null,1],["ActiveRecord::Explain","","Rails/classes/ActiveRecord/Explain.html","","",null,1],["ActiveRecord::FinderMethods","","Rails/classes/ActiveRecord/FinderMethods.html","","",null,1],["ActiveRecord::FixtureSet","","Rails/classes/ActiveRecord/FixtureSet.html","","<p>Fixtures are a way of organizing data that you want to test against; in\nshort, sample data.\n<p>They are stored …\n",null,1],["ActiveRecord::ImmutableRelation","","Rails/classes/ActiveRecord/ImmutableRelation.html","","<p>Raised when a relation cannot be mutated because it&#39;s already loaded.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Task</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActiveRecord::Inheritance","","Rails/classes/ActiveRecord/Inheritance.html","","",null,1],["ActiveRecord::Inheritance::ClassMethods","","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html","","",null,1],["ActiveRecord::Integration","","Rails/classes/ActiveRecord/Integration.html","","",null,1],["ActiveRecord::InvalidForeignKey","","Rails/classes/ActiveRecord/InvalidForeignKey.html","","<p>Raised when a record cannot be inserted or updated because it references a\nnon-existent record.\n",null,1],["ActiveRecord::IrreversibleMigration","","Rails/classes/ActiveRecord/IrreversibleMigration.html","","<p>Exception that can be raised to stop migrations from going backwards.\n",null,1],["ActiveRecord::Locking","","Rails/classes/ActiveRecord/Locking.html","","",null,1],["ActiveRecord::Locking::Optimistic","","Rails/classes/ActiveRecord/Locking/Optimistic.html","","<p>What is Optimistic Locking\n<p>Optimistic locking allows multiple users to access the same record for\nedits, …\n",null,1],["ActiveRecord::Locking::Optimistic::ClassMethods","","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html","","",null,1],["ActiveRecord::Locking::Pessimistic","","Rails/classes/ActiveRecord/Locking/Pessimistic.html","","<p>Locking::Pessimistic provides support for row-level locking using SELECT …\nFOR UPDATE and other lock …\n",null,1],["ActiveRecord::LogSubscriber","","Rails/classes/ActiveRecord/LogSubscriber.html","","",null,1],["ActiveRecord::Migration","","Rails/classes/ActiveRecord/Migration.html","","<p>Active Record Migrations\n<p>Migrations can manage the evolution of a schema used by several physical\ndatabases. …\n",null,1],["ActiveRecord::Migration::CheckPending","","Rails/classes/ActiveRecord/Migration/CheckPending.html","","<p>This class is used to verify that all migrations have been run before\nloading a web page if config.active_record.migration_error …\n",null,1],["ActiveRecord::Migration::CommandRecorder","","Rails/classes/ActiveRecord/Migration/CommandRecorder.html","","<p><code>ActiveRecord::Migration::CommandRecorder</code> records commands done\nduring a migration and knows how to reverse …\n",null,1],["ActiveRecord::Migration::CommandRecorder::StraightReversions","","Rails/classes/ActiveRecord/Migration/CommandRecorder/StraightReversions.html","","",null,1],["ActiveRecord::MigrationProxy","","Rails/classes/ActiveRecord/MigrationProxy.html","","<p>MigrationProxy is used to defer loading of the actual migration classes\nuntil they are needed\n",null,1],["ActiveRecord::ModelSchema","","Rails/classes/ActiveRecord/ModelSchema.html","","",null,1],["ActiveRecord::ModelSchema::ClassMethods","","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html","","",null,1],["ActiveRecord::MultiparameterAssignmentErrors","","Rails/classes/ActiveRecord/MultiparameterAssignmentErrors.html","","<p>Raised when there are multiple errors while doing a mass assignment through\nthe <code>attributes</code> method. The …\n",null,1],["ActiveRecord::NestedAttributes","","Rails/classes/ActiveRecord/NestedAttributes.html","","",null,1],["ActiveRecord::NestedAttributes::ClassMethods","","Rails/classes/ActiveRecord/NestedAttributes/ClassMethods.html","","<p>Active Record Nested Attributes\n<p>Nested attributes allow you to save attributes on associated records\nthrough …\n",null,1],["ActiveRecord::NestedAttributes::TooManyRecords","","Rails/classes/ActiveRecord/NestedAttributes/TooManyRecords.html","","",null,1],["ActiveRecord::Persistence","","Rails/classes/ActiveRecord/Persistence.html","","<p>Active Record Persistence\n",null,1],["ActiveRecord::Persistence::ClassMethods","","Rails/classes/ActiveRecord/Persistence/ClassMethods.html","","",null,1],["ActiveRecord::PreparedStatementInvalid","","Rails/classes/ActiveRecord/PreparedStatementInvalid.html","","<p>Raised when number of bind variables in statement given to\n<code>:condition</code> key (for example, when using <code>find</code> …\n",null,1],["ActiveRecord::QueryCache","","Rails/classes/ActiveRecord/QueryCache.html","","<p>Active Record Query Cache\n",null,1],["ActiveRecord::QueryCache::ClassMethods","","Rails/classes/ActiveRecord/QueryCache/ClassMethods.html","","",null,1],["ActiveRecord::QueryMethods","","Rails/classes/ActiveRecord/QueryMethods.html","","",null,1],["ActiveRecord::QueryMethods::WhereChain","","Rails/classes/ActiveRecord/QueryMethods/WhereChain.html","","<p>WhereChain objects act as placeholder for queries in which #where does not\nhave any parameter. In this …\n",null,1],["ActiveRecord::Querying","","Rails/classes/ActiveRecord/Querying.html","","",null,1],["ActiveRecord::ReadOnlyRecord","","Rails/classes/ActiveRecord/ReadOnlyRecord.html","","<p>Raised on attempt to update record that is instantiated as read only.\n",null,1],["ActiveRecord::ReadonlyAttributes","","Rails/classes/ActiveRecord/ReadonlyAttributes.html","","",null,1],["ActiveRecord::ReadonlyAttributes::ClassMethods","","Rails/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html","","",null,1],["ActiveRecord::RecordInvalid","","Rails/classes/ActiveRecord/RecordInvalid.html","","<p>Active Record RecordInvalid\n<p>Raised by <code>save!</code> and <code>create!</code> when the record is\ninvalid. Use the <code>record</code> method …\n",null,1],["ActiveRecord::RecordNotDestroyed","","Rails/classes/ActiveRecord/RecordNotDestroyed.html","","<p>Raised by ActiveRecord::Base.destroy! when a call to destroy would return\nfalse.\n",null,1],["ActiveRecord::RecordNotFound","","Rails/classes/ActiveRecord/RecordNotFound.html","","<p>Raised when Active Record cannot find record by given id or set of ids.\n",null,1],["ActiveRecord::RecordNotSaved","","Rails/classes/ActiveRecord/RecordNotSaved.html","","<p>Raised by ActiveRecord::Base.save! and ActiveRecord::Base.create! methods\nwhen record cannot be saved …\n",null,1],["ActiveRecord::RecordNotUnique","","Rails/classes/ActiveRecord/RecordNotUnique.html","","<p>Raised when a record cannot be inserted because it would violate a\nuniqueness constraint.\n",null,1],["ActiveRecord::Reflection","","Rails/classes/ActiveRecord/Reflection.html","","",null,1],["ActiveRecord::Reflection::ClassMethods","","Rails/classes/ActiveRecord/Reflection/ClassMethods.html","","<p>Reflection enables to interrogate Active Record classes and objects about\ntheir associations and aggregations. …\n",null,1],["ActiveRecord::Reflection::MacroReflection","","Rails/classes/ActiveRecord/Reflection/MacroReflection.html","","<p>Base class for AggregateReflection and AssociationReflection. Objects of\nAggregateReflection and AssociationReflection …\n",null,1],["ActiveRecord::Relation","","Rails/classes/ActiveRecord/Relation.html","","<p>Active Record Relation\n",null,1],["ActiveRecord::Result","","Rails/classes/ActiveRecord/Result.html","","<p>This class encapsulates a Result returned from calling\n<code>exec_query</code> on any database connection adapter. …\n",null,1],["ActiveRecord::Rollback","","Rails/classes/ActiveRecord/Rollback.html","","<p>ActiveRecord::Transactions::ClassMethods.transaction uses this exception to\ndistinguish a deliberate …\n",null,1],["ActiveRecord::Sanitization","","Rails/classes/ActiveRecord/Sanitization.html","","",null,1],["ActiveRecord::Sanitization::ClassMethods","","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html","","",null,1],["ActiveRecord::Schema","","Rails/classes/ActiveRecord/Schema.html","","<p>Active Record Schema\n<p>Allows programmers to programmatically define a schema in a portable DSL.\nThis means …\n",null,1],["ActiveRecord::SchemaMigration","","Rails/classes/ActiveRecord/SchemaMigration.html","","",null,1],["ActiveRecord::Scoping","","Rails/classes/ActiveRecord/Scoping.html","","<p>Active Record Named Scopes\n",null,1],["ActiveRecord::Scoping::ClassMethods","","Rails/classes/ActiveRecord/Scoping/ClassMethods.html","","",null,1],["ActiveRecord::Scoping::Default","","Rails/classes/ActiveRecord/Scoping/Default.html","","",null,1],["ActiveRecord::Scoping::Default::ClassMethods","","Rails/classes/ActiveRecord/Scoping/Default/ClassMethods.html","","",null,1],["ActiveRecord::Scoping::Named","","Rails/classes/ActiveRecord/Scoping/Named.html","","",null,1],["ActiveRecord::Scoping::Named::ClassMethods","","Rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html","","",null,1],["ActiveRecord::Serialization","","Rails/classes/ActiveRecord/Serialization.html","","<p>Active Record Serialization\n",null,1],["ActiveRecord::SerializationTypeMismatch","","Rails/classes/ActiveRecord/SerializationTypeMismatch.html","","<p>Raised when unserialized object&#39;s type mismatches one specified for\nserializable field.\n",null,1],["ActiveRecord::SpawnMethods","","Rails/classes/ActiveRecord/SpawnMethods.html","","",null,1],["ActiveRecord::StaleObjectError","","Rails/classes/ActiveRecord/StaleObjectError.html","","<p>Raised on attempt to save stale record. Record is stale when it&#39;s being\nsaved in another query after …\n",null,1],["ActiveRecord::StatementCache","","Rails/classes/ActiveRecord/StatementCache.html","","<p>Statement cache is used to cache a single statement in order to avoid\ncreating the AST again. Initializing …\n",null,1],["ActiveRecord::StatementInvalid","","Rails/classes/ActiveRecord/StatementInvalid.html","","<p>Superclass for all database execution errors.\n<p>Wraps the underlying database error as <code>original_exception</code> …\n",null,1],["ActiveRecord::Store","","Rails/classes/ActiveRecord/Store.html","","<p>Store gives you a thin wrapper around serialize for the purpose of storing\nhashes in a single column. …\n",null,1],["ActiveRecord::Store::ClassMethods","","Rails/classes/ActiveRecord/Store/ClassMethods.html","","",null,1],["ActiveRecord::Tasks","","Rails/classes/ActiveRecord/Tasks.html","","",null,1],["ActiveRecord::Tasks::DatabaseAlreadyExists","","Rails/classes/ActiveRecord/Tasks/DatabaseAlreadyExists.html","","",null,1],["ActiveRecord::Tasks::DatabaseNotSupported","","Rails/classes/ActiveRecord/Tasks/DatabaseNotSupported.html","","",null,1],["ActiveRecord::Tasks::DatabaseTasks","","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html","","<p><code>ActiveRecord::Tasks::DatabaseTasks</code> is a utility class, which\nencapsulates logic behind common tasks used …\n",null,1],["ActiveRecord::TestFixtures","","Rails/classes/ActiveRecord/TestFixtures.html","","",null,1],["ActiveRecord::TestFixtures::ClassMethods","","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html","","",null,1],["ActiveRecord::ThrowResult","","Rails/classes/ActiveRecord/ThrowResult.html","","<p>Raised when SQL statement is invalid and the application gets a blank\nresult.\n",null,1],["ActiveRecord::Timestamp","","Rails/classes/ActiveRecord/Timestamp.html","","<p>Active Record Timestamp\n<p>Active Record automatically timestamps create and update operations if the\ntable …\n",null,1],["ActiveRecord::TransactionIsolationError","","Rails/classes/ActiveRecord/TransactionIsolationError.html","","",null,1],["ActiveRecord::Transactions","","Rails/classes/ActiveRecord/Transactions.html","","<p>See ActiveRecord::Transactions::ClassMethods for documentation.\n",null,1],["ActiveRecord::Transactions::ClassMethods","","Rails/classes/ActiveRecord/Transactions/ClassMethods.html","","<p>Active Record Transactions\n<p>Transactions are protective blocks where SQL statements are only permanent\n…\n",null,1],["ActiveRecord::Translation","","Rails/classes/ActiveRecord/Translation.html","","",null,1],["ActiveRecord::UnknownAttributeError","","Rails/classes/ActiveRecord/UnknownAttributeError.html","","<p>Raised when unknown attributes are supplied via mass assignment.\n",null,1],["ActiveRecord::UnknownPrimaryKey","","Rails/classes/ActiveRecord/UnknownPrimaryKey.html","","<p>Raised when a primary key is needed, but there is not one specified in the\nschema or model.\n",null,1],["ActiveRecord::Validations","","Rails/classes/ActiveRecord/Validations.html","","<p>Active Record Validations\n<p>Active Record includes the majority of its validations from\n<code>ActiveModel::Validations</code> …\n",null,1],["ActiveRecord::Validations::ClassMethods","","Rails/classes/ActiveRecord/Validations/ClassMethods.html","","",null,1],["ActiveRecord::WrappedDatabaseException","","Rails/classes/ActiveRecord/WrappedDatabaseException.html","","<p>Defunct wrapper class kept for compatibility. <code>StatementInvalid</code>\nwraps the original exception now.\n",null,1],["ActiveSupport","","Rails/classes/ActiveSupport.html","","",null,1],["ActiveSupport::Autoload","","Rails/classes/ActiveSupport/Autoload.html","","<p>Autoload and eager load conveniences for your library.\n<p>This module allows you to define autoloads based …\n",null,1],["ActiveSupport::BacktraceCleaner","","Rails/classes/ActiveSupport/BacktraceCleaner.html","","<p>Backtraces often include many lines that are not relevant for the context\nunder review. This makes it …\n",null,1],["ActiveSupport::Benchmarkable","","Rails/classes/ActiveSupport/Benchmarkable.html","","",null,1],["ActiveSupport::BufferedLogger","","Rails/classes/ActiveSupport/BufferedLogger.html","","",null,1],["ActiveSupport::Cache","","Rails/classes/ActiveSupport/Cache.html","","<p>See ActiveSupport::Cache::Store for documentation.\n",null,1],["ActiveSupport::Cache::FileStore","","Rails/classes/ActiveSupport/Cache/FileStore.html","","<p>A cache store implementation which stores everything on the filesystem.\n<p>FileStore implements the Strategy::LocalCache …\n",null,1],["ActiveSupport::Cache::MemCacheStore","","Rails/classes/ActiveSupport/Cache/MemCacheStore.html","","<p>A cache store implementation which stores data in Memcached: memcached.org/\n<p>This is currently the most …\n",null,1],["ActiveSupport::Cache::MemoryStore","","Rails/classes/ActiveSupport/Cache/MemoryStore.html","","<p>A cache store implementation which stores everything into memory in the\nsame process. If you&#39;re running …\n",null,1],["ActiveSupport::Cache::NullStore","","Rails/classes/ActiveSupport/Cache/NullStore.html","","<p>A cache store implementation which doesn&#39;t actually store anything.\nUseful in development and test …\n",null,1],["ActiveSupport::Cache::Store","","Rails/classes/ActiveSupport/Cache/Store.html","","<p>An abstract cache store class. There are multiple cache store\nimplementations, each having its own additional …\n",null,1],["ActiveSupport::Cache::Strategy","","Rails/classes/ActiveSupport/Cache/Strategy.html","","",null,1],["ActiveSupport::Cache::Strategy::LocalCache","","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache.html","","<p>Caches that implement LocalCache will be backed by an in-memory cache for\nthe duration of a block. Repeated …\n",null,1],["ActiveSupport::Cache::Strategy::LocalCache::LocalStore","","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html","","<p>Simple memory backed cache. This cache is not thread safe and is intended\nonly for serving as a temporary …\n",null,1],["ActiveSupport::CachingKeyGenerator","","Rails/classes/ActiveSupport/CachingKeyGenerator.html","","<p>CachingKeyGenerator is a wrapper around KeyGenerator which allows users to\navoid re-executing the key …\n",null,1],["ActiveSupport::Callbacks","","Rails/classes/ActiveSupport/Callbacks.html","","<p>Callbacks are code hooks that are run at key points in an object&#39;s\nlifecycle. The typical use case …\n",null,1],["ActiveSupport::Callbacks::ClassMethods","","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html","","",null,1],["ActiveSupport::Concern","","Rails/classes/ActiveSupport/Concern.html","","<p>A typical module looks like this:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">included</span>(<span class=\"ruby-identifier\">base</span>)\n    <span class=\"ruby-identifier\">base</span>.<span class=\"ruby-identifier\">extend</span> <span class=\"ruby-constant\">ClassMethods</span>\n    <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActiveSupport::Concurrency","","Rails/classes/ActiveSupport/Concurrency.html","","",null,1],["ActiveSupport::Concurrency::Latch","","Rails/classes/ActiveSupport/Concurrency/Latch.html","","",null,1],["ActiveSupport::Configurable","","Rails/classes/ActiveSupport/Configurable.html","","<p>Configurable provides a <code>config</code> method to store and retrieve\nconfiguration options as an <code>OrderedHash</code>. …\n",null,1],["ActiveSupport::Configurable::ClassMethods","","Rails/classes/ActiveSupport/Configurable/ClassMethods.html","","",null,1],["ActiveSupport::Configurable::Configuration","","Rails/classes/ActiveSupport/Configurable/Configuration.html","","",null,1],["ActiveSupport::Dependencies","","Rails/classes/ActiveSupport/Dependencies.html","","",null,1],["ActiveSupport::Dependencies::ClassCache","","Rails/classes/ActiveSupport/Dependencies/ClassCache.html","","",null,1],["ActiveSupport::Dependencies::WatchStack","","Rails/classes/ActiveSupport/Dependencies/WatchStack.html","","<p>The WatchStack keeps a stack of the modules being watched as files are\nloaded. If a file in the process …\n",null,1],["ActiveSupport::Deprecation","","Rails/classes/ActiveSupport/Deprecation.html","","<p>Deprecation specifies the API used by Rails to deprecate methods, instance\nvariables, objects and constants. …\n",null,1],["ActiveSupport::Deprecation::Behavior","","Rails/classes/ActiveSupport/Deprecation/Behavior.html","","",null,1],["ActiveSupport::Deprecation::DeprecatedConstantProxy","","Rails/classes/ActiveSupport/Deprecation/DeprecatedConstantProxy.html","","<p>This DeprecatedConstantProxy transforms constant to deprecated constant.\n\n<pre>OLD_CONST = ActiveSupport::Deprecation::DeprecatedConstantProxy.new(&#39;OLD_CONST&#39;, ...</pre>\n",null,1],["ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy","","Rails/classes/ActiveSupport/Deprecation/DeprecatedInstanceVariableProxy.html","","<p>This DeprecatedInstanceVariableProxy transforms instance variable to\ndeprecated instance variable.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActiveSupport::Deprecation::DeprecatedObjectProxy","","Rails/classes/ActiveSupport/Deprecation/DeprecatedObjectProxy.html","","<p>This DeprecatedObjectProxy transforms object to deprecated object.\n\n<pre>@old_object = DeprecatedObjectProxy.new(Object.new, ...</pre>\n",null,1],["ActiveSupport::Deprecation::MethodWrapper","","Rails/classes/ActiveSupport/Deprecation/MethodWrapper.html","","",null,1],["ActiveSupport::Deprecation::Reporting","","Rails/classes/ActiveSupport/Deprecation/Reporting.html","","",null,1],["ActiveSupport::DeprecationException","","Rails/classes/ActiveSupport/DeprecationException.html","","",null,1],["ActiveSupport::DescendantsTracker","","Rails/classes/ActiveSupport/DescendantsTracker.html","","<p>This module provides an internal implementation to track descendants which\nis faster than iterating through …\n",null,1],["ActiveSupport::Duration","","Rails/classes/ActiveSupport/Duration.html","","<p>Provides accurate date and time measurements using Date#advance and\nTime#advance, respectively. It mainly …\n",null,1],["ActiveSupport::FileUpdateChecker","","Rails/classes/ActiveSupport/FileUpdateChecker.html","","<p>FileUpdateChecker specifies the API used by Rails to watch files and\ncontrol reloading. The API depends …\n",null,1],["ActiveSupport::FileWatcher","","Rails/classes/ActiveSupport/FileWatcher.html","","",null,1],["ActiveSupport::FileWatcher::Backend","","Rails/classes/ActiveSupport/FileWatcher/Backend.html","","",null,1],["ActiveSupport::Gzip","","Rails/classes/ActiveSupport/Gzip.html","","<p>A convenient wrapper for the zlib standard library that allows\ncompression/decompression of strings with …\n",null,1],["ActiveSupport::Gzip::Stream","","Rails/classes/ActiveSupport/Gzip/Stream.html","","",null,1],["ActiveSupport::HashWithIndifferentAccess","","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html","","<p>Implements a hash where keys <code>:foo</code> and\n<code>&quot;foo&quot;</code> are considered to be the same.\n\n<pre>rgb = ActiveSupport::HashWithIndifferentAccess.new ...</pre>\n",null,1],["ActiveSupport::HashWithIndifferentAccess::HashWithIndifferentAccess","","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html","","<p>Implements a hash where keys <code>:foo</code> and\n<code>&quot;foo&quot;</code> are considered to be the same.\n\n<pre>rgb = ActiveSupport::HashWithIndifferentAccess.new ...</pre>\n",null,1],["ActiveSupport::Inflector","","Rails/classes/ActiveSupport/Inflector.html","","<p>The Inflector transforms words from singular to plural, class names to\ntable names, modularized class …\n",null,1],["ActiveSupport::Inflector::Inflections","","Rails/classes/ActiveSupport/Inflector/Inflections.html","","<p>A singleton instance of this class is yielded by Inflector.inflections,\nwhich can then be used to specify …\n",null,1],["ActiveSupport::InheritableOptions","","Rails/classes/ActiveSupport/InheritableOptions.html","","",null,1],["ActiveSupport::JSON","","Rails/classes/ActiveSupport/JSON.html","","",null,1],["ActiveSupport::JSON::Encoding","","Rails/classes/ActiveSupport/JSON/Encoding.html","","",null,1],["ActiveSupport::JSON::Encoding::CircularReferenceError","","Rails/classes/ActiveSupport/JSON/Encoding/CircularReferenceError.html","","",null,1],["ActiveSupport::JSON::Encoding::Encoder","","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html","","",null,1],["ActiveSupport::JSON::Variable","","Rails/classes/ActiveSupport/JSON/Variable.html","","<p>Deprecated: A string that returns itself as its JSON-encoded form.\n",null,1],["ActiveSupport::KeyGenerator","","Rails/classes/ActiveSupport/KeyGenerator.html","","<p>KeyGenerator is a simple wrapper around OpenSSL&#39;s implementation of\nPBKDF2 It can be used to derive …\n",null,1],["ActiveSupport::LogSubscriber","","Rails/classes/ActiveSupport/LogSubscriber.html","","<p>ActiveSupport::LogSubscriber is an object set to consume\nActiveSupport::Notifications with the sole purpose …\n",null,1],["ActiveSupport::Logger","","Rails/classes/ActiveSupport/Logger.html","","",null,1],["ActiveSupport::Logger::SimpleFormatter","","Rails/classes/ActiveSupport/Logger/SimpleFormatter.html","","<p>Simple formatter which only displays the message.\n",null,1],["ActiveSupport::MessageEncryptor","","Rails/classes/ActiveSupport/MessageEncryptor.html","","<p>MessageEncryptor is a simple way to encrypt values which get stored\nsomewhere you don&#39;t trust.\n<p>The …\n",null,1],["ActiveSupport::MessageEncryptor::InvalidMessage","","Rails/classes/ActiveSupport/MessageEncryptor/InvalidMessage.html","","",null,1],["ActiveSupport::MessageVerifier","","Rails/classes/ActiveSupport/MessageVerifier.html","","<p><code>MessageVerifier</code> makes it easy to generate and verify messages\nwhich are signed to prevent tampering. …\n",null,1],["ActiveSupport::MessageVerifier::InvalidSignature","","Rails/classes/ActiveSupport/MessageVerifier/InvalidSignature.html","","",null,1],["ActiveSupport::Multibyte","","Rails/classes/ActiveSupport/Multibyte.html","","",null,1],["ActiveSupport::Multibyte::Chars","","Rails/classes/ActiveSupport/Multibyte/Chars.html","","<p>Chars enables you to work transparently with UTF-8 encoding in the Ruby\nString class without having extensive …\n",null,1],["ActiveSupport::Multibyte::Unicode","","Rails/classes/ActiveSupport/Multibyte/Unicode.html","","",null,1],["ActiveSupport::Multibyte::Unicode::Codepoint","","Rails/classes/ActiveSupport/Multibyte/Unicode/Codepoint.html","","<p>Holds data about a codepoint in the Unicode database.\n",null,1],["ActiveSupport::Multibyte::Unicode::UnicodeDatabase","","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html","","<p>Holds static data from the Unicode database.\n",null,1],["ActiveSupport::Notifications","","Rails/classes/ActiveSupport/Notifications.html","","<p>Notifications\n<p><code>ActiveSupport::Notifications</code> provides an instrumentation API\nfor Ruby.\n<p>Instrumenters\n",null,1],["ActiveSupport::Notifications::Event","","Rails/classes/ActiveSupport/Notifications/Event.html","","",null,1],["ActiveSupport::Notifications::Fanout","","Rails/classes/ActiveSupport/Notifications/Fanout.html","","<p>This is a default queue implementation that ships with Notifications. It\njust pushes events to all registered …\n",null,1],["ActiveSupport::Notifications::Fanout::Subscribers","","Rails/classes/ActiveSupport/Notifications/Fanout/Subscribers.html","","",null,1],["ActiveSupport::Notifications::Fanout::Subscribers::Timed","","Rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/Timed.html","","",null,1],["ActiveSupport::Notifications::Instrumenter","","Rails/classes/ActiveSupport/Notifications/Instrumenter.html","","<p>Instrumenters are stored in a thread local.\n",null,1],["ActiveSupport::NumberHelper","","Rails/classes/ActiveSupport/NumberHelper.html","","",null,1],["ActiveSupport::OrderedHash","","Rails/classes/ActiveSupport/OrderedHash.html","","<p><code>ActiveSupport::OrderedHash</code> implements a hash that preserves\ninsertion order.\n\n<pre>oh = ActiveSupport::OrderedHash.new ...</pre>\n",null,1],["ActiveSupport::OrderedOptions","","Rails/classes/ActiveSupport/OrderedOptions.html","","<p>Usually key value pairs are handled something like this:\n\n<pre>h = {}\nh[:boy] = &#39;John&#39;\nh[:girl] = &#39;Mary&#39;\nh[:boy] ...</pre>\n",null,1],["ActiveSupport::PerThreadRegistry","","Rails/classes/ActiveSupport/PerThreadRegistry.html","","<p>This module is used to encapsulate access to thread local variables.\n<p>Instead of polluting the thread locals …\n",null,1],["ActiveSupport::ProxyObject","","Rails/classes/ActiveSupport/ProxyObject.html","","<p>A class with no predefined methods that behaves similarly to Builder&#39;s\nBlankSlate. Used for proxy …\n",null,1],["ActiveSupport::Rescuable","","Rails/classes/ActiveSupport/Rescuable.html","","<p>Rescuable module adds support for easier exception handling.\n",null,1],["ActiveSupport::Rescuable::ClassMethods","","Rails/classes/ActiveSupport/Rescuable/ClassMethods.html","","",null,1],["ActiveSupport::SafeBuffer","","Rails/classes/ActiveSupport/SafeBuffer.html","","",null,1],["ActiveSupport::SafeBuffer::SafeConcatError","","Rails/classes/ActiveSupport/SafeBuffer/SafeConcatError.html","","",null,1],["ActiveSupport::StringInquirer","","Rails/classes/ActiveSupport/StringInquirer.html","","<p>Wrapping a string in this class gives you a prettier way to test for\nequality. The value returned by …\n",null,1],["ActiveSupport::Subscriber","","Rails/classes/ActiveSupport/Subscriber.html","","<p>ActiveSupport::Subscriber is an object set to consume\nActiveSupport::Notifications. The subscriber dispatches …\n",null,1],["ActiveSupport::TaggedLogging","","Rails/classes/ActiveSupport/TaggedLogging.html","","<p>Wraps any standard Logger object to provide tagging capabilities.\n\n<pre>logger = ActiveSupport::TaggedLogging.new(Logger.new(STDOUT)) ...</pre>\n",null,1],["ActiveSupport::TimeWithZone","","Rails/classes/ActiveSupport/TimeWithZone.html","","<p>A Time-like class that can represent a time in any time zone. Necessary\nbecause standard Ruby Time instances …\n",null,1],["ActiveSupport::TimeZone","","Rails/classes/ActiveSupport/TimeZone.html","","<p>The TimeZone class serves as a wrapper around TZInfo::Timezone instances.\nIt allows us to do the following: …\n",null,1],["ActiveSupport::XMLConverter","","Rails/classes/ActiveSupport/XMLConverter.html","","",null,1],["ActiveSupport::XMLConverter::DisallowedType","","Rails/classes/ActiveSupport/XMLConverter/DisallowedType.html","","",null,1],["ActiveSupport::XmlMini","","Rails/classes/ActiveSupport/XmlMini.html","","<p>XmlMini\n<p>To use the much faster libxml parser:\n\n<pre>gem &#39;libxml-ruby&#39;, &#39;=0.9.7&#39;\nXmlMini.backend = &#39;LibXML&#39;</pre>\n",null,1],["ActiveSupport::XmlMini_LibXMLSAX","","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX.html","","",null,1],["ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html","","<p>Class that will build the hash while the XML document is being parsed using\nSAX events.\n",null,1],["ActiveSupport::XmlMini_NokogiriSAX","","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX.html","","",null,1],["ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html","","<p>Class that will build the hash while the XML document is being parsed using\nSAX events.\n",null,1],["Addrinfo","","Ruby/classes/Addrinfo.html","","<p>The Addrinfo class maps <code>struct addrinfo</code> to ruby.  This\nstructure identifies an Internet host and a service. …\n",null,0],["ApplicationHelper","","Rails/classes/ApplicationHelper.html","","",null,1],["ArgumentError","","Ruby/classes/ArgumentError.html","","<p>Raised when the arguments are wrong and there isn&#39;t a more specific\nException class.\n<p>Ex: passing the …\n",null,0],["Array","","Ruby/classes/Array.html","","<p>Arrays are ordered, integer-indexed collections of any object.\n<p>Array indexing starts at 0, as in C or …\n",null,0],["Array","Kernel","Ruby/classes/Kernel.html#method-i-Array","(p1)","<p>Returns <code>arg</code> as an Array.\n<p>First tries to call Array#to_ary on <code>arg</code>, then Array#to_a.\n\n<pre><code>Array(1..5)   #=&gt; [1, ...\n</code></pre>\n",null,0],["Array","","Rails/classes/Array.html","","",null,1],["Base64","","Ruby/classes/Base64.html","","<p>The Base64 module provides for the encoding (#encode64, #strict_encode64,\n#urlsafe_encode64) and decoding …\n",null,0],["BasicObject","","Ruby/classes/BasicObject.html","","<p>BasicObject is the parent class of all classes in Ruby.  It&#39;s an\nexplicit blank class.\n<p>BasicObject …\n",null,0],["BasicSocket","","Ruby/classes/BasicSocket.html","","<p>BasicSocket is the super class for all the Socket classes.\n",null,0],["Benchmark","","Ruby/classes/Benchmark.html","","<p>The Benchmark module provides methods to measure and report the time used\nto execute Ruby code.\n<p>Measure …\n",null,0],["Benchmark","","Rails/classes/Benchmark.html","","",null,1],["Benchmark::Tms","","Ruby/classes/Benchmark/Tms.html","","<p>A data object, representing the times associated with a benchmark\nmeasurement.\n",null,0],["BigDecimal","","Ruby/classes/BigDecimal.html","","<p>BigDecimal provides arbitrary-precision floating point decimal arithmetic.\n<p>Copyright (C) 2002 by Shigeo …\n",null,0],["BigDecimal","Kernel","Ruby/classes/Kernel.html#method-i-BigDecimal","(*args)","",null,0],["BigDecimal","","Rails/classes/BigDecimal.html","","",null,1],["BigMath","","Ruby/classes/BigMath.html","","<p>mathematical functions\n<p>Provides mathematical functions.\n<p>Example:\n",null,0],["Bignum","","Ruby/classes/Bignum.html","","<p>Bignum objects hold integers outside the range of Fixnum. Bignum objects\nare created automatically when …\n",null,0],["Binding","","Ruby/classes/Binding.html","","<p>Objects of class <code>Binding</code> encapsulate the execution context at\nsome particular place in the code and retain …\n",null,0],["Build","","Rails/classes/Build.html","","",null,1],["CGI","","Ruby/classes/CGI.html","","<p>Overview\n<p>The Common Gateway Interface (CGI) is a simple protocol for passing an HTTP\nrequest from a web …\n",null,0],["CGI::Cookie","","Ruby/classes/CGI/Cookie.html","","<p>Class representing an HTTP cookie.\n<p>In addition to its specific fields and methods, a Cookie instance is …\n",null,0],["CGI::HtmlExtension","","Ruby/classes/CGI/HtmlExtension.html","","<p>Mixin module providing HTML generation methods.\n<p>For example,\n\n<pre><code>cgi.a(&quot;http://www.example.com&quot;) { &quot;Example&quot; ...</code></pre>\n",null,0],["CGI::InvalidEncoding","","Ruby/classes/CGI/InvalidEncoding.html","","<p>Exception raised when there is an invalid encoding detected\n",null,0],["CGI::QueryExtension","","Ruby/classes/CGI/QueryExtension.html","","<p>Mixin module that provides the following:\n<p>Access to the CGI environment variables as methods.  See documentation …\n",null,0],["CGI::Session","","Ruby/classes/CGI/Session.html","","<p>Overview\n<p>This file provides the CGI::Session class, which provides session support\nfor CGI scripts.   …\n",null,0],["CGI::Session::FileStore","","Ruby/classes/CGI/Session/FileStore.html","","<p>File-based session storage class.\n<p>Implements session storage as a flat file of &#39;key=value&#39; values. …\n",null,0],["CGI::Session::MemoryStore","","Ruby/classes/CGI/Session/MemoryStore.html","","<p>In-memory session storage class.\n<p>Implements session storage as a global in-memory hash.  Session data …\n",null,0],["CGI::Session::NullStore","","Ruby/classes/CGI/Session/NullStore.html","","<p>Dummy session storage class.\n<p>Implements session storage place holder.  No actual storage will be done. …\n",null,0],["CGI::Session::PStore","","Ruby/classes/CGI/Session/PStore.html","","<p>PStore-based session storage class.\n<p>This builds upon the top-level PStore class provided by the library …\n",null,0],["CMath","","Ruby/classes/CMath.html","","<p>CMath\n<p>CMath is a library that provides trigonometric and transcendental functions\nfor complex numbers. …\n",null,0],["CSV","","Ruby/classes/CSV.html","","<p>This class provides a complete interface to CSV files and data.  It offers\ntools to enable you to read …\n",null,0],["CSV","Object","Ruby/classes/Object.html#method-i-CSV","(*args, &block)","<p>Passes <code>args</code> to CSV::instance.\n\n<pre><code>CSV(&quot;CSV,data&quot;).read\n  #=&gt; [[&quot;CSV&quot;, &quot;data&quot;]]\n</code></pre>\n<p>If a block is given, the instance …\n",null,0],["CSV::MalformedCSVError","","Ruby/classes/CSV/MalformedCSVError.html","","<p>The error thrown when the parser encounters illegal CSV formatting.\n",null,0],["CSV::Row","","Ruby/classes/CSV/Row.html","","<p>A CSV::Row is part Array and part Hash.  It retains an order for the fields\nand allows duplicates just …\n",null,0],["CSV::Table","","Ruby/classes/CSV/Table.html","","<p>A CSV::Table is a two-dimensional data structure for representing CSV\ndocuments.  Tables allow you to …\n",null,0],["Call","Win32API","Ruby/classes/Win32API.html#method-i-Call","(*args)","",null,0],["ChangeLog","","Ruby/files/ruby/ChangeLog.html","","<p>ChangeLog\n<p>2014-02-22\n<p>Sat Feb 22 22:11:58 2014  NAKAMURA Usaku  &lt;usa@ruby-lang.org&gt;\n",null,0],["ChangeLog-1.8.0","","Ruby/files/ruby/doc/ChangeLog-1_8_0.html","","<p>ChangeLog-1.8.0\n<p>2003-08-04\n<p>Mon Aug  4 17:21:19 2003  Yukihiro Matsumoto  &lt;matz@ruby-lang.org&gt;\n",null,0],["ChangeLog-1.9.3","","Ruby/files/ruby/doc/ChangeLog-1_9_3.html","","<p>ChangeLog-1.9.3\n<p>2011-07-10\n<p>Sun Jul 10 22:50:00 2011  Kenta Murata  &lt;mrkn@mrkn.jp&gt;\n",null,0],["ChangeLog-YARV","","Ruby/files/ruby/doc/ChangeLog-YARV.html","","<p>ChangeLog-YARV\n<p>2006-12-31\n<p>Sun Dec 31 18:01:50 2006  Koichi Sasada  &lt;ko1@atdot.net&gt;\n",null,0],["Class","","Ruby/classes/Class.html","","<p>Classes in Ruby are first-class objects—each is an instance of class\n<code>Class</code>.\n<p>Typically, you create a …\n",null,0],["Class","","Rails/classes/Class.html","","<p>Extends the class object with class and instance accessors for class\nattributes, just like the native …\n",null,1],["CloseKey","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-CloseKey","(hkey)","",null,0],["Comparable","","Ruby/classes/Comparable.html","","<p>The <code>Comparable</code> mixin is used by classes whose objects may be\nordered. The class must define the <code>&lt;=&gt;</code> …\n",null,0],["Complex","","Ruby/classes/Complex.html","","<p>A complex number can be represented as a paired real number with imaginary\nunit; a+bi.  Where a is real …\n",null,0],["Complex","Kernel","Ruby/classes/Kernel.html#method-i-Complex","(*args)","<p>Returns x+i*y;\n\n<pre><code>Complex(1, 2)    #=&gt; (1+2i)\nComplex(&#39;1+2i&#39;)  #=&gt; (1+2i)\n</code></pre>\n<p>Syntax of string form:\n",null,0],["Complex::compatible","","Ruby/classes/Complex/compatible.html","","",null,0],["CompositePublisher","","Ruby/classes/CompositePublisher.html","","<p>Manage several publishers as a single entity.\n",null,0],["ConditionVariable","","Ruby/classes/ConditionVariable.html","","<p>ConditionVariable objects augment class Mutex. Using condition variables,\nit is possible to suspend while …\n",null,0],["Continuation","","Ruby/classes/Continuation.html","","<p>Continuation objects are generated by Kernel#callcc, after having\n+require+d <em>continuation</em>. They hold …\n",null,0],["Coverage","","Ruby/classes/Coverage.html","","<p>Coverage provides coverage measurement feature for Ruby. This feature is\nexperimental, so these APIs …\n",null,0],["CreateKey","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-CreateKey","(hkey, name, opt, desired)","",null,0],["CurrentContext","IRB","Ruby/classes/IRB.html#method-c-CurrentContext","()","<p>The current IRB::Context of the session, see IRB.conf\n\n<pre><code>irb\nirb(main):001:0&gt; IRB.CurrentContext.irb_name ...</code></pre>\n",null,0],["Curses","","Ruby/classes/Curses.html","","<p>Description\n<p>An implementation of the CRT screen handling and optimization library.\n<p>Structures and such …\n",null,0],["Curses::Key","","Ruby/classes/Curses/Key.html","","<p>a container for the KEY_* values.\n<p>See also system manual for getch(3)\n",null,0],["Curses::MouseEvent","","Ruby/classes/Curses/MouseEvent.html","","<p>Description\n<p>Curses::MouseEvent\n<p>Example\n",null,0],["Curses::Pad","","Ruby/classes/Curses/Pad.html","","<p>Description\n<p>A Pad is like a Window but allows for scrolling of contents that cannot fit\non the screen. …\n",null,0],["Curses::Window","","Ruby/classes/Curses/Window.html","","<p>Description\n<p>The means by which to create and manage frames or windows. While there may\nbe more than one …\n",null,0],["DBM","","Ruby/classes/DBM.html","","<p>Documented by mathew meta@pobox.com.\n<p>Introduction\n<p>The DBM class provides a wrapper to a Unix-style dbm …\n",null,0],["DBMError","","Ruby/classes/DBMError.html","","<p>Exception class used to return errors from the dbm library.\n",null,0],["DEBUG","Thread","Ruby/classes/Thread.html#method-c-DEBUG","()","<p>Returns the thread debug level.  Available only if compiled with\nTHREAD_DEBUG=-1.\n",null,0],["DEBUG=","Thread","Ruby/classes/Thread.html#method-c-DEBUG-3D","(p1)","<p>Sets the thread debug level.  Available only if compiled with\nTHREAD_DEBUG=-1.\n",null,0],["DEBUGGER__","","Ruby/classes/DEBUGGER__.html","","<p>This library provides debugging functionality to Ruby.\n<p>To add a debugger to your code, start by requiring …\n",null,0],["DEBUGGER__::Thread","","Ruby/classes/DEBUGGER__/Thread.html","","",null,0],["DL","","Ruby/classes/DL.html","","<p>A bridge to the dlopen() or dynamic library linker function.\n<p>Example\n\n<pre><code>bash $&gt; cat &gt; sum.c &lt;&lt;EOF\ndouble sum(double ...</code></pre>\n",null,0],["DL::BasicTypes","","Ruby/classes/DL/BasicTypes.html","","<p>Adds basic type aliases to the including class for use with DL::Importer.\n<p>The aliases added are <code>uint</code> and …\n",null,0],["DL::CFunc","","Ruby/classes/DL/CFunc.html","","<p>A direct accessor to a function in a C library\n<p>Example\n\n<pre><code>libc_so = &quot;/lib64/libc.so.6&quot;\n=&gt; &quot;/lib64/libc.so.6&quot; ...\n</code></pre>\n",null,0],["DL::CParser","","Ruby/classes/DL/CParser.html","","<p>Methods for parsing C struct and C prototype signatures.\n",null,0],["DL::CPtr","","Ruby/classes/DL/CPtr.html","","<p>CPtr is a class to handle C pointers\n",null,0],["DL::CStruct","","Ruby/classes/DL/CStruct.html","","<p>C struct shell\n",null,0],["DL::CStructBuilder","","Ruby/classes/DL/CStructBuilder.html","","<p>Used to construct C classes (CUnion, CStruct, etc)\n<p>DL::Importer#struct and DL::Importer#union wrap this …\n",null,0],["DL::CStructEntity","","Ruby/classes/DL/CStructEntity.html","","<p>A C struct wrapper\n",null,0],["DL::CUnion","","Ruby/classes/DL/CUnion.html","","<p>C union shell\n",null,0],["DL::CUnionEntity","","Ruby/classes/DL/CUnionEntity.html","","<p>A C union wrapper\n",null,0],["DL::CarriedFunction","","Ruby/classes/DL/CarriedFunction.html","","",null,0],["DL::CompositeHandler","","Ruby/classes/DL/CompositeHandler.html","","",null,0],["DL::DLError","","Ruby/classes/DL/DLError.html","","<p>standard dynamic load exception\n",null,0],["DL::DLTypeError","","Ruby/classes/DL/DLTypeError.html","","<p>dynamic load incorrect type exception\n",null,0],["DL::Fiddle","","Ruby/classes/DL/Fiddle.html","","",null,0],["DL::Function","","Ruby/classes/DL/Function.html","","",null,0],["DL::Handle","","Ruby/classes/DL/Handle.html","","<p>The DL::Handle is the manner to access the dynamic library\n<p>Example\n<p>Setup\n",null,0],["DL::Importer","","Ruby/classes/DL/Importer.html","","<p>DL::Importer includes the means to dynamically load libraries and build\nmodules around them including …\n",null,0],["DL::PackInfo","","Ruby/classes/DL/PackInfo.html","","",null,0],["DL::Packer","","Ruby/classes/DL/Packer.html","","",null,0],["DL::Stack","","Ruby/classes/DL/Stack.html","","",null,0],["DL::TempFunction","","Ruby/classes/DL/TempFunction.html","","",null,0],["DL::ValueUtil","","Ruby/classes/DL/ValueUtil.html","","",null,0],["DL::Win32Types","","Ruby/classes/DL/Win32Types.html","","<p>Adds Windows type aliases to the including class for use with DL::Importer.\n<p>The aliases added are:\n<p>ATOM …\n",null,0],["DRb","","Ruby/classes/DRb.html","","<p>Overview\n<p>dRuby is a distributed object system for Ruby.  It is written in pure Ruby\nand uses its own protocol. …\n",null,0],["DRb::DRbArray","","Ruby/classes/DRb/DRbArray.html","","<p>An Array wrapper that can be sent to another server via DRb.\n<p>All entries in the array will be dumped or …\n",null,0],["DRb::DRbBadScheme","","Ruby/classes/DRb/DRbBadScheme.html","","<p>Error raised by a dRuby protocol when it doesn&#39;t support the scheme\nspecified in a URI.  See DRb::DRbProtocol …\n",null,0],["DRb::DRbBadURI","","Ruby/classes/DRb/DRbBadURI.html","","<p>Error raised by the DRbProtocol module when it cannot find any protocol\nimplementation support the scheme …\n",null,0],["DRb::DRbConn","","Ruby/classes/DRb/DRbConn.html","","<p>Class handling the connection between a DRbObject and the server the real\nobject lives on.\n<p>This class …\n",null,0],["DRb::DRbConnError","","Ruby/classes/DRb/DRbConnError.html","","<p>Error raised when an error occurs on the underlying communication protocol.\n",null,0],["DRb::DRbError","","Ruby/classes/DRb/DRbError.html","","<p>Superclass of all errors raised in the DRb module.\n",null,0],["DRb::DRbIdConv","","Ruby/classes/DRb/DRbIdConv.html","","<p>Class responsible for converting between an object and its id.\n<p>This, the default implementation, uses …\n",null,0],["DRb::DRbIdConv","","Ruby/classes/DRb/DRbIdConv.html","","<p>Class responsible for converting between an object and its id.\n<p>This, the default implementation, uses …\n",null,0],["DRb::DRbMessage","","Ruby/classes/DRb/DRbMessage.html","","<p>Handler for sending and receiving drb messages.\n<p>This takes care of the low-level marshalling and unmarshalling …\n",null,0],["DRb::DRbObject","","Ruby/classes/DRb/DRbObject.html","","<p>Object wrapping a reference to a remote drb object.\n<p>Method calls on this object are relayed to the remote …\n",null,0],["DRb::DRbObject","","Ruby/classes/DRb/DRbObject.html","","<p>Object wrapping a reference to a remote drb object.\n<p>Method calls on this object are relayed to the remote …\n",null,0],["DRb::DRbObservable","","Ruby/classes/DRb/DRbObservable.html","","<p>The Observable module extended to DRb.  See Observable for details.\n",null,0],["DRb::DRbProtocol","","Ruby/classes/DRb/DRbProtocol.html","","",null,0],["DRb::DRbRemoteError","","Ruby/classes/DRb/DRbRemoteError.html","","<p>An exception wrapping an error object\n",null,0],["DRb::DRbSSLSocket","","Ruby/classes/DRb/DRbSSLSocket.html","","<p>The protocol for DRb over an SSL socket\n<p>The URI for a DRb socket over SSL is:\n<code>drbssl://&lt;host&gt;:&lt;port&gt;?&lt;option&gt;</code> …\n",null,0],["DRb::DRbSSLSocket::SSLConfig","","Ruby/classes/DRb/DRbSSLSocket/SSLConfig.html","","<p>SSLConfig handles the needed SSL information for establishing a\nDRbSSLSocket connection, including generating …\n",null,0],["DRb::DRbServer","","Ruby/classes/DRb/DRbServer.html","","<p>Class representing a drb server instance.\n<p>A DRbServer must be running in the local process before any …\n",null,0],["DRb::DRbServerNotFound","","Ruby/classes/DRb/DRbServerNotFound.html","","<p>Error raised by the DRb module when an attempt is made to refer to the\ncontext&#39;s current drb server …\n",null,0],["DRb::DRbTCPSocket","","Ruby/classes/DRb/DRbTCPSocket.html","","<p>The default drb protocol which communicates over a TCP socket.\n<p>The DRb TCP protocol URI looks like:\n<code>druby://&lt;host&gt;:&lt;port&gt;?&lt;option&gt;</code> …\n",null,0],["DRb::DRbUNIXSocket","","Ruby/classes/DRb/DRbUNIXSocket.html","","<p>Implements DRb over a UNIX socket\n<p>DRb UNIX socket URIs look like\n<code>drbunix:&lt;path&gt;?&lt;option&gt;</code>. …\n",null,0],["DRb::DRbUndumped","","Ruby/classes/DRb/DRbUndumped.html","","<p>Mixin module making an object undumpable or unmarshallable.\n<p>If an object which includes this module is …\n",null,0],["DRb::DRbUndumped","","Ruby/classes/DRb/DRbUndumped.html","","<p>Mixin module making an object undumpable or unmarshallable.\n<p>If an object which includes this module is …\n",null,0],["DRb::DRbUnknown","","Ruby/classes/DRb/DRbUnknown.html","","<p>Class wrapping a marshalled object whose type is unknown locally.\n<p>If an object is returned by a method …\n",null,0],["DRb::DRbUnknownError","","Ruby/classes/DRb/DRbUnknownError.html","","<p>An exception wrapping a DRb::DRbUnknown object\n",null,0],["DRb::ExtServ","","Ruby/classes/DRb/ExtServ.html","","",null,0],["DRb::ExtServManager","","Ruby/classes/DRb/ExtServManager.html","","",null,0],["DRb::GW","","Ruby/classes/DRb/GW.html","","<p>The GW provides a synchronized store for participants in the gateway to\ncommunicate.\n",null,0],["DRb::GWIdConv","","Ruby/classes/DRb/GWIdConv.html","","<p>Gateway id conversion forms a gateway between different DRb protocols or\nnetworks.\n<p>The gateway needs to …\n",null,0],["DRb::TimerIdConv","","Ruby/classes/DRb/TimerIdConv.html","","<p>Timer id conversion keeps objects alive for a certain amount of time after\ntheir last access.  The default …\n",null,0],["DRb::TimerIdConv::TimerHolder2","","Ruby/classes/DRb/TimerIdConv/TimerHolder2.html","","",null,0],["DRb::TimerIdConv::TimerHolder2::InvalidIndexError","","Ruby/classes/DRb/TimerIdConv/TimerHolder2/InvalidIndexError.html","","",null,0],["Data","","Ruby/classes/Data.html","","<p>This is a recommended base class for C extensions using Data_Make_Struct or\nData_Wrap_Struct, see README …\n",null,0],["Date","","Ruby/classes/Date.html","","<p>date and datetime class - Tadayoshi Funaba 1998-2011\n<p>&#39;date&#39; provides two classes Date and DateTime …\n",null,0],["Date","","Rails/classes/Date.html","","",null,1],["DateAndTime","","Rails/classes/DateAndTime.html","","",null,1],["DateAndTime::Calculations","","Rails/classes/DateAndTime/Calculations.html","","",null,1],["DateTime","","Ruby/classes/DateTime.html","","<p>datetime\n<p>DateTime serialization/deserialization\n",null,0],["DateTime","","Rails/classes/DateTime.html","","",null,1],["DelegateClass","Object","Ruby/classes/Object.html#method-i-DelegateClass","(superclass)","<p>The primary interface to this library.  Use to setup delegation when\ndefining your class.\n\n<pre><code>class MyClass ...\n</code></pre>\n",null,0],["Delegator","","Ruby/classes/Delegator.html","","<p>This library provides three different ways to delegate method calls to an\nobject.  The easiest to use …\n",null,0],["DeleteKey","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-DeleteKey","(hkey, name)","",null,0],["DeleteValue","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-DeleteValue","(hkey, name)","",null,0],["Digest","","Ruby/classes/Digest.html","","<p>This module provides a framework for message digest libraries.\n<p>You may want to look at OpenSSL::Digest …\n",null,0],["Digest","Object","Ruby/classes/Object.html#method-i-Digest","(name)","<p>Returns a Digest subclass by <code>name</code>.\n\n<pre><code>require &#39;digest&#39;\n\nDigest(&quot;MD5&quot;)\n# =&gt; Digest::MD5\n\nDigest(&quot;Foo&quot;)\n# =&gt; ...\n</code></pre>\n",null,0],["Digest","OpenSSL","Ruby/classes/OpenSSL.html#method-c-Digest","(name)","<p>Returns a Digest subclass by <code>name</code>.\n\n<pre><code>require &#39;openssl&#39;\n\nOpenSSL::Digest(&quot;MD5&quot;)\n# =&gt; OpenSSL::Digest::MD5 ...\n</code></pre>\n",null,0],["Digest::Base","","Ruby/classes/Digest/Base.html","","<p>This abstract class provides a common interface to message digest\nimplementation classes written in  …\n",null,0],["Digest::Class","","Ruby/classes/Digest/Class.html","","<p>This module stands as a base class for digest implementation classes.\n",null,0],["Digest::HMAC","","Ruby/classes/Digest/HMAC.html","","<p>digest/hmac.rb\n<p>An experimental implementation of HMAC keyed-hashing algorithm\n<p>Overview\n",null,0],["Digest::Instance","","Ruby/classes/Digest/Instance.html","","<p>This module provides instance methods for a digest implementation object to\ncalculate message digest …\n",null,0],["Digest::MD5","","Ruby/classes/Digest/MD5.html","","",null,0],["Digest::RMD160","","Ruby/classes/Digest/RMD160.html","","",null,0],["Digest::SHA1","","Ruby/classes/Digest/SHA1.html","","",null,0],["Dir","","Ruby/classes/Dir.html","","<p>Objects of class <code>Dir</code> are directory streams representing\ndirectories in the underlying file system. They …\n",null,0],["E","BigMath","Ruby/classes/BigMath.html#method-i-E","(prec)","<p>Computes e (the base of natural logarithms) to the specified number of\ndigits of precision.\n",null,0],["E2MM","","Ruby/classes/E2MM.html","","",null,0],["ENV","","Ruby/classes/ENV.html","","<p>ENV is a hash-like accessor for environment variables.\n",null,0],["EOFError","","Ruby/classes/EOFError.html","","<p>Raised by some IO operations when reaching the end of file. Many IO methods\nexist in two forms,\n<p>one that …\n",null,0],["ERB","","Ruby/classes/ERB.html","","",null,0],["ERB","","Rails/classes/ERB.html","","",null,1],["ERB::DefMethod","","Ruby/classes/ERB/DefMethod.html","","<p>Utility module to define eRuby script as instance method.\n<p>Example\n<p>example.rhtml:\n",null,0],["ERB::Util","","Ruby/classes/ERB/Util.html","","<p>A utility module for conversion routines, often handy in HTML generation.\n",null,0],["ERB::Util","","Rails/classes/ERB/Util.html","","",null,1],["ESCDELAY","Curses","Ruby/classes/Curses.html#method-c-ESCDELAY","()","<p>Returns the total time, in milliseconds, for which curses will await a\ncharacter sequence, e.g., a function …\n",null,0],["ESCDELAY=","Curses","Ruby/classes/Curses.html#method-c-ESCDELAY-3D","(p1)","<p>Sets the ESCDELAY to Integer <code>value</code>\n",null,0],["EXCEPTION_TYPE","","Ruby/classes/EXCEPTION_TYPE.html","","",null,0],["EXCEPTION_TYPE","","Ruby/classes/EXCEPTION_TYPE.html","","",null,0],["EXCEPTION_TYPE","","Ruby/classes/EXCEPTION_TYPE.html","","",null,0],["EXCEPTION_TYPE","","Ruby/classes/EXCEPTION_TYPE.html","","",null,0],["Encoding","","Ruby/classes/Encoding.html","","<p>An Encoding instance represents a character encoding usable in Ruby. It is\ndefined as a constant under …\n",null,0],["Encoding::CompatibilityError","","Ruby/classes/Encoding/CompatibilityError.html","","<p>Raised by Encoding and String methods when the source encoding is\nincompatible with the target encoding. …\n",null,0],["Encoding::Converter","","Ruby/classes/Encoding/Converter.html","","",null,0],["Encoding::ConverterNotFoundError","","Ruby/classes/Encoding/ConverterNotFoundError.html","","<p>Raised by transcoding methods when a named encoding does not correspond\nwith a known converter.\n",null,0],["Encoding::InvalidByteSequenceError","","Ruby/classes/Encoding/InvalidByteSequenceError.html","","<p>Raised by Encoding and String methods when the string being transcoded\ncontains a byte invalid for the …\n",null,0],["Encoding::UndefinedConversionError","","Ruby/classes/Encoding/UndefinedConversionError.html","","<p>Raised by Encoding and String methods when a transcoding operation fails.\n",null,0],["EncodingError","","Ruby/classes/EncodingError.html","","<p>EncodingError is the base class for encoding errors.\n",null,0],["English","","Ruby/classes/English.html","","<p>Include the English library file in a Ruby script, and you can reference\nthe global variables such as …\n",null,0],["EnumKey","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-EnumKey","(hkey, index)","",null,0],["EnumValue","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-EnumValue","(hkey, index)","",null,0],["Enumerable","","Ruby/classes/Enumerable.html","","<p>The <code>Enumerable</code> mixin provides collection classes with several\ntraversal and searching methods, and with …\n",null,0],["Enumerable","","Rails/classes/Enumerable.html","","",null,1],["Enumerator","","Ruby/classes/Enumerator.html","","<p>A class which allows both internal and external iteration.\n<p>An Enumerator can be created by the following …\n",null,0],["Enumerator::Generator","","Ruby/classes/Enumerator/Generator.html","","<p>Generator\n",null,0],["Enumerator::Lazy","","Ruby/classes/Enumerator/Lazy.html","","<p>Lazy\n",null,0],["Enumerator::Yielder","","Ruby/classes/Enumerator/Yielder.html","","<p>Yielder\n",null,0],["Errno","","Ruby/classes/Errno.html","","<p>Ruby exception objects are subclasses of <code>Exception</code>. However,\noperating systems typically report errors …\n",null,0],["Errno::ECONNABORTED","","Ruby/classes/Errno/ECONNABORTED.html","","<p>Client sent TCP reset (RST) before server has accepted the connection\nrequested by client.\n",null,0],["Errno::ECONNRESET","","Ruby/classes/Errno/ECONNRESET.html","","<p>Remote host reset the connection request.\n",null,0],["Errno::EPROTO","","Ruby/classes/Errno/EPROTO.html","","<p>Protocol error.\n",null,0],["Etc","","Ruby/classes/Etc.html","","<p>The Etc module provides access to information typically stored in files in\nthe /etc directory on Unix …\n",null,0],["Exception","","Ruby/classes/Exception.html","","<p>Descendants of class Exception are used to communicate between Kernel#raise\nand <code>rescue</code> statements in …\n",null,0],["Exception2MessageMapper","","Ruby/classes/Exception2MessageMapper.html","","",null,0],["Fail","E2MM","Ruby/classes/E2MM.html#method-c-Fail","(klass = E2MM, err = nil, *rest)","",null,0],["Fail","E2MM","Ruby/classes/E2MM.html#method-c-Fail","(klass = E2MM, err = nil, *rest)","",null,0],["Fail","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-Fail","(err = nil, *rest)","",null,0],["Fail","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-Fail","(err = nil, *rest)","",null,0],["Fail","Sync_m::Err","Ruby/classes/Sync_m/Err.html#method-c-Fail","(*opt)","",null,0],["Fail","Sync_m::Err::LockModeFailer","Ruby/classes/Sync_m/Err/LockModeFailer.html#method-c-Fail","(mode)","",null,0],["Fail","Sync_m::Err::UnknownLocker","Ruby/classes/Sync_m/Err/UnknownLocker.html#method-c-Fail","(th)","",null,0],["FalseClass","","Ruby/classes/FalseClass.html","","<p>The global value <code>false</code> is the only instance of class\n<code>FalseClass</code> and represents a logically false value …\n",null,0],["FalseClass","","Rails/classes/FalseClass.html","","",null,1],["Fcntl","","Ruby/classes/Fcntl.html","","<p>Fcntl loads the constants defined in the system&#39;s &lt;fcntl.h&gt; C\nheader file, and used with both …\n",null,0],["Fiber","","Ruby/classes/Fiber.html","","<p>Fibers are primitives for implementing light weight cooperative concurrency\nin Ruby. Basically they are …\n",null,0],["FiberError","","Ruby/classes/FiberError.html","","<p>Raised when an invalid operation is attempted on a Fiber, in particular\nwhen attempting to call/resume …\n",null,0],["Fiddle","","Ruby/classes/Fiddle.html","","<p>A libffi wrapper for Ruby.\n<p>Description\n<p>Fiddle is an extension to translate a foreign function interface …\n",null,0],["Fiddle::BasicTypes","","Ruby/classes/Fiddle/BasicTypes.html","","<p>Adds basic type aliases to the including class for use with\nFiddle::Importer.\n<p>The aliases added are <code>uint</code> …\n",null,0],["Fiddle::CParser","","Ruby/classes/Fiddle/CParser.html","","<p>A mixin that provides methods for parsing C struct and prototype\nsignatures.\n<p>Example\n\n<pre><code>require &#39;fiddle/import&#39; ...\n</code></pre>\n",null,0],["Fiddle::CStruct","","Ruby/classes/Fiddle/CStruct.html","","<p>C struct shell\n",null,0],["Fiddle::CStructBuilder","","Ruby/classes/Fiddle/CStructBuilder.html","","<p>Used to construct C classes (CUnion, CStruct, etc)\n<p>Fiddle::Importer#struct and Fiddle::Importer#union …\n",null,0],["Fiddle::CStructEntity","","Ruby/classes/Fiddle/CStructEntity.html","","<p>A C struct wrapper\n",null,0],["Fiddle::CUnion","","Ruby/classes/Fiddle/CUnion.html","","<p>C union shell\n",null,0],["Fiddle::CUnionEntity","","Ruby/classes/Fiddle/CUnionEntity.html","","<p>A C union wrapper\n",null,0],["Fiddle::Closure","","Ruby/classes/Fiddle/Closure.html","","<p>Description\n<p>An FFI closure wrapper, for handling callbacks.\n<p>Example\n",null,0],["Fiddle::Closure::BlockCaller","","Ruby/classes/Fiddle/Closure/BlockCaller.html","","<p>Extends Fiddle::Closure to allow for building the closure in a block\n",null,0],["Fiddle::CompositeHandler","","Ruby/classes/Fiddle/CompositeHandler.html","","<p>Used internally by Fiddle::Importer\n",null,0],["Fiddle::DLError","","Ruby/classes/Fiddle/DLError.html","","<p>standard dynamic load exception\n",null,0],["Fiddle::Function","","Ruby/classes/Fiddle/Function.html","","<p>Description\n<p>A representation of a C function\n<p>Examples\n",null,0],["Fiddle::Handle","","Ruby/classes/Fiddle/Handle.html","","<p>The Fiddle::Handle is the manner to access the dynamic library\n<p>Example\n<p>Setup\n",null,0],["Fiddle::Importer","","Ruby/classes/Fiddle/Importer.html","","<p>A DSL that provides the means to dynamically load libraries and build\nmodules around them including calling …\n",null,0],["Fiddle::Pointer","","Ruby/classes/Fiddle/Pointer.html","","<p>Fiddle::Pointer is a class to handle C pointers\n",null,0],["Fiddle::Win32Types","","Ruby/classes/Fiddle/Win32Types.html","","<p>Adds Windows type aliases to the including class for use with\nFiddle::Importer.\n<p>The aliases added are: …\n",null,0],["File","","Ruby/classes/File.html","","<p>A <code>File</code> is an abstraction of any file object accessible by the\nprogram and is closely associated with …\n",null,0],["File","","Rails/classes/File.html","","",null,1],["File::Constants","","Ruby/classes/File/Constants.html","","<p>File::Constants provides file-related constants.  All possible file\nconstants are listed in the documentation …\n",null,0],["File::Stat","","Ruby/classes/File/Stat.html","","<p>Objects of class <code>File::Stat</code> encapsulate common status\ninformation for <code>File</code> objects. The information is …\n",null,0],["FileTest","","Ruby/classes/FileTest.html","","<p><code>FileTest</code> implements file test operations similar to those used\nin <code>File::Stat</code>. It exists as a standalone …\n",null,0],["FileUtils","","Ruby/classes/FileUtils.html","","<p>fileutils.rb\n<p>Copyright © 2000-2007 Minero Aoki\n<p>This program is free software. You can distribute/modify …\n",null,0],["FileUtils::DryRun","","Ruby/classes/FileUtils/DryRun.html","","<p>This module has all methods of FileUtils module, but never changes\nfiles/directories, with printing message …\n",null,0],["FileUtils::LowMethods","","Ruby/classes/FileUtils/LowMethods.html","","",null,0],["FileUtils::NoWrite","","Ruby/classes/FileUtils/NoWrite.html","","<p>This module has all methods of FileUtils module, but never changes\nfiles/directories.  This equates to …\n",null,0],["FileUtils::StreamUtils_","","Ruby/classes/FileUtils/StreamUtils_.html","","",null,0],["FileUtils::Verbose","","Ruby/classes/FileUtils/Verbose.html","","<p>This module has all methods of FileUtils module, but it outputs messages\nbefore acting.  This equates …\n",null,0],["Find","","Ruby/classes/Find.html","","<p>The <code>Find</code> module supports the top-down traversal of a set of\nfile paths.\n<p>For example, to total the size …\n",null,0],["Fixnum","","Ruby/classes/Fixnum.html","","<p>When mathn is required, Fixnum&#39;s division and exponentiation are\nenhanced to return more precise …\n",null,0],["Float","","Ruby/classes/Float.html","","<p>When mathn is required, Float is changed to handle Complex numbers.\n<p><code>Float</code> objects represent inexact real …\n",null,0],["Float","Kernel","Ruby/classes/Kernel.html#method-i-Float","(p1)","<p>Returns <em>arg</em> converted to a float. Numeric types are converted\ndirectly, the rest are converted using …\n",null,0],["Float","","Rails/classes/Float.html","","",null,1],["FloatDomainError","","Ruby/classes/FloatDomainError.html","","<p>Raised when attempting to convert special float values (in particular\ninfinite or NaN) to numerical classes …\n",null,0],["FlushKey","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-FlushKey","(hkey)","",null,0],["Foo","","Ruby/classes/Foo.html","","",null,0],["Forwardable","","Ruby/classes/Forwardable.html","","<p>The Forwardable module provides delegation of specified methods to a\ndesignated object, using the methods …\n",null,0],["GC","","Ruby/classes/GC.html","","<p>The GC module provides an interface to Ruby&#39;s mark and sweep garbage\ncollection mechanism.\n<p>Some of …\n",null,0],["GC::Profiler","","Ruby/classes/GC/Profiler.html","","<p>The GC profiler provides access to information on GC runs including time,\nlength and object space size. …\n",null,0],["GDBM","","Ruby/classes/GDBM.html","","<p>Summary\n<p>Ruby extension for GNU dbm (gdbm) – a simple database engine for storing\nkey-value pairs on disk. …\n",null,0],["GDBMError","","Ruby/classes/GDBMError.html","","",null,0],["GDBMFatalError","","Ruby/classes/GDBMFatalError.html","","",null,0],["GET","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-GET","()","<p>Override Rack&#39;s GET method to support indifferent access\n",null,1],["GServer","","Ruby/classes/GServer.html","","<p>GServer implements a generic server, featuring thread pool management,\nsimple logging, and multi-server …\n",null,0],["Gem","","Ruby/classes/Gem.html","","<p>RubyGems is the Ruby standard for publishing and managing third party\nlibraries.\n<p>For user documentation, …\n",null,0],["Gem::AvailableSet","","Ruby/classes/Gem/AvailableSet.html","","",null,0],["Gem::Command","","Ruby/classes/Gem/Command.html","","<p>Base class for all Gem commands.  When creating a new gem command, define\n#initialize, #execute, #arguments …\n",null,0],["Gem::CommandLineError","","Ruby/classes/Gem/CommandLineError.html","","",null,0],["Gem::CommandManager","","Ruby/classes/Gem/CommandManager.html","","<p>The command manager registers and installs all the individual sub-commands\nsupported by the gem command. …\n",null,0],["Gem::Commands","","Ruby/classes/Gem/Commands.html","","<p>Commands will be placed in this namespace\n",null,0],["Gem::Commands::BuildCommand","","Ruby/classes/Gem/Commands/BuildCommand.html","","",null,0],["Gem::Commands::CertCommand","","Ruby/classes/Gem/Commands/CertCommand.html","","",null,0],["Gem::Commands::CheckCommand","","Ruby/classes/Gem/Commands/CheckCommand.html","","",null,0],["Gem::Commands::CleanupCommand","","Ruby/classes/Gem/Commands/CleanupCommand.html","","",null,0],["Gem::Commands::ContentsCommand","","Ruby/classes/Gem/Commands/ContentsCommand.html","","",null,0],["Gem::Commands::DependencyCommand","","Ruby/classes/Gem/Commands/DependencyCommand.html","","",null,0],["Gem::Commands::EnvironmentCommand","","Ruby/classes/Gem/Commands/EnvironmentCommand.html","","",null,0],["Gem::Commands::FetchCommand","","Ruby/classes/Gem/Commands/FetchCommand.html","","",null,0],["Gem::Commands::GenerateIndexCommand","","Ruby/classes/Gem/Commands/GenerateIndexCommand.html","","<p>Generates a index files for use as a gem server.\n<p>See `gem help generate_index`\n",null,0],["Gem::Commands::HelpCommand","","Ruby/classes/Gem/Commands/HelpCommand.html","","",null,0],["Gem::Commands::InstallCommand","","Ruby/classes/Gem/Commands/InstallCommand.html","","<p>Gem installer command line tool\n<p>See `gem help install`\n",null,0],["Gem::Commands::ListCommand","","Ruby/classes/Gem/Commands/ListCommand.html","","<p>An alternate to Gem::Commands::QueryCommand that searches for gems starting\nwith the the supplied argument. …\n",null,0],["Gem::Commands::LockCommand","","Ruby/classes/Gem/Commands/LockCommand.html","","",null,0],["Gem::Commands::MirrorCommand","","Ruby/classes/Gem/Commands/MirrorCommand.html","","",null,0],["Gem::Commands::OutdatedCommand","","Ruby/classes/Gem/Commands/OutdatedCommand.html","","",null,0],["Gem::Commands::OwnerCommand","","Ruby/classes/Gem/Commands/OwnerCommand.html","","",null,0],["Gem::Commands::PristineCommand","","Ruby/classes/Gem/Commands/PristineCommand.html","","",null,0],["Gem::Commands::PushCommand","","Ruby/classes/Gem/Commands/PushCommand.html","","",null,0],["Gem::Commands::QueryCommand","","Ruby/classes/Gem/Commands/QueryCommand.html","","",null,0],["Gem::Commands::RdocCommand","","Ruby/classes/Gem/Commands/RdocCommand.html","","",null,0],["Gem::Commands::SearchCommand","","Ruby/classes/Gem/Commands/SearchCommand.html","","",null,0],["Gem::Commands::ServerCommand","","Ruby/classes/Gem/Commands/ServerCommand.html","","",null,0],["Gem::Commands::SetupCommand","","Ruby/classes/Gem/Commands/SetupCommand.html","","<p>Installs RubyGems itself.  This command is ordinarily only available from a\nRubyGems checkout or tarball. …\n",null,0],["Gem::Commands::SourcesCommand","","Ruby/classes/Gem/Commands/SourcesCommand.html","","",null,0],["Gem::Commands::SpecificationCommand","","Ruby/classes/Gem/Commands/SpecificationCommand.html","","",null,0],["Gem::Commands::StaleCommand","","Ruby/classes/Gem/Commands/StaleCommand.html","","",null,0],["Gem::Commands::UninstallCommand","","Ruby/classes/Gem/Commands/UninstallCommand.html","","<p>Gem uninstaller command line tool\n<p>See `gem help uninstall`\n",null,0],["Gem::Commands::UnpackCommand","","Ruby/classes/Gem/Commands/UnpackCommand.html","","",null,0],["Gem::Commands::UpdateCommand","","Ruby/classes/Gem/Commands/UpdateCommand.html","","",null,0],["Gem::Commands::WhichCommand","","Ruby/classes/Gem/Commands/WhichCommand.html","","",null,0],["Gem::Commands::YankCommand","","Ruby/classes/Gem/Commands/YankCommand.html","","",null,0],["Gem::ConfigFile","","Ruby/classes/Gem/ConfigFile.html","","<p>Gem::ConfigFile RubyGems options and gem command options from gemrc.\n<p>gemrc is a YAML file that uses strings …\n",null,0],["Gem::ConfigFile::RbConfig","","Ruby/classes/Gem/ConfigFile/RbConfig.html","","",null,0],["Gem::ConsoleUI","","Ruby/classes/Gem/ConsoleUI.html","","<p>Subclass of StreamUI that instantiates the user interaction using STDIN,\nSTDOUT, and STDERR.\n",null,0],["Gem::DefaultUserInteraction","","Ruby/classes/Gem/DefaultUserInteraction.html","","<p>Module that defines the default UserInteraction.  Any class including this\nmodule will have access to …\n",null,0],["Gem::Dependency","","Ruby/classes/Gem/Dependency.html","","",null,0],["Gem::DependencyError","","Ruby/classes/Gem/DependencyError.html","","",null,0],["Gem::DependencyInstaller","","Ruby/classes/Gem/DependencyInstaller.html","","<p>Installs a gem along with all its dependencies from local and remote gems.\n",null,0],["Gem::DependencyList","","Ruby/classes/Gem/DependencyList.html","","<p>Gem::DependencyList is used for installing and uninstalling gems in the\ncorrect order to avoid conflicts. …\n",null,0],["Gem::DependencyRemovalException","","Ruby/classes/Gem/DependencyRemovalException.html","","",null,0],["Gem::DependencyResolutionError","","Ruby/classes/Gem/DependencyResolutionError.html","","<p>Raised when a DependencyConflict reaches the toplevel. Indicates which\ndependencies were incompatible. …\n",null,0],["Gem::DependencyResolver","","Ruby/classes/Gem/DependencyResolver.html","","<p>Given a set of Gem::Dependency objects as <code>needed</code> and a way to\nquery the set of available specs via <code>set</code> …\n",null,0],["Gem::DependencyResolver::APISet","","Ruby/classes/Gem/DependencyResolver/APISet.html","","<p>The global rubygems pool, available via the rubygems.org API. Returns\ninstances of APISpecification. …\n",null,0],["Gem::DependencyResolver::APISpecification","","Ruby/classes/Gem/DependencyResolver/APISpecification.html","","<p>Represents a specification retrieved via the rubygems.org API. This is used\nto avoid having to load the …\n",null,0],["Gem::DependencyResolver::ActivationRequest","","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html","","<p>Specifies a Specification object that should be activated. Also contains a\ndependency that was used to …\n",null,0],["Gem::DependencyResolver::CurrentSet","","Ruby/classes/Gem/DependencyResolver/CurrentSet.html","","<p>A set which represents the installed gems. Respects all the normal settings\nthat control where to look …\n",null,0],["Gem::DependencyResolver::DependencyConflict","","Ruby/classes/Gem/DependencyResolver/DependencyConflict.html","","<p>Used internally to indicate that a dependency conflicted with a spec that\nwould be activated.\n",null,0],["Gem::DependencyResolver::DependencyRequest","","Ruby/classes/Gem/DependencyResolver/DependencyRequest.html","","<p>Used Internally. Wraps a Depedency object to also track which spec\ncontained the Dependency.\n",null,0],["Gem::DependencyResolver::IndexSet","","Ruby/classes/Gem/DependencyResolver/IndexSet.html","","<p>The global rubygems pool represented via the traditional source index.\n",null,0],["Gem::DependencyResolver::IndexSpecification","","Ruby/classes/Gem/DependencyResolver/IndexSpecification.html","","<p>Represents a possible Specification object returned from IndexSet. Used to\ndelay needed to download full …\n",null,0],["Gem::Deprecate","","Ruby/classes/Gem/Deprecate.html","","<p>Provides a single method <code>deprecate</code> to be used to declare when\nsomething is going away.\n\n<pre><code>class Legacy\n  ...\n</code></pre>\n",null,0],["Gem::Doctor","","Ruby/classes/Gem/Doctor.html","","<p>Cleans up after a partially-failed uninstall or for an invalid\nGem::Specification.\n<p>If a specification …\n",null,0],["Gem::DocumentError","","Ruby/classes/Gem/DocumentError.html","","",null,0],["Gem::EndOfYAMLException","","Ruby/classes/Gem/EndOfYAMLException.html","","<p>Potentially raised when a specification is validated.\n",null,0],["Gem::ErrorReason","","Ruby/classes/Gem/ErrorReason.html","","<p>FIX: does this need to exist? The subclass is the only other reference I\ncan find.\n",null,0],["Gem::Exception","","Ruby/classes/Gem/Exception.html","","<p>Base exception class for RubyGems.  All exception raised by RubyGems are a\nsubclass of this one.\n",null,0],["Gem::Ext","","Ruby/classes/Gem/Ext.html","","<p>Classes for building C extensions live here.\n",null,0],["Gem::Ext::Builder","","Ruby/classes/Gem/Ext/Builder.html","","",null,0],["Gem::Ext::CmakeBuilder","","Ruby/classes/Gem/Ext/CmakeBuilder.html","","",null,0],["Gem::Ext::ConfigureBuilder","","Ruby/classes/Gem/Ext/ConfigureBuilder.html","","",null,0],["Gem::Ext::ExtConfBuilder","","Ruby/classes/Gem/Ext/ExtConfBuilder.html","","",null,0],["Gem::Ext::RakeBuilder","","Ruby/classes/Gem/Ext/RakeBuilder.html","","",null,0],["Gem::FilePermissionError","","Ruby/classes/Gem/FilePermissionError.html","","<p>Signals that a file permission error is preventing the user from operating\non the given directory.\n",null,0],["Gem::FormatException","","Ruby/classes/Gem/FormatException.html","","<p>Used to raise parsing and loading errors\n",null,0],["Gem::GemNotFoundException","","Ruby/classes/Gem/GemNotFoundException.html","","",null,0],["Gem::GemNotInHomeException","","Ruby/classes/Gem/GemNotInHomeException.html","","<p>Raised when attempting to uninstall a gem that isn&#39;t in GEM_HOME.\n",null,0],["Gem::GemRunner","","Ruby/classes/Gem/GemRunner.html","","<p>Run an instance of the gem program.\n<p>Gem::GemRunner is only intended for internal use by RubyGems itself. …\n",null,0],["Gem::GemcutterUtilities","","Ruby/classes/Gem/GemcutterUtilities.html","","",null,0],["Gem::ImpossibleDependenciesError","","Ruby/classes/Gem/ImpossibleDependenciesError.html","","<p>Raised when dependencies conflict and create the inability to find a valid\npossible spec for a request. …\n",null,0],["Gem::Indexer","","Ruby/classes/Gem/Indexer.html","","<p>Top level class for building the gem repository index.\n",null,0],["Gem::InstallError","","Ruby/classes/Gem/InstallError.html","","",null,0],["Gem::InstallUpdateOptions","","Ruby/classes/Gem/InstallUpdateOptions.html","","<p>Mixin methods for install and update options for Gem::Commands\n",null,0],["Gem::Installer","","Ruby/classes/Gem/Installer.html","","<p>The installer installs the files contained in the .gem into the Gem.home.\n<p>Gem::Installer does the work …\n",null,0],["Gem::Installer::ExtensionBuildError","","Ruby/classes/Gem/Installer/ExtensionBuildError.html","","<p>Raised when there is an error while building extensions.\n",null,0],["Gem::InvalidSpecificationException","","Ruby/classes/Gem/InvalidSpecificationException.html","","<p>Potentially raised when a specification is validated.\n",null,0],["Gem::LoadError","","Ruby/classes/Gem/LoadError.html","","<p>Raised when RubyGems is unable to load or activate a gem.  Contains the\nname and version requirements …\n",null,0],["Gem::LocalRemoteOptions","","Ruby/classes/Gem/LocalRemoteOptions.html","","<p>Mixin methods for local and remote Gem::Command options.\n",null,0],["Gem::MockGemUi","","Ruby/classes/Gem/MockGemUi.html","","<p>This Gem::StreamUI subclass records input and output to StringIO for\nretrieval during tests.\n",null,0],["Gem::MockGemUi::InputEOFError","","Ruby/classes/Gem/MockGemUi/InputEOFError.html","","<p>Raised when you haven&#39;t provided enough input to your MockGemUi\n",null,0],["Gem::MockGemUi::SystemExitException","","Ruby/classes/Gem/MockGemUi/SystemExitException.html","","",null,0],["Gem::MockGemUi::TTY","","Ruby/classes/Gem/MockGemUi/TTY.html","","",null,0],["Gem::MockGemUi::TermError","","Ruby/classes/Gem/MockGemUi/TermError.html","","",null,0],["Gem::NameTuple","","Ruby/classes/Gem/NameTuple.html","","",null,0],["Gem::NoAliasYAMLTree","","Ruby/classes/Gem/NoAliasYAMLTree.html","","",null,0],["Gem::OperationNotSupportedError","","Ruby/classes/Gem/OperationNotSupportedError.html","","",null,0],["Gem::Package","","Ruby/classes/Gem/Package.html","","",null,0],["Gem::Package::DigestIO","","Ruby/classes/Gem/Package/DigestIO.html","","<p>IO wrapper that creates digests of contents written to the IO it wraps.\n",null,0],["Gem::Package::Error","","Ruby/classes/Gem/Package/Error.html","","",null,0],["Gem::Package::FormatError","","Ruby/classes/Gem/Package/FormatError.html","","",null,0],["Gem::Package::NonSeekableIO","","Ruby/classes/Gem/Package/NonSeekableIO.html","","",null,0],["Gem::Package::Old","","Ruby/classes/Gem/Package/Old.html","","<p>The format class knows the guts of the ancient .gem file format and\nprovides the capability to read such …\n",null,0],["Gem::Package::PathError","","Ruby/classes/Gem/Package/PathError.html","","",null,0],["Gem::Package::TarHeader","","Ruby/classes/Gem/Package/TarHeader.html","","<p>A header for a tar file\n",null,0],["Gem::Package::TarInvalidError","","Ruby/classes/Gem/Package/TarInvalidError.html","","<p>Raised when a tar file is corrupt\n",null,0],["Gem::Package::TarReader","","Ruby/classes/Gem/Package/TarReader.html","","<p>TarReader reads tar files and allows iteration over their items\n",null,0],["Gem::Package::TarReader::Entry","","Ruby/classes/Gem/Package/TarReader/Entry.html","","<p>Class for reading entries out of a tar file\n",null,0],["Gem::Package::TarReader::UnexpectedEOF","","Ruby/classes/Gem/Package/TarReader/UnexpectedEOF.html","","<p>Raised if the tar IO is not seekable\n",null,0],["Gem::Package::TarWriter","","Ruby/classes/Gem/Package/TarWriter.html","","<p>Allows writing of tar files\n",null,0],["Gem::Package::TarWriter::BoundedStream","","Ruby/classes/Gem/Package/TarWriter/BoundedStream.html","","<p>IO wrapper that allows writing a limited amount of data\n",null,0],["Gem::Package::TarWriter::FileOverflow","","Ruby/classes/Gem/Package/TarWriter/FileOverflow.html","","",null,0],["Gem::Package::TarWriter::RestrictedStream","","Ruby/classes/Gem/Package/TarWriter/RestrictedStream.html","","<p>IO wrapper that provides only #write\n",null,0],["Gem::Package::TooLongFileName","","Ruby/classes/Gem/Package/TooLongFileName.html","","",null,0],["Gem::PackageTask","","Ruby/classes/Gem/PackageTask.html","","<p>Create a package based upon a Gem::Specification.  Gem packages, as well as\nzip files and tar/gzipped …\n",null,0],["Gem::PathSupport","","Ruby/classes/Gem/PathSupport.html","","<p>Gem::PathSupport facilitates the GEM_HOME and GEM_PATH environment settings\nto the rest of RubyGems. …\n",null,0],["Gem::Platform","","Ruby/classes/Gem/Platform.html","","<p>Available list of platforms for targeting Gem installations.\n",null,0],["Gem::PlatformMismatch","","Ruby/classes/Gem/PlatformMismatch.html","","<p>Generated when trying to lookup a gem to indicate that the gem was found,\nbut that it isn&#39;t usable …\n",null,0],["Gem::RbConfig","","Ruby/classes/Gem/RbConfig.html","","",null,0],["Gem::RemoteError","","Ruby/classes/Gem/RemoteError.html","","<p>Signals that a remote operation cannot be conducted, probably due to not\nbeing connected (or just not …\n",null,0],["Gem::RemoteFetcher","","Ruby/classes/Gem/RemoteFetcher.html","","<p>RemoteFetcher handles the details of fetching gems and gem information from\na remote source.\n",null,0],["Gem::RemoteFetcher::FetchError","","Ruby/classes/Gem/RemoteFetcher/FetchError.html","","<p>A FetchError exception wraps up the various possible IO and HTTP failures\nthat could happen while downloading …\n",null,0],["Gem::RemoteFetcher::UnknownHostError","","Ruby/classes/Gem/RemoteFetcher/UnknownHostError.html","","<p>A FetchError that indicates that the reason for not being able to fetch\ndata was that the host could …\n",null,0],["Gem::RemoteInstallationCancelled","","Ruby/classes/Gem/RemoteInstallationCancelled.html","","",null,0],["Gem::RemoteInstallationSkipped","","Ruby/classes/Gem/RemoteInstallationSkipped.html","","",null,0],["Gem::RemoteSourceException","","Ruby/classes/Gem/RemoteSourceException.html","","<p>Represents an error communicating via HTTP.\n",null,0],["Gem::RequestSet","","Ruby/classes/Gem/RequestSet.html","","",null,0],["Gem::RequestSet::GemDepedencyAPI","","Ruby/classes/Gem/RequestSet/GemDepedencyAPI.html","","<p>A semi-compatible DSL for Bundler&#39;s Gemfile format\n",null,0],["Gem::Requirement","","Ruby/classes/Gem/Requirement.html","","",null,0],["Gem::Requirement::BadRequirementError","","Ruby/classes/Gem/Requirement/BadRequirementError.html","","",null,0],["Gem::Security","","Ruby/classes/Gem/Security.html","","<p>Signing gems\n<p>The Gem::Security implements cryptographic signatures for gems.  The\nsection below is a step-by-step …\n",null,0],["Gem::Security::DIGEST_ALGORITHM","","Ruby/classes/OpenSSL/Digest/SHA1.html","","",null,0],["Gem::Security::Exception","","Ruby/classes/Gem/Security/Exception.html","","<p>Gem::Security default exception type\n",null,0],["Gem::Security::KEY_ALGORITHM","","Ruby/classes/OpenSSL/PKey/RSA.html","","<p>RSA is an asymmetric public key algorithm that has been formalized in RFC\n3447. It is in widespread use …\n",null,0],["Gem::Security::Policy","","Ruby/classes/Gem/Security/Policy.html","","<p>A Gem::Security::Policy object encapsulates the settings for verifying\nsigned gem files.  This is the …\n",null,0],["Gem::Security::Signer","","Ruby/classes/Gem/Security/Signer.html","","<p>Basic OpenSSL-based package signing class.\n",null,0],["Gem::Security::TrustDir","","Ruby/classes/Gem/Security/TrustDir.html","","",null,0],["Gem::Server","","Ruby/classes/Gem/Server.html","","<p>Gem::Server and allows users to serve gems for consumption by `gem\n–remote-install`.\n<p>gem_server starts …\n",null,0],["Gem::SilentUI","","Ruby/classes/Gem/SilentUI.html","","<p>SilentUI is a UI choice that is absolutely silent.\n",null,0],["Gem::Source","","Ruby/classes/Gem/Source.html","","",null,0],["Gem::Source::Local","","Ruby/classes/Gem/Source/Local.html","","",null,0],["Gem::Source::SpecificFile","","Ruby/classes/Gem/Source/SpecificFile.html","","",null,0],["Gem::SourceFetchProblem","","Ruby/classes/Gem/SourceFetchProblem.html","","<p>An error that indicates we weren&#39;t able to fetch some data from a\nsource\n",null,0],["Gem::SourceList","","Ruby/classes/Gem/SourceList.html","","",null,0],["Gem::SpecFetcher","","Ruby/classes/Gem/SpecFetcher.html","","<p>SpecFetcher handles metadata updates from remote gem repositories.\n",null,0],["Gem::SpecificGemNotFoundException","","Ruby/classes/Gem/SpecificGemNotFoundException.html","","",null,0],["Gem::Specification","","Ruby/classes/Gem/Specification.html","","<p>The Specification class contains the information for a Gem.  Typically\ndefined in a .gemspec file or …\n",null,0],["Gem::StreamUI","","Ruby/classes/Gem/StreamUI.html","","<p>Gem::StreamUI implements a simple stream based user interface.\n",null,0],["Gem::StreamUI::SilentDownloadReporter","","Ruby/classes/Gem/StreamUI/SilentDownloadReporter.html","","<p>An absolutely silent download reporter.\n",null,0],["Gem::StreamUI::SilentProgressReporter","","Ruby/classes/Gem/StreamUI/SilentProgressReporter.html","","<p>An absolutely silent progress reporter.\n",null,0],["Gem::StreamUI::SimpleProgressReporter","","Ruby/classes/Gem/StreamUI/SimpleProgressReporter.html","","<p>A basic dotted progress reporter.\n",null,0],["Gem::StreamUI::VerboseDownloadReporter","","Ruby/classes/Gem/StreamUI/VerboseDownloadReporter.html","","<p>A progress reporter that prints out messages about the current progress.\n",null,0],["Gem::StreamUI::VerboseProgressReporter","","Ruby/classes/Gem/StreamUI/VerboseProgressReporter.html","","<p>A progress reporter that prints out messages about the current progress.\n",null,0],["Gem::SystemExitException","","Ruby/classes/Gem/SystemExitException.html","","<p>Raised to indicate that a system exit should occur with the specified\nexit_code\n",null,0],["Gem::Text","","Ruby/classes/Gem/Text.html","","<p>A collection of text-wrangling methods\n",null,0],["Gem::Uninstaller","","Ruby/classes/Gem/Uninstaller.html","","<p>An Uninstaller.\n<p>The uninstaller fires pre and post uninstall hooks.  Hooks can be added\neither through …\n",null,0],["Gem::UnsatisfiableDepedencyError","","Ruby/classes/Gem/UnsatisfiableDepedencyError.html","","<p>Raised when a dependency requests a gem for which there is no spec.\n",null,0],["Gem::UserInteraction","","Ruby/classes/Gem/UserInteraction.html","","<p>Make the default UI accessible without the “ui.” prefix.  Classes including\nthis module may …\n",null,0],["Gem::Validator","","Ruby/classes/Gem/Validator.html","","<p>Validator performs various gem file and gem database validation\n",null,0],["Gem::VerificationError","","Ruby/classes/Gem/VerificationError.html","","",null,0],["Gem::Version","","Ruby/classes/Gem/Version.html","","<p>This is needed for compatibility with older yaml gemspecs.\n<p>The Version class processes string versions …\n",null,0],["Gem::VersionOption","","Ruby/classes/Gem/VersionOption.html","","<p>Mixin methods for –version and –platform Gem::Command options.\n",null,0],["Gemfile","","Rails/files/rails/Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p>gemspec\n<p>gem &#39;mocha&#39;, &#39;~&gt; 0.13.0&#39;, require: false gem\n&#39;rack-cache&#39;, …\n",null,1],["Gemfile","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p>&lt;%= rails_gemfile_entry -%&gt;\n<p>&lt;%= database_gemfile_entry -%&gt;\n",null,1],["Gemfile","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/Gemfile.html","","<p>source “rubygems.org”\n<p>&lt;% if options -%&gt; &lt;%= &#39;# &#39; if options.dev? || options.edge\n…\n",null,1],["GetoptLong","","Ruby/classes/GetoptLong.html","","<p>The GetoptLong class allows you to parse command line options similarly to\nthe GNU getopt_long() C library …\n",null,0],["GetoptLong::AmbiguousOption","","Ruby/classes/GetoptLong/AmbiguousOption.html","","",null,0],["GetoptLong::Error","","Ruby/classes/GetoptLong/Error.html","","<p>Error types.\n",null,0],["GetoptLong::InvalidOption","","Ruby/classes/GetoptLong/InvalidOption.html","","",null,0],["GetoptLong::MissingArgument","","Ruby/classes/GetoptLong/MissingArgument.html","","",null,0],["GetoptLong::NeedlessArgument","","Ruby/classes/GetoptLong/NeedlessArgument.html","","",null,0],["HTML","","Rails/classes/HTML.html","","",null,1],["HTML::FullSanitizer","","Rails/classes/HTML/FullSanitizer.html","","",null,1],["HTML::LinkSanitizer","","Rails/classes/HTML/LinkSanitizer.html","","",null,1],["HTML::Sanitizer","","Rails/classes/HTML/Sanitizer.html","","",null,1],["HTML::Selector","","Rails/classes/HTML/Selector.html","","<p>Selects HTML elements using CSS 2 selectors.\n<p>The <code>Selector</code> class uses CSS selector expressions to match …\n",null,1],["HTML::Tag","","Rails/classes/HTML/Tag.html","","",null,1],["HTML::WhiteListSanitizer","","Rails/classes/HTML/WhiteListSanitizer.html","","",null,1],["HTTPMovedTemporarily","","Ruby/classes/HTTPMovedTemporarily.html","","",null,0],["HTTPMultipleChoice","","Ruby/classes/HTTPMultipleChoice.html","","<p>208 Already Reported - RFC 5842; experimental 226 IM Used - RFC 3229; no\nfamous implementation known …\n",null,0],["HTTPRequestURITooLarge","","Ruby/classes/HTTPRequestURITooLarge.html","","",null,0],["Hash","","Ruby/classes/Hash.html","","<p>A Hash is a dictionary-like collection of unique keys and their values.\nAlso called associative arrays, …\n",null,0],["Hash","Kernel","Ruby/classes/Kernel.html#method-i-Hash","(p1)","<p>Converts <em>arg</em> to a <code>Hash</code> by calling\n<em>arg</em><code>.to_hash</code>. Returns an empty <code>Hash</code> when\n<em>arg</em> is <code>nil</code> or <code>[]</code>.\n\n<pre><code>Hash([])  ...</code></pre>\n",null,0],["Hash","","Rails/classes/Hash.html","","",null,1],["HttpServer","","Ruby/classes/HttpServer.html","","<p>Implements a simple HTTP-server by using John W. Small&#39;s\n(jsmall@laser.net) ruby-generic-server: …\n",null,0],["HttpServer::Request","","Ruby/classes/HttpServer/Request.html","","",null,0],["HttpServer::Response","","Ruby/classes/HttpServer/Response.html","","",null,0],["HttpServer::Table","","Ruby/classes/HttpServer/Table.html","","<p>A case-insensitive Hash class for HTTP header\n",null,0],["I","Matrix","Ruby/classes/Matrix.html#method-c-I","(n)","",null,0],["I18n","","Rails/classes/I18n.html","","",null,1],["I18n::Railtie","","Rails/classes/I18n/Railtie.html","","",null,1],["IO","","Ruby/classes/IO.html","","<p>Expect library adds the IO instance method #expect, which does similar act\nto tcl&#39;s expect extension. …\n",null,0],["IO::WaitReadable","","Ruby/classes/IO/WaitReadable.html","","",null,0],["IO::WaitWritable","","Ruby/classes/IO/WaitWritable.html","","",null,0],["IO::readable","","Ruby/classes/IO/readable.html","","",null,0],["IO::writable","","Ruby/classes/IO/writable.html","","",null,0],["IOError","","Ruby/classes/IOError.html","","<p>Raised when an IO operation fails.\n\n<pre><code>File.open(&quot;/etc/hosts&quot;) {|f| f &lt;&lt; &quot;example&quot;}\n  #=&gt; IOError: not opened ...\n</code></pre>\n",null,0],["IPAddr","","Ruby/classes/IPAddr.html","","<p>IPAddr provides a set of methods to manipulate an IP address.  Both IPv4\nand IPv6 are supported.\n<p>Example …\n",null,0],["IPAddr::AddressFamilyError","","Ruby/classes/IPAddr/AddressFamilyError.html","","<p>Raised when the address family is invalid such as an address with an\nunsupported family, an address with …\n",null,0],["IPAddr::Error","","Ruby/classes/IPAddr/Error.html","","<p>Generic IPAddr related error. Exceptions raised in this class should\ninherit from Error.\n",null,0],["IPAddr::InvalidAddressError","","Ruby/classes/IPAddr/InvalidAddressError.html","","<p>Raised when the provided IP address is an invalid address.\n",null,0],["IPAddr::InvalidPrefixError","","Ruby/classes/IPAddr/InvalidPrefixError.html","","<p>Raised when the address is an invalid length.\n",null,0],["IPSocket","","Ruby/classes/IPSocket.html","","<p>IPSocket is the super class of TCPSocket and UDPSocket.\n",null,0],["IRB","","Ruby/classes/IRB.html","","<p>IRB stands for “interactive ruby” and is a tool to interactively execute\nruby expressions read …\n",null,0],["IRB::Abort","","Ruby/classes/IRB/Abort.html","","<p>An exception raised by IRB.irb_abort\n",null,0],["IRB::Context","","Ruby/classes/IRB/Context.html","","<p>A class that wraps the current state of the irb session, including the\nconfiguration of IRB.conf.\n",null,0],["IRB::ContextExtender","","Ruby/classes/IRB/ContextExtender.html","","<p>Extends methods for the Context module\n",null,0],["IRB::ExtendCommand","","Ruby/classes/IRB/ExtendCommand.html","","",null,0],["IRB::ExtendCommand::ChangeWorkspace","","Ruby/classes/IRB/ExtendCommand/ChangeWorkspace.html","","",null,0],["IRB::ExtendCommand::CurrentWorkingWorkspace","","Ruby/classes/IRB/ExtendCommand/CurrentWorkingWorkspace.html","","",null,0],["IRB::ExtendCommand::Foreground","","Ruby/classes/IRB/ExtendCommand/Foreground.html","","",null,0],["IRB::ExtendCommand::Fork","","Ruby/classes/IRB/ExtendCommand/Fork.html","","",null,0],["IRB::ExtendCommand::Help","","Ruby/classes/IRB/ExtendCommand/Help.html","","",null,0],["IRB::ExtendCommand::IrbCommand","","Ruby/classes/IRB/ExtendCommand/IrbCommand.html","","",null,0],["IRB::ExtendCommand::Jobs","","Ruby/classes/IRB/ExtendCommand/Jobs.html","","",null,0],["IRB::ExtendCommand::Kill","","Ruby/classes/IRB/ExtendCommand/Kill.html","","",null,0],["IRB::ExtendCommand::Load","","Ruby/classes/IRB/ExtendCommand/Load.html","","",null,0],["IRB::ExtendCommand::Nop","","Ruby/classes/IRB/ExtendCommand/Nop.html","","",null,0],["IRB::ExtendCommand::PopWorkspace","","Ruby/classes/IRB/ExtendCommand/PopWorkspace.html","","",null,0],["IRB::ExtendCommand::PushWorkspace","","Ruby/classes/IRB/ExtendCommand/PushWorkspace.html","","",null,0],["IRB::ExtendCommand::Require","","Ruby/classes/IRB/ExtendCommand/Require.html","","",null,0],["IRB::ExtendCommand::Source","","Ruby/classes/IRB/ExtendCommand/Source.html","","",null,0],["IRB::ExtendCommand::Workspaces","","Ruby/classes/IRB/ExtendCommand/Workspaces.html","","",null,0],["IRB::ExtendCommandBundle","","Ruby/classes/IRB/ExtendCommandBundle.html","","<p>Installs the default irb extensions command bundle.\n",null,0],["IRB::FileInputMethod","","Ruby/classes/IRB/FileInputMethod.html","","<p>Use a File for IO with irb, see InputMethod\n",null,0],["IRB::Frame","","Ruby/classes/IRB/Frame.html","","",null,0],["IRB::InputMethod","","Ruby/classes/IRB/InputMethod.html","","",null,0],["IRB::Inspector","","Ruby/classes/IRB/Inspector.html","","<p>An irb inspector\n<p>In order to create your own custom inspector there are two things you\nshould be aware …\n",null,0],["IRB::Irb","","Ruby/classes/IRB/Irb.html","","",null,0],["IRB::IrbLoader","","Ruby/classes/IRB/IrbLoader.html","","<p>Provides a few commands for loading files within an irb session.\n<p>See ExtendCommandBundle for more information. …\n",null,0],["IRB::JobManager","","Ruby/classes/IRB/JobManager.html","","",null,0],["IRB::LoadAbort","","Ruby/classes/IRB/LoadAbort.html","","<p>Raised in the event of an exception in a file loaded from an Irb session\n",null,0],["IRB::Locale","","Ruby/classes/IRB/Locale.html","","",null,0],["IRB::MethodExtender","","Ruby/classes/IRB/MethodExtender.html","","<p>A convenience module for extending Ruby methods.\n",null,0],["IRB::Notifier","","Ruby/classes/IRB/Notifier.html","","<p>An output formatter used internally by the lexer.\n",null,0],["IRB::Notifier::AbstractNotifier","","Ruby/classes/IRB/Notifier/AbstractNotifier.html","","<p>An abstract class, or superclass, for CompositeNotifier and LeveledNotifier\nto inherit. It provides several …\n",null,0],["IRB::Notifier::CompositeNotifier","","Ruby/classes/IRB/Notifier/CompositeNotifier.html","","<p>A class that can be used to create a group of notifier objects with the\nintent of representing a leveled …\n",null,0],["IRB::Notifier::LeveledNotifier","","Ruby/classes/IRB/Notifier/LeveledNotifier.html","","<p>A leveled notifier is comparable to the composite group from\nCompositeNotifier#notifiers.\n",null,0],["IRB::Notifier::NoMsgNotifier","","Ruby/classes/IRB/Notifier/NoMsgNotifier.html","","<p>NoMsgNotifier is a LeveledNotifier that&#39;s used as the default notifier\nwhen creating a new CompositeNotifier …\n",null,0],["IRB::OutputMethod","","Ruby/classes/IRB/OutputMethod.html","","<p>An abstract output class for IO in irb. This is mainly used internally by\nIRB::Notifier. You can define …\n",null,0],["IRB::ReadlineInputMethod","","Ruby/classes/IRB/ReadlineInputMethod.html","","",null,0],["IRB::SLex","","Ruby/classes/IRB/SLex.html","","",null,0],["IRB::SLex::Node","","Ruby/classes/IRB/SLex/Node.html","","",null,0],["IRB::StdioInputMethod","","Ruby/classes/IRB/StdioInputMethod.html","","",null,0],["IRB::StdioOutputMethod","","Ruby/classes/IRB/StdioOutputMethod.html","","<p>A standard output printer\n",null,0],["IRB::WorkSpace","","Ruby/classes/IRB/WorkSpace.html","","",null,0],["IndexError","","Ruby/classes/IndexError.html","","<p>Raised when the given index is invalid.\n\n<pre><code>a = [:foo, :bar]\na.fetch(0)   #=&gt; :foo\na[4]         #=&gt; nil\na.fetch(4) ...\n</code></pre>\n",null,0],["Integer","","Ruby/classes/Integer.html","","<p>Add double dispatch to Integer\n<p><code>Integer</code> is the basis for the two concrete classes that hold\nwhole numbers, …\n",null,0],["Integer","Kernel","Ruby/classes/Kernel.html#method-i-Integer","(p1, p2 = v2)","<p>Converts <em>arg</em> to a <code>Fixnum</code> or <code>Bignum</code>.\nNumeric types are converted directly (with floating point numbers …\n",null,0],["Integer","","Rails/classes/Integer.html","","",null,1],["Interrupt","","Ruby/classes/Interrupt.html","","<p>Raised with the interrupt signal is received, typically because the user\npressed on Control-C (on most …\n",null,0],["JSON","","Ruby/classes/JSON.html","","<p>JavaScript Object Notation (JSON)\n<p>JSON is a lightweight data-interchange format. It is easy for us humans …\n",null,0],["JSON::CircularDatastructure","","Ruby/classes/JSON/CircularDatastructure.html","","",null,0],["JSON::Ext","","Ruby/classes/JSON/Ext.html","","<p>This module holds all the modules/classes that implement JSON&#39;s\nfunctionality as C extensions.\n",null,0],["JSON::GeneratorError","","Ruby/classes/JSON/GeneratorError.html","","<p>This exception is raised if a generator or unparser error occurs.\n",null,0],["JSON::GenericObject","","Ruby/classes/JSON/GenericObject.html","","",null,0],["JSON::JSONError","","Ruby/classes/JSON/JSONError.html","","<p>The base exception for JSON errors.\n",null,0],["JSON::MissingUnicodeSupport","","Ruby/classes/JSON/MissingUnicodeSupport.html","","<p>This exception is raised if the required unicode support is missing on the\nsystem. Usually this means …\n",null,0],["JSON::NestingError","","Ruby/classes/JSON/NestingError.html","","<p>This exception is raised if the nesting of parsed data structures is too\ndeep.\n",null,0],["JSON::ParserError","","Ruby/classes/JSON/ParserError.html","","<p>This exception is raised if a parser error occurs.\n",null,0],["JSON::UnparserError","","Ruby/classes/JSON/GeneratorError.html","","<p>This exception is raised if a generator or unparser error occurs.\n",null,0],["Jacobian","","Ruby/classes/Jacobian.html","","<p>require &#39;bigdecimal/jacobian&#39;\n<p>Provides methods to compute the Jacobian matrix of a set of equations …\n",null,0],["JobManager","IRB","Ruby/classes/IRB.html#method-c-JobManager","()","<p>The current JobManager in the session\n",null,0],["Kconv","","Ruby/classes/Kconv.html","","<p>Kanji Converter for Ruby.\n",null,0],["Kernel","","Ruby/classes/Kernel.html","","<p>The Kernel module is included by class Object, so its methods are available\nin every Ruby object.\n<p>The …\n",null,0],["Kernel","","Rails/classes/Kernel.html","","",null,1],["KeyError","","Ruby/classes/KeyError.html","","<p>Raised when the specified key is not found. It is a subclass of IndexError.\n\n<pre><code>h = {&quot;foo&quot; =&gt; :bar}\nh.fetch(&quot;foo&quot;) ...\n</code></pre>\n",null,0],["LICENSE","","Ruby/files/ruby/lib/rubygems/LICENSE_txt.html","","<p>RubyGems is copyrighted free software by Chad Fowler, Rich Kilmer, Jim\nWeirich and others.  You can redistribute …\n",null,0],["LOG_MASK","Syslog::Macros","Ruby/classes/Syslog/Macros.html#method-i-LOG_MASK","(p1)","<p>Generates a mask bit for a priority level. See #mask=\n",null,0],["LOG_UPTO","Syslog::Macros","Ruby/classes/Syslog/Macros.html#method-i-LOG_UPTO","(p1)","<p>Generates a mask value for priority levels at or below the level specified.\nSee #mask=\n",null,0],["LUSolve","","Ruby/classes/LUSolve.html","","<p>Solves a*x = b for x, using LU decomposition.\n",null,0],["LoadError","","Ruby/classes/LoadError.html","","<p>Raised when a file required (a Ruby script, extension library, …) fails to\nload.\n\n<pre><code>require &#39;this/file/does/not/exist&#39;\n</code></pre>\n",null,0],["LoadError","","Rails/classes/LoadError.html","","",null,1],["LocalJumpError","","Ruby/classes/LocalJumpError.html","","<p>Raised when Ruby can&#39;t yield as requested.\n<p>A typical scenario is attempting to yield when no block …\n",null,0],["Logger","","Ruby/classes/Logger.html","","<p>Description\n<p>The Logger class provides a simple but sophisticated logging utility that\nyou can use to output …\n",null,0],["Logger","","Rails/classes/Logger.html","","",null,1],["Logger::Application","","Ruby/classes/Logger/Application.html","","<p>Description\n<p>Application — Add logging support to your application.\n<p>Usage\n",null,0],["Logger::Formatter","","Ruby/classes/Logger/Formatter.html","","<p>Default formatter for log messages.\n",null,0],["Logger::LogDevice","","Ruby/classes/Logger/LogDevice.html","","<p>Device used for logging messages.\n",null,0],["Logger::LogDevice::LogDeviceMutex","","Ruby/classes/Logger/LogDevice/LogDeviceMutex.html","","",null,0],["Logger::Severity","","Ruby/classes/Logger/Severity.html","","<p>Logging severity.\n",null,0],["Logger::SimpleFormatter","","Rails/classes/Logger/SimpleFormatter.html","","<p>Simple formatter which only displays the message.\n",null,1],["LoggerSilence","","Rails/classes/LoggerSilence.html","","",null,1],["MIT-LICENSE","","Rails/files/rails/activerecord/MIT-LICENSE.html","","<p>Copyright © 2004-2013 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/activemodel/MIT-LICENSE.html","","<p>Copyright © 2004-2013 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/activesupport/MIT-LICENSE.html","","<p>Copyright © 2005-2013 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/actionmailer/MIT-LICENSE.html","","<p>Copyright © 2004-2013 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/railties/MIT-LICENSE.html","","<p>Copyright © 2004-2013 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/MIT-LICENSE.html","","<p>Copyright &lt;%= Date.today.year %&gt; YOURNAME\n<p>Permission is hereby granted, free of charge, to any person …\n",null,1],["MIT-LICENSE","","Rails/files/rails/actionpack/MIT-LICENSE.html","","<p>Copyright © 2004-2013 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MakeMakefile","","Ruby/classes/MakeMakefile.html","","<p>mkmf.rb is used by ruby C extensions to generate a Makefile which will\ncorrectly compile and link the …\n",null,0],["MakeMakefile::Logging","","Ruby/classes/MakeMakefile/Logging.html","","",null,0],["MakeMakefile::RbConfig","","Ruby/classes/MakeMakefile/RbConfig.html","","",null,0],["MakeMakefile::STRING_OR_FAILED_FORMAT","","Ruby/classes/MakeMakefile/STRING_OR_FAILED_FORMAT.html","","",null,0],["Marshal","","Ruby/classes/Marshal.html","","<p>The marshaling library converts collections of Ruby objects into a byte\nstream, allowing them to be stored …\n",null,0],["Marshal","","Rails/classes/Marshal.html","","",null,1],["MatchData","","Ruby/classes/MatchData.html","","<p><code>MatchData</code> is the type of the special variable <code>$~</code>,\nand is the type of the object returned by <code>Regexp#match</code> …\n",null,0],["Math","","Ruby/classes/Math.html","","<p>When mathn is required, the Math module changes as follows:\n<p>Standard Math module behaviour:\n\n<pre><code>Math.sqrt(4/9) ...</code></pre>\n",null,0],["Math::DomainError","","Ruby/classes/Math/DomainError.html","","<p>Raised when a mathematical function is evaluated outside of its domain of\ndefinition.\n<p>For example, since …\n",null,0],["Matrix","","Ruby/classes/Matrix.html","","<p>The <code>Matrix</code> class represents a mathematical matrix. It provides\nmethods for creating matrices, operating …\n",null,0],["Matrix::EigenvalueDecomposition","","Ruby/classes/Matrix/EigenvalueDecomposition.html","","<p>Eigenvalues and eigenvectors of a real matrix.\n<p>Computes the eigenvalues and eigenvectors of a matrix  …\n",null,0],["Matrix::LUPDecomposition","","Ruby/classes/Matrix/LUPDecomposition.html","","<p>For an m-by-n matrix A with m &gt;= n, the LU decomposition is an m-by-n\nunit lower triangular matrix …\n",null,0],["Method","","Ruby/classes/Method.html","","<p>Method\n",null,0],["Mime","","Rails/classes/Mime.html","","",null,1],["Mime::Mimes","","Rails/classes/Mime/Mimes.html","","",null,1],["Mime::NullType","","Rails/classes/Mime/NullType.html","","",null,1],["Mime::Type","","Rails/classes/Mime/Type.html","","<p>Encapsulates the notion of a mime type. Can be used at render time, for\nexample, with:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">PostsController</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["Module","","Ruby/classes/Module.html","","<p>Core extension library\n<p>Rake extensions to Module.\n<p>A <code>Module</code> is a collection of methods and constants. The …\n",null,0],["Module","","Rails/classes/Module.html","","<p>Extends the API for constants to be able to deal with qualified names.\nArguments are assumed to be relative …\n",null,1],["Monitor","","Ruby/classes/Monitor.html","","<p>Use the Monitor class when you want to have a lock object for blocks with\nmutual exclusion.\n\n<pre><code>require &#39;monitor&#39; ...\n</code></pre>\n",null,0],["MonitorMixin","","Ruby/classes/MonitorMixin.html","","<p>In concurrent programming, a monitor is an object or module intended to be\nused safely by more than one …\n",null,0],["MonitorMixin::ConditionVariable","","Ruby/classes/MonitorMixin/ConditionVariable.html","","<p>FIXME: This isn&#39;t documented in Nutshell.\n<p>Since MonitorMixin.new_cond returns a ConditionVariable …\n",null,0],["MonitorMixin::ConditionVariable::Timeout","","Ruby/classes/MonitorMixin/ConditionVariable/Timeout.html","","",null,0],["Mutex","","Ruby/classes/Mutex.html","","<p>Mutex implements a simple semaphore that can be used to coordinate access\nto shared data from multiple …\n",null,0],["Mutex_m","","Ruby/classes/Mutex_m.html","","<p>mutex_m.rb\n<p>When &#39;mutex_m&#39; is required, any object that extends or includes\nMutex_m will be treated …\n",null,0],["Mysql","","Rails/classes/Mysql.html","","",null,1],["Mysql::Result","","Rails/classes/Mysql/Result.html","","",null,1],["Mysql::Stmt","","Rails/classes/Mysql/Stmt.html","","",null,1],["Mysql::Time","","Rails/classes/Mysql/Time.html","","",null,1],["NEWS","","Ruby/files/ruby/NEWS.html","","<p>NEWS for Ruby 2.0.0\n<p>This document is a list of user visible feature changes made between\nreleases except …\n",null,0],["NEWS-1.8.7","","Ruby/files/ruby/doc/NEWS-1_8_7.html","","<p>NEWS for Ruby 1.8.7\n<p>This document is a list of user visible feature changes made between\nreleases except …\n",null,0],["NEWS-1.9.1","","Ruby/files/ruby/doc/NEWS-1_9_1.html","","<p>NEWS for Ruby 1.9.1\n<p>This document is a list of user visible feature changes made between\nreleases except …\n",null,0],["NEWS-1.9.2","","Ruby/files/ruby/doc/NEWS-1_9_2.html","","<p>NEWS for Ruby 1.9.2\n<p>This document is a list of user visible feature changes made between\nreleases except …\n",null,0],["NEWS-1.9.3","","Ruby/files/ruby/doc/NEWS-1_9_3.html","","<p>NEWS for Ruby 1.9.3\n<p>This document is a list of user visible feature changes made between\nreleases except …\n",null,0],["NKF","","Ruby/classes/NKF.html","","<p>NKF - Ruby extension for Network Kanji Filter\n<p>Description\n<p>This is a Ruby Extension version of nkf (Network …\n",null,0],["NQXML","","Ruby/classes/NQXML.html","","",null,0],["NQXML::Node","","Ruby/classes/NQXML/Node.html","","",null,0],["NameError","","Ruby/classes/NameError.html","","<p>Raised when a given name is invalid or undefined.\n\n<pre><code>puts foo</code></pre>\n<p><em>raises the exception:</em>\n",null,0],["NameError","","Rails/classes/NameError.html","","",null,1],["Net","","Ruby/classes/Net.html","","",null,0],["Net::APOP","","Ruby/classes/Net/APOP.html","","<p>This class is equivalent to POP3, except that it uses APOP authentication.\n",null,0],["Net::APOPSession","","Ruby/classes/Net/APOP.html","","<p>This class is equivalent to POP3, except that it uses APOP authentication.\n",null,0],["Net::FTP","","Ruby/classes/Net/FTP.html","","<p>This class implements the File Transfer Protocol.  If you have used a\ncommand-line FTP program, and are …\n",null,0],["Net::FTP::BufferedSocket","","Ruby/classes/Net/FTP/BufferedSocket.html","","",null,0],["Net::FTP::NullSocket","","Ruby/classes/Net/FTP/NullSocket.html","","",null,0],["Net::FTPConnectionError","","Ruby/classes/Net/FTPConnectionError.html","","",null,0],["Net::FTPError","","Ruby/classes/Net/FTPError.html","","",null,0],["Net::FTPPermError","","Ruby/classes/Net/FTPPermError.html","","",null,0],["Net::FTPProtoError","","Ruby/classes/Net/FTPProtoError.html","","",null,0],["Net::FTPReplyError","","Ruby/classes/Net/FTPReplyError.html","","",null,0],["Net::FTPTempError","","Ruby/classes/Net/FTPTempError.html","","",null,0],["Net::HTTP","","Ruby/classes/Net/HTTP.html","","<p>An HTTP client API for Ruby.\n<p>Net::HTTP provides a rich library which can be used to build HTTP\nuser-agents. …\n",null,0],["Net::HTTP::Copy","","Ruby/classes/Net/HTTP/Copy.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,0],["Net::HTTP::Delete","","Ruby/classes/Net/HTTP/Delete.html","","<p>See Net::HTTPGenericRequest for attributes and methods. See Net::HTTP for\nusage examples.\n",null,0],["Net::HTTP::Get","","Ruby/classes/Net/HTTP/Get.html","","<p>See Net::HTTPGenericRequest for attributes and methods. See Net::HTTP for\nusage examples.\n",null,0],["Net::HTTP::Head","","Ruby/classes/Net/HTTP/Head.html","","<p>See Net::HTTPGenericRequest for attributes and methods. See Net::HTTP for\nusage examples.\n",null,0],["Net::HTTP::Lock","","Ruby/classes/Net/HTTP/Lock.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,0],["Net::HTTP::Mkcol","","Ruby/classes/Net/HTTP/Mkcol.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,0],["Net::HTTP::Move","","Ruby/classes/Net/HTTP/Move.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,0],["Net::HTTP::Options","","Ruby/classes/Net/HTTP/Options.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,0],["Net::HTTP::Patch","","Ruby/classes/Net/HTTP/Patch.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,0],["Net::HTTP::Post","","Ruby/classes/Net/HTTP/Post.html","","<p>See Net::HTTPGenericRequest for attributes and methods. See Net::HTTP for\nusage examples.\n",null,0],["Net::HTTP::Propfind","","Ruby/classes/Net/HTTP/Propfind.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,0],["Net::HTTP::Proppatch","","Ruby/classes/Net/HTTP/Proppatch.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,0],["Net::HTTP::Put","","Ruby/classes/Net/HTTP/Put.html","","<p>See Net::HTTPGenericRequest for attributes and methods. See Net::HTTP for\nusage examples.\n",null,0],["Net::HTTP::Trace","","Ruby/classes/Net/HTTP/Trace.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,0],["Net::HTTP::Unlock","","Ruby/classes/Net/HTTP/Unlock.html","","<p>See Net::HTTPGenericRequest for attributes and methods.\n",null,0],["Net::HTTPAccepted","","Ruby/classes/Net/HTTPAccepted.html","","",null,0],["Net::HTTPBadGateway","","Ruby/classes/Net/HTTPBadGateway.html","","",null,0],["Net::HTTPBadRequest","","Ruby/classes/Net/HTTPBadRequest.html","","<p>308 Permanent Redirect - in draft\n",null,0],["Net::HTTPBadResponse","","Ruby/classes/Net/HTTPBadResponse.html","","",null,0],["Net::HTTPClientError","","Ruby/classes/Net/HTTPClientError.html","","",null,0],["Net::HTTPConflict","","Ruby/classes/Net/HTTPConflict.html","","",null,0],["Net::HTTPContinue","","Ruby/classes/Net/HTTPContinue.html","","",null,0],["Net::HTTPCreated","","Ruby/classes/Net/HTTPCreated.html","","",null,0],["Net::HTTPError","","Ruby/classes/Net/HTTPError.html","","",null,0],["Net::HTTPExceptions","","Ruby/classes/Net/HTTPExceptions.html","","<p>Net::HTTP exception class. You cannot use Net::HTTPExceptions directly;\ninstead, you must use its subclasses. …\n",null,0],["Net::HTTPExpectationFailed","","Ruby/classes/Net/HTTPExpectationFailed.html","","",null,0],["Net::HTTPFailedDependency","","Ruby/classes/Net/HTTPFailedDependency.html","","",null,0],["Net::HTTPFatalError","","Ruby/classes/Net/HTTPFatalError.html","","",null,0],["Net::HTTPForbidden","","Ruby/classes/Net/HTTPForbidden.html","","",null,0],["Net::HTTPFound","","Ruby/classes/Net/HTTPFound.html","","",null,0],["Net::HTTPGatewayTimeOut","","Ruby/classes/Net/HTTPGatewayTimeOut.html","","",null,0],["Net::HTTPGenericRequest","","Ruby/classes/Net/HTTPGenericRequest.html","","<p>HTTPGenericRequest is the parent of the HTTPRequest class. Do not use this\ndirectly; use a subclass of …\n",null,0],["Net::HTTPGone","","Ruby/classes/Net/HTTPGone.html","","",null,0],["Net::HTTPHeader","","Ruby/classes/Net/HTTPHeader.html","","<p>The HTTPHeader module defines methods for reading and writing HTTP headers.\n<p>It is used as a mixin by other …\n",null,0],["Net::HTTPHeaderSyntaxError","","Ruby/classes/Net/HTTPHeaderSyntaxError.html","","",null,0],["Net::HTTPInformation","","Ruby/classes/Net/HTTPInformation.html","","",null,0],["Net::HTTPInsufficientStorage","","Ruby/classes/Net/HTTPInsufficientStorage.html","","<p>506 Variant Also Negotiates - RFC 2295; experimental\n",null,0],["Net::HTTPInternalServerError","","Ruby/classes/Net/HTTPInternalServerError.html","","<p>444 No Response - Nginx 449 Retry With - Microsoft 450 Blocked by Windows\nParental Controls - Microsoft …\n",null,0],["Net::HTTPLengthRequired","","Ruby/classes/Net/HTTPLengthRequired.html","","",null,0],["Net::HTTPLocked","","Ruby/classes/Net/HTTPLocked.html","","",null,0],["Net::HTTPMethodNotAllowed","","Ruby/classes/Net/HTTPMethodNotAllowed.html","","",null,0],["Net::HTTPMovedPermanently","","Ruby/classes/Net/HTTPMovedPermanently.html","","",null,0],["Net::HTTPMultiStatus","","Ruby/classes/Net/HTTPMultiStatus.html","","",null,0],["Net::HTTPMultipleChoices","","Ruby/classes/Net/HTTPMultipleChoices.html","","<p>208 Already Reported - RFC 5842; experimental 226 IM Used - RFC 3229; no\nfamous implementation known …\n",null,0],["Net::HTTPNetworkAuthenticationRequired","","Ruby/classes/Net/HTTPNetworkAuthenticationRequired.html","","<p>508 Loop Detected - RFC 5842; experimental 509 Bandwidth Limit Exceeded -\nApache bw/limited extension …\n",null,0],["Net::HTTPNoContent","","Ruby/classes/Net/HTTPNoContent.html","","",null,0],["Net::HTTPNonAuthoritativeInformation","","Ruby/classes/Net/HTTPNonAuthoritativeInformation.html","","",null,0],["Net::HTTPNotAcceptable","","Ruby/classes/Net/HTTPNotAcceptable.html","","",null,0],["Net::HTTPNotFound","","Ruby/classes/Net/HTTPNotFound.html","","",null,0],["Net::HTTPNotImplemented","","Ruby/classes/Net/HTTPNotImplemented.html","","",null,0],["Net::HTTPNotModified","","Ruby/classes/Net/HTTPNotModified.html","","",null,0],["Net::HTTPOK","","Ruby/classes/Net/HTTPOK.html","","<p>102 - RFC 2518; removed in RFC 4918\n",null,0],["Net::HTTPPartialContent","","Ruby/classes/Net/HTTPPartialContent.html","","",null,0],["Net::HTTPPaymentRequired","","Ruby/classes/Net/HTTPPaymentRequired.html","","",null,0],["Net::HTTPPreconditionFailed","","Ruby/classes/Net/HTTPPreconditionFailed.html","","",null,0],["Net::HTTPPreconditionRequired","","Ruby/classes/Net/HTTPPreconditionRequired.html","","",null,0],["Net::HTTPProxyAuthenticationRequired","","Ruby/classes/Net/HTTPProxyAuthenticationRequired.html","","",null,0],["Net::HTTPRedirection","","Ruby/classes/Net/HTTPRedirection.html","","",null,0],["Net::HTTPRequest","","Ruby/classes/Net/HTTPRequest.html","","<p>HTTP request class. This class wraps together the request header and the\nrequest path. You cannot use …\n",null,0],["Net::HTTPRequestEntityTooLarge","","Ruby/classes/Net/HTTPRequestEntityTooLarge.html","","",null,0],["Net::HTTPRequestHeaderFieldsTooLarge","","Ruby/classes/Net/HTTPRequestHeaderFieldsTooLarge.html","","",null,0],["Net::HTTPRequestTimeOut","","Ruby/classes/Net/HTTPRequestTimeOut.html","","",null,0],["Net::HTTPRequestURITooLong","","Ruby/classes/Net/HTTPRequestURITooLong.html","","",null,0],["Net::HTTPRequestedRangeNotSatisfiable","","Ruby/classes/Net/HTTPRequestedRangeNotSatisfiable.html","","",null,0],["Net::HTTPResetContent","","Ruby/classes/Net/HTTPResetContent.html","","",null,0],["Net::HTTPResponse","","Ruby/classes/Net/HTTPResponse.html","","<p>HTTP response class.\n<p>This class wraps together the response header and the response body (the\nentity requested). …\n",null,0],["Net::HTTPRetriableError","","Ruby/classes/Net/HTTPRetriableError.html","","",null,0],["Net::HTTPSeeOther","","Ruby/classes/Net/HTTPSeeOther.html","","",null,0],["Net::HTTPServerError","","Ruby/classes/Net/HTTPServerError.html","","",null,0],["Net::HTTPServerException","","Ruby/classes/Net/HTTPServerException.html","","",null,0],["Net::HTTPServiceUnavailable","","Ruby/classes/Net/HTTPServiceUnavailable.html","","",null,0],["Net::HTTPSuccess","","Ruby/classes/Net/HTTPSuccess.html","","",null,0],["Net::HTTPSwitchProtocol","","Ruby/classes/Net/HTTPSwitchProtocol.html","","",null,0],["Net::HTTPTemporaryRedirect","","Ruby/classes/Net/HTTPTemporaryRedirect.html","","<p>306 Switch Proxy - no longer unused\n",null,0],["Net::HTTPTooManyRequests","","Ruby/classes/Net/HTTPTooManyRequests.html","","",null,0],["Net::HTTPUnauthorized","","Ruby/classes/Net/HTTPUnauthorized.html","","",null,0],["Net::HTTPUnknownResponse","","Ruby/classes/Net/HTTPUnknownResponse.html","","",null,0],["Net::HTTPUnprocessableEntity","","Ruby/classes/Net/HTTPUnprocessableEntity.html","","<p>418 I&#39;m a teapot - RFC 2324; a joke RFC 420 Enhance Your Calm - Twitter\n",null,0],["Net::HTTPUnsupportedMediaType","","Ruby/classes/Net/HTTPUnsupportedMediaType.html","","",null,0],["Net::HTTPUpgradeRequired","","Ruby/classes/Net/HTTPUpgradeRequired.html","","<p>425 Unordered Collection - existed only in draft\n",null,0],["Net::HTTPUseProxy","","Ruby/classes/Net/HTTPUseProxy.html","","",null,0],["Net::HTTPVersionNotSupported","","Ruby/classes/Net/HTTPVersionNotSupported.html","","",null,0],["Net::IMAP","","Ruby/classes/Net/IMAP.html","","<p>Net::IMAP implements Internet Message Access Protocol (IMAP) client\nfunctionality.  The protocol is described …\n",null,0],["Net::IMAP::BadResponseError","","Ruby/classes/Net/IMAP/BadResponseError.html","","<p>Error raised upon a “BAD” response from the server, indicating that the\nclient command violated …\n",null,0],["Net::IMAP::BodyTypeAttachment","","Ruby/classes/Net/IMAP/BodyTypeAttachment.html","","<p>Net::IMAP::BodyTypeAttachment represents attachment body structures of\nmessages.\n<p>Fields:\n<p>media_type &mdash; Returns …\n",null,0],["Net::IMAP::BodyTypeBasic","","Ruby/classes/Net/IMAP/BodyTypeBasic.html","","<p>Net::IMAP::BodyTypeBasic represents basic body structures of messages.\n<p>Fields:\n<p>media_type &mdash; Returns the content …\n",null,0],["Net::IMAP::BodyTypeExtension","","Ruby/classes/Net/IMAP/BodyTypeExtension.html","","",null,0],["Net::IMAP::BodyTypeMessage","","Ruby/classes/Net/IMAP/BodyTypeMessage.html","","<p>Net::IMAP::BodyTypeMessage represents MESSAGE/RFC822 body structures of\nmessages.\n<p>Fields:\n<p>envelope &mdash; Returns …\n",null,0],["Net::IMAP::BodyTypeMultipart","","Ruby/classes/Net/IMAP/BodyTypeMultipart.html","","<p>Net::IMAP::BodyTypeMultipart represents multipart body structures of\nmessages.\n<p>Fields:\n<p>media_type &mdash; Returns …\n",null,0],["Net::IMAP::BodyTypeText","","Ruby/classes/Net/IMAP/BodyTypeText.html","","<p>Net::IMAP::BodyTypeText represents TEXT body structures of messages.\n<p>Fields:\n<p>lines &mdash; Returns the size of …\n",null,0],["Net::IMAP::ByeResponseError","","Ruby/classes/Net/IMAP/ByeResponseError.html","","<p>Error raised upon a “BYE” response from the server, indicating that the\nclient is not being …\n",null,0],["Net::IMAP::CramMD5Authenticator","","Ruby/classes/Net/IMAP/CramMD5Authenticator.html","","<p>Authenticator for the “CRAM-MD5” authentication type.  See #authenticate().\n",null,0],["Net::IMAP::DataFormatError","","Ruby/classes/Net/IMAP/DataFormatError.html","","<p>Error raised when data is in the incorrect format.\n",null,0],["Net::IMAP::DigestMD5Authenticator","","Ruby/classes/Net/IMAP/DigestMD5Authenticator.html","","<p>Authenticator for the “DIGEST-MD5” authentication type.  See\n#authenticate().\n",null,0],["Net::IMAP::Error","","Ruby/classes/Net/IMAP/Error.html","","<p>Superclass of IMAP errors.\n",null,0],["Net::IMAP::FlagCountError","","Ruby/classes/Net/IMAP/FlagCountError.html","","<p>Error raised when too many flags are interned to symbols.\n",null,0],["Net::IMAP::LoginAuthenticator","","Ruby/classes/Net/IMAP/LoginAuthenticator.html","","<p>Authenticator for the “LOGIN” authentication type.  See #authenticate().\n",null,0],["Net::IMAP::NoResponseError","","Ruby/classes/Net/IMAP/NoResponseError.html","","<p>Error raised upon a “NO” response from the server, indicating that the\nclient command could …\n",null,0],["Net::IMAP::PlainAuthenticator","","Ruby/classes/Net/IMAP/PlainAuthenticator.html","","<p>Authenticator for the “PLAIN” authentication type.  See #authenticate().\n",null,0],["Net::IMAP::ResponseError","","Ruby/classes/Net/IMAP/ResponseError.html","","<p>Superclass of all errors used to encapsulate “fail” responses from the\nserver.\n",null,0],["Net::IMAP::ResponseParseError","","Ruby/classes/Net/IMAP/ResponseParseError.html","","<p>Error raised when a response from the server is non-parseable.\n",null,0],["Net::InternetMessageIO","","Ruby/classes/Net/InternetMessageIO.html","","",null,0],["Net::InternetMessageIO::NetPrivate","","Ruby/classes/Net/InternetMessageIO/NetPrivate.html","","",null,0],["Net::InternetMessageIO::WriteAdapter","","Ruby/classes/Net/InternetMessageIO/WriteAdapter.html","","<p>The writer adapter class\n",null,0],["Net::OpenTimeout","","Ruby/classes/Net/OpenTimeout.html","","<p>OpenTimeout, a subclass of Timeout::Error, is raised if a connection cannot\nbe created within the open_timeout. …\n",null,0],["Net::POP3","","Ruby/classes/Net/POP3.html","","<p>What is This Library?\n<p>This library provides functionality for retrieving email via POP3, the Post\nOffice …\n",null,0],["Net::POPAuthenticationError","","Ruby/classes/Net/POPAuthenticationError.html","","<p>POP3 authentication error.\n",null,0],["Net::POPBadResponse","","Ruby/classes/Net/POPBadResponse.html","","<p>Unexpected response from the server.\n",null,0],["Net::POPError","","Ruby/classes/Net/POPError.html","","<p>Non-authentication POP3 protocol error (reply code “-ERR”, except\nauthentication).\n",null,0],["Net::POPMail","","Ruby/classes/Net/POPMail.html","","<p>This class represents a message which exists on the POP server. Instances\nof this class are created by …\n",null,0],["Net::ProtoAuthError","","Ruby/classes/Net/ProtoAuthError.html","","",null,0],["Net::ProtoCommandError","","Ruby/classes/Net/ProtoCommandError.html","","",null,0],["Net::ProtoFatalError","","Ruby/classes/Net/ProtoFatalError.html","","",null,0],["Net::ProtoRetriableError","","Ruby/classes/Net/ProtoRetriableError.html","","",null,0],["Net::ProtoServerError","","Ruby/classes/Net/ProtoServerError.html","","",null,0],["Net::ProtoSyntaxError","","Ruby/classes/Net/ProtoSyntaxError.html","","",null,0],["Net::ProtoUnknownError","","Ruby/classes/Net/ProtoUnknownError.html","","",null,0],["Net::ProtocRetryError","","Ruby/classes/Net/ProtocRetryError.html","","",null,0],["Net::ProtocolError","","Ruby/classes/Net/ProtocolError.html","","",null,0],["Net::ReadTimeout","","Ruby/classes/Net/ReadTimeout.html","","<p>ReadTimeout, a subclass of Timeout::Error, is raised if a chunk of the\nresponse cannot be read within …\n",null,0],["Net::SMTP","","Ruby/classes/Net/SMTP.html","","<p>What is This Library?\n<p>This library provides functionality to send internet mail via SMTP, the\nSimple  …\n",null,0],["Net::SMTP::Response","","Ruby/classes/Net/SMTP/Response.html","","<p>This class represents a response received by the SMTP server. Instances of\nthis class are created by …\n",null,0],["Net::SMTPAuthenticationError","","Ruby/classes/Net/SMTPAuthenticationError.html","","<p>Represents an SMTP authentication error.\n",null,0],["Net::SMTPError","","Ruby/classes/Net/SMTPError.html","","<p>Module mixed in to all SMTP error classes\n",null,0],["Net::SMTPFatalError","","Ruby/classes/Net/SMTPFatalError.html","","<p>Represents a fatal SMTP error (error code 5xx, except for 500)\n",null,0],["Net::SMTPServerBusy","","Ruby/classes/Net/SMTPServerBusy.html","","<p>Represents SMTP error code 420 or 450, a temporary error.\n",null,0],["Net::SMTPSyntaxError","","Ruby/classes/Net/SMTPSyntaxError.html","","<p>Represents an SMTP command syntax error (error code 500)\n",null,0],["Net::SMTPUnknownError","","Ruby/classes/Net/SMTPUnknownError.html","","<p>Unexpected reply code returned from server.\n",null,0],["Net::SMTPUnsupportedCommand","","Ruby/classes/Net/SMTPUnsupportedCommand.html","","<p>Command is not supported on server.\n",null,0],["Net::Telnet","","Ruby/classes/Net/Telnet.html","","<p>Net::Telnet\n<p>Provides telnet client functionality.\n<p>This class also has, through delegation, all the methods …\n",null,0],["Newton","","Ruby/classes/Newton.html","","<p>newton.rb\n<p>Solves the nonlinear algebraic equation system f = 0 by Newton&#39;s\nmethod. This program is …\n",null,0],["NilClass","","Ruby/classes/NilClass.html","","<p>The class of the singleton object <code>nil</code>.\n",null,0],["NilClass","","Rails/classes/NilClass.html","","",null,1],["NoMemoryError","","Ruby/classes/NoMemoryError.html","","<p>Raised when memory allocation fails.\n",null,0],["NoMethodError","","Ruby/classes/NoMethodError.html","","<p>Raised when a method is called on a receiver which doesn&#39;t have it\ndefined and also fails to respond …\n",null,0],["NotImplementedError","","Ruby/classes/NotImplementedError.html","","<p>Raised when a feature is not implemented on the current platform. For\nexample, methods depending on the …\n",null,0],["Numeric","","Ruby/classes/Numeric.html","","<p>mathn\n<p>mathn is a library for changing the way Ruby does math.  If you need more\nprecise rounding with …\n",null,0],["Numeric","","Rails/classes/Numeric.html","","",null,1],["OLEProperty","","Ruby/classes/OLEProperty.html","","<p>OLEProperty helper class of Property with arguments.\n",null,0],["Object","","Ruby/classes/Object.html","","<p>Object is the default root of all Ruby objects.  Object inherits from\nBasicObject which allows creating …\n",null,0],["Object","","Rails/classes/Object.html","","",null,1],["Object::MissingSourceFile","","Rails/classes/LoadError.html","","",null,1],["Object::ParseError","","Ruby/classes/Racc/ParseError.html","","",null,0],["Object::TimeoutError","","Ruby/classes/Timeout/Error.html","","<p>Raised by Timeout#timeout when the block times out.\n",null,0],["ObjectSpace","","Ruby/classes/ObjectSpace.html","","<p>The ObjectSpace module contains a number of routines that interact with the\ngarbage collection facility …\n",null,0],["ObjectSpace::WeakMap","","Ruby/classes/ObjectSpace/WeakMap.html","","<p>An ObjectSpace::WeakMap object holds references to any objects, but those\nobjects can get garbage collected. …\n",null,0],["Observable","","Ruby/classes/Observable.html","","<p>The Observer pattern (also known as publish/subscribe) provides a simple\nmechanism for one object to …\n",null,0],["Open3","","Ruby/classes/Open3.html","","<p>Open3 grants you access to stdin, stdout, stderr and a thread to wait the\nchild process when running …\n",null,0],["OpenKey","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-OpenKey","(hkey, name, opt, desired)","",null,0],["OpenSSL","","Ruby/classes/OpenSSL.html","","<p>OpenSSL provides SSL, TLS and general purpose cryptography.  It wraps the\nOpenSSL library.\n<p>Examples\n<p>All …\n",null,0],["OpenSSL::ASN1","","Ruby/classes/OpenSSL/ASN1.html","","<p>Abstract Syntax Notation One (or ASN.1) is a notation syntax to describe\ndata structures and is defined …\n",null,0],["OpenSSL::ASN1::ASN1Data","","Ruby/classes/OpenSSL/ASN1/ASN1Data.html","","<p>The top-level class representing any ASN.1 object. When parsed by\nASN1.decode, tagged values are always …\n",null,0],["OpenSSL::ASN1::ASN1Error","","Ruby/classes/OpenSSL/ASN1/ASN1Error.html","","<p>Generic error class for all errors raised in ASN1 and any of the classes\ndefined in it.\n",null,0],["OpenSSL::ASN1::Constructive","","Ruby/classes/OpenSSL/ASN1/Constructive.html","","<p>The parent class for all constructed encodings. The <code>value</code>\nattribute of a Constructive is always an <code>Array</code> …\n",null,0],["OpenSSL::ASN1::ObjectId","","Ruby/classes/OpenSSL/ASN1/ObjectId.html","","<p>Document-class: OpenSSL::ASN1::Constructive\n\n<pre><code>The parent class for all constructed encodings. The +value+ ...\n</code></pre>\n",null,0],["OpenSSL::ASN1::Primitive","","Ruby/classes/OpenSSL/ASN1/Primitive.html","","<p>The parent class for all primitive encodings. Attributes are the same as\nfor ASN1Data, with the addition …\n",null,0],["OpenSSL::BN","","Ruby/classes/OpenSSL/BN.html","","",null,0],["OpenSSL::BNError","","Ruby/classes/OpenSSL/BNError.html","","",null,0],["OpenSSL::Buffering","","Ruby/classes/OpenSSL/Buffering.html","","<p>OpenSSL IO buffering mix-in module.\n<p>This module allows an OpenSSL::SSL::SSLSocket to behave like an IO …\n",null,0],["OpenSSL::Cipher","","Ruby/classes/OpenSSL/Cipher.html","","<p>Provides symmetric algorithms for encryption and decryption. The algorithms\nthat are available depend …\n",null,0],["OpenSSL::Cipher::Cipher","","Ruby/classes/OpenSSL/Cipher/Cipher.html","","<p>This class is only provided for backwards compatibility.  Use\nOpenSSL::Cipher in the future.\n",null,0],["OpenSSL::Cipher::CipherError","","Ruby/classes/OpenSSL/Cipher/CipherError.html","","<p>Document-class: OpenSSL::Cipher\n\n<pre><code>Provides symmetric algorithms for encryption and decryption. The\nalgorithms ...</code></pre>\n",null,0],["OpenSSL::Config","","Ruby/classes/OpenSSL/Config.html","","",null,0],["OpenSSL::ConfigError","","Ruby/classes/OpenSSL/ConfigError.html","","",null,0],["OpenSSL::Digest","","Ruby/classes/OpenSSL/Digest.html","","<p>OpenSSL::Digest allows you to compute message digests (sometimes\ninterchangeably called “hashes”) …\n",null,0],["OpenSSL::Digest::Digest","","Ruby/classes/OpenSSL/Digest/Digest.html","","<p>This class is only provided for backwards compatibility.  Use\nOpenSSL::Digest in the future.\n",null,0],["OpenSSL::Digest::DigestError","","Ruby/classes/OpenSSL/Digest/DigestError.html","","<p>Generic Exception class that is raised if an error occurs during a Digest\noperation.\n",null,0],["OpenSSL::Engine","","Ruby/classes/OpenSSL/Engine.html","","",null,0],["OpenSSL::Engine::EngineError","","Ruby/classes/OpenSSL/Engine/EngineError.html","","",null,0],["OpenSSL::HMAC","","Ruby/classes/OpenSSL/HMAC.html","","",null,0],["OpenSSL::HMACError","","Ruby/classes/OpenSSL/HMACError.html","","",null,0],["OpenSSL::Netscape","","Ruby/classes/OpenSSL/Netscape.html","","<p>OpenSSL::Netscape is a namespace for SPKI (Simple Public Key\nInfrastructure) which implements Signed …\n",null,0],["OpenSSL::Netscape::SPKI","","Ruby/classes/OpenSSL/Netscape/SPKI.html","","<p>A Simple Public Key Infrastructure implementation (pronounced “spookey”).\nThe structure is …\n",null,0],["OpenSSL::Netscape::SPKIError","","Ruby/classes/OpenSSL/Netscape/SPKIError.html","","<p>Generic Exception class that is raised if an error occurs during an\noperation on an instance of OpenSSL::Netscape::SPKI …\n",null,0],["OpenSSL::OCSP","","Ruby/classes/OpenSSL/OCSP.html","","",null,0],["OpenSSL::OCSP::BasicResponse","","Ruby/classes/OpenSSL/OCSP/BasicResponse.html","","",null,0],["OpenSSL::OCSP::CertificateId","","Ruby/classes/OpenSSL/OCSP/CertificateId.html","","",null,0],["OpenSSL::OCSP::OCSPError","","Ruby/classes/OpenSSL/OCSP/OCSPError.html","","",null,0],["OpenSSL::OCSP::Request","","Ruby/classes/OpenSSL/OCSP/Request.html","","",null,0],["OpenSSL::OCSP::Response","","Ruby/classes/OpenSSL/OCSP/Response.html","","",null,0],["OpenSSL::OpenSSLError","","Ruby/classes/OpenSSL/OpenSSLError.html","","<p>Generic error, common for all classes under OpenSSL module\n",null,0],["OpenSSL::PKCS12","","Ruby/classes/OpenSSL/PKCS12.html","","<p>Defines a file format commonly used to store private keys with accompanying\npublic key certificates, …\n",null,0],["OpenSSL::PKCS12::PKCS12Error","","Ruby/classes/OpenSSL/PKCS12/PKCS12Error.html","","<p>Defines a file format commonly used to store private keys with accompanying\npublic key certificates, …\n",null,0],["OpenSSL::PKCS5","","Ruby/classes/OpenSSL/PKCS5.html","","<p>Provides password-based encryption functionality based on PKCS#5. Typically\nused for securely deriving …\n",null,0],["OpenSSL::PKCS5::PKCS5Error","","Ruby/classes/OpenSSL/PKCS5/PKCS5Error.html","","<p>Generic Exception class that is raised if an error occurs during a\ncomputation.\n",null,0],["OpenSSL::PKCS7","","Ruby/classes/OpenSSL/PKCS7.html","","",null,0],["OpenSSL::PKCS7::PKCS7Error","","Ruby/classes/OpenSSL/PKCS7/PKCS7Error.html","","",null,0],["OpenSSL::PKCS7::RecipientInfo","","Ruby/classes/OpenSSL/PKCS7/RecipientInfo.html","","",null,0],["OpenSSL::PKCS7::SignerInfo","","Ruby/classes/OpenSSL/PKCS7/SignerInfo.html","","",null,0],["OpenSSL::PKey","","Ruby/classes/OpenSSL/PKey.html","","<p>Asymmetric Public Key Algorithms\n<p>Asymmetric public key algorithms solve the problem of establishing and …\n",null,0],["OpenSSL::PKey::DH","","Ruby/classes/OpenSSL/PKey/DH.html","","<p>An implementation of the Diffie-Hellman key exchange protocol based on\ndiscrete logarithms in finite …\n",null,0],["OpenSSL::PKey::DHError","","Ruby/classes/OpenSSL/PKey/DHError.html","","<p>Generic exception that is raised if an operation on a DH PKey fails\nunexpectedly or in case an instantiation …\n",null,0],["OpenSSL::PKey::DSA","","Ruby/classes/OpenSSL/PKey/DSA.html","","<p>DSA, the Digital Signature Algorithm, is specified in NIST&#39;s FIPS\n186-3. It is an asymmetric public …\n",null,0],["OpenSSL::PKey::DSAError","","Ruby/classes/OpenSSL/PKey/DSAError.html","","<p>Generic exception that is raised if an operation on a DSA PKey fails\nunexpectedly or in case an instantiation …\n",null,0],["OpenSSL::PKey::EC","","Ruby/classes/OpenSSL/PKey/EC.html","","",null,0],["OpenSSL::PKey::EC::Group","","Ruby/classes/OpenSSL/PKey/EC/Group.html","","",null,0],["OpenSSL::PKey::EC::Group::Error","","Ruby/classes/OpenSSL/PKey/EC/Group/Error.html","","",null,0],["OpenSSL::PKey::EC::Point","","Ruby/classes/OpenSSL/PKey/EC/Point.html","","",null,0],["OpenSSL::PKey::EC::Point::Error","","Ruby/classes/OpenSSL/PKey/EC/Point/Error.html","","",null,0],["OpenSSL::PKey::ECError","","Ruby/classes/OpenSSL/PKey/ECError.html","","",null,0],["OpenSSL::PKey::PKey","","Ruby/classes/OpenSSL/PKey/PKey.html","","<p>An abstract class that bundles signature creation (PKey#sign) and\nvalidation (PKey#verify) that is common …\n",null,0],["OpenSSL::PKey::PKeyError","","Ruby/classes/OpenSSL/PKey/PKeyError.html","","<p>Raised when errors occur during PKey#sign or PKey#verify.\n",null,0],["OpenSSL::PKey::RSA","","Ruby/classes/OpenSSL/PKey/RSA.html","","<p>RSA is an asymmetric public key algorithm that has been formalized in RFC\n3447. It is in widespread use …\n",null,0],["OpenSSL::PKey::RSAError","","Ruby/classes/OpenSSL/PKey/RSAError.html","","<p>Generic exception that is raised if an operation on an RSA PKey fails\nunexpectedly or in case an instantiation …\n",null,0],["OpenSSL::Random","","Ruby/classes/OpenSSL/Random.html","","",null,0],["OpenSSL::Random::RandomError","","Ruby/classes/OpenSSL/Random/RandomError.html","","",null,0],["OpenSSL::SSL","","Ruby/classes/OpenSSL/SSL.html","","<p>Use SSLContext to set up the parameters for a TLS (former SSL) connection.\nBoth client and server TLS …\n",null,0],["OpenSSL::SSL::Nonblock","","Ruby/classes/OpenSSL/SSL/Nonblock.html","","",null,0],["OpenSSL::SSL::SSLContext","","Ruby/classes/OpenSSL/SSL/SSLContext.html","","<p>An SSLContext is used to set various options regarding certificates,\nalgorithms, verification, session …\n",null,0],["OpenSSL::SSL::SSLError","","Ruby/classes/OpenSSL/SSL/SSLError.html","","<p>Generic error class raised by SSLSocket and SSLContext.\n",null,0],["OpenSSL::SSL::SSLServer","","Ruby/classes/OpenSSL/SSL/SSLServer.html","","",null,0],["OpenSSL::SSL::SSLSocket","","Ruby/classes/OpenSSL/SSL/SSLSocket.html","","<p>The following attributes are available but don&#39;t show up in rdoc.\n<p>io, context, sync_close\n\n",null,0],["OpenSSL::SSL::Session","","Ruby/classes/OpenSSL/SSL/Session.html","","<p>let rdoc know about mOSSL\n",null,0],["OpenSSL::SSL::Session::SessionError","","Ruby/classes/OpenSSL/SSL/Session/SessionError.html","","<p>let rdoc know about mOSSL\n",null,0],["OpenSSL::SSL::SocketForwarder","","Ruby/classes/OpenSSL/SSL/SocketForwarder.html","","",null,0],["OpenSSL::X509","","Ruby/classes/OpenSSL/X509.html","","<p>let rdoc know about mOSSL\n<p>let rdoc know about mOSSL\n",null,0],["OpenSSL::X509::Attribute","","Ruby/classes/OpenSSL/X509/Attribute.html","","",null,0],["OpenSSL::X509::AttributeError","","Ruby/classes/OpenSSL/X509/AttributeError.html","","",null,0],["OpenSSL::X509::CRL","","Ruby/classes/OpenSSL/X509/CRL.html","","",null,0],["OpenSSL::X509::CRLError","","Ruby/classes/OpenSSL/X509/CRLError.html","","",null,0],["OpenSSL::X509::Certificate","","Ruby/classes/OpenSSL/X509/Certificate.html","","<p>Implementation of an X.509 certificate as specified in RFC 5280. Provides\naccess to a certificate&#39;s …\n",null,0],["OpenSSL::X509::CertificateError","","Ruby/classes/OpenSSL/X509/CertificateError.html","","<p>let rdoc know about mOSSL\n",null,0],["OpenSSL::X509::Extension","","Ruby/classes/OpenSSL/X509/Extension.html","","",null,0],["OpenSSL::X509::ExtensionError","","Ruby/classes/OpenSSL/X509/ExtensionError.html","","",null,0],["OpenSSL::X509::ExtensionFactory","","Ruby/classes/OpenSSL/X509/ExtensionFactory.html","","",null,0],["OpenSSL::X509::Name","","Ruby/classes/OpenSSL/X509/Name.html","","<p>An X.509 name represents a hostname, email address or other entity\nassociated with a public key.\n<p>You can …\n",null,0],["OpenSSL::X509::Name::RFC2253DN","","Ruby/classes/OpenSSL/X509/Name/RFC2253DN.html","","",null,0],["OpenSSL::X509::NameError","","Ruby/classes/OpenSSL/X509/NameError.html","","",null,0],["OpenSSL::X509::Request","","Ruby/classes/OpenSSL/X509/Request.html","","",null,0],["OpenSSL::X509::RequestError","","Ruby/classes/OpenSSL/X509/RequestError.html","","",null,0],["OpenSSL::X509::Revoked","","Ruby/classes/OpenSSL/X509/Revoked.html","","",null,0],["OpenSSL::X509::RevokedError","","Ruby/classes/OpenSSL/X509/RevokedError.html","","",null,0],["OpenSSL::X509::Store","","Ruby/classes/OpenSSL/X509/Store.html","","<p>The X509 certificate store holds trusted CA certificates used to verify\npeer certificates.\n<p>The easiest …\n",null,0],["OpenSSL::X509::StoreContext","","Ruby/classes/OpenSSL/X509/StoreContext.html","","<p>Document-class: OpenSSL::X509::Store\n\n<pre><code>The X509 certificate store holds trusted CA certificates used to ...</code></pre>\n",null,0],["OpenSSL::X509::StoreError","","Ruby/classes/OpenSSL/X509/StoreError.html","","<p>let rdoc know about mOSSL\n",null,0],["OpenStruct","","Ruby/classes/OpenStruct.html","","<p>OpenStruct serialization/deserialization\n<p>An OpenStruct is a data structure, similar to a Hash, that allows …\n",null,0],["OpenURI","","Ruby/classes/OpenURI.html","","<p>OpenURI is an easy-to-use wrapper for Net::HTTP, Net::HTTPS and Net::FTP.\n<p>Example\n<p>It is possible to open …\n",null,0],["OpenURI::HTTPError","","Ruby/classes/OpenURI/HTTPError.html","","",null,0],["OpenURI::HTTPRedirect","","Ruby/classes/OpenURI/HTTPRedirect.html","","<p>Raised on redirection, only occurs when <code>redirect</code> option for\nHTTP is <code>false</code>.\n",null,0],["OpenURI::Meta","","Ruby/classes/OpenURI/Meta.html","","<p>Mixin for holding meta-information.\n",null,0],["OpenURI::OpenRead","","Ruby/classes/OpenURI/OpenRead.html","","<p>Mixin for HTTP and FTP URIs.\n",null,0],["OptionParser","","Ruby/classes/OptionParser.html","","<p>OptionParser\n<p>Introduction\n<p>OptionParser is a class for command-line option analysis.  It is much more\nadvanced, …\n",null,0],["OptionParser::AC","","Ruby/classes/OptionParser/AC.html","","",null,0],["OptionParser::Acceptables","","Ruby/classes/OptionParser/Acceptables.html","","<p>Acceptable argument classes. Now contains DecimalInteger, OctalInteger and\nDecimalNumeric. See Acceptable …\n",null,0],["OptionParser::AmbiguousArgument","","Ruby/classes/OptionParser/AmbiguousArgument.html","","<p>Raises when the given argument word can&#39;t be completed uniquely.\n",null,0],["OptionParser::AmbiguousOption","","Ruby/classes/OptionParser/AmbiguousOption.html","","<p>Raises when ambiguously completable string is encountered.\n",null,0],["OptionParser::Arguable","","Ruby/classes/OptionParser/Arguable.html","","<p>Extends command line arguments array (ARGV) to parse itself.\n",null,0],["OptionParser::CompletingHash","","Ruby/classes/OptionParser/CompletingHash.html","","<p>Hash with completion search feature. See OptionParser::Completion.\n",null,0],["OptionParser::Completion","","Ruby/classes/OptionParser/Completion.html","","<p>Keyword completion module.  This allows partial arguments to be specified\nand resolved against a list …\n",null,0],["OptionParser::InvalidArgument","","Ruby/classes/OptionParser/InvalidArgument.html","","<p>Raises when the given argument does not match required format.\n",null,0],["OptionParser::InvalidOption","","Ruby/classes/OptionParser/InvalidOption.html","","<p>Raises when switch is undefined.\n",null,0],["OptionParser::List","","Ruby/classes/OptionParser/List.html","","<p>Simple option list providing mapping from short and/or long option string\nto OptionParser::Switch and …\n",null,0],["OptionParser::MissingArgument","","Ruby/classes/OptionParser/MissingArgument.html","","<p>Raises when a switch with mandatory argument has no argument.\n",null,0],["OptionParser::NeedlessArgument","","Ruby/classes/OptionParser/NeedlessArgument.html","","<p>Raises when there is an argument for a switch which takes no argument.\n",null,0],["OptionParser::OptionMap","","Ruby/classes/OptionParser/OptionMap.html","","<p>Map from option/keyword string to object with completion.\n",null,0],["OptionParser::ParseError","","Ruby/classes/OptionParser/ParseError.html","","<p>Base class of exceptions from OptionParser.\n",null,0],["OptionParser::Switch","","Ruby/classes/OptionParser/Switch.html","","<p>Individual switch class.  Not important to the user.\n<p>Defined within Switch are several Switch-derived …\n",null,0],["OptionParser::Switch::NoArgument","","Ruby/classes/OptionParser/Switch/NoArgument.html","","<p>Switch that takes no arguments.\n",null,0],["OptionParser::Switch::OptionalArgument","","Ruby/classes/OptionParser/Switch/OptionalArgument.html","","<p>Switch that can omit argument.\n",null,0],["OptionParser::Switch::PlacedArgument","","Ruby/classes/OptionParser/Switch/PlacedArgument.html","","<p>Switch that takes an argument, which does not begin with &#39;-&#39;.\n",null,0],["OptionParser::Switch::RequiredArgument","","Ruby/classes/OptionParser/Switch/RequiredArgument.html","","<p>Switch that takes an argument.\n",null,0],["PI","BigMath","Ruby/classes/BigMath.html#method-i-PI","(prec)","<p>Computes the value of pi to the specified number of digits of precision.\n",null,0],["POST","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-POST","()","<p>Override Rack&#39;s POST method to support indifferent access\n",null,1],["PP","","Ruby/classes/PP.html","","<p>Pretty-printer for Ruby objects.\n<p>Which seems better?\n<p>non-pretty-printed output by #p is:\n",null,0],["PP::ObjectMixin","","Ruby/classes/PP/ObjectMixin.html","","",null,0],["PP::PPMethods","","Ruby/classes/PP/PPMethods.html","","",null,0],["PP::SingleLine","","Ruby/classes/PP/SingleLine.html","","",null,0],["PStore","","Ruby/classes/PStore.html","","<p>PStore implements a file based persistence mechanism based on a Hash.  User\ncode can store hierarchies …\n",null,0],["PStore::Error","","Ruby/classes/PStore/Error.html","","<p>The error type thrown by all PStore methods.\n",null,0],["PTY","","Ruby/classes/PTY.html","","<p>Creates and managed pseudo terminals (PTYs).  See also\nen.wikipedia.org/wiki/Pseudo_terminal\n<p>PTY allows …\n",null,0],["PTY::ChildExited","","Ruby/classes/PTY/ChildExited.html","","<p>Thrown when PTY::check is called for a pid that represents a process that\nhas exited.\n",null,0],["Pathname","","Ruby/classes/Pathname.html","","<p>Pathname represents the name of a file or directory on the filesystem, but\nnot the file itself.\n<p>The pathname …\n",null,0],["Pathname","Kernel","Ruby/classes/Kernel.html#method-i-Pathname","(p1)","<p>Creates a new Pathname object.\n",null,0],["PermaLink?","RSS::Rss::Channel::Item::Guid","Ruby/classes/RSS/Rss/Channel/Item/Guid.html#method-i-PermaLink-3F","()","",null,0],["PrettyPrint","","Ruby/classes/PrettyPrint.html","","<p>This class implements a pretty printing algorithm. It finds line breaks and\nnice indentations for grouped …\n",null,0],["PrettyPrint::Breakable","","Ruby/classes/PrettyPrint/Breakable.html","","",null,0],["PrettyPrint::Group","","Ruby/classes/PrettyPrint/Group.html","","",null,0],["PrettyPrint::GroupQueue","","Ruby/classes/PrettyPrint/GroupQueue.html","","",null,0],["PrettyPrint::SingleLine","","Ruby/classes/PrettyPrint/SingleLine.html","","",null,0],["PrettyPrint::Text","","Ruby/classes/PrettyPrint/Text.html","","",null,0],["Prime","","Ruby/classes/Prime.html","","<p>The set of all prime numbers.\n<p>Example\n\n<pre><code>Prime.each(100) do |prime|\n  p prime  #=&gt; 2, 3, 5, 7, 11, ...., 97 ...\n</code></pre>\n",null,0],["Prime::EratosthenesGenerator","","Ruby/classes/Prime/EratosthenesGenerator.html","","<p>An implementation of <code>PseudoPrimeGenerator</code>.\n<p>Uses <code>EratosthenesSieve</code>.\n",null,0],["Prime::EratosthenesSieve","","Ruby/classes/Prime/EratosthenesSieve.html","","<p>Internal use. An implementation of eratosthenes&#39;s sieve\n",null,0],["Prime::Generator23","","Ruby/classes/Prime/Generator23.html","","<p>Generates all integer which are greater than 2 and are not divided by 2 nor\n3.\n<p>This is a pseudo-prime …\n",null,0],["Prime::OldCompatibility","","Ruby/classes/Prime/OldCompatibility.html","","<p>Provides a <code>Prime</code> object with compatibility to Ruby 1.8 when\ninstantiated via <code>Prime</code>.<code>new</code>.\n",null,0],["Prime::PseudoPrimeGenerator","","Ruby/classes/Prime/PseudoPrimeGenerator.html","","<p>An abstract class for enumerating pseudo-prime numbers.\n<p>Concrete subclasses should override succ, next, …\n",null,0],["Prime::TrialDivision","","Ruby/classes/Prime/TrialDivision.html","","<p>Internal use. An implementation of prime table by trial division method.\n",null,0],["Prime::TrialDivisionGenerator","","Ruby/classes/Prime/TrialDivisionGenerator.html","","<p>An implementation of <code>PseudoPrimeGenerator</code> which uses a prime\ntable generated by trial division.\n",null,0],["Proc","","Ruby/classes/Proc.html","","<p><code>Proc</code> objects are blocks of code that have been bound to a set\nof local variables. Once bound, the code …\n",null,0],["Process","","Ruby/classes/Process.html","","<p>The <code>Process</code> module is a collection of methods used to\nmanipulate processes.\n",null,0],["Process","","Rails/classes/Process.html","","",null,1],["Process::GID","","Ruby/classes/Process/GID.html","","<p>The <code>Process::GID</code> module contains a collection of module\nfunctions which can be used to portably get, …\n",null,0],["Process::Status","","Ruby/classes/Process/Status.html","","<p><code>Process::Status</code> encapsulates the information on the status of\na running or terminated system process. …\n",null,0],["Process::Status","","Rails/classes/Process/Status.html","","",null,1],["Process::Sys","","Ruby/classes/Process/Sys.html","","<p>The <code>Process::Sys</code> module contains UID and GID functions which\nprovide direct bindings to the system calls …\n",null,0],["Process::UID","","Ruby/classes/Process/UID.html","","<p>The <code>Process::UID</code> module contains a collection of module\nfunctions which can be used to portably get, …\n",null,0],["Profiler__","","Ruby/classes/Profiler__.html","","<p>Profile provides a way to Profile your Ruby application.\n<p>Profiling your program is a way of determining …\n",null,0],["Proxy","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-Proxy","(p_addr = :ENV, p_port = nil, p_user = nil, p_pass = nil)","<p>Creates an HTTP proxy class which behaves like Net::HTTP, but performs all\naccess via the specified proxy. …\n",null,0],["Psych","","Ruby/classes/Psych.html","","<p>Overview\n<p>Psych is a YAML parser and emitter. Psych leverages libyaml [Home page:\npyyaml.org/wiki/LibYAML …\n",null,0],["Psych::BadAlias","","Ruby/classes/Psych/BadAlias.html","","",null,0],["Psych::Coder","","Ruby/classes/Psych/Coder.html","","<p>If an object defines <code>encode_with</code>, then an instance of\nPsych::Coder will be passed to the method when …\n",null,0],["Psych::Error","","Ruby/classes/Psych/Error.html","","",null,0],["Psych::Exception","","Ruby/classes/Psych/Exception.html","","",null,0],["Psych::Handler","","Ruby/classes/Psych/Handler.html","","<p>Psych::Handler is an abstract base class that defines the events used when\ndealing with Psych::Parser …\n",null,0],["Psych::Handler::DumperOptions","","Ruby/classes/Psych/Handler/DumperOptions.html","","<p>Configuration options for dumping YAML.\n",null,0],["Psych::Handlers","","Ruby/classes/Psych/Handlers.html","","",null,0],["Psych::Handlers::Recorder","","Ruby/classes/Psych/Handlers/Recorder.html","","<p>This handler will capture an event and record the event.  Recorder events\nare available vial Psych::Handlers::Recorder#events …\n",null,0],["Psych::JSON","","Ruby/classes/Psych/JSON.html","","",null,0],["Psych::JSON::Stream","","Ruby/classes/Psych/JSON/Stream.html","","",null,0],["Psych::JSON::TreeBuilder","","Ruby/classes/Psych/JSON/TreeBuilder.html","","<p>Psych::JSON::TreeBuilder is an event based AST builder.  Events are sent to\nan instance of Psych::JSON::TreeBuilder …\n",null,0],["Psych::Nodes","","Ruby/classes/Psych/Nodes.html","","<p>Overview\n<p>When using Psych.load to deserialize a YAML document, the document is\ntranslated to an intermediary …\n",null,0],["Psych::Nodes::Alias","","Ruby/classes/Psych/Nodes/Alias.html","","<p>This class represents a YAML Alias. It points to an <code>anchor</code>.\n<p>A Psych::Nodes::Alias is a terminal node and …\n",null,0],["Psych::Nodes::Document","","Ruby/classes/Psych/Nodes/Document.html","","<p>This represents a YAML Document.  This node must be a child of\nPsych::Nodes::Stream.  A Psych::Nodes::Document …\n",null,0],["Psych::Nodes::Mapping","","Ruby/classes/Psych/Nodes/Mapping.html","","<p>This class represents a YAML Mapping.\n<p>A Psych::Nodes::Mapping node may have 0 or more children, but must …\n",null,0],["Psych::Nodes::Node","","Ruby/classes/Psych/Nodes/Node.html","","<p>The base class for any Node in a YAML parse tree.  This class should never\nbe instantiated.\n",null,0],["Psych::Nodes::Scalar","","Ruby/classes/Psych/Nodes/Scalar.html","","<p>This class represents a YAML Scalar.\n<p>This node type is a terminal node and should not have any children. …\n",null,0],["Psych::Nodes::Sequence","","Ruby/classes/Psych/Nodes/Sequence.html","","<p>This class represents a YAML sequence.\n<p>A YAML sequence is basically a list, and looks like this:\n\n<pre><code>%YAML ...</code></pre>\n",null,0],["Psych::Nodes::Stream","","Ruby/classes/Psych/Nodes/Stream.html","","<p>Represents a YAML stream.  This is the root node for any YAML parse tree. \nThis node must have one or …\n",null,0],["Psych::Omap","","Ruby/classes/Psych/Omap.html","","",null,0],["Psych::Parser","","Ruby/classes/Psych/Parser.html","","<p>YAML event parser class.  This class parses a YAML document and calls\nevents on the handler that is passed …\n",null,0],["Psych::Parser::Mark","","Ruby/classes/Psych/Parser/Mark.html","","",null,0],["Psych::PrivateType","","Ruby/classes/Psych/PrivateType.html","","",null,0],["Psych::ScalarScanner","","Ruby/classes/Psych/ScalarScanner.html","","<p>Scan scalars for built in types\n",null,0],["Psych::Set","","Ruby/classes/Psych/Set.html","","",null,0],["Psych::Stream","","Ruby/classes/Psych/Stream.html","","<p>Psych::Stream is a streaming YAML emitter.  It will not buffer your YAML,\nbut send it straight to an …\n",null,0],["Psych::Streaming","","Ruby/classes/Psych/Streaming.html","","",null,0],["Psych::SyntaxError","","Ruby/classes/Psych/SyntaxError.html","","",null,0],["Psych::TreeBuilder","","Ruby/classes/Psych/TreeBuilder.html","","<p>This class works in conjunction with Psych::Parser to build an in-memory\nparse tree that represents a …\n",null,0],["Psych::Visitors","","Ruby/classes/Psych/Visitors.html","","",null,0],["Psych::Visitors::DepthFirst","","Ruby/classes/Psych/Visitors/DepthFirst.html","","",null,0],["Psych::Visitors::Emitter","","Ruby/classes/Psych/Visitors/Emitter.html","","",null,0],["Psych::Visitors::JSONTree","","Ruby/classes/Psych/Visitors/JSONTree.html","","",null,0],["Psych::Visitors::ToRuby","","Ruby/classes/Psych/Visitors/ToRuby.html","","<p>This class walks a YAML AST, converting each node to ruby\n",null,0],["Psych::Visitors::Visitor","","Ruby/classes/Psych/Visitors/Visitor.html","","",null,0],["Psych::Visitors::YAMLTree","","Ruby/classes/Psych/Visitors/YAMLTree.html","","<p>YAMLTree builds a YAML ast given a ruby object.  For example:\n\n<pre><code>builder = Psych::Visitors::YAMLTree.new ...</code></pre>\n",null,0],["QualifiedConstUtils","","Rails/classes/QualifiedConstUtils.html","","",null,1],["QueryInfoKey","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-QueryInfoKey","(hkey)","",null,0],["QueryValue","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-QueryValue","(hkey, name)","",null,0],["Queue","","Ruby/classes/Queue.html","","<p>This class provides a way to synchronize communication between threads.\n<p>Example:\n\n<pre><code>require &#39;thread&#39;\n\nqueue ...\n</code></pre>\n",null,0],["RAILS_VERSION","","Rails/files/rails/RAILS_VERSION.html","","<p>4.0.3\n",null,1],["RDOC_MAIN","","Rails/files/rails/railties/RDOC_MAIN_rdoc.html","","<p>Welcome to Rails\n<p>Rails is a web-application framework that includes everything needed to\ncreate database-backed …\n",null,1],["RDoc","","Ruby/classes/RDoc.html","","<p>RDoc produces documentation for Ruby source files by parsing the source and\nextracting the definition …\n",null,0],["RDoc","","Ruby/classes/RDoc.html","","<p>Gem::RDoc provides methods to generate RDoc and ri data for installed gems\nupon gem installation.\n<p>This …\n",null,0],["RDoc::Alias","","Ruby/classes/RDoc/Alias.html","","<p>Represent an alias, which is an old_name/new_name pair associated with a\nparticular context\n",null,0],["RDoc::AnonClass","","Ruby/classes/RDoc/AnonClass.html","","<p>An anonymous class like:\n\n<pre><code>c = Class.new do end</code></pre>\n<p>AnonClass is currently not used.\n",null,0],["RDoc::AnyMethod","","Ruby/classes/RDoc/AnyMethod.html","","<p>AnyMethod is the base class for objects representing methods\n",null,0],["RDoc::Attr","","Ruby/classes/RDoc/Attr.html","","<p>An attribute created by #attr, #attr_reader, #attr_writer or #attr_accessor\n",null,0],["RDoc::ClassModule","","Ruby/classes/RDoc/ClassModule.html","","<p>ClassModule is the base class for objects representing either a class or a\nmodule.\n",null,0],["RDoc::CodeObject","","Ruby/classes/RDoc/CodeObject.html","","<p>Base class for the RDoc code tree.\n<p>We contain the common stuff for contexts (which are containers) and …\n",null,0],["RDoc::Comment","","Ruby/classes/RDoc/Comment.html","","<p>A comment holds the text comment for a RDoc::CodeObject and provides a\nunified way of cleaning it up …\n",null,0],["RDoc::Constant","","Ruby/classes/RDoc/Constant.html","","<p>A constant\n",null,0],["RDoc::Context","","Ruby/classes/RDoc/Context.html","","<p>A Context is something that can hold modules, classes, methods, attributes,\naliases, requires, and includes. …\n",null,0],["RDoc::Context::Section","","Ruby/classes/RDoc/Context/Section.html","","<p>A section of documentation like:\n\n<pre><code># :section: The title\n# The body</code></pre>\n<p>Sections can be referenced multiple times …\n",null,0],["RDoc::CrossReference","","Ruby/classes/RDoc/CrossReference.html","","<p>RDoc::CrossReference is a reusable way to create cross references for\nnames.\n",null,0],["RDoc::ERBIO","","Ruby/classes/RDoc/ERBIO.html","","<p>A subclass of ERB that writes directly to an IO.  Credit to Aaron Patterson\nand Masatoshi SEKI.\n<p>To use: …\n",null,0],["RDoc::ERBPartial","","Ruby/classes/RDoc/ERBPartial.html","","<p>Allows an ERB template to be rendered in the context (binding) of an\nexisting ERB template evaluation. …\n",null,0],["RDoc::Encoding","","Ruby/classes/RDoc/Encoding.html","","<p>This class is a wrapper around File IO and Encoding that helps RDoc load\nfiles and convert them to the …\n",null,0],["RDoc::Error","","Ruby/classes/RDoc/Error.html","","<p>Exception thrown by any rdoc error.\n",null,0],["RDoc::Extend","","Ruby/classes/RDoc/Extend.html","","<p>A Module extension in a class with #extend\n",null,0],["RDoc::Generator","","Ruby/classes/RDoc/Generator.html","","<p>RDoc uses generators to turn parsed source code in the form of an\nRDoc::CodeObject tree into some form …\n",null,0],["RDoc::Generator::Darkfish","","Ruby/classes/RDoc/Generator/Darkfish.html","","<p>Darkfish RDoc HTML Generator\n<p>$Id: darkfish.rb 52 2009-01-07 02:08:11Z deveiant $\n<p>Author/s\n",null,0],["RDoc::Generator::JsonIndex","","Ruby/classes/RDoc/Generator/JsonIndex.html","","<p>The JsonIndex generator is designed to complement an HTML generator and\nproduces a JSON search index. …\n",null,0],["RDoc::Generator::Markup","","Ruby/classes/RDoc/Generator/Markup.html","","<p>Handle common RDoc::Markup tasks for various CodeObjects\n<p>This module is loaded by generators.  It allows …\n",null,0],["RDoc::Generator::RI","","Ruby/classes/RDoc/Generator/RI.html","","<p>Generates ri data files\n",null,0],["RDoc::GhostMethod","","Ruby/classes/RDoc/GhostMethod.html","","<p>GhostMethod represents a method referenced only by a comment\n",null,0],["RDoc::Include","","Ruby/classes/RDoc/Include.html","","<p>A Module include in a class with #include\n",null,0],["RDoc::Markdown","","Ruby/classes/RDoc/Markdown.html","","<p>RDoc::Markdown as described by the markdown syntax.\n<p>To choose Markdown as your only default format see …\n",null,0],["RDoc::Markdown::Literals","","Ruby/classes/RDoc/Markdown/Literals.html","","",null,0],["RDoc::Markdown::Literals::MemoEntry","","Ruby/classes/RDoc/Markdown/Literals/MemoEntry.html","","",null,0],["RDoc::Markdown::Literals::ParseError","","Ruby/classes/RDoc/Markdown/Literals/ParseError.html","","",null,0],["RDoc::Markdown::Literals::RuleInfo","","Ruby/classes/RDoc/Markdown/Literals/RuleInfo.html","","",null,0],["RDoc::Markdown::MemoEntry","","Ruby/classes/RDoc/Markdown/MemoEntry.html","","",null,0],["RDoc::Markdown::ParseError","","Ruby/classes/RDoc/Markdown/ParseError.html","","",null,0],["RDoc::Markdown::RuleInfo","","Ruby/classes/RDoc/Markdown/RuleInfo.html","","",null,0],["RDoc::Markup","","Ruby/classes/RDoc/Markup.html","","<p>RDoc::Markup parses plain text documents and attempts to decompose them\ninto their constituent parts. …\n",null,0],["RDoc::Markup::AttrChanger","","Ruby/classes/RDoc/Markup/AttrChanger.html","","<p>An AttrChanger records a change in attributes. It contains a bitmap of the\nattributes to turn on, and …\n",null,0],["RDoc::Markup::AttrSpan","","Ruby/classes/RDoc/Markup/AttrSpan.html","","<p>An array of attributes which parallels the characters in a string.\n",null,0],["RDoc::Markup::AttributeManager","","Ruby/classes/RDoc/Markup/AttributeManager.html","","<p>Manages changes of attributes in a block of text\n",null,0],["RDoc::Markup::Attributes","","Ruby/classes/RDoc/Markup/Attributes.html","","<p>We manage a set of attributes.  Each attribute has a symbol name and a bit\nvalue.\n",null,0],["RDoc::Markup::BlankLine","","Ruby/classes/RDoc/Markup/BlankLine.html","","<p>An empty line.  This class is a singleton.\n",null,0],["RDoc::Markup::BlockQuote","","Ruby/classes/RDoc/Markup/BlockQuote.html","","<p>A quoted section which contains markup items.\n",null,0],["RDoc::Markup::Document","","Ruby/classes/RDoc/Markup/Document.html","","<p>A Document containing lists, headings, paragraphs, etc.\n",null,0],["RDoc::Markup::Formatter","","Ruby/classes/RDoc/Markup/Formatter.html","","<p>Base class for RDoc markup formatters\n<p>Formatters are a visitor that converts an RDoc::Markup tree (from …\n",null,0],["RDoc::Markup::HardBreak","","Ruby/classes/RDoc/Markup/HardBreak.html","","<p>A hard-break in the middle of a paragraph.\n",null,0],["RDoc::Markup::Include","","Ruby/classes/RDoc/Markup/Include.html","","<p>A file included at generation time.  Objects of this class are created by\nRDoc::RD for an extension-less …\n",null,0],["RDoc::Markup::IndentedParagraph","","Ruby/classes/RDoc/Markup/IndentedParagraph.html","","<p>An Indented Paragraph of text\n",null,0],["RDoc::Markup::List","","Ruby/classes/RDoc/Markup/List.html","","<p>A List is a homogeneous set of ListItems.\n<p>The supported list types include:\n<p>:BULLET &mdash; An unordered list\n",null,0],["RDoc::Markup::ListItem","","Ruby/classes/RDoc/Markup/ListItem.html","","<p>An item within a List that contains paragraphs, headings, etc.\n<p>For BULLET, NUMBER, LALPHA and UALPHA lists, …\n",null,0],["RDoc::Markup::Paragraph","","Ruby/classes/RDoc/Markup/Paragraph.html","","<p>A Paragraph of text\n",null,0],["RDoc::Markup::Parser","","Ruby/classes/RDoc/Markup/Parser.html","","<p>A recursive-descent parser for RDoc markup.\n<p>The parser tokenizes an input string then parses the tokens …\n",null,0],["RDoc::Markup::Parser::Error","","Ruby/classes/RDoc/Markup/Parser/Error.html","","<p>Parser error subclass\n",null,0],["RDoc::Markup::Parser::ParseError","","Ruby/classes/RDoc/Markup/Parser/ParseError.html","","<p>Raised when the parser is unable to handle the given markup\n",null,0],["RDoc::Markup::PreProcess","","Ruby/classes/RDoc/Markup/PreProcess.html","","<p>Handle common directives that can occur in a block of text:\n\n<pre><code>:include: filename</code></pre>\n<p>Directives can be escaped …\n",null,0],["RDoc::Markup::Raw","","Ruby/classes/RDoc/Markup/Raw.html","","<p>A section of text that is added to the output document as-is\n",null,0],["RDoc::Markup::Rule","","Ruby/classes/RDoc/Markup/Rule.html","","<p>A horizontal rule with a weight\n",null,0],["RDoc::Markup::Special","","Ruby/classes/RDoc/Markup/Special.html","","<p>Hold details of a special sequence\n",null,0],["RDoc::Markup::ToAnsi","","Ruby/classes/RDoc/Markup/ToAnsi.html","","<p>Outputs RDoc markup with vibrant ANSI color!\n",null,0],["RDoc::Markup::ToBs","","Ruby/classes/RDoc/Markup/ToBs.html","","<p>Outputs RDoc markup with hot backspace action!  You will probably need a\npager to use this output format. …\n",null,0],["RDoc::Markup::ToHtml","","Ruby/classes/RDoc/Markup/ToHtml.html","","<p>Outputs RDoc markup as HTML.\n",null,0],["RDoc::Markup::ToHtmlCrossref","","Ruby/classes/RDoc/Markup/ToHtmlCrossref.html","","<p>Subclass of the RDoc::Markup::ToHtml class that supports looking up method\nnames, classes, etc to create …\n",null,0],["RDoc::Markup::ToHtmlSnippet","","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html","","<p>Outputs RDoc markup as paragraphs with inline markup only.\n",null,0],["RDoc::Markup::ToJoinedParagraph","","Ruby/classes/RDoc/Markup/ToJoinedParagraph.html","","<p>Joins the parts of an RDoc::Markup::Paragraph into a single String.\n<p>This allows for easier maintenance …\n",null,0],["RDoc::Markup::ToLabel","","Ruby/classes/RDoc/Markup/ToLabel.html","","<p>Creates HTML-safe labels suitable for use in id attributes.  Tidylinks are\nconverted to their link part …\n",null,0],["RDoc::Markup::ToMarkdown","","Ruby/classes/RDoc/Markup/ToMarkdown.html","","<p>Outputs parsed markup as Markdown\n",null,0],["RDoc::Markup::ToRdoc","","Ruby/classes/RDoc/Markup/ToRdoc.html","","<p>Outputs RDoc markup as RDoc markup! (mostly)\n",null,0],["RDoc::Markup::ToTableOfContents","","Ruby/classes/RDoc/Markup/ToTableOfContents.html","","<p>Extracts just the RDoc::Markup::Heading elements from a\nRDoc::Markup::Document to help build a table …\n",null,0],["RDoc::Markup::ToTtOnly","","Ruby/classes/RDoc/Markup/ToTtOnly.html","","<p>Extracts sections of text enclosed in plus, tt or code.  Used to discover\nundocumented parameters.\n",null,0],["RDoc::Markup::Verbatim","","Ruby/classes/RDoc/Markup/Verbatim.html","","<p>A section of verbatim text\n",null,0],["RDoc::MetaMethod","","Ruby/classes/RDoc/MetaMethod.html","","<p>MetaMethod represents a meta-programmed method\n",null,0],["RDoc::MethodAttr","","Ruby/classes/RDoc/MethodAttr.html","","<p>Abstract class representing either a method or an attribute.\n",null,0],["RDoc::NormalClass","","Ruby/classes/RDoc/NormalClass.html","","<p>A normal class, neither singleton nor anonymous\n",null,0],["RDoc::NormalModule","","Ruby/classes/RDoc/NormalModule.html","","<p>A normal module, like NormalClass\n",null,0],["RDoc::Options","","Ruby/classes/RDoc/Options.html","","<p>RDoc::Options handles the parsing and storage of options\n<p>Saved Options\n<p>You can save some options like the …\n",null,0],["RDoc::Parser","","Ruby/classes/RDoc/Parser.html","","<p>A parser is simple a class that subclasses RDoc::Parser and implements\n#scan to fill in an RDoc::TopLevel …\n",null,0],["RDoc::Parser::C","","Ruby/classes/RDoc/Parser/C.html","","<p>RDoc::Parser::C attempts to parse C extension files.  It looks for the\nstandard patterns that you find …\n",null,0],["RDoc::Parser::ChangeLog","","Ruby/classes/RDoc/Parser/ChangeLog.html","","<p>A ChangeLog file parser.\n<p>This parser converts a ChangeLog into an RDoc::Markup::Document.  When\nviewed …\n",null,0],["RDoc::Parser::Markdown","","Ruby/classes/RDoc/Parser/Markdown.html","","<p>Parse a Markdown format file.  The parsed RDoc::Markup::Document is\nattached as a file comment.\n",null,0],["RDoc::Parser::RD","","Ruby/classes/RDoc/Parser/RD.html","","<p>Parse a RD format file.  The parsed RDoc::Markup::Document is attached as a\nfile comment.\n",null,0],["RDoc::Parser::Ruby","","Ruby/classes/RDoc/Parser/Ruby.html","","<p>Extracts code elements from a source file returning a TopLevel object\ncontaining the constituent file …\n",null,0],["RDoc::Parser::RubyTools","","Ruby/classes/RDoc/Parser/RubyTools.html","","<p>Collection of methods for writing parsers against RDoc::RubyLex and\nRDoc::RubyToken\n",null,0],["RDoc::Parser::Simple","","Ruby/classes/RDoc/Parser/Simple.html","","<p>Parse a non-source file. We basically take the whole thing as one big\ncomment.\n",null,0],["RDoc::Parser::Text","","Ruby/classes/RDoc/Parser/Text.html","","<p>Indicates this parser is text and doesn&#39;t contain code constructs.\n<p>Include this module in a RDoc::Parser …\n",null,0],["RDoc::RD","","Ruby/classes/RDoc/RD.html","","<p>RDoc::RD implements the RD format from the rdtool gem.\n<p>To choose RD as your only default format see RDoc::Options@Saved+Options …\n",null,0],["RDoc::RD::BlockParser","","Ruby/classes/RDoc/RD/BlockParser.html","","<p>RD format parser for headings, paragraphs, lists, verbatim sections that\nexist as blocks.\n",null,0],["RDoc::RD::Inline","","Ruby/classes/RDoc/RD/Inline.html","","<p>Inline keeps track of markup and labels to create proper links.\n",null,0],["RDoc::RD::InlineParser","","Ruby/classes/RDoc/RD/InlineParser.html","","<p>RD format parser for inline markup such as emphasis, links, footnotes, etc.\n",null,0],["RDoc::RDoc","","Ruby/classes/RDoc/RDoc.html","","<p>This is the driver for generating RDoc output.  It handles file parsing and\ngeneration of output.\n<p>To use …\n",null,0],["RDoc::RI","","Ruby/classes/RDoc/RI.html","","<p>Namespace for the ri command line tool&#39;s implementation.\n<p>See <code>ri --help</code> for details.\n",null,0],["RDoc::RI::Driver","","Ruby/classes/RDoc/RI/Driver.html","","<p>The RI driver implements the command-line ri tool.\n<p>The driver supports:\n<p>loading RI data from:\n",null,0],["RDoc::RI::Driver::Error","","Ruby/classes/RDoc/RI/Driver/Error.html","","<p>Base Driver error class\n",null,0],["RDoc::RI::Driver::NotFoundError","","Ruby/classes/RDoc/RI/Driver/NotFoundError.html","","<p>Raised when a name isn&#39;t found in the ri data stores\n",null,0],["RDoc::RI::Error","","Ruby/classes/RDoc/RI/Error.html","","<p>Base RI error class\n",null,0],["RDoc::RI::Paths","","Ruby/classes/RDoc/RI/Paths.html","","<p>The directories where ri data lives.  Paths can be enumerated via ::each,\nor queried individually via …\n",null,0],["RDoc::RI::Paths::RbConfig","","Ruby/classes/RDoc/RI/Paths/RbConfig.html","","",null,0],["RDoc::Require","","Ruby/classes/RDoc/Require.html","","<p>A file loaded by #require\n",null,0],["RDoc::RubyLex","","Ruby/classes/RDoc/RubyLex.html","","<p>Ruby lexer adapted from irb.\n<p>The internals are not documented because they are scary.\n",null,0],["RDoc::RubyLex::Error","","Ruby/classes/RDoc/RubyLex/Error.html","","<p>Raised upon invalid input\n",null,0],["RDoc::RubyToken","","Ruby/classes/RDoc/RubyToken.html","","<p>Definitions of all tokens involved in the lexical analysis.\n<p>This class is not documented because it is …\n",null,0],["RDoc::RubyToken::TkError","","Ruby/classes/RDoc/RubyToken/TkError.html","","",null,0],["RDoc::RubyToken::TkId","","Ruby/classes/RDoc/RubyToken/TkId.html","","",null,0],["RDoc::RubyToken::TkKW","","Ruby/classes/RDoc/RubyToken/TkKW.html","","",null,0],["RDoc::RubyToken::TkNode","","Ruby/classes/RDoc/RubyToken/TkNode.html","","",null,0],["RDoc::RubyToken::TkOPASGN","","Ruby/classes/RDoc/RubyToken/TkOPASGN.html","","",null,0],["RDoc::RubyToken::TkOp","","Ruby/classes/RDoc/RubyToken/TkOp.html","","",null,0],["RDoc::RubyToken::TkSYMBOL","","Ruby/classes/RDoc/RubyToken/TkSYMBOL.html","","",null,0],["RDoc::RubyToken::TkUnknownChar","","Ruby/classes/RDoc/RubyToken/TkUnknownChar.html","","",null,0],["RDoc::RubyToken::TkVal","","Ruby/classes/RDoc/RubyToken/TkVal.html","","",null,0],["RDoc::RubyToken::Token","","Ruby/classes/RDoc/RubyToken/Token.html","","",null,0],["RDoc::RubygemsHook","","Ruby/classes/RDoc/RubygemsHook.html","","<p>Gem::RDoc provides methods to generate RDoc and ri data for installed gems\nupon gem installation.\n<p>This …\n",null,0],["RDoc::Servlet","","Ruby/classes/RDoc/Servlet.html","","<p>This is a WEBrick servlet that allows you to browse ri documentation.\n<p>You can show documentation through …\n",null,0],["RDoc::SingleClass","","Ruby/classes/RDoc/SingleClass.html","","<p>A singleton class\n",null,0],["RDoc::Stats","","Ruby/classes/RDoc/Stats.html","","<p>RDoc statistics collector which prints a summary and report of a\nproject&#39;s documentation totals. …\n",null,0],["RDoc::Stats::Normal","","Ruby/classes/RDoc/Stats/Normal.html","","<p>Stats printer that prints just the files being documented with a progress\nbar\n",null,0],["RDoc::Stats::Quiet","","Ruby/classes/RDoc/Stats/Quiet.html","","<p>Stats printer that prints nothing\n",null,0],["RDoc::Stats::Verbose","","Ruby/classes/RDoc/Stats/Verbose.html","","<p>Stats printer that prints everything documented, including the documented\nstatus\n",null,0],["RDoc::Store","","Ruby/classes/RDoc/Store.html","","<p>A set of rdoc data for a single project (gem, path, etc.).\n<p>The store manages reading and writing ri data …\n",null,0],["RDoc::Store::Error","","Ruby/classes/RDoc/Store/Error.html","","<p>Errors raised from loading or saving the store\n",null,0],["RDoc::Store::MissingFileError","","Ruby/classes/RDoc/Store/MissingFileError.html","","<p>Raised when a stored file for a class, module, page or method is missing.\n",null,0],["RDoc::Task","","Ruby/classes/RDoc/Task.html","","<p>RDoc::Task creates the following rake tasks to generate and clean up RDoc\noutput:\n<p>rdoc &mdash; Main task for this …\n",null,0],["RDoc::Text","","Ruby/classes/RDoc/Text.html","","<p>Methods for manipulating comment text\n",null,0],["RDoc::TokenStream","","Ruby/classes/RDoc/TokenStream.html","","<p>A TokenStream is a list of tokens, gathered during the parse of some entity\n(say a method). Entities …\n",null,0],["RDoc::TomDoc","","Ruby/classes/RDoc/TomDoc.html","","<p>A parser for TomDoc based on TomDoc 1.0.0-rc1 (02adef9b5a)\n<p>The TomDoc specification can be found at:\n<p>tomdoc.org …\n",null,0],["RDoc::TopLevel","","Ruby/classes/RDoc/TopLevel.html","","<p>A TopLevel context is a representation of the contents of a single file\n",null,0],["README","","Ruby/files/ruby/README.html","","<p>What&#39;s Ruby\n<p>Ruby is the interpreted scripting language for quick and easy\nobject-oriented programming. …\n",null,0],["README","","Rails/files/rails/actionmailer/README_rdoc.html","","<p>Action Mailer – Easy email delivery and testing\n<p>Action Mailer is a framework for designing email service …\n",null,1],["README","","Rails/files/rails/railties/README_rdoc.html","","<p>Railties – Gluing the Engine to the Rails\n<p>Railties is responsible for gluing all frameworks together. …\n",null,1],["README","","Rails/files/rails/activesupport/README_rdoc.html","","<p>Active Support – Utility classes and Ruby extensions from Rails\n<p>Active Support is a collection of utility …\n",null,1],["README","","Rails/files/rails/activerecord/README_rdoc.html","","<p>Active Record – Object-relational mapping put on rails\n<p>Active Record connects classes to relational database …\n",null,1],["README","","Rails/files/rails/activemodel/README_rdoc.html","","<p>Active Model – model interfaces for Rails\n<p>Active Model provides a known set of interfaces for usage in …\n",null,1],["README","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/README_rdoc.html","","<p>&lt;%= camelized %&gt;\n<p>This project rocks and uses MIT-LICENSE.\n",null,1],["README","","Rails/files/rails/actionpack/README_rdoc.html","","<p>Action Pack – From request to response\n<p>Action Pack is a framework for handling and responding to web …\n",null,1],["README","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n",null,1],["README.EXT","","Ruby/files/ruby/README_EXT.html","","<p>This document explains how to make extension libraries for Ruby.\n<p>Basic Knowledge\n<p>In C, variables have types …\n",null,0],["README.EXT.ja","","Ruby/files/ruby/README_EXT_ja.html","","<p>Rubyの拡張ライブラリの作り方を説明します．\n<p>基礎知識\n<p>Cの変数には型があり，データには型がありません．ですから，た とえばポインタをintの変数に代入すると，その値は整数として取\nり扱われます．逆にRubyの変数には型がなく，データに型がありま …\n",null,0],["README.ja","","Ruby/files/ruby/README_ja.html","","<p>Rubyとは\n<p>Rubyはシンプルかつ強力なオブジェクト指向スクリプト言語です． Rubyは最初から純粋なオブジェクト指向言語として設計されていま\nすから，オブジェクト指向プログラミングを手軽に行う事が出来ま …\n",null,0],["RELEASING_RAILS","","Rails/files/rails/RELEASING_RAILS_rdoc.html","","<p>Releasing Rails\n<p>In this document, we&#39;ll cover the steps necessary to release Rails. \nEach section …\n",null,1],["REXML","","Ruby/classes/REXML.html","","<p> :element, parent, name, attributes, children*  &mdash; a = Node.new a &lt;&lt; “B”            # =&gt; …\n\n",null,0],["REXML::AttlistDecl","","Ruby/classes/REXML/AttlistDecl.html","","<p>This class needs:\n<p>Documentation\n<p>Work!  Not all types of attlists are intelligently parsed, so we just\n",null,0],["REXML::Attribute","","Ruby/classes/REXML/Attribute.html","","<p>Defines an Element Attribute; IE, a attribute=value pair, as in:\n&lt;element attribute=“value”/&gt;. …\n",null,0],["REXML::Attributes","","Ruby/classes/REXML/Attributes.html","","",null,0],["REXML::CData","","Ruby/classes/REXML/CData.html","","",null,0],["REXML::Child","","Ruby/classes/REXML/Child.html","","<p>A Child object is something contained by a parent, and this class contains\nmethods to support that.  …\n",null,0],["REXML::Comment","","Ruby/classes/REXML/Comment.html","","<p>Represents an XML comment; that is, text between &lt;!– … –&gt;\n",null,0],["REXML::DTD","","Ruby/classes/REXML/DTD.html","","",null,0],["REXML::DTD::AttlistDecl","","Ruby/classes/REXML/DTD/AttlistDecl.html","","",null,0],["REXML::DTD::ElementDecl","","Ruby/classes/REXML/DTD/ElementDecl.html","","",null,0],["REXML::DTD::EntityDecl","","Ruby/classes/REXML/DTD/EntityDecl.html","","",null,0],["REXML::DTD::NotationDecl","","Ruby/classes/REXML/DTD/NotationDecl.html","","",null,0],["REXML::DTD::Parser","","Ruby/classes/REXML/DTD/Parser.html","","",null,0],["REXML::Declaration","","Ruby/classes/REXML/Declaration.html","","",null,0],["REXML::DocType","","Ruby/classes/REXML/DocType.html","","<p>Represents an XML DOCTYPE declaration; that is, the contents of\n&lt;!DOCTYPE … &gt;.  DOCTYPES can …\n",null,0],["REXML::Document","","Ruby/classes/REXML/Document.html","","<p>Represents a full XML document, including PIs, a doctype, etc.  A Document\nhas a single child that can …\n",null,0],["REXML::Element","","Ruby/classes/REXML/Element.html","","<p>Represents a tagged XML element.  Elements are characterized by having\nchildren, attributes, and names, …\n",null,0],["REXML::ElementDecl","","Ruby/classes/REXML/ElementDecl.html","","",null,0],["REXML::Elements","","Ruby/classes/REXML/Elements.html","","",null,0],["REXML::Encoding","","Ruby/classes/REXML/Encoding.html","","",null,0],["REXML::Entity","","Ruby/classes/REXML/Entity.html","","<p>God, I hate DTDs.  I really do.  Why this idiot standard still plagues us\nis beyond me.\n",null,0],["REXML::EntityConst","","Ruby/classes/REXML/EntityConst.html","","<p>This is a set of entity constants – the ones defined in the XML\nspecification.  These are <code>gt</code>, <code>lt</code>,\n<code>amp</code> …\n",null,0],["REXML::ExternalEntity","","Ruby/classes/REXML/ExternalEntity.html","","",null,0],["REXML::Formatters","","Ruby/classes/REXML/Formatters.html","","",null,0],["REXML::Formatters::Default","","Ruby/classes/REXML/Formatters/Default.html","","",null,0],["REXML::Formatters::Pretty","","Ruby/classes/REXML/Formatters/Pretty.html","","<p>Pretty-prints an XML document.  This destroys whitespace in text nodes and\nwill insert carriage returns …\n",null,0],["REXML::Formatters::Transitive","","Ruby/classes/REXML/Formatters/Transitive.html","","<p>The Transitive formatter writes an XML document that parses to an identical\ndocument as the source document. …\n",null,0],["REXML::Functions","","Ruby/classes/REXML/Functions.html","","<p>If you add a method, keep in mind two things: (1) the first argument will\nalways be a list of nodes from …\n",null,0],["REXML::IOSource","","Ruby/classes/REXML/IOSource.html","","<p>A Source that wraps an IO.  See the Source class for method documentation\n",null,0],["REXML::Instruction","","Ruby/classes/REXML/Instruction.html","","<p>Represents an XML Instruction; IE, &lt;? … ?&gt; TODO: Add parent arg (3rd\narg) to constructor\n",null,0],["REXML::Light","","Ruby/classes/REXML/Light.html","","",null,0],["REXML::Light::Node","","Ruby/classes/REXML/Light/Node.html","","<p>Represents a tagged XML element.  Elements are characterized by having\nchildren, attributes, and names, …\n",null,0],["REXML::Namespace","","Ruby/classes/REXML/Namespace.html","","<p>Adds named attributes to an object.\n",null,0],["REXML::Node","","Ruby/classes/REXML/Node.html","","<p>Represents a node in the tree.  Nodes are never encountered except as\nsuperclasses of other objects. …\n",null,0],["REXML::NotationDecl","","Ruby/classes/REXML/NotationDecl.html","","",null,0],["REXML::Output","","Ruby/classes/REXML/Output.html","","",null,0],["REXML::Parent","","Ruby/classes/REXML/Parent.html","","<p>A parent has children, and has methods for accessing them.  The Parent\nclass is never encountered except …\n",null,0],["REXML::ParseException","","Ruby/classes/REXML/ParseException.html","","",null,0],["REXML::Parsers","","Ruby/classes/REXML/Parsers.html","","",null,0],["REXML::Parsers::BaseParser","","Ruby/classes/REXML/Parsers/BaseParser.html","","<p>Using the Pull Parser\n<p><em>This API is experimental, and subject to change.</em>\n\n<pre><code>parser = PullParser.new( &quot;&lt;a&gt;text&lt;b ...</code></pre>\n",null,0],["REXML::Parsers::LightParser","","Ruby/classes/REXML/Parsers/LightParser.html","","",null,0],["REXML::Parsers::PullEvent","","Ruby/classes/REXML/Parsers/PullEvent.html","","<p>A parsing event.  The contents of the event are accessed as an +Array?, and\nthe type is given either …\n",null,0],["REXML::Parsers::PullParser","","Ruby/classes/REXML/Parsers/PullParser.html","","<p>Using the Pull Parser\n<p><em>This API is experimental, and subject to change.</em>\n\n<pre><code>parser = PullParser.new( &quot;&lt;a&gt;text&lt;b ...</code></pre>\n",null,0],["REXML::Parsers::SAX2Parser","","Ruby/classes/REXML/Parsers/SAX2Parser.html","","<p>SAX2Parser\n",null,0],["REXML::Parsers::StreamParser","","Ruby/classes/REXML/Parsers/StreamParser.html","","",null,0],["REXML::Parsers::TreeParser","","Ruby/classes/REXML/Parsers/TreeParser.html","","",null,0],["REXML::Parsers::UltraLightParser","","Ruby/classes/REXML/Parsers/UltraLightParser.html","","",null,0],["REXML::Parsers::XPathParser","","Ruby/classes/REXML/Parsers/XPathParser.html","","<p>You don&#39;t want to use this class.  Really.  Use XPath, which is a\nwrapper for this class.  Believe …\n",null,0],["REXML::QuickPath","","Ruby/classes/REXML/QuickPath.html","","",null,0],["REXML::SAX2Listener","","Ruby/classes/REXML/SAX2Listener.html","","<p>A template for stream parser listeners. Note that the declarations\n(attlistdecl, elementdecl, etc) are …\n",null,0],["REXML::Source","","Ruby/classes/REXML/Source.html","","<p>A Source can be searched for patterns, and wraps buffers and other objects\nand provides consumption of …\n",null,0],["REXML::SourceFactory","","Ruby/classes/REXML/SourceFactory.html","","<p>Generates Source-s.  USE THIS CLASS.\n",null,0],["REXML::StreamListener","","Ruby/classes/REXML/StreamListener.html","","<p>A template for stream parser listeners. Note that the declarations\n(attlistdecl, elementdecl, etc) are …\n",null,0],["REXML::SyncEnumerator","","Ruby/classes/REXML/SyncEnumerator.html","","",null,0],["REXML::Text","","Ruby/classes/REXML/Text.html","","<p>Represents text nodes in an XML document\n",null,0],["REXML::UndefinedNamespaceException","","Ruby/classes/REXML/UndefinedNamespaceException.html","","",null,0],["REXML::Validation","","Ruby/classes/REXML/Validation.html","","",null,0],["REXML::Validation::Choice","","Ruby/classes/REXML/Validation/Choice.html","","",null,0],["REXML::Validation::Event","","Ruby/classes/REXML/Validation/Event.html","","",null,0],["REXML::Validation::Interleave","","Ruby/classes/REXML/Validation/Interleave.html","","",null,0],["REXML::Validation::OneOrMore","","Ruby/classes/REXML/Validation/OneOrMore.html","","",null,0],["REXML::Validation::Optional","","Ruby/classes/REXML/Validation/Optional.html","","",null,0],["REXML::Validation::Ref","","Ruby/classes/REXML/Validation/Ref.html","","",null,0],["REXML::Validation::RelaxNG","","Ruby/classes/REXML/Validation/RelaxNG.html","","<p>Implemented:\n<p>empty\n<p>element\n",null,0],["REXML::Validation::Sequence","","Ruby/classes/REXML/Validation/Sequence.html","","",null,0],["REXML::Validation::State","","Ruby/classes/REXML/Validation/State.html","","",null,0],["REXML::Validation::ValidationException","","Ruby/classes/REXML/Validation/ValidationException.html","","",null,0],["REXML::Validation::Validator","","Ruby/classes/REXML/Validation/Validator.html","","",null,0],["REXML::Validation::ZeroOrMore","","Ruby/classes/REXML/Validation/ZeroOrMore.html","","",null,0],["REXML::XMLDecl","","Ruby/classes/REXML/XMLDecl.html","","<p>NEEDS DOCUMENTATION\n",null,0],["REXML::XMLTokens","","Ruby/classes/REXML/XMLTokens.html","","<p>Defines a number of tokens used for parsing XML.  Not for general\nconsumption.\n",null,0],["REXML::XPath","","Ruby/classes/REXML/XPath.html","","<p>Wrapper class.  Use this class to access the XPath functions.\n",null,0],["REXML::XPathParser","","Ruby/classes/REXML/XPathParser.html","","<p>You don&#39;t want to use this class.  Really.  Use XPath, which is a\nwrapper for this class.  Believe …\n",null,0],["RSS","","Ruby/classes/RSS.html","","<p>RSS reading and writing\n<p>Really Simple Syndication (RSS) is a family of formats that describe\n&#39;feeds,&#39; …\n",null,0],["RSS::Atom","","Ruby/classes/RSS/Atom.html","","<p>Atom is an XML-based document format that is used to describe\n&#39;feeds&#39; of related information. …\n",null,0],["RSS::Atom::CommonModel","","Ruby/classes/RSS/Atom/CommonModel.html","","",null,0],["RSS::Atom::ContentModel","","Ruby/classes/RSS/Atom/ContentModel.html","","",null,0],["RSS::Atom::ContentModel::ClassMethods","","Ruby/classes/RSS/Atom/ContentModel/ClassMethods.html","","",null,0],["RSS::Atom::DateConstruct","","Ruby/classes/RSS/Atom/DateConstruct.html","","<p>Element used to describe an Atom date and time in the ISO 8601 format\n<p>Examples:\n<p>2013-03-04T15:30:02Z\n",null,0],["RSS::Atom::DuplicateLinkChecker","","Ruby/classes/RSS/Atom/DuplicateLinkChecker.html","","",null,0],["RSS::Atom::Entry","","Ruby/classes/RSS/Atom/Entry.html","","<p>Defines a top-level Atom Entry element\n",null,0],["RSS::Atom::Feed","","Ruby/classes/RSS/Atom/Feed.html","","<p>Atom feed element\n<p>A Feed has several metadata attributes in addition to a number of Entry\nchild elements …\n",null,0],["RSS::Atom::Feed::Author","","Ruby/classes/RSS/Atom/Feed/Author.html","","",null,0],["RSS::Atom::Feed::Category","","Ruby/classes/RSS/Atom/Feed/Category.html","","",null,0],["RSS::Atom::Feed::Contributor","","Ruby/classes/RSS/Atom/Feed/Contributor.html","","",null,0],["RSS::Atom::Feed::Entry","","Ruby/classes/RSS/Atom/Feed/Entry.html","","<p>Defines a child Atom Entry element for an Atom Feed\n",null,0],["RSS::Atom::Feed::Entry::Content","","Ruby/classes/RSS/Atom/Feed/Entry/Content.html","","",null,0],["RSS::Atom::Feed::Entry::Published","","Ruby/classes/RSS/Atom/Feed/Entry/Published.html","","",null,0],["RSS::Atom::Feed::Entry::Source","","Ruby/classes/RSS/Atom/Feed/Entry/Source.html","","",null,0],["RSS::Atom::Feed::Entry::Summary","","Ruby/classes/RSS/Atom/Feed/Entry/Summary.html","","",null,0],["RSS::Atom::Feed::Generator","","Ruby/classes/RSS/Atom/Feed/Generator.html","","",null,0],["RSS::Atom::Feed::Icon","","Ruby/classes/RSS/Atom/Feed/Icon.html","","<p>Atom Icon element\n<p>Image that provides a visual identification for the Feed.  Image should\nhave an aspect …\n",null,0],["RSS::Atom::Feed::Id","","Ruby/classes/RSS/Atom/Feed/Id.html","","<p>Atom ID element\n<p>Universally Unique Identifier (UUID) for the Feed\n",null,0],["RSS::Atom::Feed::Link","","Ruby/classes/RSS/Atom/Feed/Link.html","","<p>Defines an Atom Link element\n<p>A Link has the following attributes:\n<p>href\n",null,0],["RSS::Atom::Feed::Logo","","Ruby/classes/RSS/Atom/Feed/Logo.html","","<p>Atom Logo element\n<p>Image that provides a visual identification for the Feed.  Image should\nhave an aspect …\n",null,0],["RSS::Atom::Feed::Rights","","Ruby/classes/RSS/Atom/Feed/Rights.html","","<p>Atom Rights element\n<p>TextConstruct that contains copyright information regarding the content in\nan Entry …\n",null,0],["RSS::Atom::Feed::Subtitle","","Ruby/classes/RSS/Atom/Feed/Subtitle.html","","<p>Atom Subtitle element\n<p>TextConstruct that conveys a description or subtitle for a Feed\n",null,0],["RSS::Atom::Feed::Title","","Ruby/classes/RSS/Atom/Feed/Title.html","","<p>Atom Title element\n<p>TextConstruct that conveys a description or title for a feed or Entry\n",null,0],["RSS::Atom::Feed::Updated","","Ruby/classes/RSS/Atom/Feed/Updated.html","","<p>Atom Updated element\n<p>DateConstruct indicating the most recent time when an Entry or Feed was\nmodified …\n",null,0],["RSS::Atom::PersonConstruct","","Ruby/classes/RSS/Atom/PersonConstruct.html","","<p>The PersonConstruct module is used to define a Person Atom element that can\nbe used to describe a person, …\n",null,0],["RSS::Atom::PersonConstruct::Email","","Ruby/classes/RSS/Atom/PersonConstruct/Email.html","","<p>The email of the person or entity\n",null,0],["RSS::Atom::PersonConstruct::Name","","Ruby/classes/RSS/Atom/PersonConstruct/Name.html","","<p>The name of the person or entity\n",null,0],["RSS::Atom::PersonConstruct::Uri","","Ruby/classes/RSS/Atom/PersonConstruct/Uri.html","","<p>The URI of the person or entity\n",null,0],["RSS::Atom::TextConstruct","","Ruby/classes/RSS/Atom/TextConstruct.html","","<p>The TextConstruct module is used to define a Text construct Atom element,\nwhich is used to store small …\n",null,0],["RSS::Atom::URIContentModel","","Ruby/classes/RSS/Atom/URIContentModel.html","","",null,0],["RSS::BaseDublinCoreModel","","Ruby/classes/RSS/BaseDublinCoreModel.html","","",null,0],["RSS::BaseListener","","Ruby/classes/RSS/BaseListener.html","","",null,0],["RSS::BaseModel","","Ruby/classes/RSS/BaseModel.html","","",null,0],["RSS::BaseParser","","Ruby/classes/RSS/BaseParser.html","","",null,0],["RSS::BaseTrackBackModel","","Ruby/classes/RSS/BaseTrackBackModel.html","","",null,0],["RSS::ContentModel","","Ruby/classes/RSS/ContentModel.html","","",null,0],["RSS::ConversionError","","Ruby/classes/RSS/ConversionError.html","","<p>Raised when a conversion failure occurs.\n",null,0],["RSS::Converter","","Ruby/classes/RSS/Converter.html","","",null,0],["RSS::DublinCoreModel","","Ruby/classes/RSS/DublinCoreModel.html","","",null,0],["RSS::DublincoreModel","","Ruby/classes/RSS/DublinCoreModel.html","","",null,0],["RSS::Element","","Ruby/classes/RSS/Element.html","","",null,0],["RSS::Error","","Ruby/classes/RSS/Error.html","","",null,0],["RSS::ITunesBaseModel","","Ruby/classes/RSS/ITunesBaseModel.html","","",null,0],["RSS::ITunesChannelModel","","Ruby/classes/RSS/ITunesChannelModel.html","","",null,0],["RSS::ITunesChannelModel::ITunesCategory","","Ruby/classes/RSS/ITunesChannelModel/ITunesCategory.html","","",null,0],["RSS::ITunesChannelModel::ITunesImage","","Ruby/classes/RSS/ITunesChannelModel/ITunesImage.html","","",null,0],["RSS::ITunesChannelModel::ITunesOwner","","Ruby/classes/RSS/ITunesChannelModel/ITunesOwner.html","","",null,0],["RSS::ITunesItemModel","","Ruby/classes/RSS/ITunesItemModel.html","","",null,0],["RSS::ITunesItemModel::ITunesDuration","","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html","","",null,0],["RSS::ITunesModelUtils","","Ruby/classes/RSS/ITunesModelUtils.html","","",null,0],["RSS::ImageFaviconModel","","Ruby/classes/RSS/ImageFaviconModel.html","","",null,0],["RSS::ImageFaviconModel::ImageFavicon","","Ruby/classes/RSS/ImageFaviconModel/ImageFavicon.html","","",null,0],["RSS::ImageItemModel","","Ruby/classes/RSS/ImageItemModel.html","","",null,0],["RSS::ImageItemModel::ImageItem","","Ruby/classes/RSS/ImageItemModel/ImageItem.html","","",null,0],["RSS::ImageModelUtils","","Ruby/classes/RSS/ImageModelUtils.html","","",null,0],["RSS::InvalidRSSError","","Ruby/classes/RSS/InvalidRSSError.html","","",null,0],["RSS::ListenerMixin","","Ruby/classes/RSS/ListenerMixin.html","","",null,0],["RSS::Maker","","Ruby/classes/RSS/Maker.html","","<p>Provides a set of builders for various RSS objects\n<p>Feeds\n<p>RSS 0.91\n",null,0],["RSS::Maker::Atom","","Ruby/classes/RSS/Maker/Atom.html","","",null,0],["RSS::Maker::Atom::Entry","","Ruby/classes/RSS/Maker/Atom/Entry.html","","",null,0],["RSS::Maker::Atom::Entry::Channel","","Ruby/classes/RSS/Maker/Atom/Entry/Channel.html","","",null,0],["RSS::Maker::Atom::Entry::Channel::Cloud","","Ruby/classes/RSS/Maker/Atom/Entry/Channel/Cloud.html","","",null,0],["RSS::Maker::Atom::Entry::Channel::Description","","Ruby/classes/RSS/Maker/Atom/Entry/Channel/Description.html","","",null,0],["RSS::Maker::Atom::Entry::Channel::Generator","","Ruby/classes/RSS/Maker/Atom/Entry/Channel/Generator.html","","",null,0],["RSS::Maker::Atom::Entry::Channel::SkipDays","","Ruby/classes/RSS/Maker/Atom/Entry/Channel/SkipDays.html","","",null,0],["RSS::Maker::Atom::Entry::Channel::SkipDays::Day","","Ruby/classes/RSS/Maker/Atom/Entry/Channel/SkipDays/Day.html","","",null,0],["RSS::Maker::Atom::Entry::Channel::SkipHours","","Ruby/classes/RSS/Maker/Atom/Entry/Channel/SkipHours.html","","",null,0],["RSS::Maker::Atom::Entry::Channel::SkipHours::Hour","","Ruby/classes/RSS/Maker/Atom/Entry/Channel/SkipHours/Hour.html","","",null,0],["RSS::Maker::Atom::Entry::Image","","Ruby/classes/RSS/Maker/Atom/Entry/Image.html","","",null,0],["RSS::Maker::Atom::Entry::Items","","Ruby/classes/RSS/Maker/Atom/Entry/Items.html","","",null,0],["RSS::Maker::Atom::Entry::Items::Item","","Ruby/classes/RSS/Maker/Atom/Entry/Items/Item.html","","",null,0],["RSS::Maker::Atom::Entry::Textinput","","Ruby/classes/RSS/Maker/Atom/Entry/Textinput.html","","",null,0],["RSS::Maker::Atom::Feed","","Ruby/classes/RSS/Maker/Atom/Feed.html","","",null,0],["RSS::Maker::Atom::Feed::Channel","","Ruby/classes/RSS/Maker/Atom/Feed/Channel.html","","",null,0],["RSS::Maker::Atom::Feed::Channel::Categories","","Ruby/classes/RSS/Maker/Atom/Feed/Channel/Categories.html","","",null,0],["RSS::Maker::Atom::Feed::Channel::Categories::Category","","Ruby/classes/RSS/Maker/Atom/Feed/Channel/Categories/Category.html","","",null,0],["RSS::Maker::Atom::Feed::Channel::Cloud","","Ruby/classes/RSS/Maker/Atom/Feed/Channel/Cloud.html","","",null,0],["RSS::Maker::Atom::Feed::Channel::Generator","","Ruby/classes/RSS/Maker/Atom/Feed/Channel/Generator.html","","",null,0],["RSS::Maker::Atom::Feed::Channel::Links","","Ruby/classes/RSS/Maker/Atom/Feed/Channel/Links.html","","",null,0],["RSS::Maker::Atom::Feed::Channel::Links::Link","","Ruby/classes/RSS/Maker/Atom/Feed/Channel/Links/Link.html","","",null,0],["RSS::Maker::Atom::Feed::Channel::SkipDays","","Ruby/classes/RSS/Maker/Atom/Feed/Channel/SkipDays.html","","",null,0],["RSS::Maker::Atom::Feed::Channel::SkipDays::Day","","Ruby/classes/RSS/Maker/Atom/Feed/Channel/SkipDays/Day.html","","",null,0],["RSS::Maker::Atom::Feed::Channel::SkipHours","","Ruby/classes/RSS/Maker/Atom/Feed/Channel/SkipHours.html","","",null,0],["RSS::Maker::Atom::Feed::Channel::SkipHours::Hour","","Ruby/classes/RSS/Maker/Atom/Feed/Channel/SkipHours/Hour.html","","",null,0],["RSS::Maker::Atom::Feed::Image","","Ruby/classes/RSS/Maker/Atom/Feed/Image.html","","",null,0],["RSS::Maker::Atom::Feed::Items","","Ruby/classes/RSS/Maker/Atom/Feed/Items.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Categories","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Categories.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Categories::Category","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Categories/Category.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Content","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Content.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Enclosure","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Enclosure.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Guid","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Guid.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Links","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Links.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Links::Link","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Links/Link.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Source","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Source::Categories","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Categories.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Source::Categories::Category","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Categories/Category.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Source::Generator","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Generator.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Source::Icon","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Icon.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Source::Links","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Links.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Source::Links::Link","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Links/Link.html","","",null,0],["RSS::Maker::Atom::Feed::Items::Item::Source::Logo","","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Logo.html","","",null,0],["RSS::Maker::Atom::Feed::Textinput","","Ruby/classes/RSS/Maker/Atom/Feed/Textinput.html","","",null,0],["RSS::Maker::AtomCategory","","Ruby/classes/RSS/Maker/AtomCategory.html","","",null,0],["RSS::Maker::AtomGenerator","","Ruby/classes/RSS/Maker/AtomGenerator.html","","",null,0],["RSS::Maker::AtomLink","","Ruby/classes/RSS/Maker/AtomLink.html","","",null,0],["RSS::Maker::AtomLogo","","Ruby/classes/RSS/Maker/AtomLogo.html","","",null,0],["RSS::Maker::AtomPersonConstructBase","","Ruby/classes/RSS/Maker/AtomPersonConstructBase.html","","",null,0],["RSS::Maker::AtomPersons","","Ruby/classes/RSS/Maker/AtomPersons.html","","",null,0],["RSS::Maker::AtomTextConstruct","","Ruby/classes/RSS/Maker/AtomTextConstruct.html","","",null,0],["RSS::Maker::AtomTextConstructBase","","Ruby/classes/RSS/Maker/AtomTextConstructBase.html","","",null,0],["RSS::Maker::AtomTextConstructBase::EnsureXMLContent","","Ruby/classes/RSS/Maker/AtomTextConstructBase/EnsureXMLContent.html","","",null,0],["RSS::Maker::Base","","Ruby/classes/RSS/Maker/Base.html","","",null,0],["RSS::Maker::ChannelBase","","Ruby/classes/RSS/Maker/ChannelBase.html","","",null,0],["RSS::Maker::ChannelBase::AuthorsBase","","Ruby/classes/RSS/Maker/ChannelBase/AuthorsBase.html","","",null,0],["RSS::Maker::ChannelBase::AuthorsBase::AuthorBase","","Ruby/classes/RSS/Maker/ChannelBase/AuthorsBase/AuthorBase.html","","",null,0],["RSS::Maker::ChannelBase::CategoriesBase","","Ruby/classes/RSS/Maker/ChannelBase/CategoriesBase.html","","",null,0],["RSS::Maker::ChannelBase::CategoriesBase::CategoryBase","","Ruby/classes/RSS/Maker/ChannelBase/CategoriesBase/CategoryBase.html","","",null,0],["RSS::Maker::ChannelBase::CloudBase","","Ruby/classes/RSS/Maker/ChannelBase/CloudBase.html","","",null,0],["RSS::Maker::ChannelBase::ContributorsBase","","Ruby/classes/RSS/Maker/ChannelBase/ContributorsBase.html","","",null,0],["RSS::Maker::ChannelBase::ContributorsBase::ContributorBase","","Ruby/classes/RSS/Maker/ChannelBase/ContributorsBase/ContributorBase.html","","",null,0],["RSS::Maker::ChannelBase::CopyrightBase","","Ruby/classes/RSS/Maker/ChannelBase/CopyrightBase.html","","",null,0],["RSS::Maker::ChannelBase::DescriptionBase","","Ruby/classes/RSS/Maker/ChannelBase/DescriptionBase.html","","",null,0],["RSS::Maker::ChannelBase::GeneratorBase","","Ruby/classes/RSS/Maker/ChannelBase/GeneratorBase.html","","",null,0],["RSS::Maker::ChannelBase::ITunesCategories","","Ruby/classes/RSS/Maker/ChannelBase/ITunesCategories.html","","",null,0],["RSS::Maker::ChannelBase::ITunesCategories::ITunesCategory","","Ruby/classes/RSS/Maker/ChannelBase/ITunesCategories/ITunesCategory.html","","",null,0],["RSS::Maker::ChannelBase::ITunesImage","","Ruby/classes/RSS/Maker/ChannelBase/ITunesImage.html","","",null,0],["RSS::Maker::ChannelBase::ITunesOwner","","Ruby/classes/RSS/Maker/ChannelBase/ITunesOwner.html","","",null,0],["RSS::Maker::ChannelBase::LinksBase","","Ruby/classes/RSS/Maker/ChannelBase/LinksBase.html","","",null,0],["RSS::Maker::ChannelBase::LinksBase::LinkBase","","Ruby/classes/RSS/Maker/ChannelBase/LinksBase/LinkBase.html","","",null,0],["RSS::Maker::ChannelBase::SkipDaysBase","","Ruby/classes/RSS/Maker/ChannelBase/SkipDaysBase.html","","",null,0],["RSS::Maker::ChannelBase::SkipDaysBase::DayBase","","Ruby/classes/RSS/Maker/ChannelBase/SkipDaysBase/DayBase.html","","",null,0],["RSS::Maker::ChannelBase::SkipHoursBase","","Ruby/classes/RSS/Maker/ChannelBase/SkipHoursBase.html","","",null,0],["RSS::Maker::ChannelBase::SkipHoursBase::HourBase","","Ruby/classes/RSS/Maker/ChannelBase/SkipHoursBase/HourBase.html","","",null,0],["RSS::Maker::ChannelBase::TitleBase","","Ruby/classes/RSS/Maker/ChannelBase/TitleBase.html","","",null,0],["RSS::Maker::ContentModel","","Ruby/classes/RSS/Maker/ContentModel.html","","",null,0],["RSS::Maker::DublinCoreModel","","Ruby/classes/RSS/Maker/DublinCoreModel.html","","",null,0],["RSS::Maker::ITunesBaseModel","","Ruby/classes/RSS/Maker/ITunesBaseModel.html","","",null,0],["RSS::Maker::ITunesChannelModel","","Ruby/classes/RSS/Maker/ITunesChannelModel.html","","",null,0],["RSS::Maker::ITunesChannelModel::ITunesCategoriesBase","","Ruby/classes/RSS/Maker/ITunesChannelModel/ITunesCategoriesBase.html","","",null,0],["RSS::Maker::ITunesChannelModel::ITunesCategoriesBase::ITunesCategoryBase","","Ruby/classes/RSS/Maker/ITunesChannelModel/ITunesCategoriesBase/ITunesCategoryBase.html","","",null,0],["RSS::Maker::ITunesChannelModel::ITunesImageBase","","Ruby/classes/RSS/Maker/ITunesChannelModel/ITunesImageBase.html","","",null,0],["RSS::Maker::ITunesChannelModel::ITunesOwnerBase","","Ruby/classes/RSS/Maker/ITunesChannelModel/ITunesOwnerBase.html","","",null,0],["RSS::Maker::ITunesItemModel","","Ruby/classes/RSS/Maker/ITunesItemModel.html","","",null,0],["RSS::Maker::ITunesItemModel::ITunesDurationBase","","Ruby/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html","","",null,0],["RSS::Maker::ImageBase","","Ruby/classes/RSS/Maker/ImageBase.html","","",null,0],["RSS::Maker::ImageFaviconModel","","Ruby/classes/RSS/Maker/ImageFaviconModel.html","","",null,0],["RSS::Maker::ImageFaviconModel::ImageFaviconBase","","Ruby/classes/RSS/Maker/ImageFaviconModel/ImageFaviconBase.html","","",null,0],["RSS::Maker::ImageItemModel","","Ruby/classes/RSS/Maker/ImageItemModel.html","","",null,0],["RSS::Maker::ImageItemModel::ImageItemBase","","Ruby/classes/RSS/Maker/ImageItemModel/ImageItemBase.html","","",null,0],["RSS::Maker::ItemsBase","","Ruby/classes/RSS/Maker/ItemsBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::ContentBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::DescriptionBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/DescriptionBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::EnclosureBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/EnclosureBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::GuidBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/GuidBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::ITunesDuration","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ITunesDuration.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::RightsBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/RightsBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::SourceBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::SourceBase::IconBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase/IconBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::SourceBase::LogoBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase/LogoBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::SourceBase::RightsBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase/RightsBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::SourceBase::SubtitleBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase/SubtitleBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::SourceBase::TitleBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase/TitleBase.html","","",null,0],["RSS::Maker::ItemsBase::ItemBase::TitleBase","","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/TitleBase.html","","",null,0],["RSS::Maker::RSS09","","Ruby/classes/RSS/Maker/RSS09.html","","",null,0],["RSS::Maker::RSS091","","Ruby/classes/RSS/Maker/RSS091.html","","",null,0],["RSS::Maker::RSS091::Channel","","Ruby/classes/RSS/Maker/RSS091/Channel.html","","",null,0],["RSS::Maker::RSS091::Image","","Ruby/classes/RSS/Maker/RSS091/Image.html","","",null,0],["RSS::Maker::RSS091::Items","","Ruby/classes/RSS/Maker/RSS091/Items.html","","",null,0],["RSS::Maker::RSS091::Items::Item","","Ruby/classes/RSS/Maker/RSS091/Items/Item.html","","",null,0],["RSS::Maker::RSS091::Textinput","","Ruby/classes/RSS/Maker/RSS091/Textinput.html","","",null,0],["RSS::Maker::RSS092","","Ruby/classes/RSS/Maker/RSS092.html","","",null,0],["RSS::Maker::RSS092::Channel","","Ruby/classes/RSS/Maker/RSS092/Channel.html","","",null,0],["RSS::Maker::RSS092::Image","","Ruby/classes/RSS/Maker/RSS092/Image.html","","",null,0],["RSS::Maker::RSS092::Items","","Ruby/classes/RSS/Maker/RSS092/Items.html","","",null,0],["RSS::Maker::RSS092::Items::Item","","Ruby/classes/RSS/Maker/RSS092/Items/Item.html","","",null,0],["RSS::Maker::RSS092::Textinput","","Ruby/classes/RSS/Maker/RSS092/Textinput.html","","",null,0],["RSS::Maker::RSS09::Channel","","Ruby/classes/RSS/Maker/RSS09/Channel.html","","",null,0],["RSS::Maker::RSS09::Channel::Authors","","Ruby/classes/RSS/Maker/RSS09/Channel/Authors.html","","",null,0],["RSS::Maker::RSS09::Channel::Authors::Author","","Ruby/classes/RSS/Maker/RSS09/Channel/Authors/Author.html","","",null,0],["RSS::Maker::RSS09::Channel::Categories","","Ruby/classes/RSS/Maker/RSS09/Channel/Categories.html","","",null,0],["RSS::Maker::RSS09::Channel::Categories::Category","","Ruby/classes/RSS/Maker/RSS09/Channel/Categories/Category.html","","",null,0],["RSS::Maker::RSS09::Channel::Cloud","","Ruby/classes/RSS/Maker/RSS09/Channel/Cloud.html","","",null,0],["RSS::Maker::RSS09::Channel::Contributors","","Ruby/classes/RSS/Maker/RSS09/Channel/Contributors.html","","",null,0],["RSS::Maker::RSS09::Channel::Contributors::Contributor","","Ruby/classes/RSS/Maker/RSS09/Channel/Contributors/Contributor.html","","",null,0],["RSS::Maker::RSS09::Channel::Copyright","","Ruby/classes/RSS/Maker/RSS09/Channel/Copyright.html","","",null,0],["RSS::Maker::RSS09::Channel::Description","","Ruby/classes/RSS/Maker/RSS09/Channel/Description.html","","",null,0],["RSS::Maker::RSS09::Channel::Generator","","Ruby/classes/RSS/Maker/RSS09/Channel/Generator.html","","",null,0],["RSS::Maker::RSS09::Channel::Links","","Ruby/classes/RSS/Maker/RSS09/Channel/Links.html","","",null,0],["RSS::Maker::RSS09::Channel::Links::Link","","Ruby/classes/RSS/Maker/RSS09/Channel/Links/Link.html","","",null,0],["RSS::Maker::RSS09::Channel::SkipDays","","Ruby/classes/RSS/Maker/RSS09/Channel/SkipDays.html","","",null,0],["RSS::Maker::RSS09::Channel::SkipDays::Day","","Ruby/classes/RSS/Maker/RSS09/Channel/SkipDays/Day.html","","",null,0],["RSS::Maker::RSS09::Channel::SkipHours","","Ruby/classes/RSS/Maker/RSS09/Channel/SkipHours.html","","",null,0],["RSS::Maker::RSS09::Channel::SkipHours::Hour","","Ruby/classes/RSS/Maker/RSS09/Channel/SkipHours/Hour.html","","",null,0],["RSS::Maker::RSS09::Channel::Title","","Ruby/classes/RSS/Maker/RSS09/Channel/Title.html","","",null,0],["RSS::Maker::RSS09::Image","","Ruby/classes/RSS/Maker/RSS09/Image.html","","",null,0],["RSS::Maker::RSS09::Items","","Ruby/classes/RSS/Maker/RSS09/Items.html","","",null,0],["RSS::Maker::RSS09::Items::Item","","Ruby/classes/RSS/Maker/RSS09/Items/Item.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Authors","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Authors.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Authors::Author","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Authors/Author.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Categories","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Categories.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Categories::Category","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Categories/Category.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Content","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Content.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Contributors","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Contributors.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Contributors::Contributor","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Contributors/Contributor.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Description","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Description.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Enclosure","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Enclosure.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Guid","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Guid.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Links","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Links.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Links::Link","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Links/Link.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Rights","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Rights.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Authors","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Authors.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Authors::Author","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Authors/Author.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Categories","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Categories.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Categories::Category","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Categories/Category.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Contributors","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Contributors.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Contributors::Contributor","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Contributors/Contributor.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Generator","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Generator.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Icon","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Icon.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Links","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Links.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Links::Link","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Links/Link.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Logo","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Logo.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Rights","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Rights.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Subtitle","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Subtitle.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Source::Title","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Title.html","","",null,0],["RSS::Maker::RSS09::Items::Item::Title","","Ruby/classes/RSS/Maker/RSS09/Items/Item/Title.html","","",null,0],["RSS::Maker::RSS09::Textinput","","Ruby/classes/RSS/Maker/RSS09/Textinput.html","","",null,0],["RSS::Maker::RSS10","","Ruby/classes/RSS/Maker/RSS10.html","","",null,0],["RSS::Maker::RSS10::Channel","","Ruby/classes/RSS/Maker/RSS10/Channel.html","","",null,0],["RSS::Maker::RSS10::Channel::Authors","","Ruby/classes/RSS/Maker/RSS10/Channel/Authors.html","","",null,0],["RSS::Maker::RSS10::Channel::Authors::Author","","Ruby/classes/RSS/Maker/RSS10/Channel/Authors/Author.html","","",null,0],["RSS::Maker::RSS10::Channel::Categories","","Ruby/classes/RSS/Maker/RSS10/Channel/Categories.html","","",null,0],["RSS::Maker::RSS10::Channel::Categories::Category","","Ruby/classes/RSS/Maker/RSS10/Channel/Categories/Category.html","","",null,0],["RSS::Maker::RSS10::Channel::Cloud","","Ruby/classes/RSS/Maker/RSS10/Channel/Cloud.html","","",null,0],["RSS::Maker::RSS10::Channel::Contributors","","Ruby/classes/RSS/Maker/RSS10/Channel/Contributors.html","","",null,0],["RSS::Maker::RSS10::Channel::Contributors::Contributor","","Ruby/classes/RSS/Maker/RSS10/Channel/Contributors/Contributor.html","","",null,0],["RSS::Maker::RSS10::Channel::Copyright","","Ruby/classes/RSS/Maker/RSS10/Channel/Copyright.html","","",null,0],["RSS::Maker::RSS10::Channel::Description","","Ruby/classes/RSS/Maker/RSS10/Channel/Description.html","","",null,0],["RSS::Maker::RSS10::Channel::Generator","","Ruby/classes/RSS/Maker/RSS10/Channel/Generator.html","","",null,0],["RSS::Maker::RSS10::Channel::Links","","Ruby/classes/RSS/Maker/RSS10/Channel/Links.html","","",null,0],["RSS::Maker::RSS10::Channel::Links::Link","","Ruby/classes/RSS/Maker/RSS10/Channel/Links/Link.html","","",null,0],["RSS::Maker::RSS10::Channel::SkipDays","","Ruby/classes/RSS/Maker/RSS10/Channel/SkipDays.html","","",null,0],["RSS::Maker::RSS10::Channel::SkipDays::Day","","Ruby/classes/RSS/Maker/RSS10/Channel/SkipDays/Day.html","","",null,0],["RSS::Maker::RSS10::Channel::SkipHours","","Ruby/classes/RSS/Maker/RSS10/Channel/SkipHours.html","","",null,0],["RSS::Maker::RSS10::Channel::SkipHours::Hour","","Ruby/classes/RSS/Maker/RSS10/Channel/SkipHours/Hour.html","","",null,0],["RSS::Maker::RSS10::Channel::Title","","Ruby/classes/RSS/Maker/RSS10/Channel/Title.html","","",null,0],["RSS::Maker::RSS10::Image","","Ruby/classes/RSS/Maker/RSS10/Image.html","","",null,0],["RSS::Maker::RSS10::Items","","Ruby/classes/RSS/Maker/RSS10/Items.html","","",null,0],["RSS::Maker::RSS10::Items::Item","","Ruby/classes/RSS/Maker/RSS10/Items/Item.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Authors","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Authors.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Authors::Author","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Authors/Author.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Categories","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Categories.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Categories::Category","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Categories/Category.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Content","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Content.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Contributors","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Contributors.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Contributors::Contributor","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Contributors/Contributor.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Description","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Description.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Enclosure","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Enclosure.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Guid","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Guid.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Links","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Links.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Links::Link","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Links/Link.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Rights","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Rights.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Authors","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Authors.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Authors::Author","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Authors/Author.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Categories","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Categories.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Categories::Category","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Categories/Category.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Contributors","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Contributors.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Contributors::Contributor","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Contributors/Contributor.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Generator","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Generator.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Icon","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Icon.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Links","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Links.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Links::Link","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Links/Link.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Logo","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Logo.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Rights","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Rights.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Subtitle","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Subtitle.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Source::Title","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Title.html","","",null,0],["RSS::Maker::RSS10::Items::Item::Title","","Ruby/classes/RSS/Maker/RSS10/Items/Item/Title.html","","",null,0],["RSS::Maker::RSS10::Textinput","","Ruby/classes/RSS/Maker/RSS10/Textinput.html","","",null,0],["RSS::Maker::RSS20","","Ruby/classes/RSS/Maker/RSS20.html","","",null,0],["RSS::Maker::RSS20::Channel","","Ruby/classes/RSS/Maker/RSS20/Channel.html","","",null,0],["RSS::Maker::RSS20::Channel::Categories","","Ruby/classes/RSS/Maker/RSS20/Channel/Categories.html","","",null,0],["RSS::Maker::RSS20::Channel::Categories::Category","","Ruby/classes/RSS/Maker/RSS20/Channel/Categories/Category.html","","",null,0],["RSS::Maker::RSS20::Channel::Cloud","","Ruby/classes/RSS/Maker/RSS20/Channel/Cloud.html","","",null,0],["RSS::Maker::RSS20::Channel::Generator","","Ruby/classes/RSS/Maker/RSS20/Channel/Generator.html","","",null,0],["RSS::Maker::RSS20::Channel::SkipDays","","Ruby/classes/RSS/Maker/RSS20/Channel/SkipDays.html","","",null,0],["RSS::Maker::RSS20::Channel::SkipDays::Day","","Ruby/classes/RSS/Maker/RSS20/Channel/SkipDays/Day.html","","",null,0],["RSS::Maker::RSS20::Channel::SkipHours","","Ruby/classes/RSS/Maker/RSS20/Channel/SkipHours.html","","",null,0],["RSS::Maker::RSS20::Channel::SkipHours::Hour","","Ruby/classes/RSS/Maker/RSS20/Channel/SkipHours/Hour.html","","",null,0],["RSS::Maker::RSS20::Image","","Ruby/classes/RSS/Maker/RSS20/Image.html","","",null,0],["RSS::Maker::RSS20::Items","","Ruby/classes/RSS/Maker/RSS20/Items.html","","",null,0],["RSS::Maker::RSS20::Items::Item","","Ruby/classes/RSS/Maker/RSS20/Items/Item.html","","",null,0],["RSS::Maker::RSS20::Items::Item::Authors","","Ruby/classes/RSS/Maker/RSS20/Items/Item/Authors.html","","",null,0],["RSS::Maker::RSS20::Items::Item::Authors::Author","","Ruby/classes/RSS/Maker/RSS20/Items/Item/Authors/Author.html","","",null,0],["RSS::Maker::RSS20::Items::Item::Categories","","Ruby/classes/RSS/Maker/RSS20/Items/Item/Categories.html","","",null,0],["RSS::Maker::RSS20::Items::Item::Categories::Category","","Ruby/classes/RSS/Maker/RSS20/Items/Item/Categories/Category.html","","",null,0],["RSS::Maker::RSS20::Items::Item::Enclosure","","Ruby/classes/RSS/Maker/RSS20/Items/Item/Enclosure.html","","",null,0],["RSS::Maker::RSS20::Items::Item::Guid","","Ruby/classes/RSS/Maker/RSS20/Items/Item/Guid.html","","",null,0],["RSS::Maker::RSS20::Items::Item::Source","","Ruby/classes/RSS/Maker/RSS20/Items/Item/Source.html","","",null,0],["RSS::Maker::RSS20::Items::Item::Source::Links","","Ruby/classes/RSS/Maker/RSS20/Items/Item/Source/Links.html","","",null,0],["RSS::Maker::RSS20::Items::Item::Source::Links::Link","","Ruby/classes/RSS/Maker/RSS20/Items/Item/Source/Links/Link.html","","",null,0],["RSS::Maker::RSS20::Textinput","","Ruby/classes/RSS/Maker/RSS20/Textinput.html","","",null,0],["RSS::Maker::RSSBase","","Ruby/classes/RSS/Maker/RSSBase.html","","",null,0],["RSS::Maker::SetupDefaultDate","","Ruby/classes/RSS/Maker/SetupDefaultDate.html","","",null,0],["RSS::Maker::SetupDefaultLanguage","","Ruby/classes/RSS/Maker/SetupDefaultLanguage.html","","",null,0],["RSS::Maker::SlashModel","","Ruby/classes/RSS/Maker/SlashModel.html","","",null,0],["RSS::Maker::SyndicationModel","","Ruby/classes/RSS/Maker/SyndicationModel.html","","",null,0],["RSS::Maker::TaxonomyTopicModel","","Ruby/classes/RSS/Maker/TaxonomyTopicModel.html","","",null,0],["RSS::Maker::TaxonomyTopicModel::TaxonomyTopicsBase","","Ruby/classes/RSS/Maker/TaxonomyTopicModel/TaxonomyTopicsBase.html","","",null,0],["RSS::Maker::TaxonomyTopicModel::TaxonomyTopicsBase::TaxonomyTopicBase","","Ruby/classes/RSS/Maker/TaxonomyTopicModel/TaxonomyTopicsBase/TaxonomyTopicBase.html","","",null,0],["RSS::Maker::TaxonomyTopicsModel","","Ruby/classes/RSS/Maker/TaxonomyTopicsModel.html","","",null,0],["RSS::Maker::TaxonomyTopicsModel::TaxonomyTopicsBase","","Ruby/classes/RSS/Maker/TaxonomyTopicsModel/TaxonomyTopicsBase.html","","",null,0],["RSS::Maker::TextinputBase","","Ruby/classes/RSS/Maker/TextinputBase.html","","",null,0],["RSS::Maker::TrackBackModel","","Ruby/classes/RSS/Maker/TrackBackModel.html","","",null,0],["RSS::Maker::TrackBackModel::TrackBackAboutsBase","","Ruby/classes/RSS/Maker/TrackBackModel/TrackBackAboutsBase.html","","",null,0],["RSS::Maker::TrackBackModel::TrackBackAboutsBase::TrackBackAboutBase","","Ruby/classes/RSS/Maker/TrackBackModel/TrackBackAboutsBase/TrackBackAboutBase.html","","",null,0],["RSS::Maker::XMLStyleSheets","","Ruby/classes/RSS/Maker/XMLStyleSheets.html","","",null,0],["RSS::Maker::XMLStyleSheets::XMLStyleSheet","","Ruby/classes/RSS/Maker/XMLStyleSheets/XMLStyleSheet.html","","",null,0],["RSS::MissingAttributeError","","Ruby/classes/RSS/MissingAttributeError.html","","<p>Raised if a required attribute is missing.\n",null,0],["RSS::MissingTagError","","Ruby/classes/RSS/MissingTagError.html","","<p>Raised if no matching tag is found.\n",null,0],["RSS::NSError","","Ruby/classes/RSS/NSError.html","","",null,0],["RSS::NotAvailableValueError","","Ruby/classes/RSS/NotAvailableValueError.html","","<p>Raised when an incorrect value is used.\n",null,0],["RSS::NotExceptedTagError","","Ruby/classes/RSS/NotExpectedTagError.html","","<p>Raised when an unexpected tag is encountered.\n",null,0],["RSS::NotExpectedTagError","","Ruby/classes/RSS/NotExpectedTagError.html","","<p>Raised when an unexpected tag is encountered.\n",null,0],["RSS::NotSetError","","Ruby/classes/RSS/NotSetError.html","","<p>Raised when a required variable is not set.\n",null,0],["RSS::NotValidXMLParser","","Ruby/classes/RSS/NotValidXMLParser.html","","",null,0],["RSS::NotWellFormedError","","Ruby/classes/RSS/NotWellFormedError.html","","",null,0],["RSS::OverlappedPrefixError","","Ruby/classes/RSS/OverlappedPrefixError.html","","",null,0],["RSS::Parser","","Ruby/classes/RSS/Parser.html","","",null,0],["RSS::RDF","","Ruby/classes/RSS/RDF.html","","",null,0],["RSS::RDF::Bag","","Ruby/classes/RSS/RDF/Bag.html","","",null,0],["RSS::RDF::Channel","","Ruby/classes/RSS/RDF/Channel.html","","",null,0],["RSS::RDF::Channel::Image","","Ruby/classes/RSS/RDF/Channel/Image.html","","",null,0],["RSS::RDF::Channel::Items","","Ruby/classes/RSS/RDF/Channel/Items.html","","",null,0],["RSS::RDF::Channel::Textinput","","Ruby/classes/RSS/RDF/Channel/Textinput.html","","",null,0],["RSS::RDF::Image","","Ruby/classes/RSS/RDF/Image.html","","",null,0],["RSS::RDF::Item","","Ruby/classes/RSS/RDF/Item.html","","",null,0],["RSS::RDF::Li","","Ruby/classes/RSS/RDF/Li.html","","",null,0],["RSS::RDF::Li","","Ruby/classes/RSS/RDF/Li.html","","",null,0],["RSS::RDF::Seq","","Ruby/classes/RSS/RDF/Seq.html","","",null,0],["RSS::RDF::Seq","","Ruby/classes/RSS/RDF/Seq.html","","",null,0],["RSS::RDF::Seq::Li","","Ruby/classes/RSS/RDF/Li.html","","",null,0],["RSS::RDF::Textinput","","Ruby/classes/RSS/RDF/Textinput.html","","",null,0],["RSS::REXMLLikeXMLParser","","Ruby/classes/RSS/REXMLLikeXMLParser.html","","",null,0],["RSS::REXMLListener","","Ruby/classes/RSS/REXMLListener.html","","",null,0],["RSS::REXMLParser","","Ruby/classes/RSS/REXMLParser.html","","",null,0],["RSS::RSS09","","Ruby/classes/RSS/RSS09.html","","",null,0],["RSS::RSS10","","Ruby/classes/RSS/RSS10.html","","",null,0],["RSS::RootElementMixin","","Ruby/classes/RSS/RootElementMixin.html","","",null,0],["RSS::Rss","","Ruby/classes/RSS/Rss.html","","",null,0],["RSS::Rss::Channel","","Ruby/classes/RSS/Rss/Channel.html","","",null,0],["RSS::Rss::Channel::Cloud","","Ruby/classes/RSS/Rss/Channel/Cloud.html","","",null,0],["RSS::Rss::Channel::Image","","Ruby/classes/RSS/Rss/Channel/Image.html","","",null,0],["RSS::Rss::Channel::Item","","Ruby/classes/RSS/Rss/Channel/Item.html","","",null,0],["RSS::Rss::Channel::Item::Category","","Ruby/classes/RSS/Rss/Channel/Item/Category.html","","",null,0],["RSS::Rss::Channel::Item::Enclosure","","Ruby/classes/RSS/Rss/Channel/Item/Enclosure.html","","",null,0],["RSS::Rss::Channel::Item::Guid","","Ruby/classes/RSS/Rss/Channel/Item/Guid.html","","",null,0],["RSS::Rss::Channel::Item::Source","","Ruby/classes/RSS/Rss/Channel/Item/Source.html","","",null,0],["RSS::Rss::Channel::SkipDays","","Ruby/classes/RSS/Rss/Channel/SkipDays.html","","",null,0],["RSS::Rss::Channel::SkipDays::Day","","Ruby/classes/RSS/Rss/Channel/SkipDays/Day.html","","",null,0],["RSS::Rss::Channel::SkipHours","","Ruby/classes/RSS/Rss/Channel/SkipHours.html","","",null,0],["RSS::Rss::Channel::SkipHours::Hour","","Ruby/classes/RSS/Rss/Channel/SkipHours/Hour.html","","",null,0],["RSS::Rss::Channel::TextInput","","Ruby/classes/RSS/Rss/Channel/TextInput.html","","",null,0],["RSS::SetupMaker","","Ruby/classes/RSS/SetupMaker.html","","",null,0],["RSS::SlashModel","","Ruby/classes/RSS/SlashModel.html","","",null,0],["RSS::SyndicationModel","","Ruby/classes/RSS/SyndicationModel.html","","",null,0],["RSS::TaxonomyTopicModel","","Ruby/classes/RSS/TaxonomyTopicModel.html","","",null,0],["RSS::TaxonomyTopicModel::TaxonomyTopic","","Ruby/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html","","",null,0],["RSS::TaxonomyTopicsModel","","Ruby/classes/RSS/TaxonomyTopicsModel.html","","",null,0],["RSS::TaxonomyTopicsModel::TaxonomyTopics","","Ruby/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html","","",null,0],["RSS::TaxonomyTopicsModel::TaxonomyTopics::Bag","","Ruby/classes/RSS/RDF/Bag.html","","",null,0],["RSS::TooMuchTagError","","Ruby/classes/RSS/TooMuchTagError.html","","<p>Raised if there are more occurrences of the tag than expected.\n",null,0],["RSS::TrackBackModel10","","Ruby/classes/RSS/TrackBackModel10.html","","",null,0],["RSS::TrackBackModel10::TrackBackAbout","","Ruby/classes/RSS/TrackBackModel10/TrackBackAbout.html","","",null,0],["RSS::TrackBackModel10::TrackBackPing","","Ruby/classes/RSS/TrackBackModel10/TrackBackPing.html","","",null,0],["RSS::TrackBackModel20","","Ruby/classes/RSS/TrackBackModel20.html","","",null,0],["RSS::TrackBackModel20::TrackBackAbout","","Ruby/classes/RSS/TrackBackModel20/TrackBackAbout.html","","",null,0],["RSS::TrackBackModel20::TrackBackPing","","Ruby/classes/RSS/TrackBackModel20/TrackBackPing.html","","",null,0],["RSS::TrackBackUtils","","Ruby/classes/RSS/TrackBackUtils.html","","",null,0],["RSS::UnknownConversionMethodError","","Ruby/classes/RSS/UnknownConversionMethodError.html","","<p>Raised when an unknown conversion error occurs.\n",null,0],["RSS::UnknownConvertMethod","","Ruby/classes/RSS/UnknownConversionMethodError.html","","<p>Raised when an unknown conversion error occurs.\n",null,0],["RSS::UnknownTagError","","Ruby/classes/RSS/UnknownTagError.html","","<p>Raised when an unknown tag is found.\n",null,0],["RSS::UnsupportedMakerVersionError","","Ruby/classes/RSS/UnsupportedMakerVersionError.html","","<p>Raised when a RSS::Maker attempts to use an unknown maker.\n",null,0],["RSS::Utils","","Ruby/classes/RSS/Utils.html","","",null,0],["RSS::Utils::CSV","","Ruby/classes/RSS/Utils/CSV.html","","",null,0],["RSS::Utils::InheritedReader","","Ruby/classes/RSS/Utils/InheritedReader.html","","",null,0],["RSS::Utils::YesCleanOther","","Ruby/classes/RSS/Utils/YesCleanOther.html","","",null,0],["RSS::Utils::YesOther","","Ruby/classes/RSS/Utils/YesOther.html","","",null,0],["RSS::XML","","Ruby/classes/RSS/XML.html","","",null,0],["RSS::XML::Element","","Ruby/classes/RSS/XML/Element.html","","",null,0],["RSS::XMLParserListener","","Ruby/classes/RSS/XMLParserListener.html","","",null,0],["RSS::XMLParserNotFound","","Ruby/classes/RSS/XMLParserNotFound.html","","",null,0],["RSS::XMLParserParser","","Ruby/classes/RSS/XMLParserParser.html","","",null,0],["RSS::XMLScanListener","","Ruby/classes/RSS/XMLScanListener.html","","",null,0],["RSS::XMLScanParser","","Ruby/classes/RSS/XMLScanParser.html","","",null,0],["RSS::XMLStyleSheet","","Ruby/classes/RSS/XMLStyleSheet.html","","",null,0],["RSS::XMLStyleSheetMixin","","Ruby/classes/RSS/XMLStyleSheetMixin.html","","",null,0],["RUNNING_UNIT_TESTS","","Rails/files/rails/actionpack/RUNNING_UNIT_TESTS_rdoc.html","","<p>Running with Rake\n<p>The easiest way to run the unit tests is through Rake. The default task\nruns the entire …\n",null,1],["RUNNING_UNIT_TESTS","","Rails/files/rails/activerecord/RUNNING_UNIT_TESTS_rdoc.html","","<p>Setup\n<p>If you don&#39;t have the environment set make sure to read\n\n<pre>http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#testing-active-record</pre>\n",null,1],["Racc","","Ruby/classes/Racc.html","","<p>Racc is a LALR(1) parser generator. It is written in Ruby itself, and\ngenerates Ruby programs.\n<p>Command-line …\n",null,0],["Racc::CparseParams","","Ruby/classes/Racc/CparseParams.html","","",null,0],["Racc::ParseError","","Ruby/classes/Racc/ParseError.html","","",null,0],["Racc::ParseError","","Ruby/classes/Racc/ParseError.html","","",null,0],["Racc::Parser","","Ruby/classes/Racc/Parser.html","","",null,0],["Rails","","Rails/classes/Rails.html","","",null,1],["Rails::API","","Rails/classes/Rails/API.html","","",null,1],["Rails::API::AppTask","","Rails/classes/Rails/API/AppTask.html","","",null,1],["Rails::API::EdgeTask","","Rails/classes/Rails/API/EdgeTask.html","","",null,1],["Rails::API::RepoTask","","Rails/classes/Rails/API/RepoTask.html","","",null,1],["Rails::API::StableTask","","Rails/classes/Rails/API/StableTask.html","","",null,1],["Rails::API::Task","","Rails/classes/Rails/API/Task.html","","",null,1],["Rails::AppBuilder","","Rails/classes/Rails/AppBuilder.html","","<p>The application builder allows you to override elements of the application\ngenerator without being forced …\n",null,1],["Rails::AppRailsLoader","","Rails/classes/Rails/AppRailsLoader.html","","",null,1],["Rails::Application","","Rails/classes/Rails/Application.html","","<p>In Rails 3.0, a Rails::Application object was introduced which is nothing\nmore than an Engine but with …\n",null,1],["Rails::Application::Bootstrap","","Rails/classes/Rails/Application/Bootstrap.html","","",null,1],["Rails::Application::Configuration","","Rails/classes/Rails/Application/Configuration.html","","",null,1],["Rails::Application::Finisher","","Rails/classes/Rails/Application/Finisher.html","","",null,1],["Rails::Application::RoutesReloader","","Rails/classes/Rails/Application/RoutesReloader.html","","",null,1],["Rails::BacktraceCleaner","","Rails/classes/Rails/BacktraceCleaner.html","","",null,1],["Rails::Configuration","","Rails/classes/Rails/Configuration.html","","",null,1],["Rails::Configuration::MiddlewareStackProxy","","Rails/classes/Rails/Configuration/MiddlewareStackProxy.html","","<p>MiddlewareStackProxy is a proxy for the Rails middleware stack that allows\nyou to configure middlewares …\n",null,1],["Rails::Console","","Rails/classes/Rails/Console.html","","",null,1],["Rails::ConsoleMethods","","Rails/classes/Rails/ConsoleMethods.html","","",null,1],["Rails::DBConsole","","Rails/classes/Rails/DBConsole.html","","",null,1],["Rails::DeprecatedConstant","","Rails/classes/Rails/DeprecatedConstant.html","","",null,1],["Rails::Engine","","Rails/classes/Rails/Engine.html","","<p><code>Rails::Engine</code> allows you to wrap a specific Rails application\nor subset of functionality and share it …\n",null,1],["Rails::Engine:::","","Rails/classes/Rails/Engine/:.html","","",null,1],["Rails::Engine::Configuration","","Rails/classes/Rails/Engine/Configuration.html","","",null,1],["Rails::Engine::Railties","","Rails/classes/Rails/Engine/Railties.html","","",null,1],["Rails::Generators","","Rails/classes/Rails/Generators.html","","",null,1],["Rails::Generators::Actions","","Rails/classes/Rails/Generators/Actions.html","","",null,1],["Rails::Generators::ActiveModel","","Rails/classes/Rails/Generators/ActiveModel.html","","<p>ActiveModel is a class to be implemented by each ORM to allow Rails to\ngenerate customized controller …\n",null,1],["Rails::Generators::Base","","Rails/classes/Rails/Generators/Base.html","","",null,1],["Rails::Generators::MailerGenerator","","Rails/classes/Rails/Generators/MailerGenerator.html","","",null,1],["Rails::Generators::Migration","","Rails/classes/Rails/Generators/Migration.html","","<p>Holds common methods for migrations. It assumes that migrations has the\n[0-9]*_name format and can be …\n",null,1],["Rails::Generators::Migration::ClassMethods","","Rails/classes/Rails/Generators/Migration/ClassMethods.html","","",null,1],["Rails::Generators::NamedBase","","Rails/classes/Rails/Generators/NamedBase.html","","",null,1],["Rails::Info","","Rails/classes/Rails/Info.html","","",null,1],["Rails::Initializable","","Rails/classes/Rails/Initializable.html","","",null,1],["Rails::Initializable::ClassMethods","","Rails/classes/Rails/Initializable/ClassMethods.html","","",null,1],["Rails::Initializable::Collection","","Rails/classes/Rails/Initializable/Collection.html","","",null,1],["Rails::Initializable::Initializer","","Rails/classes/Rails/Initializable/Initializer.html","","",null,1],["Rails::Paths","","Rails/classes/Rails/Paths.html","","",null,1],["Rails::Paths::Path","","Rails/classes/Rails/Paths/Path.html","","",null,1],["Rails::Paths::Root","","Rails/classes/Rails/Paths/Root.html","","<p>This object is an extended hash that behaves as root of the\n<code>Rails::Paths</code> system. It allows you to collect …\n",null,1],["Rails::PluginBuilder","","Rails/classes/Rails/PluginBuilder.html","","<p>The plugin builder allows you to override elements of the plugin generator\nwithout being forced to reverse …\n",null,1],["Rails::Rack","","Rails/classes/Rails/Rack.html","","",null,1],["Rails::Rack::Debugger","","Rails/classes/Rails/Rack/Debugger.html","","",null,1],["Rails::Rack::LogTailer","","Rails/classes/Rails/Rack/LogTailer.html","","",null,1],["Rails::Rack::Logger","","Rails/classes/Rails/Rack/Logger.html","","<p>Sets log tags, logs the request, calls the app, and flushes the logs.\n",null,1],["Rails::Railtie","","Rails/classes/Rails/Railtie.html","","<p>Railtie is the core of the Rails framework and provides several hooks to\nextend Rails and/or modify the …\n",null,1],["Rails::Railtie::Configurable","","Rails/classes/Rails/Railtie/Configurable.html","","",null,1],["Rails::Railtie::Configurable::ClassMethods","","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html","","",null,1],["Rails::Railtie::Configuration","","Rails/classes/Rails/Railtie/Configuration.html","","",null,1],["Rails::Server","","Rails/classes/Rails/Server.html","","",null,1],["Rails::Server::Options","","Rails/classes/Rails/Server/Options.html","","",null,1],["Rails::VERSION","","Rails/classes/Rails/VERSION.html","","",null,1],["Raise","E2MM","Ruby/classes/E2MM.html#method-c-Raise","(klass = E2MM, err = nil, *rest)","<p>Fail(klass, err, *rest)\n\n<pre><code>klass:  class to define exception under.\nerr:    exception\nrest:   message arguments\n</code></pre>\n",null,0],["Raise","E2MM","Ruby/classes/E2MM.html#method-c-Raise","(klass = E2MM, err = nil, *rest)","<p>Fail(klass, err, *rest)\n\n<pre><code>klass:  class to define exception under.\nerr:    exception\nrest:   message arguments\n</code></pre>\n",null,0],["Raise","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-Raise","(err = nil, *rest)","<p>Fail(err, *rest)\n\n<pre><code>err:    exception\nrest:   message arguments</code></pre>\n",null,0],["Raise","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-Raise","(err = nil, *rest)","<p>Fail(err, *rest)\n\n<pre><code>err:    exception\nrest:   message arguments</code></pre>\n",null,0],["Rake","","Ruby/classes/Rake.html","","",null,0],["Rake::AltSystem","","Ruby/classes/Rake/AltSystem.html","","<p>Alternate implementations of system() and backticks “ on Windows for\nruby-1.8 and earlier.\n",null,0],["Rake::Application","","Ruby/classes/Rake/Application.html","","<p>Rake main application object.  When invoking <code>rake</code> from the\ncommand line, a Rake::Application object is …\n",null,0],["Rake::Backtrace","","Ruby/classes/Rake/Backtrace.html","","",null,0],["Rake::Cloneable","","Ruby/classes/Rake/Cloneable.html","","<p>##########################################################################\nMixin for creating easily …\n",null,0],["Rake::CompositePublisher","","Ruby/classes/Rake/CompositePublisher.html","","<p>Manage several publishers as a single entity.\n",null,0],["Rake::DSL","","Ruby/classes/Rake/DSL.html","","<p>DSL is a module that provides #task, #desc, #namespace, etc.  Use this when\nyou&#39;d like to use rake …\n",null,0],["Rake::DefaultLoader","","Ruby/classes/Rake/DefaultLoader.html","","<p>Default Rakefile loader used by <code>import</code>.\n",null,0],["Rake::EarlyTime","","Ruby/classes/Rake/EarlyTime.html","","<p>EarlyTime is a fake timestamp that occurs <em>before</em> any other time\nvalue.\n",null,0],["Rake::FileCreationTask","","Ruby/classes/Rake/FileCreationTask.html","","<p>A FileCreationTask is a file task that when used as a dependency will be\nneeded if and only if the file …\n",null,0],["Rake::FileList","","Ruby/classes/Rake/FileList.html","","<p>######################################################################### A\nFileList is essentially an …\n",null,0],["Rake::FileTask","","Ruby/classes/Rake/FileTask.html","","<p>######################################################################### A\nFileTask is a task that includes …\n",null,0],["Rake::FileUtilsExt","","Ruby/classes/Rake/FileUtilsExt.html","","<p>FileUtilsExt provides a custom version of the FileUtils methods that\nrespond to the <code>verbose</code> and <code>nowrite</code> …\n",null,0],["Rake::FtpFile","","Ruby/classes/Rake/FtpFile.html","","<p><strong>Note:</strong> <em> Not released for general use.</em>\n",null,0],["Rake::FtpUploader","","Ruby/classes/Rake/FtpUploader.html","","<p>Manage the uploading of files to an FTP account.\n",null,0],["Rake::InvocationChain","","Ruby/classes/Rake/InvocationChain.html","","<p>InvocationChain tracks the chain of task invocations to detect circular\ndependencies.\n",null,0],["Rake::InvocationChain::EmptyInvocationChain","","Ruby/classes/Rake/InvocationChain/EmptyInvocationChain.html","","",null,0],["Rake::InvocationExceptionMixin","","Ruby/classes/Rake/InvocationExceptionMixin.html","","",null,0],["Rake::MakefileLoader","","Ruby/classes/Rake/MakefileLoader.html","","<p>Makefile loader to be used with the import file loader.\n",null,0],["Rake::MultiTask","","Ruby/classes/Rake/MultiTask.html","","<p>Same as a regular task, but the immediate prerequisites are done in\nparallel using Ruby threads.\n",null,0],["Rake::NameSpace","","Ruby/classes/Rake/NameSpace.html","","<p>The NameSpace class will lookup task names in the the scope defined by a\n<code>namespace</code> command.\n",null,0],["Rake::PackageTask","","Ruby/classes/Rake/PackageTask.html","","<p>Create a packaging task that will package the project into distributable\nfiles (e.g zip archive or tar …\n",null,0],["Rake::PrivateReader","","Ruby/classes/Rake/PrivateReader.html","","",null,0],["Rake::PrivateReader::ClassMethods","","Ruby/classes/Rake/PrivateReader/ClassMethods.html","","",null,0],["Rake::PseudoStatus","","Ruby/classes/Rake/PseudoStatus.html","","<p>Exit status class for times the system just gives us a nil.\n",null,0],["Rake::RDocTask","","Ruby/classes/Rake/RDocTask.html","","",null,0],["Rake::RakeApp","","Ruby/classes/Rake/RakeApp.html","","<p>Rake main application object.  When invoking <code>rake</code> from the\ncommand line, a Rake::Application object is …\n",null,0],["Rake::RubyForgePublisher","","Ruby/classes/Rake/RubyForgePublisher.html","","",null,0],["Rake::RuleRecursionOverflowError","","Ruby/classes/Rake/RuleRecursionOverflowError.html","","<p>Error indicating a recursion overflow error in task selection.\n",null,0],["Rake::SshDirPublisher","","Ruby/classes/Rake/SshDirPublisher.html","","<p>Publish an entire directory to an existing remote directory using SSH.\n",null,0],["Rake::SshFilePublisher","","Ruby/classes/Rake/SshFilePublisher.html","","<p>Publish a list of files to an existing remote directory.\n",null,0],["Rake::SshFreshDirPublisher","","Ruby/classes/Rake/SshFreshDirPublisher.html","","<p>Publish an entire directory to a fresh remote directory using SSH.\n",null,0],["Rake::Task","","Ruby/classes/Rake/Task.html","","<p>######################################################################### A\nTask is the basic unit of …\n",null,0],["Rake::TaskArgumentError","","Ruby/classes/Rake/TaskArgumentError.html","","<p>Error indicating an ill-formed task declaration.\n",null,0],["Rake::TaskArguments","","Ruby/classes/Rake/TaskArguments.html","","<p>TaskArguments manage the arguments passed to a task.\n",null,0],["Rake::TaskLib","","Ruby/classes/Rake/TaskLib.html","","<p>Base class for Task Libraries.\n",null,0],["Rake::TaskManager","","Ruby/classes/Rake/TaskManager.html","","<p>The TaskManager module is a mixin for managing tasks.\n",null,0],["Rake::TraceOutput","","Ruby/classes/Rake/TraceOutput.html","","",null,0],["Rake::Win32","","Ruby/classes/Rake/Win32.html","","<p>Win 32 interface methods for Rake. Windows specific functionality will be\nplaced here to collect that …\n",null,0],["Rake::Win32::Win32HomeError","","Ruby/classes/Rake/Win32/Win32HomeError.html","","<p>Error indicating a problem in locating the home directory on a Win32\nsystem.\n",null,0],["Rakefile","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/Rakefile.html","","<p>begin\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&#39;bundler/setup&#39;</span>\n</pre>\n<p>rescue LoadError\n",null,1],["Rakefile","","Rails/files/rails/actionmailer/Rakefile.html","","<p>require &#39;rake/testtask&#39; require &#39;rake/packagetask&#39; require\n&#39;rubygems/package_task …\n",null,1],["Rakefile","","Rails/files/rails/Rakefile.html","","<p>require &#39;sdoc&#39; require &#39;net/http&#39;\n<p>$:.unshift File.expand_path(&#39;..&#39;, __FILE__) …\n",null,1],["Rakefile","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n",null,1],["Rakefile","","Rails/files/rails/actionpack/Rakefile.html","","<p>require &#39;rake/testtask&#39; require &#39;rake/packagetask&#39; require\n&#39;rubygems/package_task …\n",null,1],["Rakefile","","Rails/files/rails/railties/Rakefile.html","","<p>require &#39;rake/testtask&#39; require &#39;rubygems/package_task&#39;\n<p>require &#39;date&#39; require …\n",null,1],["Rakefile","","Rails/files/rails/activerecord/Rakefile.html","","<p>require &#39;rake/testtask&#39; require &#39;rake/packagetask&#39; require\n&#39;rubygems/package_task …\n",null,1],["Rakefile","","Rails/files/rails/activesupport/Rakefile.html","","<p>require &#39;rake/testtask&#39; require &#39;rubygems/package_task&#39;\n<p>task :default =&gt; :test Rake::TestTask.new …\n",null,1],["Rakefile","","Rails/files/rails/activemodel/Rakefile.html","","<p>dir = File.dirname(__FILE__)\n<p>require &#39;rake/testtask&#39;\n<p>task :default =&gt; :test\n",null,1],["Random","","Ruby/classes/Random.html","","<p>Random provides an interface to Ruby&#39;s pseudo-random number generator,\nor PRNG.  The PRNG produces …\n",null,0],["Range","","Ruby/classes/Range.html","","<p>Range serialization/deserialization\n<p>A <code>Range</code> represents an interval—a set of values with a\nbeginning …\n",null,0],["Range","","Rails/classes/Range.html","","",null,1],["RangeError","","Ruby/classes/RangeError.html","","<p>Raised when a given numerical value is out of range.\n\n<pre><code>[1, 2, 3].drop(1 &lt;&lt; 100)</code></pre>\n<p><em>raises the exception:</em>\n",null,0],["Rational","","Ruby/classes/Rational.html","","<p>When mathn is required Rational is changed to simplify the use of Rational\noperations.\n<p>Normal behaviour: …\n",null,0],["Rational","Kernel","Ruby/classes/Kernel.html#method-i-Rational","(*args)","<p>Returns x/y;\n\n<pre><code>Rational(1, 2)   #=&gt; (1/2)\nRational(&#39;1/2&#39;)  #=&gt; (1/2)\n</code></pre>\n<p>Syntax of string form:\n",null,0],["Rational::compatible","","Ruby/classes/Rational/compatible.html","","",null,0],["Readline","","Ruby/classes/Readline.html","","<p>The Readline module provides interface for GNU Readline. This module\ndefines a number of methods to facilitate …\n",null,0],["Regexp","","Ruby/classes/Regexp.html","","<p>Regexp serialization/deserialization\n<p>A <code>Regexp</code> holds a regular expression, used to match a pattern\nagainst …\n",null,0],["RegexpError","","Ruby/classes/RegexpError.html","","<p>Raised when given an invalid regexp expression.\n\n<pre><code>Regexp.new(&quot;?&quot;)</code></pre>\n<p><em>raises the exception:</em>\n",null,0],["RequireProfiler","","Rails/classes/RequireProfiler.html","","",null,1],["Requirement","","Ruby/classes/Requirement.html","","",null,0],["Resolv","","Ruby/classes/Resolv.html","","<p>Resolv is a thread-aware DNS resolver library written in Ruby.  Resolv can\nhandle multiple DNS requests …\n",null,0],["Resolv::DNS","","Ruby/classes/Resolv/DNS.html","","<p>Resolv::DNS is a DNS stub resolver.\n<p>Information taken from the following places:\n<p>STD0013\n",null,0],["Resolv::DNS::Config","","Ruby/classes/Resolv/DNS/Config.html","","",null,0],["Resolv::DNS::Config::NXDomain","","Ruby/classes/Resolv/DNS/Config/NXDomain.html","","<p>Indicates no such domain was found.\n",null,0],["Resolv::DNS::Config::OtherResolvError","","Ruby/classes/Resolv/DNS/Config/OtherResolvError.html","","<p>Indicates some other unhandled resolver error was encountered.\n",null,0],["Resolv::DNS::DecodeError","","Ruby/classes/Resolv/DNS/DecodeError.html","","<p>Indicates that the DNS response was unable to be decoded.\n",null,0],["Resolv::DNS::EncodeError","","Ruby/classes/Resolv/DNS/EncodeError.html","","<p>Indicates that the DNS request was unable to be encoded.\n",null,0],["Resolv::DNS::Name","","Ruby/classes/Resolv/DNS/Name.html","","<p>A representation of a DNS name.\n",null,0],["Resolv::DNS::Query","","Ruby/classes/Resolv/DNS/Query.html","","<p>A DNS query abstract class.\n",null,0],["Resolv::DNS::Requester","","Ruby/classes/Resolv/DNS/Requester.html","","",null,0],["Resolv::DNS::Requester::RequestError","","Ruby/classes/Resolv/DNS/Requester/RequestError.html","","<p>Indicates a problem with the DNS request.\n",null,0],["Resolv::DNS::Resource","","Ruby/classes/Resolv/DNS/Resource.html","","<p>A DNS resource abstract class.\n",null,0],["Resolv::DNS::Resource::ANY","","Ruby/classes/Resolv/DNS/Resource/ANY.html","","<p>A Query type requesting any RR.\n",null,0],["Resolv::DNS::Resource::CNAME","","Ruby/classes/Resolv/DNS/Resource/CNAME.html","","<p>The canonical name for an alias.\n",null,0],["Resolv::DNS::Resource::DomainName","","Ruby/classes/Resolv/DNS/Resource/DomainName.html","","<p>Domain Name resource abstract class.\n",null,0],["Resolv::DNS::Resource::Generic","","Ruby/classes/Resolv/DNS/Resource/Generic.html","","<p>A generic resource abstract class.\n",null,0],["Resolv::DNS::Resource::HINFO","","Ruby/classes/Resolv/DNS/Resource/HINFO.html","","<p>Host Information resource.\n",null,0],["Resolv::DNS::Resource::IN","","Ruby/classes/Resolv/DNS/Resource/IN.html","","<p>module IN contains ARPA Internet specific RRs.\n",null,0],["Resolv::DNS::Resource::IN::A","","Ruby/classes/Resolv/DNS/Resource/IN/A.html","","<p>IPv4 Address resource\n",null,0],["Resolv::DNS::Resource::IN::AAAA","","Ruby/classes/Resolv/DNS/Resource/IN/AAAA.html","","<p>An IPv6 address record.\n",null,0],["Resolv::DNS::Resource::IN::SRV","","Ruby/classes/Resolv/DNS/Resource/IN/SRV.html","","<p>SRV resource record defined in RFC 2782\n<p>These records identify the hostname and port that a service is …\n",null,0],["Resolv::DNS::Resource::IN::WKS","","Ruby/classes/Resolv/DNS/Resource/IN/WKS.html","","<p>Well Known Service resource.\n",null,0],["Resolv::DNS::Resource::MINFO","","Ruby/classes/Resolv/DNS/Resource/MINFO.html","","<p>Mailing list or mailbox information.\n",null,0],["Resolv::DNS::Resource::MX","","Ruby/classes/Resolv/DNS/Resource/MX.html","","<p>Mail Exchanger resource.\n",null,0],["Resolv::DNS::Resource::NS","","Ruby/classes/Resolv/DNS/Resource/NS.html","","<p>An authoritative name server.\n",null,0],["Resolv::DNS::Resource::PTR","","Ruby/classes/Resolv/DNS/Resource/PTR.html","","<p>A Pointer to another DNS name.\n",null,0],["Resolv::DNS::Resource::SOA","","Ruby/classes/Resolv/DNS/Resource/SOA.html","","<p>Start Of Authority resource.\n",null,0],["Resolv::DNS::Resource::TXT","","Ruby/classes/Resolv/DNS/Resource/TXT.html","","<p>Unstructured text resource.\n",null,0],["Resolv::Hosts","","Ruby/classes/Resolv/Hosts.html","","<p>Resolv::Hosts is a hostname resolver that uses the system hosts file.\n",null,0],["Resolv::IPv4","","Ruby/classes/Resolv/IPv4.html","","<p>A Resolv::DNS IPv4 address.\n",null,0],["Resolv::IPv6","","Ruby/classes/Resolv/IPv6.html","","<p>A Resolv::DNS IPv6 address.\n",null,0],["Resolv::ResolvError","","Ruby/classes/Resolv/ResolvError.html","","<p>Indicates a failure to resolve a name or address.\n",null,0],["Resolv::ResolvTimeout","","Ruby/classes/Resolv/ResolvTimeout.html","","<p>Indicates a timeout resolving a name or address.\n",null,0],["Rinda","","Ruby/classes/Rinda.html","","<p>A module to implement the Linda distributed computing paradigm in Ruby.\n<p>Rinda is part of DRb (dRuby). …\n",null,0],["Rinda::DRbObjectTemplate","","Ruby/classes/Rinda/DRbObjectTemplate.html","","<p><em>Documentation?</em>\n",null,0],["Rinda::InvalidHashTupleKey","","Ruby/classes/Rinda/InvalidHashTupleKey.html","","<p>Raised when a hash-based tuple has an invalid key.\n",null,0],["Rinda::NotifyTemplateEntry","","Ruby/classes/Rinda/NotifyTemplateEntry.html","","<p>A NotifyTemplateEntry is returned by TupleSpace#notify and is notified of\nTupleSpace changes.  You may …\n",null,0],["Rinda::RequestCanceledError","","Ruby/classes/Rinda/RequestCanceledError.html","","<p>Raised when trying to use a canceled tuple.\n",null,0],["Rinda::RequestExpiredError","","Ruby/classes/Rinda/RequestExpiredError.html","","<p>Raised when trying to use an expired tuple.\n",null,0],["Rinda::RindaError","","Ruby/classes/Rinda/RindaError.html","","<p>Rinda error base class\n",null,0],["Rinda::RingFinger","","Ruby/classes/Rinda/RingFinger.html","","<p>RingFinger is used by RingServer clients to discover the RingServer&#39;s\nTupleSpace.  Typically, all …\n",null,0],["Rinda::RingProvider","","Ruby/classes/Rinda/RingProvider.html","","<p>RingProvider uses a RingServer advertised TupleSpace as a name service.\nTupleSpace clients can register …\n",null,0],["Rinda::RingServer","","Ruby/classes/Rinda/RingServer.html","","<p>A RingServer allows a Rinda::TupleSpace to be located via UDP broadcasts.\nService location uses the following …\n",null,0],["Rinda::SimpleRenewer","","Ruby/classes/Rinda/SimpleRenewer.html","","<p>An SimpleRenewer allows a TupleSpace to check if a TupleEntry is still\nalive.\n",null,0],["Rinda::Template","","Ruby/classes/Rinda/Template.html","","<p>Templates are used to match tuples in Rinda.\n",null,0],["Rinda::TemplateEntry","","Ruby/classes/Rinda/TemplateEntry.html","","<p>A TemplateEntry is a Template together with expiry and cancellation data.\n",null,0],["Rinda::Tuple","","Ruby/classes/Rinda/Tuple.html","","<p>A tuple is the elementary object in Rinda programming. Tuples may be\nmatched against templates if the …\n",null,0],["Rinda::TupleBag","","Ruby/classes/Rinda/TupleBag.html","","<p>TupleBag is an unordered collection of tuples. It is the basis of\nTuplespace.\n",null,0],["Rinda::TupleBag::TupleBin","","Ruby/classes/Rinda/TupleBag/TupleBin.html","","",null,0],["Rinda::TupleEntry","","Ruby/classes/Rinda/TupleEntry.html","","<p>A TupleEntry is a Tuple (i.e. a possible entry in some Tuplespace) together\nwith expiry and cancellation …\n",null,0],["Rinda::TupleSpace","","Ruby/classes/Rinda/TupleSpace.html","","<p>The Tuplespace manages access to the tuples it contains, ensuring mutual\nexclusion requirements are met. …\n",null,0],["Rinda::TupleSpaceProxy","","Ruby/classes/Rinda/TupleSpaceProxy.html","","<p>TupleSpaceProxy allows a remote Tuplespace to appear as local.\n",null,0],["Rinda::WaitTemplateEntry","","Ruby/classes/Rinda/WaitTemplateEntry.html","","<p><em>Documentation?</em>\n",null,0],["Ripper","","Ruby/classes/Ripper.html","","<p>Ripper is a Ruby script parser.\n<p>You can get information from the parser with event-based style. Information\n…\n",null,0],["Ripper::Filter","","Ruby/classes/Ripper/Filter.html","","<p>This class handles only scanner events, which are dispatched in the\n&#39;right&#39; order (same with …\n",null,0],["RubyLex","","Ruby/classes/RubyLex.html","","",null,0],["RubyToken","","Ruby/classes/RubyToken.html","","",null,0],["RubyToken::TkError","","Ruby/classes/RubyToken/TkError.html","","",null,0],["RubyToken::TkId","","Ruby/classes/RubyToken/TkId.html","","",null,0],["RubyToken::TkNode","","Ruby/classes/RubyToken/TkNode.html","","",null,0],["RubyToken::TkOPASGN","","Ruby/classes/RubyToken/TkOPASGN.html","","",null,0],["RubyToken::TkOp","","Ruby/classes/RubyToken/TkOp.html","","",null,0],["RubyToken::TkUnknownChar","","Ruby/classes/RubyToken/TkUnknownChar.html","","",null,0],["RubyToken::TkVal","","Ruby/classes/RubyToken/TkVal.html","","",null,0],["RubyToken::Token","","Ruby/classes/RubyToken/Token.html","","",null,0],["RubyVM","","Ruby/classes/RubyVM.html","","<p>::RubyVM\n",null,0],["RubyVM::Env","","Ruby/classes/RubyVM/Env.html","","<p>::RubyVM::Env\n",null,0],["RubyVM::InstructionSequence","","Ruby/classes/RubyVM/InstructionSequence.html","","<p>The InstructionSequence class represents a compiled sequence of\ninstructions for the Ruby Virtual Machine …\n",null,0],["RuntimeError","","Ruby/classes/RuntimeError.html","","<p>A generic error class raised when an invalid operation is attempted.\n\n<pre><code>[1, 2, 3].freeze &lt;&lt; 4</code></pre>\n<p><em>raises the exception:</em> …\n",null,0],["SDBM","","Ruby/classes/SDBM.html","","<p>SDBM provides a simple file-based key-value store, which can only store\nString keys and values.\n<p>Note that …\n",null,0],["SDBMError","","Ruby/classes/SDBMError.html","","<p>Exception class used to return errors from the sdbm library.\n",null,0],["SOCKSSocket","","Ruby/classes/SOCKSSocket.html","","<p>SOCKS is an Internet protocol that routes packets between a client and a\nserver through a proxy server. …\n",null,0],["Scanf","","Ruby/classes/Scanf.html","","<p>scanf for Ruby\n<p>Description\n<p>scanf is an implementation of the C function scanf(3), modified as\nnecessary …\n",null,0],["Scanf::FormatSpecifier","","Ruby/classes/Scanf/FormatSpecifier.html","","",null,0],["Scanf::FormatString","","Ruby/classes/Scanf/FormatString.html","","",null,0],["ScriptError","","Ruby/classes/ScriptError.html","","<p>ScriptError is the superclass for errors raised when a script can not be\nexecuted because of a <code>LoadError</code> …\n",null,0],["SecureRandom","","Ruby/classes/SecureRandom.html","","",null,0],["SecurityError","","Ruby/classes/SecurityError.html","","<p>Raised when attempting a potential unsafe operation, typically when the\n$SAFE level is raised above 0. …\n",null,0],["Set","","Ruby/classes/Set.html","","<p>Set implements a collection of unordered values with no duplicates. This is\na hybrid of Array&#39;s intuitive …\n",null,0],["SetValue","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-SetValue","(hkey, name, type, data, size)","",null,0],["Shell","","Ruby/classes/Shell.html","","<p>Shell implements an idiomatic Ruby interface for common UNIX shell\ncommands.\n<p>It provides users the ability …\n",null,0],["Shell::AppendFile","","Ruby/classes/Shell/AppendFile.html","","",null,0],["Shell::AppendIO","","Ruby/classes/Shell/AppendIO.html","","<p>class Sort &lt; Cat\n\n<pre><code>def initialize(sh, *filenames)\n  super\nend\n\ndef each(rs = nil)\n  ary = []\n  super{|l| ...\n</code></pre>\n",null,0],["Shell::BuiltInCommand","","Ruby/classes/Shell/BuiltInCommand.html","","",null,0],["Shell::Cat","","Ruby/classes/Shell/Cat.html","","",null,0],["Shell::CommandProcessor","","Ruby/classes/Shell/CommandProcessor.html","","<p>In order to execute a command on your OS, you need to define it as a Shell\nmethod.\n<p>Alternatively, you …\n",null,0],["Shell::Concat","","Ruby/classes/Shell/Concat.html","","",null,0],["Shell::Echo","","Ruby/classes/Shell/Echo.html","","",null,0],["Shell::Error","","Ruby/classes/Shell/Error.html","","",null,0],["Shell::Filter","","Ruby/classes/Shell/Filter.html","","<p>Any result of command exection is a Filter.\n<p>This class includes Enumerable, therefore a Filter object …\n",null,0],["Shell::Glob","","Ruby/classes/Shell/Glob.html","","",null,0],["Shell::ProcessController","","Ruby/classes/Shell/ProcessController.html","","",null,0],["Shell::SystemCommand","","Ruby/classes/Shell/SystemCommand.html","","",null,0],["Shell::Tee","","Ruby/classes/Shell/Tee.html","","",null,0],["Shell::Void","","Ruby/classes/Shell/Void.html","","",null,0],["Shellwords","","Ruby/classes/Shellwords.html","","<p>Manipulates strings like the UNIX Bourne shell\n<p>This module manipulates strings according to the word parsing …\n",null,0],["Signal","","Ruby/classes/Signal.html","","<p>Many operating systems allow signals to be sent to running processes. Some\nsignals have a defined effect …\n",null,0],["SignalException","","Ruby/classes/SignalException.html","","<p>Raised when a signal is received.\n\n<pre><code>begin\n  Process.kill(&#39;HUP&#39;,Process.pid)\n  sleep # wait for receiver ...</code></pre>\n",null,0],["SimpleDelegator","","Ruby/classes/SimpleDelegator.html","","<p>A concrete implementation of Delegator, this class provides the means to\ndelegate all supported method …\n",null,0],["SingleForwardable","","Ruby/classes/SingleForwardable.html","","<p>SingleForwardable can be used to setup delegation at the object level as\nwell.\n\n<pre><code>printer = String.new\nprinter.extend ...</code></pre>\n",null,0],["Singleton","","Ruby/classes/Singleton.html","","<p>The Singleton module implements the Singleton pattern.\n<p>Usage\n<p>To use Singleton, include the module in your …\n",null,0],["SizedQueue","","Ruby/classes/SizedQueue.html","","<p>This class represents queues of specified size capacity.  The push\noperation may be blocked if the capacity …\n",null,0],["Socket","","Ruby/classes/Socket.html","","<p>Class <code>Socket</code> provides access to the underlying operating\nsystem socket implementations.  It can be used …\n",null,0],["Socket::AncillaryData","","Ruby/classes/Socket/AncillaryData.html","","<p>Socket::AncillaryData represents the ancillary data (control information)\nused by sendmsg and recvmsg …\n",null,0],["Socket::Option","","Ruby/classes/Socket/Option.html","","<p>Socket::Option represents a socket option used by BasicSocket#getsockopt\nand BasicSocket#setsockopt. …\n",null,0],["Socket::UDPSource","","Ruby/classes/Socket/UDPSource.html","","<p>UDP/IP address information used by Socket.udp_server_loop.\n",null,0],["SocketError","","Ruby/classes/SocketError.html","","<p>SocketError is the error class for socket.\n",null,0],["SortedSet","","Ruby/classes/SortedSet.html","","<p>SortedSet implements a Set that guarantees that it&#39;s element are\nyielded in sorted order (according …\n",null,0],["SourceAnnotationExtractor","","Rails/classes/SourceAnnotationExtractor.html","","<p>Implements the logic behind the rake tasks for annotations like\n\n<pre>rake notes\nrake notes:optimize</pre>\n<p>and friends. …\n",null,1],["SourceAnnotationExtractor::Annotation","","Rails/classes/SourceAnnotationExtractor/Annotation.html","","",null,1],["SshDirPublisher","","Ruby/classes/SshDirPublisher.html","","<p>Publish an entire directory to an existing remote directory using SSH.\n",null,0],["SshFilePublisher","","Ruby/classes/SshFilePublisher.html","","<p>Publish a list of files to an existing remote directory.\n",null,0],["SshFreshDirPublisher","","Ruby/classes/SshFreshDirPublisher.html","","<p>Publish an entire directory to a fresh remote directory using SSH.\n",null,0],["StandardError","","Ruby/classes/StandardError.html","","<p>The most standard error types are subclasses of StandardError. A rescue\nclause without an explicit Exception …\n",null,0],["StopIteration","","Ruby/classes/StopIteration.html","","<p>Raised to stop the iteration, in particular by Enumerator#next. It is\nrescued by Kernel#loop.\n\n<pre><code>loop do ...</code></pre>\n",null,0],["String","","Ruby/classes/String.html","","<p>Rake extension methods for String.\n<p>A <code>String</code> object holds and manipulates an arbitrary sequence of\nbytes, …\n",null,0],["String","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-String","(mes)","",null,0],["String","Kernel","Ruby/classes/Kernel.html#method-i-String","(p1)","<p>Converts <em>arg</em> to a <code>String</code> by calling its\n<code>to_s</code> method.\n\n<pre><code>String(self)        #=&gt; &quot;main&quot;\nString(self.class) ...\n</code></pre>\n",null,0],["String","","Rails/classes/String.html","","<p>String inflections define new methods on the String class to transform\nnames for different purposes. …\n",null,1],["StringIO","","Ruby/classes/StringIO.html","","<p>Pseudo I/O on String object.\n",null,0],["StringScanner","","Ruby/classes/StringScanner.html","","<p>StringScanner provides for lexical scanning operations on a String.  Here\nis an example of its usage: …\n",null,0],["StringScanner::Error","","Ruby/classes/StringScanner/Error.html","","",null,0],["Struct","","Ruby/classes/Struct.html","","<p>Struct serialization/deserialization\n<p>A <code>Struct</code> is a convenient way to bundle a number of attributes\ntogether, …\n",null,0],["Symbol","","Ruby/classes/Symbol.html","","<p>Symbol serialization/deserialization\n<p><code>Symbol</code> objects represent names and some strings inside the\nRuby interpreter. …\n",null,0],["Symbol","","Ruby/classes/Symbol.html","","<p>Add double dispatch to Integer\n<p><code>Integer</code> is the basis for the two concrete classes that hold\nwhole numbers, …\n",null,0],["Symbol","","Rails/classes/Symbol.html","","",null,1],["Sync","","Ruby/classes/Sync.html","","<p>A class that providesa two-phase lock with a counter.  See Sync_m for\ndetails.\n",null,0],["Sync_m","","Ruby/classes/Sync_m.html","","<p>A module that provides a two-phase lock with a counter.\n",null,0],["Sync_m::Err","","Ruby/classes/Sync_m/Err.html","","<p>exceptions\n",null,0],["Sync_m::Err::LockModeFailer","","Ruby/classes/Sync_m/Err/LockModeFailer.html","","",null,0],["Sync_m::Err::UnknownLocker","","Ruby/classes/Sync_m/Err/UnknownLocker.html","","",null,0],["Synchronizer","","Ruby/classes/Synchronizer.html","","<p>A class that providesa two-phase lock with a counter.  See Sync_m for\ndetails.\n",null,0],["Synchronizer_m","","Ruby/classes/Synchronizer_m.html","","<p>A module that provides a two-phase lock with a counter.\n",null,0],["SyntaxError","","Ruby/classes/SyntaxError.html","","<p>Raised when encountering Ruby code with an invalid syntax.\n\n<pre><code>eval(&quot;1+1=2&quot;)</code></pre>\n<p><em>raises the exception:</em>\n",null,0],["Sys","","Ruby/classes/Sys.html","","<p>Sys provides a number of file manipulation tools for the convenience of\nwriting Rakefiles.  All commands …\n",null,0],["Syslog","","Ruby/classes/Syslog.html","","<p>The syslog package provides a Ruby interface to the POSIX system logging\nfacility.\n<p>Syslog messages are …\n",null,0],["Syslog::Constants","","Ruby/classes/Syslog/Constants.html","","",null,0],["Syslog::Facility","","Ruby/classes/Syslog/Facility.html","","",null,0],["Syslog::Level","","Ruby/classes/Syslog/Level.html","","",null,0],["Syslog::Logger","","Ruby/classes/Syslog/Logger.html","","<p>Syslog::Logger is a Logger work-alike that logs via syslog instead of to a\nfile.  You can use Syslog::Logger …\n",null,0],["Syslog::Logger::Formatter","","Ruby/classes/Syslog/Logger/Formatter.html","","<p>Default formatter for log messages.\n",null,0],["Syslog::Logger::Severity","","Ruby/classes/Syslog/Logger/Severity.html","","",null,0],["Syslog::Macros","","Ruby/classes/Syslog/Macros.html","","",null,0],["Syslog::Option","","Ruby/classes/Syslog/Option.html","","",null,0],["SystemCallError","","Ruby/classes/SystemCallError.html","","<p>SystemCallError is the base class for all low-level platform-dependent\nerrors.\n<p>The errors available on …\n",null,0],["SystemExit","","Ruby/classes/SystemExit.html","","<p>Raised by <code>exit</code> to initiate the termination of the script.\n",null,0],["SystemStackError","","Ruby/classes/SystemStackError.html","","<p>Raised in case of a stack overflow.\n\n<pre><code>def me_myself_and_i\n  me_myself_and_i\nend\nme_myself_and_i\n</code></pre>\n<p><em>raises the</em> …\n",null,0],["TABSIZE","Curses","Ruby/classes/Curses.html#method-c-TABSIZE","()","<p>Returns the number of positions in a tab.\n",null,0],["TABSIZE=","Curses","Ruby/classes/Curses.html#method-c-TABSIZE-3D","(p1)","<p>Sets the TABSIZE to Integer <code>value</code>\n",null,0],["TCPServer","","Ruby/classes/TCPServer.html","","<p>TCPServer represents a TCP/IP server socket.\n<p>A simple TCP server may look like:\n\n<pre><code>require &#39;socket&#39;\n\nserver ...\n</code></pre>\n",null,0],["TCPSocket","","Ruby/classes/TCPSocket.html","","<p>TCPSocket represents a TCP/IP client socket.\n<p>A simple client may look like:\n\n<pre><code>require &#39;socket&#39;\n\ns = TCPSocket.new ...\n</code></pre>\n",null,0],["TSort","","Ruby/classes/TSort.html","","<p>TSort implements topological sorting using Tarjan&#39;s algorithm for\nstrongly connected components. …\n",null,0],["TSort::Cyclic","","Ruby/classes/TSort/Cyclic.html","","",null,0],["Tempfile","","Ruby/classes/Tempfile.html","","<p>A utility class for managing temporary files. When you create a Tempfile\nobject, it will create a temporary …\n",null,0],["Tempfile::Remover","","Ruby/classes/Tempfile/Remover.html","","",null,0],["ThWait","","Ruby/classes/ThWait.html","","<p>This class watches for termination of multiple threads.  Basic\nfunctionality (wait until specified threads …\n",null,0],["Thread","","Ruby/classes/Thread.html","","<p>::Thread\n",null,0],["Thread","","Rails/classes/Thread.html","","",null,1],["Thread::Backtrace::Location","","Ruby/classes/Thread/Backtrace/Location.html","","<p>An object representation of a stack frame, initialized by\nKernel#caller_locations.\n<p>For example:\n\n<pre><code># caller_locations.rb ...</code></pre>\n",null,0],["ThreadError","","Ruby/classes/ThreadError.html","","<p>Raised when an invalid operation is attempted on a thread.\n<p>For example, when no other thread has been …\n",null,0],["ThreadGroup","","Ruby/classes/ThreadGroup.html","","<p><code>ThreadGroup</code> provides a means of keeping track of a number of\nthreads as a group. A <code>Thread</code> can belong …\n",null,0],["ThreadsWait","","Ruby/classes/ThreadsWait.html","","<p>This class watches for termination of multiple threads.  Basic\nfunctionality (wait until specified threads …\n",null,0],["Time","","Ruby/classes/Time.html","","<p>Time serialization/deserialization\n<p>time.rb\n<p>When &#39;time&#39; is required, Time is extended with additional …\n",null,0],["Time","","Rails/classes/Time.html","","",null,1],["Timeout","","Ruby/classes/Timeout.html","","<p>Timeout long-running blocks\n<p>Synopsis\n\n<pre><code>require &#39;timeout&#39;\nstatus = Timeout::timeout(5) {\n  # Something that ...\n</code></pre>\n",null,0],["Timeout::Error","","Ruby/classes/Timeout/Error.html","","<p>Raised by Timeout#timeout when the block times out.\n",null,0],["Timeout::TimeoutError","","Ruby/classes/Timeout/TimeoutError.html","","<p>Raised by Timeout#timeout when the block times out.\n",null,0],["TracePoint","","Ruby/classes/TracePoint.html","","<p>A class that provides the functionality of Kernel#set_trace_func in a nice\nObject-Oriented API.\n<p>Example …\n",null,0],["Tracer","","Ruby/classes/Tracer.html","","<p>Outputs a source level execution trace of a Ruby program.\n<p>It does this by registering an event handler …\n",null,0],["TrueClass","","Ruby/classes/TrueClass.html","","<p>The global value <code>true</code> is the only instance of class\n<code>TrueClass</code> and represents a logically true value in …\n",null,0],["TrueClass","","Rails/classes/TrueClass.html","","",null,1],["TypeError","","Ruby/classes/TypeError.html","","<p>Raised when encountering an object that is not of the expected type.\n\n<pre><code>[1, 2, 3].first(&quot;two&quot;)</code></pre>\n<p><em>raises the</em> …\n",null,0],["UDPSocket","","Ruby/classes/UDPSocket.html","","<p>UDPSocket represents a UDP/IP socket.\n",null,0],["UNIXServer","","Ruby/classes/UNIXServer.html","","<p>UNIXServer represents a UNIX domain stream server socket.\n",null,0],["UNIXSocket","","Ruby/classes/UNIXSocket.html","","<p>UNIXSocket represents a UNIX domain stream client socket.\n",null,0],["URI","","Ruby/classes/URI.html","","<p>URI is a module providing classes to handle Uniform Resource Identifiers\n(RFC2396)\n<p>Features\n<p>Uniform handling …\n",null,0],["URI","","Rails/classes/URI.html","","",null,1],["URI::BadURIError","","Ruby/classes/URI/BadURIError.html","","<p>URI is valid, bad usage is not.\n",null,0],["URI::Error","","Ruby/classes/URI/Error.html","","<p>Base class for all URI exceptions.\n",null,0],["URI::Escape","","Ruby/classes/URI/Escape.html","","<p>module for escaping unsafe characters with codes.\n",null,0],["URI::FTP","","Ruby/classes/URI/FTP.html","","<p>FTP URI syntax is defined by RFC1738 section 3.2.\n<p>This class will be redesigned because of difference …\n",null,0],["URI::Generic","","Ruby/classes/URI/Generic.html","","<p>Base class for all URI classes. Implements generic URI syntax as per RFC\n2396.\n",null,0],["URI::HTTP","","Ruby/classes/URI/HTTP.html","","<p>The syntax of HTTP URIs is defined in RFC1738 section 3.3.\n<p>Note that the Ruby URI library allows HTTP …\n",null,0],["URI::HTTPS","","Ruby/classes/URI/HTTPS.html","","<p>The default port for HTTPS URIs is 443, and the scheme is &#39;https:&#39;\nrather than &#39;http:&#39;. …\n",null,0],["URI::InvalidComponentError","","Ruby/classes/URI/InvalidComponentError.html","","<p>Not a URI component.\n",null,0],["URI::InvalidURIError","","Ruby/classes/URI/InvalidURIError.html","","<p>Not a URI.\n",null,0],["URI::LDAP","","Ruby/classes/URI/LDAP.html","","<p>LDAP URI SCHEMA (described in RFC2255)\nldap://<host>/<dn>[?<attrs>[?<scope>[?<filter>]]]\n",null,0],["URI::LDAPS","","Ruby/classes/URI/LDAPS.html","","<p>The default port for LDAPS URIs is 636, and the scheme is &#39;ldaps:&#39;\nrather than &#39;ldap:&#39;. …\n",null,0],["URI::MailTo","","Ruby/classes/URI/MailTo.html","","<p>RFC2368, The mailto URL scheme\n",null,0],["URI::Parser","","Ruby/classes/URI/Parser.html","","<p>class that Parses String&#39;s into URI&#39;s\n<p>It contains a Hash set of patterns and Regexp&#39;s that …\n",null,0],["URI::REGEXP","","Ruby/classes/URI/REGEXP.html","","<p>Includes URI::REGEXP::PATTERN\n",null,0],["URI::REGEXP::PATTERN","","Ruby/classes/URI/REGEXP/PATTERN.html","","<p>Patterns used to parse URI&#39;s\n",null,0],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/resource/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new resource including an empty model and controller suitable\nfor a restful, ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/helper/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new helper. Pass the helper name, either CamelCased\nor under_scored.\n\nTo create ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/migration/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new database migration. Pass the migration name, either\nCamelCased or under_scored, ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/model/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new model. Pass the model name, either CamelCased or\nunder_scored, and an optional ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/generator/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new generator at lib/generators. Pass the generator name as an argument,\neither ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/scaffold/USAGE.html","","<p>Description:\n\n<pre>Scaffolds an entire resource, from model and migration to controller and\nviews, along with ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/scaffold_controller/USAGE.html","","<p>Description:\n\n<pre>Stubs out a scaffolded controller, its seven RESTful actions and related\nviews. Pass the ...</pre>\n",null,1],["USAGE","","Rails/files/rails/actionmailer/lib/rails/generators/mailer/USAGE.html","","<p>Description:\n<p>\n\n<pre>Stubs out a new mailer and its views. Passes the mailer name, either\nCamelCased or under_scored, ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/assets/USAGE.html","","<p>Description:\n\n<pre>Stubs out new asset placeholders. Pass the asset name, either CamelCased\nor under_scored. ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/app/USAGE.html","","<p>Description:\n\n<pre>The &#39;rails new&#39; command creates a new Rails application with a default\ndirectory structure ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/controller/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new controller and its views. Pass the controller name, either\nCamelCased or ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/USAGE.html","","<p>Description:\n\n<pre>The &#39;rails plugin new&#39; command creates a skeleton for developing any\nkind of Rails extension ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/task/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new Rake task. Pass the namespace name, and a list of tasks as arguments.\n\nThis ...</pre>\n",null,1],["UnboundMethod","","Ruby/classes/UnboundMethod.html","","<p>Ruby supports two forms of objectified methods. Class <code>Method</code>\nis used to represent methods that are associated …\n",null,0],["Vector","","Ruby/classes/Vector.html","","<p>The <code>Vector</code> class represents a mathematical vector, which is\nuseful in its own right, and also constitutes …\n",null,0],["Vector::ZeroVectorError","","Ruby/classes/Vector/ZeroVectorError.html","","",null,0],["WEBrick","","Ruby/classes/WEBrick.html","","<p>WEB server toolkit.\n<p>WEBrick is an HTTP server toolkit that can be configured as an HTTPS\nserver, a proxy …\n",null,0],["WEBrick::AccessLog","","Ruby/classes/WEBrick/AccessLog.html","","<p>AccessLog provides logging to various files in various formats.\n<p>Multiple logs may be written to at the …\n",null,0],["WEBrick::AccessLog::AccessLogError","","Ruby/classes/WEBrick/AccessLog/AccessLogError.html","","<p>Raised if a parameter such as %e, %i, %o or %n is used without fetching a\nspecific field.\n",null,0],["WEBrick::BasicLog","","Ruby/classes/WEBrick/BasicLog.html","","<p>A generic logging class\n",null,0],["WEBrick::CGI","","Ruby/classes/WEBrick/CGI.html","","<p>A CGI library using WEBrick requests and responses.\n<p>Example:\n\n<pre><code>class MyCGI &lt; WEBrick::CGI\n  def do_GET req, ...\n</code></pre>\n",null,0],["WEBrick::Config","","Ruby/classes/WEBrick/Config.html","","",null,0],["WEBrick::Cookie","","Ruby/classes/WEBrick/Cookie.html","","<p>Processes HTTP cookies\n",null,0],["WEBrick::Daemon","","Ruby/classes/WEBrick/Daemon.html","","<p>A generic module for daemonizing a process\n",null,0],["WEBrick::GenericServer","","Ruby/classes/WEBrick/GenericServer.html","","<p>Base TCP server class.  You must subclass GenericServer and provide a #run\nmethod.\n",null,0],["WEBrick::HTMLUtils","","Ruby/classes/WEBrick/HTMLUtils.html","","",null,0],["WEBrick::HTTPAuth","","Ruby/classes/WEBrick/HTTPAuth.html","","<p>HTTPAuth provides both basic and digest authentication.\n<p>To enable authentication for requests in WEBrick …\n",null,0],["WEBrick::HTTPAuth::Authenticator","","Ruby/classes/WEBrick/HTTPAuth/Authenticator.html","","<p>Module providing generic support for both Digest and Basic authentication\nschemes.\n",null,0],["WEBrick::HTTPAuth::BasicAuth","","Ruby/classes/WEBrick/HTTPAuth/BasicAuth.html","","<p>Basic Authentication for WEBrick\n<p>Use this class to add basic authentication to a WEBrick servlet.\n<p>Here …\n",null,0],["WEBrick::HTTPAuth::DigestAuth","","Ruby/classes/WEBrick/HTTPAuth/DigestAuth.html","","<p>RFC 2617 Digest Access Authentication for WEBrick\n<p>Use this class to add digest authentication to a WEBrick …\n",null,0],["WEBrick::HTTPAuth::Htdigest","","Ruby/classes/WEBrick/HTTPAuth/Htdigest.html","","<p>Htdigest accesses apache-compatible digest password files.  Passwords are\nmatched to a realm where they …\n",null,0],["WEBrick::HTTPAuth::Htgroup","","Ruby/classes/WEBrick/HTTPAuth/Htgroup.html","","<p>Htgroup accesses apache-compatible group files.  Htgroup can be used to\nprovide group-based authentication …\n",null,0],["WEBrick::HTTPAuth::Htpasswd","","Ruby/classes/WEBrick/HTTPAuth/Htpasswd.html","","<p>Htpasswd accesses apache-compatible password files.  Passwords are matched\nto a realm where they are …\n",null,0],["WEBrick::HTTPAuth::ProxyAuthenticator","","Ruby/classes/WEBrick/HTTPAuth/ProxyAuthenticator.html","","<p>Module providing generic support for both Digest and Basic authentication\nschemes for proxies.\n",null,0],["WEBrick::HTTPAuth::ProxyBasicAuth","","Ruby/classes/WEBrick/HTTPAuth/ProxyBasicAuth.html","","<p>Basic authentication for proxy servers.  See BasicAuth for details.\n",null,0],["WEBrick::HTTPAuth::ProxyDigestAuth","","Ruby/classes/WEBrick/HTTPAuth/ProxyDigestAuth.html","","<p>Digest authentication for proxy servers.  See DigestAuth for details.\n",null,0],["WEBrick::HTTPAuth::UserDB","","Ruby/classes/WEBrick/HTTPAuth/UserDB.html","","<p>User database mixin for HTTPAuth.  This mixin dispatches user record access\nto the underlying auth_type …\n",null,0],["WEBrick::HTTPProxyServer","","Ruby/classes/WEBrick/HTTPProxyServer.html","","<p>An HTTP Proxy server which proxies GET, HEAD and POST requests.\n<p>To create a simple proxy server:\n\n<pre><code>require ...\n</code></pre>\n",null,0],["WEBrick::HTTPRequest","","Ruby/classes/WEBrick/HTTPRequest.html","","<p>An HTTP request.  This is consumed by service and do_* methods in WEBrick\nservlets\n",null,0],["WEBrick::HTTPResponse","","Ruby/classes/WEBrick/HTTPResponse.html","","<p>An HTTP response.  This is filled in by the service or do_* methods of a\nWEBrick HTTP Servlet.\n",null,0],["WEBrick::HTTPServer","","Ruby/classes/WEBrick/HTTPServer.html","","<p>An HTTP Server\n",null,0],["WEBrick::HTTPServerError","","Ruby/classes/WEBrick/HTTPServerError.html","","",null,0],["WEBrick::HTTPServlet","","Ruby/classes/WEBrick/HTTPServlet.html","","",null,0],["WEBrick::HTTPServlet::AbstractServlet","","Ruby/classes/WEBrick/HTTPServlet/AbstractServlet.html","","<p>AbstractServlet allows HTTP server modules to be reused across multiple\nservers and allows encapsulation …\n",null,0],["WEBrick::HTTPServlet::CGIHandler","","Ruby/classes/WEBrick/HTTPServlet/CGIHandler.html","","<p>Servlet for handling CGI scripts\n<p>Example:\n\n<pre><code>server.mount(&#39;/cgi/my_script&#39;, WEBrick::HTTPServlet::CGIHandler, ...</code></pre>\n",null,0],["WEBrick::HTTPServlet::DefaultFileHandler","","Ruby/classes/WEBrick/HTTPServlet/DefaultFileHandler.html","","<p>Servlet for serving a single file.  You probably want to use the\nFileHandler servlet instead as it handles …\n",null,0],["WEBrick::HTTPServlet::ERBHandler","","Ruby/classes/WEBrick/HTTPServlet/ERBHandler.html","","<p>ERBHandler evaluates an ERB file and returns the result.  This handler is\nautomatically used if there …\n",null,0],["WEBrick::HTTPServlet::FileHandler","","Ruby/classes/WEBrick/HTTPServlet/FileHandler.html","","<p>Serves a directory including fancy indexing and a variety of other options.\n<p>Example:\n\n<pre><code>server.mount &#39;/assets&#39;, ...</code></pre>\n",null,0],["WEBrick::HTTPServlet::HTTPServletError","","Ruby/classes/WEBrick/HTTPServlet/HTTPServletError.html","","",null,0],["WEBrick::HTTPServlet::ProcHandler","","Ruby/classes/WEBrick/HTTPServlet/ProcHandler.html","","<p>Mounts a proc at a path that accepts a request and response.\n<p>Instead of mounting this servlet with WEBrick::HTTPServer#mount …\n",null,0],["WEBrick::HTTPStatus","","Ruby/classes/WEBrick/HTTPStatus.html","","<p>This module is used to manager HTTP status codes.\n<p>See www.w3.org/Protocols/rfc2616/rfc2616-sec10.html …\n",null,0],["WEBrick::HTTPStatus::ClientError","","Ruby/classes/WEBrick/HTTPStatus/ClientError.html","","<p>Root of the HTTP client error statuses\n",null,0],["WEBrick::HTTPStatus::EOFError","","Ruby/classes/WEBrick/HTTPStatus/EOFError.html","","",null,0],["WEBrick::HTTPStatus::Error","","Ruby/classes/WEBrick/HTTPStatus/Error.html","","<p>Root of the HTTP error statuses\n",null,0],["WEBrick::HTTPStatus::Info","","Ruby/classes/WEBrick/HTTPStatus/Info.html","","<p>Root of the HTTP info statuses\n",null,0],["WEBrick::HTTPStatus::Redirect","","Ruby/classes/WEBrick/HTTPStatus/Redirect.html","","<p>Root of the HTTP redirect statuses\n",null,0],["WEBrick::HTTPStatus::ServerError","","Ruby/classes/WEBrick/HTTPStatus/ServerError.html","","<p>Root of the HTTP server error statuses\n",null,0],["WEBrick::HTTPStatus::Status","","Ruby/classes/WEBrick/HTTPStatus/Status.html","","<p>Root of the HTTP status class hierarchy\n",null,0],["WEBrick::HTTPStatus::Success","","Ruby/classes/WEBrick/HTTPStatus/Success.html","","<p>Root of the HTTP sucess statuses\n",null,0],["WEBrick::HTTPUtils","","Ruby/classes/WEBrick/HTTPUtils.html","","<p>HTTPUtils provides utility methods for working with the HTTP protocol.\n<p>This module is generally used internally …\n",null,0],["WEBrick::HTTPUtils::FormData","","Ruby/classes/WEBrick/HTTPUtils/FormData.html","","<p>Stores multipart form data.  FormData objects are created when\nWEBrick::HTTPUtils.parse_form_data is …\n",null,0],["WEBrick::HTTPVersion","","Ruby/classes/WEBrick/HTTPVersion.html","","<p>Represents an HTTP protocol version\n",null,0],["WEBrick::Log","","Ruby/classes/WEBrick/Log.html","","<p>A logging class that prepends a timestamp to each message.\n",null,0],["WEBrick::ServerError","","Ruby/classes/WEBrick/ServerError.html","","<p>Server error exception\n",null,0],["WEBrick::SimpleServer","","Ruby/classes/WEBrick/SimpleServer.html","","<p>Base server class\n",null,0],["WEBrick::Utils","","Ruby/classes/WEBrick/Utils.html","","",null,0],["WEBrick::Utils::TimeoutHandler","","Ruby/classes/WEBrick/Utils/TimeoutHandler.html","","<p>Class used to manage timeout handlers across multiple threads.\n<p>Timeout handlers should be managed by using …\n",null,0],["WIN32OLE","","Ruby/classes/WIN32OLE.html","","\n<pre><code>&lt;code&gt;WIN32OLE&lt;/code&gt; objects represent OLE Automation object in Ruby.\n\nBy using WIN32OLE, you can access ...</code></pre>\n",null,0],["WIN32OLE::VARIANT","","Ruby/classes/WIN32OLE/VARIANT.html","","",null,0],["WIN32OLERuntimeError","","Ruby/classes/WIN32OLERuntimeError.html","","",null,0],["WIN32OLE_EVENT","","Ruby/classes/WIN32OLE_EVENT.html","","<p><code>WIN32OLE_EVENT</code> objects controls OLE event.\n",null,0],["WIN32OLE_METHOD","","Ruby/classes/WIN32OLE_METHOD.html","","<p><code>WIN32OLE_METHOD</code> objects represent OLE method information.\n",null,0],["WIN32OLE_PARAM","","Ruby/classes/WIN32OLE_PARAM.html","","<p><code>WIN32OLE_PARAM</code> objects represent param information of the OLE\nmethod.\n",null,0],["WIN32OLE_TYPE","","Ruby/classes/WIN32OLE_TYPE.html","","<p><code>WIN32OLE_TYPE</code> objects represent OLE type libarary information.\n",null,0],["WIN32OLE_TYPELIB","","Ruby/classes/WIN32OLE_TYPELIB.html","","<p><code>WIN32OLE_TYPELIB</code> objects represent OLE tyblib information.\n",null,0],["WIN32OLE_VARIABLE","","Ruby/classes/WIN32OLE_VARIABLE.html","","<p><code>WIN32OLE_VARIABLE</code> objects represent OLE variable information.\n",null,0],["WIN32OLE_VARIANT","","Ruby/classes/WIN32OLE_VARIANT.html","","",null,0],["WeakRef","","Ruby/classes/WeakRef.html","","<p>Weak Reference class that allows a referenced object to be\ngarbage-collected.\n<p>A WeakRef may be used exactly …\n",null,0],["WeakRef::RefError","","Ruby/classes/WeakRef/RefError.html","","<p>RefError is raised when a referenced object has been recycled by the\ngarbage collector\n",null,0],["Win32","","Ruby/classes/Win32.html","","<p>Implements bindings to Win32 SSPI functions, focused on authentication to a\nproxy server over HTTP.\n",null,0],["Win32::Registry","","Ruby/classes/Win32/Registry.html","","<p>Win32 Registry\n<p>win32/registry is registry accessor library for Win32 platform. It uses\ndl/import to call …\n",null,0],["Win32::Registry::API","","Ruby/classes/Win32/Registry/API.html","","<p>Win32 APIs\n<p>Win32 APIs\n",null,0],["Win32::Registry::Constants","","Ruby/classes/Win32/Registry/Constants.html","","<p>For detail, see the MSDN.\n<p>— HKEY_*\n\n<pre><code>Predefined key ((*handle*)).\nThese are Integer, not Win32::Registry.</code></pre>\n",null,0],["Win32::Registry::Error","","Ruby/classes/Win32/Registry/Error.html","","<p>Error\n<p>Error\n",null,0],["Win32::Registry::Error::Kernel32","","Ruby/classes/Win32/Registry/Error/Kernel32.html","","",null,0],["Win32::Registry::PredefinedKey","","Ruby/classes/Win32/Registry/PredefinedKey.html","","<p>Predefined Keys\n<p>Predefined Keys\n",null,0],["Win32::Resolv","","Ruby/classes/Win32/Resolv.html","","",null,0],["Win32::Resolv::Kernel32","","Ruby/classes/Win32/Resolv/Kernel32.html","","",null,0],["Win32::SSPI","","Ruby/classes/Win32/SSPI.html","","",null,0],["Win32::SSPI::API","","Ruby/classes/Win32/SSPI/API.html","","<p>Win32 API Functions. Uses Win32API to bind methods to constants contained\nin class.\n",null,0],["Win32::SSPI::Identity","","Ruby/classes/Win32/SSPI/Identity.html","","<p>SEC_WINNT_AUTH_IDENTITY structure\n",null,0],["Win32::SSPI::NegotiateAuth","","Ruby/classes/Win32/SSPI/NegotiateAuth.html","","<p>Handles “Negotiate” type authentication. Geared towards authenticating with\na proxy server …\n",null,0],["Win32::SSPI::SSPIResult","","Ruby/classes/Win32/SSPI/SSPIResult.html","","<p>Takes a return result from an SSPI function and interprets the value.\n",null,0],["Win32::SSPI::SecurityBuffer","","Ruby/classes/Win32/SSPI/SecurityBuffer.html","","<p>Creates binary representaiton of a SecBufferDesc structure, including the\nSecBuffer contained inside. …\n",null,0],["Win32::SSPI::SecurityHandle","","Ruby/classes/Win32/SSPI/SecurityHandle.html","","<p>SecHandle struct\n",null,0],["Win32::SSPI::TimeStamp","","Ruby/classes/Win32/SSPI/TimeStamp.html","","<p>TimeStamp struct\n",null,0],["Win32API","","Ruby/classes/Win32API.html","","",null,0],["XML","","Ruby/classes/XML.html","","",null,0],["XML::Parser","","Ruby/classes/XML/Parser.html","","",null,0],["XMLEncoding_ja","","Ruby/classes/XMLEncoding_ja.html","","",null,0],["XMLEncoding_ja::SJISHandler","","Ruby/classes/XMLEncoding_ja/SJISHandler.html","","",null,0],["XMLRPC","","Ruby/classes/XMLRPC.html","","<p>Author and Copyright\n<p>Copyright (C) 2001-2004 by Michael Neumann (mneumann@ntecs.de)\n<p>Released under the …\n",null,0],["XMLRPC::Base64","","Ruby/classes/XMLRPC/Base64.html","","<p>This class is necessary for &#39;xmlrpc4r&#39; to determine that a string\nshould be transmitted base64-encoded …\n",null,0],["XMLRPC::BasicServer","","Ruby/classes/XMLRPC/BasicServer.html","","<p>This is the base class for all XML-RPC server-types (CGI, standalone). You\ncan add handler and set a …\n",null,0],["XMLRPC::CGIServer","","Ruby/classes/XMLRPC/CGIServer.html","","<p>Implements a CGI-based XML-RPC server.\n\n<pre><code>require &quot;xmlrpc/server&quot;\n\ns = XMLRPC::CGIServer.new\n\ns.add_handler(&quot;michael.add&quot;) ...\n</code></pre>\n",null,0],["XMLRPC::Client","","Ruby/classes/XMLRPC/Client.html","","<p>Provides remote procedure calls to a XML-RPC server.\n<p>After setting the connection-parameters with XMLRPC::Client.new …\n",null,0],["XMLRPC::Client::Proxy","","Ruby/classes/XMLRPC/Client/Proxy.html","","<p>XML-RPC calls look nicer!\n<p>You can call any method onto objects of that class - the object handles\nXMLRPC::Client::Proxy#method_missing …\n",null,0],["XMLRPC::Config","","Ruby/classes/XMLRPC/Config.html","","",null,0],["XMLRPC::Convert","","Ruby/classes/XMLRPC/Convert.html","","<p>Helper class used to convert types.\n",null,0],["XMLRPC::Create","","Ruby/classes/XMLRPC/Create.html","","<p>Creates XML-RPC call/response documents\n",null,0],["XMLRPC::DateTime","","Ruby/classes/XMLRPC/DateTime.html","","<p>This class is important to handle XMLRPC <code>dateTime.iso8601</code>\nvalues, correcly, because normal UNIX-dates, …\n",null,0],["XMLRPC::FaultException","","Ruby/classes/XMLRPC/FaultException.html","","<p>Raised when the remote procedure returns a fault-structure, which has two\naccessor-methods <code>faultCode</code> …\n",null,0],["XMLRPC::Marshal","","Ruby/classes/XMLRPC/Marshal.html","","<p>Marshalling of XMLRPC::Create#methodCall and XMLRPC::Create#methodResponse\n",null,0],["XMLRPC::Marshallable","","Ruby/classes/XMLRPC/Marshallable.html","","<p>This module enables a user-class to be marshalled by XML-RPC for Ruby into\na Hash, with one additional …\n",null,0],["XMLRPC::ModRubyServer","","Ruby/classes/XMLRPC/ModRubyServer.html","","<p>Implements a XML-RPC server, which works with Apache mod_ruby.\n<p>Use it in the same way as XMLRPC::CGIServer …\n",null,0],["XMLRPC::ParseContentType","","Ruby/classes/XMLRPC/ParseContentType.html","","",null,0],["XMLRPC::ParserWriterChooseMixin","","Ruby/classes/XMLRPC/ParserWriterChooseMixin.html","","<p>Defines ParserWriterChooseMixin, which makes it possible to choose a\ndifferent XMLWriter and/or XMLParser …\n",null,0],["XMLRPC::Server","","Ruby/classes/XMLRPC/Server.html","","<p>Implements a standalone XML-RPC server. The method XMLRPC::Server#serve is\nleft if a SIGHUP is sent to …\n",null,0],["XMLRPC::Service","","Ruby/classes/XMLRPC/Service.html","","",null,0],["XMLRPC::Service::BasicInterface","","Ruby/classes/XMLRPC/Service/BasicInterface.html","","<p>Base class for XMLRPC::Service::Interface definitions, used by\nXMLRPC::BasicServer#add_handler\n",null,0],["XMLRPC::Service::Interface","","Ruby/classes/XMLRPC/Service/Interface.html","","<p>Class which wraps a XMLRPC::Service::Interface definition, used by\nXMLRPC::BasicServer#add_handler\n",null,0],["XMLRPC::Service::PublicInstanceMethodsInterface","","Ruby/classes/XMLRPC/Service/PublicInstanceMethodsInterface.html","","",null,0],["XMLRPC::WEBrickServlet","","Ruby/classes/XMLRPC/WEBrickServlet.html","","<p>Implements a servlet for use with WEBrick, a pure Ruby (HTTP) server\nframework.\n\n<pre><code>require &quot;webrick&quot;\nrequire ...\n</code></pre>\n",null,0],["XMLRPC::XMLParser","","Ruby/classes/XMLRPC/XMLParser.html","","<p>Parser for XML-RPC call and response\n",null,0],["XMLRPC::XMLParser::AbstractStreamParser","","Ruby/classes/XMLRPC/XMLParser/AbstractStreamParser.html","","",null,0],["XMLRPC::XMLParser::AbstractTreeParser","","Ruby/classes/XMLRPC/XMLParser/AbstractTreeParser.html","","",null,0],["XMLRPC::XMLParser::NQXMLParser","","Ruby/classes/XMLRPC/XMLParser/NQXMLTreeParser.html","","",null,0],["XMLRPC::XMLParser::NQXMLStreamParser","","Ruby/classes/XMLRPC/XMLParser/NQXMLStreamParser.html","","",null,0],["XMLRPC::XMLParser::NQXMLStreamParser::XMLRPCParser","","Ruby/classes/XMLRPC/XMLParser/NQXMLStreamParser/XMLRPCParser.html","","",null,0],["XMLRPC::XMLParser::NQXMLTreeParser","","Ruby/classes/XMLRPC/XMLParser/NQXMLTreeParser.html","","",null,0],["XMLRPC::XMLParser::REXMLStreamParser","","Ruby/classes/XMLRPC/XMLParser/REXMLStreamParser.html","","",null,0],["XMLRPC::XMLParser::REXMLStreamParser::StreamListener","","Ruby/classes/XMLRPC/XMLParser/REXMLStreamParser/StreamListener.html","","",null,0],["XMLRPC::XMLParser::StreamParserMixin","","Ruby/classes/XMLRPC/XMLParser/StreamParserMixin.html","","",null,0],["XMLRPC::XMLParser::XMLParser","","Ruby/classes/XMLRPC/XMLParser/XMLTreeParser.html","","",null,0],["XMLRPC::XMLParser::XMLScanStreamParser","","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser.html","","",null,0],["XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html","","",null,0],["XMLRPC::XMLParser::XMLStreamParser","","Ruby/classes/XMLRPC/XMLParser/XMLStreamParser.html","","",null,0],["XMLRPC::XMLParser::XMLTreeParser","","Ruby/classes/XMLRPC/XMLParser/XMLTreeParser.html","","",null,0],["XMLRPC::XMLWriter","","Ruby/classes/XMLRPC/XMLWriter.html","","",null,0],["XMLRPC::XMLWriter::Abstract","","Ruby/classes/XMLRPC/XMLWriter/Abstract.html","","",null,0],["XMLRPC::XMLWriter::Simple","","Ruby/classes/XMLRPC/XMLWriter/Simple.html","","",null,0],["XMLRPC::XMLWriter::XMLParser","","Ruby/classes/XMLRPC/XMLWriter/XMLParser.html","","",null,0],["XMP","","Ruby/classes/XMP.html","","<p>An example printer for irb.\n<p>It&#39;s much like the standard library PrettyPrint, that shows the value …\n",null,0],["XMP::StringInputMethod","","Ruby/classes/XMP/StringInputMethod.html","","<p>A custom InputMethod class used by XMP for evaluating string io.\n",null,0],["YAML","","Ruby/classes/YAML.html","","<p>YAML Ain&#39;t Markup Language\n<p>This module provides a Ruby interface for data serialization in YAML\nformat. …\n",null,0],["YAML::DBM","","Ruby/classes/YAML/DBM.html","","<p>YAML + DBM = YDBM\n<p>YAML::DBM provides the same interface as ::DBM.\n<p>However, while DBM only allows strings …\n",null,0],["YAML::Store","","Ruby/classes/YAML/Store.html","","<p>YAML::Store provides the same functionality as PStore, except it uses YAML\nto dump objects instead of …\n",null,0],["YAML::Syck","","Ruby/classes/YAML/Syck.html","","",null,0],["YAML::Syck::DefaultKey","","Ruby/classes/YAML/Syck/DefaultKey.html","","",null,0],["ZeroDivisionError","","Ruby/classes/ZeroDivisionError.html","","<p>Raised when attempting to divide an integer by 0.\n\n<pre><code>42 / 0</code></pre>\n<p><em>raises the exception:</em>\n",null,0],["Zlib","","Ruby/classes/Zlib.html","","<p>This module provides access to the zlib library. Zlib is designed to be a\nportable, free, general-purpose, …\n",null,0],["Zlib::BufError","","Ruby/classes/Zlib/BufError.html","","<p>Subclass of Zlib::Error when zlib returns a Z_BUF_ERROR.\n<p>Usually if no progress is possible.\n",null,0],["Zlib::DataError","","Ruby/classes/Zlib/DataError.html","","<p>Subclass of Zlib::Error when zlib returns a Z_DATA_ERROR.\n<p>Usually if a stream was prematurely freed.\n",null,0],["Zlib::Deflate","","Ruby/classes/Zlib/Deflate.html","","<p>Zlib::Deflate is the class for compressing data.  See Zlib::ZStream for\nmore information.\n",null,0],["Zlib::Error","","Ruby/classes/Zlib/Error.html","","<p>The superclass for all exceptions raised by Ruby/zlib.\n<p>The following exceptions are defined as subclasses …\n",null,0],["Zlib::GzipFile","","Ruby/classes/Zlib/GzipFile.html","","<p>Zlib::GzipFile is an abstract class for handling a gzip formatted\ncompressed file. The operations are …\n",null,0],["Zlib::GzipFile::CRCError","","Ruby/classes/Zlib/GzipFile/CRCError.html","","<p>Raised when the CRC checksum recorded in gzip file footer is not equivalent\nto the CRC checksum of the …\n",null,0],["Zlib::GzipFile::Error","","Ruby/classes/Zlib/GzipFile/Error.html","","<p>Base class of errors that occur when processing GZIP files.\n",null,0],["Zlib::GzipFile::LengthError","","Ruby/classes/Zlib/GzipFile/LengthError.html","","<p>Raised when the data length recorded in the gzip file footer is not\nequivalent to the length of the actual …\n",null,0],["Zlib::GzipFile::NoFooter","","Ruby/classes/Zlib/GzipFile/NoFooter.html","","<p>Raised when gzip file footer is not found.\n",null,0],["Zlib::GzipReader","","Ruby/classes/Zlib/GzipReader.html","","<p>Zlib::GzipReader is the class for reading a gzipped file.  GzipReader\nshould be used an IO, or -IO-like, …\n",null,0],["Zlib::GzipWriter","","Ruby/classes/Zlib/GzipWriter.html","","<p>Zlib::GzipWriter is a class for writing gzipped files.  GzipWriter should\nbe used with an instance of …\n",null,0],["Zlib::Inflate","","Ruby/classes/Zlib/Inflate.html","","<p>Zlib:Inflate is the class for decompressing compressed data.  Unlike\nZlib::Deflate, an instance of this …\n",null,0],["Zlib::MemError","","Ruby/classes/Zlib/MemError.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_MEM_ERROR, usually if there was not enough memory.\n",null,0],["Zlib::NeedDict","","Ruby/classes/Zlib/NeedDict.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_NEED_DICT if a preset dictionary is needed at this\npoint. …\n",null,0],["Zlib::StreamEnd","","Ruby/classes/Zlib/StreamEnd.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_STREAM_END is return if the end of the compressed\ndata has …\n",null,0],["Zlib::StreamError","","Ruby/classes/Zlib/StreamError.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_STREAM_ERROR, usually if the stream state was\ninconsistent. …\n",null,0],["Zlib::VersionError","","Ruby/classes/Zlib/VersionError.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_VERSION_ERROR, usually if the zlib library version is\nincompatible …\n",null,0],["Zlib::ZStream","","Ruby/classes/Zlib/ZStream.html","","<p>Zlib::ZStream is the abstract class for the stream which handles the\ncompressed data. The operations …\n",null,0],["[]","Array","Ruby/classes/Array.html#method-c-5B-5D","(*args)","<p>Returns a new array populated with the given objects.\n\n<pre><code>Array.[]( 1, &#39;a&#39;, /^A/ ) # =&gt; [1, &quot;a&quot;, /^A/]\nArray[ ...\n</code></pre>\n",null,0],["[]","Array","Ruby/classes/Array.html#method-i-5B-5D","(p1, p2 = v2)","<p>Element Reference — Returns the element at <code>index</code>, or returns a\nsubarray starting at the <code>start</code> index …\n",null,0],["[]","Bignum","Ruby/classes/Bignum.html#method-i-5B-5D","(p1)","<p>Bit Reference—Returns the <em>n</em>th bit in the (assumed) binary\nrepresentation of <em>big</em>, where <em>big</em> is the least …\n",null,0],["[]","CGI::QueryExtension","Ruby/classes/CGI/QueryExtension.html#method-i-5B-5D","(key)","<p>Get the value for the parameter with a given key.\n<p>If the parameter has multiple values, only the first …\n",null,0],["[]","CGI::Session","Ruby/classes/CGI/Session.html#method-i-5B-5D","(key)","<p>Retrieve the session data for key <code>key</code>.\n",null,0],["[]","CSV::Row","Ruby/classes/CSV/Row.html#method-i-5B-5D","(header_or_index, minimum_index = 0)","",null,0],["[]","CSV::Table","Ruby/classes/CSV/Table.html#method-i-5B-5D","(index_or_header)","<p>In the default mixed mode, this method returns rows for index access and\ncolumns for header access.  …\n",null,0],["[]","Continuation","Ruby/classes/Continuation.html#method-i-5B-5D","(*args)","<p>Invokes the continuation. The program continues from the end of the\n<code>callcc</code> block. If no arguments are …\n",null,0],["[]","DBM","Ruby/classes/DBM.html#method-i-5B-5D","(p1)","<p>Return a value from the database by locating the key string provided.  If\nthe key is not found, returns …\n",null,0],["[]","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-5B-5D","(p1)","<p>Calls the function pointer passing in <code>ary</code> as values to the\nunderlying C function.  The return value depends …\n",null,0],["[]","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-5B-5D","(p1, p2 = v2)","<p>Returns integer stored at <em>index</em>.  If <em>start</em> and\n<em>length</em> are given, a string containing the bytes from  …\n",null,0],["[]","DL::CPtr","Ruby/classes/DL/CPtr.html#method-c-5B-5D","(p1)","<p>Get the underlying pointer for ruby object <code>val</code> and return it\nas a DL::CPtr object.\n",null,0],["[]","DL::CStructEntity","Ruby/classes/DL/CStructEntity.html#method-i-5B-5D","(name)","<p>Fetch struct member <code>name</code>\n",null,0],["[]","DL::CompositeHandler","Ruby/classes/DL/CompositeHandler.html#method-i-5B-5D","(symbol)","",null,0],["[]","DL::Handle","Ruby/classes/DL/Handle.html#method-i-5B-5D","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.\n",null,0],["[]","DL::Handle","Ruby/classes/DL/Handle.html#method-c-5B-5D","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.\n",null,0],["[]","DL::Importer","Ruby/classes/DL/Importer.html#method-i-5B-5D","(name)","",null,0],["[]","DL::Packer","Ruby/classes/DL/Packer.html#method-c-5B-5D","(*types)","",null,0],["[]","DL::Stack","Ruby/classes/DL/Stack.html#method-c-5B-5D","(*types)","",null,0],["[]","DRb::DRbSSLSocket::SSLConfig","Ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-5B-5D","(key)","<p>A convenience method to access the values like a Hash\n",null,0],["[]","DRb::GW","Ruby/classes/DRb/GW.html#method-i-5B-5D","(key)","<p>Retrieves <code>key</code> from the GW\n",null,0],["[]","Dir","Ruby/classes/Dir.html#method-c-5B-5D","(*args)","<p>Equivalent to calling <code>Dir.glob(</code><em>array,</em><code>0)</code>\nand <code>Dir.glob([string,...],0)</code>.\n",null,0],["[]","ENV","Ruby/classes/ENV.html#method-c-5B-5D","(p1)","<p>Retrieves the <code>value</code> for environment variable <code>name</code>\nas a String.  Returns <code>nil</code> if the named variable does …\n",null,0],["[]","Fiddle::CStructEntity","Ruby/classes/Fiddle/CStructEntity.html#method-i-5B-5D","(name)","<p>Fetch struct member <code>name</code>\n",null,0],["[]","Fiddle::CompositeHandler","Ruby/classes/Fiddle/CompositeHandler.html#method-i-5B-5D","(symbol)","<p>See Fiddle::CompositeHandler.sym\n",null,0],["[]","Fiddle::Handle","Ruby/classes/Fiddle/Handle.html#method-i-5B-5D","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.\n",null,0],["[]","Fiddle::Handle","Ruby/classes/Fiddle/Handle.html#method-c-5B-5D","(p1)","<p>Get the address as an Integer for the function named <code>name</code>. \nThe function is searched via dlsym on RTLD_NEXT …\n",null,0],["[]","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-5B-5D","(name)","<p>Returns the function mapped to <code>name</code>, that was created by\neither Fiddle::Importer.extern or Fiddle::Importer.bind …\n",null,0],["[]","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-c-5B-5D","(p1)","<p>Get the underlying pointer for ruby object <code>val</code> and return it\nas a Fiddle::Pointer object.\n",null,0],["[]","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-5B-5D","(p1, p2 = v2)","<p>Returns integer stored at <em>index</em>.\n<p>If <em>start</em> and <em>length</em> are given, a string containing the\nbytes from <em>start</em> …\n",null,0],["[]","Fixnum","Ruby/classes/Fixnum.html#method-i-5B-5D","(p1)","<p>Bit Reference—Returns the <em>n</em>th bit in the binary representation of\n<em>fix</em>, where <em>fix</em> is the least significant …\n",null,0],["[]","GDBM","Ruby/classes/GDBM.html#method-i-5B-5D","(p1)","<p>Retrieves the <em>value</em> corresponding to <em>key</em>.\n",null,0],["[]","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-i-5B-5D","(command_name)","<p>Returns a Command instance for <code>command_name</code>\n",null,0],["[]","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-5B-5D","(key)","<p>Return the configuration information for <code>key</code>.\n",null,0],["[]","Hash","Ruby/classes/Hash.html#method-i-5B-5D","(p1)","<p>Element Reference—Retrieves the <em>value</em> object corresponding to the\n<em>key</em> object. If not found, returns …\n",null,0],["[]","Hash","Ruby/classes/Hash.html#method-c-5B-5D","(*args)","<p>Creates a new hash populated with the given objects. Equivalent to the\nliteral <code>{ <em>key</em> =&gt; <em>value</em>, ...</code> …\n",null,0],["[]","HttpServer::Table","Ruby/classes/HttpServer/Table.html#method-i-5B-5D","(key)","",null,0],["[]","JSON","Ruby/classes/JSON.html#method-i-5B-5D","(object, opts = {})","<p>If <em>object</em> is string-like, parse the string and return the parsed\nresult as a Ruby data structure. Otherwise …\n",null,0],["[]","JSON::GenericObject","Ruby/classes/JSON/GenericObject.html#method-i-5B-5D","(name)","",null,0],["[]","MatchData","Ruby/classes/MatchData.html#method-i-5B-5D","(p1, p2 = v2)","<p>Match Reference – <code>MatchData</code> acts as an array, and may be\naccessed using the normal array indexing techniques. …\n",null,0],["[]","Matrix","Ruby/classes/Matrix.html#method-c-5B-5D","(*rows)","<p>Creates a matrix where each argument is a row.\n\n<pre><code>Matrix[ [25, 93], [-1, 66] ]\n   =&gt;  25 93\n       -1 66\n</code></pre>\n",null,0],["[]","Matrix","Ruby/classes/Matrix.html#method-i-5B-5D","(i, j)","<p>Returns element (<code>i</code>,<code>j</code>) of the matrix.  That is:\nrow <code>i</code>, column <code>j</code>.\n",null,0],["[]","Method","Ruby/classes/Method.html#method-i-5B-5D","(*args)","<p>Invokes the <em>meth</em> with the specified arguments, returning the\nmethod&#39;s return value.\n\n<pre><code>m = 12.method(&quot;+&quot;) ...</code></pre>\n",null,0],["[]","NQXML::Node","Ruby/classes/NQXML/Node.html#method-i-5B-5D","(index)","",null,0],["[]","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-5B-5D","(key)","<p>Returns the header field corresponding to the case-insensitive key. For\nexample, a key of “Content-Type” …\n",null,0],["[]","OLEProperty","Ruby/classes/OLEProperty.html#method-i-5B-5D","(*args)","",null,0],["[]","ObjectSpace::WeakMap","Ruby/classes/ObjectSpace/WeakMap.html#method-i-5B-5D","(p1)","<p>Retrieves a weakly referenced object with the given key\n",null,0],["[]","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-5B-5D","(section)","",null,0],["[]","OpenStruct","Ruby/classes/OpenStruct.html#method-i-5B-5D","(name)","<p>Returns the value of a member.\n\n<pre><code>person = OpenStruct.new(&#39;name&#39; =&gt; &#39;John Smith&#39;, &#39;age&#39; =&gt; 70)\nperson[:age] ...\n</code></pre>\n",null,0],["[]","PStore","Ruby/classes/PStore.html#method-i-5B-5D","(name)","<p>Retrieves a value from the PStore file data, by <em>name</em>.  The\nhierarchy of Ruby objects stored under that …\n",null,0],["[]","Prime::TrialDivision","Ruby/classes/Prime/TrialDivision.html#method-i-5B-5D","(index)","<p>Returns the +index+th prime number.\n<p><code>index</code> is a 0-based index.\n",null,0],["[]","Proc","Ruby/classes/Proc.html#method-i-5B-5D","(*args)","<p>Invokes the block, setting the block&#39;s parameters to the values in\n<em>params</em> using something close to …\n",null,0],["[]","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-5B-5D","(k)","",null,0],["[]","RDoc::Markup::AttrSpan","Ruby/classes/RDoc/Markup/AttrSpan.html#method-i-5B-5D","(n)","<p>Accesses flags for character <code>n</code>\n",null,0],["[]","REXML::AttlistDecl","Ruby/classes/REXML/AttlistDecl.html#method-i-5B-5D","(key)","<p>Access the attlist attribute/value pairs.\n\n<pre><code>value = attlist_decl[ attribute_name ]</code></pre>\n",null,0],["[]","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-5B-5D","( reference, ns=nil )","",null,0],["[]","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-5B-5D","( index )","<p>Fetches a child at a given index @param index the Integer index of the\nchild to fetch\n",null,0],["[]","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-5B-5D","( start, endd=nil)","",null,0],["[]","RSS::Maker","Ruby/classes/RSS/Maker.html#method-i-5B-5D","(version)","<p>Returns the maker for the <code>version</code>\n",null,0],["[]","RSS::XML::Element","Ruby/classes/RSS/XML/Element.html#method-i-5B-5D","(name)","",null,0],["[]","Rake::NameSpace","Ruby/classes/Rake/NameSpace.html#method-i-5B-5D","(name)","<p>Lookup a task named <code>name</code> in the namespace.\n",null,0],["[]","Rake::Task","Ruby/classes/Rake/Task.html#method-i-5B-5D","(task_name)","<p>Return a task with the given name.  If the task is not currently known, try\nto synthesize one from the …\n",null,0],["[]","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-i-5B-5D","(index)","<p>Find an argument value by name or index.\n",null,0],["[]","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-5B-5D","(task_name, scopes=nil)","<p>Find a matching task for <code>task_name</code>.\n",null,0],["[]","Rinda::Tuple","Ruby/classes/Rinda/Tuple.html#method-i-5B-5D","(k)","<p>Accessor method for elements of the tuple.\n",null,0],["[]","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-5B-5D","(key)","<p>Retrieves <code>key</code> from the tuple.\n",null,0],["[]","SDBM","Ruby/classes/SDBM.html#method-i-5B-5D","(p1)","<p>Returns the <code>value</code> in the database associated with the given\n<code>key</code> string.\n<p>If no value is found, returns …\n",null,0],["[]","Set","Ruby/classes/Set.html#method-c-5B-5D","(*ary)","<p>Creates a new set containing the given objects.\n",null,0],["[]","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-5B-5D","(command, file1, file2=nil)","<p>See Shell::CommandProcessor#test\n",null,0],["[]","String","Ruby/classes/String.html#method-i-5B-5D","(*args)","<p>Element Reference — If passed a single <code>index</code>, returns a\nsubstring of one character at that index.  …\n",null,0],["[]","StringScanner","Ruby/classes/StringScanner.html#method-i-5B-5D","(p1)","<p>Return the n-th subgroup in the most recent match.\n\n<pre><code>s = StringScanner.new(&quot;Fri Dec 12 1975 14:39&quot;)\ns.scan(/(\\w+) ...</code></pre>\n",null,0],["[]","Struct","Ruby/classes/Struct.html#method-i-5B-5D","(p1)","<p>Attribute Reference—Returns the value of the instance variable named by\n<em>symbol</em>, or indexed (0..length-1) …\n",null,0],["[]","Symbol","Ruby/classes/Symbol.html#method-i-5B-5D","(*args)","<p>Returns <code>sym.to_s[]</code>.\n",null,0],["[]","Thread","Ruby/classes/Thread.html#method-i-5B-5D","(p1)","<p>Attribute Reference—Returns the value of a fiber-local variable (current\nthread&#39;s root fiber if …\n",null,0],["[]","Vector","Ruby/classes/Vector.html#method-c-5B-5D","(*array)","<p>Creates a Vector from a list of elements.\n\n<pre><code>Vector[7, 4, ...]</code></pre>\n",null,0],["[]","Vector","Ruby/classes/Vector.html#method-i-5B-5D","(i)","<p>Returns element number <code>i</code> (starting at zero) of the vector.\n",null,0],["[]","WEBrick::CGI","Ruby/classes/WEBrick/CGI.html#method-i-5B-5D","(key)","<p>Reads <code>key</code> from the configuration\n",null,0],["[]","WEBrick::GenericServer","Ruby/classes/WEBrick/GenericServer.html#method-i-5B-5D","(key)","<p>Retrieves <code>key</code> from the configuration\n",null,0],["[]","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-5B-5D","(header_name)","<p>Retrieves <code>header_name</code>\n",null,0],["[]","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-5B-5D","(field)","<p>Retrieves the response header <code>field</code>\n",null,0],["[]","WEBrick::HTTPStatus","Ruby/classes/WEBrick/HTTPStatus.html#method-c-5B-5D","(code)","<p>Returns the status class corresponding to <code>code</code>\n\n<pre><code>WEBrick::HTTPStatus[302]\n=&gt; WEBrick::HTTPStatus::NotFound\n</code></pre>\n",null,0],["[]","WEBrick::HTTPUtils::FormData","Ruby/classes/WEBrick/HTTPUtils/FormData.html#method-i-5B-5D","(*key)","<p>Retrieves the header at the first entry in <code>key</code>\n",null,0],["[]","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-5B-5D","(*args)","<p>Returns the value of Collection specified by a1, a2,.…\n\n<pre><code>dict = WIN32OLE.new(&#39;Scripting.Dictionary&#39;)\ndict.add(&#39;ruby&#39;, ...</code></pre>\n",null,0],["[]","WIN32OLE_VARIANT","Ruby/classes/WIN32OLE_VARIANT.html#method-i-5B-5D","(*args)","<p>Returns the element of WIN32OLE_VARIANT object(OLE array). This method is\navailable only when the variant …\n",null,0],["[]","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-5B-5D","(name, *rtype)","<p>Read a registry value named name and return its value data. The class of\nvalue is same as #read method …\n",null,0],["[]","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-5B-5D","( key )","<p>Return value associated with <code>key</code> from database.\n<p>Returns <code>nil</code> if there is no such <code>key</code>.\n",null,0],["[]","ActionController::Parameters","Rails/classes/ActionController/Parameters.html#method-i-5B-5D","(key)","<p>Returns a parameter for the given <code>key</code>. If not found, returns\n<code>nil</code>.\n\n<pre>params = ActionController::Parameters.new(person: ...</pre>\n",null,1],["[]","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-5B-5D","(k)","",null,1],["[]","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-i-5B-5D","(key)","",null,1],["[]","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-5B-5D","(i)","",null,1],["[]","ActionView::Template::Types","Rails/classes/ActionView/Template/Types.html#method-c-5B-5D","(type)","",null,1],["[]","ActionView::Template::Types::Type","Rails/classes/ActionView/Template/Types/Type.html#method-c-5B-5D","(type)","",null,1],["[]","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-5B-5D","(attribute)","<p>When passed a symbol or a name of a method, returns an array of errors for\nthe method.\n\n<pre>person.errors[:name] ...</pre>\n",null,1],["[]","ActiveRecord::AttributeMethods","Rails/classes/ActiveRecord/AttributeMethods.html#method-i-5B-5D","(attr_name)","<p>Returns the value of the attribute identified by <code>attr_name</code>\nafter it has been typecast (for example, “2004-12-12” …\n",null,1],["[]","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::TypeMap","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/TypeMap.html#method-i-5B-5D","(oid)","",null,1],["[]","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveRecord::ConnectionAdapters::SQLite3Adapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/StatementPool.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-5B-5D","(name)","<p>Returns a ColumnDefinition for the column with name <code>name</code>.\n",null,1],["[]","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-i-5B-5D","(x)","",null,1],["[]","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-i-5B-5D","(idx)","",null,1],["[]","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-5B-5D","(*args)","",null,1],["[]","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-5B-5D","(*args)","",null,1],["[]","ActiveSupport::OrderedOptions","Rails/classes/ActiveSupport/OrderedOptions.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-5B-5D","(*args)","",null,1],["[]","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-5B-5D","(arg)","<p>Locate a specific time zone object. If the argument is a string, it is\ninterpreted to mean the name of …\n",null,1],["[]","Mime","Rails/classes/Mime.html#method-c-5B-5D","(type)","",null,1],["[]","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-5B-5D","(path)","",null,1],["[]=","Array","Ruby/classes/Array.html#method-i-5B-5D-3D","(*args)","<p>Element Assignment — Sets the element at <code>index</code>, or replaces a\nsubarray from the <code>start</code> index for <code>length</code> …\n",null,0],["[]=","CGI::Session","Ruby/classes/CGI/Session.html#method-i-5B-5D-3D","(key, val)","<p>Set the session data for key <code>key</code>.\n",null,0],["[]=","CSV::Row","Ruby/classes/CSV/Row.html#method-i-5B-5D-3D","(*args)","<p>Looks up the field by the semantics described in CSV::Row.field() and\nassigns the <code>value</code>.\n<p>Assigning past …\n",null,0],["[]=","CSV::Table","Ruby/classes/CSV/Table.html#method-i-5B-5D-3D","(index_or_header, value)","<p>In the default mixed mode, this method assigns rows for index access and\ncolumns for header access.  …\n",null,0],["[]=","DBM","Ruby/classes/DBM.html#method-i-5B-5D-3D","(p1, p2)","<p>Stores the specified string value in the database, indexed via the string\nkey provided.\n",null,0],["[]=","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-5B-5D-3D","(p1, p2, p3 = v3)","<p>Set the value at <code>index</code> to <code>int</code>.  Or, set the\nmemory at <code>start</code> until <code>length</code> with the contents of\n<code>string</code> …\n",null,0],["[]=","DL::CStructEntity","Ruby/classes/DL/CStructEntity.html#method-i-5B-5D-3D","(name, val)","<p>Set struct member <code>name</code>, to value <code>val</code>\n",null,0],["[]=","DRb::GW","Ruby/classes/DRb/GW.html#method-i-5B-5D-3D","(key, v)","<p>Stores value <code>v</code> at <code>key</code> in the GW\n",null,0],["[]=","ENV","Ruby/classes/ENV.html#method-c-5B-5D-3D","(p1, p2)","<p>Sets the environment variable <code>name</code> to <code>value</code>.  If\nthe value given is <code>nil</code> the environment variable is deleted. …\n",null,0],["[]=","Fiddle::CStructEntity","Ruby/classes/Fiddle/CStructEntity.html#method-i-5B-5D-3D","(name, val)","<p>Set struct member <code>name</code>, to value <code>val</code>\n",null,0],["[]=","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-5B-5D-3D","(p1, p2, p3 = v3)","<p>Set the value at <code>index</code> to <code>int</code>.\n<p>Or, set the memory at <code>start</code> until <code>length</code> with the\ncontents of <code>string</code>, the …\n",null,0],["[]=","GDBM","Ruby/classes/GDBM.html#method-i-5B-5D-3D","(p1, p2)","<p>Associates the value <em>value</em> with the specified <em>key</em>.\n",null,0],["[]=","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-5B-5D-3D","(key, value)","<p>Set configuration option <code>key</code> to <code>value</code>.\n",null,0],["[]=","Hash","Ruby/classes/Hash.html#method-i-5B-5D-3D","(p1, p2)","<p>Element Assignment\n<p>Associates the value given by <code>value</code> with the key given by\n<code>key</code>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; ...\n</code></pre>\n",null,0],["[]=","HttpServer::Table","Ruby/classes/HttpServer/Table.html#method-i-5B-5D-3D","(key, value)","",null,0],["[]=","JSON::GenericObject","Ruby/classes/JSON/GenericObject.html#method-i-5B-5D-3D","(name, value)","",null,0],["[]=","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-5B-5D-3D","(key, val)","<p>Sets the header field corresponding to the case-insensitive key.\n",null,0],["[]=","OLEProperty","Ruby/classes/OLEProperty.html#method-i-5B-5D-3D","(*args)","",null,0],["[]=","ObjectSpace::WeakMap","Ruby/classes/ObjectSpace/WeakMap.html#method-i-5B-5D-3D","(p1, p2)","<p>Creates a weak reference from the given key to the given value\n",null,0],["[]=","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-5B-5D-3D","(section, pairs)","",null,0],["[]=","OpenStruct","Ruby/classes/OpenStruct.html#method-i-5B-5D-3D","(name, value)","<p>Sets the value of a member.\n\n<pre><code>person = OpenStruct.new(&#39;name&#39; =&gt; &#39;John Smith&#39;, &#39;age&#39; =&gt; 70)\nperson[:age] ...\n</code></pre>\n",null,0],["[]=","PStore","Ruby/classes/PStore.html#method-i-5B-5D-3D","(name, value)","<p>Stores an individual Ruby object or a hierarchy of Ruby objects in the data\nstore file under the root …\n",null,0],["[]=","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-5B-5D-3D","(k, v)","",null,0],["[]=","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-5B-5D-3D","( reference, ns, value=nil )","<p>Doesn&#39;t handle namespaces yet\n",null,0],["[]=","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-5B-5D-3D","( *args )","<p>Set an index entry.  See Array.[]= @param index the index of the element to\nset @param opt either the …\n",null,0],["[]=","REXML::XPathParser","Ruby/classes/REXML/XPathParser.html#method-i-5B-5D-3D","( variable_name, value )","",null,0],["[]=","RSS::XML::Element","Ruby/classes/RSS/XML/Element.html#method-i-5B-5D-3D","(name, value)","",null,0],["[]=","SDBM","Ruby/classes/SDBM.html#method-i-5B-5D-3D","(p1, p2)","<p>Stores a new <code>value</code> in the database with the given\n<code>key</code> as an index.\n<p>If the <code>key</code> already exists, this will …\n",null,0],["[]=","String","Ruby/classes/String.html#method-i-5B-5D-3D","(*args)","<p>Element Assignment—Replaces some or all of the content of <em>str</em>. The\nportion of the string affected is …\n",null,0],["[]=","Struct","Ruby/classes/Struct.html#method-i-5B-5D-3D","(p1, p2)","<p>Attribute Assignment—Assigns to the instance variable named by\n<em>symbol</em> or <em>fixnum</em> the value <em>obj</em> and returns …\n",null,0],["[]=","Thread","Ruby/classes/Thread.html#method-i-5B-5D-3D","(p1, p2)","<p>Attribute Assignment—Sets or creates the value of a fiber-local variable,\nusing either a symbol or …\n",null,0],["[]=","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-5B-5D-3D","(field, value)","<p>Sets the response header <code>field</code> to <code>value</code>\n",null,0],["[]=","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-5B-5D-3D","(*args)","<p>Sets the value to WIN32OLE object specified by a1, a2, …\n\n<pre><code>dict = WIN32OLE.new(&#39;Scripting.Dictionary&#39;) ...</code></pre>\n",null,0],["[]=","WIN32OLE_VARIANT","Ruby/classes/WIN32OLE_VARIANT.html#method-i-5B-5D-3D","(*args)","<p>Set the element of WIN32OLE_VARIANT object(OLE array) to val. This method\nis available only when the …\n",null,0],["[]=","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-5B-5D-3D","(name, rtype, value = nil)","<p>Write value to a registry value named name.\n<p>If wtype is specified, the value type is it. Otherwise, the …\n",null,0],["[]=","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-5B-5D-3D","( key, val )","<p>Set <code>key</code> to <code>value</code> in database.\n<p><code>value</code> will be converted to YAML before storage.\n",null,0],["[]=","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-5B-5D-3D","(k, v)","",null,1],["[]=","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-i-5B-5D-3D","(key, value)","",null,1],["[]=","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-5B-5D-3D","(attribute, error)","<p>Adds to the supplied attribute the supplied error message.\n\n<pre>person.errors[:name] = &quot;must be set&quot;\nperson.errors[:name] ...</pre>\n",null,1],["[]=","ActiveRecord::AttributeMethods","Rails/classes/ActiveRecord/AttributeMethods.html#method-i-5B-5D-3D","(attr_name, value)","<p>Updates the attribute identified by <code>attr_name</code> with the\nspecified <code>value</code>. (Alias for the protected\n<code>write_attribute</code> …\n",null,1],["[]=","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,1],["[]=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::TypeMap","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/TypeMap.html#method-i-5B-5D-3D","(oid, type)","",null,1],["[]=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,1],["[]=","ActiveRecord::ConnectionAdapters::SQLite3Adapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,1],["[]=","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,1],["[]=","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-i-5B-5D-3D","(k,v)","",null,1],["[]=","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-5B-5D-3D","(key, value)","<p>Assigns a new value to the hash:\n\n<pre>hash = ActiveSupport::HashWithIndifferentAccess.new\nhash[:key] = &#39;value&#39;</pre>\n",null,1],["[]=","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-5B-5D-3D","(key, value)","<p>Assigns a new value to the hash:\n\n<pre>hash = ActiveSupport::HashWithIndifferentAccess.new\nhash[:key] = &#39;value&#39;</pre>\n",null,1],["[]=","ActiveSupport::OrderedOptions","Rails/classes/ActiveSupport/OrderedOptions.html#method-i-5B-5D-3D","(key, value)","",null,1],["[]=","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-5B-5D-3D","(path, value)","",null,1],["^","Bignum","Ruby/classes/Bignum.html#method-i-5E","(p1)","<p>Performs bitwise +exclusive or+ between <em>big</em> and <em>numeric</em>.\n",null,0],["^","FalseClass","Ruby/classes/FalseClass.html#method-i-5E","(p1)","<p>Exclusive Or—If <em>obj</em> is <code>nil</code> or <code>false</code>,\nreturns <code>false</code>; otherwise, returns <code>true</code>.\n",null,0],["^","Fixnum","Ruby/classes/Fixnum.html#method-i-5E","(p1)","<p>Bitwise EXCLUSIVE OR.\n",null,0],["^","NilClass","Ruby/classes/NilClass.html#method-i-5E","(p1)","<p>Exclusive Or—If <em>obj</em> is <code>nil</code> or <code>false</code>,\nreturns <code>false</code>; otherwise, returns <code>true</code>.\n",null,0],["^","Set","Ruby/classes/Set.html#method-i-5E","(enum)","<p>Returns a new set containing elements exclusive between the set and the\ngiven enumerable object.  (set …\n",null,0],["^","TrueClass","Ruby/classes/TrueClass.html#method-i-5E","(p1)","<p>Exclusive Or—Returns <code>true</code> if <em>obj</em> is <code>nil</code>\nor <code>false</code>, <code>false</code> otherwise.\n",null,0],["_PermaLink?","RSS::Rss::Channel::Item::Guid","Ruby/classes/RSS/Rss/Channel/Item/Guid.html#method-i-_PermaLink-3F","()","",null,0],["__callback_runner_name","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-__callback_runner_name","(kind)","",null,1],["__callback_runner_name_cache","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-__callback_runner_name_cache","()","",null,1],["__callee__","Kernel","Ruby/classes/Kernel.html#method-i-__callee__","()","",null,0],["__dir__","Kernel","Ruby/classes/Kernel.html#method-i-__dir__","()","<p>Returns the canonicalized absolute path of the directory of the file from\nwhich this method is called. …\n",null,0],["__drbref","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-i-__drbref","()","<p>Get the reference of the object, if local.\n",null,0],["__drbref","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-i-__drbref","()","<p>Get the reference of the object, if local.\n",null,0],["__drburi","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-i-__drburi","()","<p>Get the URI of the remote object.\n",null,0],["__drburi","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-i-__drburi","()","<p>Get the URI of the remote object.\n",null,0],["__evaluate__","IRB::WorkSpace","Ruby/classes/IRB/WorkSpace.html#method-i-__evaluate__","(context, statements, file = nil, line = nil)","",null,0],["__exit__","IRB::Context","Ruby/classes/IRB/Context.html#method-i-__exit__","(ret = 0)","",null,0],["__generate_callback_runner_name","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-__generate_callback_runner_name","(kind)","",null,1],["__getobj__","Delegator","Ruby/classes/Delegator.html#method-i-__getobj__","()","<p>This method must be overridden by subclasses and should return the object\nmethod calls are being delegated …\n",null,0],["__getobj__","SimpleDelegator","Ruby/classes/SimpleDelegator.html#method-i-__getobj__","()","<p>Returns the current object method calls are being delegated to.\n",null,0],["__id__","BasicObject","Ruby/classes/BasicObject.html#method-i-__id__","()","<p>Returns an integer identifier for <code>obj</code>.\n<p>The same number will be returned on all calls to <code>id</code> for a\ngiven …\n",null,0],["__method__","Kernel","Ruby/classes/Kernel.html#method-i-__method__","()","<p>Returns the name of the current method as a Symbol. If called outside of a\nmethod, it returns <code>nil</code>.\n",null,0],["__reset_runner","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-__reset_runner","(symbol)","",null,1],["__send__","BasicObject","Ruby/classes/BasicObject.html#method-i-__send__","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments\nspecified. You can use <code>__send__</code> if …\n",null,0],["__setobj__","Delegator","Ruby/classes/Delegator.html#method-i-__setobj__","(obj)","<p>This method must be overridden by subclasses and change the object delegate\nto <em>obj</em>.\n",null,0],["__setobj__","SimpleDelegator","Ruby/classes/SimpleDelegator.html#method-i-__setobj__","(obj)","<p>Changes the delegate object to <em>obj</em>.\n<p>It&#39;s important to note that this does <strong>not</strong> cause\nSimpleDelegator&#39;s …\n",null,0],["_attr_readonly","ActiveRecord::ReadonlyAttributes","Rails/classes/ActiveRecord/ReadonlyAttributes.html#method-i-_attr_readonly","()","",null,1],["_dasherize","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-_dasherize","(key)","",null,1],["_deprecation_warning","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-c-_deprecation_warning","()","",null,1],["_dump","BigDecimal","Ruby/classes/BigDecimal.html#method-i-_dump","(p1 = v1)","<p>Method used to provide marshalling support.\n\n<pre><code>inf = BigDecimal.new(&#39;Infinity&#39;)\n=&gt; #&lt;BigDecimal:1e16fa8,&#39;Infinity&#39;,9(9)&gt; ...\n</code></pre>\n",null,0],["_dump","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-i-_dump","(lv)","<p>Marshall this object.\n<p>The URI and ref of the object are marshalled.\n",null,0],["_dump","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-i-_dump","(lv)","<p>Marshall this object.\n<p>The URI and ref of the object are marshalled.\n",null,0],["_dump","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-_dump","(limit)","<p>Dump only crucial instance variables.\n",null,0],["_dump","Singleton","Ruby/classes/Singleton.html#method-i-_dump","(depth = -1)","<p>By default, do not retain any state when marshalling.\n",null,0],["_dump","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-_dump","(depth)","<p>marshalling is not allowed\n",null,0],["_dump","Time","Rails/classes/Time.html#method-i-_dump","(*args)","",null,1],["_dump_without_zone","Time","Rails/classes/Time.html#method-i-_dump_without_zone","(*args)","",null,1],["_get","ActiveSupport::OrderedOptions","Rails/classes/ActiveSupport/OrderedOptions.html#method-i-_get","(key)","",null,1],["_getproperty","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-_getproperty","(p1, p2, p3)","<p>Runs the early binding method to get property. The 1st argument specifies\ndispatch ID, the 2nd argument …\n",null,0],["_handle_render_options","ActionController::Renderers","Rails/classes/ActionController/Renderers.html#method-i-_handle_render_options","(options)","",null,1],["_httpdate","Date","Ruby/classes/Date.html#method-c-_httpdate","(p1)","<p>Returns a hash of parsed elements.\n",null,0],["_id2ref","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-_id2ref","(p1)","<p>Converts an object id to a reference to the object. May not be called on an\nobject id passed as a parameter …\n",null,0],["_insert_callbacks","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_insert_callbacks","(callbacks, block = nil)","<p>Take callback names and an optional callback proc, normalize them, then\ncall the block with each callback. …\n",null,1],["_invoke","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-_invoke","(p1, p2, p3)","<p>Runs the early binding method. The 1st argument specifies dispatch ID, the\n2nd argument specifies the …\n",null,0],["_iso8601","Date","Ruby/classes/Date.html#method-c-_iso8601","(p1)","<p>Returns a hash of parsed elements.\n",null,0],["_jisx0301","Date","Ruby/classes/Date.html#method-c-_jisx0301","(p1)","<p>Returns a hash of parsed elements.\n",null,0],["_layout_for","ActionView::Context","Rails/classes/ActionView/Context.html#method-i-_layout_for","(name=nil)","<p>Encapsulates the interaction with the view flow so it returns the correct\nbuffer on <code>yield</code>. This is usually …\n",null,1],["_layout_for","ActionView::Helpers::RenderingHelper","Rails/classes/ActionView/Helpers/RenderingHelper.html#method-i-_layout_for","(*args, &block)","<p>Overwrites _layout_for in the context object so it supports the case a\nblock is passed to a partial. …\n",null,1],["_load","BigDecimal","Ruby/classes/BigDecimal.html#method-c-_load","(p1)","<p>Internal method used to provide marshalling support. See the Marshal\nmodule.\n",null,0],["_load","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-c-_load","(s)","<p>Unmarshall a marshalled DRbObject.\n<p>If the referenced object is located within the local server, then the …\n",null,0],["_load","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-c-_load","(s)","<p>Unmarshall a marshalled DRbObject.\n<p>If the referenced object is located within the local server, then the …\n",null,0],["_load","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-_load","(str)","<p>Load custom marshal format, re-initializing defaults as needed\n",null,0],["_load","Singleton","Ruby/classes/Singleton.html#method-c-_load","","<p>By default calls instance(). Override to retain singleton state.\n",null,0],["_load","Time","Rails/classes/Time.html#method-c-_load","(marshaled_time)","",null,1],["_load_without_zone","Time","Rails/classes/Time.html#method-c-_load_without_zone","(marshaled_time)","",null,1],["_normalize_callback_options","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_normalize_callback_options","(options)","<p>If :only or :except are used, convert the options into the :unless and :if\noptions of ActiveSupport::Callbacks …\n",null,1],["_original_to_s","BigDecimal","Rails/classes/BigDecimal.html#method-i-_original_to_s","(*args)","",null,1],["_parse","Date","Ruby/classes/Date.html#method-c-_parse","(*args)","<p>Parses the given representation of date and time, and returns a hash of\nparsed elements.  This method …\n",null,0],["_parse_file","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-_parse_file","(file, entity)","",null,1],["_prefixes","AbstractController::ViewPaths","Rails/classes/AbstractController/ViewPaths.html#method-i-_prefixes","()","<p>The prefixes used in render “foo” shortcuts.\n",null,1],["_prepare_context","ActionView::Context","Rails/classes/ActionView/Context.html#method-i-_prepare_context","()","<p>Prepares the context by setting the appropriate instance variables. :api:\nplugin\n",null,1],["_racc_do_parse_rb","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-_racc_do_parse_rb","(arg, in_debug)","",null,0],["_racc_do_reduce","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-_racc_do_reduce","(arg, act)","",null,0],["_racc_evalact","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-_racc_evalact","(act, arg)","<p>common\n",null,0],["_racc_init_sysvars","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-_racc_init_sysvars","()","",null,0],["_racc_setup","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-_racc_setup","()","",null,0],["_racc_yyparse_rb","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-_racc_yyparse_rb","(recv, mid, arg, c_debug)","",null,0],["_rfc2822","Date","Ruby/classes/Date.html#method-c-_rfc2822","(p1)","<p>Returns a hash of parsed elements.\n",null,0],["_rfc3339","Date","Ruby/classes/Date.html#method-c-_rfc3339","(p1)","<p>Returns a hash of parsed elements.\n",null,0],["_rfc822","Date","Ruby/classes/Date.html#method-c-_rfc822","(p1)","<p>Returns a hash of parsed elements.\n",null,0],["_routes","AbstractController::UrlFor","Rails/classes/AbstractController/UrlFor.html#method-i-_routes","()","",null,1],["_routes","AbstractController::UrlFor::ClassMethods","Rails/classes/AbstractController/UrlFor/ClassMethods.html#method-i-_routes","()","",null,1],["_routes_context","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-_routes_context","()","",null,1],["_set_detail","ActionView::LookupContext::DetailsCache","Rails/classes/ActionView/LookupContext/DetailsCache.html#method-i-_set_detail","(key, value)","",null,1],["_set_last_value","IRB::Context","Ruby/classes/IRB/Context.html#method-i-_set_last_value","(value)","<p>See #set_last_value\n",null,0],["_set_wrapper_options","ActionController::ParamsWrapper::ClassMethods","Rails/classes/ActionController/ParamsWrapper/ClassMethods.html#method-i-_set_wrapper_options","(options)","",null,1],["_setproperty","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-_setproperty","(p1, p2, p3)","<p>Runs the early binding method to set property. The 1st argument specifies\ndispatch ID, the 2nd argument …\n",null,0],["_store_accessors_module","ActiveRecord::Store::ClassMethods","Rails/classes/ActiveRecord/Store/ClassMethods.html#method-i-_store_accessors_module","()","",null,1],["_strptime","Date","Ruby/classes/Date.html#method-c-_strptime","(*args)","<p>Parses the given representation of date and time with the given template,\nand returns a hash of parsed …\n",null,0],["_strptime","DateTime","Ruby/classes/DateTime.html#method-c-_strptime","(*args)","<p>Parses the given representation of date and time with the given template,\nand returns a hash of parsed …\n",null,0],["_to_partial_path","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-c-_to_partial_path","()","",null,1],["_url_for_modules","ActionView::Helpers::UrlHelper::ClassMethods","Rails/classes/ActionView/Helpers/UrlHelper/ClassMethods.html#method-i-_url_for_modules","()","",null,1],["_with_routes","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-_with_routes","(routes)","",null,1],["_xmlschema","Date","Ruby/classes/Date.html#method-c-_xmlschema","(p1)","<p>Returns a hash of parsed elements.\n",null,0],["`","Kernel","Ruby/classes/Kernel.html#method-i-60","(p1)","<p>Returns the standard output of running <em>cmd</em> in a subshell. The\nbuilt-in syntax <code>%x{...}</code> uses this method. …\n",null,0],["a","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-a","(href = \"\")","<p>Generate an Anchor element as a string.\n<p><code>href</code> can either be a string, giving the URL for the HREF\nattribute, …\n",null,0],["abbrev","Abbrev","Ruby/classes/Abbrev.html#method-c-abbrev","(words, pattern = nil)","<p>Given a set of strings, calculate the set of unambiguous abbreviations for\nthose strings, and return …\n",null,0],["abbrev","Array","Ruby/classes/Array.html#method-i-abbrev","(pattern = nil)","<p>Calculates the set of unambiguous abbreviations for the strings in\n<code>self</code>.\n\n<pre><code>require &#39;abbrev&#39;\n%w{ car cone ...\n</code></pre>\n",null,0],["abbreviate","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-abbreviate","(spec)","<p>Abbreviate the spec for downloading.  Abbreviated specs are only used for\nsearching, downloading and …\n",null,0],["abbreviate","REXML::Parsers::XPathParser","Ruby/classes/REXML/Parsers/XPathParser.html#method-i-abbreviate","( path )","",null,0],["abort","Kernel","Ruby/classes/Kernel.html#method-i-abort","(p1)","<p>Terminate execution immediately, effectively by calling\n<code>Kernel.exit(false)</code>. If <em>msg</em> is given, it is written …\n",null,0],["abort","Net::FTP","Ruby/classes/Net/FTP.html#method-i-abort","()","<p>Aborts the previous command (ABOR command).\n",null,0],["abort","OptionParser","Ruby/classes/OptionParser.html#method-i-abort","(mesg = $!)","",null,0],["abort","PStore","Ruby/classes/PStore.html#method-i-abort","()","<p>Ends the current PStore#transaction, discarding any changes to the data\nstore.\n<p>Example:\n\n<pre><code>require &quot;pstore&quot; ...\n</code></pre>\n",null,0],["abort","Process","Ruby/classes/Process.html#method-c-abort","(p1)","<p>Terminate execution immediately, effectively by calling\n<code>Kernel.exit(false)</code>. If <em>msg</em> is given, it is written …\n",null,0],["abort_on_exception","Thread","Ruby/classes/Thread.html#method-c-abort_on_exception","()","<p>Returns the status of the global “abort on exception&#39;&#39; condition. \nThe default is <code>false</code>. When …\n",null,0],["abort_on_exception","Thread","Ruby/classes/Thread.html#method-i-abort_on_exception","()","<p>Returns the status of the thread-local “abort on exception&#39;&#39;\ncondition for <em>thr</em>. The default …\n",null,0],["abort_on_exception=","Thread","Ruby/classes/Thread.html#method-c-abort_on_exception-3D","(p1)","<p>When set to <code>true</code>, all threads will abort if an exception is\nraised. Returns the new state.\n\n<pre><code>Thread.abort_on_exception ...</code></pre>\n",null,0],["abort_on_exception=","Thread","Ruby/classes/Thread.html#method-i-abort_on_exception-3D","(p1)","<p>When set to <code>true</code>, causes all threads (including the main\nprogram) to abort if an exception is raised …\n",null,0],["abs","BigDecimal","Ruby/classes/BigDecimal.html#method-i-abs","()","<p>Returns the absolute value.\n<p>BigDecimal(&#39;5&#39;).abs -&gt; 5\n<p>BigDecimal(&#39;-3&#39;).abs -&gt; 3\n",null,0],["abs","Bignum","Ruby/classes/Bignum.html#method-i-abs","()","<p>Returns the absolute value of <em>big</em>.\n\n<pre><code>-1234567890987654321.abs   #=&gt; 1234567890987654321\n</code></pre>\n",null,0],["abs","Complex","Ruby/classes/Complex.html#method-i-abs","()","<p>Returns the absolute part of its polar form.\n\n<pre><code>Complex(-1).abs         #=&gt; 1\nComplex(3.0, -4.0).abs  #=&gt; ...\n</code></pre>\n",null,0],["abs","Fixnum","Ruby/classes/Fixnum.html#method-i-abs","()","<p>Returns the absolute value of <em>fix</em>.\n\n<pre><code>-12345.abs   #=&gt; 12345\n12345.abs    #=&gt; 12345\n</code></pre>\n",null,0],["abs","Float","Ruby/classes/Float.html#method-i-abs","()","<p>Returns the absolute value of <em>flt</em>.\n\n<pre><code>(-34.56).abs   #=&gt; 34.56\n-34.56.abs     #=&gt; 34.56\n</code></pre>\n",null,0],["abs","Numeric","Ruby/classes/Numeric.html#method-i-abs","()","<p>Returns the absolute value of <em>num</em>.\n\n<pre><code>12.abs         #=&gt; 12\n(-34.56).abs   #=&gt; 34.56\n-34.56.abs     #=&gt; 34.56\n</code></pre>\n",null,0],["abs2","Complex","Ruby/classes/Complex.html#method-i-abs2","()","<p>Returns square of the absolute value.\n\n<pre><code>Complex(-1).abs2         #=&gt; 1\nComplex(3.0, -4.0).abs2  #=&gt; 25.0\n</code></pre>\n",null,0],["abs2","Numeric","Ruby/classes/Numeric.html#method-i-abs2","()","<p>Returns square of self.\n",null,0],["absolute","URI::Generic","Ruby/classes/URI/Generic.html#method-i-absolute","()","",null,0],["absolute?","Pathname","Ruby/classes/Pathname.html#method-i-absolute-3F","()","<p>Predicate method for testing whether a path is absolute.\n<p>It returns <code>true</code> if the pathname begins with a …\n",null,0],["absolute?","Resolv::DNS::Name","Ruby/classes/Resolv/DNS/Name.html#method-i-absolute-3F","()","<p>True if this name is absolute.\n",null,0],["absolute?","URI::Generic","Ruby/classes/URI/Generic.html#method-i-absolute-3F","()","<p>Checks if URI is an absolute one\n",null,0],["absolute_path","File","Ruby/classes/File.html#method-c-absolute_path","(p1, p2 = v2)","<p>Converts a pathname to an absolute pathname. Relative paths are referenced\nfrom the current working directory …\n",null,0],["absolute_path","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-absolute_path","()","<p>Returns the absolute path of this instruction sequence.\n<p><code>nil</code> if the iseq was evaluated from a string.\n<p>For …\n",null,0],["absolute_path","Thread::Backtrace::Location","Ruby/classes/Thread/Backtrace/Location.html#method-i-absolute_path","()","<p>Returns the full file path of this frame.\n<p>Same as #path, but includes the absolute path.\n",null,0],["abstract!","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-abstract-21","()","<p>Define a controller as abstract. See internal_methods for more details.\n",null,1],["abstract_class?","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-abstract_class-3F","()","<p>Returns whether this class is an abstract class or not.\n",null,1],["abstract_railtie?","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-abstract_railtie-3F","()","",null,1],["ac_arg_disable","OptionParser::AC","Ruby/classes/OptionParser/AC.html#method-i-ac_arg_disable","(name, help_string, &block)","",null,0],["ac_arg_enable","OptionParser::AC","Ruby/classes/OptionParser/AC.html#method-i-ac_arg_enable","(name, help_string, &block)","",null,0],["ac_arg_with","OptionParser::AC","Ruby/classes/OptionParser/AC.html#method-i-ac_arg_with","(name, help_string, &block)","",null,0],["accept","DRb::DRbSSLSocket::SSLConfig","Ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-accept","(tcp)","<p>Accept connection to IO <code>tcp</code>, with context of the current\ncertificate configuration\n",null,0],["accept","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-accept","()","<p>Waits for a SSL/TLS client to initiate a handshake.  The handshake may be\nstarted after unencrypted data …\n",null,0],["accept","OptionParser","Ruby/classes/OptionParser.html#method-c-accept","(*args, &blk)","<p>See #accept.\n",null,0],["accept","OptionParser","Ruby/classes/OptionParser.html#method-i-accept","(*args, &blk)","<p>Directs to accept specified class <code>t</code>. The argument string is\npassed to the block in which it should be …\n",null,0],["accept","OptionParser::List","Ruby/classes/OptionParser/List.html#method-i-accept","(t, pat = /.*/m, &block)","<p>See OptionParser.accept.\n",null,0],["accept","Psych::Visitors::JSONTree","Ruby/classes/Psych/Visitors/JSONTree.html#method-i-accept","(target)","",null,0],["accept","Psych::Visitors::ToRuby","Ruby/classes/Psych/Visitors/ToRuby.html#method-i-accept","(target)","",null,0],["accept","Psych::Visitors::Visitor","Ruby/classes/Psych/Visitors/Visitor.html#method-i-accept","(target)","",null,0],["accept","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-accept","(target)","",null,0],["accept","RDoc::Markup::BlankLine","Ruby/classes/RDoc/Markup/BlankLine.html#method-i-accept","(visitor)","<p>Calls #accept_blank_line on <code>visitor</code>\n",null,0],["accept","RDoc::Markup::BlockQuote","Ruby/classes/RDoc/Markup/BlockQuote.html#method-i-accept","(visitor)","<p>Calls #accept_block_quote on <code>visitor</code>\n",null,0],["accept","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-i-accept","(visitor)","<p>Runs this document and all its #items through <code>visitor</code>\n",null,0],["accept","RDoc::Markup::HardBreak","Ruby/classes/RDoc/Markup/HardBreak.html#method-i-accept","(visitor)","<p>Calls #accept_hard_break on <code>visitor</code>\n",null,0],["accept","RDoc::Markup::IndentedParagraph","Ruby/classes/RDoc/Markup/IndentedParagraph.html#method-i-accept","(visitor)","<p>Calls #accept_indented_paragraph on <code>visitor</code>\n",null,0],["accept","RDoc::Markup::List","Ruby/classes/RDoc/Markup/List.html#method-i-accept","(visitor)","<p>Runs this list and all its #items through <code>visitor</code>\n",null,0],["accept","RDoc::Markup::ListItem","Ruby/classes/RDoc/Markup/ListItem.html#method-i-accept","(visitor)","<p>Runs this list item and all its #parts through <code>visitor</code>\n",null,0],["accept","RDoc::Markup::Paragraph","Ruby/classes/RDoc/Markup/Paragraph.html#method-i-accept","(visitor)","<p>Calls #accept_paragraph on <code>visitor</code>\n",null,0],["accept","RDoc::Markup::Raw","Ruby/classes/RDoc/Markup/Raw.html#method-i-accept","(visitor)","<p>Calls #accept_raw+ on <code>visitor</code>\n",null,0],["accept","RDoc::Markup::Rule","Ruby/classes/RDoc/Markup/Rule.html#method-i-accept","(visitor)","<p>Calls #accept_rule on <code>visitor</code>\n",null,0],["accept","RDoc::Markup::Verbatim","Ruby/classes/RDoc/Markup/Verbatim.html#method-i-accept","(visitor)","<p>Calls #accept_verbatim on <code>visitor</code>\n",null,0],["accept","Socket","Ruby/classes/Socket.html#method-i-accept","()","<p>Accepts a next connection. Returns a new Socket object and Addrinfo object.\n\n<pre><code>serv = Socket.new(:INET, :STREAM, ...</code></pre>\n",null,0],["accept","TCPServer","Ruby/classes/TCPServer.html#method-i-accept","()","<p>TCPServer.open(“127.0.0.1”, 14641) {|serv|\n\n<pre><code>s = serv.accept\ns.puts Time.now\ns.close</code></pre>\n<p>}\n",null,0],["accept","UNIXServer","Ruby/classes/UNIXServer.html#method-i-accept","()","<p>Accepts a new connection. It returns new UNIXSocket object.\n\n<pre><code>UNIXServer.open(&quot;/tmp/sock&quot;) {|serv|\n  UNIXSocket.open(&quot;/tmp/sock&quot;) ...\n</code></pre>\n",null,0],["accept","ActiveRecord::ConnectionAdapters::AbstractAdapter::SchemaCreation","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter/SchemaCreation.html#method-i-accept","(o)","",null,1],["accept_blank_line","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_blank_line","(blank_line)","<p>Adds <code>blank_line</code> to the output\n",null,0],["accept_blank_line","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_blank_line","(blank_line)","<p>Adds <code>blank_line</code> to the output\n",null,0],["accept_blank_line","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_blank_line","(markup_item)","",null,0],["accept_block_quote","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_block_quote","(block_quote)","<p>Adds <code>block_quote</code> to the output\n",null,0],["accept_block_quote","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_block_quote","(block_quote)","<p>Adds <code>paragraph</code> to the output\n",null,0],["accept_block_quote","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_block_quote","(block_quote)","<p>Adds tts from <code>block_quote</code> to the output\n",null,0],["accept_charset","CGI","Ruby/classes/CGI.html#method-c-accept_charset","()","<p>Return the accept character set for all new CGI instances.\n",null,0],["accept_charset=","CGI","Ruby/classes/CGI.html#method-c-accept_charset-3D","(accept_charset)","<p>Set the accept character set for all new CGI instances.\n",null,0],["accept_document","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-accept_document","(document)","<p>Adds <code>document</code> to the output\n",null,0],["accept_document","RDoc::Markup::ToTableOfContents","Ruby/classes/RDoc/Markup/ToTableOfContents.html#method-i-accept_document","(document)","<p>Adds <code>document</code> to the output, using its heading cutoff if\npresent\n",null,0],["accept_heading","RDoc::Markup::ToBs","Ruby/classes/RDoc/Markup/ToBs.html#method-i-accept_heading","(heading)","<p>Makes heading text bold.\n",null,0],["accept_heading","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_heading","(heading)","<p>Adds <code>heading</code> to the output.  The headings greater than 6 are\ntrimmed to level 6.\n",null,0],["accept_heading","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-accept_heading","(heading)","<p>Adds <code>heading</code> to the output as a paragraph\n",null,0],["accept_heading","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_heading","(heading)","<p>Adds <code>heading</code> to the output\n",null,0],["accept_heading","RDoc::Markup::ToTableOfContents","Ruby/classes/RDoc/Markup/ToTableOfContents.html#method-i-accept_heading","(heading)","<p>Adds <code>heading</code> to the table of contents\n",null,0],["accept_heading","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_heading","(markup_item)","",null,0],["accept_indented_paragraph","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_indented_paragraph","(paragraph)","<p>Adds <code>paragraph</code> to the output\n",null,0],["accept_list_end","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_list_end","(list)","<p>Finishes consumption of <code>list</code>\n",null,0],["accept_list_end","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-accept_list_end","(list)","<p>Finishes consumption of <code>list</code>\n",null,0],["accept_list_end","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_list_end","(list)","<p>Finishes consumption of <code>list</code>\n",null,0],["accept_list_end","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_list_end","(list)","<p>Pops the list type for <code>list</code> from #list_type\n",null,0],["accept_list_item_end","RDoc::Markup::ToAnsi","Ruby/classes/RDoc/Markup/ToAnsi.html#method-i-accept_list_item_end","(list_item)","<p>Overrides indent width to ensure output lines up correctly.\n",null,0],["accept_list_item_end","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_list_item_end","(list_item)","<p>Finishes consumption of <code>list_item</code>\n",null,0],["accept_list_item_end","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-accept_list_item_end","(list_item)","<p>Finishes consumption of <code>list_item</code>\n",null,0],["accept_list_item_end","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-accept_list_item_end","(list_item)","<p>Finishes consumption of <code>list_item</code>\n",null,0],["accept_list_item_end","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_list_item_end","(list_item)","<p>Finishes consumption of <code>list_item</code>\n",null,0],["accept_list_item_end","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_list_item_end","(markup_item)","",null,0],["accept_list_item_start","RDoc::Markup::ToAnsi","Ruby/classes/RDoc/Markup/ToAnsi.html#method-i-accept_list_item_start","(list_item)","<p>Adds coloring to note and label list items\n",null,0],["accept_list_item_start","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_list_item_start","(list_item)","<p>Prepares the visitor for consuming <code>list_item</code>\n",null,0],["accept_list_item_start","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-accept_list_item_start","(list_item)","<p>Prepares the visitor for consuming <code>list_item</code>\n",null,0],["accept_list_item_start","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-accept_list_item_start","(list_item)","<p>Prepares the visitor for consuming <code>list_item</code>\n",null,0],["accept_list_item_start","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_list_item_start","(list_item)","<p>Prepares the visitor for consuming <code>list_item</code>\n",null,0],["accept_list_item_start","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_list_item_start","(list_item)","<p>Prepares the visitor for consuming <code>list_item</code>\n",null,0],["accept_list_start","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_list_start","(list)","<p>Prepares the visitor for consuming <code>list</code>\n",null,0],["accept_list_start","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-accept_list_start","(list)","<p>Prepares the visitor for consuming <code>list</code>\n",null,0],["accept_list_start","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-accept_list_start","(list)","<p>Prepares the visitor for consuming <code>list</code>\n",null,0],["accept_list_start","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_list_start","(list)","<p>Prepares the visitor for consuming <code>list</code>\n",null,0],["accept_list_start","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_list_start","(list)","<p>Pushes the list type for <code>list</code> onto #list_type\n",null,0],["accept_loop","Socket","Ruby/classes/Socket.html#method-c-accept_loop","(*sockets)","<p>yield socket and client address for each a connection accepted via given\nsockets.\n<p>The arguments are a …\n",null,0],["accept_nonblock","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-accept_nonblock","()","<p>Initiates the SSL/TLS handshake as a server in non-blocking manner.\n\n<pre><code># emulates blocking accept\nbegin\n ...</code></pre>\n",null,0],["accept_nonblock","Socket","Ruby/classes/Socket.html#method-i-accept_nonblock","()","<p>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for\nthe underlying file descriptor. …\n",null,0],["accept_nonblock","TCPServer","Ruby/classes/TCPServer.html#method-i-accept_nonblock","()","<p>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for\nthe underlying file descriptor. …\n",null,0],["accept_nonblock","UNIXServer","Ruby/classes/UNIXServer.html#method-i-accept_nonblock","()","<p>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for\nthe underlying file descriptor. …\n",null,0],["accept_paragraph","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_paragraph","(paragraph)","<p>Adds <code>paragraph</code> to the output\n",null,0],["accept_paragraph","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-accept_paragraph","(paragraph)","",null,0],["accept_paragraph","RDoc::Markup::ToJoinedParagraph","Ruby/classes/RDoc/Markup/ToJoinedParagraph.html#method-i-accept_paragraph","(paragraph)","<p>Converts the parts of <code>paragraph</code> to a single entry.\n",null,0],["accept_paragraph","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_paragraph","(paragraph)","<p>Adds <code>paragraph</code> to the output\n",null,0],["accept_paragraph","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_paragraph","(paragraph)","<p>Adds <code>paragraph</code> to the output\n",null,0],["accept_raw","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_raw","(raw)","<p>Adds <code>raw</code> to the output\n",null,0],["accept_raw","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_raw","(raw)","<p>Adds <code>raw</code> to the output\n",null,0],["accept_raw","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_raw","(markup_item)","",null,0],["accept_rule","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_rule","(rule)","<p>Adds <code>rule</code> to the output\n",null,0],["accept_rule","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-accept_rule","(rule)","<p>Adds <code>rule</code> to the output\n",null,0],["accept_rule","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_rule","(rule)","<p>Adds <code>rule</code> to the output\n",null,0],["accept_rule","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_rule","(markup_item)","",null,0],["accept_uri_http","Gem::LocalRemoteOptions","Ruby/classes/Gem/LocalRemoteOptions.html#method-i-accept_uri_http","()","<p>Allows OptionParser to handle HTTP URIs.\n",null,0],["accept_verbatim","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-accept_verbatim","(verbatim)","<p>Adds <code>verbatim</code> to the output\n",null,0],["accept_verbatim","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-accept_verbatim","(verbatim)","<p>Adds <code>verbatim</code> to the output\n",null,0],["accept_verbatim","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-accept_verbatim","(verbatim)","<p>Outputs <code>verbatim</code> indented 4 columns\n",null,0],["accept_verbatim","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-accept_verbatim","(verbatim)","<p>Outputs <code>verbatim</code> indented 2 columns\n",null,0],["accept_verbatim","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-accept_verbatim","(markup_item)","",null,0],["accepts","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-accepts","()","<p>Returns the accepted MIME type for the request.\n",null,1],["accepts_nested_attributes_for","ActiveRecord::NestedAttributes::ClassMethods","Rails/classes/ActiveRecord/NestedAttributes/ClassMethods.html#method-i-accepts_nested_attributes_for","(*attr_names)","<p>Defines an attributes writer for the specified association(s).\n<p>Supported options:\n<p>:allow_destroy &mdash; If true, …\n",null,1],["access_log","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-access_log","(config, req, res)","<p>Logs <code>req</code> and <code>res</code> in the access logs. \n<code>config</code> is used for the server name.\n",null,0],["acct","Net::FTP","Ruby/classes/Net/FTP.html#method-i-acct","(account)","<p>Sends the ACCT command.\n<p>This is a less common FTP command, to send account information if the\ndestination …\n",null,0],["acos","CMath","Ruby/classes/CMath.html#method-c-acos","(z)","<p>returns the arc cosine of <code>z</code>\n",null,0],["acos","Math","Ruby/classes/Math.html#method-c-acos","(p1)","<p>Computes the arc cosine of <em>x</em>. Returns 0..PI.\n",null,0],["acos!","CMath","Ruby/classes/CMath.html#method-c-acos-21","(z)","",null,0],["acosh","CMath","Ruby/classes/CMath.html#method-c-acosh","(z)","<p>returns the inverse hyperbolic cosine of <code>z</code>\n",null,0],["acosh","Math","Ruby/classes/Math.html#method-c-acosh","(p1)","<p>Computes the inverse hyperbolic cosine of <em>x</em>.\n",null,0],["acosh!","CMath","Ruby/classes/CMath.html#method-c-acosh-21","(z)","",null,0],["acronym","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-acronym","(word)","<p>Specifies a new acronym. An acronym must be specified as it will appear in\na camelized string. An underscore …\n",null,1],["action","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-action","(name, klass = ActionDispatch::Request)","<p>Returns a Rack endpoint for the given action name.\n",null,1],["action","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-action","()","",null,1],["action_has_layout?","AbstractController::Layouts","Rails/classes/AbstractController/Layouts.html#method-i-action_has_layout-3F","()","<p>Controls whether an action should be rendered using a layout. If you want\nto disable any <code>layout</code> settings …\n",null,1],["action_methods","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-action_methods","()","<p>A list of method names that should be considered actions. This includes all\npublic instance methods on …\n",null,1],["action_methods","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-i-action_methods","()","<p>Delegates to the class&#39; #action_methods\n",null,1],["action_methods","AbstractController::UrlFor::ClassMethods","Rails/classes/AbstractController/UrlFor/ClassMethods.html#method-i-action_methods","()","",null,1],["action_methods","ActionController::HideActions::ClassMethods","Rails/classes/ActionController/HideActions/ClassMethods.html#method-i-action_methods","()","<p>Overrides AbstractController::Base#action_methods to remove any methods\nthat are listed as hidden methods. …\n",null,1],["activate","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-activate","()","<p>Activate this spec, registering it as a loaded spec and adding it&#39;s lib\npaths to $LOAD_PATH. Returns …\n",null,0],["activate","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-activate","(pc)","",null,0],["activate_dependencies","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-activate_dependencies","()","<p>Activate all unambiguously resolved runtime dependencies of this spec. Add\nany ambigous dependencies …\n",null,0],["active?","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-active-3F","()","",null,0],["active?","Net::POP3","Ruby/classes/Net/POP3.html#method-i-active-3F","()","",null,0],["active?","Shell::BuiltInCommand","Ruby/classes/Shell/BuiltInCommand.html#method-i-active-3F","()","",null,0],["active?","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-active-3F","()","",null,0],["active?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-active-3F","()","<p>Checks whether the connection to the database is still active. This\nincludes checking whether the database …\n",null,1],["active?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-active-3F","()","<p>CONNECTION MANAGEMENT ====================================\n",null,1],["active?","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-active-3F","()","<p>CONNECTION MANAGEMENT ====================================\n",null,1],["active?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-active-3F","()","<p>Is this connection alive and ready for queries?\n",null,1],["active?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-active-3F","()","",null,1],["active_connection?","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-active_connection-3F","()","<p>Is there an open connection that is being used for the current thread?\n",null,1],["active_connections?","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-active_connections-3F","()","<p>Returns true if there are any active connections among the connection pools\nthat the ConnectionHandler …\n",null,1],["active_job?","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-active_job-3F","(job)","",null,0],["active_jobs","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-active_jobs","()","",null,0],["active_jobs_exist?","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-active_jobs_exist-3F","()","",null,0],["active_process_controllers","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-active_process_controllers","()","",null,0],["activerecord?","Build","Rails/classes/Build.html#method-i-activerecord-3F","()","",null,1],["acts_like?","Object","Rails/classes/Object.html#method-i-acts_like-3F","(duck)","<p>A duck-type assistant method. For example, Active Support extends Date to\ndefine an <code>acts_like_date?</code> method, …\n",null,1],["acts_like_date?","Date","Rails/classes/Date.html#method-i-acts_like_date-3F","()","<p>Duck-types as a Date-like class. See Object#acts_like?.\n",null,1],["acts_like_date?","DateTime","Rails/classes/DateTime.html#method-i-acts_like_date-3F","()","<p>Duck-types as a Date-like class. See Object#acts_like?.\n",null,1],["acts_like_string?","String","Rails/classes/String.html#method-i-acts_like_string-3F","()","<p>Enable more predictable duck-typing on String-like classes. See\n<code>Object#acts_like?</code>.\n",null,1],["acts_like_time?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-acts_like_time-3F","()","<p>So that <code>self</code> <code>acts_like?(:time)</code>.\n",null,1],["acts_like_time?","DateTime","Rails/classes/DateTime.html#method-i-acts_like_time-3F","()","<p>Duck-types as a Time-like class. See Object#acts_like?.\n",null,1],["acts_like_time?","Time","Rails/classes/Time.html#method-i-acts_like_time-3F","()","<p>Duck-types as a Time-like class. See Object#acts_like?.\n",null,1],["adapter","Build","Rails/classes/Build.html#method-i-adapter","()","",null,1],["adapter_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-adapter_name","()","<p>Returns the human-readable name of the adapter. Use mixed case - one can\nalways use downcase if needed. …\n",null,1],["adapter_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-adapter_name","()","<p>Returns &#39;PostgreSQL&#39; as adapter name for identification purposes.\n",null,1],["add","ACL::ACLList","Ruby/classes/ACL/ACLList.html#method-i-add","(str)","<p>Adds <code>str</code> as an ACLEntry in this list\n",null,0],["add","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-i-add","()","<p>Returns a new Tms object whose times are the sum of the times for this Tms\nobject, plus the time required …\n",null,0],["add","BigDecimal","Ruby/classes/BigDecimal.html#method-i-add","(p1, p2)","\n<pre><code>+</code></pre>\n<p>Add the specified value.\n<p>e.g.\n",null,0],["add","CompositePublisher","Ruby/classes/CompositePublisher.html#method-i-add","(pub)","<p>Add a publisher to the composite.\n",null,0],["add","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-add","(spec, source)","",null,0],["add","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-add","(*gemspecs)","<p>Adds <code>gemspecs</code> to the dependency list.\n",null,0],["add","Logger","Ruby/classes/Logger.html#method-i-add","(severity, message = nil, progname = nil, &block)","<p>Args\n<p><code>severity</code> &mdash; Severity.  Constants are defined in Logger namespace: <code>DEBUG</code>,\n<code>INFO</code>, <code>WARN</code>, <code>ERROR</code>,\n<code>FATAL</code>, or …\n",null,0],["add","PrettyPrint::Text","Ruby/classes/PrettyPrint/Text.html#method-i-add","(obj, width)","",null,0],["add","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-add","(k, v)","",null,0],["add","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-add","(child)","",null,0],["add","REXML::Document","Ruby/classes/REXML/Document.html#method-i-add","( child )","<p>We override this, because XMLDecls and DocTypes must go at the start of the\ndocument\n",null,0],["add","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-add","( object )","",null,0],["add","Rake::CompositePublisher","Ruby/classes/Rake/CompositePublisher.html#method-i-add","(pub)","<p>Add a publisher to the composite.\n",null,0],["add","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-add","(*filenames)","",null,0],["add","Rinda::TupleBag::TupleBin","Ruby/classes/Rinda/TupleBag/TupleBin.html#method-i-add","(tuple)","",null,0],["add","Set","Ruby/classes/Set.html#method-i-add","(o)","<p>Adds the given object to the set and returns self.  Use <code>merge</code>\nto add many elements at once.\n",null,0],["add","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-i-add","(severity, message = nil, progname = nil, &block)","<p>Almost duplicates Logger#add.  <code>progname</code> is ignored.\n",null,0],["add","ThreadGroup","Ruby/classes/ThreadGroup.html#method-i-add","(p1)","<p>Adds the given <em>thread</em> to this group, removing it from any other\ngroup to which it may have previously …\n",null,0],["add","WEBrick::HTTPAuth::Htgroup","Ruby/classes/WEBrick/HTTPAuth/Htgroup.html#method-i-add","(group, members)","<p>Add an Array of <code>members</code> to <code>group</code>\n",null,0],["add","ActionController::Renderers","Rails/classes/ActionController/Renderers.html#method-c-add","(key, &block)","<p>Adds a new renderer to call within controller actions. A renderer is\ninvoked by passing its name as an …\n",null,1],["add","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-add","(attribute, message = nil, options = {})","<p>Adds <code>message</code> to the error messages on <code>attribute</code>.\nMore than one error can be added to the same <code>attribute</code> …\n",null,1],["add","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-add","(element)","<p>Add <code>element</code> to the queue.  Never blocks.\n",null,1],["add","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-add","(table_name)","<p>Add internal cache for table with <code>table_name</code>.\n",null,1],["add","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-add","(path, options = {})","",null,1],["add!","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-i-add-21","(&blk)","<p>An in-place version of #add.\n",null,0],["add?","Set","Ruby/classes/Set.html#method-i-add-3F","(o)","<p>Adds the given object to the set and returns self.  If the object is\nalready in the set, returns nil. …\n",null,0],["add_alias","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-i-add_alias","(an_alias, context = nil)","<p>Adds <code>an_alias</code> as an alias for this method in\n<code>context</code>.\n",null,0],["add_alias","RDoc::Attr","Ruby/classes/RDoc/Attr.html#method-i-add_alias","(an_alias, context)","<p>Add <code>an_alias</code> as an attribute in <code>context</code>.\n",null,0],["add_alias","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_alias","(an_alias)","<p>Adds <code>an_alias</code> that is automatically resolved\n",null,0],["add_alias","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-add_alias","(an_alias, context)","<p>Abstract method. Contexts in their building phase call this to register a\nnew alias for this known method/attribute. …\n",null,0],["add_alias","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-add_alias","(as)","<p>Records the parsing of an alias <code>as</code>.\n",null,0],["add_alias","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-add_alias","(an_alias)","<p>Adds <code>an_alias</code> to <code>Object</code> instead of\n<code>self</code>.\n",null,0],["add_also_in","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-add_also_in","(out, also_in)","<p>Adds paths for undocumented classes <code>also_in</code> to\n<code>out</code>\n",null,0],["add_attribute","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-add_attribute","(p1)","",null,0],["add_attribute","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_attribute","(attribute)","<p>Adds <code>attribute</code> if not already there. If it is (as method(s) or\nattribute), updates the comment if it …\n",null,0],["add_attribute","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-add_attribute","(attribute)","<p>Records the parsing of an attribute <code>attribute</code>\n",null,0],["add_attribute","REXML::Element","Ruby/classes/REXML/Element.html#method-i-add_attribute","( key, value=nil )","<p>Adds an attribute to this element, overwriting any existing attribute by\nthe same name.\n<p>key &mdash; can be either …\n",null,0],["add_attributes","REXML::Element","Ruby/classes/REXML/Element.html#method-i-add_attributes","(hash)","<p>Add multiple attributes to this element.\n<p>hash &mdash; is either a hash, or array of arrays\n\n\n<pre><code>el.add_attributes( {&quot;name1&quot;=&gt;&quot;value1&quot;, ...\n</code></pre>\n",null,0],["add_authenticator","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-add_authenticator","(auth_type, authenticator)","<p>Adds an authenticator for Net::IMAP#authenticate.  <code>auth_type</code>\nis the type of authentication this authenticator …\n",null,0],["add_belongs_to","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_belongs_to","(table_name, ref_name, options = {})","",null,1],["add_bindir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-add_bindir","(executables)","<p>Returns an array with bindir attached to each executable in the\n<code>executables</code> list\n",null,0],["add_bulk_threshold_option","Gem::LocalRemoteOptions","Ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_bulk_threshold_option","()","<p>Add the –bulk-threshold option\n",null,0],["add_c_enclosure","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-add_c_enclosure","(variable, namespace)","<p>Adds <code>module</code> as an enclosure (namespace) for the given\n<code>variable</code> for C files.\n",null,0],["add_c_variables","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-add_c_variables","(c_parser)","<p>Adds C variables from an RDoc::Parser::C\n",null,0],["add_cert","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-add_cert","(p1)","<p>Adds the OpenSSL::X509::Certificate <code>cert</code> to the certificate\nstore.\n",null,0],["add_certid","OpenSSL::OCSP::Request","Ruby/classes/OpenSSL/OCSP/Request.html#method-i-add_certid","(p1)","",null,0],["add_certificate","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-add_certificate","(p1)","",null,0],["add_checksums","Gem::Package","Ruby/classes/Gem/Package.html#method-i-add_checksums","(tar)","<p>Adds a checksum for each entry in the gem to checksums.yaml.gz.\n",null,0],["add_class","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_class","(class_type, given_name, superclass = '::Object')","<p>Adds a class named <code>given_name</code> with <code>superclass</code>.\n<p>Both <code>given_name</code> and <code>superclass</code> may contain\n&#39;::&#39;, …\n",null,0],["add_class","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-add_class","(out, name, classes)","<p>Adds a class header to <code>out</code> for class <code>name</code> which\nis described in <code>classes</code>.\n",null,0],["add_class","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-add_class","(klass)","<p>Records the parsing of a class <code>klass</code>\n",null,0],["add_class_or_module","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_class_or_module","(mod, self_hash, all_hash)","<p>Adds the class or module <code>mod</code> to the modules or classes Hash\n<code>self_hash</code>, and to <code>all_hash</code> (either\n<code>TopLevel::modules_hash</code> …\n",null,0],["add_clear_sources_option","Gem::LocalRemoteOptions","Ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_clear_sources_option","()","<p>Add the –clear-sources option\n",null,0],["add_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-add_column","(table_name, column_name, type, options = {})","<p>Adds a new column to the named table. See TableDefinition#column for\ndetails of the options you can use. …\n",null,1],["add_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column","(table_name, column_name, type, options = {})","<p>Adds a new column to the named table. See TableDefinition#column for\ndetails of the options you can use. …\n",null,1],["add_column_position!","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_column_position-21","(sql, options)","",null,1],["add_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_column_sql","(table_name, column_name, type, options = {})","",null,1],["add_comment","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-add_comment","(comment, location)","<p>Adds <code>comment</code> to this ClassModule&#39;s list of comments at\n<code>location</code>.  This method is preferred over  …\n",null,0],["add_comment","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-add_comment","(comment)","<p>Adds <code>comment</code> to this section\n",null,0],["add_common_option","Gem::Command","Ruby/classes/Gem/Command.html#method-c-add_common_option","(*args, &handler)","",null,0],["add_constant","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_constant","(constant)","<p>Adds <code>constant</code> if not already there. If it is, updates the\ncomment, value and/or is_alias_for of the known …\n",null,0],["add_constant","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-add_constant","(constant)","<p>Records the parsing of <code>constant</code>\n",null,0],["add_constant","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-add_constant","(constant)","<p>Adds <code>constant</code> to <code>Object</code> instead of\n<code>self</code>.\n",null,0],["add_crl","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-add_crl","(p1)","",null,0],["add_crl","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-add_crl","(p1)","",null,0],["add_data","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-add_data","(p1)","",null,0],["add_date","Gem::Server","Ruby/classes/Gem/Server.html#method-i-add_date","(res)","",null,0],["add_delivery_method","ActionMailer::DeliveryMethods::ClassMethods","Rails/classes/ActionMailer/DeliveryMethods/ClassMethods.html#method-i-add_delivery_method","(symbol, klass, default_options={})","<p>Adds a new delivery method through the given class using the given symbol\nas alias and the default options …\n",null,1],["add_dependency","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-add_dependency","(gem, *requirements)","",null,0],["add_description","Rake::Task","Ruby/classes/Rake/Task.html#method-i-add_description","(description)","<p>Add a description to the task.  The description can consist of an option\nargument list (enclosed brackets) …\n",null,0],["add_development_dependency","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-add_development_dependency","(gem, *requirements)","<p>Adds a development dependency named <code>gem</code> with\n<code>requirements</code> to this gem.\n<p>Usage:\n\n<pre><code>spec.add_development_dependency ...</code></pre>\n",null,0],["add_dictionary","Zlib::Inflate","Ruby/classes/Zlib/Inflate.html#method-i-add_dictionary","(p1)","<p>Provide the inflate stream with a dictionary that may be required in the\nfuture.  Multiple dictionaries …\n",null,0],["add_element","REXML::Document","Ruby/classes/REXML/Document.html#method-i-add_element","(arg=nil, arg2=nil)","",null,0],["add_element","REXML::Element","Ruby/classes/REXML/Element.html#method-i-add_element","(element, attrs=nil)","<p>Adds a child to this element, optionally setting attributes in the element.\n<p>element &mdash; optional.  If Element …\n",null,0],["add_entry","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-add_entry","(p1, p2, p3 = v3)","<p>Adds a new entry with the given <code>oid</code> and <code>value</code> to\nthis name.  The <code>oid</code> is an object identifier defined …\n",null,0],["add_event_to_arry","REXML::Validation::Choice","Ruby/classes/REXML/Validation/Choice.html#method-i-add_event_to_arry","( arry, evt )","",null,0],["add_event_to_arry","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-i-add_event_to_arry","( arry, evt )","",null,0],["add_expr","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_expr","(src, code, indicator)","<p>Erubis toggles &lt;%= and &lt;%== behavior when escaping is enabled. We\noverride to always treat &lt;%== …\n",null,1],["add_expr_escaped","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_expr_escaped","(src, code)","",null,1],["add_expr_literal","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_expr_literal","(src, code)","",null,1],["add_extend","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_extend","(ext)","<p>Adds extension module <code>ext</code> which should be an RDoc::Extend\n",null,0],["add_extends","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-add_extends","(out, extends)","<p>Adds <code>extends</code> to <code>out</code>\n",null,0],["add_extension","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-add_extension","(p1)","",null,0],["add_extension","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-add_extension","(p1)","",null,0],["add_extension","OpenSSL::X509::Revoked","Ruby/classes/OpenSSL/X509/Revoked.html#method-i-add_extension","(p1)","",null,0],["add_extension_modules","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-add_extension_modules","(out, type, extensions)","<p>Adds a list of <code>extensions</code> to this module of the given\n<code>type</code> to <code>out</code>. add_includes and add_extends call …\n",null,0],["add_extra_args","Gem::Command","Ruby/classes/Gem/Command.html#method-i-add_extra_args","(args)","<p>Adds extra args from ~/.gemrc\n",null,0],["add_field","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-add_field","(key, val)","<p>Ruby 1.8.3 &mdash; Adds a value to a named header field, instead of replacing its value.\nSecond argument <code>val</code> …\n",null,0],["add_file","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-i-add_file","(name, mode)","<p>Adds file <code>name</code> with permissions <code>mode</code>, and yields\nan IO for writing the file to\n",null,0],["add_file","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-add_file","(p1)","<p>Adds the certificates in <code>file</code> to the certificate store.  The\n<code>file</code> can contain multiple PEM-encoded certificates. …\n",null,0],["add_file","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-add_file","(file)","<p>Records the parsing of <code>file</code>\n",null,0],["add_file","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-add_file","(absolute_name, relative_name = absolute_name)","<p>Adds the file with <code>name</code> as an RDoc::TopLevel to the store. \nReturns the created RDoc::TopLevel.\n",null,0],["add_file_digest","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-i-add_file_digest","(name, mode, digest_algorithms)","<p>Adds <code>name</code> with permissions <code>mode</code> to the tar,\nyielding <code>io</code> for writing the file.  The\n<code>digest_algorithm</code> is …\n",null,0],["add_file_signed","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-i-add_file_signed","(name, mode, signer)","<p>Adds <code>name</code> with permissions <code>mode</code> to the tar,\nyielding <code>io</code> for writing the file.  The <code>signer</code> is\nused to …\n",null,0],["add_file_simple","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-i-add_file_simple","(name, mode, size)","<p>Add file <code>name</code> with permissions <code>mode</code>\n<code>size</code> bytes long.  Yields an IO to write the file to.\n",null,0],["add_filter","Tracer","Ruby/classes/Tracer.html#method-c-add_filter","(p = proc)","<p>Used to filter unwanted trace output\n<p>Example which only outputs lines of code executed within the Kernel …\n",null,0],["add_filter","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-add_filter","(&block)","<p>Adds a filter from the block provided. Each line in the backtrace will be\nmapped against this filter. …\n",null,1],["add_flash_types","ActionController::Flash::ClassMethods","Rails/classes/ActionController/Flash/ClassMethods.html#method-i-add_flash_types","(*types)","",null,1],["add_footnote","RDoc::RD::BlockParser","Ruby/classes/RDoc/RD/BlockParser.html#method-i-add_footnote","(content)","<p>Adds footnote <code>content</code> to the document\n",null,0],["add_found_dependencies","Gem::DependencyInstaller","Ruby/classes/Gem/DependencyInstaller.html#method-i-add_found_dependencies","(to_do, dependency_list)","",null,0],["add_from","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-add_from","(out, store)","<p>Adds “(from …)” to <code>out</code> for <code>store</code>\n",null,0],["add_generator","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-c-add_generator","(klass)","<p>Add <code>klass</code> that can generate output after parsing\n",null,0],["add_handler","WEBrick::HTTPServlet::FileHandler","Ruby/classes/WEBrick/HTTPServlet/FileHandler.html#method-c-add_handler","(suffix, handler)","<p>Allow custom handling of requests for files with <code>suffix</code> by\nclass <code>handler</code>\n",null,0],["add_handler","XMLRPC::BasicServer","Ruby/classes/XMLRPC/BasicServer.html#method-i-add_handler","(prefix, obj_or_signature=nil, help=nil, &block)","<p>Adds <code>aBlock</code> to the list of handlers, with <code>name</code> as\nthe name of the method.\n<p>Parameters <code>signature</code> and <code>help</code> …\n",null,0],["add_have_children_element","RSS::Element","Ruby/classes/RSS/Element.html#method-i-add_have_children_element","(variable_name, plural_name)","",null,0],["add_html","RDoc::Markup","Ruby/classes/RDoc/Markup.html#method-i-add_html","(tag, name)","<p>Add to the sequences recognized as general markup.\n",null,0],["add_html","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-add_html","(tag, name)","<p>Adds a markup class with <code>name</code> for words surrounded by HTML tag\n<code>tag</code>. To process emphasis tags:\n\n<pre><code>am.add_html ...</code></pre>\n",null,0],["add_import","Rake::Application","Ruby/classes/Rake/Application.html#method-i-add_import","(fn)","<p>Add a file to the list of files to be imported.\n",null,0],["add_import","Rake::Application","Ruby/classes/Rake/Application.html#method-i-add_import","(fn)","<p>Add a file to the list of files to be imported.\n",null,0],["add_include","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_include","(include)","<p>Adds included module <code>include</code> which should be an RDoc::Include\n",null,0],["add_include","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-add_include","(include)","<p>Adds <code>include</code> to <code>Object</code> instead of\n<code>self</code>.\n",null,0],["add_includes","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-add_includes","(out, includes)","<p>Adds <code>includes</code> to <code>out</code>\n",null,0],["add_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index","(table_name, column_name, options = {})","<p>Adds a new index to the table. <code>column_name</code> can be a single\nSymbol, or an Array of Symbols.\n<p>The index will …\n",null,1],["add_index_length","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_index_length","(option_strings, column_names, options = {})","",null,1],["add_index_options","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index_options","(table_name, column_name, options = {})","",null,1],["add_index_sort_order","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index_sort_order","(option_strings, column_names, options = {})","",null,1],["add_index_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_index_sql","(table_name, column_name, options = {})","",null,1],["add_install_update_options","Gem::InstallUpdateOptions","Ruby/classes/Gem/InstallUpdateOptions.html#method-i-add_install_update_options","()","<p>Add the install/update options to the option parser.\n",null,0],["add_introspection","XMLRPC::BasicServer","Ruby/classes/XMLRPC/BasicServer.html#method-i-add_introspection","()","<p>Adds the introspection handlers\n<code>&quot;system.listMethods&quot;</code>,\n<code>&quot;system.methodSignature&quot;</code> and …\n",null,0],["add_key_option","Gem::GemcutterUtilities","Ruby/classes/Gem/GemcutterUtilities.html#method-i-add_key_option","()","<p>Add the –key option\n",null,0],["add_label","RDoc::RD::BlockParser","Ruby/classes/RDoc/RD/BlockParser.html#method-i-add_label","(label)","<p>Adds label <code>label</code> to the document\n",null,0],["add_line_numbers","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-add_line_numbers","(src)","<p>Prepend <code>src</code> with line numbers.  Relies on the first line of a\nsource code listing having:\n\n<pre><code># File xxxxx, ...</code></pre>\n",null,0],["add_listener","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-add_listener","( listener )","",null,0],["add_listener","REXML::Parsers::LightParser","Ruby/classes/REXML/Parsers/LightParser.html#method-i-add_listener","( listener )","",null,0],["add_listener","REXML::Parsers::PullParser","Ruby/classes/REXML/Parsers/PullParser.html#method-i-add_listener","( listener )","",null,0],["add_listener","REXML::Parsers::SAX2Parser","Ruby/classes/REXML/Parsers/SAX2Parser.html#method-i-add_listener","( listener )","",null,0],["add_listener","REXML::Parsers::StreamParser","Ruby/classes/REXML/Parsers/StreamParser.html#method-i-add_listener","( listener )","",null,0],["add_listener","REXML::Parsers::TreeParser","Ruby/classes/REXML/Parsers/TreeParser.html#method-i-add_listener","( listener )","",null,0],["add_listener","REXML::Parsers::UltraLightParser","Ruby/classes/REXML/Parsers/UltraLightParser.html#method-i-add_listener","( listener )","",null,0],["add_loader","Rake::Application","Ruby/classes/Rake/Application.html#method-i-add_loader","(ext, loader)","<p>Add a loader to handle imported files ending in the extension\n<code>ext</code>.\n",null,0],["add_loader","Rake::Application","Ruby/classes/Rake/Application.html#method-i-add_loader","(ext, loader)","<p>Add a loader to handle imported files ending in the extension\n<code>ext</code>.\n",null,0],["add_local_remote_options","Gem::LocalRemoteOptions","Ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_local_remote_options","()","<p>Add local/remote options to the command line parser.\n",null,0],["add_maker","RSS::Maker","Ruby/classes/RSS/Maker.html#method-i-add_maker","(version, normalized_version, maker)","<p>Adds a maker to the set of supported makers\n",null,0],["add_method","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_method","(method)","<p>Adds <code>method</code> if not already there. If it is (as method or\nattribute), updates the comment if it was empty. …\n",null,0],["add_method","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-add_method","(out, name)","<p>Looks up the method <code>name</code> and adds it to <code>out</code>\n",null,0],["add_method","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-add_method","(method)","<p>Records the parsing of <code>method</code>\n",null,0],["add_method","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-add_method","(method)","<p>Adds <code>method</code> to <code>Object</code> instead of\n<code>self</code>.\n",null,0],["add_method","XMLRPC::Service::BasicInterface","Ruby/classes/XMLRPC/Service/BasicInterface.html#method-i-add_method","(sig, help=nil, meth_name=nil)","",null,0],["add_method_documentation","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-add_method_documentation","(out, klass)","<p>Adds documentation for all methods in <code>klass</code> to\n<code>out</code>\n",null,0],["add_method_list","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-add_method_list","(out, methods, name)","<p>Adds a list of <code>methods</code> to <code>out</code> with a heading of\n<code>name</code>\n",null,0],["add_module","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_module","(class_type, name)","<p>Adds a module named <code>name</code>.  If RDoc already knows\n<code>name</code> is a class then that class is returned instead. …\n",null,0],["add_module","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-add_module","(mod)","<p>Records the parsing of a module <code>mod</code>\n",null,0],["add_module_alias","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_module_alias","(from, name, file)","<p>Adds an alias from <code>from</code> (a class or module) to\n<code>name</code> which was defined in <code>file</code>.\n",null,0],["add_multicall","XMLRPC::BasicServer","Ruby/classes/XMLRPC/BasicServer.html#method-i-add_multicall","()","<p>Adds the multi-call handler <code>&quot;system.multicall&quot;</code>.\n",null,0],["add_namespace","REXML::Element","Ruby/classes/REXML/Element.html#method-i-add_namespace","( prefix, uri=nil )","<p>Adds a namespace to this element.\n<p>prefix &mdash; the prefix string, or the namespace URI if <code>uri</code> is not supplied\n…\n",null,0],["add_need_initialize_variable","RSS::Element","Ruby/classes/RSS/Element.html#method-i-add_need_initialize_variable","(variable_name)","",null,0],["add_need_initialize_variable","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-add_need_initialize_variable","(variable_name, init_value=nil, &init_block)","",null,0],["add_nonce","OpenSSL::OCSP::BasicResponse","Ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-add_nonce","(p1 = v1)","",null,0],["add_nonce","OpenSSL::OCSP::Request","Ruby/classes/OpenSSL/OCSP/Request.html#method-i-add_nonce","(p1 = v1)","",null,0],["add_observer","Observable","Ruby/classes/Observable.html#method-i-add_observer","(observer, func=:update)","<p>Add <code>observer</code> as an observer on this object. so that it will\nreceive notifications.\n<p><code>observer</code> &mdash; the object …\n",null,0],["add_on_blank","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-add_on_blank","(attributes, options = {})","<p>Will add an error message to each of the attributes in\n<code>attributes</code> that is blank (using Object#blank? …\n",null,1],["add_on_empty","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-add_on_empty","(attributes, options = {})","<p>Will add an error message to each of the attributes in\n<code>attributes</code> that is empty.\n\n<pre>person.errors.add_on_empty(:name) ...</pre>\n",null,1],["add_option","Gem::Command","Ruby/classes/Gem/Command.html#method-i-add_option","(*opts)","<p>Add a command-line option and handler to the command.\n<p>See OptionParser#make_switch for an explanation …\n",null,0],["add_other_element","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-add_other_element","(variable_name)","",null,0],["add_owners","Gem::Commands::OwnerCommand","Ruby/classes/Gem/Commands/OwnerCommand.html#method-i-add_owners","(name, owners)","",null,0],["add_paragraph","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-add_paragraph","()","<p>Throws <code>:done</code> when paragraph_limit paragraphs have been\nencountered\n",null,0],["add_path","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-add_path","(p1)","",null,0],["add_platform","Gem::PlatformMismatch","Ruby/classes/Gem/PlatformMismatch.html#method-i-add_platform","(platform)","<p>append a platform to the list of mismatched platforms.\n<p>Platforms are added via this instead of injected …\n",null,0],["add_platform_option","Gem::VersionOption","Ruby/classes/Gem/VersionOption.html#method-i-add_platform_option","(task = command, *wrap)","<p>Add the –platform option to the option parser.\n",null,0],["add_plural_form","RSS::Element","Ruby/classes/RSS/Element.html#method-i-add_plural_form","(singular, plural)","",null,0],["add_postamble","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_postamble","(src)","",null,1],["add_preamble","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_preamble","(src)","",null,1],["add_prerelease_option","Gem::VersionOption","Ruby/classes/Gem/VersionOption.html#method-i-add_prerelease_option","(*wrap)","<p>Add the –prerelease option to the option parser.\n",null,0],["add_private_type","Psych","Ruby/classes/Psych.html#method-c-add_private_type","(type_tag, &block)","",null,0],["add_protocol","DRb::DRbProtocol","Ruby/classes/DRb/DRbProtocol.html#method-c-add_protocol","(prot)","<p>Add a new protocol to the DRbProtocol module.\n",null,0],["add_proxy_option","Gem::LocalRemoteOptions","Ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_proxy_option","()","<p>Add the –http-proxy option\n",null,0],["add_rakelib","Rake","Ruby/classes/Rake.html#method-i-add_rakelib","(*files)","<p>Add files to the rakelib list\n",null,0],["add_recipient","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-add_recipient","(p1)","",null,0],["add_reference","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_reference","(table_name, ref_name, options = {})","<p>Adds a reference. Optionally adds a <code>type</code> column, if\n<code>:polymorphic</code> option is provided. <code>add_reference</code>\nand …\n",null,1],["add_renderer","ActionController","Rails/classes/ActionController.html#method-c-add_renderer","(key, &block)","<p>See <code>Renderers.add</code>\n",null,1],["add_require","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_require","(require)","<p>Adds <code>require</code> to this context&#39;s top level\n",null,0],["add_response_handler","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-add_response_handler","(handler = Proc.new)","<p>Adds a response handler. For example, to detect when the server sends us a\nnew EXISTS response (which …\n",null,0],["add_revoked","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-add_revoked","(p1)","",null,0],["add_row","CSV","Ruby/classes/CSV.html#method-i-add_row","(row)","",null,0],["add_ruby_type","Psych","Ruby/classes/Psych.html#method-c-add_ruby_type","(type_tag, &block)","",null,0],["add_rubygems_trusted_certs","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-add_rubygems_trusted_certs","(store)","",null,0],["add_runtime_dependency","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-add_runtime_dependency","(gem, *requirements)","<p>Adds a runtime dependency named <code>gem</code> with\n<code>requirements</code> to this gem.\n<p>Usage:\n\n<pre><code>spec.add_runtime_dependency &#39;example&#39;, ...</code></pre>\n",null,0],["add_schedule","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-add_schedule","(command)","<p>schedule a command\n",null,0],["add_section","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_section","(title, comment = nil)","<p>Returns a section with <code>title</code>, creating it if it doesn&#39;t\nalready exist. <code>comment</code> will be appended to …\n",null,0],["add_self_to_load_path","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-add_self_to_load_path","()","<p>Adds this spec&#39;s require paths to LOAD_PATH, in the proper location.\n",null,0],["add_shebang_option!","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-add_shebang_option-21","()","<p>Small macro to add ruby as an option to the generator with proper default\nvalue plus an instance helper …\n",null,1],["add_signer","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-add_signer","(p1)","",null,0],["add_silencer","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-add_silencer","(&block)","<p>Adds a silencer from the block provided. If the silencer returns\n<code>true</code> for a given line, it will be excluded …\n",null,1],["add_source","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-add_source","(source, options={})","<p>Add the given source to Gemfile\n\n<pre>add_source &quot;http://gems.github.com/&quot;</pre>\n",null,1],["add_source_option","Gem::LocalRemoteOptions","Ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_source_option","()","<p>Add the –source option\n",null,0],["add_spec","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-add_spec","(spec)","<p>Adds <code>spec</code> to the known specifications, keeping the collection\nproperly sorted.\n",null,0],["add_special","RDoc::Markup","Ruby/classes/RDoc/Markup.html#method-i-add_special","(pattern, name)","<p>Add to other inline sequences.  For example, we could add WikiWords using\nsomething like:\n\n<pre><code>parser.add_special(/\\b([A-Z][a-z]+[A-Z]\\w+)/, ...</code></pre>\n",null,0],["add_special","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-add_special","(pattern, name)","<p>Adds a special handler for <code>pattern</code> with <code>name</code>.  A\nsimple URL handler would be:\n\n<pre><code>@am.add_special(/((https?:)\\S+\\w)/, ...</code></pre>\n",null,0],["add_special_RDOCLINK","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-add_special_RDOCLINK","()","<p>Adds a special for links of the form rdoc-…:\n",null,0],["add_special_TIDYLINK","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-add_special_TIDYLINK","()","<p>Adds a special for links of the form <text> and &lt;word>\n",null,0],["add_specific_extra_args","Gem::Command","Ruby/classes/Gem/Command.html#method-c-add_specific_extra_args","(cmd,args)","<p>Add a list of extra arguments for the given command.  <code>args</code> may\nbe an array or a string to be split on …\n",null,0],["add_specs","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-add_specs","(*specs)","<p>Adds multiple specs to the known specifications.\n",null,0],["add_status","OpenSSL::OCSP::BasicResponse","Ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-add_status","(p1, p2, p3, p4, p5, p6, p7)","",null,0],["add_stmt","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_stmt","(src, code)","",null,1],["add_tag","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-add_tag","(name, start, stop)","<p>Add a new set of tags for an attribute. We allow separate start and end\ntags for flexibility\n",null,0],["add_target","Rake::RuleRecursionOverflowError","Ruby/classes/Rake/RuleRecursionOverflowError.html#method-i-add_target","(target)","",null,0],["add_text","REXML::Element","Ruby/classes/REXML/Element.html#method-i-add_text","( text )","<p>A helper method to add a Text child.  Actual Text instances can be added\nwith regular Parent methods, …\n",null,0],["add_text","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_text","(src, text)","",null,1],["add_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_timestamps","(table_name)","<p>Adds timestamps (<code>created_at</code> and <code>updated_at</code>)\ncolumns to the named table.\n\n<pre>add_timestamps(:suppliers)</pre>\n",null,1],["add_timestamps_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_timestamps_sql","(table_name)","",null,1],["add_to","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-add_to","(array, thing)","<p>Adds <code>thing</code> to the collection <code>array</code>\n",null,0],["add_to_classes_or_modules","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-add_to_classes_or_modules","(mod)","<p>Adds class or module <code>mod</code>. Used in the building phase by the\nruby parser.\n",null,0],["add_to_element_method","RSS::Element","Ruby/classes/RSS/Element.html#method-i-add_to_element_method","(method_name)","",null,0],["add_to_transaction","ActiveRecord::Transactions","Rails/classes/ActiveRecord/Transactions.html#method-i-add_to_transaction","()","<p>Add the record to the current transaction so that the\n<code>after_rollback</code> and <code>after_commit</code> callbacks can be\n…\n",null,1],["add_token","RDoc::TokenStream","Ruby/classes/RDoc/TokenStream.html#method-i-add_token","(*tokens)","",null,0],["add_token_listener","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-add_token_listener","(obj)","<p>Adds a token listener <code>obj</code>, but you should probably use\ntoken_listener\n",null,0],["add_tokens","RDoc::TokenStream","Ruby/classes/RDoc/TokenStream.html#method-i-add_tokens","(*tokens)","<p>Adds <code>tokens</code> to the collected tokens\n",null,0],["add_trace_func","Thread","Ruby/classes/Thread.html#method-i-add_trace_func","(p1)","<p>Adds <em>proc</em> as a handler for tracing. See\n<code>Thread#set_trace_func</code> and <code>set_trace_func</code>.\n",null,0],["add_transaction_record","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-add_transaction_record","(record)","<p>Register a record with the current transaction so that its after_commit and\nafter_rollback callbacks …\n",null,1],["add_update_sources_option","Gem::LocalRemoteOptions","Ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_update_sources_option","()","<p>Add the –update-sources option\n",null,0],["add_value","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-add_value","(section, key, value)","",null,0],["add_version_option","Gem::VersionOption","Ruby/classes/Gem/VersionOption.html#method-i-add_version_option","(task = command, *wrap)","<p>Add the –version option to the option parser.\n",null,0],["add_word_pair","RDoc::Markup","Ruby/classes/RDoc/Markup.html#method-i-add_word_pair","(start, stop, name)","<p>Add to the sequences used to add formatting to an individual word (such as\n<strong>bold</strong>).  Matching entries will …\n",null,0],["add_word_pair","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-add_word_pair","(start, stop, name)","<p>Adds a markup class with <code>name</code> for words wrapped in the\n<code>start</code> and <code>stop</code> character.  To make words wrapped\n…\n",null,0],["addch","Curses","Ruby/classes/Curses.html#method-c-addch","(p1)","<p>Add a character <code>ch</code>, with attributes, then advance the cursor.\n<p>see also the system manual for curs_addch …\n",null,0],["addch","Curses::Window","Ruby/classes/Curses/Window.html#method-i-addch","(p1)","<p>Add a character <code>ch</code>, with attributes, to the window, then\nadvance the cursor.\n<p>see also the system manual …\n",null,0],["added?","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-added-3F","(attribute, message = nil, options = {})","<p>Returns <code>true</code> if an error on the attribute with the given\nmessage is present, <code>false</code> otherwise. <code>message</code> …\n",null,1],["addr","IPSocket","Ruby/classes/IPSocket.html#method-i-addr","(*args)","<p>Returns the local address as an array which contains address_family, port,\nhostname and numeric_address. …\n",null,0],["addr","UNIXSocket","Ruby/classes/UNIXSocket.html#method-i-addr","()","<p>Returns the local address as an array which contains address_family and\nunix_path.\n<p>Example\n\n<pre><code>serv = UNIXServer.new(&quot;/tmp/sock&quot;) ...</code></pre>\n",null,0],["addstr","Curses","Ruby/classes/Curses.html#method-c-addstr","(p1)","<p>add a string of characters <code>str</code>, to the window and advance\ncursor\n",null,0],["addstr","Curses::Window","Ruby/classes/Curses/Window.html#method-i-addstr","(p1)","<p>add a string of characters <code>str</code>, to the window and advance\ncursor\n",null,0],["adler","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-adler","()","<p>Returns the adler-32 checksum.\n",null,0],["adler32","Zlib","Ruby/classes/Zlib.html#method-c-adler32","(*args)","<p>Calculates Adler-32 checksum for <code>string</code>, and returns updated\nvalue of <code>adler</code>. If <code>string</code> is omitted, it …\n",null,0],["adler32_combine","Zlib","Ruby/classes/Zlib.html#method-c-adler32_combine","(p1, p2, p3)","<p>Combine two Adler-32 check values in to one.  <code>alder1</code> is the\nfirst Adler-32 value, <code>adler2</code> is the second …\n",null,0],["advance","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-advance","(options)","",null,1],["advance","Date","Rails/classes/Date.html#method-i-advance","(options)","<p>Provides precise Date calculations for years, months, and days. The\n<code>options</code> parameter takes a hash with …\n",null,1],["advance","DateTime","Rails/classes/DateTime.html#method-i-advance","(options)","<p>Uses Date to provide precise Time calculations for years, months, and days.\nThe <code>options</code> parameter takes …\n",null,1],["advance","Time","Rails/classes/Time.html#method-i-advance","(options)","<p>Uses Date to provide precise Time calculations for years, months, and days.\nThe <code>options</code> parameter takes …\n",null,1],["advise","IO","Ruby/classes/IO.html#method-i-advise","(p1, p2 = v2, p3 = v3)","\n<pre><code>Announce an intention to access data from the current file in a\nspecific pattern. On platforms that do ...</code></pre>\n",null,0],["afamily","Addrinfo","Ruby/classes/Addrinfo.html#method-i-afamily","()","<p>returns the address family as an integer.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).afamily == Socket::AF_INET #=&gt; ...\n</code></pre>\n",null,0],["after","ActionDispatch::Callbacks","Rails/classes/ActionDispatch/Callbacks.html#method-c-after","(*args, &block)","",null,1],["after","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-i-after","()","",null,1],["after_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-after_action","","<p>Append a callback after actions. See _insert_callbacks for parameter\ndetails. Aliased as after_filter. …\n",null,1],["after_commit","ActiveRecord::Transactions::ClassMethods","Rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_commit","(*args, &block)","<p>This callback is called after a record has been created, updated, or\ndestroyed.\n<p>You can specify that the …\n",null,1],["after_initialize","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-after_initialize","(&block)","<p>Last configurable block to run. Called after frameworks initialize.\n",null,1],["after_rollback","ActiveRecord::Transactions::ClassMethods","Rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_rollback","(*args, &block)","<p>This callback is called after a create, update, or destroy are rolled back.\n<p>Please check the documentation …\n",null,1],["after_teardown","ActiveRecord::TestFixtures","Rails/classes/ActiveRecord/TestFixtures.html#method-i-after_teardown","()","",null,1],["after_validation","ActiveModel::Validations::Callbacks::ClassMethods","Rails/classes/ActiveModel/Validations/Callbacks/ClassMethods.html#method-i-after_validation","(*args, &block)","<p>Defines a callback that will get called right after validation happens.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Validations</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ago","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-ago","(time = ::Time.current)","<p>Calculates a new Time or Date that is as far in the past as this Duration\nrepresents.\n",null,1],["ago","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-ago","(other)","",null,1],["ago","Date","Rails/classes/Date.html#method-i-ago","(seconds)","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the beginning of the …\n",null,1],["ago","DateTime","Rails/classes/DateTime.html#method-i-ago","(seconds)","<p>Returns a new DateTime representing the time a number of seconds ago. Do\nnot use this method in combination …\n",null,1],["ago","Numeric","Rails/classes/Numeric.html#method-i-ago","(time = ::Time.current)","<p>Reads best without arguments:  10.minutes.ago\n",null,1],["ago","Time","Rails/classes/Time.html#method-i-ago","(seconds)","<p>Returns a new Time representing the time a number of seconds ago, this is\nbasically a wrapper around …\n",null,1],["ajd","Date","Ruby/classes/Date.html#method-i-ajd","()","<p>Returns the astronomical Julian day number.  This is a fractional number,\nwhich is not adjusted by the …\n",null,0],["alert","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-alert","(statement, question=nil)","<p>Display an informational alert.  Will ask <code>question</code> if it is\nnot nil.\n",null,0],["alert","Gem::UserInteraction","Ruby/classes/Gem/UserInteraction.html#method-i-alert","(*args)","",null,0],["alert","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-alert","()","<p>Convenience accessor for <code>flash[:alert]</code>.\n",null,1],["alert=","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-alert-3D","(message)","<p>Convenience accessor for <code>flash[:alert]=</code>.\n",null,1],["alert_error","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-alert_error","(statement, question=nil)","<p>Display an error message in a location expected to get error messages. Will\nask <code>question</code> if it is not …\n",null,0],["alert_error","Gem::UserInteraction","Ruby/classes/Gem/UserInteraction.html#method-i-alert_error","(*args)","",null,0],["alert_warning","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-alert_warning","(statement, question=nil)","<p>Display a warning in a location expected to get error messages.  Will ask\n<code>question</code> if it is not nil. …\n",null,0],["alert_warning","Gem::UserInteraction","Ruby/classes/Gem/UserInteraction.html#method-i-alert_warning","(*args)","",null,0],["alias","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-alias","(anchor)","<p>Called when an alias is found to <code>anchor</code>.  <code>anchor</code>\nwill be the name of the anchor found.\n<p>Example\n<p>Here we …\n",null,0],["alias","Psych::TreeBuilder","Ruby/classes/Psych/TreeBuilder.html#method-i-alias","(anchor)","",null,0],["alias_attribute","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-alias_attribute","(new_name, old_name)","<p>Allows you to make aliases for attributes.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">AttributeMethods</span>\n\n  <span class=\"ruby-identifier\">attr_accessor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["alias_attribute","Module","Rails/classes/Module.html#method-i-alias_attribute","(new_name, old_name)","<p>Allows you to make aliases for attributes, which includes getter, setter,\nand query methods.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Content</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["alias_command","Shell","Ruby/classes/Shell.html#method-c-alias_command","(ali, command, *opts, &block)","<p>Convenience method for Shell::CommandProcessor.alias_command\n",null,0],["alias_command","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-c-alias_command","(ali, command, *opts)","<p>Creates a command alias at the given <code>alias</code> for the given\n<code>command</code>, passing any <code>options</code> along with it. …\n",null,0],["alias_extension","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-alias_extension","(old_ext, new_ext)","<p>Alias an extension to another extension. After this call, files ending\n“new_ext” will be parsed …\n",null,0],["alias_map","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-c-alias_map","()","<p>Returns a list of aliased commands\n",null,0],["alias_method_chain","Module","Rails/classes/Module.html#method-i-alias_method_chain","(target, feature)","<p>Encapsulates the common pattern of:\n\n<pre>alias_method :foo_without_feature, :foo\nalias_method :foo, :foo_with_feature</pre>\n",null,1],["alias_type","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields.html#method-c-alias_type","(new, old)","",null,1],["alias_type","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID.html#method-c-alias_type","(new, old)","<p>Alias the <code>old</code> type to the <code>new</code> type.\n",null,1],["aliases","Encoding","Ruby/classes/Encoding.html#method-c-aliases","()","<p>Returns the hash of available encoding alias and original encoding name.\n\n<pre><code>Encoding.aliases\n#=&gt; {&quot;BINARY&quot;=&gt;&quot;ASCII-8BIT&quot;, ...\n</code></pre>\n",null,0],["alien","Gem::Validator","Ruby/classes/Gem/Validator.html#method-i-alien","(gems=[])","<p>Checks the gem directory for the following potential\ninconsistencies/problems:\n<p>Checksum gem itself\n<p>For …\n",null,0],["align","DL::PackInfo","Ruby/classes/DL/PackInfo.html#method-c-align","(addr, align)","",null,0],["alive?","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-i-alive-3F","()","<p>Is this server alive?\n",null,0],["alive?","DRb::ExtServ","Ruby/classes/DRb/ExtServ.html#method-i-alive-3F","()","",null,0],["alive?","Fiber","Ruby/classes/Fiber.html#method-i-alive-3F","()","<p>Returns true if the fiber can still be resumed (or transferred to). After\nfinishing execution of the …\n",null,0],["alive?","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-alive-3F","()","<p>A TupleEntry is dead when it is canceled or expired.\n",null,0],["alive?","Thread","Ruby/classes/Thread.html#method-i-alive-3F","()","<p>Returns <code>true</code> if <em>thr</em> is running or sleeping.\n\n<pre><code>thr = Thread.new { }\nthr.join                #=&gt; #&lt;Thread:0x401b3fb0 ...\n</code></pre>\n",null,0],["all","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-all","()","<p>Returns all specifications. This method is discouraged from use. You\nprobably want to use one of the …\n",null,0],["all","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-all","( dest = '' )","",null,0],["all","ActionController::MimeResponds::Collector","Rails/classes/ActionController/MimeResponds/Collector.html#method-i-all","(*args, &block)","",null,1],["all","ActionMailer::Collector","Rails/classes/ActionMailer/Collector.html#method-i-all","(*args, &block)","",null,1],["all","ActiveRecord::Scoping::Named::ClassMethods","Rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-all","()","<p>Returns an <code>ActiveRecord::Relation</code> scope object.\n\n<pre>posts = Post.all\nposts.size # Fires &quot;select count(*) from ...</pre>\n",null,1],["all","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-all","()","<p>Return an array of all TimeZone objects. There are multiple TimeZone\nobjects per time zone, in many cases, …\n",null,1],["all","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-c-all","(klass)","<p>GET index\n",null,1],["all=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-all-3D","(specs)","<p>Sets the known specs to <code>specs</code>. Not guaranteed to work for you\nin the future. Use at your own risk. Caveat …\n",null,0],["all?","Enumerable","Ruby/classes/Enumerable.html#method-i-all-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block never …\n",null,0],["all_classes","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-all_classes","()","<p>Returns all classes discovered by RDoc\n",null,0],["all_classes_and_modules","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-all_classes_and_modules","()","<p>Returns all classes and modules discovered by RDoc\n",null,0],["all_day","Time","Rails/classes/Time.html#method-i-all_day","()","<p>Returns a Range representing the whole day of the current time.\n",null,1],["all_files","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-all_files","()","<p>All TopLevels known to RDoc\n",null,0],["all_helpers_from_path","ActionController::Helpers::ClassMethods","Rails/classes/ActionController/Helpers/ClassMethods.html#method-i-all_helpers_from_path","(path)","",null,1],["all_modules","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-all_modules","()","<p>Returns all modules discovered by RDoc\n",null,0],["all_month","Time","Rails/classes/Time.html#method-i-all_month","()","<p>Returns a Range representing the whole month of the current time.\n",null,1],["all_names","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-all_names","()","<p>Return full names of all specs in sorted order.\n",null,0],["all_paths","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-all_paths","()","",null,1],["all_quarter","Time","Rails/classes/Time.html#method-i-all_quarter","()","<p>Returns a Range representing the whole quarter of the current time.\n",null,1],["all_specs","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-all_specs","()","",null,0],["all_symbols","Symbol","Ruby/classes/Symbol.html#method-c-all_symbols","()","<p>Returns an array of all the symbols currently in Ruby&#39;s symbol table.\n\n<pre><code>Symbol.all_symbols.size    #=&gt; ...\n</code></pre>\n",null,0],["all_waits","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-all_waits","()","<p>Waits until all of the specified threads are terminated.  If a block is\nsupplied for the method, it is …\n",null,0],["all_waits","ThreadsWait","Ruby/classes/ThreadsWait.html#method-c-all_waits","(*threads)","<p>Waits until all specified threads have terminated.  If a block is provided,\nit is executed for each thread …\n",null,0],["all_waits","ThreadsWait","Ruby/classes/ThreadsWait.html#method-c-all_waits","(*threads)","<p>Waits until all specified threads have terminated.  If a block is provided,\nit is executed for each thread …\n",null,0],["all_waits","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-all_waits","()","<p>Waits until all of the specified threads are terminated.  If a block is\nsupplied for the method, it is …\n",null,0],["all_week","Time","Rails/classes/Time.html#method-i-all_week","(start_day = Date.beginning_of_week)","<p>Returns a Range representing the whole week of the current time. Week\nstarts on start_day, default is …\n",null,1],["all_year","Time","Rails/classes/Time.html#method-i-all_year","()","<p>Returns a Range representing the whole year of the current time.\n",null,1],["allocate","Class","Ruby/classes/Class.html#method-i-allocate","()","<p>Allocates space for a new object of <em>class</em>&#39;s class and does not\ncall initialize on the new instance. …\n",null,0],["allow_addr?","ACL","Ruby/classes/ACL.html#method-i-allow_addr-3F","(addr)","<p>Allow connections from addrinfo <code>addr</code>?  It must be formatted\nlike Socket#peeraddr:\n\n<pre><code>[&quot;AF_INET&quot;, 10, &quot;lc630&quot;, ...</code></pre>\n",null,0],["allow_concurrency?","Rails::Application","Rails/classes/Rails/Application.html#method-i-allow_concurrency-3F","()","",null,1],["allow_socket?","ACL","Ruby/classes/ACL.html#method-i-allow_socket-3F","(soc)","<p>Allow connections from Socket <code>soc</code>?\n",null,0],["allowed_index_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-allowed_index_name_length","()","<p>Returns the maximum allowed length for an index name. This limit is\nenforced by rails and Is less than …\n",null,1],["allowed_index_name_length","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-allowed_index_name_length","()","<p>Returns 62. SQLite supports index names up to 64 characters. The rest is\nused by rails internally to …\n",null,1],["alt_name_or_x509_entry","Gem::Security","Ruby/classes/Gem/Security.html#method-c-alt_name_or_x509_entry","(certificate, x509_entry)","",null,0],["alternate=","RSS::XMLStyleSheet","Ruby/classes/RSS/XMLStyleSheet.html#method-i-alternate-3D","(value)","",null,0],["amjd","Date","Ruby/classes/Date.html#method-i-amjd","()","<p>Returns the astronomical modified Julian day number.  This is a fractional\nnumber, which is not adjusted …\n",null,0],["ancestors","Module","Ruby/classes/Module.html#method-i-ancestors","()","<p>Returns a list of modules included in <em>mod</em> (including <em>mod</em>\nitself).\n\n<pre><code>module Mod\n  include Math\n  include ...\n</code></pre>\n",null,0],["ancestors","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-ancestors","()","<p>Ancestors list for this ClassModule: the list of included modules (classes\nwill add their superclass …\n",null,0],["ancestors","RDoc::NormalClass","Ruby/classes/RDoc/NormalClass.html#method-i-ancestors","()","<p>The ancestors of this class including modules.  Unlike Module#ancestors,\nthis class is not included in …\n",null,0],["ancestors","RDoc::SingleClass","Ruby/classes/RDoc/SingleClass.html#method-i-ancestors","()","<p>Adds the superclass to the included modules.\n",null,0],["ancestors","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-ancestors","()","<p>Ancestors cache accessor.  Maps a klass name to an Array of its ancestors\nin this store.  If Foo in this …\n",null,0],["ancestors_of","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-ancestors_of","(klass)","<p>Returns ancestor classes of <code>klass</code>\n",null,0],["angle","Complex","Ruby/classes/Complex.html#method-i-angle","()","<p>Returns the angle part of its polar form.\n\n<pre><code>Complex.polar(3, Math::PI/2).arg  #=&gt; 1.5707963267948966\n</code></pre>\n",null,0],["angle","Float","Ruby/classes/Float.html#method-i-angle","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["angle","Numeric","Ruby/classes/Numeric.html#method-i-angle","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["annotate","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-annotate","(tag)","<p>Allows <code>tag</code> to be decorated with additional information.\n",null,0],["annotate","RDoc::Markup::ToBs","Ruby/classes/RDoc/Markup/ToBs.html#method-i-annotate","(tag)","<p>Turns on or off special handling for <code>convert_string</code>\n",null,0],["announce","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-announce","(message)","",null,1],["announce","Build","Rails/classes/Build.html#method-i-announce","(heading)","",null,1],["anonymous?","Module","Rails/classes/Module.html#method-i-anonymous-3F","()","<p>A module may or may not have a name.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M</span>; <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-constant\">M</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-comment\"># =&gt; &quot;M&quot;</span>\n\n<span class=\"ruby-identifier\">m</span> = <span class=\"ruby-constant\">Module</span>.<span class=\"ruby-identifier\">new</span>\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-comment\"># =&gt; nil</span>\n</pre>\n<p>A module …\n",null,1],["any","ActionController::MimeResponds::Collector","Rails/classes/ActionController/MimeResponds/Collector.html#method-i-any","(*args, &block)","",null,1],["any","ActionMailer::Collector","Rails/classes/ActionMailer/Collector.html#method-i-any","(*args, &block)","",null,1],["any?","Enumerable","Ruby/classes/Enumerable.html#method-i-any-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block ever returns …\n",null,0],["any?","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-any-3F","(&block)","<p>Returns <code>true</code> if the collection is not empty.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-identifier\">has_many</span> :<span class=\"ruby-identifier\">pets</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">pets</span>.<span class=\"ruby-identifier\">count</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["any?","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-any-3F","()","<p>Returns true if there are any records.\n",null,1],["any_content","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-any_content","(includes = true)","<p>Is there any content?\n<p>This means any of: comment, aliases, methods, attributes, external aliases,\nrequire, …\n",null,0],["any_waiting?","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-any_waiting-3F","()","<p>Test if any threads are currently waiting on the queue.\n",null,1],["api_behavior","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-api_behavior","(error)","<p>This is the common behavior for formats associated with APIs, such as :xml\nand :json.\n",null,1],["api_dir","Rails::API::AppTask","Rails/classes/Rails/API/AppTask.html#method-i-api_dir","()","",null,1],["api_dir","Rails::API::RepoTask","Rails/classes/Rails/API/RepoTask.html#method-i-api_dir","()","",null,1],["api_endpoint","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-api_endpoint","(uri)","<p>Given a source at <code>uri</code>, calculate what hostname to actually\nconnect to query the data for it.\n",null,0],["api_key","Gem::GemcutterUtilities","Ruby/classes/Gem/GemcutterUtilities.html#method-i-api_key","()","",null,0],["api_keys","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-api_keys","()","<p>Hash of RubyGems.org and alternate API keys\n",null,0],["api_location","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-api_location","()","",null,1],["api_main","Rails::API::Task","Rails/classes/Rails/API/Task.html#method-i-api_main","()","",null,1],["api_uri","Gem::Source","Ruby/classes/Gem/Source.html#method-i-api_uri","()","",null,0],["apop?","Net::APOP","Ruby/classes/Net/APOP.html#method-i-apop-3F","()","<p>Always returns true.\n",null,0],["apop?","Net::APOP","Ruby/classes/Net/APOP.html#method-i-apop-3F","()","<p>Always returns true.\n",null,0],["apop?","Net::POP3","Ruby/classes/Net/POP3.html#method-i-apop-3F","()","<p>Does this instance use APOP authentication?\n",null,0],["app","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-app","()","",null,1],["app","Rails::ConsoleMethods","Rails/classes/Rails/ConsoleMethods.html#method-i-app","(create=false)","<p>reference the global “app” instance, created on demand. To recreate the\ninstance, pass a non-false …\n",null,1],["app","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-app","()","<p>Returns the underlying rack application for this engine.\n",null,1],["app","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-app","()","",null,1],["app","Rails::Server","Rails/classes/Rails/Server.html#method-i-app","()","<p>TODO: this is no longer required but we keep it for the moment to support\nolder config.ru files.\n",null,1],["app_generators","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-app_generators","()","<p>This allows you to modify application&#39;s generators from Railties.\n<p>Values set on app_generators will …\n",null,1],["app_middleware","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-app_middleware","()","<p>This allows you to modify the application&#39;s middlewares from Engines.\n<p>All operations you run on the …\n",null,1],["app_script_text","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-app_script_text","(bin_file_name)","<p>Return the text for an application file.\n",null,0],["append","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-append","(mailbox, message, flags = nil, date_time = nil)","<p>Sends a APPEND command to append the <code>message</code> to the end of the\n<code>mailbox</code>. The optional <code>flags</code> argument is …\n",null,0],["append","OptionParser::List","Ruby/classes/OptionParser/List.html#method-i-append","(*args)","<p>Appends <code>switch</code> at the tail of the list, and associates short,\nlong and negated long options. Arguments …\n",null,0],["append","RDoc::RD::Inline","Ruby/classes/RDoc/RD/Inline.html#method-i-append","(more)","<p>Appends <code>more</code> to this inline.  <code>more</code> may be a\nString or another Inline.\n",null,0],["append","Rake::InvocationChain","Ruby/classes/Rake/InvocationChain.html#method-c-append","(value, chain)","",null,0],["append","Rake::InvocationChain","Ruby/classes/Rake/InvocationChain.html#method-i-append","(value)","",null,0],["append","Rake::InvocationChain::EmptyInvocationChain","Ruby/classes/Rake/InvocationChain/EmptyInvocationChain.html#method-i-append","(value)","",null,0],["append","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-append","(to, filter)","",null,0],["append_after_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_after_action","","<p>Append a callback after actions. See _insert_callbacks for parameter\ndetails. Aliased as append_after_filter. …\n",null,1],["append_around_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_around_action","","<p>Append a callback around actions. See _insert_callbacks for parameter\ndetails. Aliased as append_around_filter. …\n",null,1],["append_before_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_before_action","","<p>Append a callback before actions. See _insert_callbacks for parameter\ndetails. Aliased as append_before_filter. …\n",null,1],["append_data","WEBrick::HTTPUtils::FormData","Ruby/classes/WEBrick/HTTPUtils/FormData.html#method-i-append_data","(data)","<p>Adds <code>data</code> at the end of the chain of entries\n<p>This is called by WEBrick::HTTPUtils.parse_form_data for …\n",null,0],["append_features","RSS::Atom::CommonModel","Ruby/classes/RSS/Atom/CommonModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Atom::ContentModel","Ruby/classes/RSS/Atom/ContentModel.html#method-i-append_features","(klass)","",null,0],["append_features","RSS::Atom::DateConstruct","Ruby/classes/RSS/Atom/DateConstruct.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Atom::PersonConstruct","Ruby/classes/RSS/Atom/PersonConstruct.html#method-c-append_features","(klass)","<p>Adds attributes for name, uri, and email to the <code>klass</code>\n",null,0],["append_features","RSS::Atom::TextConstruct","Ruby/classes/RSS/Atom/TextConstruct.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Atom::URIContentModel","Ruby/classes/RSS/Atom/URIContentModel.html#method-i-append_features","(klass)","",null,0],["append_features","RSS::BaseDublinCoreModel","Ruby/classes/RSS/BaseDublinCoreModel.html#method-i-append_features","(klass)","",null,0],["append_features","RSS::BaseTrackBackModel","Ruby/classes/RSS/BaseTrackBackModel.html#method-i-append_features","(klass)","",null,0],["append_features","RSS::ContentModel","Ruby/classes/RSS/ContentModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::ITunesChannelModel","Ruby/classes/RSS/ITunesChannelModel.html#method-i-append_features","(klass)","",null,0],["append_features","RSS::ITunesItemModel","Ruby/classes/RSS/ITunesItemModel.html#method-i-append_features","(klass)","",null,0],["append_features","RSS::ImageFaviconModel","Ruby/classes/RSS/ImageFaviconModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::ImageItemModel","Ruby/classes/RSS/ImageItemModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::AtomPersonConstructBase","Ruby/classes/RSS/Maker/AtomPersonConstructBase.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::AtomTextConstructBase","Ruby/classes/RSS/Maker/AtomTextConstructBase.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::ContentModel","Ruby/classes/RSS/Maker/ContentModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::DublinCoreModel","Ruby/classes/RSS/Maker/DublinCoreModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::ITunesChannelModel","Ruby/classes/RSS/Maker/ITunesChannelModel.html#method-i-append_features","(klass)","",null,0],["append_features","RSS::Maker::ITunesItemModel","Ruby/classes/RSS/Maker/ITunesItemModel.html#method-i-append_features","(klass)","",null,0],["append_features","RSS::Maker::ImageFaviconModel","Ruby/classes/RSS/Maker/ImageFaviconModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::ImageItemModel","Ruby/classes/RSS/Maker/ImageItemModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::SlashModel","Ruby/classes/RSS/Maker/SlashModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::SyndicationModel","Ruby/classes/RSS/Maker/SyndicationModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::TaxonomyTopicModel","Ruby/classes/RSS/Maker/TaxonomyTopicModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::TaxonomyTopicsModel","Ruby/classes/RSS/Maker/TaxonomyTopicsModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::Maker::TrackBackModel","Ruby/classes/RSS/Maker/TrackBackModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::RSS09","Ruby/classes/RSS/RSS09.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::RSS10","Ruby/classes/RSS/RSS10.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::SlashModel","Ruby/classes/RSS/SlashModel.html#method-i-append_features","(klass)","",null,0],["append_features","RSS::SyndicationModel","Ruby/classes/RSS/SyndicationModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::TaxonomyTopicModel","Ruby/classes/RSS/TaxonomyTopicModel.html#method-c-append_features","(klass)","",null,0],["append_features","RSS::TaxonomyTopicsModel","Ruby/classes/RSS/TaxonomyTopicsModel.html#method-c-append_features","(klass)","",null,0],["append_features","Sync_m","Ruby/classes/Sync_m.html#method-c-append_features","(cl)","",null,0],["append_features","Sync_m","Ruby/classes/Sync_m.html#method-c-append_features","(cl)","",null,0],["append_features","ActiveSupport::Concern","Rails/classes/ActiveSupport/Concern.html#method-i-append_features","(base)","",null,1],["append_view_path","AbstractController::ViewPaths","Rails/classes/AbstractController/ViewPaths.html#method-i-append_view_path","(path)","",null,1],["append_view_path","AbstractController::ViewPaths::ClassMethods","Rails/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-append_view_path","(path)","<p>Append a path to the list of view paths for this controller.\n<p>Parameters\n<p><code>path</code> - If a String is provided, …\n",null,1],["application","Rake","Ruby/classes/Rake.html#method-i-application","()","<p>Current Rake Application\n",null,0],["application","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-application","(data=nil, options={}, &block)","",null,1],["application=","Rake","Ruby/classes/Rake.html#method-i-application-3D","(app)","<p>Set the current Rake application object.\n",null,0],["application_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-application_name","()","<p>Tries to retrieve the application name or simple return application.\n",null,1],["application_trace","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-application_trace","()","",null,1],["apply_join_dependency","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-apply_join_dependency","(relation, join_dependency)","",null,1],["approximate_recommendation","Gem::Version","Ruby/classes/Gem/Version.html#method-i-approximate_recommendation","()","<p>A recommended version for use with a ~&gt; Requirement.\n",null,0],["aref","RDoc::Alias","Ruby/classes/RDoc/Alias.html#method-i-aref","()","<p>HTML fragment reference for this alias\n",null,0],["aref","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-aref","()","<p>Anchor reference for linking to this section\n",null,0],["aref","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-aref","()","<p>HTML fragment reference for this method\n",null,0],["aref_prefix","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-i-aref_prefix","()","<p>Prefix for <code>aref</code> is &#39;method&#39;.\n",null,0],["aref_prefix","RDoc::Attr","Ruby/classes/RDoc/Attr.html#method-i-aref_prefix","()","<p>The #aref prefix for attributes\n",null,0],["aref_prefix","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-aref_prefix","()","<p>Prefix for <code>aref</code>, defined by subclasses.\n",null,0],["aref_to","RDoc::Generator::Markup","Ruby/classes/RDoc/Generator/Markup.html#method-i-aref_to","(target_path)","<p>Generates a relative URL from this object&#39;s path to\n<code>target_path</code>\n",null,0],["arel","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-arel","()","<p>Returns the Arel object associated with the relation.\n",null,1],["arel_engine","ActiveRecord::Core::ClassMethods","Rails/classes/ActiveRecord/Core/ClassMethods.html#method-i-arel_engine","()","<p>Returns the Arel engine.\n",null,1],["arel_table","ActiveRecord::Core::ClassMethods","Rails/classes/ActiveRecord/Core/ClassMethods.html#method-i-arel_table","()","<p>Returns an instance of <code>Arel::Table</code> loaded with the current\ntable name.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Post</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["arg","Complex","Ruby/classes/Complex.html#method-i-arg","()","<p>Returns the angle part of its polar form.\n\n<pre><code>Complex.polar(3, Math::PI/2).arg  #=&gt; 1.5707963267948966\n</code></pre>\n",null,0],["arg","Float","Ruby/classes/Float.html#method-i-arg","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["arg","Numeric","Ruby/classes/Numeric.html#method-i-arg","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["arg_names","Rake::Task","Ruby/classes/Rake/Task.html#method-i-arg_names","()","<p>Name of arguments for this task.\n",null,0],["arglists","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-i-arglists","()","<p>The call_seq or the param_seq with method name, if there is no call_seq.\n<p>Use this for displaying a method&#39;s …\n",null,0],["args","NoMethodError","Ruby/classes/NoMethodError.html#method-i-args","()","<p>Return the arguments passed in as the third parameter to the constructor.\n",null,0],["arguments","Gem::Command","Ruby/classes/Gem/Command.html#method-i-arguments","()","<p>Override to provide details of the arguments a command takes.  It should\nreturn a left-justified string, …\n",null,0],["argv","ARGF","Ruby/classes/ARGF.html#method-i-argv","()","<p>Returns the <code>ARGV</code> array, which contains the arguments passed to\nyour script, one per element.\n<p>For example: …\n",null,0],["arity","Method","Ruby/classes/Method.html#method-i-arity","()","<p>Returns an indication of the number of arguments accepted by a method.\nReturns a nonnegative integer …\n",null,0],["arity","Proc","Ruby/classes/Proc.html#method-i-arity","()","<p>Returns the number of arguments that would not be ignored. If the block is\ndeclared to take no arguments, …\n",null,0],["arity","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-arity","()","<p>Returns an indication of the number of arguments accepted by a method.\nReturns a nonnegative integer …\n",null,0],["around_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-around_action","","<p>Append a callback around actions. See _insert_callbacks for parameter\ndetails. Aliased as around_filter. …\n",null,1],["array","WIN32OLE_VARIANT","Ruby/classes/WIN32OLE_VARIANT.html#method-c-array","(p1, p2)","<p>Returns Ruby object wrapping OLE variant whose variant type is VT_ARRAY.\nThe first argument should be …\n",null,0],["array_attributes","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-array_attributes","()","<p>Return the list of all array-oriented instance variables.\n",null,0],["array_to_string","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-array_to_string","(value, column, adapter, should_be_quoted = false)","",null,1],["as_href","RDoc::Generator::Markup","Ruby/classes/RDoc/Generator/Markup.html#method-i-as_href","(from_path)","<p>Generates a relative URL from <code>from_path</code> to this object&#39;s\npath\n",null,0],["as_json","BigDecimal","Ruby/classes/BigDecimal.html#method-i-as_json","(*)","<p>Marshal the object to JSON.\n<p>method used for JSON marshalling support.\n",null,0],["as_json","Complex","Ruby/classes/Complex.html#method-i-as_json","(*)","",null,0],["as_json","Date","Ruby/classes/Date.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,0],["as_json","DateTime","Ruby/classes/DateTime.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,0],["as_json","Exception","Ruby/classes/Exception.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,0],["as_json","JSON::GenericObject","Ruby/classes/JSON/GenericObject.html#method-i-as_json","(*)","",null,0],["as_json","OpenStruct","Ruby/classes/OpenStruct.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,0],["as_json","Range","Ruby/classes/Range.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,0],["as_json","Rational","Ruby/classes/Rational.html#method-i-as_json","(*)","",null,0],["as_json","Regexp","Ruby/classes/Regexp.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,0],["as_json","Struct","Ruby/classes/Struct.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,0],["as_json","Symbol","Ruby/classes/Symbol.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,0],["as_json","Time","Ruby/classes/Time.html#method-i-as_json","(*)","<p>Returns a hash, that will be turned into a JSON object and represent this\nobject.\n",null,0],["as_json","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-as_json","(options=nil)","<p>Returns a Hash that can be used as the JSON representation for this object.\nYou can pass the <code>:full_messages</code> …\n",null,1],["as_json","ActiveModel::Serializers::JSON","Rails/classes/ActiveModel/Serializers/JSON.html#method-i-as_json","(options = nil)","<p>Returns a hash representing the model. Some configuration can be passed\nthrough <code>options</code>.\n<p>The option <code>include_root_in_json</code> …\n",null,1],["as_json","ActiveSupport::JSON::Encoding::Encoder","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-as_json","(value, use_options = true)","<p>like encode, but only calls as_json, without encoding to string.\n",null,1],["as_json","ActiveSupport::JSON::Variable","Rails/classes/ActiveSupport/JSON/Variable.html#method-i-as_json","(options = nil)","",null,1],["as_json","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-as_json","(options = nil)","<p>Coerces time to a string for JSON encoding. The default format is ISO 8601.\nYou can get %Y/%m/%d %H:%M:% …\n",null,1],["as_json","Process::Status","Rails/classes/Process/Status.html#method-i-as_json","(options = nil)","",null,1],["as_string","RDoc::Markup::Attributes","Ruby/classes/RDoc/Markup/Attributes.html#method-i-as_string","(bitmap)","<p>Returns a string representation of <code>bitmap</code>\n",null,0],["ascend","Pathname","Ruby/classes/Pathname.html#method-i-ascend","()","<p>Iterates over and yields a new Pathname object for each element in the\ngiven path in ascending order. …\n",null,0],["ascii_compatible?","Encoding","Ruby/classes/Encoding.html#method-i-ascii_compatible-3F","()","<p>Returns whether ASCII-compatible or not.\n\n<pre><code>Encoding::UTF_8.ascii_compatible?     #=&gt; true\nEncoding::UTF_16BE.ascii_compatible? ...\n</code></pre>\n",null,0],["ascii_only?","String","Ruby/classes/String.html#method-i-ascii_only-3F","()","<p>Returns true for a string which has only ASCII characters.\n\n<pre><code>&quot;abc&quot;.force_encoding(&quot;UTF-8&quot;).ascii_only?  ...</code></pre>\n",null,0],["asciicompat_encoding","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-c-asciicompat_encoding","(p1)","<p>Returns the corresponding ASCII compatible encoding.\n<p>Returns nil if the argument is an ASCII compatible …\n",null,0],["asctime","Date","Ruby/classes/Date.html#method-i-asctime","()","<p>Returns a string in asctime(3) format (but without “n0” at the end).  This\nmethod is equivalent …\n",null,0],["asctime","Time","Ruby/classes/Time.html#method-i-asctime","()","<p>Returns a canonical string representation of <em>time</em>.\n\n<pre><code>Time.now.asctime   #=&gt; &quot;Wed Apr  9 08:56:03 2003&quot;\n</code></pre>\n",null,0],["asin","CMath","Ruby/classes/CMath.html#method-c-asin","(z)","<p>returns the arc sine of <code>z</code>\n",null,0],["asin","Math","Ruby/classes/Math.html#method-c-asin","(p1)","<p>Computes the arc sine of <em>x</em>. Returns -{PI/2} .. {PI/2}.\n",null,0],["asin!","CMath","Ruby/classes/CMath.html#method-c-asin-21","(z)","",null,0],["asinh","CMath","Ruby/classes/CMath.html#method-c-asinh","(z)","<p>returns the inverse hyperbolic sine of <code>z</code>\n",null,0],["asinh","Math","Ruby/classes/Math.html#method-c-asinh","(p1)","<p>Computes the inverse hyperbolic sine of <em>x</em>.\n",null,0],["asinh!","CMath","Ruby/classes/CMath.html#method-c-asinh-21","(z)","",null,0],["ask","Gem::MockGemUi","Ruby/classes/Gem/MockGemUi.html#method-i-ask","(question)","",null,0],["ask","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-ask","(question)","<p>Ask a question.  Returns an answer if connected to a tty, nil otherwise.\n",null,0],["ask","Gem::UserInteraction","Ruby/classes/Gem/UserInteraction.html#method-i-ask","(*args)","",null,0],["ask_for_password","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-ask_for_password","(question)","<p>Ask for a password. Does not echo response to terminal.\n",null,0],["ask_for_password","Gem::UserInteraction","Ruby/classes/Gem/UserInteraction.html#method-i-ask_for_password","(*args)","",null,0],["ask_for_password_on_unix","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-ask_for_password_on_unix","()","<p>Asks for a password that works on unix\n",null,0],["ask_for_password_on_windows","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-ask_for_password_on_windows","()","<p>Asks for a password that works on windows. Ripped from the Heroku gem.\n",null,0],["ask_if_ok","Gem::Uninstaller","Ruby/classes/Gem/Uninstaller.html#method-i-ask_if_ok","(spec)","",null,0],["ask_yes_no","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-ask_yes_no","(question, default=nil)","<p>Ask a question.  Returns a true for yes, false for no.  If not connected to\na tty, raises an exception …\n",null,0],["ask_yes_no","Gem::UserInteraction","Ruby/classes/Gem/UserInteraction.html#method-i-ask_yes_no","(*args)","",null,0],["asn1_flag","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-asn1_flag","()","<p>See the OpenSSL documentation for EC_GROUP_get_asn1_flag()\n",null,0],["asn1_flag=","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-asn1_flag-3D","(p1)","<p>See the OpenSSL documentation for EC_GROUP_set_asn1_flag()\n",null,0],["assemble_template","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-assemble_template","(body_file)","<p>Creates a template from its components and the <code>body_file</code>.\n<p>For backwards compatibility, if <code>body_file</code> contains …\n",null,0],["assert_index","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-assert_index","(index, where)","",null,1],["assert_valid_keys","Hash","Rails/classes/Hash.html#method-i-assert_valid_keys","(*valid_keys)","<p>Validate all keys in a hash match <code>*valid_keys</code>, raising\nArgumentError on a mismatch. Note that keys are …\n",null,1],["asset","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-asset","(generator_name, req, res)","<p>Serves the asset at the path in <code>req</code> for\n<code>generator_name</code> via <code>res</code>.\n",null,0],["asset_path","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-asset_path","(source, options = {})","<p>Computes the path to asset in public directory. If :type options is set, a\nfile extension will be appended …\n",null,1],["asset_url","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-asset_url","(source, options = {})","<p>Computes the full URL to a asset in the public directory. This will use\n<code>asset_path</code> internally, so most …\n",null,1],["assign_attributes","ActiveRecord::AttributeAssignment","Rails/classes/ActiveRecord/AttributeAssignment.html#method-i-assign_attributes","(new_attributes)","<p>Allows you to set all the attributes by passing in a hash of attributes\nwith keys matching the attribute …\n",null,1],["assign_names","DL::CStructEntity","Ruby/classes/DL/CStructEntity.html#method-i-assign_names","(members)","<p>Set the names of the <code>members</code> in this C struct\n",null,0],["assign_names","Fiddle::CStructEntity","Ruby/classes/Fiddle/CStructEntity.html#method-i-assign_names","(members)","<p>Set the names of the <code>members</code> in this C struct\n",null,0],["assignment","","Ruby/files/ruby/doc/syntax/assignment_rdoc.html","","<p>Assignment\n<p>In Ruby assignment uses the <code>=</code> (equals sign) character.  This\nexample assigns the number five …\n",null,0],["assoc","Array","Ruby/classes/Array.html#method-i-assoc","(p1)","<p>Searches through an array whose elements are also arrays comparing\n<code>obj</code> with the first element of each …\n",null,0],["assoc","ENV","Ruby/classes/ENV.html#method-c-assoc","(p1)","<p>Returns an Array of the name and value of the environment variable with\n<code>name</code> or <code>nil</code> if the name cannot …\n",null,0],["assoc","Hash","Ruby/classes/Hash.html#method-i-assoc","(p1)","<p>Searches through the hash comparing <em>obj</em> with the key using\n<code>==</code>. Returns the key-value pair (two elements …\n",null,0],["assume_migrated_upto_version","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-assume_migrated_upto_version","(version, migrations_paths = ActiveRecord::Migrator.migrations_paths)","",null,1],["at","Array","Ruby/classes/Array.html#method-i-at","(p1)","<p>Returns the element at <code>index</code>. A negative index counts from the\nend of <code>self</code>. Returns <code>nil</code> if the index …\n",null,0],["at","Time","Ruby/classes/Time.html#method-c-at","(p1, p2 = v2)","<p>Creates a new Time object with the value given by <code>time</code>, the\ngiven number of <code>seconds_with_frac</code>, or <code>seconds</code> …\n",null,0],["at","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-at","(secs)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone\nof <code>self</code> from number of seconds …\n",null,1],["at","String","Rails/classes/String.html#method-i-at","(position)","<p>If you pass a single Fixnum, returns a substring of one character at that\nposition. The first character …\n",null,1],["at","Time","Rails/classes/Time.html#method-c-at","(*args)","",null,1],["at_beginning_of_day","Date","Rails/classes/Date.html#method-i-at_beginning_of_day","()","",null,1],["at_beginning_of_day","DateTime","Rails/classes/DateTime.html#method-i-at_beginning_of_day","()","",null,1],["at_beginning_of_day","Time","Rails/classes/Time.html#method-i-at_beginning_of_day","()","",null,1],["at_beginning_of_hour","DateTime","Rails/classes/DateTime.html#method-i-at_beginning_of_hour","()","",null,1],["at_beginning_of_hour","Time","Rails/classes/Time.html#method-i-at_beginning_of_hour","()","",null,1],["at_beginning_of_minute","DateTime","Rails/classes/DateTime.html#method-i-at_beginning_of_minute","()","",null,1],["at_beginning_of_minute","Time","Rails/classes/Time.html#method-i-at_beginning_of_minute","()","",null,1],["at_beginning_of_month","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-at_beginning_of_month","()","",null,1],["at_beginning_of_quarter","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-at_beginning_of_quarter","()","",null,1],["at_beginning_of_week","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-at_beginning_of_week","(start_day = Date.beginning_of_week)","",null,1],["at_beginning_of_year","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-at_beginning_of_year","()","",null,1],["at_end_of_day","Date","Rails/classes/Date.html#method-i-at_end_of_day","()","",null,1],["at_end_of_day","DateTime","Rails/classes/DateTime.html#method-i-at_end_of_day","()","",null,1],["at_end_of_day","Time","Rails/classes/Time.html#method-i-at_end_of_day","()","",null,1],["at_end_of_hour","DateTime","Rails/classes/DateTime.html#method-i-at_end_of_hour","()","",null,1],["at_end_of_hour","Time","Rails/classes/Time.html#method-i-at_end_of_hour","()","",null,1],["at_end_of_minute","DateTime","Rails/classes/DateTime.html#method-i-at_end_of_minute","()","",null,1],["at_end_of_minute","Time","Rails/classes/Time.html#method-i-at_end_of_minute","()","",null,1],["at_end_of_month","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-at_end_of_month","()","",null,1],["at_end_of_quarter","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-at_end_of_quarter","()","",null,1],["at_end_of_week","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-at_end_of_week","(start_day = Date.beginning_of_week)","",null,1],["at_end_of_year","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-at_end_of_year","()","",null,1],["at_exit","Kernel","Ruby/classes/Kernel.html#method-i-at_exit","()","<p>Converts <em>block</em> to a <code>Proc</code> object (and therefore binds\nit at the point of call) and registers it for execution …\n",null,0],["at_midnight","Date","Rails/classes/Date.html#method-i-at_midnight","()","",null,1],["at_midnight","DateTime","Rails/classes/DateTime.html#method-i-at_midnight","()","",null,1],["at_midnight","Time","Rails/classes/Time.html#method-i-at_midnight","()","",null,1],["at_with_coercion","Time","Rails/classes/Time.html#method-c-at_with_coercion","(*args)","<p>Layers additional behavior on Time.at so that ActiveSupport::TimeWithZone\nand DateTime instances can …\n",null,1],["at_without_coercion","Time","Rails/classes/Time.html#method-c-at_without_coercion","(*args)","",null,1],["atan","BigMath","Ruby/classes/BigMath.html#method-i-atan","(x, prec)","<p>Computes the arctangent of x to the specified number of digits of\nprecision.\n<p>If x is NaN, returns NaN …\n",null,0],["atan","CMath","Ruby/classes/CMath.html#method-c-atan","(z)","<p>returns the arc tangent of <code>z</code>\n",null,0],["atan","Math","Ruby/classes/Math.html#method-c-atan","(p1)","<p>Computes the arc tangent of <em>x</em>. Returns -{PI/2} .. {PI/2}.\n",null,0],["atan!","CMath","Ruby/classes/CMath.html#method-c-atan-21","(z)","",null,0],["atan2","CMath","Ruby/classes/CMath.html#method-c-atan2","(y,x)","<p>returns the arc tangent of <code>y</code> divided by <code>x</code> using\nthe signs of <code>y</code> and <code>x</code> to determine the quadrant\n",null,0],["atan2","Math","Ruby/classes/Math.html#method-c-atan2","(p1, p2)","<p>Computes the arc tangent given <em>y</em> and <em>x</em>. Returns -PI..PI.\n\n<pre><code>Math.atan2(-0.0, -1.0) #=&gt; -3.141592653589793 ...\n</code></pre>\n",null,0],["atan2!","CMath","Ruby/classes/CMath.html#method-c-atan2-21","(y,x)","",null,0],["atanh","CMath","Ruby/classes/CMath.html#method-c-atanh","(z)","<p>returns the inverse hyperbolic tangent of <code>z</code>\n",null,0],["atanh","Math","Ruby/classes/Math.html#method-c-atanh","(p1)","<p>Computes the inverse hyperbolic tangent of <em>x</em>.\n",null,0],["atanh!","CMath","Ruby/classes/CMath.html#method-c-atanh-21","(z)","",null,0],["atime","File","Ruby/classes/File.html#method-i-atime","()","<p>Returns the last access time (a <code>Time</code> object)\n\n<pre><code>for &lt;i&gt;file&lt;/i&gt;, or epoch if &lt;i&gt;file&lt;/i&gt; has not been accessed. ...</code></pre>\n",null,0],["atime","File","Ruby/classes/File.html#method-c-atime","(p1)","<p>Returns the last access time for the named file as a Time object).\n<p><em>file_name</em> can be an IO object.\n\n<pre><code>File.atime(&quot;testfile&quot;) ...</code></pre>\n",null,0],["atime","File::Stat","Ruby/classes/File/Stat.html#method-i-atime","()","<p>Returns the last access time for this file as an object of class\n<code>Time</code>.\n\n<pre><code>File.stat(&quot;testfile&quot;).atime   #=&gt; ...\n</code></pre>\n",null,0],["atime","Pathname","Ruby/classes/Pathname.html#method-i-atime","()","<p>Returns the last access time for the file.\n<p>See File.atime.\n",null,0],["atom_feed","ActionView::Helpers::AtomFeedHelper","Rails/classes/ActionView/Helpers/AtomFeedHelper.html#method-i-atom_feed","(options = {}, &block)","<p>Adds easy defaults to writing Atom feeds with the Builder template engine\n(this does not work on ERB …\n",null,1],["atom_validate","RSS::Atom::DateConstruct","Ruby/classes/RSS/Atom/DateConstruct.html#method-i-atom_validate","(ignore_unknown_element, tags, uri)","<p>Raises NotAvailableValueError if element content is nil\n",null,0],["atom_validate","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-atom_validate","(ignore_unknown_element, tags, uri)","",null,0],["atom_validate","RSS::Atom::TextConstruct","Ruby/classes/RSS/Atom/TextConstruct.html#method-i-atom_validate","(ignore_unknown_element, tags, uri)","",null,0],["atomic_write","File","Rails/classes/File.html#method-c-atomic_write","(file_name, temp_dir = Dir.tmpdir)","<p>Write to a file atomically. Useful for situations where you don&#39;t want\nother processes or threads …\n",null,1],["attach_to","ActiveSupport::Subscriber","Rails/classes/ActiveSupport/Subscriber.html#method-c-attach_to","(namespace, subscriber=new, notifier=ActiveSupport::Notifications)","<p>Attach the subscriber to a namespace.\n",null,1],["attachments","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-attachments","()","<p>Allows you to add attachments to an email, like so:\n\n<pre>mail.attachments[&#39;filename.jpg&#39;] = File.read(&#39;/path/to/filename.jpg&#39;)</pre>\n",null,1],["attachments","ActionMailer::MailHelper","Rails/classes/ActionMailer/MailHelper.html#method-i-attachments","()","<p>Access the message attachments list.\n",null,1],["attlistdecl","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-attlistdecl","(element, pairs, contents)","<p>If a doctype includes an ATTLIST declaration, it will cause this method to\nbe called.  The content is …\n",null,0],["attlistdecl","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-attlistdecl","(element_name, attributes, raw_content)","<p>If a doctype includes an ATTLIST declaration, it will cause this method to\nbe called.  The content is …\n",null,0],["attlistdecl?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-attlistdecl-3F","()","<p>Content: [ String text ]\n",null,0],["attr_internal","Module","Rails/classes/Module.html#method-i-attr_internal","(*attrs)","",null,1],["attr_internal_accessor","Module","Rails/classes/Module.html#method-i-attr_internal_accessor","(*attrs)","<p>Declares an attribute reader and writer backed by an internally-named\ninstance variable.\n",null,1],["attr_internal_reader","Module","Rails/classes/Module.html#method-i-attr_internal_reader","(*attrs)","<p>Declares an attribute reader backed by an internally-named instance\nvariable.\n",null,1],["attr_internal_writer","Module","Rails/classes/Module.html#method-i-attr_internal_writer","(*attrs)","<p>Declares an attribute writer backed by an internally-named instance\nvariable.\n",null,1],["attr_readonly","ActiveRecord::ReadonlyAttributes::ClassMethods","Rails/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html#method-i-attr_readonly","(*attributes)","<p>Attributes listed as readonly will be used to create a new record but\nupdate operations will ignore these …\n",null,1],["attribute","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-attribute","(turn_on, turn_off)","<p>Return an attribute object with the given turn_on and turn_off bits set\n",null,0],["attribute","REXML::Element","Ruby/classes/REXML/Element.html#method-i-attribute","( name, namespace=nil )","<p>Attributes                                    #\n",null,0],["attribute","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-attribute","( name )","",null,0],["attribute_for_inspect","ActiveRecord::AttributeMethods","Rails/classes/ActiveRecord/AttributeMethods.html#method-i-attribute_for_inspect","(attr_name)","<p>Returns an <code>#inspect</code>-like string for the value of the attribute\n<code>attr_name</code>. String attributes are truncated …\n",null,1],["attribute_match","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-attribute_match","(equality, value)","<p>Create a regular expression to match an attribute value based on the\nequality operator (=, ^=, |=, etc). …\n",null,1],["attribute_method?","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-attribute_method-3F","(attribute)","<p>Returns <code>true</code> if <code>attribute</code> is an attribute method,\n<code>false</code> otherwise.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Validations</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["attribute_method?","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-attribute_method-3F","(attribute)","<p>Returns <code>true</code> if <code>attribute</code> is an attribute method\nand table exists, <code>false</code> otherwise.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["attribute_method?","ActiveRecord::AttributeMethods::PrimaryKey","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-attribute_method-3F","(attr_name)","",null,1],["attribute_method_affix","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_affix","(*affixes)","<p>Declares a method available for all attributes with the given prefix and\nsuffix. Uses <code>method_missing</code> …\n",null,1],["attribute_method_prefix","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_prefix","(*prefixes)","<p>Declares a method available for all attributes with the given prefix. Uses\n<code>method_missing</code> and <code>respond_to</code> …\n",null,1],["attribute_method_suffix","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_suffix","(*suffixes)","<p>Declares a method available for all attributes with the given suffix. Uses\n<code>method_missing</code> and <code>respond_to</code> …\n",null,1],["attribute_missing","ActiveModel::AttributeMethods","Rails/classes/ActiveModel/AttributeMethods.html#method-i-attribute_missing","(match, *args, &block)","<p><code>attribute_missing</code> is like <code>method_missing</code>, but for\nattributes. When <code>method_missing</code> is called we check …\n",null,1],["attribute_names","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-attribute_names","()","<p>Return the list of all instance variables.\n",null,0],["attribute_names","ActiveRecord::AttributeMethods","Rails/classes/ActiveRecord/AttributeMethods.html#method-i-attribute_names","()","<p>Returns an array of names for the attributes available on this object.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["attribute_names","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-attribute_names","()","<p>Returns an array of column names as strings if it&#39;s not an abstract\nclass and table exists. Otherwise …\n",null,1],["attribute_of","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-attribute_of","(element, attribute)","",null,0],["attribute_present?","ActiveRecord::AttributeMethods","Rails/classes/ActiveRecord/AttributeMethods.html#method-i-attribute_present-3F","(attribute)","<p>Returns <code>true</code> if the specified <code>attribute</code> has been\nset by the user or by a database load and is neither …\n",null,1],["attributes","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-attributes","()","",null,0],["attributes","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-attributes","(text)","<p>Applies attribute-specific markup to <code>text</code> using\nRDoc::AttributeManager\n",null,0],["attributes","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-attributes","()","<p>Attributes cache accessor.  Maps a class to an Array of its attributes.\n",null,0],["attributes","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-attributes","()","<p>returns attributes.\n",null,0],["attributes","ActiveRecord::AttributeMethods","Rails/classes/ActiveRecord/AttributeMethods.html#method-i-attributes","()","<p>Returns a hash of all the attributes with their names as keys and the\nvalues of the attributes as values. …\n",null,1],["attributes=","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-attributes-3D","(p1)","",null,0],["attributes=","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-attributes-3D","(val)","<p>setter for attributes <code>val</code>\n",null,0],["attributes=","ActiveRecord::AttributeAssignment","Rails/classes/ActiveRecord/AttributeAssignment.html#method-i-attributes-3D","(new_attributes)","",null,1],["attributes_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","Rails/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#method-i-attributes_before_type_cast","()","<p>Returns a hash of attributes before typecasting and deserialization.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Task</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n<span class=\"ruby-keyword\">end</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["attributes_hash","ActiveRecord::DynamicMatchers::Finder","Rails/classes/ActiveRecord/DynamicMatchers/Finder.html#method-i-attributes_hash","()","",null,1],["attributes_names","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-attributes_names","()","",null,1],["attributes_of","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-attributes_of","(element)","",null,0],["attroff","Curses","Ruby/classes/Curses.html#method-c-attroff","(p1)","<p>Turns on the named attributes <code>attrs</code> without affecting any\nothers.\n<p>See also Curses::Window.attrset for …\n",null,0],["attroff","Curses::Window","Ruby/classes/Curses/Window.html#method-i-attroff","(p1)","<p>Turns on the named attributes <code>attrs</code> without affecting any\nothers.\n<p>See also Curses::Window.attrset\n",null,0],["attron","Curses","Ruby/classes/Curses.html#method-c-attron","(p1)","<p>Turns off the named attributes <code>attrs</code> without turning any other\nattributes on or off.\n<p>See also Curses::Window.attrset …\n",null,0],["attron","Curses::Window","Ruby/classes/Curses/Window.html#method-i-attron","(p1)","<p>Turns off the named attributes <code>attrs</code> without turning any other\nattributes on or off.\n<p>See also Curses::Window.attrset …\n",null,0],["attrset","Curses","Ruby/classes/Curses.html#method-c-attrset","(p1)","<p>Sets the current attributes of the given window to <code>attrs</code>.\n<p>see also Curses::Window.attrset\n",null,0],["attrset","Curses::Window","Ruby/classes/Curses/Window.html#method-i-attrset","(p1)","<p>Sets the current attributes of the given window to <code>attrs</code>.\n<p>The following video attributes, defined in &lt;curses.h&gt;, …\n",null,0],["audio_path","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-audio_path","(source, options = {})","<p>Computes the path to an audio asset in the public audios directory. Full\npaths from the document root …\n",null,1],["audio_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-audio_tag","(*sources)","<p>Returns an HTML audio tag for the <code>source</code>. The\n<code>source</code> can be full path or file that exists in your public …\n",null,1],["audio_url","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-audio_url","(source, options = {})","<p>Computes the full URL to an audio asset in the public audios directory.\nThis will use <code>audio_path</code> internally, …\n",null,1],["auth_cram_md5","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-auth_cram_md5","(user, secret)","",null,0],["auth_data=","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-auth_data-3D","(p1)","<p>Sets the cipher&#39;s additional authenticated data. This field must be set\nwhen using AEAD cipher modes …\n",null,0],["auth_login","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-auth_login","(user, secret)","",null,0],["auth_only","Net::POP3","Ruby/classes/Net/POP3.html#method-c-auth_only","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Opens a POP3 session, attempts authentication, and quits.\n<p>This method raises POPAuthenticationError if …\n",null,0],["auth_only","Net::POP3","Ruby/classes/Net/POP3.html#method-i-auth_only","(account, password)","<p>Starts a pop3 session, attempts authentication, and quits. This method must\nnot be called while POP3 …\n",null,0],["auth_plain","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-auth_plain","(user, secret)","",null,0],["auth_tag","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-auth_tag","(p1 = v1)","<p>Gets the authentication tag generated by Authenticated Encryption Cipher\nmodes (GCM for example). This …\n",null,0],["auth_tag=","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-auth_tag-3D","(p1)","<p>Sets the authentication tag to verify the contents of the ciphertext. The\ntag must be set after calling …\n",null,0],["authenticate","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-authenticate","(auth_type, *args)","<p>Sends an AUTHENTICATE command to authenticate the client. The\n<code>auth_type</code> parameter is a string that represents …\n",null,0],["authenticate","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-authenticate","(user, secret, authtype = DEFAULT_AUTH_TYPE)","",null,0],["authenticate","WEBrick::HTTPAuth::BasicAuth","Ruby/classes/WEBrick/HTTPAuth/BasicAuth.html#method-i-authenticate","(req, res)","<p>Authenticates a <code>req</code> and returns a 401 Unauthorized using\n<code>res</code> if the authentication was not correct.\n",null,0],["authenticate","WEBrick::HTTPAuth::DigestAuth","Ruby/classes/WEBrick/HTTPAuth/DigestAuth.html#method-i-authenticate","(req, res)","<p>Authenticates a <code>req</code> and returns a 401 Unauthorized using\n<code>res</code> if the authentication was not correct.\n",null,0],["authenticate","ActionController::HttpAuthentication::Basic","Rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-authenticate","(request, &login_procedure)","",null,1],["authenticate","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-authenticate","(request, realm, &password_procedure)","<p>Returns false on a valid response, true otherwise\n",null,1],["authenticate","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-authenticate","(controller, &login_procedure)","<p>If token Authorization header is present, call the login procedure with the\npresent token and options. …\n",null,1],["authenticate","ActiveModel::SecurePassword::ClassMethods::InstanceMethodsOnActivation","Rails/classes/ActiveModel/SecurePassword/ClassMethods/InstanceMethodsOnActivation.html#method-i-authenticate","(unencrypted_password)","<p>Returns <code>self</code> if the password is correct, otherwise\n<code>false</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">User</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-identifier\">has_secure_password</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["authenticate_or_request_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-authenticate_or_request_with_http_basic","(realm = \"Application\", &login_procedure)","",null,1],["authenticate_or_request_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-authenticate_or_request_with_http_digest","(realm = \"Application\", &password_procedure)","",null,1],["authenticate_or_request_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-authenticate_or_request_with_http_token","(realm = \"Application\", &login_procedure)","",null,1],["authenticate_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-authenticate_with_http_basic","(&login_procedure)","",null,1],["authenticate_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-authenticate_with_http_digest","(realm = \"Application\", &password_procedure)","<p>Authenticate with HTTP Digest, returns true or false\n",null,1],["authenticate_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-authenticate_with_http_token","(&login_procedure)","",null,1],["authenticated?","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-authenticated-3F","()","<p>Indicated whether this Cipher instance uses an Authenticated Encryption\nmode.\n",null,0],["authentication_header","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-authentication_header","(controller, realm)","",null,1],["authentication_request","ActionController::HttpAuthentication::Basic","Rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-authentication_request","(controller, realm)","",null,1],["authentication_request","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-authentication_request","(controller, realm, message = nil)","",null,1],["authentication_request","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-authentication_request","(controller, realm)","<p>Sets a WWW-Authenticate to let the client know a token is desired.\n<p>controller - ActionController::Base …\n",null,1],["author","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-author","()","<p>Singular reader for #authors.  Returns the first author in the list\n",null,0],["author=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-author-3D","(o)","<p>Singular writer for #authors\n<p>Usage:\n\n<pre><code>spec.author = &#39;John Jones&#39;</code></pre>\n",null,0],["authorization","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-authorization","()","<p>Returns the authorization header regardless of whether it was specified\ndirectly or through one of the …\n",null,1],["authors","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-authors","()","<p>The list of author names who wrote this gem.\n\n<pre><code>spec.authors = [&#39;Chad Fowler&#39;, &#39;Jim Weirich&#39;, &#39;Rich Kilmer&#39;]</code></pre>\n",null,0],["authors=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-authors-3D","(value)","<p>Sets the list of authors, ensuring it is an array.\n<p>Usage:\n\n<pre><code>spec.authors = [&#39;John Jones&#39;, &#39;Mary Smith&#39;]</code></pre>\n",null,0],["auto_discovery_link_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-auto_discovery_link_tag","(type = :rss, url_options = {}, tag_options = {})","<p>Returns a link tag that browsers and news readers can use to auto-detect an\nRSS or Atom feed. The <code>type</code> …\n",null,1],["autoclose=","IO","Ruby/classes/IO.html#method-i-autoclose-3D","(p1)","<p>Sets auto-close flag.\n\n<pre><code>f = open(&quot;/dev/null&quot;)\nIO.for_fd(f.fileno)\n# ...\nf.gets # may cause IOError\n\nf = ...</code></pre>\n",null,0],["autoclose?","IO","Ruby/classes/IO.html#method-i-autoclose-3F","()","<p>Returns <code>true</code> if the underlying file descriptor of <em>ios</em>\nwill be closed automatically at its finalization, …\n",null,0],["autoload","Kernel","Ruby/classes/Kernel.html#method-i-autoload","(p1, p2)","<p>Registers <em>filename</em> to be loaded (using\n<code>Kernel::require</code>) the first time that <em>module</em> (which\nmay be a <code>String</code> …\n",null,0],["autoload","Module","Ruby/classes/Module.html#method-i-autoload","(p1, p2)","<p>Registers <em>filename</em> to be loaded (using\n<code>Kernel::require</code>) the first time that <em>module</em> (which\nmay be a <code>String</code> …\n",null,0],["autoload","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-autoload","(const_name, path = @_at_path)","",null,1],["autoload?","Kernel","Ruby/classes/Kernel.html#method-i-autoload-3F","(p1)","<p>Returns <em>filename</em> to be loaded if <em>name</em> is registered as\n<code>autoload</code>.\n\n<pre><code>autoload(:B, &quot;b&quot;)\nautoload?(:B)      ...</code></pre>\n",null,0],["autoload?","Module","Ruby/classes/Module.html#method-i-autoload-3F","(p1)","<p>Returns <em>filename</em> to be loaded if <em>name</em> is registered as\n<code>autoload</code> in the namespace of <em>mod</em>.\n\n<pre><code>module A\nend ...\n</code></pre>\n",null,0],["autoload_at","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-autoload_at","(path)","",null,1],["autoload_once","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-autoload_once","()","",null,1],["autoload_once_paths","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-autoload_once_paths","()","",null,1],["autoload_paths","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-autoload_paths","()","",null,1],["autoload_paths","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-autoload_paths","()","",null,1],["autoload_under","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-autoload_under","(path)","",null,1],["autoloads","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-autoloads","()","",null,1],["avail_in","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-avail_in","()","<p>Returns bytes of data in the input buffer. Normally, returns 0.\n",null,0],["avail_out","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-avail_out","()","<p>Returns number of bytes of free spaces in output buffer.  Because the free\nspace is allocated automatically, …\n",null,0],["avail_out=","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-avail_out-3D","(p1)","<p>Allocates <code>size</code> bytes of free space in the output buffer. If\nthere are more than <code>size</code> bytes already in …\n",null,0],["available_action?","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-i-available_action-3F","(action_name)","<p>Returns true if a method for the action is available and can be dispatched,\nfalse otherwise.\n<p>Notice that …\n",null,1],["available_environments","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-i-available_environments","()","",null,1],["available_specs","Gem::SpecFetcher","Ruby/classes/Gem/SpecFetcher.html#method-i-available_specs","(type)","<p>Returns a list of gems available for each source in Gem::sources.\n<p><code>type</code> can be one of 3 values: :released …\n",null,0],["available_tags","RSS::BaseListener","Ruby/classes/RSS/BaseListener.html#method-i-available_tags","(uri)","<p>return the tag_names for setters associated with uri\n",null,0],["average","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-average","(column_name, options = {})","<p>Calculates the average value on a given column. Returns <code>nil</code> if\nthere&#39;s no row. See <code>calculate</code> for …\n",null,1],["await","ActiveSupport::Concurrency::Latch","Rails/classes/ActiveSupport/Concurrency/Latch.html#method-i-await","()","",null,1],["await_commit","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-await_commit","()","",null,1],["axe","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-axe","( elements, axe_name, rest )","",null,0],["b","String","Ruby/classes/String.html#method-i-b","()","<p>Returns a copied string whose encoding is ASCII-8BIT.\n",null,0],["backend","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-backend","()","",null,1],["backend","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-backend","()","",null,1],["backend=","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-backend-3D","(name)","",null,1],["backend=","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-backend-3D","(name)","",null,1],["backticks","Rake::AltSystem","Ruby/classes/Rake/AltSystem.html#method-i-backticks","(cmd)","",null,0],["backtrace","Exception","Ruby/classes/Exception.html#method-i-backtrace","()","<p>Returns any backtrace associated with the exception. The backtrace is an\narray of strings, each containing …\n",null,0],["backtrace","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-backtrace","()","<p>True if the backtrace option has been specified, or debug is on.\n",null,0],["backtrace","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-backtrace","(exception)","<p>Prints a formatted backtrace to the errors stream if backtraces are\nenabled.\n",null,0],["backtrace","Thread","Ruby/classes/Thread.html#method-i-backtrace","(*args)","<p>Returns the current backtrace of the target thread.\n",null,0],["backtrace_cleaner","Rails","Rails/classes/Rails.html#method-c-backtrace_cleaner","()","",null,1],["backtrace_locations","Thread","Ruby/classes/Thread.html#method-i-backtrace_locations","(*args)","<p>Returns the execution stack for the target thread—an array containing\nbacktrace location objects.\n<p>See …\n",null,0],["banner","OptionParser","Ruby/classes/OptionParser.html#method-i-banner","()","<p>Heading banner preceding summary.\n",null,0],["banner","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-banner","()","<p>Use Rails default banner.\n",null,1],["base","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-base","(href = \"\")","<p>Generate a Document Base URI element as a String.\n<p><code>href</code> can either by a string, giving the base URL for …\n",null,0],["base","OptionParser","Ruby/classes/OptionParser.html#method-i-base","()","<p>Subject of #on_tail.\n",null,0],["base64","SecureRandom","Ruby/classes/SecureRandom.html#method-c-base64","(n=nil)","<p>SecureRandom.base64 generates a random base64 string.\n<p>The argument <em>n</em> specifies the length of the random …\n",null,0],["base64","XMLRPC::Convert","Ruby/classes/XMLRPC/Convert.html#method-c-base64","(str)","<p>Decodes the given <code>str</code> using XMLRPC::Base64.decode\n",null,0],["base64digest","Digest::Class","Ruby/classes/Digest/Class.html#method-c-base64digest","(str, *args)","<p>Returns the base64 encoded hash value of a given <em>string</em>.  The\nreturn value is properly padded with &#39;=&#39; …\n",null,0],["base64digest","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-base64digest","(str = nil)","<p>If none is given, returns the resulting hash value of the digest in a\nbase64 encoded form, keeping the …\n",null,0],["base64digest!","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-base64digest-21","()","<p>Returns the resulting hash value and resets the digest to the initial\nstate.\n",null,0],["base_class","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-base_class","()","<p>Returns the class descending directly from ActiveRecord::Base, or an\nabstract class, if any, in the inheritance …\n",null,1],["base_dir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-base_dir","()","<p>Returns the full path to the base gem directory.\n<p>eg: /usr/local/lib/ruby/gems/1.8\n",null,0],["base_label","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-base_label","()","<p>Returns the base label of this instruction sequence.\n<p>For example, using irb:\n\n<pre><code>iseq = RubyVM::InstructionSequence.compile(&#39;num ...</code></pre>\n",null,0],["base_label","Thread::Backtrace::Location","Ruby/classes/Thread/Backtrace/Location.html#method-i-base_label","()","<p>Returns the base label of this frame.\n<p>Usually same as #label, without decoration.\n",null,0],["base_name","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-base_name","()","<p>Base name of this file\n",null,0],["base_name","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-base_name","()","<p>Sets the base_name taking into account the current class namespace.\n",null,1],["base_root","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-base_root","()","<p>Returns the base root for a common set of generators. This is used to\ndynamically guess the default source …\n",null,1],["basename","File","Ruby/classes/File.html#method-c-basename","(p1, p2 = v2)","<p>Returns the last component of the filename given in <em>file_name</em>,\nwhich can be formed using both <code>File::SEPARATOR</code> …\n",null,0],["basename","Pathname","Ruby/classes/Pathname.html#method-i-basename","(p1 = v1)","<p>Returns the last component of the path.\n<p>See File.basename.\n",null,0],["basename","ActiveRecord::MigrationProxy","Rails/classes/ActiveRecord/MigrationProxy.html#method-i-basename","()","",null,1],["basic","OpenSSL::OCSP::Response","Ruby/classes/OpenSSL/OCSP/Response.html#method-i-basic","()","",null,0],["basic_auth","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-basic_auth","(account, password)","<p>Set the Authorization: header for “Basic” authorization.\n",null,0],["basic_auth","WEBrick::HTTPAuth","Ruby/classes/WEBrick/HTTPAuth.html#method-i-basic_auth","(req, res, realm)","<p>Simple wrapper for providing basic authentication for a request.  When\ncalled with a request <code>req</code>, response …\n",null,0],["basic_quote_characters","Readline","Ruby/classes/Readline.html#method-c-basic_quote_characters","()","<p>Gets a list of quote characters which can cause a word break.\n<p>Raises NotImplementedError if the using …\n",null,0],["basic_quote_characters=","Readline","Ruby/classes/Readline.html#method-c-basic_quote_characters-3D","(p1)","<p>Sets a list of quote characters which can cause a word break.\n<p>Raises NotImplementedError if the using …\n",null,0],["basic_word_break_characters","Readline","Ruby/classes/Readline.html#method-c-basic_word_break_characters","()","<p>Gets the basic list of characters that signal a break between words for the\ncompleter routine.\n<p>Raises …\n",null,0],["basic_word_break_characters=","Readline","Ruby/classes/Readline.html#method-c-basic_word_break_characters-3D","(p1)","<p>Sets the basic list of characters that signal a break between words for the\ncompleter routine. The default …\n",null,0],["becomes","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-becomes","(klass)","<p>Returns an instance of the specified <code>klass</code> with the attributes\nof the current record. This is mostly …\n",null,1],["becomes!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-becomes-21","(klass)","<p>Wrapper around <code>becomes</code> that also changes the instance&#39;s\nsti column value. This is especially useful …\n",null,1],["beep","Curses","Ruby/classes/Curses.html#method-c-beep","()","<p>Sounds an audible alarm on the terminal, if possible; otherwise it flashes\nthe screen (visual bell). …\n",null,0],["before","ActionDispatch::Callbacks","Rails/classes/ActionDispatch/Callbacks.html#method-c-before","(*args, &block)","",null,1],["before","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-i-before","()","",null,1],["before_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-before_action","","<p>Append a callback before actions. See _insert_callbacks for parameter\ndetails. Aliased as before_filter. …\n",null,1],["before_configuration","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-before_configuration","(&block)","<p>First configurable block to run. Called before any initializers are run.\n",null,1],["before_eager_load","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-before_eager_load","(&block)","<p>Third configurable block to run. Does not run if\n<code>config.cache_classes</code> set to false.\n",null,1],["before_initialize","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-before_initialize","(&block)","<p>Second configurable block to run. Called before frameworks initialize.\n",null,1],["before_running_rdoc","RDoc::Task","Ruby/classes/RDoc/Task.html#method-i-before_running_rdoc","(&block)","<p>The block passed to this method will be called just before running the RDoc\ngenerator. It is allowed …\n",null,0],["before_setup","ActiveRecord::TestFixtures","Rails/classes/ActiveRecord/TestFixtures.html#method-i-before_setup","()","",null,1],["before_validation","ActiveModel::Validations::Callbacks::ClassMethods","Rails/classes/ActiveModel/Validations/Callbacks/ClassMethods.html#method-i-before_validation","(*args, &block)","<p>Defines a callback that will get called right before validation happens.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Validations</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["begin","MatchData","Ruby/classes/MatchData.html#method-i-begin","(p1)","<p>Returns the offset of the start of the <em>n</em>th element of the match\narray in the string. <em>n</em> can be a string …\n",null,0],["begin","Range","Ruby/classes/Range.html#method-i-begin","()","<p>Returns the object that defines the beginning of the range.\n\n<pre><code>(1..10).begin   #=&gt; 1\n</code></pre>\n",null,0],["begin_adding","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-begin_adding","()","<p>Call this to mark the beginning of parsing for display purposes\n",null,0],["begin_adding","RDoc::Stats::Quiet","Ruby/classes/RDoc/Stats/Quiet.html#method-i-begin_adding","(*)","<p>Prints a message at the beginning of parsing\n",null,0],["begin_db_transaction","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-begin_db_transaction","()","",null,1],["begin_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-begin_db_transaction","()","<p>Begins the transaction (and turns off auto-committing).\n",null,1],["begin_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-begin_db_transaction","()","<p>Begins a transaction.\n",null,1],["begin_isolated_db_transaction","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-begin_isolated_db_transaction","(isolation)","",null,1],["begin_isolated_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-begin_isolated_db_transaction","(isolation)","<p>Begins the transaction with the isolation level set. Raises an error by\ndefault; adapters that support …\n",null,1],["begin_isolated_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-begin_isolated_db_transaction","(isolation)","",null,1],["beginning_of_day","Date","Rails/classes/Date.html#method-i-beginning_of_day","()","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the beginning of the …\n",null,1],["beginning_of_day","DateTime","Rails/classes/DateTime.html#method-i-beginning_of_day","()","<p>Returns a new DateTime representing the start of the day (0:00).\n",null,1],["beginning_of_day","Time","Rails/classes/Time.html#method-i-beginning_of_day","()","<p>Returns a new Time representing the start of the day (0:00)\n",null,1],["beginning_of_hour","DateTime","Rails/classes/DateTime.html#method-i-beginning_of_hour","()","<p>Returns a new DateTime representing the start of the hour (hh:00:00).\n",null,1],["beginning_of_hour","Time","Rails/classes/Time.html#method-i-beginning_of_hour","()","<p>Returns a new Time representing the start of the hour (x:00)\n",null,1],["beginning_of_line?","StringScanner","Ruby/classes/StringScanner.html#method-i-beginning_of_line-3F","()","<p>Returns <code>true</code> iff the scan pointer is at the beginning of the\nline.\n\n<pre><code>s = StringScanner.new(&quot;test\\ntest\\n&quot;) ...</code></pre>\n",null,0],["beginning_of_minute","DateTime","Rails/classes/DateTime.html#method-i-beginning_of_minute","()","<p>Returns a new DateTime representing the start of the minute (hh:mm:00).\n",null,1],["beginning_of_minute","Time","Rails/classes/Time.html#method-i-beginning_of_minute","()","<p>Returns a new Time representing the start of the minute (x:xx:00)\n",null,1],["beginning_of_month","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-beginning_of_month","()","<p>Returns a new date/time at the start of the month. DateTime objects will\nhave a time set to 0:00.\n",null,1],["beginning_of_quarter","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-beginning_of_quarter","()","<p>Returns a new date/time at the start of the quarter. Example: 1st January,\n1st July, 1st October. DateTime …\n",null,1],["beginning_of_week","Date","Rails/classes/Date.html#method-c-beginning_of_week","()","<p>Returns the week start (e.g. :monday) for the current request, if this has\nbeen set (via Date.beginning_of_week= …\n",null,1],["beginning_of_week","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-beginning_of_week","(start_day = Date.beginning_of_week)","<p>Returns a new date/time representing the start of this week on the given\nday. Week is assumed to start …\n",null,1],["beginning_of_week=","Date","Rails/classes/Date.html#method-c-beginning_of_week-3D","(week_start)","<p>Sets <code>Date.beginning_of_week</code> to a week start (e.g. :monday) for\ncurrent request/thread.\n<p>This method accepts …\n",null,1],["beginning_of_year","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-beginning_of_year","()","<p>Return a new date/time at the beginning of the year. Example: 1st January.\nDateTime objects will have …\n",null,1],["begins?","Gem::Command","Ruby/classes/Gem/Command.html#method-i-begins-3F","(long, short)","<p>True if <code>long</code> begins with the characters from\n<code>short</code>.\n",null,0],["begx","Curses::Window","Ruby/classes/Curses/Window.html#method-i-begx","()","<p>A getter for the beginning column (X coord) of the window\n",null,0],["begy","Curses::Window","Ruby/classes/Curses/Window.html#method-i-begy","()","<p>A getter for the beginning line (Y coord) of the window\n",null,0],["behavior","ActiveSupport::Deprecation::Behavior","Rails/classes/ActiveSupport/Deprecation/Behavior.html#method-i-behavior","()","<p>Returns the current behavior or if one isn&#39;t set, defaults to\n<code>:stderr</code>.\n",null,1],["behavior=","ActiveSupport::Deprecation::Behavior","Rails/classes/ActiveSupport/Deprecation/Behavior.html#method-i-behavior-3D","(behavior)","<p>Sets the behavior to the specified value. Can be a single value, array, or\nan object that responds to …\n",null,1],["belongs_to","ActiveRecord::Associations::ClassMethods","Rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-belongs_to","(name, scope = nil, options = {})","<p>Specifies a one-to-one association with another class. This method should\nonly be used if this class …\n",null,1],["belongs_to","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-belongs_to","(*args)","",null,1],["belongs_to","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-belongs_to","(*args)","",null,1],["belongs_to?","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-i-belongs_to-3F","(group)","",null,1],["benchmark","Benchmark","Ruby/classes/Benchmark.html#method-c-benchmark","(caption = \"\", label_width = nil, format = nil, *labels)","<p>Invokes the block with a Benchmark::Report object, which may be used to\ncollect and report on the results …\n",null,0],["benchmark","ActiveSupport::Benchmarkable","Rails/classes/ActiveSupport/Benchmarkable.html#method-i-benchmark","(message = \"Benchmarking\", options = {})","<p>Allows you to measure the execution time of a block in a template and\nrecords the result to the log. …\n",null,1],["between?","Comparable","Ruby/classes/Comparable.html#method-i-between-3F","(p1, p2)","<p>Returns <code>false</code> if <em>obj</em> <code>&lt;=&gt;</code>\n<em>min</em> is less than zero or if <em>anObject</em>\n<code>&lt;=&gt;</code> <em>max</em> is greater than zero, …\n",null,0],["between?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-between-3F","(min, max)","<p>Returns true if the current object&#39;s time is within the specified\n<code>min</code> and <code>max</code> time.\n",null,1],["bin","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-bin","()","",null,1],["bin","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-bin","(force = false)","",null,1],["bin_dir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-bin_dir","()","<p>Returns the full path to installed gem&#39;s bin directory.\n<p>NOTE: do not confuse this with <code>bindir</code>, which …\n",null,0],["bin_file","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-bin_file","(name)","<p>Returns the full path to an executable named <code>name</code> in this gem.\n",null,0],["bin_path","Gem","Ruby/classes/Gem.html#method-c-bin_path","(name, exec_name = nil, *requirements)","<p>Find the full path to the executable for gem <code>name</code>.  If the\n<code>exec_name</code> is not given, the gem&#39;s default_executable …\n",null,0],["binary=","Net::FTP","Ruby/classes/Net/FTP.html#method-i-binary-3D","(newmode)","<p>A setter to toggle transfers in binary mode. <code>newmode</code> is either\n<code>true</code> or <code>false</code>\n",null,0],["binary?","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-binary-3F","(file)","<p>Determines if the file is a “binary” file which basically means it has\ncontent that an RDoc …\n",null,0],["binary_mode","Gem","Ruby/classes/Gem.html#method-c-binary_mode","()","<p>The mode needed to read a file as straight binary.\n",null,0],["bind","Addrinfo","Ruby/classes/Addrinfo.html#method-i-bind","()","<p>creates a socket bound to self.\n<p>If a block is given, it is called with the socket and the value of the …\n",null,0],["bind","DL::Function","Ruby/classes/DL/Function.html#method-i-bind","(&block)","",null,0],["bind","DL::Importer","Ruby/classes/DL/Importer.html#method-i-bind","(signature, *opts, &blk)","",null,0],["bind","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-bind","(cl)","",null,0],["bind","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-bind","(cl)","",null,0],["bind","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-bind","(signature, *opts, &blk)","<p>Creates a global method from the given C <code>signature</code> using the\ngiven <code>opts</code> as bind parameters with the given …\n",null,0],["bind","Socket","Ruby/classes/Socket.html#method-i-bind","(p1)","<p>Binds to the given local address.\n<p>Parameter\n<p><code>local_sockaddr</code> - the <code>struct</code> sockaddr contained in\na string …\n",null,0],["bind","UDPSocket","Ruby/classes/UDPSocket.html#method-i-bind","(p1, p2)","<p>Binds <em>udpsocket</em> to <em>host</em>:<em>port</em>.\n\n<pre><code>u1 = UDPSocket.new\nu1.bind(&quot;127.0.0.1&quot;, 4913)\nu1.send &quot;message-to-self&quot;, ...</code></pre>\n",null,0],["bind","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-bind","(p1)","<p>Bind <em>umeth</em> to <em>obj</em>. If <code>Klass</code> was the class\nfrom which <em>umeth</em> was obtained, <code>obj.kind_of?(Klass)</code>\nmust be …\n",null,0],["bind","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-bind","(value)","",null,1],["bind","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-i-bind","(context)","",null,1],["bind_at_call","DL::CarriedFunction","Ruby/classes/DL/CarriedFunction.html#method-i-bind_at_call","(&block)","",null,0],["bind_at_call","DL::Function","Ruby/classes/DL/Function.html#method-i-bind_at_call","(&block)","",null,0],["bind_at_call","DL::TempFunction","Ruby/classes/DL/TempFunction.html#method-i-bind_at_call","(&block)","",null,0],["bind_function","DL::Importer","Ruby/classes/DL/Importer.html#method-i-bind_function","(name, ctype, argtype, call_type = nil, &block)","",null,0],["bind_function","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-bind_function","(name, ctype, argtype, call_type = nil, &block)","<p>Returns a new closure wrapper for the <code>name</code> function.\n<p><code>ctype</code> is the return type of the function\n<p><code>argtype</code> is …\n",null,0],["binding","Kernel","Ruby/classes/Kernel.html#method-i-binding","()","<p>Returns a <code>Binding</code> object, describing the variable and method\nbindings at the point of call. This object …\n",null,0],["binding","Proc","Ruby/classes/Proc.html#method-i-binding","()","<p>Returns the binding associated with <em>prc</em>. Note that\n<code>Kernel#eval</code> accepts either a <code>Proc</code> or a\n<code>Binding</code> object …\n",null,0],["binding","TracePoint","Ruby/classes/TracePoint.html#method-i-binding","()","<p>Return the generated binding object from event\n",null,0],["bindir","Gem","Ruby/classes/Gem.html#method-c-bindir","(install_dir=Gem.dir)","<p>The path where gem executables are to be installed.\n",null,0],["binmode","ARGF","Ruby/classes/ARGF.html#method-i-binmode","()","<p>Puts <code>ARGF</code> into binary mode. Once a stream is in binary mode,\nit cannot be reset to non-binary mode.  …\n",null,0],["binmode","IO","Ruby/classes/IO.html#method-i-binmode","()","<p>Puts <em>ios</em> into binary mode. Once a stream is in binary mode, it\ncannot be reset to nonbinary mode.\n<p>newline …\n",null,0],["binmode","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-binmode","(mode = nil)","<p>Turn newline conversion on (<code>mode</code> == false) or off\n(<code>mode</code> == true), or return the current value (<code>mode</code>\nis …\n",null,0],["binmode","StringIO","Ruby/classes/StringIO.html#method-i-binmode","()","",null,0],["binmode=","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-binmode-3D","(mode)","<p>Turn newline conversion on (false) or off (true).\n",null,0],["binmode?","ARGF","Ruby/classes/ARGF.html#method-i-binmode-3F","()","\n<pre><code>Returns true if +ARGF+ is being read in binary mode; false otherwise. (To\nenable binary mode use +ARGF.binmode+.</code></pre>\n",null,0],["binmode?","IO","Ruby/classes/IO.html#method-i-binmode-3F","()","<p>Returns <code>true</code> if <em>ios</em> is binmode.\n",null,0],["binread","IO","Ruby/classes/IO.html#method-c-binread","(p1, p2 = v2, p3 = v3)","<p>Opens the file, optionally seeks to the given <em>offset</em>, then returns\n<em>length</em> bytes (defaulting to the rest …\n",null,0],["binread","Pathname","Ruby/classes/Pathname.html#method-i-binread","(p1 = v1, p2 = v2)","<p>Returns all the bytes from the file, or the first <code>N</code> if\nspecified.\n<p>See IO.binread.\n",null,0],["binwrite","IO","Ruby/classes/IO.html#method-c-binwrite","(*args)","<p>Same as <code>IO.write</code> except opening the file in binary mode and\nASCII-8BIT encoding (“wb:ASCII-8BIT”). …\n",null,0],["bit_set?","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-bit_set-3F","(p1)","",null,0],["bitmap_for","RDoc::Markup::Attributes","Ruby/classes/RDoc/Markup/Attributes.html#method-i-bitmap_for","(name)","<p>Returns a unique bit for <code>name</code>\n",null,0],["bkgd","Curses","Ruby/classes/Curses.html#method-c-bkgd","(p1)","<p>Window background manipulation routines.\n<p>Set the background property of the current and then apply the …\n",null,0],["bkgd","Curses::Window","Ruby/classes/Curses/Window.html#method-i-bkgd","(p1)","<p>Set the background of the current window and apply character Integer\n<code>ch</code> to every character.\n<p>see also  …\n",null,0],["bkgdset","Curses","Ruby/classes/Curses.html#method-c-bkgdset","(p1)","<p>Manipulate the background of the named window with character Integer\n<code>ch</code>\n<p>The background becomes a property …\n",null,0],["bkgdset","Curses::Window","Ruby/classes/Curses/Window.html#method-i-bkgdset","(p1)","<p>Manipulate the background of the current window with character Integer\n<code>ch</code>\n<p>see also Curses.bkgdset\n",null,0],["blank?","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-blank-3F","()","<p>aliases empty?\n",null,1],["blank?","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-blank-3F","()","<p>Returns true if relation is blank.\n",null,1],["blank?","FalseClass","Rails/classes/FalseClass.html#method-i-blank-3F","()","<p><code>false</code> is blank:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">false</span>.<span class=\"ruby-identifier\">blank?</span> <span class=\"ruby-comment\"># =&gt; true</span>\n</pre>\n",null,1],["blank?","NilClass","Rails/classes/NilClass.html#method-i-blank-3F","()","<p><code>nil</code> is blank:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">blank?</span> <span class=\"ruby-comment\"># =&gt; true</span>\n</pre>\n",null,1],["blank?","Object","Rails/classes/Object.html#method-i-blank-3F","()","<p>An object is blank if it&#39;s false, empty, or a whitespace string. For\nexample, &#39;&#39;, &#39;  …\n",null,1],["blank?","String","Rails/classes/String.html#method-i-blank-3F","()","<p>A string is blank if it&#39;s empty or contains whitespaces only:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;&#39;</span>.<span class=\"ruby-identifier\">blank?</span>                 <span class=\"ruby-comment\"># =&gt; true ...</span>\n</pre>\n",null,1],["blank?","TrueClass","Rails/classes/TrueClass.html#method-i-blank-3F","()","<p><code>true</code> is not blank:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">true</span>.<span class=\"ruby-identifier\">blank?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n</pre>\n",null,1],["blinding_off!","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-blinding_off-21","()","",null,0],["blinding_off!","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-blinding_off-21","()","",null,0],["blinding_on!","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-blinding_on-21","()","",null,0],["blinding_on!","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-blinding_on-21","()","",null,0],["blksize","File::Stat","Ruby/classes/File/Stat.html#method-i-blksize","()","<p>Returns the native file system&#39;s block size. Will return\n<code>nil</code> on platforms that don&#39;t support …\n",null,0],["block_format","ActionMailer::MailHelper","Rails/classes/ActionMailer/MailHelper.html#method-i-block_format","(text)","<p>Take the text and format it, indented two spaces for each line, and wrapped\nat 72 columns.\n",null,1],["block_given?","Kernel","Ruby/classes/Kernel.html#method-i-block_given-3F","()","<p>Returns <code>true</code> if <code>yield</code> would execute a block in\nthe current context. The <code>iterator?</code> form is mildly deprecated.\n…\n",null,0],["block_length","Digest::HMAC","Ruby/classes/Digest/HMAC.html#method-i-block_length","()","<p>Returns the block length in bytes of the hmac.\n",null,0],["block_length","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-block_length","()","<p>Returns the block length of the digest.\n<p>This method is overridden by each implementation subclass.\n",null,0],["block_length","OpenSSL::Digest","Ruby/classes/OpenSSL/Digest.html#method-i-block_length","()","<p>Returns the block length of the digest algorithm, i.e. the length in bytes\nof an individual block. Most …\n",null,0],["block_output_synchronize","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-block_output_synchronize","(&b)","",null,0],["block_params=","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-block_params-3D","(value)","<p>Attempts to sanitize the content passed by the ruby parser: remove outer\nparentheses, etc.\n",null,0],["block_scanf","String","Ruby/classes/String.html#method-i-block_scanf","(fstr)","<p>Scans the current string until the match is exhausted yielding each match\nas it is encountered in the …\n",null,0],["blockdev?","File","Ruby/classes/File.html#method-c-blockdev-3F","(p1)","<p>Returns <code>true</code> if the named file is a block device.\n<p><em>file_name</em> can be an IO object.\n",null,0],["blockdev?","File::Stat","Ruby/classes/File/Stat.html#method-i-blockdev-3F","()","<p>Returns <code>true</code> if the file is a block device, <code>false</code>\nif it isn&#39;t or if the operating system doesn&#39;t …\n",null,0],["blockdev?","FileTest","Ruby/classes/FileTest.html#method-i-blockdev-3F","(p1)","<p>Returns <code>true</code> if the named file is a block device.\n<p><em>file_name</em> can be an IO object.\n",null,0],["blockdev?","Pathname","Ruby/classes/Pathname.html#method-i-blockdev-3F","()","<p>See FileTest.blockdev?.\n",null,0],["blockquote","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-blockquote","(cite = {})","<p>Generate a BlockQuote element as a string.\n<p><code>cite</code> can either be a string, give the URI for the source of …\n",null,0],["blocks","File::Stat","Ruby/classes/File/Stat.html#method-i-blocks","()","<p>Returns the number of native file system blocks allocated for this file, or\n<code>nil</code> if the operating system …\n",null,0],["bm","Benchmark","Ruby/classes/Benchmark.html#method-c-bm","(label_width = 0, *labels)","<p>A simple interface to the #benchmark method, #bm is generates sequential\nreports with labels.  The parameters …\n",null,0],["bmbm","Benchmark","Ruby/classes/Benchmark.html#method-c-bmbm","(width = 0)","<p>Sometimes benchmark results are skewed because code executed earlier\nencounters different garbage collection …\n",null,0],["body","Net::HTTPResponse","Ruby/classes/Net/HTTPResponse.html#method-i-body","()","<p>Returns the full entity body.\n<p>Calling this method a second or subsequent time will return the string\nalready …\n",null,0],["body","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-body","()","<p>Returns the request body.\n",null,0],["body","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-body","()","<p>The request body is an IO input stream. If the RAW_POST_DATA environment\nvariable is already set, wrap …\n",null,1],["body","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-body","()","<p>Returns the content of the response as a string. This contains the contents\nof any calls to <code>render</code>.\n",null,1],["body","ActiveRecord::DynamicMatchers::Finder","Rails/classes/ActiveRecord/DynamicMatchers/Finder.html#method-i-body","()","<p>Extended in activerecord-deprecated_finders\n",null,1],["body","ActiveRecord::DynamicMatchers::Method","Rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-i-body","()","",null,1],["body=","Net::HTTPGenericRequest","Ruby/classes/Net/HTTPGenericRequest.html#method-i-body-3D","(str)","",null,0],["body=","Net::HTTPResponse","Ruby/classes/Net/HTTPResponse.html#method-i-body-3D","(value)","<p>Because it may be necessary to modify the body, Eg, decompression this\nmethod facilitates that.\n",null,0],["body=","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-body-3D","(body)","<p>Allows you to manually set or override the response body.\n",null,1],["body_exist?","Net::HTTPGenericRequest","Ruby/classes/Net/HTTPGenericRequest.html#method-i-body_exist-3F","()","",null,0],["body_parts","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-body_parts","()","",null,1],["body_permitted?","Net::HTTPResponse","Ruby/classes/Net/HTTPResponse.html#method-i-body_permitted-3F","()","<p>true if the response has a body.\n",null,0],["body_stream=","Net::HTTPGenericRequest","Ruby/classes/Net/HTTPGenericRequest.html#method-i-body_stream-3D","(input)","",null,0],["bool","Socket::Option","Ruby/classes/Socket/Option.html#method-i-bool","()","<p>Returns the data in <em>sockopt</em> as an boolean value.\n\n<pre><code>sockopt = Socket::Option.int(:INET, :SOCKET, :KEEPALIVE, ...</code></pre>\n",null,0],["bool","Socket::Option","Ruby/classes/Socket/Option.html#method-c-bool","(p1, p2, p3, p4)","<p>Creates a new Socket::Option object which contains boolean as data.\nActually 0 or 1 as int is used.\n\n<pre><code>p ...</code></pre>\n",null,0],["boolean","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-boolean","( object=nil )","<p>UNTESTED\n",null,0],["boolean","XMLRPC::Convert","Ruby/classes/XMLRPC/Convert.html#method-c-boolean","(str)","<p>Converts a String to <code>true</code> or <code>false</code>\n<p>Raises an exception if <code>str</code> is not <code>0</code> or\n<code>1</code>\n",null,0],["both?","Gem::LocalRemoteOptions","Ruby/classes/Gem/LocalRemoteOptions.html#method-i-both-3F","()","<p>Is fetching of local and remote information enabled?\n",null,0],["bottom","IRB::Frame","Ruby/classes/IRB/Frame.html#method-i-bottom","(n = 0)","<p>Returns the <code>n</code> number of frames on the call stack from the\nfirst frame initialized.\n<p>Raises FrameOverflow …\n",null,0],["bottom","IRB::Frame","Ruby/classes/IRB/Frame.html#method-c-bottom","(n = 0)","<p>Convenience method for Frame#bottom\n",null,0],["bound?","DL::Function","Ruby/classes/DL/Function.html#method-i-bound-3F","()","",null,0],["box","Curses::Window","Ruby/classes/Curses/Window.html#method-i-box","(p1, p2, p3 = v3)","<p>set the characters to frame the window in. The vertical <code>vert</code>\nand horizontal <code>hor</code> character.\n\n<pre><code>win = Curses::Window.new(5,5,5,5) ...</code></pre>\n",null,0],["break","PrettyPrint::Group","Ruby/classes/PrettyPrint/Group.html#method-i-break","()","",null,0],["break?","PrettyPrint::Group","Ruby/classes/PrettyPrint/Group.html#method-i-break-3F","()","",null,0],["break_on_newline","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-break_on_newline","","<p>Converts all newlines into hard breaks\n",null,0],["break_outmost_groups","PrettyPrint","Ruby/classes/PrettyPrint.html#method-i-break_outmost_groups","()","<p>Breaks the buffer into lines that are shorter than #maxwidth\n",null,0],["break_points","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-break_points","()","<p>Returns the list of break points where execution will be stopped.\n<p>See DEBUGGER__ for more useage\n",null,0],["breakable","PrettyPrint","Ruby/classes/PrettyPrint.html#method-i-breakable","(sep=' ', width=sep.length)","<p>This says “you can break a line here if necessary”, and a\n<code>width</code>-column text <code>sep</code> is inserted …\n",null,0],["breakable","PrettyPrint::SingleLine","Ruby/classes/PrettyPrint/SingleLine.html#method-i-breakable","(sep=' ', width=nil)","",null,0],["breakpoint","Kernel","Rails/classes/Kernel.html#method-i-breakpoint","()","",null,1],["broadcast","ConditionVariable","Ruby/classes/ConditionVariable.html#method-i-broadcast","()","<p>Wakes up all threads waiting for this lock.\n",null,0],["broadcast","MonitorMixin::ConditionVariable","Ruby/classes/MonitorMixin/ConditionVariable.html#method-i-broadcast","()","<p>Wakes up all threads waiting for this lock.\n",null,0],["browser_generated_types","Mime::Type","Rails/classes/Mime/Type.html#method-c-browser_generated_types","()","",null,1],["bsearch","Array","Ruby/classes/Array.html#method-i-bsearch","()","<p>By using binary search, finds a value from this array which meets the given\ncondition in O(log n) where …\n",null,0],["bsearch","Range","Ruby/classes/Range.html#method-i-bsearch","()","<p>By using binary search, finds a value in range which meets the given\ncondition in O(log n) where n is …\n",null,0],["bufferSize","Win32::SSPI::SecurityBuffer","Ruby/classes/Win32/SSPI/SecurityBuffer.html#method-i-bufferSize","()","",null,0],["bufferType","Win32::SSPI::SecurityBuffer","Ruby/classes/Win32/SSPI/SecurityBuffer.html#method-i-bufferType","()","",null,0],["build","Gem::Commands::CertCommand","Ruby/classes/Gem/Commands/CertCommand.html#method-i-build","(name)","",null,0],["build","Gem::Ext::CmakeBuilder","Ruby/classes/Gem/Ext/CmakeBuilder.html#method-c-build","(extension, directory, dest_path, results)","",null,0],["build","Gem::Ext::ConfigureBuilder","Ruby/classes/Gem/Ext/ConfigureBuilder.html#method-c-build","(extension, directory, dest_path, results, args=[])","",null,0],["build","Gem::Ext::ExtConfBuilder","Ruby/classes/Gem/Ext/ExtConfBuilder.html#method-c-build","(extension, directory, dest_path, results, args=[])","",null,0],["build","Gem::Ext::RakeBuilder","Ruby/classes/Gem/Ext/RakeBuilder.html#method-c-build","(extension, directory, dest_path, results, args=[])","",null,0],["build","Gem::Package","Ruby/classes/Gem/Package.html#method-i-build","(skip_validation = false)","<p>Builds this package based on the specification set by #spec=\n",null,0],["build","Gem::Package","Ruby/classes/Gem/Package.html#method-c-build","(spec, skip_validation=false)","",null,0],["build","Matrix","Ruby/classes/Matrix.html#method-c-build","(row_count, column_count = row_count)","<p>Creates a matrix of size <code>row_count</code> x\n<code>column_count</code>. It fills the values by calling the given block,\npassing …\n",null,0],["build","URI::FTP","Ruby/classes/URI/FTP.html#method-c-build","(args)","<p>Description\n<p>Creates a new URI::FTP object from components, with syntax checking.\n<p>The components accepted …\n",null,0],["build","URI::Generic","Ruby/classes/URI/Generic.html#method-c-build","(args)","<p>Synopsis\n<p>See #new\n<p>Description\n",null,0],["build","URI::HTTP","Ruby/classes/URI/HTTP.html#method-c-build","(args)","<p>Description\n<p>Create a new URI::HTTP object from components, with syntax checking.\n<p>The components accepted …\n",null,0],["build","URI::LDAP","Ruby/classes/URI/LDAP.html#method-c-build","(args)","<p>Description\n<p>Create a new URI::LDAP object from components, with syntax checking.\n<p>The components accepted …\n",null,0],["build","URI::MailTo","Ruby/classes/URI/MailTo.html#method-c-build","(args)","<p>Description\n<p>Creates a new URI::MailTo object from components, with syntax checking.\n<p>Components can be provided …\n",null,0],["build","ActionController::Middleware","Rails/classes/ActionController/Middleware.html#method-c-build","(app)","",null,1],["build","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-build","(app = nil, &block)","",null,1],["build","ActionDispatch::MiddlewareStack::Middleware","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-build","(app)","",null,1],["build","ActionView::Resolver::Path","Rails/classes/ActionView/Resolver/Path.html#method-c-build","(name, prefix, partial)","",null,1],["build","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-build","(attributes = {}, &block)","<p>Returns a new object of the collection type that has been instantiated with\n<code>attributes</code> and linked to …\n",null,1],["build","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-build","(*args, &block)","",null,1],["build","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-c-build","(klass, params=nil)","<p>GET new POST create\n",null,1],["build2","URI::Generic","Ruby/classes/URI/Generic.html#method-c-build2","(args)","<p>Synopsis\n<p>See #new\n<p>Description\n",null,0],["build_arel","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-build_arel","()","<p>Like #arel, but ignores the default scope of the model.\n",null,1],["build_args","Gem::Command","Ruby/classes/Gem/Command.html#method-c-build_args","()","<p>Arguments used when building gems\n",null,0],["build_args","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-build_args","()","<p>Returns the build_args used to install the gem\n",null,0],["build_args=","Gem::Command","Ruby/classes/Gem/Command.html#method-c-build_args-3D","(value)","",null,0],["build_extensions","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-build_extensions","()","<p>Builds extensions.  Valid types of extensions are extconf.rb files,\nconfigure scripts and rakefiles or …\n",null,0],["build_heading","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-build_heading","(level)","<p>Builds a Heading of <code>level</code>\n",null,0],["build_heading","RDoc::TomDoc","Ruby/classes/RDoc/TomDoc.html#method-i-build_heading","(level)","<p>Builds a heading from the token stream\n<p>level &mdash; The level of heading to create\n\n<p>Returns\n",null,0],["build_index","RDoc::Generator::JsonIndex","Ruby/classes/RDoc/Generator/JsonIndex.html#method-i-build_index","()","<p>Builds the JSON index as a Hash.\n",null,0],["build_indicies","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-build_indicies","()","<p>Build various indicies\n",null,0],["build_info_dir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-build_info_dir","()","<p>Returns the full path to the build info directory\n",null,0],["build_info_file","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-build_info_file","()","<p>Returns the full path to the file containing the build information\ngenerated when the gem was installed …\n",null,0],["build_list","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-build_list","(margin)","<p>Builds a List flush to <code>margin</code>\n",null,0],["build_marshal_gemspecs","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-build_marshal_gemspecs","()","<p>Builds Marshal quick index gemspecs.\n",null,0],["build_mem_cache","ActiveSupport::Cache::MemCacheStore","Rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-c-build_mem_cache","(*addresses)","",null,1],["build_modern_index","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-build_modern_index","(index, file, name)","<p>Build a single index for RubyGems 1.2 and newer\n",null,0],["build_modern_indicies","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-build_modern_indicies","()","<p>Builds indicies for RubyGems 1.2 and newer. Handles full, latest,\nprerelease\n",null,0],["build_paragraph","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-build_paragraph","(margin)","<p>Builds a Paragraph that is flush to <code>margin</code>\n",null,0],["build_paragraph","RDoc::TomDoc","Ruby/classes/RDoc/TomDoc.html#method-i-build_paragraph","(margin)","<p>Builds a paragraph from the token stream\n<p>margin &mdash; Unused\n\n<p>Returns\n",null,0],["build_verbatim","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-build_verbatim","(margin)","<p>Builds a Verbatim that is indented from <code>margin</code>.\n<p>The verbatim block is shifted left (the least indented …\n",null,0],["build_verbatim","RDoc::TomDoc","Ruby/classes/RDoc/TomDoc.html#method-i-build_verbatim","(margin)","<p>Builds a verbatim from the token stream.  A verbatim in the Examples\nsection will be marked as in ruby …\n",null,0],["builtin_curves","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-c-builtin_curves","()","<p>See the OpenSSL documentation for EC_builtin_curves()\n",null,0],["bump","Gem::Version","Ruby/classes/Gem/Version.html#method-i-bump","()","<p>Return a new version object where the next to the last revision number is\none greater (e.g., 5.3.1 =&gt; …\n",null,0],["button","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-button","(value = nil, options = {}, &block)","<p>Add the submit button for the given form. When no value is given, it checks\nif the object is a new resource …\n",null,1],["button_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-button_tag","(content_or_options = nil, options = nil, &block)","<p>Creates a button element that defines a <code>submit</code> button,\n<code>reset</code>button or a generic button which can be used …\n",null,1],["button_to","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-button_to","(name = nil, options = nil, html_options = nil, &block)","<p>Generates a form containing a single button that submits to the URL created\nby the set of <code>options</code>. This …\n",null,1],["button_to_function","ActionView::Helpers::JavaScriptHelper","Rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-button_to_function","(name, function=nil, html_options={})","<p>Returns a button whose <code>onclick</code> handler triggers the passed\nJavaScript.\n<p>The helper receives a name, JavaScript …\n",null,1],["by_col","CSV::Table","Ruby/classes/CSV/Table.html#method-i-by_col","()","<p>Returns a duplicate table object, in column mode.  This is handy for\nchaining in a single call without …\n",null,0],["by_col!","CSV::Table","Ruby/classes/CSV/Table.html#method-i-by_col-21","()","<p>Switches the mode of this table to column mode.  All calls to indexing and\niteration methods will work …\n",null,0],["by_col_or_row","CSV::Table","Ruby/classes/CSV/Table.html#method-i-by_col_or_row","()","<p>Returns a duplicate table object, in mixed mode.  This is handy for\nchaining in a single call without …\n",null,0],["by_col_or_row!","CSV::Table","Ruby/classes/CSV/Table.html#method-i-by_col_or_row-21","()","<p>Switches the mode of this table to mixed mode.  All calls to indexing and\niteration methods will use …\n",null,0],["by_id","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-c-by_id","(p1)","",null,0],["by_row","CSV::Table","Ruby/classes/CSV/Table.html#method-i-by_row","()","<p>Returns a duplicate table object, in row mode.  This is handy for chaining\nin a single call without changing …\n",null,0],["by_row!","CSV::Table","Ruby/classes/CSV/Table.html#method-i-by_row-21","()","<p>Switches the mode of this table to row mode.  All calls to indexing and\niteration methods will work with …\n",null,0],["byte","Numeric","Rails/classes/Numeric.html#method-i-byte","()","",null,1],["bytes","ARGF","Ruby/classes/ARGF.html#method-i-bytes","()","<p>This is a deprecated alias for <code>each_byte</code>.\n",null,0],["bytes","IO","Ruby/classes/IO.html#method-i-bytes","()","<p>This is a deprecated alias for <code>each_byte</code>.\n",null,0],["bytes","REXML::Child","Ruby/classes/REXML/Child.html#method-i-bytes","()","<p>This doesn&#39;t yet handle encodings\n",null,0],["bytes","Random","Ruby/classes/Random.html#method-i-bytes","(p1)","<p>Returns a random binary string containing <code>size</code> bytes.\n\n<pre><code>random_string = Random.new.bytes(10) # =&gt; &quot;\\xD7:R\\xAB?\\x83\\xCE\\xFAkO&quot; ...\n</code></pre>\n",null,0],["bytes","String","Ruby/classes/String.html#method-i-bytes","()","<p>Returns an array of bytes in <em>str</em>.  This is a shorthand for\n<code>str.each_byte.to_a</code>.\n<p>If a block is given, which …\n",null,0],["bytes","StringIO","Ruby/classes/StringIO.html#method-i-bytes","()","<p>This is a deprecated alias for <code>each_byte</code>.\n",null,0],["bytes","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-bytes","()","<p>This is a deprecated alias for <code>each_byte</code>.\n",null,0],["bytes","Numeric","Rails/classes/Numeric.html#method-i-bytes","()","<p>Enables the use of byte calculations and declarations, like 45.bytes +\n2.6.megabytes\n",null,1],["bytes_read","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-bytes_read","()","<p>Number of bytes read out of the tar entry\n",null,0],["bytesize","String","Ruby/classes/String.html#method-i-bytesize","()","<p>Returns the length of <code>str</code> in bytes.\n\n<pre><code>&quot;\\x80\\u3042&quot;.bytesize  #=&gt; 4\n&quot;hello&quot;.bytesize       #=&gt; 5\n</code></pre>\n",null,0],["byteslice","String","Ruby/classes/String.html#method-i-byteslice","(*args)","<p>Byte Reference—If passed a single <code>Fixnum</code>, returns a substring\nof one byte at that position. If passed …\n",null,0],["cache","Prime::TrialDivision","Ruby/classes/Prime/TrialDivision.html#method-i-cache","()","<p>Returns the cached prime numbers.\n",null,0],["cache","ActionController::Caching","Rails/classes/ActionController/Caching.html#method-i-cache","(key, options = {}, &block)","<p>Convenience accessor.\n",null,1],["cache","ActionView::Helpers::CacheHelper","Rails/classes/ActionView/Helpers/CacheHelper.html#method-i-cache","(name = {}, options = nil, &block)","<p>This helper exposes a method for caching fragments of a view rather than an\nentire action or page. This …\n",null,1],["cache","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-cache","()","<p>Enable the query cache within the block.\n",null,1],["cache","ActiveRecord::QueryCache::ClassMethods","Rails/classes/ActiveRecord/QueryCache/ClassMethods.html#method-i-cache","(&block)","<p>Enable the query cache within the block if Active Record is configured. If\nit&#39;s not, it will execute …\n",null,1],["cache_attribute?","ActiveRecord::AttributeMethods::Read::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-cache_attribute-3F","(attr_name)","<p>Returns <code>true</code> if the provided attribute is being cached.\n",null,1],["cache_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-cache_attributes","(*attribute_names)","<p><code>cache_attributes</code> allows you to declare which converted\nattribute values should be cached. Usually caching …\n",null,1],["cache_dir","Gem::Source","Ruby/classes/Gem/Source.html#method-i-cache_dir","(uri)","<p>Returns the local directory to write <code>uri</code> to.\n",null,0],["cache_dir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-cache_dir","()","<p>Returns the full path to the cache directory containing this spec&#39;s\ncached gem.\n",null,0],["cache_file","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-cache_file","()","<p>Returns the full path to the cached gem for this spec.\n",null,0],["cache_fixtures","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-c-cache_fixtures","(connection, fixtures_map)","",null,1],["cache_for_connection","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-c-cache_for_connection","(connection)","",null,1],["cache_fragment_name","ActionView::Helpers::CacheHelper","Rails/classes/ActionView/Helpers/CacheHelper.html#method-i-cache_fragment_name","(name = {}, options = nil)","<p>This helper returns the name of a cache key for a given fragment cache\ncall. By supplying skip_digest …\n",null,1],["cache_if","ActionView::Helpers::CacheHelper","Rails/classes/ActionView/Helpers/CacheHelper.html#method-i-cache_if","(condition, name = {}, options = nil, &block)","<p>Cache fragments of a view if <code>condition</code> is true\n\n<pre>&lt;%= cache_if admin?, project do %&gt;\n  &lt;b&gt;All the topics ...</pre>\n",null,1],["cache_key","ActiveRecord::Integration","Rails/classes/ActiveRecord/Integration.html#method-i-cache_key","()","<p>Returns a cache key that can be used to identify this record.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Product</span>.<span class=\"ruby-identifier\">new</span>.<span class=\"ruby-identifier\">cache_key</span>     <span class=\"ruby-comment\"># =&gt; &quot;products/new&quot; ...</span>\n</pre>\n",null,1],["cache_path","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-cache_path","()","<p>Path to the cache file\n",null,0],["cache_store","ActionController::Caching::ConfigMethods","Rails/classes/ActionController/Caching/ConfigMethods.html#method-i-cache_store","()","",null,1],["cache_store=","ActionController::Caching::ConfigMethods","Rails/classes/ActionController/Caching/ConfigMethods.html#method-i-cache_store-3D","(store)","",null,1],["cache_template_loading","ActionView::Base","Rails/classes/ActionView/Base.html#method-c-cache_template_loading","()","",null,1],["cache_template_loading=","ActionView::Base","Rails/classes/ActionView/Base.html#method-c-cache_template_loading-3D","(value)","",null,1],["cache_unless","ActionView::Helpers::CacheHelper","Rails/classes/ActionView/Helpers/CacheHelper.html#method-i-cache_unless","(condition, name = {}, options = nil, &block)","<p>Cache fragments of a view unless <code>condition</code> is true\n\n<pre>&lt;%= cache_unless admin?, project do %&gt;\n  &lt;b&gt;All the ...</pre>\n",null,1],["cache_update_path","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-cache_update_path","(uri, path = nil, update = true)","<p>Downloads <code>uri</code> to <code>path</code> if necessary. If no path is\ngiven, it just passes the data.\n",null,0],["cached_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-cached_attributes","()","<p>Returns the attributes which are cached. By default time related columns\nwith datatype <code>:datetime, :timestamp,</code> …\n",null,1],["cached_fixtures","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-c-cached_fixtures","(connection, keys_to_fetch = nil)","",null,1],["cached_size","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-cached_size","(key, entry)","",null,1],["cachesize=","GDBM","Ruby/classes/GDBM.html#method-i-cachesize-3D","(p1)","<p>Sets the size of the internal bucket cache to <em>size</em>.\n",null,0],["calculate","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-calculate","()","<p>Calculates documentation totals and percentages for classes, modules,\nconstants, attributes and methods. …\n",null,0],["calculate","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-calculate","(operation, column_name, options = {})","<p>This calculates aggregate values in the given column. Methods for count,\nsum, average, minimum, and maximum …\n",null,1],["calculate_ip","ActionDispatch::RemoteIp::GetIp","Rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-calculate_ip","()","<p>Sort through the various IP address headers, looking for the IP most likely\nto be the address of the …\n",null,1],["call","Continuation","Ruby/classes/Continuation.html#method-i-call","(*args)","<p>Invokes the continuation. The program continues from the end of the\n<code>callcc</code> block. If no arguments are …\n",null,0],["call","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-call","(p1)","<p>Calls the function pointer passing in <code>ary</code> as values to the\nunderlying C function.  The return value depends …\n",null,0],["call","DL::Function","Ruby/classes/DL/Function.html#method-i-call","(*args, &block)","",null,0],["call","Fiddle::Closure::BlockCaller","Ruby/classes/Fiddle/Closure/BlockCaller.html#method-i-call","(*args)","<p>Calls the constructed BlockCaller, with <code>args</code>\n<p>For an example see Fiddle::Closure::BlockCaller.new\n",null,0],["call","Fiddle::Function","Ruby/classes/Fiddle/Function.html#method-i-call","(*args)","<p>Calls the constructed Function, with <code>args</code>\n<p>For an example see Fiddle::Function\n",null,0],["call","Logger::Formatter","Ruby/classes/Logger/Formatter.html#method-i-call","(severity, time, progname, msg)","",null,0],["call","Method","Ruby/classes/Method.html#method-i-call","(*args)","<p>Invokes the <em>meth</em> with the specified arguments, returning the\nmethod&#39;s return value.\n\n<pre><code>m = 12.method(&quot;+&quot;) ...</code></pre>\n",null,0],["call","Proc","Ruby/classes/Proc.html#method-i-call","(*args)","<p>Invokes the block, setting the block&#39;s parameters to the values in\n<em>params</em> using something close to …\n",null,0],["call","Syslog::Logger::Formatter","Ruby/classes/Syslog/Logger/Formatter.html#method-i-call","(severity, time, progname, msg)","",null,0],["call","Win32API","Ruby/classes/Win32API.html#method-i-call","(*args)","",null,0],["call","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-call","(method, *args)","<p>Invokes the method named <code>method</code> with the parameters given by\n<code>args</code> on the XML-RPC server.\n<p>The <code>method</code> parameter …\n",null,0],["call","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-call","(env)","<p>Makes the controller a Rack endpoint that runs the action in the given\n<code>env</code>&#39;s <code>action_dispatch.request.path_parameters</code>\n…\n",null,1],["call","ActionController::Middleware::ActionMiddleware","Rails/classes/ActionController/Middleware/ActionMiddleware.html#method-i-call","(env)","",null,1],["call","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-c-call","(*args)","<p>Initializes a new responder an invoke the proper format. If the format is\nnot defined, call to_format. …\n",null,1],["call","ActionDispatch::Callbacks","Rails/classes/ActionDispatch/Callbacks.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Cookies","Rails/classes/ActionDispatch/Cookies.html#method-i-call","(env)","",null,1],["call","ActionDispatch::DebugExceptions","Rails/classes/ActionDispatch/DebugExceptions.html#method-i-call","(env)","",null,1],["call","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Flash","Rails/classes/ActionDispatch/Flash.html#method-i-call","(env)","",null,1],["call","ActionDispatch::ParamsParser","Rails/classes/ActionDispatch/ParamsParser.html#method-i-call","(env)","",null,1],["call","ActionDispatch::PublicExceptions","Rails/classes/ActionDispatch/PublicExceptions.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-i-call","(env)","",null,1],["call","ActionDispatch::RemoteIp","Rails/classes/ActionDispatch/RemoteIp.html#method-i-call","(env)","<p>Since the IP address may not be needed, we store the object here without\ncalculating the IP to keep from …\n",null,1],["call","ActionDispatch::RequestId","Rails/classes/ActionDispatch/RequestId.html#method-i-call","(env)","",null,1],["call","ActionDispatch::SSL","Rails/classes/ActionDispatch/SSL.html#method-i-call","(env)","",null,1],["call","ActionDispatch::ShowExceptions","Rails/classes/ActionDispatch/ShowExceptions.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Static","Rails/classes/ActionDispatch/Static.html#method-i-call","(env)","",null,1],["call","ActionView::DependencyTracker::ERBTracker","Rails/classes/ActionView/DependencyTracker/ERBTracker.html#method-c-call","(name, template)","",null,1],["call","ActionView::Template::Handlers::Builder","Rails/classes/ActionView/Template/Handlers/Builder.html#method-i-call","(template)","",null,1],["call","ActionView::Template::Handlers::ERB","Rails/classes/ActionView/Template/Handlers/ERB.html#method-c-call","(template)","",null,1],["call","ActionView::Template::Handlers::ERB","Rails/classes/ActionView/Template/Handlers/ERB.html#method-i-call","(template)","",null,1],["call","ActionView::Template::Handlers::Raw","Rails/classes/ActionView/Template/Handlers/Raw.html#method-i-call","(template)","",null,1],["call","ActiveRecord::ConnectionAdapters::ConnectionManagement","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html#method-i-call","(env)","",null,1],["call","ActiveRecord::Migration::CheckPending","Rails/classes/ActiveRecord/Migration/CheckPending.html#method-i-call","(env)","",null,1],["call","ActiveRecord::QueryCache","Rails/classes/ActiveRecord/QueryCache.html#method-i-call","(env)","",null,1],["call","ActiveSupport::Logger::SimpleFormatter","Rails/classes/ActiveSupport/Logger/SimpleFormatter.html#method-i-call","(severity, timestamp, progname, msg)","<p>This method is invoked when a log event occurs\n",null,1],["call","Logger::SimpleFormatter","Rails/classes/Logger/SimpleFormatter.html#method-i-call","(severity, timestamp, progname, msg)","<p>This method is invoked when a log event occurs\n",null,1],["call","Rails::Application","Rails/classes/Rails/Application.html#method-i-call","(env)","<p>Implements call according to the Rack API. It simply dispatches the request\nto the underlying middleware …\n",null,1],["call","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-call","(env)","<p>Define the Rack API for this engine.\n",null,1],["call","Rails::Rack::Debugger","Rails/classes/Rails/Rack/Debugger.html#method-i-call","(env)","",null,1],["call","Rails::Rack::LogTailer","Rails/classes/Rails/Rack/LogTailer.html#method-i-call","(env)","",null,1],["call","Rails::Rack::Logger","Rails/classes/Rails/Rack/Logger.html#method-i-call","(env)","",null,1],["call2","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-call2","(method, *args)","<p>The difference between this method and XMLRPC::Client#call is, that this\nmethod will <strong>NOT</strong> raise a XMLRPC::FaultException …\n",null,0],["call2_async","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-call2_async","(method, *args)","<p>Same as XMLRPC::Client#call2, but can be called concurrently.\n<p>See also XMLRPC::Client#call_async\n",null,0],["call_app","Rails::Rack::Logger","Rails/classes/Rails/Rack/Logger.html#method-i-call_app","(request, env)","",null,1],["call_async","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-call_async","(method, *args)","<p>Similar to XMLRPC::Client#call, however can be called concurrently and use\na new connection for each …\n",null,0],["callcc","Kernel","Ruby/classes/Kernel.html#method-i-callcc","()","<p>Generates a Continuation object, which it passes to the associated block.\nYou need to <code>require &#39;continuation&#39;</code> …\n",null,0],["caller","Kernel","Ruby/classes/Kernel.html#method-i-caller","(*args)","<p>Returns the current execution stack—an array containing strings in the form\n<code>file:line</code> or <code>file:line:</code> …\n",null,0],["caller_locations","Kernel","Ruby/classes/Kernel.html#method-i-caller_locations","(*args)","<p>Returns the current execution stack—an array containing backtrace location\nobjects.\n<p>See Thread::Backtrace::Location …\n",null,0],["calling_methods","","Ruby/files/ruby/doc/syntax/calling_methods_rdoc.html","","<p>Calling Methods\n<p>Calling a method sends a message to an object so it can perform some work.\n<p>In ruby you …\n",null,0],["calltype","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-calltype","()","<p>Get the call type of this function.\n",null,0],["calltype=","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-calltype-3D","(p1)","<p>Set the call type for this function.\n",null,0],["camelcase","String","Rails/classes/String.html#method-i-camelcase","(first_letter = :upper)","",null,1],["camelize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-camelize","(term, uppercase_first_letter = true)","<p>By default, <code>camelize</code> converts strings to UpperCamelCase. If\nthe argument to <code>camelize</code> is set to <code>:lower</code> …\n",null,1],["camelize","String","Rails/classes/String.html#method-i-camelize","(first_letter = :upper)","<p>By default, <code>camelize</code> converts strings to UpperCamelCase. If\nthe argument to camelize is set to <code>:lower</code> …\n",null,1],["can_change_color?","Curses","Ruby/classes/Curses.html#method-c-can_change_color-3F","()","<p>Returns <code>true</code> or <code>false</code> depending on whether the\nterminal can change color attributes\n",null,0],["can_parse","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-can_parse","(file_name)","<p>Return a parser that can handle a particular extension\n",null,0],["can_parse_by_name","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-can_parse_by_name","(file_name)","<p>Returns a parser that can handle the extension for <code>file_name</code>. \nThis does not depend upon the file being …\n",null,0],["cancel","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-cancel","()","<p>Marks this TupleEntry as canceled.\n",null,0],["cancel","Rinda::WaitTemplateEntry","Ruby/classes/Rinda/WaitTemplateEntry.html#method-i-cancel","()","",null,0],["cancel","WEBrick::Utils::TimeoutHandler","Ruby/classes/WEBrick/Utils/TimeoutHandler.html#method-c-cancel","(id)","<p>Cancels the timeout handler <code>id</code>\n",null,0],["cancel","WEBrick::Utils::TimeoutHandler","Ruby/classes/WEBrick/Utils/TimeoutHandler.html#method-i-cancel","(thread, id)","<p>Cancels the timeout handler <code>id</code>\n",null,0],["canceled?","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-canceled-3F","()","<p>Returns the canceled status.\n",null,0],["candidate","OptionParser","Ruby/classes/OptionParser.html#method-i-candidate","(word)","",null,0],["candidate","OptionParser::Completion","Ruby/classes/OptionParser/Completion.html#method-c-candidate","(key, icase = false, pat = nil, &block)","",null,0],["candidate","OptionParser::Completion","Ruby/classes/OptionParser/Completion.html#method-i-candidate","(key, icase = false, pat = nil)","",null,0],["canonical_each","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-canonical_each","()","",null,0],["canonname","Addrinfo","Ruby/classes/Addrinfo.html#method-i-canonname","()","<p>returns the canonical name as an string.\n<p>nil is returned if no canonical name.\n<p>The canonical name is set …\n",null,0],["capabilities","Net::SMTP::Response","Ruby/classes/Net/SMTP/Response.html#method-i-capabilities","()","<p>Returns a hash of the human readable reply text in the response if it is\nmultiple lines. It does not …\n",null,0],["capability","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-capability","()","<p>Sends a CAPABILITY command, and returns an array of capabilities that the\nserver supports.  Each capability …\n",null,0],["capable_auth_types","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-capable_auth_types","()","<p>Returns supported authentication methods on this server. You cannot get\nvalid value before opening SMTP …\n",null,0],["capable_cram_md5_auth?","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-capable_cram_md5_auth-3F","()","<p>true if server advertises AUTH CRAM-MD5. You cannot get valid value before\nopening SMTP session.\n",null,0],["capable_login_auth?","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-capable_login_auth-3F","()","<p>true if server advertises AUTH LOGIN. You cannot get valid value before\nopening SMTP session.\n",null,0],["capable_plain_auth?","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-capable_plain_auth-3F","()","<p>true if server advertises AUTH PLAIN. You cannot get valid value before\nopening SMTP session.\n",null,0],["capable_starttls?","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-capable_starttls-3F","()","<p>true if server advertises STARTTLS. You cannot get valid value before\nopening SMTP session.\n",null,0],["capify!","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-capify-21","()","<p>Just run the capify command in root\n\n<pre>capify!</pre>\n",null,1],["capitalize","String","Ruby/classes/String.html#method-i-capitalize","()","<p>Returns a copy of <em>str</em> with the first character converted to\nuppercase and the remainder to lowercase. …\n",null,0],["capitalize","Symbol","Ruby/classes/Symbol.html#method-i-capitalize","()","<p>Same as <code>sym.to_s.capitalize.intern</code>.\n",null,0],["capitalize","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-capitalize","()","<p>Converts the first character to uppercase and the remainder to lowercase.\n\n<pre>&#39;über&#39;.mb_chars.capitalize.to_s ...</pre>\n",null,1],["capitalize!","String","Ruby/classes/String.html#method-i-capitalize-21","()","<p>Modifies <em>str</em> by converting the first character to uppercase and\nthe remainder to lowercase. Returns  …\n",null,0],["caption","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-caption","(align = {})","<p>Generate a Table Caption element as a string.\n<p><code>align</code> can be a string, giving the alignment of the caption …\n",null,0],["capture","ActionView::Helpers::CaptureHelper","Rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-capture","(*args)","<p>The capture method allows you to extract part of a template into a\nvariable. You can then use this variable …\n",null,1],["capture","Kernel","Rails/classes/Kernel.html#method-i-capture","(stream)","<p>Captures the given stream and returns it:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">stream</span> = <span class=\"ruby-identifier\">capture</span>(:<span class=\"ruby-identifier\">stdout</span>) { <span class=\"ruby-identifier\">puts</span> <span class=\"ruby-string\">&#39;notice&#39;</span> }\n<span class=\"ruby-identifier\">stream</span> <span class=\"ruby-comment\"># =&gt; &quot;notice\\n&quot; ...</span>\n</pre>\n",null,1],["capture2","Open3","Ruby/classes/Open3.html#method-c-capture2","(*cmd)","<p>Open3.capture2 captures the standard output of a command.\n\n<pre><code>stdout_str, status = Open3.capture2([env,] cmd... ...</code></pre>\n",null,0],["capture2e","Open3","Ruby/classes/Open3.html#method-c-capture2e","(*cmd)","<p>Open3.capture2e captures the standard output and the standard error of a\ncommand.\n\n<pre><code>stdout_and_stderr_str, ...</code></pre>\n",null,0],["capture3","Open3","Ruby/classes/Open3.html#method-c-capture3","(*cmd)","<p>Open3.capture3 captures the standard output and the standard error of a\ncommand.\n\n<pre><code>stdout_str, stderr_str, ...</code></pre>\n",null,0],["captures","MatchData","Ruby/classes/MatchData.html#method-i-captures","()","<p>Returns the array of captures; equivalent to <code>mtch.to_a[1..-1]</code>.\n\n<pre><code>f1,f2,f3,f4 = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;).captures ...</code></pre>\n",null,0],["case_insensitive_comparison","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-case_insensitive_comparison","(table, attribute, column, value)","",null,1],["case_insensitive_comparison","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-case_insensitive_comparison","(table, attribute, column, value)","",null,1],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-case_sensitive_equality_operator","()","",null,1],["case_sensitive_modifier","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-case_sensitive_modifier","(node)","",null,1],["case_sensitive_modifier","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-case_sensitive_modifier","(node)","",null,1],["casecmp","String","Ruby/classes/String.html#method-i-casecmp","(p1)","<p>Case-insensitive version of <code>String#&lt;=&gt;</code>.\n\n<pre><code>&quot;abcdef&quot;.casecmp(&quot;abcde&quot;)     #=&gt; 1\n&quot;aBcDeF&quot;.casecmp(&quot;abcdef&quot;) ...\n</code></pre>\n",null,0],["casecmp","Symbol","Ruby/classes/Symbol.html#method-i-casecmp","(p1)","<p>Case-insensitive version of <code>Symbol#&lt;=&gt;</code>.\n",null,0],["casefold?","Regexp","Ruby/classes/Regexp.html#method-i-casefold-3F","()","<p>Returns the value of the case-insensitive flag.\n\n<pre><code>/a/.casefold?           #=&gt; false\n/a/i.casefold?      ...\n</code></pre>\n",null,0],["cat","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-cat","(*filenames)","<p>Returns a Cat object, for the given <code>filenames</code>\n",null,0],["catch","Kernel","Ruby/classes/Kernel.html#method-i-catch","(p1 = v1)","<p><code>catch</code> executes its block. If a <code>throw</code> is executed,\nRuby searches up its stack for a <code>catch</code> block with a …\n",null,0],["cattr_accessor","Class","Rails/classes/Class.html#method-i-cattr_accessor","(*syms, &blk)","<p>Defines both class and instance accessors for class attributes.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">cattr_accessor</span> :<span class=\"ruby-identifier\">hair_colors</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["cattr_reader","Class","Rails/classes/Class.html#method-i-cattr_reader","(*syms)","<p>Defines a class attribute if it&#39;s not defined and creates a reader\nmethod that returns the attribute …\n",null,1],["cattr_writer","Class","Rails/classes/Class.html#method-i-cattr_writer","(*syms)","<p>Defines a class attribute if it&#39;s not defined and creates a writer\nmethod to allow assignment to …\n",null,1],["cbreak","Curses","Ruby/classes/Curses.html#method-c-cbreak","()","<p>Put the terminal into cbreak mode.\n<p>Normally, the tty driver buffers typed characters until a newline or …\n",null,0],["cbrt","CMath","Ruby/classes/CMath.html#method-c-cbrt","(z)","<p>returns the principal value of the cube root of <code>z</code>\n",null,0],["cbrt","Math","Ruby/classes/Math.html#method-c-cbrt","(p1)","<p>Returns the cube root of <em>numeric</em>.\n\n<pre><code>-9.upto(9) {|x|\n  p [x, Math.cbrt(x), Math.cbrt(x)**3]\n}\n#=&gt;\n[-9, -2.0800838230519, ...\n</code></pre>\n",null,0],["cbrt!","CMath","Ruby/classes/CMath.html#method-c-cbrt-21","(z)","",null,0],["cd","FileUtils","Ruby/classes/FileUtils.html#method-c-cd","(dir, options = {})","<p>Options: verbose\n<p>Changes the current directory to the directory <code>dir</code>.\n<p>If this method is called with block, …\n",null,0],["cd","Shell","Ruby/classes/Shell.html#method-i-cd","(path)","<p>Creates a new Shell instance with the current working directory set to\n<code>path</code>.\n",null,0],["cdata","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-cdata","(content)","<p>Called when &lt;![CDATA[ … ]]&gt; is encountered in a document. @p content\n“…”\n",null,0],["cdata","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-cdata","(content)","<p>Called when &lt;![CDATA[ … ]]&gt; is encountered in a document. @p content\n“…”\n",null,0],["cdata?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-cdata-3F","()","<p>Content: [ String text ]\n",null,0],["cdata_block","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-cdata_block","(string)","",null,1],["cdata_section","ActionView::Helpers::TagHelper","Rails/classes/ActionView/Helpers/TagHelper.html#method-i-cdata_section","(content)","<p>Returns a CDATA section with the given <code>content</code>. CDATA sections\nare used to escape blocks of text containing …\n",null,1],["cdatas","REXML::Element","Ruby/classes/REXML/Element.html#method-i-cdatas","()","<p>Get an array of all CData children. IMMUTABLE\n",null,0],["ceil","BigDecimal","Ruby/classes/BigDecimal.html#method-i-ceil","(p1 = v1)","<p>Return the smallest integer greater than or equal to the value, as a\nBigDecimal.\n\n<pre><code>BigDecimal(&#39;3.14159&#39;).ceil ...</code></pre>\n",null,0],["ceil","Float","Ruby/classes/Float.html#method-i-ceil","()","<p>Returns the smallest <code>Integer</code> greater than or equal to\n<em>flt</em>.\n\n<pre><code>1.2.ceil      #=&gt; 2\n2.0.ceil      #=&gt; 2\n(-1.2).ceil ...\n</code></pre>\n",null,0],["ceil","Integer","Ruby/classes/Integer.html#method-i-ceil","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["ceil","Integer","Ruby/classes/Integer.html#method-i-ceil","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["ceil","Numeric","Ruby/classes/Numeric.html#method-i-ceil","()","<p>Returns the smallest <code>Integer</code> greater than or equal to\n<em>num</em>. Class <code>Numeric</code> achieves this by converting …\n",null,0],["ceil","Rational","Ruby/classes/Rational.html#method-i-ceil","(*args)","<p>Returns the truncated value (toward positive infinity).\n\n<pre><code>Rational(3).ceil      #=&gt; 3\nRational(2, 3).ceil ...\n</code></pre>\n",null,0],["ceiling","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-ceiling","( number )","",null,0],["center","String","Ruby/classes/String.html#method-i-center","(*args)","<p>Centers <code>str</code> in <code>width</code>.  If <code>width</code> is\ngreater than the length of <code>str</code>, returns a new String of length\n<code>width</code> …\n",null,0],["cert","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-cert","()","<p>The X509 certificate for this socket endpoint.\n",null,0],["cert_path","Gem::Security::TrustDir","Ruby/classes/Gem/Security/TrustDir.html#method-i-cert_path","(certificate)","<p>Returns the path to the trusted <code>certificate</code>\n",null,0],["certid","OpenSSL::OCSP::Request","Ruby/classes/OpenSSL/OCSP/Request.html#method-i-certid","()","",null,0],["certificates","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-certificates","()","",null,0],["certificates=","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-certificates-3D","(p1)","",null,0],["certificates_matching","Gem::Commands::CertCommand","Ruby/classes/Gem/Commands/CertCommand.html#method-i-certificates_matching","(filter)","",null,0],["certs","Net::POP3","Ruby/classes/Net/POP3.html#method-c-certs","()","<p>returns the :ca_file or :ca_path from POP3.ssl_params\n",null,0],["chain","Rake::InvocationExceptionMixin","Ruby/classes/Rake/InvocationExceptionMixin.html#method-i-chain","()","<p>Return the invocation chain (list of Rake tasks) that were in effect when\nthis exception was detected …\n",null,0],["chain=","Rake::InvocationExceptionMixin","Ruby/classes/Rake/InvocationExceptionMixin.html#method-i-chain-3D","(value)","<p>Set the invocation chain in effect when this exception was detected.\n",null,0],["challenge","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-challenge","()","<p>Returns the challenge string associated with this SPKI.\n",null,0],["challenge","WEBrick::HTTPAuth::BasicAuth","Ruby/classes/WEBrick/HTTPAuth/BasicAuth.html#method-i-challenge","(req, res)","<p>Returns a challenge response which asks for for authentication information\n",null,0],["challenge","WEBrick::HTTPAuth::DigestAuth","Ruby/classes/WEBrick/HTTPAuth/DigestAuth.html#method-i-challenge","(req, res, stale=false)","<p>Returns a challenge response which asks for for authentication information\n",null,0],["challenge=","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-challenge-3D","(p1)","<p>Parameters\n<p><code>str</code> - the challenge string to be set for this instance\n\n<p>Sets the challenge to be associated with …\n",null,0],["change","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-change","(column_name, type, options = {})","<p>Changes the column&#39;s definition according to the new options. See\nTableDefinition#column for details …\n",null,1],["change","Date","Rails/classes/Date.html#method-i-change","(options)","<p>Returns a new Date where one or more of the elements have been changed\naccording to the <code>options</code> parameter. …\n",null,1],["change","DateTime","Rails/classes/DateTime.html#method-i-change","(options)","<p>Returns a new DateTime where one or more of the elements have been changed\naccording to the <code>options</code> parameter. …\n",null,1],["change","Time","Rails/classes/Time.html#method-i-change","(options)","<p>Returns a new Time where one or more of the elements have been changed\naccording to the <code>options</code> parameter. …\n",null,1],["change_attribute","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-change_attribute","(current, new)","<p>Changes the current attribute from <code>current</code> to <code>new</code>\n",null,0],["change_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-change_column","(table_name, column_name, type, options = {})","<p>Changes the column of a table.\n",null,1],["change_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column","(table_name, column_name, type, options = {})","<p>Changes the column&#39;s definition according to the new options. See\nTableDefinition#column for details …\n",null,1],["change_column_default","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-change_column_default","(table_name, column_name, default)","",null,1],["change_column_default","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-change_column_default","(table_name, column_name, default)","<p>Changes the default value of a table column.\n",null,1],["change_column_default","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_default","(table_name, column_name, default)","<p>Sets a new default value for a column:\n\n<pre>change_column_default(:suppliers, :qualification, &#39;new&#39;)\nchange_column_default(:accounts, ...</pre>\n",null,1],["change_column_null","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","",null,1],["change_column_null","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","",null,1],["change_column_null","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","",null,1],["change_column_null","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","<p>Sets or removes a +NOT NULL+ constraint on a column. The <code>null</code>\nflag indicates whether the value can be …\n",null,1],["change_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-change_column_sql","(table_name, column_name, type, options = {})","",null,1],["change_default","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-change_default","(column_name, default)","<p>Sets a new default value for a column. See\nSchemaStatements#change_column_default\n\n<pre>t.change_default(:qualification, ...</pre>\n",null,1],["change_privilege","Process::GID","Ruby/classes/Process/GID.html#method-c-change_privilege","(p1)","<p>Change the current process&#39;s real and effective group ID to that\nspecified by <em>group</em>. Returns the …\n",null,0],["change_privilege","Process::UID","Ruby/classes/Process/UID.html#method-c-change_privilege","(p1)","<p>Change the current process&#39;s real and effective user ID to that\nspecified by <em>user</em>. Returns the new …\n",null,0],["change_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_table","(table_name, options = {})","<p>A block for changing columns in <code>table</code>.\n\n<pre># change_table() yields a Table instance\nchange_table(:suppliers) ...</pre>\n",null,1],["change_table","ActiveRecord::Migration::CommandRecorder","Rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-change_table","(table_name, options = {})","",null,1],["change_workspace","IRB::Context","Ruby/classes/IRB/Context.html#method-i-change_workspace","(*_main)","<p>Changes the current workspace to given object or binding.\n<p>If the optional argument is omitted, the workspace …\n",null,0],["changed","Observable","Ruby/classes/Observable.html#method-i-changed","(state=true)","<p>Set the changed state of this object.  Notifications will be sent only if\nthe changed <code>state</code> is <code>true</code>. …\n",null,0],["changed","ActiveModel::Dirty","Rails/classes/ActiveModel/Dirty.html#method-i-changed","()","<p>Returns an array with the name of the attributes with unsaved changes.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changed</span> <span class=\"ruby-comment\"># =&gt; []</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["changed?","Observable","Ruby/classes/Observable.html#method-i-changed-3F","()","<p>Returns true if this object&#39;s state has been changed since the last\n#notify_observers call.\n",null,0],["changed?","ActiveModel::Dirty","Rails/classes/ActiveModel/Dirty.html#method-i-changed-3F","()","<p>Returns <code>true</code> if any attribute have unsaved changes,\n<code>false</code> otherwise.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changed?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["changed_attribute_by_name","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-changed_attribute_by_name","(current_set, new_set)","<p>Used by the tests to change attributes by name from\n<code>current_set</code> to <code>new_set</code>\n",null,0],["changed_attributes","ActiveModel::Dirty","Rails/classes/ActiveModel/Dirty.html#method-i-changed_attributes","()","<p>Returns a hash of the attributes with unsaved changes indicating their\noriginal values like <code>attr =&gt;</code> …\n",null,1],["changed_for_autosave?","ActiveRecord::AutosaveAssociation","Rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-changed_for_autosave-3F","()","<p>Returns whether or not this record has been changed in any way (including\nwhether any of its nested autosave …\n",null,1],["changes","ActiveModel::Dirty","Rails/classes/ActiveModel/Dirty.html#method-i-changes","()","<p>Returns a hash of changed attributes indicating their original and new\nvalues like <code>attr =&gt; [original</code> …\n",null,1],["char_pos","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-char_pos","(byte_offset)","<p>The character offset for the input string at the given\n<code>byte_offset</code>\n",null,0],["character","RSS::REXMLLikeXMLParser","Ruby/classes/RSS/REXMLLikeXMLParser.html#method-i-character","(data)","",null,0],["character","XMLRPC::XMLParser::StreamParserMixin","Ruby/classes/XMLRPC/XMLParser/StreamParserMixin.html#method-i-character","(data)","",null,0],["characters","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-characters","(text)","",null,0],["characters","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-characters","(string)","",null,1],["chardev?","File","Ruby/classes/File.html#method-c-chardev-3F","(p1)","<p>Returns <code>true</code> if the named file is a character device.\n<p><em>file_name</em> can be an IO object.\n",null,0],["chardev?","File::Stat","Ruby/classes/File/Stat.html#method-i-chardev-3F","()","<p>Returns <code>true</code> if the file is a character device,\n<code>false</code> if it isn&#39;t or if the operating system doesn&#39;t …\n",null,0],["chardev?","FileTest","Ruby/classes/FileTest.html#method-i-chardev-3F","(p1)","<p>Returns <code>true</code> if the named file is a character device.\n<p><em>file_name</em> can be an IO object.\n",null,0],["chardev?","Pathname","Ruby/classes/Pathname.html#method-i-chardev-3F","()","<p>See FileTest.chardev?.\n",null,0],["charpos","StringScanner","Ruby/classes/StringScanner.html#method-i-charpos","()","<p>Returns the character position of the scan pointer.  In the &#39;reset&#39;\nposition, this value is zero. …\n",null,0],["chars","ARGF","Ruby/classes/ARGF.html#method-i-chars","()","<p>This is a deprecated alias for <code>each_char</code>.\n",null,0],["chars","IO","Ruby/classes/IO.html#method-i-chars","()","<p>This is a deprecated alias for <code>each_char</code>.\n",null,0],["chars","String","Ruby/classes/String.html#method-i-chars","()","<p>Returns an array of characters in <em>str</em>.  This is a shorthand for\n<code>str.each_char.to_a</code>.\n<p>If a block is given, …\n",null,0],["chars","StringIO","Ruby/classes/StringIO.html#method-i-chars","()","<p>This is a deprecated alias for <code>each_char</code>.\n",null,0],["charset","OpenURI::Meta","Ruby/classes/OpenURI/Meta.html#method-i-charset","()","<p>returns a charset parameter in Content-Type field. It is downcased for\ncanonicalization.\n<p>If charset parameter …\n",null,0],["charset","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-charset","()","<p>Returns the database character set.\n",null,1],["charset","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-charset","(*arguments)","",null,1],["charset_current","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-charset_current","(environment = env)","",null,1],["chdir","Dir","Ruby/classes/Dir.html#method-c-chdir","(p1 = v1)","<p>Changes the current working directory of the process to the given string.\nWhen called without an argument, …\n",null,0],["chdir","FileUtils","Ruby/classes/FileUtils.html#method-c-chdir","(dir, options = {})","",null,0],["chdir","Net::FTP","Ruby/classes/Net/FTP.html#method-i-chdir","(dirname)","<p>Changes the (remote) directory.\n",null,0],["chdir","Shell","Ruby/classes/Shell.html#method-i-chdir","(path = nil, verbose = @verbose)","<p>Creates a Shell object which current directory is set to <code>path</code>.\n<p>If a block is given, it restores the current …\n",null,0],["check","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-check","()","<p>Sends a CHECK command to request a checkpoint of the currently selected\nmailbox.  This performs implementation-specific …\n",null,0],["check","PTY","Ruby/classes/PTY.html#method-c-check","(p1, p2 = v2)","<p>Checks the status of the child process specified by <code>pid</code>.\nReturns <code>nil</code> if the process is still alive.\n<p>If …\n",null,0],["check","REXML::Text","Ruby/classes/REXML/Text.html#method-c-check","(string, pattern, doctype)","<p>check for illegal characters\n",null,0],["check","StringScanner","Ruby/classes/StringScanner.html#method-i-check","(p1)","<p>This returns the value that #scan would return, without advancing the scan\npointer.  The match register …\n",null,0],["check","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-check","(result)","",null,0],["check_box","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-check_box","(method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","<p>Returns a checkbox tag tailored for accessing a specified attribute\n(identified by <code>method</code>) on an object …\n",null,1],["check_box","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-check_box","(object_name, method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","<p>Returns a checkbox tag tailored for accessing a specified attribute\n(identified by <code>method</code>) on an object …\n",null,1],["check_box_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-check_box_tag","(name, value = \"1\", checked = false, options = {})","<p>Creates a check box form input tag.\n<p>Options\n<p><code>:disabled</code> - If set to true, the user will not be able to use …\n",null,1],["check_cert","Gem::Security::Policy","Ruby/classes/Gem/Security/Policy.html#method-i-check_cert","(signer, issuer, time)","<p>Ensures that <code>signer</code> is valid for <code>time</code> and was\nsigned by the <code>issuer</code>. If the <code>issuer</code> is\n<code>nil</code> no verification …\n",null,0],["check_chain","Gem::Security::Policy","Ruby/classes/Gem/Security/Policy.html#method-i-check_chain","(chain, time)","<p>Verifies each certificate in <code>chain</code> has signed the following\ncertificate and is valid for the given <code>time</code> …\n",null,0],["check_class_collision","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-c-check_class_collision","(options={})","<p>Add a class collisions name to be checked on class initialization. You can\nsupply a hash with a :prefix …\n",null,1],["check_closed","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-i-check_closed","()","<p>Raises IOError if the TarWriter is closed\n",null,0],["check_credentials_permissions","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-check_credentials_permissions","()","<p>Checks the permissions of the credentials file.  If they are not 0600 an\nerror message is displayed and …\n",null,0],["check_data","Gem::Security::Policy","Ruby/classes/Gem/Security/Policy.html#method-i-check_data","(public_key, digest, signature, data)","<p>Verifies that <code>data</code> matches the <code>signature</code> created\nby <code>public_key</code> and the <code>digest</code> algorithm.\n",null,0],["check_files","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-check_files","()","<p>Check that the files on the command line exist\n",null,0],["check_gems","Gem::Commands::CheckCommand","Ruby/classes/Gem/Commands/CheckCommand.html#method-i-check_gems","()","",null,0],["check_generator","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-check_generator","()","<p>Ensure only one generator is loaded\n",null,0],["check_insecure_method","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-i-check_insecure_method","(obj, msg_id)","<p>Check that a method is callable via dRuby.\n<p><code>obj</code> is the object we want to invoke the method on.\n<code>msg_id</code> is …\n",null,0],["check_inspect_key","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-check_inspect_key","(id)","",null,0],["check_key","Gem::Security::Policy","Ruby/classes/Gem/Security/Policy.html#method-i-check_key","(signer, key)","<p>Ensures the public key of <code>key</code> matches the public key in\n<code>signer</code>\n",null,0],["check_key","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-check_key","()","<p>Raises an exception if the key is invalid.\n<p>See the OpenSSL documentation for EC_KEY_check_key()\n",null,0],["check_modeline","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-check_modeline","(file_name)","<p>Returns the file type from the modeline in <code>file_name</code>\n",null,0],["check_names","RDoc::Task","Ruby/classes/RDoc/Task.html#method-i-check_names","(names)","<p>Ensures that <code>names</code> only includes names for the :rdoc,\n:clobber_rdoc and :rerdoc.  If other names are …\n",null,0],["check_nonce","OpenSSL::OCSP::Request","Ruby/classes/OpenSSL/OCSP/Request.html#method-i-check_nonce","(p1)","<p>Check nonce validity in a request and response. Return value reflects\nresult:\n\n<pre><code>1: nonces present and equal. ...</code></pre>\n",null,0],["check_pending!","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-c-check_pending-21","()","",null,1],["check_private_key","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-check_private_key","(p1)","<p>Checks if &#39;key&#39; is PRIV key for this cert\n",null,0],["check_root","Gem::Security::Policy","Ruby/classes/Gem/Security/Policy.html#method-i-check_root","(chain, time)","<p>Ensures the root certificate in <code>chain</code> is self-signed and valid\nfor <code>time</code>.\n",null,0],["check_ruby_version","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-check_ruby_version","()","",null,0],["check_signedness","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-check_signedness","(type, headers = nil, opts = nil, &b)","<p>Returns the signedness of the given <code>type</code>.  You may optionally\nspecify additional <code>headers</code> to search in …\n",null,0],["check_sizeof","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-check_sizeof","(type, headers = nil, opts = \"\", &b)","<p>Returns the size of the given <code>type</code>.  You may optionally\nspecify additional <code>headers</code> to search in for the …\n",null,0],["check_that_user_bin_dir_is_in_path","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-check_that_user_bin_dir_is_in_path","()","<p>DOC: Missing docs or :nodoc:.\n",null,0],["check_trust","Gem::Security::Policy","Ruby/classes/Gem/Security/Policy.html#method-i-check_trust","(chain, digester, trust_dir)","<p>Ensures the root of <code>chain</code> has a trusted certificate in\n<code>trust_dir</code> and the digests of the two certificates …\n",null,0],["check_until","StringScanner","Ruby/classes/StringScanner.html#method-i-check_until","(p1)","<p>This returns the value that #scan_until would return, without advancing the\nscan pointer.  The match …\n",null,0],["checkbox","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-checkbox","(name = \"\", value = nil, checked = nil)","<p>Generate a Checkbox Input element as a string.\n<p>The attributes of the element can be specified as three …\n",null,0],["checkbox_group","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-checkbox_group","(name = \"\", *values)","<p>Generate a sequence of checkbox elements, as a String.\n<p>The checkboxes will all have the same <code>name</code> attribute. …\n",null,0],["checkin","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-checkin","(conn)","<p>Check-in a database connection back into the pool, indicating that you no\nlonger need this connection. …\n",null,1],["checkout","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-checkout","()","<p>Check-out a database connection from the pool, indicating that you want to\nuse it. You should call #checkin …\n",null,1],["childNodes","NQXML::Node","Ruby/classes/NQXML/Node.html#method-i-childNodes","()","",null,0],["child_name","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-child_name","(name)","<p>Creates the full name for a child with <code>name</code>\n",null,0],["children","Pathname","Ruby/classes/Pathname.html#method-i-children","(with_directory=true)","<p>Returns the children of the directory (files and subdirectories, not\nrecursive) as an array of Pathname …\n",null,0],["children","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-children","()","",null,0],["children","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-children","()","",null,0],["children","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-children","()","",null,1],["chmod","File","Ruby/classes/File.html#method-c-chmod","(p1, *args)","<p>Changes permission bits on the named file(s) to the bit pattern represented\nby <em>mode_int</em>. Actual effects …\n",null,0],["chmod","File","Ruby/classes/File.html#method-i-chmod","(p1)","<p>Changes permission bits on <em>file</em> to the bit pattern represented by\n<em>mode_int</em>. Actual effects are platform …\n",null,0],["chmod","FileUtils","Ruby/classes/FileUtils.html#method-c-chmod","(mode, list, options = {})","<p>Options: noop verbose\n<p>Changes permission bits on the named files (in <code>list</code>) to the\nbit pattern represented …\n",null,0],["chmod","Object","Ruby/classes/Object.html#method-i-chmod","()","<p>Change the mode of each FILE to OCTAL-MODE.\n\n<pre><code>ruby -run -e chmod -- [OPTION] OCTAL-MODE FILE\n\n-v        ...</code></pre>\n",null,0],["chmod","Pathname","Ruby/classes/Pathname.html#method-i-chmod","(p1)","<p>Changes file permissions.\n<p>See File.chmod.\n",null,0],["chmod_R","FileUtils","Ruby/classes/FileUtils.html#method-c-chmod_R","(mode, list, options = {})","<p>Options: noop verbose force\n<p>Changes permission bits on the named files (in <code>list</code>) to the\nbit pattern represented …\n",null,0],["chomp","Kernel","Ruby/classes/Kernel.html#method-i-chomp","(*args)","<p>Equivalent to <code>$_ = $_.chomp(<em>string</em>)</code>. See\n<code>String#chomp</code>. Available only when -p/-n command line option …\n",null,0],["chomp","String","Ruby/classes/String.html#method-i-chomp","(*args)","<p>Returns a new <code>String</code> with the given record separator removed\nfrom the end of <em>str</em> (if present). If <code>$/</code> …\n",null,0],["chomp!","String","Ruby/classes/String.html#method-i-chomp-21","(p1 = v1)","<p>Modifies <em>str</em> in place as described for <code>String#chomp</code>,\nreturning <em>str</em>, or <code>nil</code> if no modifications were made.\n…\n",null,0],["choose_from_list","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-choose_from_list","(question, list)","<p>Choose from a list of options.  <code>question</code> is a prompt displayed\nabove the list.  <code>list</code> is a list of option …\n",null,0],["choose_from_list","Gem::UserInteraction","Ruby/classes/Gem/UserInteraction.html#method-i-choose_from_list","(*args)","",null,0],["chop","Kernel","Ruby/classes/Kernel.html#method-i-chop","()","<p>Equivalent to <code>($_.dup).chop!</code>, except <code>nil</code> is never\nreturned. See <code>String#chop!</code>. Available only when -p/-n …\n",null,0],["chop","String","Ruby/classes/String.html#method-i-chop","()","<p>Returns a new <code>String</code> with the last character removed.  If the\nstring ends with <code>\\r\\n</code>, both characters …\n",null,0],["chop!","String","Ruby/classes/String.html#method-i-chop-21","()","<p>Processes <em>str</em> as for <code>String#chop</code>, returning\n<em>str</em>, or <code>nil</code> if <em>str</em> is the empty string.  See\nalso <code>String#chomp!</code> …\n",null,0],["chown","File","Ruby/classes/File.html#method-c-chown","(p1, p2, *args)","<p>Changes the owner and group of the named file(s) to the given numeric owner\nand group id&#39;s. Only …\n",null,0],["chown","File","Ruby/classes/File.html#method-i-chown","(p1, p2)","<p>Changes the owner and group of <em>file</em> to the given numeric owner and\ngroup id&#39;s. Only a process with …\n",null,0],["chown","FileUtils","Ruby/classes/FileUtils.html#method-c-chown","(user, group, list, options = {})","<p>Options: noop verbose\n<p>Changes owner and group on the named files (in <code>list</code>) to the\nuser <code>user</code> and the group …\n",null,0],["chown","Pathname","Ruby/classes/Pathname.html#method-i-chown","(p1, p2)","<p>Change owner and group of the file.\n<p>See File.chown.\n",null,0],["chown_R","FileUtils","Ruby/classes/FileUtils.html#method-c-chown_R","(user, group, list, options = {})","<p>Options: noop verbose force\n<p>Changes owner and group on the named files (in <code>list</code>) to the\nuser <code>user</code> and …\n",null,0],["chr","Integer","Ruby/classes/Integer.html#method-i-chr","(*args)","<p>Returns a string containing the character represented by the receiver&#39;s\nvalue according to <code>encoding</code> …\n",null,0],["chr","Integer","Ruby/classes/Integer.html#method-i-chr","(*args)","<p>Returns a string containing the character represented by the receiver&#39;s\nvalue according to <code>encoding</code> …\n",null,0],["chr","String","Ruby/classes/String.html#method-i-chr","()","<p>Returns a one-character string at the beginning of the string.\n\n<pre><code>a = &quot;abcde&quot;\na.chr    #=&gt; &quot;a&quot;\n</code></pre>\n",null,0],["chroot","Dir","Ruby/classes/Dir.html#method-c-chroot","(p1)","<p>Changes this process&#39;s idea of the file system root. Only a privileged\nprocess may make this call. …\n",null,0],["chunk","Enumerable","Ruby/classes/Enumerable.html#method-i-chunk","(p1 = v1)","<p>Enumerates over the items, chunking them together based on the return value\nof the block.\n<p>Consecutive …\n",null,0],["chunk","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-chunk","(*args)","",null,0],["chunked=","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-chunked-3D","(val)","<p>Enables chunked transfer encoding.\n",null,0],["chunked?","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-chunked-3F","()","<p>Returns “true” if the “transfer-encoding” header is present and set to\n“chunked”. …\n",null,0],["chunked?","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-chunked-3F","()","<p>Will this response body be returned using chunked transfer-encoding?\n",null,0],["cidr","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-cidr","(name, options = {})","",null,1],["cidr_to_string","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-cidr_to_string","(object)","",null,1],["cipher","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-cipher","(p1)","",null,0],["cipher","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-cipher","()","<p>The cipher being used for the current connection\n",null,0],["cipher=","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-cipher-3D","(p1)","",null,0],["ciphers","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-c-ciphers","()","<p>Returns the names of all available ciphers in an array.\n",null,0],["ciphers","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-ciphers","()","<p>The list of ciphers configured for this context.\n",null,0],["ciphers=","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-ciphers-3D","(p1)","<p>Sets the list of available ciphers for this context.  Note in a server\ncontext some ciphers require the …\n",null,0],["civil","Date","Ruby/classes/Date.html#method-c-civil","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Creates a date object denoting the given calendar date.\n<p>In this class, BCE years are counted astronomically. …\n",null,0],["civil","DateTime","Ruby/classes/DateTime.html#method-c-civil","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7, p8 = v8)","<p>Creates a date-time object denoting the given calendar date.\n\n<pre><code>DateTime.new(2001,2,3)    #=&gt; #&lt;DateTime: ...\n</code></pre>\n",null,0],["civil_from_format","DateTime","Rails/classes/DateTime.html#method-c-civil_from_format","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0)","<p>Returns DateTime with local offset for given year if format is local else\noffset is zero.\n\n<pre>DateTime.civil_from_format ...</pre>\n",null,1],["class","Object","Ruby/classes/Object.html#method-i-class","()","<p>Returns the class of <em>obj</em>. This method must always be called with\nan explicit receiver, as <code>class</code> is also …\n",null,0],["class","Win32::Registry::PredefinedKey","Ruby/classes/Win32/Registry/PredefinedKey.html#method-i-class","()","<p>Fake #class method for Registry#open, Registry#create\n",null,0],["class","ActiveSupport::Deprecation::DeprecatedConstantProxy","Rails/classes/ActiveSupport/Deprecation/DeprecatedConstantProxy.html#method-i-class","()","",null,1],["class_attribute","Class","Rails/classes/Class.html#method-i-class_attribute","(*attrs)","<p>Declare a class-level attribute whose value is inheritable by subclasses.\nSubclasses can change their …\n",null,1],["class_attributes","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-class_attributes","()","<p>Class attributes\n",null,0],["class_dir","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-class_dir","()","<p>Directory where generated class HTML files live relative to the output dir.\n",null,0],["class_dir","RDoc::Generator::JsonIndex","Ruby/classes/RDoc/Generator/JsonIndex.html#method-i-class_dir","()","<p>The directory classes are written to\n",null,0],["class_document","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-class_document","(name, found, klasses, includes, extends)","<p>Builds a RDoc::Markup::Document from <code>found</code>,\n<code>klasess</code> and <code>includes</code>\n",null,0],["class_eval","Module","Ruby/classes/Module.html#method-i-class_eval","(*args)","<p>Evaluates the string or block in the context of <em>mod</em>, except that\nwhen a block is given, constant/class …\n",null,0],["class_eval","Kernel","Rails/classes/Kernel.html#method-i-class_eval","(*args, &block)","<p>class_eval on an object acts like singleton_class.class_eval.\n",null,1],["class_exec","Module","Ruby/classes/Module.html#method-i-class_exec","(*args)","<p>Evaluates the given block in the context of the class/module. The method\ndefined in the block will belong …\n",null,0],["class_file","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-class_file","(klass_name)","<p>Path to the ri data for <code>klass_name</code>\n",null,0],["class_method_list","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-class_method_list","()","<p>Class methods\n",null,0],["class_methods","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-class_methods","()","<p>Class methods cache accessor.  Maps a class to an Array of its class\nmethods (not full name).\n",null,0],["class_name","Gem::Ext::Builder","Ruby/classes/Gem/Ext/Builder.html#method-c-class_name","()","",null,0],["class_name","RSS::BaseListener","Ruby/classes/RSS/BaseListener.html#method-i-class_name","(uri, tag_name)","<p>retrieve class_name for the supplied uri and tag_name If it doesn&#39;t\nexist, capitalize the tag_name …\n",null,0],["class_name","ActiveRecord::Reflection::MacroReflection","Rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-class_name","()","<p>Returns the class name for the macro.\n<p><code>composed_of :balance, class_name: &#39;Money&#39;</code> returns\n<code>&#39;Money&#39;</code> …\n",null,1],["class_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-class_name","()","",null,1],["class_path","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-class_path","(klass_name)","<p>Path where data for <code>klass_name</code> will be stored (methods or\nclass data)\n",null,0],["class_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-class_path","()","",null,1],["class_variable_defined?","Module","Ruby/classes/Module.html#method-i-class_variable_defined-3F","(p1)","<p>Returns <code>true</code> if the given class variable is defined in\n<em>obj</em>.\n\n<pre><code>class Fred\n  @@foo = 99\nend\nFred.class_variable_defined?(:@@foo) ...\n</code></pre>\n",null,0],["class_variable_get","Module","Ruby/classes/Module.html#method-i-class_variable_get","(p1)","<p>Returns the value of the given class variable (or throws a\n<code>NameError</code> exception). The <code>@@</code> part of the variable\n…\n",null,0],["class_variable_set","Module","Ruby/classes/Module.html#method-i-class_variable_set","(p1, p2)","<p>Sets the class variable names by <em>symbol</em> to <em>object</em>.\n\n<pre><code>class Fred\n  @@foo = 99\n  def foo\n    @@foo\n  end\nend ...\n</code></pre>\n",null,0],["class_variables","Module","Ruby/classes/Module.html#method-i-class_variables","(p1 = v1)","<p>Returns an array of the names of class variables in <em>mod</em>. This\nincludes the names of class variables in …\n",null,0],["classes","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-classes","()","<p>Array of classes in this context\n",null,0],["classes","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-classes","()","<p>Hash mapping a known class or module to the stores it can be loaded from\n",null,0],["classes_and_includes_and_extends_for","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-classes_and_includes_and_extends_for","(name)","<p>Returns the stores wherein <code>name</code> is found along with the\nclasses, extends and includes that match it\n",null,0],["classes_and_modules","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-classes_and_modules","()","<p>All classes and modules in this namespace\n",null,0],["classes_hash","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-classes_hash","()","<p>Hash of classes keyed by class name\n",null,0],["classes_hash","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-classes_hash","()","<p>Hash of all classes known to RDoc\n",null,0],["classify","Set","Ruby/classes/Set.html#method-i-classify","()","<p>Classifies the set by the return value of the given block and returns a\nhash of {value =&gt; set of elements} …\n",null,0],["classify","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-classify","(table_name)","<p>Create a class name from a plural table name like Rails does for table\nnames to models. Note that this …\n",null,1],["classify","String","Rails/classes/String.html#method-i-classify","()","<p>Create a class name from a plural table name like Rails does for table\nnames to models. Note that this …\n",null,1],["clean","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-clean","(backtrace, kind = :silent)","<p>Returns the backtrace after all filters and silencers have been run against\nit. Filters run first, then …\n",null,1],["clean_gems","Gem::Commands::CleanupCommand","Ruby/classes/Gem/Commands/CleanupCommand.html#method-i-clean_gems","()","",null,0],["cleanpath","Pathname","Ruby/classes/Pathname.html#method-i-cleanpath","(consider_symlink=false)","<p>Returns clean pathname of <code>self</code> with consecutive slashes and\nuseless dots removed.  The filesystem is …\n",null,0],["cleanup","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-c-cleanup","()","",null,0],["cleanup","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-cleanup","(options = nil)","",null,1],["cleanup","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-cleanup","(options = nil)","",null,1],["cleanup","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-i-cleanup","(options = nil)","",null,1],["cleanup","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-cleanup","(options = nil)","<p>Cleanup the cache by removing expired entries.\n<p>Options are passed to the underlying cache implementation. …\n",null,1],["cleanup!","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-c-cleanup-21","()","<p>Execute all cleanup callbacks.\n",null,1],["clear","Array","Ruby/classes/Array.html#method-i-clear","()","<p>Removes all elements from <code>self</code>.\n\n<pre><code>a = [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot; ]\na.clear    #=&gt; [ ]\n</code></pre>\n",null,0],["clear","Curses","Ruby/classes/Curses.html#method-c-clear","()","<p>Clears every position on the screen completely, so that a subsequent call\nby Curses.refresh for the  …\n",null,0],["clear","Curses::Window","Ruby/classes/Curses/Window.html#method-i-clear","()","<p>Clear the window.\n",null,0],["clear","DBM","Ruby/classes/DBM.html#method-i-clear","()","<p>Deletes all data from the database.\n",null,0],["clear","ENV","Ruby/classes/ENV.html#method-c-clear","()","<p>Removes every environment variable.\n",null,0],["clear","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-clear","()","<p>Clears the GC profiler data.\n",null,0],["clear","GDBM","Ruby/classes/GDBM.html#method-i-clear","()","<p>Removes all the key-value pairs within <em>gdbm</em>.\n",null,0],["clear","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-clear","()","",null,0],["clear","Hash","Ruby/classes/Hash.html#method-i-clear","()","<p>Removes all key-value pairs from <em>hsh</em>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200 }   #=&gt; {&quot;a&quot;=&gt;100, &quot;b&quot;=&gt;200}\nh.clear ...\n</code></pre>\n",null,0],["clear","Queue","Ruby/classes/Queue.html#method-i-clear","()","<p>Removes all objects from the queue.\n",null,0],["clear","Rake::Task","Ruby/classes/Rake/Task.html#method-i-clear","()","<p>Clear the existing prerequisites and actions of a rake task.\n",null,0],["clear","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-clear","()","<p>Clear all tasks in this application.\n",null,0],["clear","SDBM","Ruby/classes/SDBM.html#method-i-clear","()","<p>Deletes all data from the database.\n",null,0],["clear","Set","Ruby/classes/Set.html#method-i-clear","()","<p>Removes all elements and returns self.\n",null,0],["clear","SizedQueue","Ruby/classes/SizedQueue.html#method-i-clear","()","<p>Removes all objects from the queue.\n",null,0],["clear","String","Ruby/classes/String.html#method-i-clear","()","<p>Makes string empty.\n\n<pre><code>a = &quot;abcde&quot;\na.clear    #=&gt; &quot;&quot;\n</code></pre>\n",null,0],["clear","StringScanner","Ruby/classes/StringScanner.html#method-i-clear","()","<p>Equivalent to #terminate. This method is obsolete; use #terminate instead.\n",null,0],["clear","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-clear","()","",null,1],["clear","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-clear","()","<p>Clear the error messages.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">full_messages</span> <span class=\"ruby-comment\"># =&gt; [&quot;name can not be nil&quot;]</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">clear</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["clear","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-clear","()","<p>Remove all elements from the queue.\n",null,1],["clear","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-clear","()","",null,1],["clear","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::TypeMap","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/TypeMap.html#method-i-clear","()","",null,1],["clear","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-clear","()","",null,1],["clear","ActiveRecord::ConnectionAdapters::SQLite3Adapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/StatementPool.html#method-i-clear","()","",null,1],["clear","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-clear","()","",null,1],["clear","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-clear","(options = nil)","",null,1],["clear","ActiveSupport::Cache::MemCacheStore","Rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-clear","(options = nil)","<p>Clear the entire cache on all memcached servers. This method should be used\nwith care when shared cache …\n",null,1],["clear","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-clear","(options = nil)","",null,1],["clear","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-i-clear","(options = nil)","",null,1],["clear","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-clear","(options = nil)","<p>Clear the entire cache. Be careful with this method since it could affect\nother processes if shared cache …\n",null,1],["clear","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-clear","(options = nil)","",null,1],["clear","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-c-clear","()","",null,1],["clear","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-clear","(scope = :all)","<p>Clears the loaded inflections within a given scope (default is\n<code>:all</code>). Give the scope as a symbol of the …\n",null,1],["clear!","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-clear-21","()","<p>Clears out internal caches\n",null,1],["clear!","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-clear-21","()","",null,1],["clear_action_methods!","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-clear_action_methods-21","()","<p>action_methods are cached and there is sometimes need to refresh them.\nclear_action_methods! allows you …\n",null,1],["clear_actions","Rake::Task","Ruby/classes/Rake/Task.html#method-i-clear_actions","()","<p>Clear the existing actions on a rake task.\n",null,0],["clear_active_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_active_connections-21","()","<p>Returns any connections in use by the current thread back to the pool, and\nalso returns connections to …\n",null,1],["clear_all_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_all_connections-21","()","",null,1],["clear_cache","ActionView::Resolver","Rails/classes/ActionView/Resolver.html#method-i-clear_cache","()","",null,1],["clear_cache!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-clear_cache-21","()","<p>Clear any caching the database adapter may be doing, for example clearing\nthe prepared statement cache. …\n",null,1],["clear_cache!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-clear_cache-21","()","<p>Clears the prepared statements cache.\n",null,1],["clear_cache!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-clear_cache-21","()","<p>Clears the prepared statements cache.\n",null,1],["clear_cache!","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-clear_cache-21","()","<p>Clears the prepared statements cache.\n",null,1],["clear_comment","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-clear_comment","()","<p>Clears the comment. Used by the ruby parser.\n",null,0],["clear_comments","Rake::Task","Ruby/classes/Rake/Task.html#method-i-clear_comments","()","<p>Clear the existing comments on a rake task.\n",null,0],["clear_default_specs","Gem","Ruby/classes/Gem.html#method-i-clear_default_specs","()","<p>Clear default gem related varibles. It is for test\n",null,0],["clear_exclude","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-clear_exclude","()","<p>Clear all the exclude patterns so that we exclude nothing.\n",null,0],["clear_helpers","AbstractController::Helpers::ClassMethods","Rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-clear_helpers","()","<p>Clears up all existing helpers in this class, only keeping the helper with\nthe same name as this class. …\n",null,1],["clear_paths","Gem","Ruby/classes/Gem.html#method-c-clear_paths","()","<p>Reset the <code>dir</code> and <code>path</code> values.  The next time\n<code>dir</code> or <code>path</code> is requested, the values will be\ncalculated …\n",null,0],["clear_prerequisites","Rake::Task","Ruby/classes/Rake/Task.html#method-i-clear_prerequisites","()","<p>Clear the existing prerequisites of a rake task.\n",null,0],["clear_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-clear_query_cache","()","<p>Clears the query cache.\n<p>One reason you may wish to call this method explicitly is between queries\nthat …\n",null,1],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_reloadable_connections-21","()","<p>Clears the cache which maps classes.\n",null,1],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-clear_reloadable_connections-21","()","<p>Clears the cache which maps classes.\n",null,1],["clear_respond_to","ActionController::MimeResponds::ClassMethods","Rails/classes/ActionController/MimeResponds/ClassMethods.html#method-i-clear_respond_to","()","<p>Clear all mime types in <code>respond_to</code>.\n",null,1],["clear_table_cache!","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-clear_table_cache-21","(table_name)","<p>Clear out internal caches for table with <code>table_name</code>.\n",null,1],["clear_validators!","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-clear_validators-21","()","<p>Clears all of the validators and validations.\n<p>Note that this will clear anything that is being used to …\n",null,1],["client_ca","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-client_ca","()","<p>Returns the list of client CAs. Please note that in contrast to\nSSLContext#client_ca= no array of X509::Certificate …\n",null,0],["client_encoding","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-client_encoding","()","<p>Get the client encoding for this database\n",null,1],["client_error?","WEBrick::HTTPStatus","Ruby/classes/WEBrick/HTTPStatus.html#method-c-client_error-3F","(code)","<p>Is <code>code</code> a client error status?\n",null,0],["client_min_messages","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-client_min_messages","()","<p>Returns the current client message level.\n",null,1],["client_min_messages=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-client_min_messages-3D","(level)","<p>Set the client message level.\n",null,1],["clobber_task_description","RDoc::Task","Ruby/classes/RDoc/Task.html#method-i-clobber_task_description","()","<p>Task description for the clobber rdoc task or its renamed equivalent\n",null,0],["clone","Matrix","Ruby/classes/Matrix.html#method-i-clone","()","<p>Returns a clone of the matrix, so that the contents of each do not\nreference identical objects. There …\n",null,0],["clone","Method","Ruby/classes/Method.html#method-i-clone","()","<p>Returns a clone of this method.\n\n<pre><code>class A\n  def foo\n    return &quot;bar&quot;\n  end\nend\n\nm = A.new.method(:foo)\nm.call ...\n</code></pre>\n",null,0],["clone","Object","Ruby/classes/Object.html#method-i-clone","()","<p>Produces a shallow copy of <em>obj</em>—the instance variables of\n<em>obj</em> are copied, but not the objects they reference. …\n",null,0],["clone","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-clone","()","<p>Returns a copy of this attribute\n",null,0],["clone","REXML::CData","Ruby/classes/REXML/CData.html#method-i-clone","()","<p>Make a copy of this object\n<p><em>Examples</em>\n\n<pre><code>c = CData.new( &quot;Some text&quot; )\nd = c.clone\nd.to_s        # -&gt; &quot;Some text&quot;</code></pre>\n",null,0],["clone","REXML::Comment","Ruby/classes/REXML/Comment.html#method-i-clone","()","",null,0],["clone","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-clone","()","",null,0],["clone","REXML::Document","Ruby/classes/REXML/Document.html#method-i-clone","()","<p>Should be obvious\n",null,0],["clone","REXML::Element","Ruby/classes/REXML/Element.html#method-i-clone","()","<p>Creates a shallow copy of self.\n\n<pre><code>d = Document.new &quot;&lt;a&gt;&lt;b/&gt;&lt;b/&gt;&lt;c&gt;&lt;d/&gt;&lt;/c&gt;&lt;/a&gt;&quot;\nnew_a = d.root.clone\nputs ...</code></pre>\n",null,0],["clone","REXML::Instruction","Ruby/classes/REXML/Instruction.html#method-i-clone","()","",null,0],["clone","REXML::Text","Ruby/classes/REXML/Text.html#method-i-clone","()","",null,0],["clone","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-i-clone","()","",null,0],["clone","Singleton","Ruby/classes/Singleton.html#method-i-clone","()","<p>Raises a TypeError to prevent cloning.\n",null,0],["clone","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-clone","()","<p>Returns a clone of this method.\n\n<pre><code>class A\n  def foo\n    return &quot;bar&quot;\n  end\nend\n\nm = A.new.method(:foo)\nm.call ...\n</code></pre>\n",null,0],["clone","Vector","Ruby/classes/Vector.html#method-i-clone","()","<p>Return a copy of the vector.\n",null,0],["clone","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-clone","","<p>Identical to Ruby&#39;s clone method.  This is a “shallow” copy.  Be warned\nthat your attributes …\n",null,1],["clone_empty","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-clone_empty","()","",null,1],["close","ARGF","Ruby/classes/ARGF.html#method-i-close","()","\n<pre><code>Closes the current file and skips to the next in the stream. Trying to\nclose a file that has already ...</code></pre>\n",null,0],["close","CGI::Session","Ruby/classes/CGI/Session.html#method-i-close","()","<p>Store session data on the server and close the session storage. For some\nsession storage types, this …\n",null,0],["close","CGI::Session::FileStore","Ruby/classes/CGI/Session/FileStore.html#method-i-close","()","<p>Update and close the session&#39;s FileStore file.\n",null,0],["close","CGI::Session::MemoryStore","Ruby/classes/CGI/Session/MemoryStore.html#method-i-close","()","<p>Close session storage.\n<p>A no-op.\n",null,0],["close","CGI::Session::NullStore","Ruby/classes/CGI/Session/NullStore.html#method-i-close","()","<p>Close session storage.\n<p>A no-op.\n",null,0],["close","CGI::Session::PStore","Ruby/classes/CGI/Session/PStore.html#method-i-close","()","<p>Update and close the session&#39;s PStore file.\n",null,0],["close","Curses::Window","Ruby/classes/Curses/Window.html#method-i-close","()","<p>Deletes the window, and frees the memory\n",null,0],["close","DBM","Ruby/classes/DBM.html#method-i-close","()","<p>Closes the database.\n",null,0],["close","DL::Handle","Ruby/classes/DL/Handle.html#method-i-close","()","<p>Close this DL::Handle.  Calling close more than once will raise a\nDL::DLError exception.\n",null,0],["close","Dir","Ruby/classes/Dir.html#method-i-close","()","<p>Closes the directory stream. Any further attempts to access <em>dir</em>\nwill raise an <code>IOError</code>.\n\n<pre><code>d = Dir.new(&quot;testdir&quot;) ...</code></pre>\n",null,0],["close","Fiddle::Handle","Ruby/classes/Fiddle/Handle.html#method-i-close","()","<p>Close this handle.\n<p>Calling close more than once will raise a Fiddle::DLError exception.\n",null,0],["close","GDBM","Ruby/classes/GDBM.html#method-i-close","()","<p>Closes the associated database file.\n",null,0],["close","Gem::Package::TarReader","Ruby/classes/Gem/Package/TarReader.html#method-i-close","()","<p>Close the tar file\n",null,0],["close","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-close","()","<p>Closes the tar entry\n",null,0],["close","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-i-close","()","<p>Closes the TarWriter\n",null,0],["close","IO","Ruby/classes/IO.html#method-i-close","()","<p>Closes <em>ios</em> and flushes any pending writes to the operating system.\nThe stream is unavailable for any …\n",null,0],["close","Logger","Ruby/classes/Logger.html#method-i-close","()","<p>Close the logging device.\n",null,0],["close","Logger::LogDevice","Ruby/classes/Logger/LogDevice.html#method-i-close","()","",null,0],["close","Net::FTP","Ruby/classes/Net/FTP.html#method-i-close","()","<p>Closes the connection.  Further operations are impossible until you open a\nnew connection with #connect …\n",null,0],["close","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-close","()","<p>Sends a CLOSE command to close the currently selected mailbox. The CLOSE\ncommand permanently removes …\n",null,0],["close","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-close","()","<p>Closes the connection\n",null,0],["close","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-close","()","<p>Closes the SSLSocket and flushes any unwritten data.\n",null,0],["close","Rake::FtpUploader","Ruby/classes/Rake/FtpUploader.html#method-i-close","()","<p>Close the uploader.\n",null,0],["close","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-close","()","<p>Closes the DNS resolver.\n",null,0],["close","SDBM","Ruby/classes/SDBM.html#method-i-close","()","<p>Closes the database file.\n<p>Raises SDBMError if the database is already closed.\n",null,0],["close","SOCKSSocket","Ruby/classes/SOCKSSocket.html#method-i-close","()","<p>Closes the SOCKS connection.\n",null,0],["close","StringIO","Ruby/classes/StringIO.html#method-i-close","()","<p>Closes strio.  The <strong>strio</strong> is unavailable for any further\ndata operations; an <code>IOError</code> is raised if such …\n",null,0],["close","Syslog","Ruby/classes/Syslog.html#method-c-close","()","<p>Closes the syslog facility. Raises a runtime exception if it is not open.\n",null,0],["close","Tempfile","Ruby/classes/Tempfile.html#method-i-close","(unlink_now=false)","<p>Closes the file. If <code>unlink_now</code> is true, then the file will be\nunlinked (deleted) after closing. Of course, …\n",null,0],["close","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-close","()","<p>Closes the logger (also closes the log device associated to the logger)\n",null,0],["close","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-close","()","<p>Close key.\n<p>After close, most method raise an error.\n",null,0],["close","Win32::Registry::PredefinedKey","Ruby/classes/Win32/Registry/PredefinedKey.html#method-i-close","()","<p>Predefined keys cannot be closed\n",null,0],["close","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-close","()","<p>Closes the GzipFile object. This method calls close method of the\nassociated IO object. Returns the associated …\n",null,0],["close","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-close","()","<p>Closes the stream. All operations on the closed stream will raise an\nexception.\n",null,0],["close","ActionDispatch::Http::UploadedFile","Rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-close","(unlink_now=false)","<p>Shortcut for <code>tempfile.close</code>.\n",null,1],["close","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-close","()","",null,1],["close","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-close","()","<p>Check the connection back in to the connection pool\n",null,1],["close","ActiveSupport::Gzip::Stream","Rails/classes/ActiveSupport/Gzip/Stream.html#method-i-close","()","",null,1],["close!","Tempfile","Ruby/classes/Tempfile.html#method-i-close-21","()","<p>Closes and unlinks (deletes) the file. Has the same effect as called\n<code>close(true)</code>.\n",null,0],["close_enabled?","DL::Handle","Ruby/classes/DL/Handle.html#method-i-close_enabled-3F","()","<p>Returns <code>true</code> if dlclose() will be called when this DL::Handle\nis garbage collected.\n",null,0],["close_enabled?","Fiddle::Handle","Ruby/classes/Fiddle/Handle.html#method-i-close_enabled-3F","()","<p>Returns <code>true</code> if dlclose() will be called when this handle is\ngarbage collected.\n<p>See man(3) dlclose() for …\n",null,0],["close_on_exec=","IO","Ruby/classes/IO.html#method-i-close_on_exec-3D","(p1)","<p>Sets a close-on-exec flag.\n\n<pre><code>f = open(&quot;/dev/null&quot;)\nf.close_on_exec = true\nsystem(&quot;cat&quot;, &quot;/proc/self/fd/#{f.fileno}&quot;) ...</code></pre>\n",null,0],["close_on_exec?","IO","Ruby/classes/IO.html#method-i-close_on_exec-3F","()","<p>Returns <code>true</code> if <em>ios</em> will be closed on exec.\n\n<pre><code>f = open(&quot;/dev/null&quot;)\nf.close_on_exec?                 #=&gt; ...\n</code></pre>\n",null,0],["close_read","BasicSocket","Ruby/classes/BasicSocket.html#method-i-close_read","()","<p>Disallows further read using shutdown system call.\n\n<pre><code>s1, s2 = UNIXSocket.pair\ns1.close_read\ns2.puts #=&gt; ...\n</code></pre>\n",null,0],["close_read","IO","Ruby/classes/IO.html#method-i-close_read","()","<p>Closes the read end of a duplex I/O stream (i.e., one that contains both a\nread and a write stream, such …\n",null,0],["close_read","StringIO","Ruby/classes/StringIO.html#method-i-close_read","()","<p>Closes the read end of a StringIO.  Will raise an <code>IOError</code> if\nthe <strong>strio</strong> is not readable.\n",null,0],["close_screen","Curses","Ruby/classes/Curses.html#method-c-close_screen","()","<p>A program should always call Curses.close_screen before exiting or escaping\nfrom curses mode temporarily. …\n",null,0],["close_write","BasicSocket","Ruby/classes/BasicSocket.html#method-i-close_write","()","<p>Disallows further write using shutdown system call.\n\n<pre><code>UNIXSocket.pair {|s1, s2|\n  s1.print &quot;ping&quot;\n  s1.close_write ...\n</code></pre>\n",null,0],["close_write","IO","Ruby/classes/IO.html#method-i-close_write","()","<p>Closes the write end of a duplex I/O stream (i.e., one that contains both a\nread and a write stream, …\n",null,0],["close_write","StringIO","Ruby/classes/StringIO.html#method-i-close_write","()","<p>Closes the write end of a StringIO.  Will raise an  <code>IOError</code> if\nthe <strong>strio</strong> is not writeable.\n",null,0],["closed?","ARGF","Ruby/classes/ARGF.html#method-i-closed-3F","()","<p>Returns <em>true</em> if the current file has been closed; <em>false</em>\notherwise. Use <code>ARGF.close</code> to actually close the …\n",null,0],["closed?","Curses","Ruby/classes/Curses.html#method-c-closed-3F","()","<p>Returns <code>true</code> if the window/screen has been closed, without any\nsubsequent Curses.refresh calls, returns …\n",null,0],["closed?","DBM","Ruby/classes/DBM.html#method-i-closed-3F","()","<p>Returns true if the database is closed, false otherwise.\n",null,0],["closed?","GDBM","Ruby/classes/GDBM.html#method-i-closed-3F","()","<p>Returns true if the associated database file has been closed.\n",null,0],["closed?","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-closed-3F","()","<p>Is the tar entry closed?\n",null,0],["closed?","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-i-closed-3F","()","<p>Is the TarWriter closed?\n",null,0],["closed?","IO","Ruby/classes/IO.html#method-i-closed-3F","()","<p>Returns <code>true</code> if <em>ios</em> is completely closed (for duplex\nstreams, both reader and writer), <code>false</code> otherwise. …\n",null,0],["closed?","Net::FTP","Ruby/classes/Net/FTP.html#method-i-closed-3F","()","<p>Returns <code>true</code> iff the connection is closed.\n",null,0],["closed?","SDBM","Ruby/classes/SDBM.html#method-i-closed-3F","()","<p>Returns <code>true</code> if the database is closed.\n",null,0],["closed?","StringIO","Ruby/classes/StringIO.html#method-i-closed-3F","()","<p>Returns <code>true</code> if <strong>strio</strong> is completely closed,\n<code>false</code> otherwise.\n",null,0],["closed?","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-closed-3F","()","<p>Same as IO#closed?\n",null,0],["closed?","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-closed-3F","()","<p>Returns true if the stream is closed.\n",null,0],["closed_read?","StringIO","Ruby/classes/StringIO.html#method-i-closed_read-3F","()","<p>Returns <code>true</code> if <strong>strio</strong> is not readable,\n<code>false</code> otherwise.\n",null,0],["closed_write?","StringIO","Ruby/classes/StringIO.html#method-i-closed_write-3F","()","<p>Returns <code>true</code> if <strong>strio</strong> is not writable,\n<code>false</code> otherwise.\n",null,0],["clrtoeol","Curses","Ruby/classes/Curses.html#method-c-clrtoeol","()","<p>Clears to the end of line, that the cursor is currently on.\n",null,0],["clrtoeol","Curses::Window","Ruby/classes/Curses/Window.html#method-i-clrtoeol","()","<p>Clear the window to the end of line, that the cursor is currently on.\n",null,0],["cmd","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-cmd","(options)","<p>Send a command to the host.\n<p>More exactly, sends a string to the host, and reads in all received data\nuntil …\n",null,0],["cmds","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-cmds","()","",null,0],["cmp","FileUtils","Ruby/classes/FileUtils.html#method-c-cmp","(a, b)","",null,0],["cmp","OpenSSL::OCSP::CertificateId","Ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-cmp","(p1)","",null,0],["cmp","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-cmp","(p1)","<p>Compares this Name with <code>other</code> and returns 0 if they are the\nsame and -1 or +1 if they are greater or …\n",null,0],["cmp_issuer","OpenSSL::OCSP::CertificateId","Ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-cmp_issuer","(p1)","",null,0],["cmsg_is?","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-cmsg_is-3F","(p1, p2)","<p>tests the level and type of <em>ancillarydata</em>.\n\n<pre><code>ancdata = Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, ...</code></pre>\n",null,0],["code","WEBrick::HTTPStatus::Status","Ruby/classes/WEBrick/HTTPStatus/Status.html#method-i-code","()","<p>Returns the HTTP status code\n",null,0],["code","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-code","()","<p>Returns a string to ensure compatibility with\n<code>Net::HTTPResponse</code>.\n",null,1],["codepage","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-codepage","()","<p>Returns current codepage.\n\n<pre><code>WIN32OLE.codepage # =&gt; WIN32OLE::CP_ACP\n</code></pre>\n",null,0],["codepage=","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-codepage-3D","(p1)","<p>Sets current codepage. The WIN32OLE.codepage is initialized according to\nEncoding.default_internal.  …\n",null,0],["codepoints","ARGF","Ruby/classes/ARGF.html#method-i-codepoints","()","<p>This is a deprecated alias for <code>each_codepoint</code>.\n",null,0],["codepoints","IO","Ruby/classes/IO.html#method-i-codepoints","()","<p>This is a deprecated alias for <code>each_codepoint</code>.\n",null,0],["codepoints","String","Ruby/classes/String.html#method-i-codepoints","()","<p>Returns an array of the <code>Integer</code> ordinals of the characters in\n<em>str</em>.  This is a shorthand for <code>str.each_codepoint.to_a</code>\n…\n",null,0],["codepoints","StringIO","Ruby/classes/StringIO.html#method-i-codepoints","()","<p>This is a deprecated alias for <code>each_codepoint</code>.\n",null,0],["coerce","BigDecimal","Ruby/classes/BigDecimal.html#method-i-coerce","(p1)","<p>The coerce method provides support for Ruby type coercion. It is not\nenabled by default.\n<p>This means that …\n",null,0],["coerce","Bignum","Ruby/classes/Bignum.html#method-i-coerce","(p1)","<p>MISSING: documentation\n",null,0],["coerce","Float","Ruby/classes/Float.html#method-i-coerce","(p1)","<p>Returns an array with both <em>aNumeric</em> and <em>flt</em> represented\nas <code>Float</code> objects. This is achieved by converting …\n",null,0],["coerce","Matrix","Ruby/classes/Matrix.html#method-i-coerce","(other)","<p>The coerce method provides support for Ruby type coercion. This coercion\nmechanism is used by Ruby to …\n",null,0],["coerce","Numeric","Ruby/classes/Numeric.html#method-i-coerce","(p1)","<p>If <em>aNumeric</em> is the same type as <em>num</em>, returns an array\ncontaining <em>aNumeric</em> and <em>num</em>. Otherwise, returns …\n",null,0],["coerce","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-coerce","(p1)","",null,0],["coerce","URI::Generic","Ruby/classes/URI/Generic.html#method-i-coerce","(oth)","<p>Args\n<p><code>v</code> &mdash; URI or String\n\n<p>Description\n",null,0],["coerce","Vector","Ruby/classes/Vector.html#method-i-coerce","(other)","<p>The coerce method provides support for Ruby type coercion. This coercion\nmechanism is used by Ruby to …\n",null,0],["cofactor","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-cofactor","()","<p>See the OpenSSL documentation for EC_GROUP_get_cofactor()\n",null,0],["collapse","Rake::Backtrace","Ruby/classes/Rake/Backtrace.html#method-c-collapse","(backtrace)","",null,0],["collation","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-collation","()","<p>Returns the database collation strategy.\n",null,1],["collation","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-collation","()","<p>Returns the current database collation.\n",null,1],["collation","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-collation","(*arguments)","",null,1],["collation_current","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-collation_current","(environment = env)","",null,1],["collect","Array","Ruby/classes/Array.html#method-i-collect","()","<p>Invokes the given block once for each element of <code>self</code>.\n<p>Creates a new array containing the values returned …\n",null,0],["collect","Enumerable","Ruby/classes/Enumerable.html#method-i-collect","()","<p>Returns a new array with the results of running <em>block</em> once for\nevery element in <em>enum</em>.\n<p>If no block is given, …\n",null,0],["collect","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-collect","()","",null,0],["collect","Matrix","Ruby/classes/Matrix.html#method-i-collect","()","<p>Returns a matrix that is the result of iteration of the given block over\nall elements of the matrix. …\n",null,0],["collect","Vector","Ruby/classes/Vector.html#method-i-collect","()","<p>Like Array#collect.\n",null,0],["collect!","Array","Ruby/classes/Array.html#method-i-collect-21","()","<p>Invokes the given block once for each element of <code>self</code>,\nreplacing the element with the value returned …\n",null,0],["collect!","Set","Ruby/classes/Set.html#method-i-collect-21","()","<p>Replaces the elements with ones returned by collect().\n",null,0],["collect2","Vector","Ruby/classes/Vector.html#method-i-collect2","(v)","<p>Collects (as in Enumerable#collect) over the elements of this vector and\n<code>v</code> in conjunction.\n",null,0],["collect_concat","Enumerable","Ruby/classes/Enumerable.html#method-i-collect_concat","()","<p>Returns a new array with the concatenated results of running <em>block</em>\nonce for every element in <em>enum</em>.\n<p>If …\n",null,0],["collect_concat","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-collect_concat","()","<p>Returns a new lazy enumerator with the concatenated results of running\n<em>block</em> once for every element in …\n",null,0],["collect_first_comment","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-collect_first_comment","()","<p>Look for the first comment in a file that isn&#39;t a shebang line.\n",null,0],["collect_tasks","Rake::Application","Ruby/classes/Rake/Application.html#method-i-collect_tasks","()","<p>Collect the list of tasks on the command line.  If no tasks are given,\nreturn a list containing only …\n",null,0],["collect_tasks","Rake::Application","Ruby/classes/Rake/Application.html#method-i-collect_tasks","()","<p>Collect the list of tasks on the command line.  If no tasks are given,\nreturn a list containing only …\n",null,0],["collect_tokens","RDoc::TokenStream","Ruby/classes/RDoc/TokenStream.html#method-i-collect_tokens","()","<p>Starts collecting tokens\n",null,0],["collection","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-collection","()","<p>To add a route to the collection:\n\n<pre>resources :photos do\n  collection do\n    get &#39;search&#39;\n  end\nend</pre>\n<p>This …\n",null,1],["collection_check_boxes","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-collection_check_boxes","(method, collection, value_method, text_method, options = {}, html_options = {}, &block)","<p>Wraps ActionView::Helpers::FormOptionsHelper#collection_check_boxes for\nform builders:\n\n<pre>&lt;%= form_for @post ...</pre>\n",null,1],["collection_check_boxes","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_check_boxes","(object, method, collection, value_method, text_method, options = {}, html_options = {}, &block)","<p>Returns check box tags for the collection of existing return values of\n<code>method</code> for <code>object</code>&#39;s class. …\n",null,1],["collection_radio_buttons","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-collection_radio_buttons","(method, collection, value_method, text_method, options = {}, html_options = {}, &block)","<p>Wraps ActionView::Helpers::FormOptionsHelper#collection_radio_buttons for\nform builders:\n\n<pre>&lt;%= form_for ...</pre>\n",null,1],["collection_radio_buttons","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_radio_buttons","(object, method, collection, value_method, text_method, options = {}, html_options = {}, &block)","<p>Returns radio button tags for the collection of existing return values of\n<code>method</code> for <code>object</code>&#39;s class. …\n",null,1],["collection_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-collection_select","(method, collection, value_method, text_method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::FormOptionsHelper#collection_select for form\nbuilders:\n\n<pre>&lt;%= form_for @post do ...</pre>\n",null,1],["collection_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_select","(object, method, collection, value_method, text_method, options = {}, html_options = {})","<p>Returns <code>&lt;select&gt;</code> and <code>&lt;option&gt;</code> tags\nfor the collection of existing return values of <code>method</code> …\n",null,1],["color","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-i-color","(text, color, bold=false)","<p>Set color by using a string or one of the defined constants. If a third\noption is set to <code>true</code>, it also …\n",null,1],["color_content","Curses","Ruby/classes/Curses.html#method-c-color_content","(p1)","<p>Returns an 3 item Array of the RGB values in <code>color</code>\n",null,0],["color_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-color_field","(object_name, method, options = {})","<p>Returns a text_field of type “color”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">color_field</span>(<span class=\"ruby-string\">&quot;car&quot;</span>, <span class=\"ruby-string\">&quot;color&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;car_color&quot; ...</span>\n</pre>\n",null,1],["color_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-color_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “color”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,1],["color_pair","Curses","Ruby/classes/Curses.html#method-c-color_pair","(p1)","<p>Sets the color pair attributes to <code>attrs</code>.\n<p>This should be equivalent to Curses.attrset(COLOR_PAIR(<code>attrs</code> …\n",null,0],["color_pairs","Curses","Ruby/classes/Curses.html#method-c-color_pairs","()","<p>Returns the COLOR_PAIRS available, if the curses library supports it.\n",null,0],["color_set","Curses::Window","Ruby/classes/Curses/Window.html#method-i-color_set","(p1)","<p>Sets the current color of the given window to the foreground/background\ncombination described by the …\n",null,0],["colorize_logging","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-colorize_logging","()","",null,1],["colorize_logging=","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-colorize_logging-3D","(val)","",null,1],["colors","Curses","Ruby/classes/Curses.html#method-c-colors","()","<p>returns COLORS\n",null,0],["cols","Curses","Ruby/classes/Curses.html#method-c-cols","()","<p>Returns the number of columns on the screen\n",null,0],["column","Matrix","Ruby/classes/Matrix.html#method-i-column","(j)","<p>Returns column vector number <code>j</code> of the matrix as a Vector\n(starting at 0 like an array).  When a block …\n",null,0],["column","Ripper::Filter","Ruby/classes/Ripper/Filter.html#method-i-column","()","<p>The column number of the current token. This value starts from 0. This\nmethod is valid only in event …\n",null,0],["column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html#method-i-column","(name, type = nil, options = {})","",null,1],["column","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-column","(column_name, type, options = {})","<p>Adds a new column to the named table. See TableDefinition#column for\ndetails of the options you can use. …\n",null,1],["column","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-column","(name, type, options = {})","<p>Instantiates a new column for the table. The <code>type</code> parameter is\nnormally one of the migrations native …\n",null,1],["column_defaults","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-column_defaults","()","",null,1],["column_defaults","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-column_defaults","()","<p>Returns a hash where the keys are column names and the values are default\nvalues when instantiating the …\n",null,1],["column_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-column_exists-3F","(table_name, column_name, type = nil, options = {})","<p>Checks to see if a column exists in a given table.\n\n<pre># Check a column exists\ncolumn_exists?(:suppliers, ...</pre>\n",null,1],["column_exists?","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-column_exists-3F","(column_name, type = nil, options = {})","<p>Checks to see if a column exists. See SchemaStatements#column_exists?\n",null,1],["column_for_attribute","ActiveRecord::AttributeMethods","Rails/classes/ActiveRecord/AttributeMethods.html#method-i-column_for_attribute","(name)","<p>Returns the column object for the named attribute. Returns <code>nil</code>\nif the named attribute not exists.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["column_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-column_name_length","()","<p>Returns the maximum length of a column name.\n",null,1],["column_names","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-column_names","()","<p>Returns an array of column names as strings.\n",null,1],["column_spec","ActiveRecord::ConnectionAdapters::ColumnDumper","Rails/classes/ActiveRecord/ConnectionAdapters/ColumnDumper.html#method-i-column_spec","(column, types)","",null,1],["column_vector","Matrix","Ruby/classes/Matrix.html#method-c-column_vector","(column)","<p>Creates a single-column matrix where the values of that column are as given\nin <code>column</code>.\n\n<pre><code>Matrix.column_vector([4,5,6]) ...</code></pre>\n",null,0],["column_vectors","Matrix","Ruby/classes/Matrix.html#method-i-column_vectors","()","<p>Returns an array of the column vectors of the matrix.  See Vector.\n",null,0],["columns","Matrix","Ruby/classes/Matrix.html#method-c-columns","(columns)","<p>Creates a matrix using <code>columns</code> as an array of column vectors.\n\n<pre><code>Matrix.columns([[25, 93], [-1, 66]])\n   ...</code></pre>\n",null,0],["columns","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-columns","(table_name)","<p>Returns the list of all column definitions for a table.\n",null,1],["columns","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-columns","(table = nil)","<p>Get the columns for a table\n",null,1],["columns","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-columns","(table_name)","<p>Returns an array of Column objects for the table specified by\n<code>table_name</code>. See the concrete implementation …\n",null,1],["columns","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-columns","()","",null,1],["columns","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-columns","()","<p>Returns an array of column objects for the table associated with this\nclass.\n",null,1],["columns_for_remove","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-columns_for_remove","(table_name, *column_names)","",null,1],["columns_hash","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-columns_hash","(table = nil)","<p>Get the columns for a table as a hash, key is the column name value is the\ncolumn object.\n",null,1],["columns_hash","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-columns_hash","()","<p>Returns a hash of column objects for the table associated with this class.\n",null,1],["columns_per_multicolumn_index","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-columns_per_multicolumn_index","()","<p>Returns the maximum number of columns in a multicolumn index.\n",null,1],["columns_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-columns_per_table","()","<p>Returns the maximum number of columns per table.\n",null,1],["combination","Array","Ruby/classes/Array.html#method-i-combination","(p1)","<p>When invoked with a block, yields all combinations of length <code>n</code>\nof elements from the array and then returns …\n",null,0],["comma_breakable","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-comma_breakable","()","<p>A convenience method which is same as follows:\n\n<pre><code>text &#39;,&#39;\nbreakable</code></pre>\n",null,0],["command","DRb::ExtServManager","Ruby/classes/DRb/ExtServManager.html#method-c-command","()","",null,0],["command=","DRb::ExtServManager","Ruby/classes/DRb/ExtServManager.html#method-c-command-3D","(cmd)","",null,0],["command_names","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-i-command_names","()","<p>Return a sorted list of all command names as strings.\n",null,0],["comment","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-comment","(comment)","<p>Called when a comment is encountered. @p comment The content of the comment\n",null,0],["comment","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-comment","(comment)","<p>Called when a comment is encountered. @p comment The content of the comment\n",null,0],["comment","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-comment","()","<p>Returns comments recorded in the gzip file header, or nil if the comments\nis not present.\n",null,0],["comment=","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-comment-3D","(comment)","<p>Replaces our comment with <code>comment</code>, unless it is empty.\n",null,0],["comment=","Rake::Task","Ruby/classes/Rake/Task.html#method-i-comment-3D","(description)","<p>Writing to the comment attribute is the same as adding a description.\n",null,0],["comment=","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-comment-3D","(p1)","<p>Specify the comment (<code>str</code>) in the gzip header.\n",null,0],["comment?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-comment-3F","()","<p>Content: [ String text ]\n",null,0],["comments","REXML::Element","Ruby/classes/REXML/Element.html#method-i-comments","()","<p>Get an array of all Comment children. IMMUTABLE\n",null,0],["commercial","Date","Ruby/classes/Date.html#method-c-commercial","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Creates a date object denoting the given week date.\n<p>The week and the day of week should be a negative …\n",null,0],["commercial","DateTime","Ruby/classes/DateTime.html#method-c-commercial","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7, p8 = v8)","<p>Creates a date-time object denoting the given week date.\n\n<pre><code>DateTime.commercial(2001) #=&gt; #&lt;DateTime: 2001-01-01T00:00:00+00:00 ...\n</code></pre>\n",null,0],["commit","PStore","Ruby/classes/PStore.html#method-i-commit","()","<p>Ends the current PStore#transaction, committing any changes to the data\nstore immediately.\n<p>Example:\n\n<pre><code>require ...\n</code></pre>\n",null,0],["commit!","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-commit-21","()","",null,1],["commit_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-commit_db_transaction","()","<p>Commits the transaction (and turns on auto-committing).\n",null,1],["commit_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-commit_db_transaction","()","<p>Commits a transaction.\n",null,1],["committed?","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-committed-3F","()","",null,1],["committed?","ActiveRecord::ConnectionAdapters::TransactionState","Rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-committed-3F","()","",null,1],["common_options","Gem::Command","Ruby/classes/Gem/Command.html#method-c-common_options","()","",null,0],["compact","Array","Ruby/classes/Array.html#method-i-compact","()","<p>Returns a copy of <code>self</code> with all <code>nil</code> elements\nremoved.\n\n<pre><code>[ &quot;a&quot;, nil, &quot;b&quot;, nil, &quot;c&quot;, nil ].compact\n       ...</code></pre>\n",null,0],["compact!","Array","Ruby/classes/Array.html#method-i-compact-21","()","<p>Removes <code>nil</code> elements from the array.\n<p>Returns <code>nil</code> if no changes were made, otherwise returns the\narray. …\n",null,0],["compact_specs","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-compact_specs","(specs)","<p>Compacts Marshal output for the specs index data source by using identical\nobjects as much as possible. …\n",null,0],["comparable_time","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-comparable_time","()","",null,1],["compare_by_identity","Hash","Ruby/classes/Hash.html#method-i-compare_by_identity","()","<p>Makes <em>hsh</em> compare its keys by their identity, i.e. it will\nconsider exact same objects as same keys. …\n",null,0],["compare_by_identity?","Hash","Ruby/classes/Hash.html#method-i-compare_by_identity-3F","()","<p>Returns <code>true</code> if <em>hsh</em> will compare its keys by their\nidentity.  Also see <code>Hash#compare_by_identity</code>.\n",null,0],["compare_file","FileUtils","Ruby/classes/FileUtils.html#method-c-compare_file","(a, b)","<p>Returns true if the contents of a file A and a file B are identical.\n\n<pre><code>FileUtils.compare_file(&#39;somefile&#39;, ...</code></pre>\n",null,0],["compare_language","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-compare_language","(lang1, lang2)","",null,0],["compare_stream","FileUtils","Ruby/classes/FileUtils.html#method-c-compare_stream","(a, b)","<p>Returns true if the contents of a stream <code>a</code> and <code>b</code>\nare identical.\n",null,0],["compare_with_coercion","Date","Rails/classes/Date.html#method-i-compare_with_coercion","(other)","<p>Allow Date to be compared with Time by converting to DateTime and relying\non the &lt;=&gt; from there. …\n",null,1],["compare_with_coercion","Time","Rails/classes/Time.html#method-i-compare_with_coercion","(other)","<p>Layers additional behavior on Time#&lt;=&gt; so that DateTime and\nActiveSupport::TimeWithZone instances …\n",null,1],["compare_without_coercion","Date","Rails/classes/Date.html#method-i-compare_without_coercion","(other)","",null,1],["compare_without_coercion","Time","Rails/classes/Time.html#method-i-compare_without_coercion","(other)","",null,1],["compatible?","Encoding","Ruby/classes/Encoding.html#method-c-compatible-3F","(p1, p2)","<p>Checks the compatibility of two objects.\n<p>If the objects are both strings they are compatible when they …\n",null,0],["compile","Regexp","Ruby/classes/Regexp.html#method-c-compile","(*args)","<p>Synonym for <code>Regexp.new</code>\n",null,0],["compile","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-compile","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = v5)","<p>Takes <code>source</code>, a String of Ruby code and compiles it to an\nInstructionSequence.\n<p>Optionally takes <code>file</code>, …\n",null,0],["compile_file","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_file","(p1, p2 = v2)","<p>Takes <code>file</code>, a String with the location of a Ruby source file,\nreads, parses and compiles the file, and …\n",null,0],["compile_methods!","ActiveSupport::Configurable::Configuration","Rails/classes/ActiveSupport/Configurable/Configuration.html#method-c-compile_methods-21","(keys)","<p>Compiles reader methods so we don&#39;t have to go through method_missing.\n",null,1],["compile_methods!","ActiveSupport::Configurable::Configuration","Rails/classes/ActiveSupport/Configurable/Configuration.html#method-i-compile_methods-21","()","",null,1],["compile_option","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_option","()","<p>Returns a hash of default options used by the Ruby iseq compiler.\n<p>For details, see InstructionSequence.compile_option= …\n",null,0],["compile_option=","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_option-3D","(p1)","<p>Sets the default values for various optimizations in the Ruby iseq\ncompiler.\n<p>Possible values for <code>options</code> …\n",null,0],["complain","Gem::Commands::LockCommand","Ruby/classes/Gem/Commands/LockCommand.html#method-i-complain","(message)","",null,0],["complete","OptionParser::Completion","Ruby/classes/OptionParser/Completion.html#method-i-complete","(key, icase = false, pat = nil)","",null,0],["complete","OptionParser::List","Ruby/classes/OptionParser/List.html#method-i-complete","(id, opt, icase = false, *pat, &block)","<p>Searches list <code>id</code> for <code>opt</code> and the optional\npatterns for completion <code>pat</code>. If <code>icase</code> is true,\nthe search is …\n",null,0],["complete","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-complete","(min_visibility)","<p>Prepares this ClassModule for use by a generator.\n<p>See RDoc::Store#complete\n",null,0],["complete","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-complete","(name)","<p>Completes <code>name</code> based on the caches.  For Readline\n",null,0],["complete","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-complete","(min_visibility)","<p>Prepares the RDoc code object tree for use by a generator.\n<p>It finds unique classes/modules defined, and …\n",null,0],["complete_authentication","Win32::SSPI::NegotiateAuth","Ruby/classes/Win32/SSPI/NegotiateAuth.html#method-i-complete_authentication","(token)","<p>Takes a token and gets the next token in the Negotiate authentication\nchain. Token can be Base64 encoded …\n",null,0],["completer_quote_characters","Readline","Ruby/classes/Readline.html#method-c-completer_quote_characters","()","<p>Gets a list of characters which can be used to quote a substring of the\nline.\n<p>Raises NotImplementedError …\n",null,0],["completer_quote_characters=","Readline","Ruby/classes/Readline.html#method-c-completer_quote_characters-3D","(p1)","<p>Sets a list of characters which can be used to quote a substring of the\nline. Completion occurs on the …\n",null,0],["completer_word_break_characters","Readline","Ruby/classes/Readline.html#method-c-completer_word_break_characters","()","<p>Gets the basic list of characters that signal a break between words for\nrl_complete_internal().\n<p>Raises …\n",null,0],["completer_word_break_characters=","Readline","Ruby/classes/Readline.html#method-c-completer_word_break_characters-3D","(p1)","<p>Sets the basic list of characters that signal a break between words for\nrl_complete_internal(). The default …\n",null,0],["completion_append_character","Readline","Ruby/classes/Readline.html#method-c-completion_append_character","()","<p>Returns a string containing a character to be appended on completion. The\ndefault is a space (“ …\n",null,0],["completion_append_character=","Readline","Ruby/classes/Readline.html#method-c-completion_append_character-3D","(p1)","<p>Specifies a character to be appended on completion. Nothing will be\nappended if an empty string (“”) …\n",null,0],["completion_case_fold","Readline","Ruby/classes/Readline.html#method-c-completion_case_fold","()","<p>Returns true if completion ignores case. If no, returns false.\n<p>NOTE: Returns the same object that is specified …\n",null,0],["completion_case_fold=","Readline","Ruby/classes/Readline.html#method-c-completion_case_fold-3D","(p1)","<p>Sets whether or not to ignore case on completion.\n<p>Raises SecurityError exception if $SAFE is 4.\n",null,0],["completion_proc","Readline","Ruby/classes/Readline.html#method-c-completion_proc","()","<p>Returns the completion Proc object.\n<p>Raises SecurityError exception if $SAFE is 4.\n",null,0],["completion_proc=","Readline","Ruby/classes/Readline.html#method-c-completion_proc-3D","(p1)","<p>Specifies a Proc object <code>proc</code> to determine completion behavior.\nIt should take input string and return …\n",null,0],["component","Matrix","Ruby/classes/Matrix.html#method-i-component","(i, j)","",null,0],["component","URI::Generic","Ruby/classes/URI/Generic.html#method-i-component","()","<p>Components of the URI in the order.\n",null,0],["component","URI::Generic","Ruby/classes/URI/Generic.html#method-c-component","()","<p>Components of the URI in the order.\n",null,0],["component","Vector","Ruby/classes/Vector.html#method-i-component","(i)","",null,0],["component_ary","URI::Generic","Ruby/classes/URI/Generic.html#method-i-component_ary","()","<p>returns an Array of the components defined from the COMPONENT Array\n",null,0],["component_root_dir","Rails::API::AppTask","Rails/classes/Rails/API/AppTask.html#method-i-component_root_dir","(gem_name)","",null,1],["component_root_dir","Rails::API::RepoTask","Rails/classes/Rails/API/RepoTask.html#method-i-component_root_dir","(component)","",null,1],["compose","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-compose","()","<p>Performs composition on all the characters.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;é&#39;</span>.<span class=\"ruby-identifier\">length</span>                       <span class=\"ruby-comment\"># =&gt; 3</span>\n<span class=\"ruby-string\">&#39;é&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">compose</span>.<span class=\"ruby-identifier\">to_s</span>.<span class=\"ruby-identifier\">length</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["compose","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-compose","(codepoints)","<p>Compose decomposed characters to the composed form.\n",null,1],["composed_of","ActiveRecord::Aggregations::ClassMethods","Rails/classes/ActiveRecord/Aggregations/ClassMethods.html#method-i-composed_of","(part_id, options = {})","<p>Adds reader and writer methods for manipulating a value object:\n<code>composed_of :address</code> adds <code>address</code> and …\n",null,1],["compress","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-compress","(filename, extension)","<p>Compress <code>filename</code> with <code>extension</code>.\n",null,0],["compress","ActiveSupport::Gzip","Rails/classes/ActiveSupport/Gzip.html#method-c-compress","(source, level=Zlib::DEFAULT_COMPRESSION, strategy=Zlib::DEFAULT_STRATEGY)","<p>Compresses a string using gzip.\n",null,1],["compress_indicies","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-compress_indicies","()","<p>Compresses indicies on disk\n",null,0],["compute_asset_extname","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-compute_asset_extname","(source, options = {})","<p>Compute extname to append to asset path. Returns nil if nothing should be\nadded.\n",null,1],["compute_asset_host","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-compute_asset_host","(source = \"\", options = {})","<p>Pick an asset host for this source. Returns <code>nil</code> if no host is\nset, the host if no wildcard is set, the …\n",null,1],["compute_asset_path","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-compute_asset_path","(source, options = {})","<p>Computes asset path to public directory. Plugins and extensions can\noverride this method to point to …\n",null,1],["compute_key","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-compute_key","(p1)","<p>Returns a String containing a shared secret computed from the other\nparty&#39;s public value. See DH_compute_key …\n",null,0],["compute_tags","Rails::Rack::Logger","Rails/classes/Rails/Rack/Logger.html#method-i-compute_tags","(request)","",null,1],["compute_type","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-compute_type","(type_name)","<p>Returns the class type of the record using the current module as a prefix.\nSo descendants of MyApp::Business::Account …\n",null,1],["concat","Array","Ruby/classes/Array.html#method-i-concat","(p1)","<p>Appends the elements of <code>other_ary</code> to <code>self</code>.\n\n<pre><code>[ &quot;a&quot;, &quot;b&quot; ].concat( [&quot;c&quot;, &quot;d&quot;] ) #=&gt; [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot; ...\n</code></pre>\n",null,0],["concat","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-i-concat","(parts)","<p>Concatenates the given <code>parts</code> onto the document\n",null,0],["concat","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-concat","( *objects )","<p>UNTESTED\n",null,0],["concat","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-concat","(*jobs)","<p>Returns a Concat object, for the given <code>jobs</code>\n",null,0],["concat","String","Ruby/classes/String.html#method-i-concat","(p1)","<p>Append—Concatenates the given object to <em>str</em>. If the object is a\n<code>Integer</code>, it is considered as a codepoint, …\n",null,0],["concat","StringScanner","Ruby/classes/StringScanner.html#method-i-concat","(p1)","<p>Appends <code>str</code> to the string being scanned. This method does not\naffect scan pointer.\n\n<pre><code>s = StringScanner.new(&quot;Fri ...</code></pre>\n",null,0],["concat","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-concat","(string)","<p>The preferred method of outputting text in your views is to use the &lt;%=\n“text” %&gt; eRuby …\n",null,1],["concat","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-concat","(*records)","<p>Add one or more records to the collection by setting their foreign keys to\nthe association&#39;s primary …\n",null,1],["concat","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-concat","(value)","",null,1],["concat","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-concat","(paths)","",null,1],["concern","ActionDispatch::Routing::Mapper::Concerns","Rails/classes/ActionDispatch/Routing/Mapper/Concerns.html#method-i-concern","(name, callable = nil, &block)","<p>Define a routing concern using a name.\n<p>Concerns may be defined inline, using a block, or handled by another …\n",null,1],["concerns","ActionDispatch::Routing::Mapper::Concerns","Rails/classes/ActionDispatch/Routing/Mapper/Concerns.html#method-i-concerns","(*args)","<p>Use the named concerns\n\n<pre>resources :posts do\n  concerns :commentable\nend</pre>\n<p>concerns also work in any routes …\n",null,1],["conf","IRB","Ruby/classes/IRB.html#method-c-conf","()","<p>Displays current configuration.\n<p>Modifing the configuration is achieved by sending a message to IRB.conf …\n",null,0],["config","DRb","Ruby/classes/DRb.html#method-c-config","()","<p>Get the configuration of the current server.\n<p>If there is no current server, this returns the default configuration. …\n",null,0],["config","ActiveSupport::Configurable","Rails/classes/ActiveSupport/Configurable.html#method-i-config","()","<p>Reads and writes attributes from a configuration <code>OrderedHash</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&#39;active_support/configurable&#39;</span>\n\n<span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["config","ActiveSupport::Configurable::ClassMethods","Rails/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-config","()","",null,1],["config","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-config","()","",null,1],["config","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-i-config","()","",null,1],["config","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-config","()","<p>Define the configuration object for the engine.\n",null,1],["config","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-config","()","",null,1],["config","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-i-config","()","",null,1],["config=","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-config-3D","(p1)","",null,0],["config_accessor","ActiveSupport::Configurable::ClassMethods","Rails/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-config_accessor","(*names)","<p>Allows you to add shortcut so that you don&#39;t have to refer to attribute\nthrough config. Also look …\n",null,1],["config_file","Gem","Ruby/classes/Gem.html#method-c-config_file","()","<p>The path to standard location of the user&#39;s .gemrc file.\n",null,0],["config_file_name","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-config_file_name","()","<p>The name of the configuration file.\n",null,0],["configru","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-configru","()","",null,1],["configuration","Gem","Ruby/classes/Gem.html#method-c-configuration","()","<p>The standard configuration object for gems.\n",null,0],["configuration","Rails","Rails/classes/Rails.html#method-c-configuration","()","<p>The Configuration instance used to configure the Rails environment\n",null,1],["configuration=","Gem","Ruby/classes/Gem.html#method-c-configuration-3D","(config)","<p>Use the given configuration object (which implements the ConfigFile\nprotocol) as the standard configuration …\n",null,0],["configure","ActiveSupport::Configurable::ClassMethods","Rails/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-configure","()","",null,1],["configure","Rails::Railtie::Configurable::ClassMethods","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-configure","(&block)","",null,1],["configure_connection_for_https","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-configure_connection_for_https","(connection)","",null,0],["configure_rdoc_files","Rails::API::Task","Rails/classes/Rails/API/Task.html#method-i-configure_rdoc_files","()","",null,1],["conflicting_dependencies","Gem::DependencyResolutionError","Ruby/classes/Gem/DependencyResolutionError.html#method-i-conflicting_dependencies","()","",null,0],["conflicting_dependencies","Gem::DependencyResolver::DependencyConflict","Ruby/classes/Gem/DependencyResolver/DependencyConflict.html#method-i-conflicting_dependencies","()","<p>Return the 2 dependency objects that conflicted\n",null,0],["conflicts","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-conflicts","()","<p>Return any possible conflicts against the currently loaded specs.\n",null,0],["conj","Complex","Ruby/classes/Complex.html#method-i-conj","()","<p>Returns the complex conjugate.\n\n<pre><code>Complex(1, 2).conjugate  #=&gt; (1-2i)\n</code></pre>\n",null,0],["conj","Matrix","Ruby/classes/Matrix.html#method-i-conj","()","",null,0],["conj","Numeric","Ruby/classes/Numeric.html#method-i-conj","()","<p>Returns self.\n",null,0],["conjugate","Complex","Ruby/classes/Complex.html#method-i-conjugate","()","<p>Returns the complex conjugate.\n\n<pre><code>Complex(1, 2).conjugate  #=&gt; (1-2i)\n</code></pre>\n",null,0],["conjugate","Matrix","Ruby/classes/Matrix.html#method-i-conjugate","()","<p>Returns the conjugate of the matrix.\n\n<pre><code>Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]]\n  =&gt; 1+2i   i ...\n</code></pre>\n",null,0],["conjugate","Numeric","Ruby/classes/Numeric.html#method-i-conjugate","()","<p>Returns self.\n",null,0],["connect","Addrinfo","Ruby/classes/Addrinfo.html#method-i-connect","(opts={}, &block)","<p>creates a socket connected to the address of self.\n<p>The optional argument <em>opts</em> is options represented by …\n",null,0],["connect","DRb::DRbSSLSocket::SSLConfig","Ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-connect","(tcp)","<p>Connect to IO <code>tcp</code>, with context of the current certificate\nconfiguration\n",null,0],["connect","Net::FTP","Ruby/classes/Net/FTP.html#method-i-connect","(host, port = FTP_PORT)","<p>Establishes an FTP connection to host, optionally overriding the default\nport. If the environment variable …\n",null,0],["connect","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-connect","()","<p>Initiates an SSL/TLS handshake with a server.  The handshake may be started\nafter unencrypted data has …\n",null,0],["connect","Rake::FtpUploader","Ruby/classes/Rake/FtpUploader.html#method-i-connect","(path, host, account, password)","<p>Create an uploader and pass it to the given block as <code>up</code>. When\nthe block is complete, close the uploader. …\n",null,0],["connect","Socket","Ruby/classes/Socket.html#method-i-connect","(p1)","<p>Requests a connection to be made on the given <code>remote_sockaddr</code>.\nReturns 0 if successful, otherwise an …\n",null,0],["connect","UDPSocket","Ruby/classes/UDPSocket.html#method-i-connect","(p1, p2)","<p>Connects <em>udpsocket</em> to <em>host</em>:<em>port</em>.\n<p>This makes possible to send without destination address.\n\n<pre><code>u1 = UDPSocket.new ...</code></pre>\n",null,0],["connect","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-connect","(p1, *args)","<p>Returns running OLE Automation object or WIN32OLE object from moniker. 1st\nargument should be OLE program …\n",null,0],["connect_address","BasicSocket","Ruby/classes/BasicSocket.html#method-i-connect_address","()","<p>Returns an address of the socket suitable for connect in the local machine.\n<p>This method returns <em>self</em>.local_address, …\n",null,0],["connect_from","Addrinfo","Ruby/classes/Addrinfo.html#method-i-connect_from","(*args, &block)","<p>creates a socket connected to the address of self.\n<p>If one or more arguments given as <em>local_addr_args</em>, …\n",null,0],["connect_nonblock","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-connect_nonblock","()","<p>Initiates the SSL/TLS handshake as a client in non-blocking manner.\n\n<pre><code># emulates blocking connect\nbegin ...</code></pre>\n",null,0],["connect_nonblock","Socket","Ruby/classes/Socket.html#method-i-connect_nonblock","(p1)","<p>Requests a connection to be made on the given <code>remote_sockaddr</code>\nafter O_NONBLOCK is set for the underlying …\n",null,0],["connect_to","Addrinfo","Ruby/classes/Addrinfo.html#method-i-connect_to","(*args, &block)","<p>creates a socket connected to <em>remote_addr_args</em> and bound to self.\n<p>The optional last argument <em>opts</em> is options …\n",null,0],["connected?","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-connected-3F","(klass)","<p>Returns true if a connection that&#39;s accessible to this class has\nalready been opened.\n",null,1],["connected?","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-connected-3F","()","<p>Returns true if a connection has already been opened.\n",null,1],["connected?","ActiveRecord::ConnectionHandling","Rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connected-3F","()","<p>Returns <code>true</code> if Active Record is connected.\n",null,1],["connecting","GServer","Ruby/classes/GServer.html#method-i-connecting","(client)","<p>Called when a client connects, if auditing is enabled.\n<p><code>client</code> &mdash; a TCPSocket instances representing the client …\n\n",null,0],["connection","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-connection","()","<p>Retrieve the connection associated with the current thread, or call\n#checkout to obtain one if necessary. …\n",null,1],["connection","ActiveRecord::ConnectionHandling","Rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connection","()","<p>Returns the connection currently associated with the class. This can also\nbe used to “borrow” …\n",null,1],["connection","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-connection","()","<p>Returns the connection currently associated with the class. This can also\nbe used to “borrow” …\n",null,1],["connection","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-connection","()","",null,1],["connection_close?","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-connection_close-3F","()","",null,0],["connection_config","ActiveRecord::ConnectionHandling","Rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connection_config","()","<p>Returns the configuration of the associated connection as a hash:\n\n<pre>ActiveRecord::Base.connection_config ...</pre>\n",null,1],["connection_for","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-connection_for","(uri)","<p>Creates or an HTTP connection based on <code>uri</code>, or retrieves an\nexisting connection, using a proxy if needed. …\n",null,0],["connection_handler","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-connection_handler","()","",null,1],["connection_handler","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-c-connection_handler","()","",null,1],["connection_handler=","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-c-connection_handler-3D","(handler)","",null,1],["connection_id","ActiveRecord::ConnectionHandling","Rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connection_id","()","",null,1],["connection_id=","ActiveRecord::ConnectionHandling","Rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connection_id-3D","(connection_id)","",null,1],["connection_keep_alive?","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-connection_keep_alive-3F","()","",null,0],["connection_pool","ActiveRecord::ConnectionHandling","Rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connection_pool","()","",null,1],["connection_pool_list","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-connection_pool_list","()","",null,1],["connection_pools","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-connection_pools","()","",null,1],["connections","GServer","Ruby/classes/GServer.html#method-i-connections","()","<p>Return the current number of connected clients\n",null,0],["consider_local?","Gem::DependencyInstaller","Ruby/classes/Gem/DependencyInstaller.html#method-i-consider_local-3F","()","<p>Indicated, based on the requested domain, if local gems should be\nconsidered.\n",null,0],["consider_remote?","Gem::DependencyInstaller","Ruby/classes/Gem/DependencyInstaller.html#method-i-consider_remote-3F","()","<p>Indicated, based on the requested domain, if remote gems should be\nconsidered.\n",null,0],["console","IO","Ruby/classes/IO.html#method-c-console","()","<p>Returns an File instance opened console.\n<p>You must require &#39;io/console&#39; to use this method.\n",null,0],["console","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-console","(&blk)","",null,1],["const_defined?","Module","Ruby/classes/Module.html#method-i-const_defined-3F","(p1, p2 = v2)","<p>Checks for a constant with the given name in <em>mod</em> If\n<code>inherit</code> is set, the lookup will also search the ancestors …\n",null,0],["const_defined_in?","JSON","Ruby/classes/JSON.html#method-c-const_defined_in-3F","(modul, constant)","",null,0],["const_get","Module","Ruby/classes/Module.html#method-i-const_get","(p1, p2 = v2)","<p>Checks for a constant with the given name in <em>mod</em> If\n<code>inherit</code> is set, the lookup will also search the ancestors …\n",null,0],["const_load","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-const_load","(p1, p2 = v2)","<p>Defines the constants of OLE Automation server as mod&#39;s constants. The\nfirst argument is WIN32OLE …\n",null,0],["const_missing","Module","Ruby/classes/Module.html#method-i-const_missing","(const_name)","<p>Check for deprecated uses of top level (i.e. in Object) uses of Rake class\nnames.  If someone tries to …\n",null,0],["const_set","Module","Ruby/classes/Module.html#method-i-const_set","(p1, p2)","<p>Sets the named constant to the given object, returning that object. Creates\na new constant if no constant …\n",null,0],["const_warning","Rake::Application","Ruby/classes/Rake/Application.html#method-i-const_warning","(const_name)","<p>Warn about deprecated use of top level constant names.\n",null,0],["const_warning","Rake::Application","Ruby/classes/Rake/Application.html#method-i-const_warning","(const_name)","<p>Warn about deprecated use of top level constant names.\n",null,0],["constantize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-constantize","(camel_cased_word)","<p>Tries to find a constant with the name specified in the argument string.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;Module&#39;</span>.<span class=\"ruby-identifier\">constantize</span>     <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["constantize","String","Rails/classes/String.html#method-i-constantize","()","<p><code>constantize</code> tries to find a declared constant with the name\nspecified in the string. It raises a NameError …\n",null,1],["constants","Module","Ruby/classes/Module.html#method-c-constants","(*args)","<p>In the first form, returns an array of the names of all constants\naccessible from the point of call. …\n",null,0],["constants","Module","Ruby/classes/Module.html#method-i-constants","(p1 = v1)","<p>Returns an array of the names of the constants accessible in <em>mod</em>.\nThis includes the names of constants …\n",null,0],["constraints","ActionDispatch::Routing::Mapper::Scoping","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-constraints","(constraints = {})","<p>Parameter Restriction\n<p>Allows you to constrain the nested routes based on a set of rules. For\ninstance, …\n",null,1],["constraints","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-constraints","()","",null,1],["construct","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-construct","(hour, minute, second)","",null,0],["construct_join_dependency_for_association_find","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-construct_join_dependency_for_association_find","()","",null,1],["construct_limited_ids_condition","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-construct_limited_ids_condition","(relation)","",null,1],["construct_relation_for_association_calculations","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-construct_relation_for_association_calculations","()","",null,1],["construct_relation_for_association_find","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-construct_relation_for_association_find","(join_dependency)","",null,1],["consume","REXML::IOSource","Ruby/classes/REXML/IOSource.html#method-i-consume","( pattern )","",null,0],["consume","REXML::Source","Ruby/classes/REXML/Source.html#method-i-consume","( pattern )","",null,0],["consumes?","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-c-consumes-3F","(string)","<p>Returns <code>true</code> when the proxy class can handle the string.\nReturns <code>false</code> otherwise.\n",null,1],["contains","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-contains","( string, test )","<p>Fixed by Mike Stok\n",null,0],["contains_bad_protocols?","HTML::WhiteListSanitizer","Rails/classes/HTML/WhiteListSanitizer.html#method-i-contains_bad_protocols-3F","(attr_name, value)","",null,1],["contains_requirable_file?","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-contains_requirable_file-3F","(file)","<p>Return true if this spec can require <code>file</code>.\n",null,0],["content","RDoc::RD::BlockParser","Ruby/classes/RDoc/RD/BlockParser.html#method-i-content","(values)","<p>Retrieves the content of <code>values</code> as a single String\n",null,0],["content=","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-content-3D","(value)","",null,0],["content=","RSS::Maker::ITunesItemModel::ITunesDurationBase","Ruby/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html#method-i-content-3D","(content)","",null,0],["content_columns","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-content_columns","()","<p>Returns an array of column objects where the primary id, all columns ending\nin “_id” or “_count”, …\n",null,1],["content_encoding","OpenURI::Meta","Ruby/classes/OpenURI/Meta.html#method-i-content_encoding","()","<p>Returns a list of encodings in Content-Encoding field as an array of\nstrings.\n<p>The encodings are downcased …\n",null,0],["content_for","ActionView::Helpers::CaptureHelper","Rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-content_for","(name, content = nil, options = {}, &block)","<p>Calling content_for stores a block of markup in an identifier for later\nuse. In order to access this …\n",null,1],["content_for?","ActionView::Helpers::CaptureHelper","Rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-content_for-3F","(name)","<p>content_for? checks whether any content has been captured yet using\n`content_for`. Useful to render parts …\n",null,1],["content_length","HttpServer::Request","Ruby/classes/HttpServer/Request.html#method-i-content_length","()","",null,0],["content_length","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-content_length","()","<p>Returns an Integer object which represents the HTTP Content-Length: header\nfield, or <code>nil</code> if that field …\n",null,0],["content_length","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-content_length","()","<p>The content-length header\n",null,0],["content_length","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-content_length","()","<p>The content-length header\n",null,0],["content_length","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-content_length","()","<p>Returns the content length of the request as an integer.\n",null,1],["content_length=","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-content_length-3D","(len)","",null,0],["content_length=","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-content_length-3D","(len)","<p>Sets the content-length header to <code>len</code>\n",null,0],["content_mime_type","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-content_mime_type","()","<p>The MIME type of the HTTP request, such as Mime::XML.\n<p>For backward compatibility, the post format is extracted …\n",null,1],["content_range","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-content_range","()","<p>Returns a Range object which represents the value of the Content-Range:\nheader field. For a partial entity …\n",null,0],["content_setup","RSS::Element","Ruby/classes/RSS/Element.html#method-i-content_setup","(type=nil, disp_name=nil)","",null,0],["content_tag","ActionView::Helpers::ActiveModelInstanceTag","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-content_tag","(*)","",null,1],["content_tag","ActionView::Helpers::TagHelper","Rails/classes/ActionView/Helpers/TagHelper.html#method-i-content_tag","(name, content_or_options_with_block = nil, options = nil, escape = true, &block)","<p>Returns an HTML block tag of type <code>name</code> surrounding the\n<code>content</code>. Add HTML attributes by passing an attributes …\n",null,1],["content_tag_for","ActionView::Helpers::RecordTagHelper","Rails/classes/ActionView/Helpers/RecordTagHelper.html#method-i-content_tag_for","(tag_name, single_or_multiple_records, prefix = nil, options = nil, &block)","<p>content_tag_for creates an HTML element with id and class parameters that\nrelate to the specified Active …\n",null,1],["content_type","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-content_type","()","<p>Returns a content type string such as “text/html”. This method returns nil\nif Content-Type: …\n",null,0],["content_type","OpenURI::Meta","Ruby/classes/OpenURI/Meta.html#method-i-content_type","()","<p>returns “type/subtype” which is MIME Content-Type. It is downcased for\ncanonicalization. Content-Type …\n",null,0],["content_type","RSS::Atom::ContentModel::ClassMethods","Ruby/classes/RSS/Atom/ContentModel/ClassMethods.html#method-i-content_type","()","",null,0],["content_type","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-content_type","()","<p>The content-type header\n",null,0],["content_type","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-content_type","()","<p>The content-type header\n",null,0],["content_type","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-content_type","()","",null,1],["content_type","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-content_type","()","",null,1],["content_type=","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-content_type-3D","(type, params = {})","",null,0],["content_type=","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-content_type-3D","(type)","<p>Sets the content-type header to <code>type</code>\n",null,0],["content_type=","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-content_type-3D","(type)","<p>Basic implementations for content_type=, location=, and headers are\nprovided to reduce the dependency …\n",null,1],["content_type=","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-content_type-3D","(content_type)","",null,1],["contents","Gem::Package","Ruby/classes/Gem/Package.html#method-i-contents","()","<p>A list of file names contained in this gem\n",null,0],["contents","Gem::Package::Old","Ruby/classes/Gem/Package/Old.html#method-i-contents","()","<p>A list of file names contained in this gem\n",null,0],["context","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-context","(thread=Thread.current)","",null,0],["context","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-context","()","",null,0],["context","REXML::ParseException","Ruby/classes/REXML/ParseException.html#method-i-context","()","",null,0],["context=","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-context-3D","(value)","",null,0],["continue?","Net::SMTP::Response","Ruby/classes/Net/SMTP/Response.html#method-i-continue-3F","()","<p>Determines whether the response received was a Positive Intermediate reply\n(3xx reply code)\n",null,0],["continue_entry_body","RDoc::Parser::ChangeLog","Ruby/classes/RDoc/Parser/ChangeLog.html#method-i-continue_entry_body","(entry_body, continuation)","<p>Attaches the <code>continuation</code> of the previous line to the\n<code>entry_body</code>.\n<p>Continued function listings are joined …\n",null,0],["continue_timeout=","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-continue_timeout-3D","(sec)","<p>Setter for the continue_timeout attribute.\n",null,0],["control_expressions","","Ruby/files/ruby/doc/syntax/control_expressions_rdoc.html","","<p>Control Expressions\n<p>Ruby has a variety of ways to control execution.  All the expressions\ndescribed here …\n",null,0],["controller","ActionDispatch::Routing::Mapper::Scoping","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-controller","(controller, options={})","<p>Scopes routes to a specific controller\n\n<pre>controller &quot;food&quot; do\n  match &quot;bacon&quot;, action: &quot;bacon&quot;\nend</pre>\n",null,1],["controller","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-controller","()","",null,1],["controller","Rails::ConsoleMethods","Rails/classes/Rails/ConsoleMethods.html#method-i-controller","()","",null,1],["controller_name","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-controller_name","()","<p>Returns the last part of the controller&#39;s name, underscored, without\nthe ending <code>Controller</code>. For instance, …\n",null,1],["controller_name","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-controller_name","()","<p>Delegates to the class&#39; <code>controller_name</code>\n",null,1],["controller_path","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-i-controller_path","()","<p>Delegates to the class&#39; #controller_path\n",null,1],["controller_path","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-controller_path","()","<p>Returns the full controller name, underscored, without the ending\nController. For instance, MyApp::MyPostsController …\n",null,1],["controller_path","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-controller_path","()","",null,1],["conv2value","XMLRPC::Create","Ruby/classes/XMLRPC/Create.html#method-i-conv2value","(param)","<p>Converts a Ruby object into a XML-RPC <code>&lt;value&gt;</code> tag\n",null,0],["convert","CSV","Ruby/classes/CSV.html#method-i-convert","(name = nil, &converter)","<p>You can use this method to install a CSV::Converters built-in, or provide a\nblock that handles a custom …\n",null,0],["convert","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-convert","(p1)","<p>Convert source_string and return destination_string.\n<p>source_string is assumed as a part of source. i.e. …\n",null,0],["convert","OptionParser::Completion","Ruby/classes/OptionParser/Completion.html#method-i-convert","(opt = nil, val = nil, *)","",null,0],["convert","RDoc::Markup","Ruby/classes/RDoc/Markup.html#method-i-convert","(input, formatter)","<p>We take <code>input</code>, parse it if necessary, then invoke the output\n<code>formatter</code> using a Visitor to render the …\n",null,0],["convert","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-convert","(content)","<p>Marks up <code>content</code>\n",null,0],["convert","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-convert","(content)","<p>Marks up <code>content</code>\n",null,0],["convert","RDoc::Markup::ToLabel","Ruby/classes/RDoc/Markup/ToLabel.html#method-i-convert","(text)","<p>Converts <code>text</code> to an HTML-safe label\n",null,0],["convert","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-convert","(value)","",null,0],["convert","RSS::Element","Ruby/classes/RSS/Element.html#method-i-convert","(value)","",null,0],["convert","WEBrick::HTTPVersion","Ruby/classes/WEBrick/HTTPVersion.html#method-c-convert","(version)","<p>Converts <code>version</code> into an HTTPVersion\n",null,0],["convert_attrs","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-convert_attrs","(str, attrs)","<p>Map attributes like <strong>text</strong>to the sequence\n001002&lt;char&gt;001003&lt;char&gt;, where &lt;char&gt; is …\n",null,0],["convert_flow","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-convert_flow","(flow)","<p>Converts flow items <code>flow</code>\n",null,0],["convert_flow","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-convert_flow","(flow)","<p>Converts flow items <code>flow</code>\n",null,0],["convert_html","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-convert_html","(str, attrs)","<p>Converts HTML tags to RDoc attributes\n",null,0],["convert_key","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_key","(key)","",null,1],["convert_key","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_key","(key)","",null,1],["convert_special","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-convert_special","(special)","<p>Converts added specials.  See RDoc::Markup#add_special\n",null,0],["convert_special","RDoc::Markup::ToBs","Ruby/classes/RDoc/Markup/ToBs.html#method-i-convert_special","(special)","<p>Calls convert_string on the result of convert_special\n",null,0],["convert_specials","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-convert_specials","(str, attrs)","<p>Converts special sequences to RDoc attributes\n",null,0],["convert_string","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-convert_string","(string)","<p>Converts a string to be fancier if desired\n",null,0],["convert_string","RDoc::Markup::ToBs","Ruby/classes/RDoc/Markup/ToBs.html#method-i-convert_string","(string)","<p>Adds bold or underline mixed with backspaces\n",null,0],["convert_string","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-convert_string","(text)","<p>CGI-escapes <code>text</code>\n",null,0],["convert_to_model","ActionController::ModelNaming","Rails/classes/ActionController/ModelNaming.html#method-i-convert_to_model","(object)","<p>Converts the given object to an ActiveModel compliant one.\n",null,1],["convert_to_model","ActionView::ModelNaming","Rails/classes/ActionView/ModelNaming.html#method-i-convert_to_model","(object)","<p>Converts the given object to an ActiveModel compliant one.\n",null,1],["convert_value","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_value","(value, options = {})","",null,1],["convert_value","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_value","(value, options = {})","",null,1],["converter=","RSS::Element","Ruby/classes/RSS/Element.html#method-i-converter-3D","(converter)","",null,0],["converters","CSV","Ruby/classes/CSV.html#method-i-converters","()","<p>Returns the current list of converters in effect.  See CSV::new for\ndetails. Built-in converters will …\n",null,0],["convertible_int","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-convertible_int","(type, headers = nil, opts = nil, &b)","<p>Returns the convertible integer type of the given <code>type</code>.  You\nmay optionally specify additional <code>headers</code> …\n",null,0],["convpath","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-convpath","()","<p>Returns the conversion path of ec.\n<p>The result is an array of conversions.\n\n<pre><code>ec = Encoding::Converter.new(&quot;ISO-8859-1&quot;, ...</code></pre>\n",null,0],["cooked","IO","Ruby/classes/IO.html#method-i-cooked","()","<p>Yields <code>self</code> within cooked mode.\n\n<pre><code>STDIN.cooked(&amp;:gets)</code></pre>\n<p>will read and return a line with echo back and line …\n",null,0],["cooked!","IO","Ruby/classes/IO.html#method-i-cooked-21","()","<p>Enables cooked mode.\n<p>If the terminal mode needs to be back, use io.cooked { … }.\n<p>You must require &#39;io/console&#39; …\n",null,0],["cookie_jar","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-cookie_jar","()","",null,1],["cookies","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-cookies","()","<p>Returns the response cookies, converted to a Hash of (name =&gt; value)\npairs\n\n<pre>assert_equal &#39;AuthorOfNewPage&#39;, ...</pre>\n",null,1],["copy","FileUtils","Ruby/classes/FileUtils.html#method-c-copy","(src, dest, options = {})","",null,0],["copy","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-copy","(path, initheader = nil)","<p>Sends a COPY request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,0],["copy","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-copy","(set, mailbox)","<p>Sends a COPY command to copy the specified message(s) to the end of the\nspecified destination <code>mailbox</code> …\n",null,0],["copy","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-copy","(p1)","",null,0],["copy","Sys","Ruby/classes/Sys.html#method-i-copy","(file_name, dest_file)","<p>Copy a single file from <code>file_name</code> to <code>dest_file</code>.\n",null,0],["copy","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-copy","(destination, sources, options = {})","",null,1],["copy_entry","FileUtils","Ruby/classes/FileUtils.html#method-c-copy_entry","(src, dest, preserve = false, dereference_root = false, remove_destination = false)","<p>Copies a file system entry <code>src</code> to <code>dest</code>. If\n<code>src</code> is a directory, this method copies its contents\nrecursively. …\n",null,0],["copy_file","FileUtils","Ruby/classes/FileUtils.html#method-c-copy_file","(src, dest, preserve = false, dereference = true)","<p>Copies file contents of <code>src</code> to <code>dest</code>. Both of\n<code>src</code> and <code>dest</code> must be a path name.\n",null,0],["copy_files","Sys","Ruby/classes/Sys.html#method-i-copy_files","(wildcard, dest_dir)","<p>Copy all files matching <code>wildcard</code> into the directory\n<code>dest_dir</code>.\n",null,0],["copy_nonce","OpenSSL::OCSP::BasicResponse","Ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-copy_nonce","(p1)","",null,0],["copy_static","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-copy_static","()","<p>Copies static files from the static_path into the output directory\n",null,0],["copy_stream","FileUtils","Ruby/classes/FileUtils.html#method-c-copy_stream","(src, dest)","<p>Copies stream <code>src</code> to <code>dest</code>. <code>src</code> must\nrespond to #read(n) and <code>dest</code> must respond to #write(str).\n",null,0],["copy_stream","IO","Ruby/classes/IO.html#method-c-copy_stream","(p1, p2, p3 = v3, p4 = v4)","<p>IO.copy_stream copies <em>src</em> to <em>dst</em>. <em>src</em> and\n<em>dst</em> is either a filename or an IO.\n<p>This method returns the number …\n",null,0],["copy_string","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-copy_string","(start_pos, end_pos)","<p>Copies <code>start_pos</code> to <code>end_pos</code> from the current\nstring\n",null,0],["coredump?","Process::Status","Ruby/classes/Process/Status.html#method-i-coredump-3F","()","<p>Returns <code>true</code> if <em>stat</em> generated a coredump when it\nterminated. Not available on all platforms.\n",null,0],["correct?","Gem::Version","Ruby/classes/Gem/Version.html#method-c-correct-3F","(version)","<p>True if the <code>version</code> string matches RubyGems&#39; requirements.\n",null,0],["correct_for_windows_path","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-correct_for_windows_path","(path)","",null,0],["cos","BigMath","Ruby/classes/BigMath.html#method-i-cos","(x, prec)","<p>Computes the cosine of x to the specified number of digits of precision.\n<p>If x is infinite or NaN, returns …\n",null,0],["cos","CMath","Ruby/classes/CMath.html#method-c-cos","(z)","<p>returns the cosine of <code>z</code>, where <code>z</code> is given in\nradians\n",null,0],["cos","Math","Ruby/classes/Math.html#method-c-cos","(p1)","<p>Computes the cosine of <em>x</em> (expressed in radians). Returns -1..1.\n",null,0],["cos!","CMath","Ruby/classes/CMath.html#method-c-cos-21","(z)","",null,0],["cosh","CMath","Ruby/classes/CMath.html#method-c-cosh","(z)","<p>returns the hyperbolic cosine of <code>z</code>, where <code>z</code> is\ngiven in radians\n",null,0],["cosh","Math","Ruby/classes/Math.html#method-c-cosh","(p1)","<p>Computes the hyperbolic cosine of <em>x</em> (expressed in radians).\n",null,0],["cosh!","CMath","Ruby/classes/CMath.html#method-c-cosh-21","(z)","",null,0],["count","Array","Ruby/classes/Array.html#method-i-count","(p1)","<p>Returns the number of elements.\n<p>If an argument is given, counts the number of elements which equal\n<code>obj</code> …\n",null,0],["count","Enumerable","Ruby/classes/Enumerable.html#method-i-count","(p1)","<p>Returns the number of items in <code>enum</code> through enumeration. If an\nargument is given, the number of items …\n",null,0],["count","GC","Ruby/classes/GC.html#method-c-count","()","<p>The number of times GC occurred.\n<p>It returns the number of times GC occurred since the process started. …\n",null,0],["count","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-count","( node_set )","<p>Returns the size of the given list of nodes.\n",null,0],["count","String","Ruby/classes/String.html#method-i-count","(*args)","<p>Each <code>other_str</code> parameter defines a set of characters to count.\nThe intersection of these sets defines …\n",null,0],["count","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-count","()","<p>Returns the number of error messages.\n\n<pre>person.errors.add(:name, &quot;can&#39;t be blank&quot;)\nperson.errors.count # ...</pre>\n",null,1],["count","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-count","(column_name = nil, options = {})","<p>Count all records using SQL.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-identifier\">has_many</span> :<span class=\"ruby-identifier\">pets</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">pets</span>.<span class=\"ruby-identifier\">count</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["count","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-count","(column_name = nil, options = {})","<p>Count the records.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Person</span>.<span class=\"ruby-identifier\">count</span>\n<span class=\"ruby-comment\"># =&gt; the total count of all people</span>\n\n<span class=\"ruby-constant\">Person</span>.<span class=\"ruby-identifier\">count</span>(:<span class=\"ruby-identifier\">age</span>)\n<span class=\"ruby-comment\"># =&gt; returns the ...</span>\n</pre>\n",null,1],["count_by_sql","ActiveRecord::Querying","Rails/classes/ActiveRecord/Querying.html#method-i-count_by_sql","(sql)","<p>Returns the result of an SQL statement that should only include a COUNT(*)\nin the SELECT part. The use …\n",null,1],["count_objects","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-count_objects","(p1 = v1)","<p>Counts objects for each type.\n<p>It returns a hash, such as:\n\n<pre><code>{\n  :TOTAL=&gt;10000,\n  :FREE=&gt;3011,\n  :T_OBJECT=&gt;6, ...\n</code></pre>\n",null,0],["count_observers","Observable","Ruby/classes/Observable.html#method-i-count_observers","()","<p>Return the number of observers associated with this object.\n",null,0],["covector","Vector","Ruby/classes/Vector.html#method-i-covector","()","<p>Creates a single-row matrix from this vector.\n",null,0],["cover?","Range","Ruby/classes/Range.html#method-i-cover-3F","(p1)","<p>Returns <code>true</code> if <code>obj</code> is between the begin and end\nof the range.\n<p>This tests <code>begin &lt;= obj &lt;= end</code> when …\n",null,0],["coverage_level=","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-coverage_level-3D","(level)","<p>Sets coverage report level.  Accepted values are:\n<p>false or nil &mdash; No report\n<p>0 &mdash; Classes, modules, constants, …\n",null,0],["cp","FileUtils","Ruby/classes/FileUtils.html#method-c-cp","(src, dest, options = {})","<p>Options: preserve noop verbose\n<p>Copies a file content <code>src</code> to <code>dest</code>.  If\n<code>dest</code> is a directory, copies <code>src</code> …\n",null,0],["cp","Object","Ruby/classes/Object.html#method-i-cp","()","<p>Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY\n\n<pre><code>ruby -run -e cp -- [OPTION] SOURCE DEST\n\n-p   ...</code></pre>\n",null,0],["cp_r","FileUtils","Ruby/classes/FileUtils.html#method-c-cp_r","(src, dest, options = {})","<p>Options: preserve noop verbose dereference_root remove_destination\n<p>Copies <code>src</code> to <code>dest</code>. If <code>src</code> is a\ndirectory, …\n",null,0],["cram_md5_challenge","Net::SMTP::Response","Ruby/classes/Net/SMTP/Response.html#method-i-cram_md5_challenge","()","<p>Creates a CRAM-MD5 challenge. You can view more information on CRAM-MD5 on\nWikipedia: en.wikipedia.org/wiki/CRAM-MD5 …\n",null,0],["crc","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-crc","()","<p>Returns CRC value of the uncompressed data.\n",null,0],["crc32","Zlib","Ruby/classes/Zlib.html#method-c-crc32","(*args)","<p>Calculates CRC checksum for <code>string</code>, and returns updated value\nof <code>crc</code>. If <code>string</code> is omitted, it returns …\n",null,0],["crc32_combine","Zlib","Ruby/classes/Zlib.html#method-c-crc32_combine","(p1, p2, p3)","<p>Combine two CRC-32 check values in to one.  <code>crc1</code> is the first\nCRC-32 value, <code>crc2</code> is the second CRC-32 …\n",null,0],["crc_table","Zlib","Ruby/classes/Zlib.html#method-c-crc_table","()","<p>Returns the table for calculating CRC checksum as an array.\n",null,0],["create","DL::CStructBuilder","Ruby/classes/DL/CStructBuilder.html#method-c-create","(klass, types, members)","<p>Construct a new class given a C:\n<p>class <code>klass</code> (CUnion, CStruct, or other that provide an\n#entity_class …\n",null,0],["create","Fiddle::CStructBuilder","Ruby/classes/Fiddle/CStructBuilder.html#method-c-create","(klass, types, members)","<p>Construct a new class given a C:\n<p>class <code>klass</code> (CUnion, CStruct, or other that provide an\n#entity_class …\n",null,0],["create","Gem::NoAliasYAMLTree","Ruby/classes/Gem/NoAliasYAMLTree.html#method-c-create","()","",null,0],["create","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-c-create","(input)","<p>REFACTOR: There&#39;s no reason that this can&#39;t be unified with .new.\n.new is the standard Ruby factory …\n",null,0],["create","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-c-create","(input)","<p>REFACTOR: There&#39;s no reason that this can&#39;t be unified with .new.\n.new is the standard Ruby factory …\n",null,0],["create","Gem::Version","Ruby/classes/Gem/Version.html#method-c-create","(input)","<p>REFACTOR: There&#39;s no real reason this should be separate from\n#initialize.\n",null,0],["create","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-create","(mailbox)","<p>Sends a CREATE command to create a new <code>mailbox</code>.\n<p>A Net::IMAP::NoResponseError is raised if a mailbox with …\n",null,0],["create","OpenSSL::OCSP::Response","Ruby/classes/OpenSSL/OCSP/Response.html#method-c-create","(p1, p2)","<p>OCSP::Response\n",null,0],["create","OpenSSL::PKCS12","Ruby/classes/OpenSSL/PKCS12.html#method-c-create","(p1, p2, p3, p4, p5 = v5, p6 = v6, p7 = v7, p8 = v8, p9 = v9, p10 = v10)","<p>Parameters\n<p><code>pass</code> - string\n<p><code>name</code> - A string describing the key.\n",null,0],["create","Resolv::DNS::Name","Ruby/classes/Resolv/DNS/Name.html#method-c-create","(arg)","<p>Creates a new DNS name from <code>arg</code>.  <code>arg</code> can be:\n<p>Name &mdash; returns <code>arg</code>.\n<p>String &mdash; Creates a new Name.\n",null,0],["create","Resolv::IPv4","Ruby/classes/Resolv/IPv4.html#method-c-create","(arg)","",null,0],["create","Resolv::IPv6","Ruby/classes/Resolv/IPv6.html#method-c-create","(arg)","<p>Creates a new IPv6 address from <code>arg</code> which may be:\n<p>IPv6 &mdash; returns <code>arg</code>.\n<p>String &mdash; <code>arg</code> must match one of the IPv6::Regex* …\n",null,0],["create","Win32::Registry","Ruby/classes/Win32/Registry.html#method-c-create","(hkey, subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED)","<p>— Registry.create(key, subkey, desired = KEY_ALL_ACCESS, opt =\nREG_OPTION_RESERVED)\n<p>— Registry.create …\n",null,0],["create","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-create","(subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED, &blk)","<p>Same as Win32::Registry.create (self, subkey, desired, opt)\n",null,0],["create","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-create","(attributes = {}, &block)","<p>Returns a new object of the collection type that has been instantiated with\nattributes, linked to this …\n",null,1],["create","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-create","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","",null,1],["create","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-create","()","",null,1],["create","ActiveRecord::Persistence::ClassMethods","Rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-create","(attributes = nil, &block)","<p>Creates an object (or multiple objects) and saves it to the database, if\nvalidations pass. The resulting …\n",null,1],["create","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-create","(*args, &block)","<p>Tries to create a new record with the same scoped attributes defined in the\nrelation. Returns the initialized …\n",null,1],["create","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-create","(*arguments)","",null,1],["create","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-create","(name, utc_offset = nil, tzinfo = nil)","",null,1],["create!","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-create-21","(attributes = {}, &block)","<p>Like <code>create</code>, except that if the record is invalid, raises an\nexception.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">has_many</span> :<span class=\"ruby-identifier\">pets</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["create!","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-create-21","(*args, &block)","<p>Similar to #create, but calls <code>create!</code> on the base class.\nRaises an exception if a validation error occurs. …\n",null,1],["create!","ActiveRecord::Validations::ClassMethods","Rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-create-21","(attributes = nil, &block)","<p>Creates an object just like Base.create but calls <code>save!</code>\ninstead of <code>save</code> so an exception is raised if …\n",null,1],["create_all","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-create_all","()","",null,1],["create_carried_function","DL::Importer","Ruby/classes/DL/Importer.html#method-i-create_carried_function","(name, ctype, argtype, call_type = nil, n = 0)","",null,0],["create_carrier","DL::CarriedFunction","Ruby/classes/DL/CarriedFunction.html#method-i-create_carrier","(data)","",null,0],["create_cert","Gem::Security","Ruby/classes/Gem/Security.html#method-c-create_cert","(subject, key, age = ONE_YEAR, extensions = EXTENSIONS, serial = 1)","<p>Creates an unsigned certificate for <code>subject</code> and\n<code>key</code>.  The lifetime of the key is from the current time …\n",null,0],["create_cert_email","Gem::Security","Ruby/classes/Gem/Security.html#method-c-create_cert_email","(email, key, age = ONE_YEAR, extensions = EXTENSIONS)","<p>Creates a self-signed certificate with an issuer and subject from\n<code>email</code>, a subject alternative name of …\n",null,0],["create_cert_self_signed","Gem::Security","Ruby/classes/Gem/Security.html#method-c-create_cert_self_signed","(subject, key, age = ONE_YEAR, extensions = EXTENSIONS, serial = 1)","<p>Creates a self-signed certificate with an issuer and subject of\n<code>subject</code> and the given <code>extensions</code> for …\n",null,0],["create_current","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-create_current","(environment = env)","",null,1],["create_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-create_database","(name, options = {})","<p>Create a new MySQL database with optional <code>:charset</code> and\n<code>:collation</code>. Charset defaults to utf8.\n<p>Example: …\n",null,1],["create_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-create_database","(name, options = {})","<p>Create a new PostgreSQL database. Options include <code>:owner</code>,\n<code>:template</code>, <code>:encoding</code>, <code>:collation</code>,\n<code>:ctype</code>,  …\n",null,1],["create_database_url","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-create_database_url","()","",null,1],["create_document","RDoc::Parser::ChangeLog","Ruby/classes/RDoc/Parser/ChangeLog.html#method-i-create_document","(groups)","<p>Creates an RDoc::Markup::Document given the <code>groups</code> of\nChangeLog entries.\n",null,0],["create_entries","RDoc::Parser::ChangeLog","Ruby/classes/RDoc/Parser/ChangeLog.html#method-i-create_entries","(entries)","<p>Returns a list of ChangeLog entries an RDoc::Markup nodes for the given\n<code>entries</code>.\n",null,0],["create_ext","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext","(p1, p2, p3 = v3)","<p>Array to X509_EXTENSION Structure:\n<p>“ln”, “value”, bool_critical &mdash; or\n<p>“sn”, … &mdash; ",null,0],["create_ext_from_array","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext_from_array","(ary)","",null,0],["create_ext_from_hash","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext_from_hash","(hash)","",null,0],["create_ext_from_string","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext_from_string","(str)","",null,0],["create_extension","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_extension","(*arg)","",null,0],["create_fixtures","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-c-create_fixtures","(fixtures_directory, fixture_set_names, class_names = {})","",null,1],["create_from","REXML::SourceFactory","Ruby/classes/REXML/SourceFactory.html#method-c-create_from","(arg)","<p>Generates a Source object @param arg Either a String, or an IO @return a\nSource, or nil if a bad argument …\n",null,0],["create_guid","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-create_guid","()","<p>Creates GUID.\n\n<pre><code>WIN32OLE.create_guid # =&gt; {1CB530F1-F6B1-404D-BCE6-1959BF91F4A8}\n</code></pre>\n",null,0],["create_header","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-create_header","(header = \"extconf.h\")","<p>Generates a header file consisting of the various macro definitions\ngenerated by other methods such as …\n",null,0],["create_items","RDoc::Parser::ChangeLog","Ruby/classes/RDoc/Parser/ChangeLog.html#method-i-create_items","(items)","<p>Returns an RDoc::Markup::List containing the given <code>items</code> in\nthe ChangeLog\n",null,0],["create_join_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_join_table","(table_1, table_2, options = {})","<p>Creates a new join table with the name created using the lexical order of\nthe first two arguments. These …\n",null,1],["create_key","Gem::Security","Ruby/classes/Gem/Security.html#method-c-create_key","(length = KEY_LENGTH, algorithm = KEY_ALGORITHM)","<p>Creates a new key pair of the specified <code>length</code> and\n<code>algorithm</code>.  The default is a 2048 bit RSA key.\n",null,0],["create_listeners","WEBrick::Utils","Ruby/classes/WEBrick/Utils.html#method-c-create_listeners","(address, port, logger=nil)","<p>Creates TCP server sockets bound to <code>address</code>:<code>port</code>\nand returns them.\n<p>It will create IPV4 and IPV6 sockets …\n",null,0],["create_mailer_file","Rails::Generators::MailerGenerator","Rails/classes/Rails/Generators/MailerGenerator.html#method-i-create_mailer_file","()","",null,1],["create_makefile","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-create_makefile","(target, srcprefix = nil)","<p>Generates the Makefile for your extension, passing along any options and\npreprocessor constants that …\n",null,0],["create_reflection","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-create_reflection","(macro, name, scope, options, active_record)","",null,1],["create_rule","Rake::Task","Ruby/classes/Rake/Task.html#method-i-create_rule","(*args, &block)","<p>Define a rule for synthesizing tasks.\n",null,0],["create_rule","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-create_rule","(*args, &block)","",null,0],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-create_savepoint","()","",null,1],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-create_savepoint","()","",null,1],["create_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-create_savepoint","()","",null,1],["create_savepoint","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-create_savepoint","()","",null,1],["create_schema","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-create_schema","(schema_name)","<p>Creates a schema for the given schema name.\n",null,1],["create_self_signed_cert","WEBrick::Utils","Ruby/classes/WEBrick/Utils.html#method-c-create_self_signed_cert","(bits, cn, comment)","<p>Creates a self-signed certificate with the given number of\n<code>bits</code>, the issuer <code>cn</code> and a <code>comment</code> to\nbe stored …\n",null,0],["create_ssl_params","Net::POP3","Ruby/classes/Net/POP3.html#method-c-create_ssl_params","(verify_or_params = {}, certs = nil)","<p>Constructs proper parameters from arguments\n",null,0],["create_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_table","(table_name, options = {})","<p>Creates a new table with the name <code>table_name</code>.\n<code>table_name</code> may either be a String or a Symbol.\n<p>There are …\n",null,1],["create_table","ActiveRecord::SchemaMigration","Rails/classes/ActiveRecord/SchemaMigration.html#method-c-create_table","(limit=nil)","",null,1],["create_temp_function","DL::Importer","Ruby/classes/DL/Importer.html#method-i-create_temp_function","(name, ctype, argtype, call_type = nil)","",null,0],["create_value","DL::Importer","Ruby/classes/DL/Importer.html#method-i-create_value","(ty, val=nil)","",null,0],["create_value","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-create_value","(ty, val=nil)","<p>Creates a class to wrap the C struct with the value <code>ty</code>\n<p>See also Fiddle::Importer.struct\n",null,0],["create_with","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-create_with","(value)","<p>Sets attributes to be used when creating new records from a relation\nobject.\n\n<pre>users = User.where(name: ...</pre>\n",null,1],["created?","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-created-3F","()","<p>Returns if key is created ((<strong>newly</strong>)). (see Registry.create)\n– basically you call create then when you …\n",null,0],["credentials_path","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-credentials_path","()","<p>Location of RubyGems.org credentials\n",null,0],["critical=","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-i-critical-3D","(p1)","",null,0],["critical?","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-i-critical-3F","()","",null,0],["crl=","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-crl-3D","(p1)","",null,0],["crls","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-crls","()","",null,0],["crls=","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-crls-3D","(p1)","",null,0],["crmode","Curses","Ruby/classes/Curses.html#method-c-crmode","()","<p>Put the terminal into cbreak mode.\n<p>Normally, the tty driver buffers typed characters until a newline or …\n",null,0],["cross_reference","RDoc::Markup::ToHtmlCrossref","Ruby/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-cross_reference","(name, text = nil)","<p>Creates a link to the reference <code>name</code> if the name exists.  If\n<code>text</code> is given it is used as the link text, …\n",null,0],["crypt","String","Ruby/classes/String.html#method-i-crypt","(p1)","<p>Applies a one-way cryptographic hash to <em>str</em> by invoking the\nstandard library function <code>crypt(3)</code> with the …\n",null,0],["csrf_meta_tag","ActionView::Helpers::CsrfHelper","Rails/classes/ActionView/Helpers/CsrfHelper.html#method-i-csrf_meta_tag","()","<p>For backwards compatibility.\n",null,1],["csrf_meta_tags","ActionView::Helpers::CsrfHelper","Rails/classes/ActionView/Helpers/CsrfHelper.html#method-i-csrf_meta_tags","()","<p>Returns meta tags “csrf-param” and “csrf-token” with the name of the\ncross-site request …\n",null,1],["css","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-css","","<p>Allow style blocks\n",null,0],["ctime","Date","Ruby/classes/Date.html#method-i-ctime","()","<p>Returns a string in asctime(3) format (but without “n0” at the end).  This\nmethod is equivalent …\n",null,0],["ctime","File","Ruby/classes/File.html#method-c-ctime","(p1)","<p>Returns the change time for the named file (the time at which directory\ninformation about the file was …\n",null,0],["ctime","File","Ruby/classes/File.html#method-i-ctime","()","<p>Returns the change time for <em>file</em> (that is, the time directory\ninformation about the file was changed, …\n",null,0],["ctime","File::Stat","Ruby/classes/File/Stat.html#method-i-ctime","()","<p>Returns the change time for <em>stat</em> (that is, the time directory\ninformation about the file was changed, …\n",null,0],["ctime","Pathname","Ruby/classes/Pathname.html#method-i-ctime","()","<p>Returns the last change time, using directory information, not the file\nitself.\n<p>See File.ctime.\n",null,0],["ctime","Time","Ruby/classes/Time.html#method-i-ctime","()","<p>Returns a canonical string representation of <em>time</em>.\n\n<pre><code>Time.now.asctime   #=&gt; &quot;Wed Apr  9 08:56:03 2003&quot;\n</code></pre>\n",null,0],["ctrl_cmd","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-ctrl_cmd","(p1, p2 = v2)","",null,0],["ctype","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-ctype","()","<p>Get the C function return value type.  See DL for a list of constants\ncorresponding to this method&#39;s …\n",null,0],["ctype","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-ctype","()","<p>Returns the current database ctype.\n",null,1],["ctype=","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-ctype-3D","(p1)","<p>Set the C function return value type to <code>type</code>.\n",null,0],["current","Fiber","Ruby/classes/Fiber.html#method-c-current","()","<p>Returns the current fiber. You need to <code>require &#39;fiber&#39;</code>\nbefore using this method. If you are not …\n",null,0],["current","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-c-current","()","<p>Active RDoc::RDoc instance\n",null,0],["current","Thread","Ruby/classes/Thread.html#method-c-current","()","<p>Returns the currently executing thread.\n\n<pre><code>Thread.current   #=&gt; #&lt;Thread:0x401bdf4c run&gt;\n</code></pre>\n",null,0],["current","Date","Rails/classes/Date.html#method-c-current","()","<p>Returns Time.zone.today when <code>Time.zone</code> or\n<code>config.time_zone</code> are set, otherwise just returns Date.today …\n",null,1],["current","DateTime","Rails/classes/DateTime.html#method-c-current","()","<p>Returns <code>Time.zone.now.to_datetime</code> when <code>Time.zone</code>\nor <code>config.time_zone</code> are set, otherwise returns\n<code>Time.now</code> …\n",null,1],["current","Time","Rails/classes/Time.html#method-c-current","()","<p>Returns <code>Time.zone.now</code> when <code>Time.zone</code> or\n<code>config.time_zone</code> are set, otherwise just returns\n<code>Time.now</code>.\n",null,1],["current=","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-c-current-3D","(rdoc)","<p>Sets the active RDoc::RDoc instance\n",null,0],["current_config","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-current_config","(options = {})","",null,1],["current_cycle","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-current_cycle","(name = \"default\")","<p>Returns the current cycle string after a cycle has been started. Useful for\ncomplex table highlighting …\n",null,1],["current_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-current_database","()","",null,1],["current_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-current_database","()","<p>Returns the current database name.\n",null,1],["current_group","PrettyPrint","Ruby/classes/PrettyPrint.html#method-i-current_group","()","<p>Returns the group most recently added to the stack.\n",null,0],["current_hash","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-current_hash","()","",null,1],["current_hash","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-current_hash","()","",null,1],["current_line","REXML::IOSource","Ruby/classes/REXML/IOSource.html#method-i-current_line","()","<p>@return the current line in the source\n",null,0],["current_line","REXML::Source","Ruby/classes/REXML/Source.html#method-i-current_line","()","<p>@return the current line in the source\n",null,0],["current_page?","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-current_page-3F","(options)","<p>True if the current request URI was generated by the given\n<code>options</code>.\n<p>Examples\n<p>Let&#39;s say we&#39;re in …\n",null,1],["current_savepoint_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-current_savepoint_name","()","",null,1],["current_schema","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-current_schema","()","<p>Returns the current schema name.\n",null,1],["current_scope","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-current_scope","()","<p>Return the list of scope names currently active in the task manager.\n",null,0],["current_section","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-current_section","()","<p>The current documentation section that new items will be added to.  If\ntemporary_section is available …\n",null,0],["current_server","DRb","Ruby/classes/DRb.html#method-c-current_server","()","<p>Get the &#39;current&#39; server.\n<p>In the context of execution taking place within the main thread of a …\n",null,0],["curry","Proc","Ruby/classes/Proc.html#method-i-curry","(p1 = v1)","<p>Returns a curried proc. If the optional <em>arity</em> argument is given,\nit determines the number of arguments. …\n",null,0],["curs_set","Curses","Ruby/classes/Curses.html#method-c-curs_set","(p1)","<p>Sets Cursor Visibility. 0: invisible 1: visible 2: very visible\n",null,0],["curve_name","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-curve_name","()","<p>See the OpenSSL documentation for EC_GROUP_get_curve_name()\n",null,0],["curx","Curses::Window","Ruby/classes/Curses/Window.html#method-i-curx","()","<p>A getter for the current column (X coord) of the window\n",null,0],["cury","Curses::Window","Ruby/classes/Curses/Window.html#method-i-cury","()","<p>A getter for the current line (Y coord) of the window\n",null,0],["custom","ActionController::MimeResponds::Collector","Rails/classes/ActionController/MimeResponds/Collector.html#method-i-custom","(mime_type, &block)","",null,1],["custom","ActionMailer::Collector","Rails/classes/ActionMailer/Collector.html#method-i-custom","(mime, options = {})","",null,1],["cvs_url","RDoc::Generator::Markup","Ruby/classes/RDoc/Generator/Markup.html#method-i-cvs_url","(url, full_path)","<p>Build a webcvs URL starting for the given <code>url</code> with\n<code>full_path</code> appended as the destination path.  If\n<code>url</code> …\n",null,0],["cvs_url","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-cvs_url","()","<p>Returns a URL for this source file on some web repository.  Use the -W\ncommand line option to set.\n",null,0],["cwday","Date","Ruby/classes/Date.html#method-i-cwday","()","<p>Returns the day of calendar week (1-7, Monday is 1).\n\n<pre><code>Date.new(2001,2,3).cwday          #=&gt; 6\n</code></pre>\n",null,0],["cweek","Date","Ruby/classes/Date.html#method-i-cweek","()","<p>Returns the calendar week number (1-53).\n\n<pre><code>Date.new(2001,2,3).cweek          #=&gt; 5\n</code></pre>\n",null,0],["cwyear","Date","Ruby/classes/Date.html#method-i-cwyear","()","<p>Returns the calendar week based year.\n\n<pre><code>Date.new(2001,2,3).cwyear         #=&gt; 2001\nDate.new(2000,1,1).cwyear ...\n</code></pre>\n",null,0],["cycle","Array","Ruby/classes/Array.html#method-i-cycle","(p1 = v1)","<p>Calls the given block for each element <code>n</code> times or forever if\n<code>nil</code> is given.\n<p>Does nothing if a non-positive …\n",null,0],["cycle","Enumerable","Ruby/classes/Enumerable.html#method-i-cycle","(p1 = v1)","<p>Calls <em>block</em> for each element of <em>enum</em> repeatedly\n<em>n</em> times or forever if none or <code>nil</code> is given.  If a\nnon-positive …\n",null,0],["cycle","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-cycle","(first_value, *values)","<p>Creates a Cycle object whose <em>to_s</em> method cycles through elements\nof an array every time it is called. …\n",null,1],["d","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-i-d","()","",null,0],["daemon","Process","Ruby/classes/Process.html#method-c-daemon","(p1 = v1, p2 = v2)","<p>Detach the process from controlling terminal and run in the background as\nsystem daemon.  Unless the …\n",null,0],["dangerous_attribute_method?","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-dangerous_attribute_method-3F","(method_name)","",null,1],["dasherize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-dasherize","(underscored_word)","<p>Replaces underscores with dashes in the string.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;puni_puni&#39;</span>.<span class=\"ruby-identifier\">dasherize</span> <span class=\"ruby-comment\"># =&gt; &quot;puni-puni&quot;</span>\n</pre>\n",null,1],["dasherize","String","Rails/classes/String.html#method-i-dasherize","()","<p>Replaces underscores with dashes in the string.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;puni_puni&#39;</span>.<span class=\"ruby-identifier\">dasherize</span> <span class=\"ruby-comment\"># =&gt; &quot;puni-puni&quot;</span>\n</pre>\n",null,1],["data","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-data","(msgstr = nil)","<p>This method sends a message. If <code>msgstr</code> is given, sends it as a\nmessage. If block is given, yield a message …\n",null,0],["data","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-data","()","",null,0],["data","Resolv::DNS::Resource::TXT","Ruby/classes/Resolv/DNS/Resource/TXT.html#method-i-data","()","<p>Returns the concatenated string from <code>strings</code>.\n",null,0],["data","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-data","()","<p>returns the cmsg data as a string.\n\n<pre><code>p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, &quot;&quot;).data\n#=&gt; &quot;&quot;\n</code></pre>\n",null,0],["data","Socket::Option","Ruby/classes/Socket/Option.html#method-i-data","()","<p>returns the socket option data as a string.\n\n<pre><code>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).data ...</code></pre>\n",null,0],["data=","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-data-3D","(p1)","",null,0],["data_type","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-data_type","()","<p>Guesses the type of the data which have been inputed into the stream. The\nreturned value is either <code>BINARY</code> …\n",null,0],["database_configuration","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-database_configuration","()","<p>Loads and returns the configuration of the database.\n",null,1],["database_yml","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-database_yml","()","",null,1],["datadir","Gem","Ruby/classes/Gem.html#method-c-datadir","(gem_name)","<p>The path the the data directory specified by the gem name.  If the package\nis not available as a gem, …\n",null,0],["date","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-date","()","<p>The date this gem was created.  Lazily defaults to the current UTC date.\n<p>There is no need to set this …\n",null,0],["date","Rake::FtpFile","Ruby/classes/Rake/FtpFile.html#method-c-date","()","",null,0],["date","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-date","()","",null,1],["date=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-date-3D","(date)","<p>The date this gem was created\n<p>DO NOT set this, it is set automatically when the gem is packaged.\n",null,0],["date=","RSS::Maker::ChannelBase","Ruby/classes/RSS/Maker/ChannelBase.html#method-i-date-3D","(_date)","",null,0],["date=","RSS::Maker::ItemsBase::ItemBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-date-3D","(_date)","",null,0],["date=","RSS::Maker::ItemsBase::ItemBase::SourceBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase.html#method-i-date-3D","(_date)","",null,0],["date=","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-date-3D","(utc_time)","",null,1],["date?","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-date-3F","()","",null,1],["dateTime","XMLRPC::Convert","Ruby/classes/XMLRPC/Convert.html#method-c-dateTime","(str)","<p>Converts a the given <code>str</code> to a <code>dateTime.iso8601</code>\nformatted date.\n<p>Raises an exception if the String isn&#39;t …\n",null,0],["date_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-date_field","(object_name, method, options = {})","<p>Returns a text_field of type “date”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">date_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;born_on&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_born_on&quot; ...</span>\n</pre>\n",null,1],["date_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-date_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “date”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,1],["date_select","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-date_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for year, month, and day) pre-selected\nfor accessing a specified date-based …\n",null,1],["date_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-date_select","(method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::DateHelper#date_select for form builders:\n\n<pre>&lt;%= form_for @person do |f| %&gt;\n  ...</pre>\n",null,1],["daterange","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-daterange","(name, options = {})","",null,1],["datetime_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-datetime_field","(object_name, method, options = {})","<p>Returns a text_field of type “datetime”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">datetime_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;born_on&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_born_on&quot; ...</span>\n</pre>\n",null,1],["datetime_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-datetime_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “datetime”.\n<p>Options\n<p><code>:min</code> - The minimum acceptable value.\n",null,1],["datetime_format","Logger","Ruby/classes/Logger.html#method-i-datetime_format","()","<p>Returns the date format being used.  See #datetime_format=\n",null,0],["datetime_format=","Logger","Ruby/classes/Logger.html#method-i-datetime_format-3D","(datetime_format)","<p>Set date-time format.\n<p><code>datetime_format</code> &mdash; A string suitable for passing to <code>strftime</code>.\n\n",null,0],["datetime_local_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-datetime_local_field","(object_name, method, options = {})","<p>Returns a text_field of type “datetime-local”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">datetime_local_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;born_on&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["datetime_local_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-datetime_local_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “datetime-local”.\n<p>Options\n<p><code>:min</code> - The minimum acceptable value.\n",null,1],["datetime_select","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-datetime_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for year, month, day, hour, and minute)\npre-selected for accessing …\n",null,1],["datetime_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-datetime_select","(method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::DateHelper#datetime_select for form builders:\n\n<pre>&lt;%= form_for @person do |f| %&gt; ...</pre>\n",null,1],["day","Date","Ruby/classes/Date.html#method-i-day","()","<p>Returns the day of the month (1-31).\n\n<pre><code>Date.new(2001,2,3).mday           #=&gt; 3\n</code></pre>\n",null,0],["day","Time","Ruby/classes/Time.html#method-i-day","()","<p>Returns the day of the month (1..n) for <em>time</em>.\n\n<pre><code>t = Time.now   #=&gt; 2007-11-19 08:27:03 -0600\nt.day      ...\n</code></pre>\n",null,0],["day","Numeric","Rails/classes/Numeric.html#method-i-day","()","",null,1],["day=","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-day-3D","(value)","<p>Set <code>value</code> as the new date/time component.\n<p>Raises an ArgumentError if the given <code>value</code> isn&#39;t between …\n",null,0],["day_fraction","Date","Ruby/classes/Date.html#method-i-day_fraction","()","<p>Returns the fractional part of the day.\n\n<pre><code>DateTime.new(2001,2,3,12).day_fraction    #=&gt; (1/2)\n</code></pre>\n",null,0],["days","Numeric","Rails/classes/Numeric.html#method-i-days","()","",null,1],["days_ago","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-days_ago","(days)","<p>Returns a new date/time the specified number of days ago.\n",null,1],["days_in_month","Time","Rails/classes/Time.html#method-c-days_in_month","(month, year = now.year)","<p>Return the number of days in the given month. If no year is specified, it\nwill use the current year. …\n",null,1],["days_since","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-days_since","(days)","<p>Returns a new date/time the specified number of days in the future.\n",null,1],["days_to_week_start","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-days_to_week_start","(start_day = Date.beginning_of_week)","<p>Returns the number of days to the start of the week on the given day. Week\nis assumed to start on <code>start_day</code> …\n",null,1],["db","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-db","()","",null,1],["dclone","Array","Ruby/classes/Array.html#method-i-dclone","()","<p>provides a unified <code>clone</code> operation, for REXML::XPathParser to\nuse across multiple Object+ types\n",null,0],["dclone","Fixnum","Ruby/classes/Fixnum.html#method-i-dclone","()","<p>provides a unified <code>clone</code> operation, for REXML::XPathParser to\nuse across multiple Object types\n",null,0],["dclone","Float","Ruby/classes/Float.html#method-i-dclone","()","<p>provides a unified <code>clone</code> operation, for REXML::XPathParser to\nuse across multiple Object types\n",null,0],["dclone","Object","Ruby/classes/Object.html#method-i-dclone","()","<p>provides a unified <code>clone</code> operation, for REXML::XPathParser to\nuse across multiple Object types\n",null,0],["dclone","Symbol","Ruby/classes/Symbol.html#method-i-dclone","()","<p>provides a unified <code>clone</code> operation, for REXML::XPathParser to\nuse across multiple Object types\n",null,0],["deafen","REXML::Parsers::SAX2Parser","Ruby/classes/REXML/Parsers/SAX2Parser.html#method-i-deafen","( listener=nil, &blok )","",null,0],["debug","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-debug","(statement)","<p>Display a debug message on the same location as error messages.\n",null,0],["debug","Logger","Ruby/classes/Logger.html#method-i-debug","(progname = nil, &block)","<p>Log a <code>DEBUG</code> message.\n<p>See #info for more information.\n",null,0],["debug","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-debug","()","<p>Returns the debug mode.\n",null,0],["debug","OpenSSL","Ruby/classes/OpenSSL.html#method-c-debug","()","",null,0],["debug","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-i-debug","","<p>Logs a <code>message</code> at the debug (syslog debug) log level, or logs\nthe message returned from the block.\n",null,0],["debug","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-debug","(msg)","<p>Shortcut for logging a DEBUG message\n",null,0],["debug","ActionView::Helpers::DebugHelper","Rails/classes/ActionView/Helpers/DebugHelper.html#method-i-debug","(object)","<p>Returns a YAML representation of <code>object</code> wrapped with\n&lt;pre&gt; and &lt;/pre&gt;. If the object cannot …\n",null,1],["debug=","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-debug-3D","(val)","<p>Sets the debug mode.\n",null,0],["debug=","OpenSSL","Ruby/classes/OpenSSL.html#method-c-debug-3D","(p1)","<p>Turns on or off CRYPTO_MEM_CHECK. Also shows some debugging message on\nstderr.\n",null,0],["debug=","Shell","Ruby/classes/Shell.html#method-i-debug-3D","(val)","",null,0],["debug?","IRB::Context","Ruby/classes/IRB/Context.html#method-i-debug-3F","()","<p>Whether or not debug mode is enabled, see #debug_level=.\n",null,0],["debug?","Logger","Ruby/classes/Logger.html#method-i-debug-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>DEBUG</code> messages.\n",null,0],["debug?","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-debug-3F","()","<p>Will the logger output DEBUG messages?\n",null,0],["debug_level=","IRB::Context","Ruby/classes/IRB/Context.html#method-i-debug_level-3D","(value)","<p>Sets the debug level of irb\n<p>Can also be set using the <code>--irb_debug</code> command line option.\n<p>See IRB@Command+line+options …\n",null,0],["debug_msg","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-debug_msg","(*msg)","<p>Output progress information if debugging is enabled\n",null,0],["debug_msg","RDoc::Generator::JsonIndex","Ruby/classes/RDoc/Generator/JsonIndex.html#method-i-debug_msg","(*msg)","<p>Output progress information if debugging is enabled\n",null,0],["debug_output=","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-debug_output-3D","(arg)","<p>WARNING: This method causes serious security holes. Use this method for\nonly debugging.\n<p>Set an output …\n",null,0],["debug_thread_info","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-debug_thread_info","(input, binding)","",null,0],["debugger","Kernel","Rails/classes/Kernel.html#method-i-debugger","()","<p>Starts a debugging session if the <code>debugger</code> gem has been loaded\n(call rails server –debugger to do load …\n",null,1],["debugger?","Rails::Console","Rails/classes/Rails/Console.html#method-i-debugger-3F","()","",null,1],["decode","OpenSSL::ASN1","Ruby/classes/OpenSSL/ASN1.html#method-c-decode","(p1)","<p>Decodes a BER- or DER-encoded value and creates an ASN1Data instance.\n<code>der</code> may be a <code>String</code> or any object …\n",null,0],["decode","REXML::Encoding","Ruby/classes/REXML/Encoding.html#method-i-decode","(string)","",null,0],["decode","URI::Escape","Ruby/classes/URI/Escape.html#method-i-decode","(*arg)","",null,0],["decode","XMLRPC::Base64","Ruby/classes/XMLRPC/Base64.html#method-c-decode","(str)","<p>Decodes string <code>str</code> with base64 and returns that value.\n",null,0],["decode","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-decode","(json, options ={})","<p>Parses a JSON string (JavaScript Object Notation) into a hash. See\nwww.json.org for more info.\n\n<pre>ActiveSupport::JSON.decode(&quot;{\\&quot;team\\&quot;:\\&quot;rails\\&quot;,\\&quot;players\\&quot;:\\&quot;36\\&quot;}&quot;) ...</pre>\n",null,1],["decode64","Base64","Ruby/classes/Base64.html#method-i-decode64","(str)","<p>Returns the Base64-decoded version of <code>str</code>. This method\ncomplies with RFC 2045. Characters outside the …\n",null,0],["decode_all","OpenSSL::ASN1","Ruby/classes/OpenSSL/ASN1.html#method-c-decode_all","(p1)","<p>Similar to <code>decode</code> with the difference that <code>decode</code>\nexpects one distinct value represented in <code>der</code>.\n<code>decode_all</code> …\n",null,0],["decode_credentials","ActionController::HttpAuthentication::Basic","Rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-decode_credentials","(request)","",null,1],["decode_credentials","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-decode_credentials","(header)","",null,1],["decode_credentials_header","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-decode_credentials_header","(request)","",null,1],["decode_utf7","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-decode_utf7","(s)","<p>Decode a string from modified UTF-7 format to UTF-8.\n<p>UTF-7 is a 7-bit encoding of Unicode [UTF7].  IMAP …\n",null,0],["decode_www_form","URI","Ruby/classes/URI.html#method-c-decode_www_form","(str, enc=Encoding::UTF_8)","<p>Decode URL-encoded form data from given <code>str</code>.\n<p>This decodes application/x-www-form-urlencoded data and returns …\n",null,0],["decode_www_form_component","URI","Ruby/classes/URI.html#method-c-decode_www_form_component","(str, enc=Encoding::UTF_8)","<p>Decode given <code>str</code> of URL-encoded form data.\n<p>This decodes + to SP.\n<p>See URI.encode_www_form_component, URI.decode_www_form …\n",null,0],["decoded","XMLRPC::Base64","Ruby/classes/XMLRPC/Base64.html#method-i-decoded","()","<p>Returns the decoded internal string.\n",null,0],["decompose","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-decompose","()","<p>Performs canonical decomposition on all the characters.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;é&#39;</span>.<span class=\"ruby-identifier\">length</span>                         <span class=\"ruby-comment\"># =&gt; 2</span>\n<span class=\"ruby-string\">&#39;é&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">decompose</span>.<span class=\"ruby-identifier\">to_s</span>.<span class=\"ruby-identifier\">length</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["decompose","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-decompose","(type, codepoints)","<p>Decompose composed characters to the decomposed form.\n",null,1],["decompress","ActiveSupport::Gzip","Rails/classes/ActiveSupport/Gzip.html#method-c-decompress","(source)","<p>Decompresses a gzipped string.\n",null,1],["deconstantize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-deconstantize","(path)","<p>Removes the rightmost segment from the constant expression in the string.\n\n<pre>&#39;Net::HTTP&#39;.deconstantize   ...</pre>\n",null,1],["deconstantize","String","Rails/classes/String.html#method-i-deconstantize","()","<p>Removes the rightmost segment from the constant expression in the string.\n\n<pre>&#39;Net::HTTP&#39;.deconstantize   ...</pre>\n",null,1],["decrement","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-decrement","(attribute, by = 1)","<p>Initializes <code>attribute</code> to zero if <code>nil</code> and\nsubtracts the value passed as <code>by</code> (default is 1). The decrement\n…\n",null,1],["decrement","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-decrement","(name, amount = 1, options = nil)","",null,1],["decrement","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Decrement an integer value in the cache.\n",null,1],["decrement","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-i-decrement","(name, amount = 1, options = nil)","",null,1],["decrement","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Decrement an integer value in the cache.\n<p>Options are passed to the underlying cache implementation.\n<p>All …\n",null,1],["decrement!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-decrement-21","(attribute, by = 1)","<p>Wrapper around <code>decrement</code> that saves the record. This method\ndiffers from its non-bang version in that …\n",null,1],["decrement_counter","ActiveRecord::CounterCache::ClassMethods","Rails/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-decrement_counter","(counter_name, id)","<p>Decrement a numeric field by one, via a direct SQL update.\n<p>This works the same as increment_counter but …\n",null,1],["decrement_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-decrement_open_transactions","()","",null,1],["decrypt","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-decrypt","(*args)","<p>Initializes the Cipher for decryption.\n<p>Make sure to call Cipher#encrypt or Cipher#decrypt before using …\n",null,0],["decrypt","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-decrypt","(p1, p2, p3 = v3)","",null,0],["decrypt_and_verify","ActiveSupport::MessageEncryptor","Rails/classes/ActiveSupport/MessageEncryptor.html#method-i-decrypt_and_verify","(value)","<p>Decrypt and verify a message. We need to verify the message in order to\navoid padding attacks. Reference: …\n",null,1],["deep_clone","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-deep_clone","()","<p>Deeply clones this object.  This creates a complete duplicate of this\nParent, including all descendants. …\n",null,0],["deep_dup","Array","Rails/classes/Array.html#method-i-deep_dup","()","<p>Returns a deep copy of array.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">array</span> = [<span class=\"ruby-value\">1</span>, [<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>]]\n<span class=\"ruby-identifier\">dup</span>   = <span class=\"ruby-identifier\">array</span>.<span class=\"ruby-identifier\">deep_dup</span>\n<span class=\"ruby-identifier\">dup</span>[<span class=\"ruby-value\">1</span>][<span class=\"ruby-value\">2</span>] = <span class=\"ruby-value\">4</span>\n\n<span class=\"ruby-identifier\">array</span>[<span class=\"ruby-value\">1</span>][<span class=\"ruby-value\">2</span>] <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["deep_dup","Hash","Rails/classes/Hash.html#method-i-deep_dup","()","<p>Returns a deep copy of hash.\n\n<pre>hash = { a: { b: &#39;b&#39; } }\ndup  = hash.deep_dup\ndup[:a][:c] = &#39;c&#39;\n\nhash[:a][:c] ...</pre>\n",null,1],["deep_dup","Object","Rails/classes/Object.html#method-i-deep_dup","()","<p>Returns a deep copy of object if it&#39;s duplicable. If it&#39;s not\nduplicable, returns <code>self</code>.\n\n<pre>object ...</pre>\n",null,1],["deep_merge","Hash","Rails/classes/Hash.html#method-i-deep_merge","(other_hash, &block)","<p>Returns a new hash with <code>self</code> and <code>other_hash</code>\nmerged recursively.\n\n<pre>h1 = { x: { y: [4,5,6] }, z: [7,8,9] } ...</pre>\n",null,1],["deep_merge!","Hash","Rails/classes/Hash.html#method-i-deep_merge-21","(other_hash, &block)","<p>Same as <code>deep_merge</code>, but modifies <code>self</code>.\n",null,1],["deep_munge","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-deep_munge","(hash)","<p>Remove nils from the params hash\n",null,1],["deep_stringify_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_stringify_keys","()","",null,1],["deep_stringify_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_stringify_keys","()","",null,1],["deep_stringify_keys","Hash","Rails/classes/Hash.html#method-i-deep_stringify_keys","()","<p>Return a new hash with all keys converted to strings. This includes the\nkeys from the root hash and from …\n",null,1],["deep_stringify_keys!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_stringify_keys-21","()","",null,1],["deep_stringify_keys!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_stringify_keys-21","()","",null,1],["deep_stringify_keys!","Hash","Rails/classes/Hash.html#method-i-deep_stringify_keys-21","()","<p>Destructively convert all keys to strings. This includes the keys from the\nroot hash and from all nested …\n",null,1],["deep_symbolize_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_symbolize_keys","()","",null,1],["deep_symbolize_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_symbolize_keys","()","",null,1],["deep_symbolize_keys","Hash","Rails/classes/Hash.html#method-i-deep_symbolize_keys","()","<p>Return a new hash with all keys converted to symbols, as long as they\nrespond to <code>to_sym</code>. This includes …\n",null,1],["deep_symbolize_keys!","Hash","Rails/classes/Hash.html#method-i-deep_symbolize_keys-21","()","<p>Destructively convert all keys to symbols, as long as they respond to\n<code>to_sym</code>. This includes the keys …\n",null,1],["deep_transform_keys","Hash","Rails/classes/Hash.html#method-i-deep_transform_keys","(&block)","<p>Return a new hash with all keys converted by the block operation. This\nincludes the keys from the root …\n",null,1],["deep_transform_keys!","Hash","Rails/classes/Hash.html#method-i-deep_transform_keys-21","(&block)","<p>Destructively convert all keys by using the block operation. This includes\nthe keys from the root hash …\n",null,1],["def_array_element","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-def_array_element","(name, plural=nil, klass_name=nil)","",null,0],["def_atom_persons","RSS::Maker::AtomPersons","Ruby/classes/RSS/Maker/AtomPersons.html#method-i-def_atom_persons","(klass, name, maker_name, plural=nil)","",null,0],["def_atom_text_construct","RSS::Maker::AtomTextConstruct","Ruby/classes/RSS/Maker/AtomTextConstruct.html#method-i-def_atom_text_construct","(klass, name, maker_name, klass_name=nil, atom_klass_name=nil)","",null,0],["def_class","ERB","Ruby/classes/ERB.html#method-i-def_class","(superklass=Object, methodname='result')","<p>Define unnamed class which has <em>methodname</em> as instance method, and\nreturn it.\n<p>example:\n\n<pre><code>class MyClass_\n  ...\n</code></pre>\n",null,0],["def_class_accessor","RSS::ITunesModelUtils","Ruby/classes/RSS/ITunesModelUtils.html#method-i-def_class_accessor","(klass, name, type, *args)","",null,0],["def_class_accessor","RSS::Maker::ITunesBaseModel","Ruby/classes/RSS/Maker/ITunesBaseModel.html#method-i-def_class_accessor","(klass, name, type, *args)","",null,0],["def_classed_element","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-def_classed_element","(name, class_name=nil, attribute_name=nil)","",null,0],["def_classed_element_without_accessor","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-def_classed_element_without_accessor","(name, class_name=nil)","",null,0],["def_classed_elements","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-def_classed_elements","(name, attribute, plural_class_name=nil, plural_name=nil, new_name=nil)","",null,0],["def_convert","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_convert","(depth=0)","",null,0],["def_corresponded_attr_reader","RSS::Element","Ruby/classes/RSS/Element.html#method-i-def_corresponded_attr_reader","(name, type=nil)","",null,0],["def_corresponded_attr_writer","RSS::Element","Ruby/classes/RSS/Element.html#method-i-def_corresponded_attr_writer","(name, type=nil, disp_name=nil)","",null,0],["def_csv_accessor","RSS::Maker::ITunesBaseModel","Ruby/classes/RSS/Maker/ITunesBaseModel.html#method-i-def_csv_accessor","(klass, full_name)","",null,0],["def_csv_element","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-def_csv_element","(name, type=nil)","",null,0],["def_delegator","Forwardable","Ruby/classes/Forwardable.html#method-i-def_delegator","(accessor, method, ali = method)","",null,0],["def_delegator","SingleForwardable","Ruby/classes/SingleForwardable.html#method-i-def_delegator","(accessor, method, ali = method)","",null,0],["def_delegators","Forwardable","Ruby/classes/Forwardable.html#method-i-def_delegators","(accessor, *methods)","",null,0],["def_delegators","SingleForwardable","Ruby/classes/SingleForwardable.html#method-i-def_delegators","(accessor, *methods)","",null,0],["def_e2message","E2MM","Ruby/classes/E2MM.html#method-c-def_e2message","(k, c, m)","<p>E2MM.def_e2message(k, e, m)\n\n<pre><code>    k:  class to define exception under.\n    e:  exception\n    m:  message_form ...\n</code></pre>\n",null,0],["def_e2message","E2MM","Ruby/classes/E2MM.html#method-c-def_e2message","(k, c, m)","<p>E2MM.def_e2message(k, e, m)\n\n<pre><code>    k:  class to define exception under.\n    e:  exception\n    m:  message_form ...\n</code></pre>\n",null,0],["def_e2message","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-def_e2message","(c, m)","<p>def_e2message(c, m)\n\n<pre><code>    c:  exception\n    m:  message_form\ndefine exception c with message m.</code></pre>\n",null,0],["def_e2message","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-def_e2message","(c, m)","<p>def_e2message(c, m)\n\n<pre><code>    c:  exception\n    m:  message_form\ndefine exception c with message m.</code></pre>\n",null,0],["def_element_class_accessor","RSS::ITunesModelUtils","Ruby/classes/RSS/ITunesModelUtils.html#method-i-def_element_class_accessor","(klass, name, full_name, klass_name, recommended_attribute_name=nil)","",null,0],["def_elements_class_accessor","RSS::ITunesModelUtils","Ruby/classes/RSS/ITunesModelUtils.html#method-i-def_elements_class_accessor","(klass, name, full_name, klass_name, plural_name, recommended_attribute_name=nil)","",null,0],["def_elements_class_accessor","RSS::Maker::ITunesBaseModel","Ruby/classes/RSS/Maker/ITunesBaseModel.html#method-i-def_elements_class_accessor","(klass, name, full_name, full_plural_name, klass_name, plural_klass_name, recommended_attribute_name=nil)","",null,0],["def_else_enc","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_else_enc","(to_enc, from_enc)","",null,0],["def_erb_method","ERB::DefMethod","Ruby/classes/ERB/DefMethod.html#method-c-def_erb_method","(methodname, erb_or_fname)","<p>define <em>methodname</em> as instance method of current module, using ERB\nobject or eRuby file\n",null,0],["def_exception","E2MM","Ruby/classes/E2MM.html#method-c-def_exception","(k, n, m, s = StandardError)","<p>E2MM.def_exception(k, n, m, s)\n\n<pre><code>    k:  class to define exception under.\n    n:  exception_name\n    m: ...\n</code></pre>\n",null,0],["def_exception","E2MM","Ruby/classes/E2MM.html#method-c-def_exception","(k, n, m, s = StandardError)","<p>E2MM.def_exception(k, n, m, s)\n\n<pre><code>    k:  class to define exception under.\n    n:  exception_name\n    m: ...\n</code></pre>\n",null,0],["def_exception","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-def_exception","(n, m, s = StandardError)","<p>def_exception(n, m, s)\n\n<pre><code>    n:  exception_name\n    m:  message_form\n    s:  superclass(default: StandardError) ...</code></pre>\n",null,0],["def_exception","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-def_exception","(n, m, s = StandardError)","<p>def_exception(n, m, s)\n\n<pre><code>    n:  exception_name\n    m:  message_form\n    s:  superclass(default: StandardError) ...</code></pre>\n",null,0],["def_extend_command","IRB::ContextExtender","Ruby/classes/IRB/ContextExtender.html#method-c-def_extend_command","(cmd_name, load_file, *aliases)","<p>Evaluate the given <code>command</code> from the given\n<code>load_file</code> on the Context module.\n<p>Will also define any given …\n",null,0],["def_extend_command","IRB::ExtendCommandBundle","Ruby/classes/IRB/ExtendCommandBundle.html#method-c-def_extend_command","(cmd_name, cmd_class, load_file = nil, *aliases)","<p>Evaluate the given <code>cmd_name</code> on the given\n<code>cmd_class</code> Class.\n<p>Will also define any given <code>aliases</code> for the method. …\n",null,0],["def_head_option","OptionParser","Ruby/classes/OptionParser.html#method-i-def_head_option","(*opts, &block)","",null,0],["def_iconv_convert","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_iconv_convert","(to_enc, from_enc, depth=0)","",null,0],["def_inspector","IRB::Inspector","Ruby/classes/IRB/Inspector.html#method-c-def_inspector","(key, arg=nil, &block)","<p>Example\n\n<pre><code>Inspector.def_inspector(key, init_p=nil){|v| v.inspect}\nInspector.def_inspector([key1,..], init_p=nil){|v| ...\n</code></pre>\n",null,0],["def_instance_delegator","Forwardable","Ruby/classes/Forwardable.html#method-i-def_instance_delegator","(accessor, method, ali = method)","<p>Define <code>method</code> as delegator instance method with an optional\nalias name <code>ali</code>. Method calls to <code>ali</code> will …\n",null,0],["def_instance_delegators","Forwardable","Ruby/classes/Forwardable.html#method-i-def_instance_delegators","(accessor, *methods)","<p>Shortcut for defining multiple delegator methods, but with no provision for\nusing a different name.  …\n",null,0],["def_method","ERB","Ruby/classes/ERB.html#method-i-def_method","(mod, methodname, fname='(ERB)')","<p>Define <em>methodname</em> as instance method of <em>mod</em> from compiled\nruby source.\n<p>example:\n\n<pre><code>filename = &#39;example.rhtml&#39; ...</code></pre>\n",null,0],["def_module","ERB","Ruby/classes/ERB.html#method-i-def_module","(methodname='erb')","<p>Create unnamed module, define <em>methodname</em> as instance method of it,\nand return it.\n<p>example:\n\n<pre><code>filename = &#39;example.rhtml&#39; ...</code></pre>\n",null,0],["def_notifier","IRB::Notifier","Ruby/classes/IRB/Notifier.html#method-c-def_notifier","(prefix = \"\", output_method = StdioOutputMethod.new)","<p>Define a new Notifier output source, returning a new CompositeNotifier with\nthe given <code>prefix</code> and <code>output_method</code> …\n",null,0],["def_notifier","IRB::Notifier::CompositeNotifier","Ruby/classes/IRB/Notifier/CompositeNotifier.html#method-i-def_notifier","(level, prefix = \"\")","<p>Creates a new LeveledNotifier in the composite #notifiers group.\n<p>The given <code>prefix</code> will be assigned to …\n",null,0],["def_option","OptionParser","Ruby/classes/OptionParser.html#method-i-def_option","(*opts, &block)","",null,0],["def_other_element","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-def_other_element","(name)","",null,0],["def_other_element_without_accessor","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-def_other_element_without_accessor","(name)","",null,0],["def_post_proc","IRB::MethodExtender","Ruby/classes/IRB/MethodExtender.html#method-i-def_post_proc","(base_method, extend_method)","<p>Extends the given <code>base_method</code> with a postfix call to the given\n<code>extend_method</code>.\n",null,0],["def_pre_proc","IRB::MethodExtender","Ruby/classes/IRB/MethodExtender.html#method-i-def_pre_proc","(base_method, extend_method)","<p>Extends the given <code>base_method</code> with a prefix call to the given\n<code>extend_method</code>.\n",null,0],["def_prog_mode","Curses","Ruby/classes/Curses.html#method-c-def_prog_mode","()","<p>Save the current terminal modes as the “program” state for use by the\nCurses.reset_prog_mode …\n",null,0],["def_same_enc","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_same_enc","()","",null,0],["def_single_delegator","SingleForwardable","Ruby/classes/SingleForwardable.html#method-i-def_single_delegator","(accessor, method, ali = method)","<p>Defines a method <em>method</em> which delegates to <em>accessor</em> (i.e.\nit calls the method of the same name in <em>accessor</em> …\n",null,0],["def_single_delegators","SingleForwardable","Ruby/classes/SingleForwardable.html#method-i-def_single_delegators","(accessor, *methods)","<p>Shortcut for defining multiple delegator methods, but with no provision for\nusing a different name.  …\n",null,0],["def_system_command","Shell","Ruby/classes/Shell.html#method-c-def_system_command","(command, path = command)","<p>Convenience method for Shell::CommandProcessor.def_system_command\n",null,0],["def_system_command","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-c-def_system_command","(command, path = command)","<p>Defines a command, registering <code>path</code> as a Shell method for the\ngiven <code>command</code>.\n\n<pre><code>Shell::CommandProcessor.def_system_command ...</code></pre>\n",null,0],["def_tail_option","OptionParser","Ruby/classes/OptionParser.html#method-i-def_tail_option","(*opts, &block)","",null,0],["def_to_euc_jp_from_iso_2022_jp","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_to_euc_jp_from_iso_2022_jp","()","",null,0],["def_to_euc_jp_from_shift_jis","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_to_euc_jp_from_shift_jis","()","",null,0],["def_to_euc_jp_from_utf_8","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_to_euc_jp_from_utf_8","()","",null,0],["def_to_iso_2022_jp_from_euc_jp","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_to_iso_2022_jp_from_euc_jp","()","",null,0],["def_to_iso_8859_1_from_utf_8","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_to_iso_8859_1_from_utf_8","()","",null,0],["def_to_shift_jis_from_euc_jp","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_to_shift_jis_from_euc_jp","()","",null,0],["def_to_shift_jis_from_utf_8","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_to_shift_jis_from_utf_8","()","",null,0],["def_to_utf_8_from_euc_jp","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_to_utf_8_from_euc_jp","()","",null,0],["def_to_utf_8_from_iso_8859_1","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_to_utf_8_from_iso_8859_1","()","",null,0],["def_to_utf_8_from_shift_jis","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_to_utf_8_from_shift_jis","()","",null,0],["def_uconv_convert_if_can","RSS::Converter","Ruby/classes/RSS/Converter.html#method-i-def_uconv_convert_if_can","(meth, to_enc, from_enc, nkf_arg)","",null,0],["def_yes_clean_other_accessor","RSS::Maker::ITunesBaseModel","Ruby/classes/RSS/Maker/ITunesBaseModel.html#method-i-def_yes_clean_other_accessor","(klass, full_name)","",null,0],["def_yes_other_accessor","RSS::Maker::ITunesBaseModel","Ruby/classes/RSS/Maker/ITunesBaseModel.html#method-i-def_yes_other_accessor","(klass, full_name)","",null,0],["default","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-c-default","()","<p>A default “version requirement” can surely <em>only</em> be &#39;&gt;=\n0&#39;.\n",null,0],["default","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-c-default","()","<p>A default “version requirement” can surely <em>only</em> be &#39;&gt;=\n0&#39;.\n",null,0],["default","Hash","Ruby/classes/Hash.html#method-i-default","(p1 = v1)","<p>Returns the default value, the value that would be returned by <em>hsh</em>\nif <em>key</em> did not exist in <em>hsh</em>. See also …\n",null,0],["default","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-c-default","()","<p>Only use this if you do not want the XML declaration to be written; this\nobject is ignored by the XML …\n",null,0],["default","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-i-default","()","<p>Returns default value. If the default value does not exist, this method\nreturns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</code></pre>\n",null,0],["default","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-default","(value = nil)","",null,1],["default","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-default","(key = nil)","",null,1],["default","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-default","(key = nil)","",null,1],["default=","Hash","Ruby/classes/Hash.html#method-i-default-3D","(p1)","<p>Sets the default value, the value returned for a key that does not exist in\nthe hash. It is not possible …\n",null,0],["default_acl","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-c-default_acl","(acl)","<p>Set the default access control list to <code>acl</code>.  The default ACL\nis <code>nil</code>.\n<p>See also DRb::ACL and #new()\n",null,0],["default_action","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-default_action","()","<p>By default, render the <code>:edit</code> action for HTML requests with\nerrors, unless the verb was POST.\n",null,1],["default_aliases_for_option","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-default_aliases_for_option","(name, options)","<p>Return default aliases for the option name given doing a lookup in\nRails::Generators.aliases.\n",null,1],["default_argc_limit","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-c-default_argc_limit","(argc)","<p>Set the default value for the :argc_limit option.\n<p>See #new().  The initial default value is 256.\n",null,0],["default_bindir","Gem","Ruby/classes/Gem.html#method-c-default_bindir","()","<p>The default directory for binaries\n",null,0],["default_cert_path","Gem","Ruby/classes/Gem.html#method-c-default_cert_path","()","<p>The default signing certificate chain path\n",null,0],["default_dir","Gem","Ruby/classes/Gem.html#method-c-default_dir","()","<p>Default home directory path to be used if an alternate value is not\nspecified in the environment\n",null,0],["default_event_sources","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-default_event_sources","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the\nWIN32OLE_TYPE object and having …\n",null,0],["default_exec_format","Gem","Ruby/classes/Gem.html#method-c-default_exec_format","()","<p>Deduce Ruby&#39;s –program-prefix and –program-suffix from its install name\n",null,0],["default_external","Encoding","Ruby/classes/Encoding.html#method-c-default_external","()","<p>Returns default external encoding.\n<p>The default external encoding is used by default for strings created …\n",null,0],["default_external=","Encoding","Ruby/classes/Encoding.html#method-c-default_external-3D","(p1)","<p>Sets default external encoding.  You should not set\nEncoding::default_external in ruby code as strings …\n",null,0],["default_for_option","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-default_for_option","(config, name, options, default)","<p>Return default for the option name given doing a lookup in config.\n",null,1],["default_gem?","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-default_gem-3F","()","",null,0],["default_generator_root","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-default_generator_root","()","",null,1],["default_hsts_options","ActionDispatch::SSL","Rails/classes/ActionDispatch/SSL.html#method-c-default_hsts_options","()","",null,1],["default_i18n_subject","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-default_i18n_subject","(interpolations = {})","<p>Translates the <code>subject</code> using Rails I18n class under\n<code>[mailer_scope, action_name]</code> scope. If it does not …\n",null,1],["default_id_conv","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-c-default_id_conv","(idconv)","<p>Set the default value for the :id_conv option.\n<p>See #new().  The initial default value is a DRbIdConv instance. …\n",null,0],["default_imap_port","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-default_imap_port","()","",null,0],["default_imaps_port","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-default_imaps_port","()","",null,0],["default_inspect","Date","Rails/classes/Date.html#method-i-default_inspect","()","",null,1],["default_inspect","DateTime","Rails/classes/DateTime.html#method-i-default_inspect","()","",null,1],["default_internal","Encoding","Ruby/classes/Encoding.html#method-c-default_internal","()","<p>Returns default internal encoding.  Strings will be transcoded to the\ndefault internal encoding in the …\n",null,0],["default_internal=","Encoding","Ruby/classes/Encoding.html#method-c-default_internal-3D","(p1)","<p>Sets default internal encoding or removes default internal encoding when\npassed nil.  You should not …\n",null,0],["default_key_path","Gem","Ruby/classes/Gem.html#method-c-default_key_path","()","<p>The default signing key path\n",null,0],["default_load_limit","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-c-default_load_limit","(sz)","<p>Set the default value for the :load_limit option.\n<p>See #new().  The initial default value is 25 MB.\n",null,0],["default_ole_types","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-default_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the\nWIN32OLE_TYPE object and having …\n",null,0],["default_options","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-c-default_options","()","<p>Default options for ri\n",null,0],["default_options","Rails::Server","Rails/classes/Rails/Server.html#method-i-default_options","()","",null,1],["default_options=","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-default_options-3D","(value = nil)","<p>Allows to set defaults through app configuration:\n\n<pre>config.action_mailer.default_options = { from: &quot;no-reply@example.org&quot; ...</pre>\n",null,1],["default_parser","RSS::Parser","Ruby/classes/RSS/Parser.html#method-i-default_parser","()","",null,0],["default_parser=","RSS::Parser","Ruby/classes/RSS/Parser.html#method-i-default_parser-3D","(new_value)","<p>Set @@default_parser to new_value if it is one of the available parsers.\nElse raise NotValidXMLParser …\n",null,0],["default_path","Gem","Ruby/classes/Gem.html#method-c-default_path","()","<p>Default gem load path\n",null,0],["default_pop3_port","Net::POP3","Ruby/classes/Net/POP3.html#method-c-default_pop3_port","()","<p>The default port for POP3 connections, port 110\n",null,0],["default_pop3s_port","Net::POP3","Ruby/classes/Net/POP3.html#method-c-default_pop3s_port","()","<p>The default port for POP3S connections, port 995\n",null,0],["default_port","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-default_port","()","<p>The default port to use for HTTP requests; defaults to 80.\n",null,0],["default_port","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-default_port","()","<p>The default port for IMAP connections, port 143\n",null,0],["default_port","Net::POP3","Ruby/classes/Net/POP3.html#method-c-default_port","()","<p>returns the port for POP3\n",null,0],["default_port","Net::SMTP","Ruby/classes/Net/SMTP.html#method-c-default_port","()","<p>The default SMTP port number, 25.\n",null,0],["default_port","URI::Generic","Ruby/classes/URI/Generic.html#method-i-default_port","()","<p>Returns default port\n",null,0],["default_port","URI::Generic","Ruby/classes/URI/Generic.html#method-c-default_port","()","<p>Returns default port\n",null,0],["default_primary_key_type","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-default_primary_key_type","()","",null,1],["default_proc","Hash","Ruby/classes/Hash.html#method-i-default_proc","()","<p>If <code>Hash::new</code> was invoked with a block, return that block,\notherwise return <code>nil</code>.\n\n<pre><code>h = Hash.new {|h,k| h[k] ...\n</code></pre>\n",null,0],["default_proc=","Hash","Ruby/classes/Hash.html#method-i-default_proc-3D","(p1)","<p>Sets the default proc to be executed on each failed key lookup.\n\n<pre><code>h.default_proc = proc do |hash, key|\n ...\n</code></pre>\n",null,0],["default_record_separator","Shell","Ruby/classes/Shell.html#method-i-default_record_separator","()","",null,0],["default_record_separator=","Shell","Ruby/classes/Shell.html#method-i-default_record_separator-3D","(rs)","",null,0],["default_render","ActionController::ImplicitRender","Rails/classes/ActionController/ImplicitRender.html#method-i-default_render","(*args)","",null,1],["default_render","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-default_render","()","<p>If a response block was given, use it, otherwise call render on controller.\n",null,1],["default_rubygems_dirs","Gem","Ruby/classes/Gem.html#method-c-default_rubygems_dirs","()","<p>Paths where RubyGems&#39; .rb files and bin files are installed\n",null,0],["default_safe_level","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-c-default_safe_level","(level)","<p>Set the default safe level to <code>level</code>.  The default safe level\nis 0\n<p>See #new for more information.\n",null,0],["default_scope","ActiveRecord::Scoping::Default::ClassMethods","Rails/classes/ActiveRecord/Scoping/Default/ClassMethods.html#method-i-default_scope","(scope = nil)","<p>Use this macro in your model to set a default scope for all operations on\nthe model.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Article</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["default_scopes?","ActiveRecord::Scoping::Default","Rails/classes/ActiveRecord/Scoping/Default.html#method-c-default_scopes-3F","()","",null,1],["default_sequence_name","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-default_sequence_name","(table, column)","",null,1],["default_source_root","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-default_source_root","()","<p>Returns the default source root for a given generator. This is used\ninternally by rails to set its generators …\n",null,1],["default_sources","Gem","Ruby/classes/Gem.html#method-c-default_sources","()","<p>An Array of the default sources that come with RubyGems\n",null,0],["default_specifications_dir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-default_specifications_dir","()","",null,0],["default_src_encoding","Object","Ruby/classes/Object.html#method-i-default_src_encoding","()","<p>DO NOT WRITE ANY MAGIC COMMENT HERE.\n",null,0],["default_ssl_context","Net::SMTP","Ruby/classes/Net/SMTP.html#method-c-default_ssl_context","()","",null,0],["default_ssl_port","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-default_ssl_port","()","",null,0],["default_ssl_port","Net::SMTP","Ruby/classes/Net/SMTP.html#method-c-default_ssl_port","()","",null,0],["default_submission_port","Net::SMTP","Ruby/classes/Net/SMTP.html#method-c-default_submission_port","()","<p>The default mail submission port number, 587.\n",null,0],["default_system_path","Shell","Ruby/classes/Shell.html#method-i-default_system_path","()","<p>Returns the directories in the current shell&#39;s PATH environment\nvariable as an array of directory …\n",null,0],["default_system_path=","Shell","Ruby/classes/Shell.html#method-i-default_system_path-3D","(path)","<p>Sets the system_path that new instances of Shell should have as their\ninitial system_path.\n<p><code>path</code> should …\n",null,0],["default_title=","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-default_title-3D","(string)","<p>Set the title, but only if not already set. Used to set the title from a\nsource file, so that a title …\n",null,0],["default_tls_port","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-default_tls_port","()","<p>The default port for IMAPS connections, port 993\n",null,0],["default_tls_port","Net::SMTP","Ruby/classes/Net/SMTP.html#method-c-default_tls_port","()","<p>The default SMTPS port number, 465.\n",null,0],["default_url_options","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-default_url_options","(options)","",null,1],["default_url_options=","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-default_url_options-3D","(options)","",null,1],["default_value","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-default_value","(name)","<p>The default value for specification attribute <code>name</code>\n",null,0],["default_value_for_option","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-default_value_for_option","(name, options)","<p>Return the default value for the option name given doing a lookup in\nRails::Generators.options.\n",null,1],["defaults","RDoc::Task","Ruby/classes/RDoc/Task.html#method-i-defaults","()","<p>Sets default task values\n",null,0],["defaults","ActionDispatch::Routing::Mapper::Scoping","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-defaults","(defaults = {})","<p>Allows you to set default parameters for a route, such as this:\n\n<pre>defaults id: &#39;home&#39; do\n  match &#39;scoped_pages/(:id)&#39;, ...</pre>\n",null,1],["defaults_str","Gem::Command","Ruby/classes/Gem/Command.html#method-i-defaults_str","()","<p>Override to display the default values of the command options. (similar to\n<code>arguments</code>, but displays the …\n",null,0],["defaults_str","Gem::Commands::SourcesCommand","Ruby/classes/Gem/Commands/SourcesCommand.html#method-i-defaults_str","()","",null,0],["define","Gem::PackageTask","Ruby/classes/Gem/PackageTask.html#method-i-define","()","<p>Create the Rake tasks and actions specified by this Gem::PackageTask.\n(<code>define</code> is automatically called …\n",null,0],["define","OptionParser","Ruby/classes/OptionParser.html#method-i-define","(*opts, &block)","",null,0],["define","RDoc::Task","Ruby/classes/RDoc/Task.html#method-i-define","()","<p>Create the tasks defined by this task lib.\n",null,0],["define","Rake::PackageTask","Ruby/classes/Rake/PackageTask.html#method-i-define","()","<p>Create the tasks defined by this task library.\n",null,0],["define","ActiveRecord::DynamicMatchers::Method","Rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-i-define","()","",null,1],["define","ActiveRecord::Schema","Rails/classes/ActiveRecord/Schema.html#method-c-define","(info={}, &block)","<p>Eval the given block. All methods available to the current connection\nadapter are available within the …\n",null,1],["define_aliases","Sync_m","Ruby/classes/Sync_m.html#method-c-define_aliases","(cl)","",null,0],["define_aliases","Sync_m","Ruby/classes/Sync_m.html#method-c-define_aliases","(cl)","",null,0],["define_attribute_method","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-define_attribute_method","(attr_name)","<p>Declares an attribute that should be prefixed and suffixed by\nActiveModel::AttributeMethods.\n<p>To use, pass …\n",null,1],["define_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-define_attribute_methods","(*attr_names)","<p>Declares the attributes that should be prefixed and suffixed by\nActiveModel::AttributeMethods.\n<p>To use, …\n",null,1],["define_callbacks","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-define_callbacks","(*callbacks)","<p>Define sets of events in the object lifecycle that support callbacks.\n\n<pre>define_callbacks :validate\ndefine_callbacks ...</pre>\n",null,1],["define_finalizer","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-define_finalizer","(p1, p2 = v2)","<p>Adds <em>aProc</em> as a finalizer, to be called after <em>obj</em> was\ndestroyed.\n",null,0],["define_head","OptionParser","Ruby/classes/OptionParser.html#method-i-define_head","(*opts, &block)","",null,0],["define_method_attribute","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-define_method_attribute","(attr_name)","",null,1],["define_method_attribute","ActiveRecord::AttributeMethods::Read::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-define_method_attribute","(name)","<p>We want to generate the methods via module_eval rather than define_method,\nbecause define_method is slower …\n",null,1],["define_method_attribute=","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html#method-i-define_method_attribute-3D","(attr_name)","<p>Defined for all <code>datetime</code> and <code>timestamp</code> attributes\nwhen <code>time_zone_aware_attributes</code> are enabled. This enhanced …\n",null,1],["define_method_attribute=","ActiveRecord::AttributeMethods::Write::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Write/ClassMethods.html#method-i-define_method_attribute-3D","(name)","<p>See define_method_attribute in read.rb for an explanation of this code.\n",null,1],["define_model_callbacks","ActiveModel::Callbacks","Rails/classes/ActiveModel/Callbacks.html#method-i-define_model_callbacks","(*callbacks)","<p>define_model_callbacks accepts the same options\n<code>define_callbacks</code> does, in case you want to overwrite …\n",null,1],["define_module_function","Rake::AltSystem","Ruby/classes/Rake/AltSystem.html#method-i-define_module_function","(name, &block)","",null,0],["define_singleton_method","Object","Ruby/classes/Object.html#method-i-define_singleton_method","(*args)","<p>Defines a singleton method in the receiver. The <em>method</em> parameter\ncan be a <code>Proc</code>, a <code>Method</code> or an\n<code>UnboundMethod</code> …\n",null,0],["define_tail","OptionParser","Ruby/classes/OptionParser.html#method-i-define_tail","(*opts, &block)","",null,0],["define_task","Rake::Task","Ruby/classes/Rake/Task.html#method-i-define_task","(*args, &block)","<p>Define a task given <code>args</code> and an option block.  If a rule with\nthe given name already exists, the prerequisites …\n",null,0],["define_task","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-define_task","(task_class, *args, &block)","",null,0],["defined_class","TracePoint","Ruby/classes/TracePoint.html#method-i-defined_class","()","<p>Return class or module of the method being called.\n\n<pre><code>class C; def foo; end; end\ntrace = TracePoint.new(:call) ...\n</code></pre>\n",null,0],["defined_in?","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-defined_in-3F","(file)","<p>Is part of this thing was defined in <code>file</code>?\n",null,0],["definition","RDoc::Attr","Ruby/classes/RDoc/Attr.html#method-i-definition","()","<p>Returns attr_reader, attr_writer or attr_accessor as appropriate.\n",null,0],["definition","RDoc::NormalClass","Ruby/classes/RDoc/NormalClass.html#method-i-definition","()","<p>The definition of this class, <code>class MyClassName</code>\n",null,0],["definition","RDoc::NormalModule","Ruby/classes/RDoc/NormalModule.html#method-i-definition","()","<p>The definition of this module, <code>module MyModuleName</code>\n",null,0],["definition","RDoc::SingleClass","Ruby/classes/RDoc/SingleClass.html#method-i-definition","()","<p>The definition of this singleton class, <code>class &lt;&lt;\nMyClassName</code>\n",null,0],["definition_lists","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-definition_lists","","<p>Allow PHP Markdown Extras style definition lists\n",null,0],["deflate","Gem","Ruby/classes/Gem.html#method-c-deflate","(data)","<p>A Zlib::Deflate.deflate wrapper\n",null,0],["deflate","Zlib","Ruby/classes/Zlib.html#method-c-deflate","(p1, p2 = v2)","<p>Compresses the given <code>string</code>. Valid values of level are\nZlib::NO_COMPRESSION, Zlib::BEST_SPEED, Zlib::BEST_COMPRESSION …\n",null,0],["deflate","Zlib::Deflate","Ruby/classes/Zlib/Deflate.html#method-i-deflate","(p1, p2 = v2)","<p>Inputs <code>string</code> into the deflate stream and returns the output\nfrom the stream.  On calling this method, …\n",null,0],["deflate","Zlib::Deflate","Ruby/classes/Zlib/Deflate.html#method-c-deflate","(p1, p2 = v2)","<p>Compresses the given <code>string</code>. Valid values of level are\nZlib::NO_COMPRESSION, Zlib::BEST_SPEED, Zlib::BEST_COMPRESSION …\n",null,0],["degree","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-degree","()","<p>See the OpenSSL documentation for EC_GROUP_get_degree()\n",null,0],["delch","Curses","Ruby/classes/Curses.html#method-c-delch","()","<p>Delete the character under the cursor\n",null,0],["delch","Curses::Window","Ruby/classes/Curses/Window.html#method-i-delch","()","<p>Delete the character under the cursor\n",null,0],["delegate","Forwardable","Ruby/classes/Forwardable.html#method-i-delegate","(hash)","",null,0],["delegate","SingleForwardable","Ruby/classes/SingleForwardable.html#method-i-delegate","(hash)","",null,0],["delegate","Module","Rails/classes/Module.html#method-i-delegate","(*methods)","<p>Provides a <code>delegate</code> class method to easily expose contained\nobjects&#39; public methods as your own. …\n",null,1],["delegate_to","ActionView::Template::Types","Rails/classes/ActionView/Template/Types.html#method-c-delegate_to","(klass)","",null,1],["delete","Array","Ruby/classes/Array.html#method-i-delete","(p1)","<p>Deletes all items from <code>self</code> that are equal to\n<code>obj</code>.\n<p>Returns the last deleted item, or <code>nil</code> if no matching …\n",null,0],["delete","CGI::Session","Ruby/classes/CGI/Session.html#method-i-delete","()","<p>Delete the session from storage.  Also closes the storage.\n<p>Note that the session&#39;s data is <em>not</em> automatically …\n",null,0],["delete","CGI::Session::FileStore","Ruby/classes/CGI/Session/FileStore.html#method-i-delete","()","<p>Close and delete the session&#39;s FileStore file.\n",null,0],["delete","CGI::Session::MemoryStore","Ruby/classes/CGI/Session/MemoryStore.html#method-i-delete","()","<p>Delete the session state.\n",null,0],["delete","CGI::Session::NullStore","Ruby/classes/CGI/Session/NullStore.html#method-i-delete","()","<p>Delete the session state.\n<p>A no-op.\n",null,0],["delete","CGI::Session::PStore","Ruby/classes/CGI/Session/PStore.html#method-i-delete","()","<p>Close and delete the session&#39;s PStore file.\n",null,0],["delete","CSV::Row","Ruby/classes/CSV/Row.html#method-i-delete","(header_or_index, minimum_index = 0)","<p>Used to remove a pair from the row by <code>header</code> or\n<code>index</code>.  The pair is located as described in CSV::Row.field() …\n",null,0],["delete","CSV::Table","Ruby/classes/CSV/Table.html#method-i-delete","(index_or_header)","<p>Removes and returns the indicated column or row.  In the default mixed mode\nindices refer to rows and …\n",null,0],["delete","DBM","Ruby/classes/DBM.html#method-i-delete","(p1)","<p>Deletes an entry from the database.\n",null,0],["delete","Dir","Ruby/classes/Dir.html#method-c-delete","(p1)","<p>Deletes the named directory. Raises a subclass of\n<code>SystemCallError</code> if the directory isn&#39;t empty.\n",null,0],["delete","ENV","Ruby/classes/ENV.html#method-c-delete","(p1)","<p>Deletes the environment variable with <code>name</code> and returns the\nvalue of the variable.  If a block is given …\n",null,0],["delete","File","Ruby/classes/File.html#method-c-delete","(*args)","<p>Deletes the named files, returning the number of names passed as arguments.\nRaises an exception on any …\n",null,0],["delete","GDBM","Ruby/classes/GDBM.html#method-i-delete","(p1)","<p>Removes the key-value-pair with the specified <em>key</em> from this\ndatabase and returns the corresponding <em>value</em> …\n",null,0],["delete","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-delete","(uri)","",null,0],["delete","Hash","Ruby/classes/Hash.html#method-i-delete","(p1)","<p>Deletes the key-value pair and returns the value from <em>hsh</em> whose\nkey is equal to <em>key</em>. If the key is not …\n",null,0],["delete","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-delete","(key)","<p>Deletes the job at the given <code>key</code>.\n",null,0],["delete","Net::FTP","Ruby/classes/Net/FTP.html#method-i-delete","(filename)","<p>Deletes a file on the server.\n",null,0],["delete","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-delete","(path, initheader = {'Depth' => 'Infinity'})","<p>Sends a DELETE request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,0],["delete","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-delete","(key)","<p>Removes a header field, specified by case-insensitive key.\n",null,0],["delete","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-delete","(mailbox)","<p>Sends a DELETE command to remove the <code>mailbox</code>.\n<p>A Net::IMAP::NoResponseError is raised if a mailbox with …\n",null,0],["delete","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-delete","()","<p>Marks a message for deletion on the server.  Deletion does not actually\noccur until the end of the session; …\n",null,0],["delete","PStore","Ruby/classes/PStore.html#method-i-delete","(name)","<p>Removes an object hierarchy from the data store, by <em>name</em>.\n<p><strong>WARNING</strong>:  This method is only valid in a\nPStore#transaction …\n",null,0],["delete","Pathname","Ruby/classes/Pathname.html#method-i-delete","()","<p>Removes a file or directory, using File.unlink if <code>self</code> is a\nfile, or Dir.unlink as necessary.\n",null,0],["delete","PrettyPrint::GroupQueue","Ruby/classes/PrettyPrint/GroupQueue.html#method-i-delete","(group)","",null,0],["delete","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-delete","( object )","",null,0],["delete","Rinda::TupleBag","Ruby/classes/Rinda/TupleBag.html#method-i-delete","(tuple)","<p>Removes <code>tuple</code> from the TupleBag.\n",null,0],["delete","Rinda::TupleBag::TupleBin","Ruby/classes/Rinda/TupleBag/TupleBin.html#method-i-delete","(tuple)","",null,0],["delete","SDBM","Ruby/classes/SDBM.html#method-i-delete","(p1)","<p>Deletes the key-value pair corresponding to the given <code>key</code>. If\nthe <code>key</code> exists, the deleted value will …\n",null,0],["delete","Set","Ruby/classes/Set.html#method-i-delete","(o)","<p>Deletes the given object from the set and returns self.  Use\n<code>subtract</code> to delete many items at once.\n",null,0],["delete","String","Ruby/classes/String.html#method-i-delete","(*args)","<p>Returns a copy of <em>str</em> with all characters in the intersection of\nits arguments deleted. Uses the same …\n",null,0],["delete","Sys","Ruby/classes/Sys.html#method-i-delete","(*wildcards)","<p>Remove all files matching <code>wildcard</code>.  If a matching file is a\ndirectory, it must be empty to be removed. …\n",null,0],["delete","Tempfile","Ruby/classes/Tempfile.html#method-i-delete","()","",null,0],["delete","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-delete","(name)","",null,0],["delete","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-delete","( key )","<p>Deletes value from database associated with <code>key</code>.\n<p>Returns value or <code>nil</code>.\n",null,0],["delete","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-delete","(key)","",null,1],["delete","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-delete","(target)","",null,1],["delete","ActionDispatch::Routing::Mapper::HttpHelpers","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-delete","(*args, &block)","<p>Define a route that only recognizes HTTP DELETE. For supported arguments,\nsee match\n\n<pre>delete &#39;broccoli&#39;, ...</pre>\n",null,1],["delete","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-delete","(key)","<p>Delete messages for <code>key</code>. Returns the deleted messages.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">get</span>(:<span class=\"ruby-identifier\">name</span>)    <span class=\"ruby-comment\"># =&gt; [&quot;can not be nil&quot;] ...</span>\n</pre>\n",null,1],["delete","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-delete","(*records)","<p>Deletes the <code>records</code> supplied and removes them from the\ncollection. For <code>has_many</code> associations, the deletion …\n",null,1],["delete","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-delete","(element)","<p>If <code>element</code> is in the queue, remove and return it, or nil.\n",null,1],["delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-delete","(arel, name = nil, binds = [])","<p>Executes the delete statement and returns the number of rows affected.\n",null,1],["delete","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-delete","(key)","",null,1],["delete","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-delete","(sql_key)","",null,1],["delete","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-delete","(key)","",null,1],["delete","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-delete","()","<p>Deletes the record in the database and freezes this instance to reflect\nthat no changes should be made …\n",null,1],["delete","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-delete","(id_or_array)","<p>Deletes the row with a primary key matching the <code>id</code> argument,\nusing a SQL <code>DELETE</code> statement, and returns …\n",null,1],["delete","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-delete","(name, options = nil)","<p>Deletes an entry in the cache. Returns <code>true</code> if an entry is\ndeleted.\n<p>Options are passed to the underlying …\n",null,1],["delete","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-delete","(key)","<p>Removes the specified key from the hash.\n",null,1],["delete","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-delete","(key)","<p>Removes the specified key from the hash.\n",null,1],["delete","Rails::Configuration::MiddlewareStackProxy","Rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-delete","(*args, &block)","",null,1],["delete!","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-delete-21","()","",null,0],["delete!","String","Ruby/classes/String.html#method-i-delete-21","(*args)","<p>Performs a <code>delete</code> operation in place, returning <em>str</em>,\nor <code>nil</code> if <em>str</em> was not modified.\n",null,0],["delete?","Set","Ruby/classes/Set.html#method-i-delete-3F","(o)","<p>Deletes the given object from the set and returns self.  If the object is\nnot in the set, returns nil. …\n",null,0],["delete?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-delete-3F","()","<p>Is this a DELETE request? Equivalent to <code>request.request_method_symbol\n== :delete</code>.\n",null,1],["delete_all","Net::POP3","Ruby/classes/Net/POP3.html#method-i-delete_all","()","<p>Deletes all messages on the server.\n<p>If called with a block, yields each message in turn before deleting …\n",null,0],["delete_all","Net::POP3","Ruby/classes/Net/POP3.html#method-c-delete_all","(address, port = nil, account = nil, password = nil, isapop = false, &block)","<p>Starts a POP3 session and deletes all messages on the server. If a block is\ngiven, each POPMail object …\n",null,0],["delete_all","Sys","Ruby/classes/Sys.html#method-i-delete_all","(*wildcards)","<p>Recursively delete all files and directories matching\n<code>wildcard</code>.\n",null,0],["delete_all","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-delete_all","()","<p>Deletes all the records from the collection. For <code>has_many</code>\nassociations, the deletion is done according …\n",null,1],["delete_all","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-delete_all","(conditions = nil)","<p>Deletes the records matching <code>conditions</code> without instantiating\nthe records first, and hence not calling …\n",null,1],["delete_at","Array","Ruby/classes/Array.html#method-i-delete_at","(p1)","<p>Deletes the element at the specified <code>index</code>, returning that\nelement, or <code>nil</code> if the <code>index</code> is out of range. …\n",null,0],["delete_at","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-delete_at","( index )","",null,0],["delete_attribute","REXML::Element","Ruby/classes/REXML/Element.html#method-i-delete_attribute","(key)","<p>Removes an attribute\n<p>key &mdash; either an Attribute or a String.  In either case, the attribute is found by\nmatching …\n",null,0],["delete_cookie","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-delete_cookie","(key, value={})","",null,1],["delete_element","REXML::Element","Ruby/classes/REXML/Element.html#method-i-delete_element","(element)","<p>Deletes a child element.\n<p>element &mdash; Must be an <code>Element</code>, <code>String</code>, or\n<code>Integer</code>.  If Element, the element is removed. …\n",null,0],["delete_entry","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-delete_entry","(key, options)","",null,1],["delete_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-delete_entry","(key, options)","",null,1],["delete_field","OpenStruct","Ruby/classes/OpenStruct.html#method-i-delete_field","(name)","<p>Remove the named field from the object. Returns the value that the field\ncontained if it was defined. …\n",null,0],["delete_if","Array","Ruby/classes/Array.html#method-i-delete_if","()","<p>Deletes every element of <code>self</code> for which block evaluates to\n<code>true</code>.\n<p>The array is changed instantly every …\n",null,0],["delete_if","CSV::Row","Ruby/classes/CSV/Row.html#method-i-delete_if","(&block)","<p>The provided <code>block</code> is passed a header and field for each pair\nin the row and expected to return <code>true</code> …\n",null,0],["delete_if","CSV::Table","Ruby/classes/CSV/Table.html#method-i-delete_if","(&block)","<p>Removes any column or row for which the block returns <code>true</code>. \nIn the default mixed mode or row mode, iteration …\n",null,0],["delete_if","DBM","Ruby/classes/DBM.html#method-i-delete_if","()","<p>Deletes all entries for which the code block returns true. Returns self.\n",null,0],["delete_if","ENV","Ruby/classes/ENV.html#method-c-delete_if","()","<p>Deletes every environment variable for which the block evaluates to\n<code>true</code>.\n<p>If no block is given an enumerator …\n",null,0],["delete_if","GDBM","Ruby/classes/GDBM.html#method-i-delete_if","()","<p>Deletes every key-value pair from <em>gdbm</em> for which <em>block</em>\nevaluates to true.\n",null,0],["delete_if","Hash","Ruby/classes/Hash.html#method-i-delete_if","()","<p>Deletes every key-value pair from <em>hsh</em> for which <em>block</em>\nevaluates to <code>true</code>.\n<p>If no block is given, an enumerator …\n",null,0],["delete_if","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-delete_if","( &block )","",null,0],["delete_if","SDBM","Ruby/classes/SDBM.html#method-i-delete_if","()","<p>Iterates over the key-value pairs in the database, deleting those for which\nthe block returns <code>true</code>.\n",null,0],["delete_if","Set","Ruby/classes/Set.html#method-i-delete_if","()","<p>Deletes every element of the set for which block evaluates to true, and\nreturns self.\n",null,0],["delete_if","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-delete_if","()","<p>Calls the given block once for each <code>key</code>, <code>value</code>\npair in the database. Deletes all entries for which the …\n",null,0],["delete_key","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-delete_key","(name, recursive = false)","<p>Delete a subkey named name and all its values.\n<p>If recursive is false, the subkey must not have subkeys. …\n",null,0],["delete_legacy_args","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-delete_legacy_args","(args)","<p>Removes legacy rdoc arguments from <code>args</code>\n",null,0],["delete_legacy_args","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-delete_legacy_args","(args)","<p>Removes legacy rdoc arguments from <code>args</code>\n",null,0],["delete_matched","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-delete_matched","(matcher, options = nil)","",null,1],["delete_matched","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-delete_matched","(matcher, options = nil)","",null,1],["delete_matched","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-i-delete_matched","(matcher, options = nil)","",null,1],["delete_matched","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-delete_matched","(matcher, options = nil)","<p>Delete all entries with keys matching the pattern.\n<p>Options are passed to the underlying cache implementation. …\n",null,1],["delete_namespace","REXML::Element","Ruby/classes/REXML/Element.html#method-i-delete_namespace","(namespace=\"xmlns\")","<p>Removes a namespace from this node.  This only works if the namespace is\nactually declared in this node. …\n",null,0],["delete_observer","Observable","Ruby/classes/Observable.html#method-i-delete_observer","(observer)","<p>Remove <code>observer</code> as an observer on this object so that it will\nno longer receive notifications.\n<p><code>observer</code> … &mdash; ",null,0],["delete_observers","Observable","Ruby/classes/Observable.html#method-i-delete_observers","()","<p>Remove all observers associated with this object.\n",null,0],["delete_passwd","WEBrick::HTTPAuth::Htdigest","Ruby/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-delete_passwd","(realm, user)","<p>Removes a password from the database for <code>user</code> in\n<code>realm</code>.\n",null,0],["delete_passwd","WEBrick::HTTPAuth::Htpasswd","Ruby/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-delete_passwd","(realm, user)","<p>Removes a password from the database for <code>user</code> in\n<code>realm</code>.\n",null,0],["delete_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-delete_sql","(sql, name = nil)","<p>Executes the delete statement and returns the number of rows affected.\n",null,1],["delete_unless_alive","Rinda::TupleBag","Ruby/classes/Rinda/TupleBag.html#method-i-delete_unless_alive","()","<p>Delete tuples which dead tuples from the TupleBag, returning the deleted\ntuples.\n",null,0],["delete_value","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-delete_value","(name)","<p>Delete a registry value named name. We can not delete the `default&#39;\nvalue.\n",null,0],["deleted?","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-deleted-3F","()","<p>True if the mail has been deleted.\n",null,0],["deleteln","Curses","Ruby/classes/Curses.html#method-c-deleteln","()","<p>Delete the line under the cursor.\n",null,0],["deleteln","Curses::Window","Ruby/classes/Curses/Window.html#method-i-deleteln","()","<p>Delete the line under the cursor.\n",null,0],["deliver","ActionMailer::LogSubscriber","Rails/classes/ActionMailer/LogSubscriber.html#method-i-deliver","(event)","",null,1],["demodulize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-demodulize","(path)","<p>Removes the module part from the expression in the string.\n\n<pre>&#39;ActiveRecord::CoreExtensions::String::Inflections&#39;.demodulize ...</pre>\n",null,1],["demodulize","String","Rails/classes/String.html#method-i-demodulize","()","<p>Removes the module part from the constant expression in the string.\n\n<pre>&#39;ActiveRecord::CoreExtensions::String::Inflections&#39;.demodulize ...</pre>\n",null,1],["denominator","Complex","Ruby/classes/Complex.html#method-i-denominator","()","<p>Returns the denominator (lcm of both denominator - real and imag).\n<p>See numerator.\n",null,0],["denominator","Float","Ruby/classes/Float.html#method-i-denominator","()","<p>Returns the denominator (always positive).  The result is machine\ndependent.\n<p>See numerator.\n",null,0],["denominator","Integer","Ruby/classes/Integer.html#method-i-denominator","()","<p>Returns 1.\n",null,0],["denominator","Integer","Ruby/classes/Integer.html#method-i-denominator","()","<p>Returns 1.\n",null,0],["denominator","Numeric","Ruby/classes/Numeric.html#method-i-denominator","()","<p>Returns the denominator (always positive).\n",null,0],["denominator","Rational","Ruby/classes/Rational.html#method-i-denominator","()","<p>Returns the denominator (always positive).\n\n<pre><code>Rational(7).denominator             #=&gt; 1\nRational(7, 1).denominator ...\n</code></pre>\n",null,0],["depend_rules","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-depend_rules","(depend)","<p>Processes the data contents of the “depend” file.  Each line of this file\nis expected to be …\n",null,0],["dependencies","Gem::DependencyResolver::IndexSpecification","Ruby/classes/Gem/DependencyResolver/IndexSpecification.html#method-i-dependencies","()","",null,0],["dependencies","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-dependencies","()","<p>A list of Gem::Dependency objects this gem depends on.\n<p>Use #add_dependency or #add_development_dependency …\n",null,0],["dependencies","ActionView::DependencyTracker::ERBTracker","Rails/classes/ActionView/DependencyTracker/ERBTracker.html#method-i-dependencies","()","",null,1],["dependencies","ActionView::Digestor","Rails/classes/ActionView/Digestor.html#method-i-dependencies","()","",null,1],["dependencies_ok?","Gem::Uninstaller","Ruby/classes/Gem/Uninstaller.html#method-i-dependencies_ok-3F","(spec)","",null,0],["dependency","Gem::ImpossibleDependenciesError","Ruby/classes/Gem/ImpossibleDependenciesError.html#method-i-dependency","()","",null,0],["dependency_order","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-dependency_order","()","<p>Return a list of the gem specifications in the dependency list, sorted in\norder so that no gemspec in …\n",null,0],["dependent_gems","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-dependent_gems","()","<p>Return a list of all gems that have a dependency on this gemspec.  The list\nis structured with entries …\n",null,0],["dependent_specs","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-dependent_specs","()","<p>Returns all specs that matches this spec&#39;s runtime dependencies.\n",null,0],["deprecate","Gem::Deprecate","Ruby/classes/Gem/Deprecate.html#method-c-deprecate","(name, repl, year, month)","<p>Simple deprecation method that deprecates <code>name</code> by wrapping it\nup in a dummy method. It warns on each …\n",null,0],["deprecate","Rake::Application","Ruby/classes/Rake/Application.html#method-i-deprecate","(old_usage, new_usage, call_site)","<p>Warn about deprecated usage.\n<p>Example:\n\n<pre><code>Rake.application.deprecate(&quot;import&quot;, &quot;Rake.import&quot;, caller.first)</code></pre>\n",null,0],["deprecate","Rake::Application","Ruby/classes/Rake/Application.html#method-i-deprecate","(old_usage, new_usage, call_site)","<p>Warn about deprecated usage.\n<p>Example:\n\n<pre><code>Rake.application.deprecate(&quot;import&quot;, &quot;Rake.import&quot;, caller.first)</code></pre>\n",null,0],["deprecate","Module","Rails/classes/Module.html#method-i-deprecate","(*method_names)","\n<pre>deprecate :foo\ndeprecate bar: &#39;message&#39;\ndeprecate :foo, :bar, baz: &#39;warning!&#39;, qux: &#39;gone!&#39;</pre>\n<p>You can also …\n",null,1],["deprecate","Rails::DeprecatedConstant","Rails/classes/Rails/DeprecatedConstant.html#method-c-deprecate","(old, current)","",null,1],["deprecate_methods","ActiveSupport::Deprecation::MethodWrapper","Rails/classes/ActiveSupport/Deprecation/MethodWrapper.html#method-i-deprecate_methods","(target_module, *method_names)","<p>Declare that a method has been deprecated.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">Fred</span>\n  <span class=\"ruby-identifier\">extend</span> <span class=\"ruby-keyword\">self</span>\n\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">foo</span>; <span class=\"ruby-keyword\">end</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">bar</span>; <span class=\"ruby-keyword\">end</span>\n  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["deprecation_warning","ActiveSupport::Deprecation::Reporting","Rails/classes/ActiveSupport/Deprecation/Reporting.html#method-i-deprecation_warning","(deprecated_method_name, message = nil, caller_backtrace = nil)","",null,1],["deq","PrettyPrint::GroupQueue","Ruby/classes/PrettyPrint/GroupQueue.html#method-i-deq","()","",null,0],["deq","Queue","Ruby/classes/Queue.html#method-i-deq","(non_block=false)","<p>Alias of pop\n",null,0],["deq","SizedQueue","Ruby/classes/SizedQueue.html#method-i-deq","(*args)","<p>Alias of pop\n",null,0],["dequote","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-dequote","(str)","<p>Removes quotes and escapes from <code>str</code>\n",null,0],["desc","Rails::API::Task","Rails/classes/Rails/API/Task.html#method-i-desc","(description)","<p>Hack, ignore the desc calls performed by the original initializer.\n",null,1],["desc","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-desc","(description=nil)","<p>Tries to get the description from a USAGE file one folder above the source\nroot otherwise uses a default …\n",null,1],["descend","Pathname","Ruby/classes/Pathname.html#method-i-descend","()","<p>Iterates over and yields a new Pathname object for each element in the\ngiven path in descending order. …\n",null,0],["descendants","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-i-descendants","()","",null,1],["descendants","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-c-descendants","(klass)","",null,1],["descends_from_active_record?","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-descends_from_active_record-3F","()","<p>True if this isn&#39;t a concrete subclass needing a STI type condition.\n",null,1],["description","Gem::Command","Ruby/classes/Gem/Command.html#method-i-description","()","<p>Override to display a longer description of what this command does.\n",null,0],["description","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-description","()","<p>Handy wrapper for marking up this class or module&#39;s comment\n",null,0],["description","RDoc::Generator::Markup","Ruby/classes/RDoc/Generator/Markup.html#method-i-description","()","<p>Handy wrapper for marking up this object&#39;s comment\n",null,0],["description=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-description-3D","(str)","<p>A detailed description of this gem.  See also #summary\n",null,0],["destination_encoding","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an Encoding object.\n",null,0],["destination_encoding","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an encoding object.\n",null,0],["destination_encoding","Encoding::UndefinedConversionError","Ruby/classes/Encoding/UndefinedConversionError.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an encoding object.\n",null,0],["destination_encoding_name","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-destination_encoding_name","()","<p>Returns the destination encoding name as a string.\n",null,0],["destination_encoding_name","Encoding::UndefinedConversionError","Ruby/classes/Encoding/UndefinedConversionError.html#method-i-destination_encoding_name","()","<p>Returns the destination encoding name as a string.\n",null,0],["destroy","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-destroy","(*records)","<p>Destroys the <code>records</code> supplied and removes them from the\ncollection. This method will <em>always</em> remove record …\n",null,1],["destroy","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-destroy","()","<p>Deletes the record in the database and freezes this instance to reflect\nthat no changes should be made …\n",null,1],["destroy","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-destroy","(id)","<p>Destroy an object (or multiple objects) that has the given id. The object\nis instantiated first, therefore …\n",null,1],["destroy","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-i-destroy","()","<p>DELETE destroy\n",null,1],["destroy!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-destroy-21","()","<p>Deletes the record in the database and freezes this instance to reflect\nthat no changes should be made …\n",null,1],["destroy_all","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-destroy_all","()","<p>Deletes the records of the collection directly from the database. This will\n<em>always</em> remove the records …\n",null,1],["destroy_all","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-destroy_all","(conditions = nil)","<p>Destroys the records matching <code>conditions</code> by instantiating each\nrecord and calling its <code>destroy</code> method. …\n",null,1],["destroy_session","ActionDispatch::Session::CacheStore","Rails/classes/ActionDispatch/Session/CacheStore.html#method-i-destroy_session","(env, sid, options)","<p>Remove a session from the cache.\n",null,1],["destroy_session","ActionDispatch::Session::CookieStore","Rails/classes/ActionDispatch/Session/CookieStore.html#method-i-destroy_session","(env, session_id, options)","",null,1],["destroyed?","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-destroyed-3F","()","<p>Returns true if this object has been destroyed, otherwise returns false.\n",null,1],["destroyed_by_association","ActiveRecord::AutosaveAssociation","Rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-destroyed_by_association","()","<p>Returns the association for the parent being destroyed.\n<p>Used to avoid updating the counter cache unnecessarily. …\n",null,1],["destroyed_by_association=","ActiveRecord::AutosaveAssociation","Rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-destroyed_by_association-3D","(reflection)","<p>Records the association that is being destroyed and destroying this record\nin the process.\n",null,1],["det","Matrix","Ruby/classes/Matrix.html#method-i-det","()","",null,0],["det","Matrix::LUPDecomposition","Ruby/classes/Matrix/LUPDecomposition.html#method-i-det","()","<p>Returns the determinant of <code>A</code>, calculated efficiently from the\nfactorization.\n",null,0],["det_e","Matrix","Ruby/classes/Matrix.html#method-i-det_e","()","",null,0],["detach","Process","Ruby/classes/Process.html#method-c-detach","(p1)","<p>Some operating systems retain the status of terminated child processes\nuntil the parent collects that …\n",null,0],["detached","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-detached","()","",null,0],["detached=","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-detached-3D","(p1)","",null,0],["detached?","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-detached-3F","()","",null,0],["detail_args_for","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-detail_args_for","(options)","<p>Compute details hash and key according to user options (e.g. passed from\n#render).\n",null,1],["details_for_lookup","AbstractController::ViewPaths","Rails/classes/AbstractController/ViewPaths.html#method-i-details_for_lookup","()","",null,1],["detect","Enumerable","Ruby/classes/Enumerable.html#method-i-detect","(p1 = v1)","<p>Passes each entry in <em>enum</em> to <em>block</em>. Returns the first for\nwhich <em>block</em> is not false.  If no object matches, …\n",null,0],["detect","Gem::SpecFetcher","Ruby/classes/Gem/SpecFetcher.html#method-i-detect","(type=:complete)","<p>Return all gem name tuples who&#39;s names match <code>obj</code>\n",null,0],["detect_gemdeps","Gem","Ruby/classes/Gem.html#method-c-detect_gemdeps","()","",null,0],["detect_implicit","Psych","Ruby/classes/Psych.html#method-c-detect_implicit","(thing)","",null,0],["determinant","Matrix","Ruby/classes/Matrix.html#method-i-determinant","()","<p>Returns the determinant of the matrix.\n<p>Beware that using Float values can yield erroneous results because …\n",null,0],["determinant","Matrix::LUPDecomposition","Ruby/classes/Matrix/LUPDecomposition.html#method-i-determinant","()","",null,0],["determinant_e","Matrix","Ruby/classes/Matrix.html#method-i-determinant_e","()","<p>deprecated; use Matrix#determinant\n",null,0],["dev","File::Stat","Ruby/classes/File/Stat.html#method-i-dev","()","<p>Returns an integer representing the device on which <em>stat</em> resides.\n\n<pre><code>File.stat(&quot;testfile&quot;).dev   #=&gt; 774\n</code></pre>\n",null,0],["dev_major","File::Stat","Ruby/classes/File/Stat.html#method-i-dev_major","()","<p>Returns the major part of <code>File_Stat#dev</code> or <code>nil</code>.\n\n<pre><code>File.stat(&quot;/dev/fd1&quot;).dev_major   #=&gt; 2\nFile.stat(&quot;/dev/tty&quot;).dev_major ...\n</code></pre>\n",null,0],["dev_minor","File::Stat","Ruby/classes/File/Stat.html#method-i-dev_minor","()","<p>Returns the minor part of <code>File_Stat#dev</code> or <code>nil</code>.\n\n<pre><code>File.stat(&quot;/dev/fd1&quot;).dev_minor   #=&gt; 1\nFile.stat(&quot;/dev/tty&quot;).dev_minor ...\n</code></pre>\n",null,0],["development_dependencies","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-development_dependencies","()","<p>List of dependencies that are used for development\n",null,0],["dfdxi","Jacobian","Ruby/classes/Jacobian.html#method-i-dfdxi","(f,fx,x,i)","<p>Computes the derivative of f at x. fx is the value of f at x.\n",null,0],["dh_compute_key","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-dh_compute_key","(p1)","<p>See the OpenSSL documentation for ECDH_compute_key()\n",null,0],["diagonal","Matrix","Ruby/classes/Matrix.html#method-c-diagonal","(*values)","<p>Creates a matrix where the diagonal elements are composed of\n<code>values</code>.\n\n<pre><code>Matrix.diagonal(9, 5, -3)\n  =&gt;  9 ...\n</code></pre>\n",null,0],["diagonal?","Matrix","Ruby/classes/Matrix.html#method-i-diagonal-3F","()","<p>Returns <code>true</code> is this is a diagonal matrix. Raises an error if\nmatrix is not square.\n",null,0],["diff","Hash","Rails/classes/Hash.html#method-i-diff","(other)","<p>Returns a hash that represents the difference between two hashes.\n\n<pre class=\"ruby\">{<span class=\"ruby-value\">1</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>}.<span class=\"ruby-identifier\">diff</span>(<span class=\"ruby-value\">1</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>)         <span class=\"ruby-comment\"># =&gt; {} ...</span>\n</pre>\n",null,1],["difference","Set","Ruby/classes/Set.html#method-i-difference","(enum)","",null,0],["digest","Digest::Class","Ruby/classes/Digest/Class.html#method-c-digest","(*args)","<p>Returns the hash value of a given <em>string</em>.  This is equivalent to\nDigest::Class.new(*parameters).digest(string), …\n",null,0],["digest","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-digest","(p1 = v1)","<p>If none is given, returns the resulting hash value of the digest, keeping\nthe digest&#39;s state.\n<p>If a …\n",null,0],["digest","OpenSSL::Digest","Ruby/classes/OpenSSL/Digest.html#method-c-digest","(name, data)","<p>Return the <code>data</code> hash computed with <code>name</code> Digest.\n<code>name</code> is either the long name or short name of a supported …\n",null,0],["digest","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-digest","(p1)","",null,0],["digest","OpenSSL::HMAC","Ruby/classes/OpenSSL/HMAC.html#method-i-digest","()","",null,0],["digest","OpenSSL::HMAC","Ruby/classes/OpenSSL/HMAC.html#method-c-digest","(p1, p2, p3)","",null,0],["digest","ActionView::Digestor","Rails/classes/ActionView/Digestor.html#method-i-digest","()","",null,1],["digest","ActionView::Digestor","Rails/classes/ActionView/Digestor.html#method-c-digest","(name, format, finder, options = {})","",null,1],["digest!","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-digest-21","()","<p>Returns the resulting hash value and resets the digest to the initial\nstate.\n",null,0],["digest_length","Digest::HMAC","Ruby/classes/Digest/HMAC.html#method-i-digest_length","()","<p>Returns the length in bytes of the hash value of the digest.\n",null,0],["digest_length","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-digest_length","()","<p>Returns the length of the hash value of the digest.\n<p>This method should be overridden by each implementation …\n",null,0],["digest_length","OpenSSL::Digest","Ruby/classes/OpenSSL/Digest.html#method-i-digest_length","()","<p>Returns the output size of the digest, i.e. the length in bytes of the\nfinal message digest result.\n<p>Example …\n",null,0],["dir","Gem","Ruby/classes/Gem.html#method-c-dir","()","<p>The path where gems are to be installed.\n",null,0],["dir","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-dir","()","<p>Return the target directory where the gem is to be installed. This\ndirectory is not guaranteed to be …\n",null,0],["dir","Net::FTP","Ruby/classes/Net/FTP.html#method-i-dir","(*args)","",null,0],["dir","Build","Rails/classes/Build.html#method-i-dir","()","",null,1],["dir_config","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-dir_config","(target, idefault=nil, ldefault=nil)","<p>Sets a <code>target</code> name that the user can then use to configure\nvarious “with” options with on the …\n",null,0],["direct_ancestors","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-direct_ancestors","()","<p>Ancestors of this class or module only\n",null,0],["direct_ancestors","RDoc::NormalClass","Ruby/classes/RDoc/NormalClass.html#method-i-direct_ancestors","()","",null,0],["direct_descendants","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-i-direct_descendants","()","",null,1],["direct_descendants","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-c-direct_descendants","(klass)","",null,1],["directories","SourceAnnotationExtractor::Annotation","Rails/classes/SourceAnnotationExtractor/Annotation.html#method-c-directories","()","",null,1],["directory?","File","Ruby/classes/File.html#method-c-directory-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. …\n",null,0],["directory?","File::Stat","Ruby/classes/File/Stat.html#method-i-directory-3F","()","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. …\n",null,0],["directory?","FileTest","Ruby/classes/FileTest.html#method-i-directory-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. …\n",null,0],["directory?","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-directory-3F","()","<p>Is this tar entry a directory?\n",null,0],["directory?","Pathname","Ruby/classes/Pathname.html#method-i-directory-3F","()","<p>See FileTest.directory?.\n",null,0],["directory?","Rake::FtpFile","Ruby/classes/Rake/FtpFile.html#method-i-directory-3F","()","",null,0],["dirname","File","Ruby/classes/File.html#method-c-dirname","(p1)","<p>Returns all components of the filename given in <em>file_name</em> except\nthe last one. The filename can be formed …\n",null,0],["dirname","Pathname","Ruby/classes/Pathname.html#method-i-dirname","()","<p>Returns all but the last component of the path.\n<p>See File.dirname.\n",null,0],["dirname","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-c-dirname","()","<p>Returns the directory in which the data files are stored.\n",null,1],["dirs","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-dirs","()","<p>Return the directories that Specification uses to find specs.\n",null,0],["dirs=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-dirs-3D","(dirs)","<p>Set the directories that Specification uses to find specs. Setting this\nresets the list of known specs. …\n",null,0],["dirties_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-c-dirties_query_cache","(base, *method_names)","",null,1],["disable","GC","Ruby/classes/GC.html#method-c-disable","()","<p>Disables garbage collection, returning <code>true</code> if garbage\ncollection was already disabled.\n\n<pre><code>GC.disable   #=&gt; ...\n</code></pre>\n",null,0],["disable","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-disable","()","<p>Stops the GC profiler.\n",null,0],["disable","TracePoint","Ruby/classes/TracePoint.html#method-i-disable","()","<p>Deactivates the trace\n<p>Return true if trace was enabled. Return false if trace was disabled.\n\n<pre><code>trace.enabled? ...</code></pre>\n",null,0],["disable_cache","ActionView::LookupContext::DetailsCache","Rails/classes/ActionView/LookupContext/DetailsCache.html#method-i-disable_cache","()","<p>Temporary skip passing the details_key forward.\n",null,1],["disable_close","DL::Handle","Ruby/classes/DL/Handle.html#method-i-disable_close","()","<p>Disable a call to dlclose() when this DL::Handle is garbage collected.\n",null,0],["disable_close","Fiddle::Handle","Ruby/classes/Fiddle/Handle.html#method-i-disable_close","()","<p>Disable a call to dlclose() when this handle is garbage collected.\n",null,0],["disable_ddl_transaction!","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-c-disable_ddl_transaction-21","()","<p>Disable DDL transactions for this migration.\n",null,1],["disable_extension","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-disable_extension","(name)","<p>This is meant to be implemented by the adapters that support extensions\n",null,1],["disable_extension","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-disable_extension","(name)","",null,1],["disable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-disable_query_cache-21","()","",null,1],["disable_referential_integrity","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-disable_referential_integrity","()","<p>Override to turn off referential integrity while executing\n<code>&amp;block</code>.\n",null,1],["disable_ssl","Net::POP3","Ruby/classes/Net/POP3.html#method-i-disable_ssl","()","<p>Disable SSL for all new instances.\n",null,0],["disable_ssl","Net::POP3","Ruby/classes/Net/POP3.html#method-c-disable_ssl","()","<p>Disable SSL for all new instances.\n",null,0],["disable_ssl","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-disable_ssl","()","",null,0],["disable_starttls","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-disable_starttls","()","<p>Disables SMTP/TLS (STARTTLS) for this object.  Must be called before the\nconnection is established to …\n",null,0],["disable_tls","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-disable_tls","()","<p>Disables SMTP/TLS for this object.  Must be called before the connection is\nestablished to have any effect. …\n",null,0],["disasm","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-disasm","(p1)","<p>Takes <code>body</code>, a Method or Proc object, and returns a String with\nthe human readable instructions for <code>body</code> …\n",null,0],["disasm","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-disasm","()","<p>Returns the instruction sequence as a <code>String</code> in human readable\nform.\n\n<pre><code>puts RubyVM::InstructionSequence.compile(&#39;1 ...</code></pre>\n",null,0],["disassemble","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-disassemble","(p1)","<p>Takes <code>body</code>, a Method or Proc object, and returns a String with\nthe human readable instructions for <code>body</code> …\n",null,0],["disassemble","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-disassemble","()","<p>Returns the instruction sequence as a <code>String</code> in human readable\nform.\n\n<pre><code>puts RubyVM::InstructionSequence.compile(&#39;1 ...</code></pre>\n",null,0],["discard","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-discard","(k = nil)","<p>Marks the entire flash or a single flash entry to be discarded by the end\nof the current action:\n\n<pre>flash.discard ...</pre>\n",null,1],["disconnect","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-disconnect","()","<p>Disconnects from the server.\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-disconnect-21","()","<p>Disconnects all connections in the pool, and clears the pool.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,1],["disconnected?","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-disconnected-3F","()","<p>Returns true if disconnected from the server.\n",null,0],["disconnecting","GServer","Ruby/classes/GServer.html#method-i-disconnecting","(clientPort)","<p>Called when a client disconnects, if audition is enabled.\n<p><code>clientPort</code> &mdash; the port of the client that is connecting …\n\n",null,0],["dispatch","ActionController::RackDelegation","Rails/classes/ActionController/RackDelegation.html#method-i-dispatch","(action, request)","",null,1],["dispid","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-dispid","()","<p>Returns dispatch ID.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbooks&#39;)\nmethod ...</code></pre>\n",null,0],["display","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-display","()","<p>Returns the display expression list\n<p>See DEBUGGER__ for more usage\n",null,0],["display","Object","Ruby/classes/Object.html#method-i-display","(p1 = v1)","<p>Prints <em>obj</em> on the given port (default <code>$&gt;</code>).\nEquivalent to:\n\n<pre><code>def display(port=$&gt;)\n  port.write self\nend\n</code></pre>\n",null,0],["display","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-display","(document)","<p>Converts <code>document</code> to text and writes it to the pager\n",null,0],["display","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-display","(resource, given_options={})","<p>Display is just a shortcut to render a resource with the current format.\n\n<pre>display @user, status: :ok</pre>\n<p>For …\n",null,1],["display","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-i-display","(results, options={})","<p>Prints the mapping from filenames to annotations in <code>results</code>\nordered by filename. The <code>options</code> hash is …\n",null,1],["display?","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-display-3F","()","<p>Should this CodeObject be shown in documentation?\n",null,0],["display?","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-display-3F","()","<p>Only a TopLevel that contains text file) will be displayed.  See also\nRDoc::CodeObject#display?\n",null,0],["display_attributes","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-display_attributes","()","<p>Debug method that prints a string along with its attributes\n",null,0],["display_class","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-display_class","(name)","<p>Outputs formatted RI data for class <code>name</code>.  Groups undocumented\nclasses\n",null,0],["display_error_message","Rake::Application","Ruby/classes/Rake/Application.html#method-i-display_error_message","(ex)","<p>Display the error message that caused the exception.\n",null,0],["display_error_message","Rake::Application","Ruby/classes/Rake/Application.html#method-i-display_error_message","(ex)","<p>Display the error message that caused the exception.\n",null,0],["display_errors","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-display_errors","()","",null,1],["display_method","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-display_method","(name)","<p>Outputs formatted RI data for method <code>name</code>\n",null,0],["display_name","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-display_name","(name)","<p>Outputs formatted RI data for the class or method <code>name</code>.\n<p>Returns true if <code>name</code> was found, false if it was …\n",null,0],["display_names","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-display_names","(names)","<p>Displays each name in <code>name</code>\n",null,0],["display_page","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-display_page","(name)","<p>Outputs formatted RI data for page <code>name</code>.\n",null,0],["display_page_list","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-display_page_list","(store, pages = store.cache[:pages], search = nil)","<p>Outputs a formatted RI page list for the pages in <code>store</code>.\n",null,0],["display_prerequisites","Rake::Application","Ruby/classes/Rake/Application.html#method-i-display_prerequisites","()","<p>Display the tasks and prerequisites\n",null,0],["display_prerequisites","Rake::Application","Ruby/classes/Rake/Application.html#method-i-display_prerequisites","()","<p>Display the tasks and prerequisites\n",null,0],["display_tasks_and_comments","Rake::Application","Ruby/classes/Rake/Application.html#method-i-display_tasks_and_comments","()","<p>Display the tasks and comments.\n",null,0],["display_tasks_and_comments","Rake::Application","Ruby/classes/Rake/Application.html#method-i-display_tasks_and_comments","()","<p>Display the tasks and comments.\n",null,0],["distance_of_time_in_words","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-distance_of_time_in_words","(from_time, to_time = 0, include_seconds_or_options = {}, options = {})","<p>Reports the approximate distance in time between two Time, Date or DateTime\nobjects or integers as seconds. …\n",null,1],["distance_of_time_in_words_to_now","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-distance_of_time_in_words_to_now","(from_time, include_seconds_or_options = {})","",null,1],["distinct","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-distinct","()","<p>Specifies whether the records should be unique or not.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-identifier\">has_many</span> :<span class=\"ruby-identifier\">pets</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["distinct","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-distinct","(columns, order_by)","<p>SELECT DISTINCT clause for a given set of columns and a given ORDER BY\nclause.\n\n<pre>distinct(&quot;posts.id&quot;, [&quot;posts.created_at ...</pre>\n",null,1],["distinct","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-distinct","(value = true)","<p>Specifies whether the records should be unique or not. For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">select</span>(:<span class=\"ruby-identifier\">name</span>)\n<span class=\"ruby-comment\"># =&gt; Might return ...</span>\n</pre>\n",null,1],["div","BigDecimal","Ruby/classes/BigDecimal.html#method-i-div","(p1, p2 = v2)","<p>See BigDecimal#quo\n",null,0],["div","Bignum","Ruby/classes/Bignum.html#method-i-div","(p1)","<p>Performs integer division: returns integer value.\n",null,0],["div","Fixnum","Ruby/classes/Fixnum.html#method-i-div","(p1)","<p>Performs integer division: returns integer value.\n",null,0],["div","Numeric","Ruby/classes/Numeric.html#method-i-div","(p1)","<p>Uses <code>/</code> to perform division, then converts the result to an\ninteger. <code>numeric</code> does not define the <code>/</code> operator;\n…\n",null,0],["div_for","ActionView::Helpers::RecordTagHelper","Rails/classes/ActionView/Helpers/RecordTagHelper.html#method-i-div_for","(record, *args, &block)","<p>Produces a wrapper DIV element with id and class parameters that relate to\nthe specified Active Record …\n",null,1],["divide","Set","Ruby/classes/Set.html#method-i-divide","(&func)","<p>Divides the set into a set of subsets according to the commonality defined\nby the given block.\n<p>If the …\n",null,0],["divmod","BigDecimal","Ruby/classes/BigDecimal.html#method-i-divmod","(p1)","<p>Divides by the specified value, and returns the quotient and modulus as\nBigDecimal numbers. The quotient …\n",null,0],["divmod","Bignum","Ruby/classes/Bignum.html#method-i-divmod","(p1)","<p>See <code>Numeric#divmod</code>.\n",null,0],["divmod","Fixnum","Ruby/classes/Fixnum.html#method-i-divmod","(p1)","<p>See <code>Numeric#divmod</code>.\n",null,0],["divmod","Float","Ruby/classes/Float.html#method-i-divmod","(p1)","<p>See Numeric#divmod.\n\n<pre><code>42.0.divmod 6 #=&gt; [7, 0.0]\n42.0.divmod 5 #=&gt; [8, 2.0]\n</code></pre>\n",null,0],["divmod","Numeric","Ruby/classes/Numeric.html#method-i-divmod","(p1)","<p>Returns an array containing the quotient and modulus obtained by dividing\n<em>num</em> by <em>numeric</em>. If <code>q, r = </code> …\n",null,0],["dlload","DL::Importer","Ruby/classes/DL/Importer.html#method-i-dlload","(*libs)","",null,0],["dlload","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-dlload","(*libs)","<p>Creates an array of handlers for the given <code>libs</code>, can be an\ninstance of Fiddle::Handle, Fiddle::Importer …\n",null,0],["dlopen","DL","Ruby/classes/DL.html#method-c-dlopen","(*args)","<p>An interface to the dynamic linking loader\n<p>This is a shortcut to DL::Handle.new and takes the same arguments. …\n",null,0],["dlopen","Fiddle","Ruby/classes/Fiddle.html#method-c-dlopen","(library)","<p>Creates a new handler that opens <code>library</code>, and returns an\ninstance of Fiddle::Handle.\n<p>See Fiddle::Handle.new …\n",null,0],["dlunwrap","DL","Ruby/classes/DL.html#method-c-dlunwrap","(p1)","<p>Returns the hexadecimal representation of a memory pointer address\n<code>addr</code>\n<p>Example:\n\n<pre><code>lib = DL.dlopen(&#39;/lib64/libc-2.15.so&#39;) ...</code></pre>\n",null,0],["dlunwrap","Fiddle","Ruby/classes/Fiddle.html#method-c-dlunwrap","(p1)","<p>Returns the hexadecimal representation of a memory pointer address\n<code>addr</code>\n<p>Example:\n\n<pre><code>lib = Fiddle.dlopen(&#39;/lib64/libc-2.15.so&#39;) ...</code></pre>\n",null,0],["dlwrap","DL","Ruby/classes/DL.html#method-c-dlwrap","(p1)","<p>Returns a memory pointer of a function&#39;s hexadecimal address location\n<code>val</code>\n<p>Example:\n\n<pre><code>lib = DL.dlopen(&#39;/lib64/libc-2.15.so&#39;) ...</code></pre>\n",null,0],["dlwrap","Fiddle","Ruby/classes/Fiddle.html#method-c-dlwrap","(p1)","<p>Returns a memory pointer of a function&#39;s hexadecimal address location\n<code>val</code>\n<p>Example:\n\n<pre><code>lib = Fiddle.dlopen(&#39;/lib64/libc-2.15.so&#39;) ...</code></pre>\n",null,0],["dn","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-dn","()","<p>returns dn.\n",null,0],["dn=","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-dn-3D","(val)","<p>setter for dn <code>val</code>\n",null,0],["do_GET","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-do_GET","(req, res)","<p>GET request entry point.  Fills in <code>res</code> for the path, etc. in\n<code>req</code>.\n",null,0],["do_GET","WEBrick::HTTPServlet::AbstractServlet","Ruby/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-i-do_GET","(req, res)","<p>Raises a NotFound exception\n",null,0],["do_GET","WEBrick::HTTPServlet::ERBHandler","Ruby/classes/WEBrick/HTTPServlet/ERBHandler.html#method-i-do_GET","(req, res)","<p>Handles GET requests\n",null,0],["do_HEAD","WEBrick::HTTPServlet::AbstractServlet","Ruby/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-i-do_HEAD","(req, res)","<p>Dispatches to do_GET\n",null,0],["do_OPTIONS","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-do_OPTIONS","(req, res)","<p>The default OPTIONS request handler says GET, HEAD, POST and OPTIONS\nrequests are allowed.\n",null,0],["do_OPTIONS","WEBrick::HTTPServlet::AbstractServlet","Ruby/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-i-do_OPTIONS","(req, res)","<p>Returns the allowed HTTP request methods\n",null,0],["do_POST","WEBrick::HTTPServlet::ERBHandler","Ruby/classes/WEBrick/HTTPServlet/ERBHandler.html#method-i-do_POST","(req, res)","<p>Handles POST requests\n",null,0],["do_aliases","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_aliases","()","<p>Scans #content for rb_define_alias\n",null,0],["do_attrs","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_attrs","()","<p>Scans #content for rb_attr and rb_define_attr\n",null,0],["do_boot_defclass","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_boot_defclass","()","<p>Scans #content for boot_defclass\n",null,0],["do_classes","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_classes","()","<p>Scans #content for rb_define_class, boot_defclass, rb_define_class_under\nand rb_singleton_class\n",null,0],["do_constants","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_constants","()","<p>Scans #content for rb_define_variable, rb_define_readonly_variable,\nrb_define_const and rb_define_global_const …\n",null,0],["do_define_class","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_define_class","()","<p>Scans #content for rb_define_class\n",null,0],["do_define_class_under","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_define_class_under","()","<p>Scans #content for rb_define_class_under\n",null,0],["do_define_module","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_define_module","()","<p>Scans #content for rb_define_module\n",null,0],["do_define_module_under","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_define_module_under","()","<p>Scans #content for rb_define_module_under\n",null,0],["do_includes","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_includes","()","<p>Scans #content for rb_include_module\n",null,0],["do_methods","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_methods","()","<p>Scans #content for rb_define_method, rb_define_singleton_method,\nrb_define_module_function, rb_define_private_method …\n",null,0],["do_missing","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_missing","()","<p>Creates classes and module that were missing were defined due to the file\norder being different than …\n",null,0],["do_modules","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_modules","()","<p>Scans #content for rb_define_module and rb_define_module_under\n",null,0],["do_not_reverse_lookup","BasicSocket","Ruby/classes/BasicSocket.html#method-i-do_not_reverse_lookup","()","<p>Gets the do_not_reverse_lookup flag of <em>basicsocket</em>.\n\n<pre><code>TCPSocket.open(&quot;www.ruby-lang.org&quot;, 80) {|sock|\n  ...\n</code></pre>\n",null,0],["do_not_reverse_lookup","BasicSocket","Ruby/classes/BasicSocket.html#method-c-do_not_reverse_lookup","()","<p>Gets the global do_not_reverse_lookup flag.\n\n<pre><code>BasicSocket.do_not_reverse_lookup  #=&gt; false\n</code></pre>\n",null,0],["do_not_reverse_lookup=","BasicSocket","Ruby/classes/BasicSocket.html#method-c-do_not_reverse_lookup-3D","(p1)","<p>Sets the global do_not_reverse_lookup flag.\n<p>The flag is used for initial value of do_not_reverse_lookup …\n",null,0],["do_not_reverse_lookup=","BasicSocket","Ruby/classes/BasicSocket.html#method-i-do_not_reverse_lookup-3D","(p1)","<p>Sets the do_not_reverse_lookup flag of <em>basicsocket</em>.\n\n<pre><code>BasicSocket.do_not_reverse_lookup = false\np TCPSocket.new(&quot;127.0.0.1&quot;, ...</code></pre>\n",null,0],["do_nothing","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-do_nothing","(markup_item)","<p>Does nothing to <code>markup_item</code> because it doesn&#39;t have any\nuser-built content\n",null,0],["do_parse","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-do_parse","()","<p>The entry point of the parser. This method is used with #next_token. If\nRacc wants to get token (and …\n",null,0],["do_reply","Rinda::RingServer","Ruby/classes/Rinda/RingServer.html#method-i-do_reply","()","<p>Pulls lookup tuples out of the TupleSpace and sends their DRb object the\naddress of the local TupleSpace …\n",null,0],["do_singleton_class","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_singleton_class","()","<p>Scans #content for rb_singleton_class\n",null,0],["do_struct_define_without_accessor","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-do_struct_define_without_accessor","()","<p>Scans #content for struct_define_without_accessor\n",null,0],["do_validate","RSS::BaseParser","Ruby/classes/RSS/BaseParser.html#method-i-do_validate","()","",null,0],["do_validate=","RSS::BaseParser","Ruby/classes/RSS/BaseParser.html#method-i-do_validate-3D","(new_value)","",null,0],["do_write","Rinda::RingServer","Ruby/classes/Rinda/RingServer.html#method-i-do_write","(msg)","<p>Extracts the response URI from <code>msg</code> and adds it to TupleSpace\nwhere it will be picked up by <code>reply_service</code> …\n",null,0],["doc_dir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-doc_dir","(type = nil)","<p>Returns the full path to this spec&#39;s documentation directory.  If\n<code>type</code> is given it will be appended …\n",null,0],["doc_root","Gem::Server","Ruby/classes/Gem/Server.html#method-i-doc_root","(gem_name)","",null,0],["doc_stats","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-doc_stats","(collection)","<p>Returns the length and number of undocumented items in\n<code>collection</code>.\n",null,0],["doctor","Gem::Commands::CheckCommand","Ruby/classes/Gem/Commands/CheckCommand.html#method-i-doctor","()","",null,0],["doctor","Gem::Doctor","Ruby/classes/Gem/Doctor.html#method-i-doctor","()","<p>Cleans up uninstalled files and invalid gem specifications\n",null,0],["doctype","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-doctype","()","",null,0],["doctype","REXML::Document","Ruby/classes/REXML/Document.html#method-i-doctype","()","<p>@return the DocType child of the document, if one exists, and nil\notherwise.\n",null,0],["doctype","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-doctype","(name, pub_sys, long_name, uri)","<p>Handles a doctype declaration. Any attributes of the doctype which are not\nsupplied will be nil.  #  …\n",null,0],["doctype","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-doctype","(name, pub_sys, long_name, uri)","<p>Handles a doctype declaration. Any attributes of the doctype which are not\nsupplied will be nil.  #  …\n",null,0],["doctype","REXML::Text","Ruby/classes/REXML/Text.html#method-i-doctype","()","",null,0],["doctype?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-doctype-3F","()","<p>Content: [ String name, String pub_sys, String long_name, String uri ]\n",null,0],["doctype_end","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-doctype_end","()","<p>Called when the doctype is done\n",null,0],["document","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-document","(options)","<p>Generates documentation or a coverage report depending upon the settings in\n<code>options</code>.\n<p><code>options</code> can be either …\n",null,0],["document","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-document","(generator, options, destination)","<p>Generates documentation using the named <code>generator</code> (“darkfish”\nor “ri”) and following …\n",null,0],["document","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-document","(generator, options, destination)","<p>Generates documentation using the named <code>generator</code> (“darkfish”\nor “ri”) and following …\n",null,0],["document","REXML::Child","Ruby/classes/REXML/Child.html#method-i-document","()","<p>Returns &mdash; the document this child belongs to, or nil if this child\n\n<p>belongs to no document\n",null,0],["document","REXML::Element","Ruby/classes/REXML/Element.html#method-i-document","()","<p>Evaluates to the document to which this element belongs, or nil if this\nelement doesn&#39;t belong to …\n",null,0],["document","XMLRPC::XMLWriter::Simple","Ruby/classes/XMLRPC/XMLWriter/Simple.html#method-i-document","(*params)","",null,0],["document","XMLRPC::XMLWriter::XMLParser","Ruby/classes/XMLRPC/XMLWriter/XMLParser.html#method-i-document","(*params)","",null,0],["document_children=","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-document_children-3D","(document_children)","<p>Enables or disables documentation of this CodeObject&#39;s children unless\nit has been turned off by …\n",null,0],["document_self=","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-document_self-3D","(document_self)","<p>Enables or disables documentation of this CodeObject unless it has been\nturned off by :enddoc:.  If the …\n",null,0],["document_self_or_methods","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-document_self_or_methods","()","<p>Does this ClassModule or any of its methods have document_self set?\n",null,0],["document_to_str","XMLRPC::XMLWriter::Simple","Ruby/classes/XMLRPC/XMLWriter/Simple.html#method-i-document_to_str","(doc)","",null,0],["document_to_str","XMLRPC::XMLWriter::XMLParser","Ruby/classes/XMLRPC/XMLWriter/XMLParser.html#method-i-document_to_str","(doc)","",null,0],["documentation_page","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-documentation_page","(store, generator, path, req, res)","<p>Fills in <code>res</code> with the class, module or page for\n<code>req</code> from <code>store</code>.\n<p><code>path</code> is relative to the mount_path and …\n",null,0],["documentation_search","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-documentation_search","(store, generator, req, res)","<p>Creates the JSON search index on <code>res</code> for the given\n<code>store</code>.  <code>generator</code> must respond to #json_index to\nbuild. …\n",null,0],["documentation_source","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-documentation_source","(path)","<p>Returns the RDoc::Store and path relative to <code>mount_path</code> for\ndocumentation at <code>path</code>.\n",null,0],["documented?","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-documented-3F","()","<p>Does this class or module have a comment with content or is #received_nodoc\ntrue?\n",null,0],["documented?","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-documented-3F","()","<p>Does this object have a comment with content or is #received_nodoc true?\n",null,0],["documented?","RDoc::Constant","Ruby/classes/RDoc/Constant.html#method-i-documented-3F","()","<p>A constant is documented if it has a comment, or is an alias for a\ndocumented class or module.\n",null,0],["documented?","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-documented-3F","()","<p>A method/attribute is documented if any of the following is true:\n<p>it was marked with :nodoc:;\n<p>it has a …\n",null,0],["dom_class","ActionController::RecordIdentifier","Rails/classes/ActionController/RecordIdentifier.html#method-i-dom_class","(record, prefix = nil)","",null,1],["dom_class","ActionController::RecordIdentifier","Rails/classes/ActionController/RecordIdentifier.html#method-c-dom_class","(record, prefix = nil)","",null,1],["dom_class","ActionView::RecordIdentifier","Rails/classes/ActionView/RecordIdentifier.html#method-i-dom_class","(record_or_class, prefix = nil)","<p>The DOM class convention is to use the singular form of an object or class.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">dom_class</span>(<span class=\"ruby-identifier\">post</span>)   <span class=\"ruby-comment\"># =&gt; &quot;post&quot; ...</span>\n</pre>\n",null,1],["dom_id","ActionController::RecordIdentifier","Rails/classes/ActionController/RecordIdentifier.html#method-c-dom_id","(record, prefix = nil)","",null,1],["dom_id","ActionController::RecordIdentifier","Rails/classes/ActionController/RecordIdentifier.html#method-i-dom_id","(record, prefix = nil)","",null,1],["dom_id","ActionView::RecordIdentifier","Rails/classes/ActionView/RecordIdentifier.html#method-i-dom_id","(record, prefix = nil)","<p>The DOM id convention is to use the singular form of an object or class\nwith the id following an underscore. …\n",null,1],["domain","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-domain","(tld_length = @@tld_length)","<p>Returns the domain part of a host, such as “rubyonrails.org” in\n“www.rubyonrails.org”. …\n",null,1],["done","Gem::StreamUI::SilentDownloadReporter","Ruby/classes/Gem/StreamUI/SilentDownloadReporter.html#method-i-done","()","",null,0],["done","Gem::StreamUI::SilentProgressReporter","Ruby/classes/Gem/StreamUI/SilentProgressReporter.html#method-i-done","()","",null,0],["done","Gem::StreamUI::SimpleProgressReporter","Ruby/classes/Gem/StreamUI/SimpleProgressReporter.html#method-i-done","()","<p>Prints out the terminal message.\n",null,0],["done","Gem::StreamUI::VerboseDownloadReporter","Ruby/classes/Gem/StreamUI/VerboseDownloadReporter.html#method-i-done","()","",null,0],["done","Gem::StreamUI::VerboseProgressReporter","Ruby/classes/Gem/StreamUI/VerboseProgressReporter.html#method-i-done","()","<p>Prints out the terminal message.\n",null,0],["done?","REXML::Validation::Event","Ruby/classes/REXML/Validation/Event.html#method-i-done-3F","()","",null,0],["done_adding","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-done_adding","()","<p>Call this to mark the end of parsing for display purposes\n",null,0],["done_adding","RDoc::Stats::Quiet","Ruby/classes/RDoc/Stats/Quiet.html#method-i-done_adding","(*)","<p>Prints when RDoc is done\n",null,0],["done_documenting=","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-done_documenting-3D","(value)","<p>Turns documentation on/off, and turns on/off #document_self and\n#document_children.\n<p>Once documentation …\n",null,0],["done_installing","Gem","Ruby/classes/Gem.html#method-c-done_installing","(&hook)","<p>Adds a post-installs hook that will be passed a Gem::DependencyInstaller\nand a list of installed specifications …\n",null,0],["double","XMLRPC::Convert","Ruby/classes/XMLRPC/Convert.html#method-c-double","(str)","<p>Converts a String to a Float\n<p>See also String.to_f\n",null,0],["double_fig","BigDecimal","Ruby/classes/BigDecimal.html#method-c-double_fig","()","<p>The BigDecimal.double_fig class method returns the number of digits a Float\nnumber is allowed to have. …\n",null,0],["doupdate","Curses","Ruby/classes/Curses.html#method-c-doupdate","()","<p>Refreshes the windows and lines.\n<p>Curses.doupdate allows multiple updates with more efficiency than\nCurses.refresh …\n",null,0],["down","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-down","()","",null,1],["downcase","String","Ruby/classes/String.html#method-i-downcase","()","<p>Returns a copy of <em>str</em> with all uppercase letters replaced with\ntheir lowercase counterparts. The operation …\n",null,0],["downcase","Symbol","Ruby/classes/Symbol.html#method-i-downcase","()","<p>Same as <code>sym.to_s.downcase.intern</code>.\n",null,0],["downcase","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-downcase","()","<p>Converts characters in the string to lowercase.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;VĚDA A VÝZKUM&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">downcase</span>.<span class=\"ruby-identifier\">to_s</span> <span class=\"ruby-comment\"># =&gt; &quot;věda a výzkum&quot;</span>\n</pre>\n",null,1],["downcase","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-downcase","(string)","",null,1],["downcase!","String","Ruby/classes/String.html#method-i-downcase-21","()","<p>Downcases the contents of <em>str</em>, returning <code>nil</code> if no\nchanges were made. Note: case replacement is effective …\n",null,0],["download","Gem::DependencyResolver::ActivationRequest","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html#method-i-download","(path)","",null,0],["download","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-download","(spec, source_uri, install_dir = Gem.dir)","<p>Moves the gem <code>spec</code> from <code>source_uri</code> to the cache\ndir unless it is already there.  If the source_uri is …\n",null,0],["download","Gem::Source","Ruby/classes/Gem/Source.html#method-i-download","(spec, dir=Dir.pwd)","",null,0],["download","Gem::Source::Local","Ruby/classes/Gem/Source/Local.html#method-i-download","(spec, cache_dir=nil)","",null,0],["download","Gem::Source::SpecificFile","Ruby/classes/Gem/Source/SpecificFile.html#method-i-download","(spec, dir=nil)","",null,0],["download_reporter","Gem::SilentUI","Ruby/classes/Gem/SilentUI.html#method-i-download_reporter","(*args)","",null,0],["download_reporter","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-download_reporter","(*args)","<p>Return a download reporter object chosen from the current verbosity\n",null,0],["download_to_cache","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-download_to_cache","(dependency)","<p>Given a name and requirement, downloads this gem into cache and returns the\nfilename. Returns nil if …\n",null,0],["downto","Date","Ruby/classes/Date.html#method-i-downto","(p1)","<p>This method is equivalent to step(min, -1){|date| …}.\n",null,0],["downto","Integer","Ruby/classes/Integer.html#method-i-downto","(p1)","<p>Iterates <em>block</em>, passing decreasing values from <em>int</em> down\nto and including <em>limit</em>.\n<p>If no block is given, …\n",null,0],["downto","Integer","Ruby/classes/Integer.html#method-i-downto","(p1)","<p>Iterates <em>block</em>, passing decreasing values from <em>int</em> down\nto and including <em>limit</em>.\n<p>If no block is given, …\n",null,0],["dowrite","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-i-dowrite","()","",null,0],["drop","Array","Ruby/classes/Array.html#method-i-drop","(p1)","<p>Drops first <code>n</code> elements from <code>ary</code> and returns the\nrest of the elements in an array.\n<p>If a negative number …\n",null,0],["drop","Enumerable","Ruby/classes/Enumerable.html#method-i-drop","(p1)","<p>Drops first n elements from <em>enum</em>, and returns rest elements in an\narray.\n\n<pre><code>a = [1, 2, 3, 4, 5, 0]\na.drop(3) ...</code></pre>\n",null,0],["drop","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-drop","(p1)","",null,0],["drop","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-drop","(*arguments)","",null,1],["drop_all","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-drop_all","()","",null,1],["drop_current","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-drop_current","(environment = env)","",null,1],["drop_database_url","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-drop_database_url","()","",null,1],["drop_join_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-drop_join_table","(table_1, table_2, options = {})","<p>Drops the join table specified by the given arguments. See\n<code>create_join_table</code> for details.\n<p>Although this …\n",null,1],["drop_schema","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-drop_schema","(schema_name)","<p>Drops the schema for the given schema name.\n",null,1],["drop_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-drop_table","(table_name, options = {})","<p>Drops a table from the database.\n<p>Although this command ignores <code>options</code> and the block if one is\ngiven, …\n",null,1],["drop_table","ActiveRecord::SchemaMigration","Rails/classes/ActiveRecord/SchemaMigration.html#method-c-drop_table","()","",null,1],["drop_while","Array","Ruby/classes/Array.html#method-i-drop_while","()","<p>Drops elements up to, but not including, the first element for which the\nblock returns <code>nil</code> or <code>false</code> and …\n",null,0],["drop_while","Enumerable","Ruby/classes/Enumerable.html#method-i-drop_while","()","<p>Drops elements up to, but not including, the first element for which the\nblock returns <code>nil</code> or <code>false</code> and …\n",null,0],["drop_while","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-drop_while","()","",null,0],["dsa_sign_asn1","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-dsa_sign_asn1","(p1)","<p>See the OpenSSL documentation for ECDSA_sign()\n",null,0],["dsa_verify_asn1","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-dsa_verify_asn1","(p1, p2)","<p>See the OpenSSL documentation for ECDSA_verify()\n",null,0],["dst?","Time","Ruby/classes/Time.html#method-i-dst-3F","()","<p>Returns <code>true</code> if <em>time</em> occurs during Daylight Saving\nTime in its time zone.\n\n<pre><code># CST6CDT:\n  Time.local(2000, ...</code></pre>\n",null,0],["dst?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-dst-3F","()","<p>Returns true if the current time is within Daylight Savings Time for the\nspecified time zone.\n\n<pre>Time.zone ...</pre>\n",null,1],["dummy?","Encoding","Ruby/classes/Encoding.html#method-i-dummy-3F","()","<p>Returns true for dummy encodings. A dummy encoding is an encoding for which\ncharacter handling is not …\n",null,0],["dummy_makefile","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-dummy_makefile","(srcdir)","<p>creates a stub Makefile.\n",null,0],["dump","JSON","Ruby/classes/JSON.html#method-i-dump","(obj, anIO = nil, limit = nil)","<p>Dumps <em>obj</em> as a JSON string, i.e. calls generate on the object and\nreturns the result.\n<p>If anIO (an IO-like …\n",null,0],["dump","Marshal","Ruby/classes/Marshal.html#method-c-dump","(p1, p2 = v2, p3 = v3)","<p>Serializes obj and all descendant objects. If anIO is specified, the\nserialized data will be written …\n",null,0],["dump","Psych","Ruby/classes/Psych.html#method-c-dump","(o, io = nil, options = {})","<p>Dump Ruby object <code>o</code> to a YAML string.  Optional\n<code>options</code> may be passed in to control the output format. …\n",null,0],["dump","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-c-dump","(data_path)","<p>Dump <code>data_path</code> using pp\n",null,0],["dump","REXML::Validation::Validator","Ruby/classes/REXML/Validation/Validator.html#method-i-dump","()","",null,0],["dump","String","Ruby/classes/String.html#method-i-dump","()","<p>Produces a version of <code>str</code> with all non-printing characters\nreplaced by <code>\\nnn</code> notation and all special …\n",null,0],["dump_call","XMLRPC::Marshal","Ruby/classes/XMLRPC/Marshal.html#method-i-dump_call","( methodName, *params )","",null,0],["dump_response","XMLRPC::Marshal","Ruby/classes/XMLRPC/Marshal.html#method-i-dump_response","( param )","",null,0],["dump_stream","Psych","Ruby/classes/Psych.html#method-c-dump_stream","(*objects)","<p>Dump a list of objects as separate documents to a document stream.\n<p>Example:\n\n<pre><code>Psych.dump_stream(&quot;foo\\n  &quot;, ...</code></pre>\n",null,0],["dup","Object","Ruby/classes/Object.html#method-i-dup","()","<p>Produces a shallow copy of <em>obj</em>—the instance variables of\n<em>obj</em> are copied, but not the objects they reference. …\n",null,0],["dup","Singleton","Ruby/classes/Singleton.html#method-i-dup","()","<p>Raises a TypeError to prevent duping.\n",null,0],["dup","ActionController::Parameters","Rails/classes/ActionController/Parameters.html#method-i-dup","()","<p>Returns an exact copy of the <code>ActionController::Parameters</code>\ninstance. <code>permitted</code> state is kept on the duped …\n",null,1],["dup","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-dup","","<p>Duped objects have no id assigned and are treated as new records. Note that\nthis is a “shallow” …\n",null,1],["dup","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-dup","()","<p>Returns an exact copy of the hash.\n",null,1],["dup","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-dup","()","<p>Returns an exact copy of the hash.\n",null,1],["duplicable?","BigDecimal","Rails/classes/BigDecimal.html#method-i-duplicable-3F","()","",null,1],["duplicable?","FalseClass","Rails/classes/FalseClass.html#method-i-duplicable-3F","()","<p><code>false</code> is not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">false</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-keyword\">false</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can&#39;t dup FalseClass</span>\n</pre>\n",null,1],["duplicable?","NilClass","Rails/classes/NilClass.html#method-i-duplicable-3F","()","<p><code>nil</code> is not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can&#39;t dup NilClass</span>\n</pre>\n",null,1],["duplicable?","Numeric","Rails/classes/Numeric.html#method-i-duplicable-3F","()","<p>Numbers are not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-value\">3</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-value\">3</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can&#39;t dup Fixnum</span>\n</pre>\n",null,1],["duplicable?","Object","Rails/classes/Object.html#method-i-duplicable-3F","()","<p>Can you safely dup this object?\n<p>False for <code>nil</code>, <code>false</code>, <code>true</code>, symbol,\nand number objects; true otherwise. …\n",null,1],["duplicable?","Symbol","Rails/classes/Symbol.html#method-i-duplicable-3F","()","<p>Symbols are not duplicable:\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">my_symbol</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n:<span class=\"ruby-identifier\">my_symbol</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can&#39;t ...</span>\n</pre>\n",null,1],["duplicable?","TrueClass","Rails/classes/TrueClass.html#method-i-duplicable-3F","()","<p><code>true</code> is not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">true</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-keyword\">true</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can&#39;t dup TrueClass</span>\n</pre>\n",null,1],["duration","ActiveSupport::Notifications::Event","Rails/classes/ActiveSupport/Notifications/Event.html#method-i-duration","()","",null,1],["dynamic_width","Rake::Application","Ruby/classes/Rake/Application.html#method-i-dynamic_width","()","<p>Calculate the dynamic width of the\n",null,0],["dynamic_width","Rake::Application","Ruby/classes/Rake/Application.html#method-i-dynamic_width","()","<p>Calculate the dynamic width of the\n",null,0],["dynamic_width_stty","Rake::Application","Ruby/classes/Rake/Application.html#method-i-dynamic_width_stty","()","",null,0],["dynamic_width_stty","Rake::Application","Ruby/classes/Rake/Application.html#method-i-dynamic_width_stty","()","",null,0],["dynamic_width_tput","Rake::Application","Ruby/classes/Rake/Application.html#method-i-dynamic_width_tput","()","",null,0],["dynamic_width_tput","Rake::Application","Ruby/classes/Rake/Application.html#method-i-dynamic_width_tput","()","",null,0],["e2mm_message","E2MM","Ruby/classes/E2MM.html#method-c-e2mm_message","(klass, exp)","",null,0],["e2mm_message","E2MM","Ruby/classes/E2MM.html#method-c-e2mm_message","(klass, exp)","",null,0],["each","ARGF","Ruby/classes/ARGF.html#method-i-each","(*args)","<p>Returns an enumerator which iterates over each line (separated by\n<em>sep</em>, which defaults to your platform&#39;s …\n",null,0],["each","Array","Ruby/classes/Array.html#method-i-each","()","<p>Calls the given block once for each element in <code>self</code>, passing\nthat element as a parameter.\n<p>An Enumerator …\n",null,0],["each","CSV","Ruby/classes/CSV.html#method-i-each","()","<p>Yields each row of the data source in turn.\n<p>Support for Enumerable.\n<p>The data source must be open for reading. …\n",null,0],["each","CSV::Row","Ruby/classes/CSV/Row.html#method-i-each","(&block)","<p>Yields each pair of the row as header and field tuples (much like iterating\nover a Hash).\n<p>Support for …\n",null,0],["each","CSV::Table","Ruby/classes/CSV/Table.html#method-i-each","(&block)","<p>In the default mixed mode or row mode, iteration is the standard row major\nwalking of rows.  In column …\n",null,0],["each","DBM","Ruby/classes/DBM.html#method-i-each","()","<p>Calls the block once for each [key, value] pair in the database. Returns\nself.\n",null,0],["each","Dir","Ruby/classes/Dir.html#method-i-each","()","<p>Calls the block once for each entry in this directory, passing the filename\nof each entry as a parameter …\n",null,0],["each","ENV","Ruby/classes/ENV.html#method-c-each","()","<p>Yields each environment variable <code>name</code> and <code>value</code>.\n<p>If no block is given an Enumerator is returned.\n",null,0],["each","Enumerator","Ruby/classes/Enumerator.html#method-i-each","(*args)","<p>Iterates over the block according to how this Enumerable was constructed.\nIf no block is given, returns …\n",null,0],["each","GDBM","Ruby/classes/GDBM.html#method-i-each","()","<p>Executes <em>block</em> for each key in the database, passing the\n<em>key</em> and the correspoding <em>value</em> as a parameter. …\n",null,0],["each","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-each","(&block)","<p>Delegates to @hash\n",null,0],["each","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-each","(&block)","<p>Iterator over dependency_order\n",null,0],["each","Gem::Package::TarReader","Ruby/classes/Gem/Package/TarReader.html#method-i-each","()","<p>Iterates over files in the tarball yielding each entry\n",null,0],["each","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-each","()","",null,0],["each","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-each","()","<p>Enumerate every known spec.  See ::dirs= and ::add_spec to set the list of\nspecs.\n",null,0],["each","GetoptLong","Ruby/classes/GetoptLong.html#method-i-each","()","<p>Iterator version of `get&#39;.\n<p>The block is called repeatedly with two arguments: The first is the option\n…\n",null,0],["each","Hash","Ruby/classes/Hash.html#method-i-each","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the\nkey-value pair as parameters.\n<p>If no block is given, …\n",null,0],["each","HttpServer::Table","Ruby/classes/HttpServer/Table.html#method-i-each","()","",null,0],["each","IO","Ruby/classes/IO.html#method-i-each","(*args)","<p>Executes the block for every line in <em>ios</em>, where lines are\nseparated by <em>sep</em>. <em>ios</em> must be opened for reading …\n",null,0],["each","Matrix","Ruby/classes/Matrix.html#method-i-each","(which = :all)","<p>Yields all elements of the matrix, starting with those of the first row, or\nreturns an Enumerator is …\n",null,0],["each","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-each","()","",null,0],["each","Net::POP3","Ruby/classes/Net/POP3.html#method-i-each","()","",null,0],["each","OpenSSL::ASN1::Constructive","Ruby/classes/OpenSSL/ASN1/Constructive.html#method-i-each","()","<p>Calls <em>block</em> once for each element in <code>self</code>, passing\nthat element as parameter <code>asn1</code>. If no block is given, …\n",null,0],["each","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-each","(eol=$/)","<p>Executes the block for every line in the stream where lines are separated\nby <code>eol</code>.\n<p>See also #gets\n",null,0],["each","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-each","()","",null,0],["each","Prime","Ruby/classes/Prime.html#method-i-each","(ubound = nil, generator = EratosthenesGenerator.new, &block)","<p>Iterates the given block over all prime numbers.\n<p>Parameters\n<p><code>ubound</code> &mdash; Optional. An arbitrary positive number. …\n",null,0],["each","Prime::OldCompatibility","Ruby/classes/Prime/OldCompatibility.html#method-i-each","(&block)","<p>Overwrites Prime#each.\n<p>Iterates the given block over all prime numbers. Note that enumeration\nstarts from …\n",null,0],["each","Prime::PseudoPrimeGenerator","Ruby/classes/Prime/PseudoPrimeGenerator.html#method-i-each","(&block)","<p>Iterates the given block for each prime numbers.\n",null,0],["each","Psych::Nodes::Node","Ruby/classes/Psych/Nodes/Node.html#method-i-each","(&block)","<p>Iterate over each node in the tree. Yields each node to <code>block</code>\ndepth first.\n",null,0],["each","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-i-each","(&block)","<p>Enumerator for the parts of this document\n",null,0],["each","RDoc::RI::Paths","Ruby/classes/RDoc/RI/Paths.html#method-c-each","(system = true, site = true, home = true, gems = :latest, *extra_dirs)","<p>Iterates over each selected path yielding the directory and type.\n<p>Yielded types:\n<p>:system &mdash; Where Ruby&#39;s …\n",null,0],["each","REXML::AttlistDecl","Ruby/classes/REXML/AttlistDecl.html#method-i-each","(&block)","<p>Iterate over the key/value pairs:\n\n<pre><code>attlist_decl.each { |attribute_name, attribute_value| ... }\n</code></pre>\n",null,0],["each","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-each","()","",null,0],["each","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-each","(&block)","",null,0],["each","REXML::Parsers::PullParser","Ruby/classes/REXML/Parsers/PullParser.html#method-i-each","()","",null,0],["each","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-each","(element, path, namespaces=EMPTY_HASH, &block)","",null,0],["each","REXML::SyncEnumerator","Ruby/classes/REXML/SyncEnumerator.html#method-i-each","()","<p>Enumerates rows of the Enumerable objects.\n",null,0],["each","REXML::XPath","Ruby/classes/REXML/XPath.html#method-c-each","(element, path=nil, namespaces=nil, variables={})","<p>Iterates over nodes that match the given path, calling the supplied block\nwith the match.\n<p>element &mdash; The …\n",null,0],["each","RSS::XML::Element","Ruby/classes/RSS/XML/Element.html#method-i-each","(&block)","",null,0],["each","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-i-each","(&block)","",null,0],["each","Range","Ruby/classes/Range.html#method-i-each","()","<p>Iterates over the elements of range, passing each in turn to the block.\n<p>The <code>each</code> method can only be used …\n",null,0],["each","Rinda::NotifyTemplateEntry","Ruby/classes/Rinda/NotifyTemplateEntry.html#method-i-each","()","<p>Yields event/tuple pairs until this NotifyTemplateEntry expires.\n",null,0],["each","Rinda::RingFinger","Ruby/classes/Rinda/RingFinger.html#method-i-each","()","<p>Iterates over all discovered TupleSpaces starting with the primary.\n",null,0],["each","Rinda::Tuple","Ruby/classes/Rinda/Tuple.html#method-i-each","()","<p>Iterate through the tuple, yielding the index or key, and the value, thus\nensuring arrays are iterated …\n",null,0],["each","SDBM","Ruby/classes/SDBM.html#method-i-each","()","<p>Iterates over each key-value pair in the database.\n<p>If no block is given, returns an Enumerator.\n",null,0],["each","Set","Ruby/classes/Set.html#method-i-each","(&block)","<p>Calls the given block once for each element in the set, passing the element\nas parameter.  Returns an …\n",null,0],["each","Shell::Cat","Ruby/classes/Shell/Cat.html#method-i-each","(rs = nil)","",null,0],["each","Shell::Concat","Ruby/classes/Shell/Concat.html#method-i-each","(rs = nil)","",null,0],["each","Shell::Echo","Ruby/classes/Shell/Echo.html#method-i-each","(rs = nil)","",null,0],["each","Shell::Filter","Ruby/classes/Shell/Filter.html#method-i-each","(rs = nil)","<p>Iterates a block for each line.\n",null,0],["each","Shell::Glob","Ruby/classes/Shell/Glob.html#method-i-each","(rs = nil)","",null,0],["each","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-each","(rs = nil)","",null,0],["each","Shell::Tee","Ruby/classes/Shell/Tee.html#method-i-each","(rs = nil)","",null,0],["each","Shell::Void","Ruby/classes/Shell/Void.html#method-i-each","(rs = nil)","",null,0],["each","StringIO","Ruby/classes/StringIO.html#method-i-each","(*args)","<p>See IO#each.\n",null,0],["each","Struct","Ruby/classes/Struct.html#method-i-each","()","<p>Calls <em>block</em> once for each instance variable, passing the value as\na parameter.\n<p>If no block is given, an …\n",null,0],["each","Vector","Ruby/classes/Vector.html#method-i-each","(&block)","<p>Iterate over the elements of this vector\n",null,0],["each","WEBrick::HTTPAuth::Htdigest","Ruby/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-each","()","<p>Iterate passwords in the database.\n",null,0],["each","WEBrick::HTTPAuth::Htpasswd","Ruby/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-each","()","<p>Iterate passwords in the database.\n",null,0],["each","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-each","()","<p>Iterates over the request headers\n",null,0],["each","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-each","()","<p>Iterates over each header in the resopnse\n",null,0],["each","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-each","()","<p>Iterates over each item of OLE collection which has IEnumVARIANT interface.\n\n<pre><code>excel = WIN32OLE.new(&#39;Excel.Application&#39;) ...</code></pre>\n",null,0],["each","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-each","()","",null,0],["each","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-each","()","",null,0],["each","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-each","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["each","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-each","(&block)","",null,1],["each","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-i-each","(&block)","",null,1],["each","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-each","()","",null,1],["each","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-each","()","<p>Iterates through each error key, value pair in the error messages hash.\nYields the attribute and the …\n",null,1],["each","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-each","(&block)","",null,1],["each","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-each","(&block)","",null,1],["each","ActiveRecord::ConnectionAdapters::SQLite3Adapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/StatementPool.html#method-i-each","(&block)","",null,1],["each","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-each","()","",null,1],["each","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-i-each","(&block)","",null,1],["each","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-i-each","()","",null,1],["each","ActiveSupport::Dependencies::WatchStack","Rails/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-each","(&block)","",null,1],["each","Rails::Engine::Railties","Rails/classes/Rails/Engine/Railties.html#method-i-each","(*args, &block)","",null,1],["each","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-each","(&block)","",null,1],["each2","Vector","Ruby/classes/Vector.html#method-i-each2","(v)","<p>Iterate over the elements of this vector and <code>v</code> in conjunction.\n",null,0],["each_active_object","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-each_active_object","()","",null,0],["each_address","Resolv","Ruby/classes/Resolv.html#method-c-each_address","(name, &block)","<p>Iterates over all IP addresses for <code>name</code>.\n",null,0],["each_address","Resolv","Ruby/classes/Resolv.html#method-i-each_address","(name)","<p>Iterates over all IP addresses for <code>name</code>.\n",null,0],["each_address","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-each_address","(name)","<p>Iterates over all IP addresses for <code>name</code> retrieved from the DNS\nresolver.\n<p><code>name</code> can be a Resolv::DNS::Name …\n",null,0],["each_address","Resolv::Hosts","Ruby/classes/Resolv/Hosts.html#method-i-each_address","(name, &proc)","<p>Iterates over all IP addresses for <code>name</code> retrieved from the\nhosts file.\n",null,0],["each_ancestor","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-each_ancestor","()","<p>Iterates the ancestors of this class or module for which an\nRDoc::ClassModule exists.\n",null,0],["each_attribute","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-each_attribute","()","<p>Iterator for attributes\n",null,0],["each_byte","ARGF","Ruby/classes/ARGF.html#method-i-each_byte","()","\n<pre><code>Iterates over each byte of each file in +ARGV+.\nA byte is returned as a +Fixnum+ in the range 0..255. ...</code></pre>\n",null,0],["each_byte","IO","Ruby/classes/IO.html#method-i-each_byte","()","<p>Calls the given block once for each byte (0..255) in <em>ios</em>, passing\nthe byte as an argument. The stream …\n",null,0],["each_byte","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-each_byte","()","<p>Calls the given block once for each byte in the stream.\n",null,0],["each_byte","String","Ruby/classes/String.html#method-i-each_byte","()","<p>Passes each byte in <em>str</em> to the given block, or returns an\nenumerator if no block is given.\n\n<pre><code>&quot;hello&quot;.each_byte ...</code></pre>\n",null,0],["each_byte","StringIO","Ruby/classes/StringIO.html#method-i-each_byte","()","<p>See IO#each_byte.\n",null,0],["each_byte","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-each_byte","()","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["each_capitalized","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-each_capitalized","()","<p>As for #each_header, except the keys are provided in capitalized form.\n<p>Note that header names are capitalized …\n",null,0],["each_capitalized_name","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-each_capitalized_name","()","<p>Iterates through the header names in the header, passing capitalized header\nnames to the code block. …\n",null,0],["each_certificate","Gem::Security::TrustDir","Ruby/classes/Gem/Security/TrustDir.html#method-i-each_certificate","()","<p>Enumerates trusted certificates.\n",null,0],["each_char","ARGF","Ruby/classes/ARGF.html#method-i-each_char","()","<p>Iterates over each character of each file in <code>ARGF</code>.\n<p>This method allows you to treat the files supplied …\n",null,0],["each_char","IO","Ruby/classes/IO.html#method-i-each_char","()","<p>Calls the given block once for each character in <em>ios</em>, passing the\ncharacter as an argument. The stream …\n",null,0],["each_char","String","Ruby/classes/String.html#method-i-each_char","()","<p>Passes each character in <em>str</em> to the given block, or returns an\nenumerator if no block is given.\n\n<pre><code>&quot;hello&quot;.each_char ...</code></pre>\n",null,0],["each_char","StringIO","Ruby/classes/StringIO.html#method-i-each_char","()","<p>See IO#each_char.\n",null,0],["each_char","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-each_char","()","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["each_child","Pathname","Ruby/classes/Pathname.html#method-i-each_child","(with_directory=true, &b)","<p>Iterates over the children of the directory (files and subdirectories, not\nrecursive).\n<p>It yields Pathname …\n",null,0],["each_child","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-each_child","(&block)","",null,0],["each_classmodule","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-each_classmodule","()","<p>Iterator for classes and modules\n",null,0],["each_codepoint","ARGF","Ruby/classes/ARGF.html#method-i-each_codepoint","()","<p>Iterates over each codepoint of each file in <code>ARGF</code>.\n<p>This method allows you to treat the files supplied …\n",null,0],["each_codepoint","IO","Ruby/classes/IO.html#method-i-each_codepoint","()","<p>Passes the <code>Integer</code> ordinal of each character in <em>ios</em>,\npassing the codepoint as an argument. The stream …\n",null,0],["each_codepoint","String","Ruby/classes/String.html#method-i-each_codepoint","()","<p>Passes the <code>Integer</code> ordinal of each character in <em>str</em>,\nalso known as a <em>codepoint</em> when applied to Unicode …\n",null,0],["each_codepoint","StringIO","Ruby/classes/StringIO.html#method-i-each_codepoint","()","<p>See IO#each_codepoint.\n",null,0],["each_cons","Enumerable","Ruby/classes/Enumerable.html#method-i-each_cons","(p1)","<p>Iterates the given block for each array of consecutive &lt;n&gt; elements. \nIf no block is given, returns …\n",null,0],["each_const","OptionParser","Ruby/classes/OptionParser.html#method-i-each_const","(path, base = ::Object)","",null,0],["each_constant","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-each_constant","()","<p>Iterator for constants\n",null,0],["each_data","WEBrick::HTTPUtils::FormData","Ruby/classes/WEBrick/HTTPUtils/FormData.html#method-i-each_data","()","<p>Yields each entry in this FormData\n",null,0],["each_element","REXML::Element","Ruby/classes/REXML/Element.html#method-i-each_element","( xpath=nil )","<p>Synonym for Element.elements.each\n",null,0],["each_element_with_attribute","REXML::Element","Ruby/classes/REXML/Element.html#method-i-each_element_with_attribute","( key, value=nil, max=0, name=nil )","<p>Iterates through the child elements, yielding for each Element that has a\nparticular attribute set.\n<p>key … &mdash; ",null,0],["each_element_with_text","REXML::Element","Ruby/classes/REXML/Element.html#method-i-each_element_with_text","( text=nil, max=0, name=nil )","<p>Iterates through the children, yielding for each Element that has a\nparticular text set.\n<p>text &mdash; the text …\n",null,0],["each_entry","Enumerable","Ruby/classes/Enumerable.html#method-i-each_entry","(*args)","<p>Calls <em>block</em> once for each element in <code>self</code>, passing\nthat element as a parameter, converting multiple values …\n",null,0],["each_entry","Gem::Package::TarReader","Ruby/classes/Gem/Package/TarReader.html#method-i-each_entry","()","",null,0],["each_entry","Pathname","Ruby/classes/Pathname.html#method-i-each_entry","()","<p>Iterates over the entries (files and subdirectories) in the directory,\nyielding a Pathname object for …\n",null,0],["each_extend","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-each_extend","()","<p>Iterator for extension modules\n",null,0],["each_filename","Pathname","Ruby/classes/Pathname.html#method-i-each_filename","()","<p>Iterates over each component of the path.\n\n<pre><code>Pathname.new(&quot;/usr/bin/ruby&quot;).each_filename {|filename| ... ...\n</code></pre>\n",null,0],["each_header","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-each_header","()","<p>Iterates through the header names and values, passing in the name and value\nto the code block supplied. …\n",null,0],["each_include","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-each_include","()","<p>Iterator for included modules\n",null,0],["each_index","Array","Ruby/classes/Array.html#method-i-each_index","()","<p>Same as Array#each, but passes the <code>index</code> of the element\ninstead of the element itself.\n<p>An Enumerator is …\n",null,0],["each_index","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-each_index","( &block )","",null,0],["each_installed_parser","XMLRPC::XMLParser","Ruby/classes/XMLRPC/XMLParser.html#method-c-each_installed_parser","()","<p>yields an instance of each installed parser\n",null,0],["each_installed_writer","XMLRPC::XMLWriter","Ruby/classes/XMLRPC/XMLWriter.html#method-c-each_installed_writer","()","<p>yields an instance of each installed XML writer\n",null,0],["each_key","DBM","Ruby/classes/DBM.html#method-i-each_key","()","<p>Calls the block once for each key string in the database. Returns self.\n",null,0],["each_key","ENV","Ruby/classes/ENV.html#method-c-each_key","()","<p>Yields each environment variable name.\n<p>An Enumerator is returned if no block is given.\n",null,0],["each_key","GDBM","Ruby/classes/GDBM.html#method-i-each_key","()","<p>Executes <em>block</em> for each key in the database, passing the\n<em>key</em> as a parameter.\n",null,0],["each_key","Hash","Ruby/classes/Hash.html#method-i-each_key","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the key as\na parameter.\n<p>If no block is given, an enumerator …\n",null,0],["each_key","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-each_key","()","",null,0],["each_key","SDBM","Ruby/classes/SDBM.html#method-i-each_key","()","<p>Iterates over each <code>key</code> in the database.\n<p>If no block is given, returns an Enumerator.\n",null,0],["each_key","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-each_key","()","<p>Enumerate subkeys.\n<p>subkey is String which contains name of subkey. wtime is last write time as\nFILETIME …\n",null,0],["each_line","ARGF","Ruby/classes/ARGF.html#method-i-each_line","(*args)","<p>Returns an enumerator which iterates over each line (separated by\n<em>sep</em>, which defaults to your platform&#39;s …\n",null,0],["each_line","IO","Ruby/classes/IO.html#method-i-each_line","(*args)","<p>Executes the block for every line in <em>ios</em>, where lines are\nseparated by <em>sep</em>. <em>ios</em> must be opened for reading …\n",null,0],["each_line","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-each_line","(eol=$/)","",null,0],["each_line","Pathname","Ruby/classes/Pathname.html#method-i-each_line","(p1 = v1, p2 = v2, p3 = v3)","<p>Iterates over each line in the file and yields a String object for each.\n",null,0],["each_line","String","Ruby/classes/String.html#method-i-each_line","(*args)","<p>Splits <em>str</em> using the supplied parameter as the record separator\n(<code>$/</code> by default), passing each substring …\n",null,0],["each_line","StringIO","Ruby/classes/StringIO.html#method-i-each_line","(*args)","<p>See IO#each.\n",null,0],["each_line","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-each_line","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["each_mail","Net::POP3","Ruby/classes/Net/POP3.html#method-i-each_mail","()","<p>Yields each message to the passed-in block in turn. Equivalent to:\n\n<pre><code>pop3.mails.each do |popmail|\n  .... ...\n</code></pre>\n",null,0],["each_method","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-each_method","()","<p>Iterator for methods\n",null,0],["each_name","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-each_name","()","<p>Iterates through the header names in the header, passing each header name\nto the code block.\n",null,0],["each_name","Resolv","Ruby/classes/Resolv.html#method-c-each_name","(address, &proc)","<p>Iterates over all hostnames for <code>address</code>.\n",null,0],["each_name","Resolv","Ruby/classes/Resolv.html#method-i-each_name","(address)","<p>Iterates over all hostnames for <code>address</code>.\n",null,0],["each_name","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-each_name","(address)","<p>Iterates over all hostnames for <code>address</code> retrieved from the DNS\nresolver.\n<p><code>address</code> must be a Resolv::IPv4 …\n",null,0],["each_name","Resolv::Hosts","Ruby/classes/Resolv/Hosts.html#method-i-each_name","(address, &proc)","<p>Iterates over all hostnames for <code>address</code> retrieved from the\nhosts file.\n",null,0],["each_name_of","RDoc::Markup::Attributes","Ruby/classes/RDoc/Markup/Attributes.html#method-i-each_name_of","(bitmap)","<p>yields each attribute name in <code>bitmap</code>\n",null,0],["each_object","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-each_object","(p1 = v1)","<p>Calls the block once for each living, nonimmediate object in this Ruby\nprocess. If <em>module</em> is specified, …\n",null,0],["each_option","GetoptLong","Ruby/classes/GetoptLong.html#method-i-each_option","()","<p>`each_option&#39; is an alias of `each&#39;.\n",null,0],["each_option","OptionParser::List","Ruby/classes/OptionParser/List.html#method-i-each_option","(&block)","<p>Iterates over each option, passing the option to the <code>block</code>.\n",null,0],["each_pair","DBM","Ruby/classes/DBM.html#method-i-each_pair","()","<p>Calls the block once for each [key, value] pair in the database. Returns\nself.\n",null,0],["each_pair","ENV","Ruby/classes/ENV.html#method-c-each_pair","()","<p>Yields each environment variable <code>name</code> and <code>value</code>.\n<p>If no block is given an Enumerator is returned.\n",null,0],["each_pair","GDBM","Ruby/classes/GDBM.html#method-i-each_pair","()","<p>Executes <em>block</em> for each key in the database, passing the\n<em>key</em> and the correspoding <em>value</em> as a parameter. …\n",null,0],["each_pair","Hash","Ruby/classes/Hash.html#method-i-each_pair","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the\nkey-value pair as parameters.\n<p>If no block is given, …\n",null,0],["each_pair","OpenStruct","Ruby/classes/OpenStruct.html#method-i-each_pair","()","<p>Yields all attributes (as a symbol) along with the corresponding values or\nreturns an enumerator if not …\n",null,0],["each_pair","SDBM","Ruby/classes/SDBM.html#method-i-each_pair","()","<p>Iterates over each key-value pair in the database.\n<p>If no block is given, returns an Enumerator.\n",null,0],["each_pair","Struct","Ruby/classes/Struct.html#method-i-each_pair","()","<p>Calls <em>block</em> once for each instance variable, passing the name (as\na symbol) and the value as parameters. …\n",null,0],["each_pair","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-each_pair","()","<p>Calls the given block once for each <code>key</code>, <code>value</code>\npair in the database.\n<p>Returns <code>self</code>.\n",null,0],["each_parent","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-each_parent","()","<p>Yields each parent of this CodeObject.  See also\nRDoc::ClassModule#each_ancestor\n",null,0],["each_prime","Integer","Ruby/classes/Integer.html#method-c-each_prime","(ubound)","<p>Iterates the given block over all prime numbers.\n<p>See <code>Prime</code>#each for more details.\n",null,0],["each_prime","Integer","Ruby/classes/Integer.html#method-c-each_prime","(ubound)","<p>Iterates the given block over all prime numbers.\n<p>See <code>Prime</code>#each for more details.\n",null,0],["each_recursive","REXML::Node","Ruby/classes/REXML/Node.html#method-i-each_recursive","()","<p>Visit all subnodes of <code>self</code> recursively\n",null,0],["each_resource","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-each_resource","(name, typeclass, &proc)","<p>Iterates over all <code>typeclass</code> DNS resources for\n<code>name</code>.  See #getresource for argument details.\n",null,0],["each_section","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-each_section","()","<p>Iterator for each section&#39;s contents sorted by title.  The\n<code>section</code>, the section&#39;s <code>constants</code> and …\n",null,0],["each_slice","Enumerable","Ruby/classes/Enumerable.html#method-i-each_slice","(p1)","<p>Iterates the given block for each slice of &lt;n&gt; elements.  If no block\nis given, returns an enumerator. …\n",null,0],["each_source","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-each_source","(&b)","",null,0],["each_strongly_connected_component","TSort","Ruby/classes/TSort.html#method-i-each_strongly_connected_component","()","<p>The iterator version of the #strongly_connected_components method.\n<code><em>obj</em>.each_strongly_connected_component</code> …\n",null,0],["each_strongly_connected_component_from","TSort","Ruby/classes/TSort.html#method-i-each_strongly_connected_component_from","(node, id_map={}, stack=[])","<p>Iterates over strongly connected component in the subgraph reachable from\n<em>node</em>.\n<p>Return value is unspecified. …\n",null,0],["each_value","DBM","Ruby/classes/DBM.html#method-i-each_value","()","<p>Calls the block once for each value string in the database. Returns self.\n",null,0],["each_value","ENV","Ruby/classes/ENV.html#method-c-each_value","()","<p>Yields each environment variable <code>value</code>.\n<p>An Enumerator is returned if no block was given.\n",null,0],["each_value","GDBM","Ruby/classes/GDBM.html#method-i-each_value","()","<p>Executes <em>block</em> for each key in the database, passing the\ncorresponding <em>value</em> as a parameter.\n",null,0],["each_value","Hash","Ruby/classes/Hash.html#method-i-each_value","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the value\nas a parameter.\n<p>If no block is given, an enumerator …\n",null,0],["each_value","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-each_value","()","<p>Iterates through header values, passing each value to the code block.\n",null,0],["each_value","SDBM","Ruby/classes/SDBM.html#method-i-each_value","()","<p>Iterates over each <code>value</code> in the database.\n<p>If no block is given, returns an Enumerator.\n",null,0],["each_value","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-each_value","()","<p>Enumerate values.\n",null,0],["each_value","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-each_value","()","<p>Calls the given block for each value in database.\n<p>Returns <code>self</code>.\n",null,0],["each_with_index","Enumerable","Ruby/classes/Enumerable.html#method-i-each_with_index","(*args)","<p>Calls <em>block</em> with two arguments, the item and its index, for each\nitem in <em>enum</em>.  Given arguments are passed …\n",null,0],["each_with_index","Enumerator","Ruby/classes/Enumerator.html#method-i-each_with_index","()","<p>Same as Enumerator#with_index(0), i.e. there is no starting offset.\n<p>If no block is given, a new Enumerator …\n",null,0],["each_with_index","Matrix","Ruby/classes/Matrix.html#method-i-each_with_index","(which = :all)","<p>Same as #each, but the row index and column index in addition to the\nelement\n\n<pre><code>Matrix[ [1,2], [3,4] ].each_with_index ...</code></pre>\n",null,0],["each_with_object","Enumerable","Ruby/classes/Enumerable.html#method-i-each_with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object given,\nand returns the initially given …\n",null,0],["each_with_object","Enumerator","Ruby/classes/Enumerator.html#method-i-each_with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object,\n<code>obj</code>, and returns <code>obj</code>\n<p>If no block is …\n",null,0],["eager_autoload","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-eager_autoload","()","",null,1],["eager_load","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-eager_load","(*args)","<p>Forces eager loading by performing a LEFT OUTER JOIN on <code>args</code>:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">eager_load</span>(:<span class=\"ruby-identifier\">posts</span>)\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">SELECT</span> <span class=\"ruby-string\">&quot;users&quot;</span>.<span class=\"ruby-string\">&quot;id&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["eager_load","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-eager_load","()","",null,1],["eager_load!","ActionController","Rails/classes/ActionController.html#method-c-eager_load-21","()","",null,1],["eager_load!","ActionView","Rails/classes/ActionView.html#method-c-eager_load-21","()","",null,1],["eager_load!","ActiveModel","Rails/classes/ActiveModel.html#method-i-eager_load-21","()","",null,1],["eager_load!","ActiveRecord","Rails/classes/ActiveRecord.html#method-c-eager_load-21","()","",null,1],["eager_load!","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-eager_load-21","()","",null,1],["eager_load!","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-eager_load-21","()","<p>Eager load the application by loading all ruby files inside eager_load\npaths.\n",null,1],["eager_load_namespaces","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-eager_load_namespaces","()","<p>All namespaces that are eager loaded\n",null,1],["eager_load_paths","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-eager_load_paths","()","",null,1],["eager_loading?","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-eager_loading-3F","()","<p>Returns true if relation needs eager loading.\n",null,1],["echo","Curses","Ruby/classes/Curses.html#method-c-echo","()","<p>Enables characters typed by the user to be echoed by Curses.getch as they\nare typed.\n",null,0],["echo","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-echo","(*strings)","<p>Returns a Echo object, for the given <code>strings</code>\n",null,0],["echo=","IO","Ruby/classes/IO.html#method-i-echo-3D","(p1)","<p>Enables/disables echo back. On some platforms, all combinations of this\nflags and raw/cooked mode may …\n",null,0],["echo?","IO","Ruby/classes/IO.html#method-i-echo-3F","()","<p>Returns <code>true</code> if echo back is enabled.\n<p>You must require &#39;io/console&#39; to use this method.\n",null,0],["egid","Process","Ruby/classes/Process.html#method-c-egid","()","<p>Returns the effective group ID for this process. Not available on all\nplatforms.\n\n<pre><code>Process.egid   #=&gt; 500\n</code></pre>\n",null,0],["egid=","Process","Ruby/classes/Process.html#method-c-egid-3D","(p1)","<p>Sets the effective group ID for this process. Not available on all\nplatforms.\n",null,0],["ehlo","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-ehlo","(domain)","",null,0],["eid","Process::GID","Ruby/classes/Process/GID.html#method-c-eid","()","<p>Returns the effective group ID for this process. Not available on all\nplatforms.\n\n<pre><code>Process.egid   #=&gt; 500\n</code></pre>\n",null,0],["eid","Process::UID","Ruby/classes/Process/UID.html#method-c-eid","()","<p>Returns the effective user ID for this process.\n\n<pre><code>Process.euid   #=&gt; 501\n</code></pre>\n",null,0],["eigen","Matrix","Ruby/classes/Matrix.html#method-i-eigen","()","",null,0],["eigensystem","Matrix","Ruby/classes/Matrix.html#method-i-eigensystem","()","<p>Returns the Eigensystem of the matrix; see\n<code>EigenvalueDecomposition</code>.\n\n<pre><code>m = Matrix[[1, 2], [3, 4]]\nv, d, v_inv ...</code></pre>\n",null,0],["eigenvalue_matrix","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-i-eigenvalue_matrix","()","<p>Returns the block diagonal eigenvalue matrix <code>D</code>\n",null,0],["eigenvalues","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-i-eigenvalues","()","<p>Returns the eigenvalues in an array\n",null,0],["eigenvector_matrix","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-i-eigenvector_matrix","()","<p>Returns the eigenvector matrix <code>V</code>\n",null,0],["eigenvector_matrix_inv","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-i-eigenvector_matrix_inv","()","<p>Returns the inverse of the eigenvector matrix <code>V</code>\n",null,0],["eigenvectors","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-i-eigenvectors","()","<p>Returns an array of the eigenvectors\n",null,0],["ele","XMLRPC::XMLWriter::Abstract","Ruby/classes/XMLRPC/XMLWriter/Abstract.html#method-i-ele","(name, *children)","",null,0],["element","Matrix","Ruby/classes/Matrix.html#method-i-element","(i, j)","",null,0],["element","Vector","Ruby/classes/Vector.html#method-i-element","(i)","",null,0],["element","XMLRPC::XMLWriter::Simple","Ruby/classes/XMLRPC/XMLWriter/Simple.html#method-i-element","(name, attrs, *children)","",null,0],["element","XMLRPC::XMLWriter::XMLParser","Ruby/classes/XMLRPC/XMLWriter/XMLParser.html#method-i-element","(name, attrs, *children)","",null,0],["element=","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-element-3D","( element )","<p>Sets the element of which this object is an attribute.  Normally, this is\nnot directly called.\n<p>Returns …\n",null,0],["element_initialize_arguments?","RSS::Utils","Ruby/classes/RSS/Utils.html#method-i-element_initialize_arguments-3F","(args)","",null,0],["elementdecl","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-elementdecl","(content)","<p>&lt;!ELEMENT …&gt;\n",null,0],["elementdecl","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-elementdecl","(content)","<p>&lt;!ELEMENT …&gt;\n",null,0],["elementdecl?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-elementdecl-3F","()","<p>Content: [ String text ]\n",null,0],["elements","Vector","Ruby/classes/Vector.html#method-c-elements","(array, copy = true)","<p>Creates a vector from an Array.  The optional second argument specifies\nwhether the array itself or a …\n",null,0],["elements_to_f","Matrix","Ruby/classes/Matrix.html#method-i-elements_to_f","()","",null,0],["elements_to_f","Vector","Ruby/classes/Vector.html#method-i-elements_to_f","()","",null,0],["elements_to_i","Matrix","Ruby/classes/Matrix.html#method-i-elements_to_i","()","",null,0],["elements_to_i","Vector","Ruby/classes/Vector.html#method-i-elements_to_i","()","",null,0],["elements_to_r","Matrix","Ruby/classes/Matrix.html#method-i-elements_to_r","()","",null,0],["elements_to_r","Vector","Ruby/classes/Vector.html#method-i-elements_to_r","()","",null,0],["emacs_editing_mode","Readline","Ruby/classes/Readline.html#method-c-emacs_editing_mode","()","<p>Specifies Emacs editing mode. The default is this mode. See the manual of\nGNU Readline for details of …\n",null,0],["emacs_editing_mode?","Readline","Ruby/classes/Readline.html#method-c-emacs_editing_mode-3F","()","<p>Returns true if emacs mode is active. Returns false if not.\n<p>Raises NotImplementedError if the using readline …\n",null,0],["email_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-email_field","(object_name, method, options = {})","<p>Returns a text_field of type “email”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">email_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;address&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_address&quot; ...</span>\n</pre>\n",null,1],["email_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-email_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “email”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,1],["email_to_name","Gem::Security","Ruby/classes/Gem/Security.html#method-c-email_to_name","(email_address)","<p>Turns <code>email_address</code> into an OpenSSL::X509::Name\n",null,0],["emitted_hidden_id?","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-emitted_hidden_id-3F","()","",null,1],["emphasis","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-emphasis","(text)","<p>Wraps <code>text</code> in emphasis for rdoc inline formatting\n",null,0],["empty","Matrix","Ruby/classes/Matrix.html#method-c-empty","(row_count = 0, column_count = 0)","<p>Creates a empty matrix of <code>row_count</code> x\n<code>column_count</code>. At least one of <code>row_count</code> or\n<code>column_count</code> must be …\n",null,0],["empty","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-empty","()","<p>Called when an empty event happens. (Which, as far as I can tell, is\nnever).\n",null,0],["empty?","Array","Ruby/classes/Array.html#method-i-empty-3F","()","<p>Returns <code>true</code> if <code>self</code> contains no elements.\n\n<pre><code>[].empty?   #=&gt; true\n</code></pre>\n",null,0],["empty?","DBM","Ruby/classes/DBM.html#method-i-empty-3F","()","<p>Returns true if the database is empty, false otherwise.\n",null,0],["empty?","ENV","Ruby/classes/ENV.html#method-c-empty-3F","()","<p>Returns true when there are no environment variables\n",null,0],["empty?","GDBM","Ruby/classes/GDBM.html#method-i-empty-3F","()","<p>Returns true if the database is empty.\n",null,0],["empty?","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-empty-3F","()","",null,0],["empty?","Gem::Package::TarHeader","Ruby/classes/Gem/Package/TarHeader.html#method-i-empty-3F","()","<p>Is the tar entry empty?\n",null,0],["empty?","Hash","Ruby/classes/Hash.html#method-i-empty-3F","()","<p>Returns <code>true</code> if <em>hsh</em> contains no key-value pairs.\n\n<pre><code>{}.empty?   #=&gt; true\n</code></pre>\n",null,0],["empty?","Matrix","Ruby/classes/Matrix.html#method-i-empty-3F","()","<p>Returns <code>true</code> if this is an empty matrix, i.e. if the number of\nrows or the number of columns is 0.\n",null,0],["empty?","Queue","Ruby/classes/Queue.html#method-i-empty-3F","()","<p>Returns <code>true</code> if the queue is empty.\n",null,0],["empty?","RDoc::Comment","Ruby/classes/RDoc/Comment.html#method-i-empty-3F","()","<p>A comment is empty if its text String is empty.\n",null,0],["empty?","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-i-empty-3F","()","<p>Does this document have no parts?\n",null,0],["empty?","RDoc::Markup::List","Ruby/classes/RDoc/Markup/List.html#method-i-empty-3F","()","<p>Is the list empty?\n",null,0],["empty?","RDoc::Markup::ListItem","Ruby/classes/RDoc/Markup/ListItem.html#method-i-empty-3F","()","<p>Is the ListItem empty?\n",null,0],["empty?","REXML::IOSource","Ruby/classes/REXML/IOSource.html#method-i-empty-3F","()","",null,0],["empty?","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-empty-3F","()","<p>Returns true if there are no more events\n",null,0],["empty?","REXML::Source","Ruby/classes/REXML/Source.html#method-i-empty-3F","()","<p>@return true if the Source is exhausted\n",null,0],["empty?","REXML::Text","Ruby/classes/REXML/Text.html#method-i-empty-3F","()","",null,0],["empty?","SDBM","Ruby/classes/SDBM.html#method-i-empty-3F","()","<p>Returns <code>true</code> if the database is empty.\n",null,0],["empty?","Set","Ruby/classes/Set.html#method-i-empty-3F","()","<p>Returns true if the set contains no elements.\n",null,0],["empty?","String","Ruby/classes/String.html#method-i-empty-3F","()","<p>Returns <code>true</code> if <em>str</em> has a length of zero.\n\n<pre><code>&quot;hello&quot;.empty?   #=&gt; false\n&quot; &quot;.empty?       #=&gt; false\n&quot;&quot;.empty? ...\n</code></pre>\n",null,0],["empty?","StringScanner","Ruby/classes/StringScanner.html#method-i-empty-3F","()","<p>Equivalent to #eos?. This method is obsolete, use #eos? instead.\n",null,0],["empty?","Symbol","Ruby/classes/Symbol.html#method-i-empty-3F","()","<p>Returns that <em>sym</em> is :“” or not.\n",null,0],["empty?","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-empty-3F","()","<p>Returns <code>true</code> if there are no threads in the pool still\nrunning.\n",null,0],["empty?","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-empty-3F","()","<p>Returns <code>true</code> if there are no threads in the pool still\nrunning.\n",null,0],["empty?","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-empty-3F","()","",null,1],["empty?","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-empty-3F","()","<p>Returns <code>true</code> if no errors are found, <code>false</code>\notherwise. If the error message is a string it can be empty. …\n",null,1],["empty?","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-empty-3F","()","<p>Returns <code>true</code> if the collection is empty. If the collection has\nbeen loaded or the <code>:counter_sql</code> option …\n",null,1],["empty?","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-empty-3F","()","<p>Returns true if there are no records.\n",null,1],["empty?","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-i-empty-3F","()","<p>Returns true if there are no records.\n",null,1],["empty?","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-empty-3F","()","",null,1],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-empty_insert_statement_value","()","",null,1],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-empty_insert_statement_value","()","",null,1],["emulate_booleans","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-c-emulate_booleans","","<p>By default, the MysqlAdapter will consider all columns of type\n<code>tinyint(1)</code> as boolean. If you wish to …\n",null,1],["enable","GC","Ruby/classes/GC.html#method-c-enable","()","<p>Enables garbage collection, returning <code>true</code> if garbage\ncollection was previously disabled.\n\n<pre><code>GC.disable  ...</code></pre>\n",null,0],["enable","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-enable","()","<p>Starts the GC profiler.\n",null,0],["enable","TracePoint","Ruby/classes/TracePoint.html#method-i-enable","()","<p>Activates the trace\n<p>Return true if trace was enabled. Return false if trace was disabled.\n\n<pre><code>trace.enabled? ...</code></pre>\n",null,0],["enable_close","DL::Handle","Ruby/classes/DL/Handle.html#method-i-enable_close","()","<p>Enable a call to dlclose() when this DL::Handle is garbage collected.\n",null,0],["enable_close","Fiddle::Handle","Ruby/classes/Fiddle/Handle.html#method-i-enable_close","()","<p>Enable a call to dlclose() when this handle is garbage collected.\n",null,0],["enable_config","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-enable_config","(config, default=nil)","<p>Tests for the presence of an <code>--enable-</code><em>config</em> or\n<code>--disable-</code><em>config</em> option. Returns <code>true</code> if\nthe enable option …\n",null,0],["enable_extension","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-enable_extension","(name)","<p>This is meant to be implemented by the adapters that support extensions\n",null,1],["enable_extension","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-enable_extension","(name)","",null,1],["enable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-enable_query_cache-21","()","",null,1],["enable_ssl","Net::POP3","Ruby/classes/Net/POP3.html#method-i-enable_ssl","(verify_or_params = {}, certs = nil, port = nil)","<p>Enables SSL for this instance.  Must be called before the connection is\nestablished to have any effect. …\n",null,0],["enable_ssl","Net::POP3","Ruby/classes/Net/POP3.html#method-c-enable_ssl","(*args)","<p>Enable SSL for all new instances. <code>params</code> is passed to\nOpenSSL::SSLContext#set_params.\n",null,0],["enable_ssl","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-enable_ssl","(context = SMTP.default_ssl_context)","",null,0],["enable_starttls","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-enable_starttls","(context = SMTP.default_ssl_context)","<p>Enables SMTP/TLS (STARTTLS) for this object. <code>context</code> is a\nOpenSSL::SSL::SSLContext object.\n",null,0],["enable_starttls_auto","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-enable_starttls_auto","(context = SMTP.default_ssl_context)","<p>Enables SMTP/TLS (STARTTLS) for this object if server accepts.\n<code>context</code> is a OpenSSL::SSL::SSLContext …\n",null,0],["enable_tls","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-enable_tls","(context = SMTP.default_ssl_context)","<p>Enables SMTP/TLS (SMTPS: SMTP over direct TLS connection) for this object. \nMust be called before the …\n",null,0],["enable_warnings","Kernel","Rails/classes/Kernel.html#method-i-enable_warnings","()","<p>Sets $VERBOSE to <code>true</code> for the duration of the block and back\nto its original value afterwards.\n",null,1],["enabled?","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-enabled-3F","()","<p>The current status of GC profile mode.\n",null,0],["enabled?","TracePoint","Ruby/classes/TracePoint.html#method-i-enabled-3F","()","<p>The current status of the trace\n",null,0],["enc_key","OpenSSL::PKCS7::RecipientInfo","Ruby/classes/OpenSSL/PKCS7/RecipientInfo.html#method-i-enc_key","()","",null,0],["enclose","ThreadGroup","Ruby/classes/ThreadGroup.html#method-i-enclose","()","<p>Prevents threads from being added to or removed from the receiving\n<code>ThreadGroup</code>. New threads can still …\n",null,0],["enclosed?","ThreadGroup","Ruby/classes/ThreadGroup.html#method-i-enclosed-3F","()","<p>Returns <code>true</code> if <em>thgrp</em> is enclosed. See also\nThreadGroup#enclose.\n",null,0],["encode","REXML::Encoding","Ruby/classes/REXML/Encoding.html#method-i-encode","(string)","",null,0],["encode","String","Ruby/classes/String.html#method-i-encode","(*args)","<p>The first form returns a copy of <code>str</code> transcoded to encoding\n<code>encoding</code>. The second form returns a copy …\n",null,0],["encode","URI::Escape","Ruby/classes/URI/Escape.html#method-i-encode","(*arg)","",null,0],["encode","XMLRPC::Base64","Ruby/classes/XMLRPC/Base64.html#method-c-encode","(str)","<p>Encodes string <code>str</code> with base64 and returns that value.\n",null,0],["encode","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-encode","(value, options = nil)","<p>Dumps objects in JSON (JavaScript Object Notation). See www.json.org for\nmore info.\n\n<pre>ActiveSupport::JSON.encode({ ...</pre>\n",null,1],["encode","ActiveSupport::JSON::Encoding::Encoder","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-encode","(value, use_options = true)","",null,1],["encode!","String","Ruby/classes/String.html#method-i-encode-21","(*args)","<p>The first form transcodes the contents of <em>str</em> from str.encoding to\n<code>encoding</code>. The second form transcodes …\n",null,0],["encode!","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-encode-21","()","<p>This method is responsible for properly setting the encoding of the source.\nUntil this point, we assume …\n",null,1],["encode64","Base64","Ruby/classes/Base64.html#method-i-encode64","(bin)","<p>Returns the Base64-encoded version of <code>bin</code>. This method\ncomplies with RFC 2045. Line feeds are added to …\n",null,0],["encode_credentials","ActionController::HttpAuthentication::Basic","Rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-encode_credentials","(user_name, password)","",null,1],["encode_credentials","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-encode_credentials","(http_method, credentials, password, password_is_ha1)","",null,1],["encode_credentials","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-encode_credentials","(token, options = {})","<p>Encodes the given token and options into an Authorization header value.\n<p>token   - String token. options …\n",null,1],["encode_fallback","RDoc::Text","Ruby/classes/RDoc/Text.html#method-c-encode_fallback","(character, encoding, fallback)","<p>Transcodes <code>character</code> to <code>encoding</code> with a\n<code>fallback</code> character.\n",null,0],["encode_json","ActiveSupport::JSON::Variable","Rails/classes/ActiveSupport/JSON/Variable.html#method-i-encode_json","(encoder)","",null,1],["encode_utf7","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-encode_utf7","(s)","<p>Encode a string from UTF-8 format to modified UTF-7.\n",null,0],["encode_with","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-encode_with","(coder)","",null,0],["encode_with","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-encode_with","(coder)","",null,0],["encode_with","Gem::Version","Ruby/classes/Gem/Version.html#method-i-encode_with","(coder)","",null,0],["encode_with","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-encode_with","(coder)","<p>Populate <code>coder</code> with attributes about this record that should\nbe serialized. The structure of <code>coder</code> defined …\n",null,1],["encode_with","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-encode_with","(coder)","",null,1],["encode_with","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-encode_with","(coder)","",null,1],["encode_with","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-encode_with","(coder)","",null,1],["encode_with","BigDecimal","Rails/classes/BigDecimal.html#method-i-encode_with","(coder)","",null,1],["encode_www_form","URI","Ruby/classes/URI.html#method-c-encode_www_form","(enum)","<p>Generate URL-encoded form data from given <code>enum</code>.\n<p>This generates application/x-www-form-urlencoded data …\n",null,0],["encode_www_form_component","URI","Ruby/classes/URI.html#method-c-encode_www_form_component","(str)","<p>Encode given <code>str</code> to URL-encoded form data.\n<p>This method doesn&#39;t convert *, -, ., 0-9, A-Z, _, a-z, …\n",null,0],["encoded","XMLRPC::Base64","Ruby/classes/XMLRPC/Base64.html#method-i-encoded","()","<p>Returns the base64 encoded internal string.\n",null,0],["encoding","IRB::FileInputMethod","Ruby/classes/IRB/FileInputMethod.html#method-i-encoding","()","<p>The external encoding for standard input.\n",null,0],["encoding","IRB::ReadlineInputMethod","Ruby/classes/IRB/ReadlineInputMethod.html#method-i-encoding","()","<p>The external encoding for standard input.\n",null,0],["encoding","IRB::StdioInputMethod","Ruby/classes/IRB/StdioInputMethod.html#method-i-encoding","()","<p>The external encoding for standard input.\n",null,0],["encoding","REXML::Document","Ruby/classes/REXML/Document.html#method-i-encoding","()","<p>@return the XMLDecl encoding of this document as an Encoding object. If no\nXMLDecl has been set, returns …\n",null,0],["encoding","Regexp","Ruby/classes/Regexp.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of obj.\n",null,0],["encoding","String","Ruby/classes/String.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of obj.\n",null,0],["encoding","Symbol","Ruby/classes/Symbol.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of <em>sym</em>.\n",null,0],["encoding","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-encoding","()","<p>Returns the current database encoding format.\n",null,1],["encoding","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-encoding","()","<p>Returns the current database encoding format as a string, eg:\n&#39;UTF-8&#39;\n",null,1],["encoding=","REXML::Encoding","Ruby/classes/REXML/Encoding.html#method-i-encoding-3D","(encoding)","",null,0],["encoding=","REXML::Source","Ruby/classes/REXML/Source.html#method-i-encoding-3D","(enc)","<p>Inherited from Encoding Overridden to support optimized en/decoding\n",null,0],["encoding=","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-i-encoding-3D","( enc )","",null,0],["encoding=","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-encoding-3D","(value)","",null,1],["encoding_aware?","String","Rails/classes/String.html#method-i-encoding_aware-3F","()","",null,1],["encrypt","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-encrypt","(*args)","<p>Initializes the Cipher for encryption.\n<p>Make sure to call Cipher#encrypt or Cipher#decrypt before using …\n",null,0],["encrypt","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-c-encrypt","(p1, p2, p3 = v3, p4 = v4)","",null,0],["encrypt_and_sign","ActiveSupport::MessageEncryptor","Rails/classes/ActiveSupport/MessageEncryptor.html#method-i-encrypt_and_sign","(value)","<p>Encrypt and sign a message. We need to sign the message in order to avoid\npadding attacks. Reference: …\n",null,1],["encrypted","ActionDispatch::Cookies::ChainedCookieJars","Rails/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-encrypted","()","<p>Returns a jar that&#39;ll automatically encrypt cookie values before\nsending them to the client and will …\n",null,1],["end","MatchData","Ruby/classes/MatchData.html#method-i-end","(p1)","<p>Returns the offset of the character immediately following the end of the\n<em>n</em>th element of the match array …\n",null,0],["end","Range","Ruby/classes/Range.html#method-i-end","()","<p>Returns the object that defines the end of the range.\n\n<pre><code>(1..10).end    #=&gt; 10\n(1...10).end   #=&gt; 10\n</code></pre>\n",null,0],["end","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-end","()","<p>Closes the stream. All operations on the closed stream will raise an\nexception.\n",null,0],["endElement","RSS::REXMLLikeXMLParser","Ruby/classes/RSS/REXMLLikeXMLParser.html#method-i-endElement","(name)","",null,0],["endElement","XMLRPC::XMLParser::StreamParserMixin","Ruby/classes/XMLRPC/XMLParser/StreamParserMixin.html#method-i-endElement","(name)","",null,0],["end_accepting","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-end_accepting","()","<p>Returns the generated output\n",null,0],["end_accepting","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-end_accepting","()","<p>Returns the generated output\n",null,0],["end_accepting","RDoc::Markup::ToTableOfContents","Ruby/classes/RDoc/Markup/ToTableOfContents.html#method-i-end_accepting","()","<p>Returns the table of contents\n",null,0],["end_accepting","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-end_accepting","()","<p>Returns an Array of items that were wrapped in plus, tt or code.\n",null,0],["end_document","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-end_document","(implicit)","<p>Called with the document ends.  <code>implicit</code> is a boolean value\nindicating whether or not the document has …\n",null,0],["end_document","Psych::TreeBuilder","Ruby/classes/Psych/TreeBuilder.html#method-i-end_document","(implicit_end = !streaming?)","<p>Handles end_document events with <code>version</code>,\n<code>tag_directives</code>, and <code>implicit</code> styling.\n<p>See Psych::Handler#start_document …\n",null,0],["end_document","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-end_document","()","",null,0],["end_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-end_document","()","",null,1],["end_element","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-end_element","(uri, localname, qname)","",null,0],["end_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-end_element","(name)","",null,1],["end_element?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-end_element-3F","()","<p>Content: [ String tag_name ]\n",null,0],["end_mapping","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-end_mapping","()","<p>Called when a map ends\n",null,0],["end_of_day","Date","Rails/classes/Date.html#method-i-end_of_day","()","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the end of the day (23:59:59) …\n",null,1],["end_of_day","DateTime","Rails/classes/DateTime.html#method-i-end_of_day","()","<p>Returns a new DateTime representing the end of the day (23:59:59).\n",null,1],["end_of_day","Time","Rails/classes/Time.html#method-i-end_of_day","()","<p>Returns a new Time representing the end of the day, 23:59:59.999999\n(.999999999 in ruby1.9)\n",null,1],["end_of_hour","DateTime","Rails/classes/DateTime.html#method-i-end_of_hour","()","<p>Returns a new DateTime representing the end of the hour (hh:59:59).\n",null,1],["end_of_hour","Time","Rails/classes/Time.html#method-i-end_of_hour","()","<p>Returns a new Time representing the end of the hour, x:59:59.999999\n(.999999999 in ruby1.9)\n",null,1],["end_of_minute","DateTime","Rails/classes/DateTime.html#method-i-end_of_minute","()","<p>Returns a new DateTime representing the end of the minute (hh:mm:59).\n",null,1],["end_of_minute","Time","Rails/classes/Time.html#method-i-end_of_minute","()","<p>Returns a new Time representing the end of the minute, x:xx:59.999999\n(.999999999 in ruby1.9)\n",null,1],["end_of_month","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-end_of_month","()","<p>Returns a new date/time representing the end of the month. DateTime objects\nwill have a time set to 23:59:59. …\n",null,1],["end_of_quarter","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-end_of_quarter","()","<p>Returns a new date/time at the end of the quarter. Example: 31st March,\n30th June, 30th September. DateTime …\n",null,1],["end_of_week","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-end_of_week","(start_day = Date.beginning_of_week)","<p>Returns a new date/time representing the end of this week on the given day.\nWeek is assumed to start …\n",null,1],["end_of_year","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-end_of_year","()","<p>Returns a new date/time representing the end of the year. DateTime objects\nwill have a time set to 23:59:59. …\n",null,1],["end_prefix_mapping","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-end_prefix_mapping","(prefix)","",null,0],["end_sequence","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-end_sequence","()","<p>Called when a sequence ends.\n",null,0],["end_stream","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-end_stream","()","<p>Called when the YAML stream ends\n",null,0],["end_stream","Psych::TreeBuilder","Ruby/classes/Psych/TreeBuilder.html#method-i-end_stream","()","",null,0],["end_with?","String","Ruby/classes/String.html#method-i-end_with-3F","(*args)","<p>Returns true if <code>str</code> ends with one of the <code>suffixes</code>\ngiven.\n",null,0],["ended?","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-ended-3F","()","<p>Returns true if the stream is closed.\n",null,0],["endgrent","Etc","Ruby/classes/Etc.html#method-c-endgrent","()","<p>Ends the process of scanning through the /etc/group file begun by\n::getgrent, and closes the file.\n",null,0],["endpoint","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-endpoint","()","",null,1],["endpoint","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-endpoint","(endpoint = nil)","",null,1],["endpwent","Etc","Ruby/classes/Etc.html#method-c-endpwent","()","<p>Ends the process of scanning through the /etc/passwd file begun with\n::getpwent, and closes the file. …\n",null,0],["engine","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-engine","()","",null,1],["engine=","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-engine-3D","(name)","",null,1],["engine?","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-engine-3F","()","",null,1],["engines","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-c-engines","()","",null,0],["engines","Rails::Engine::Railties","Rails/classes/Rails/Engine/Railties.html#method-c-engines","()","",null,1],["england","Date","Ruby/classes/Date.html#method-i-england","()","<p>This method is equivalent to new_start(Date::ENGLAND).\n",null,0],["enhance","Rake::Task","Ruby/classes/Rake/Task.html#method-i-enhance","(deps=nil, &block)","<p>Enhance a task with prerequisites or actions.  Returns self.\n",null,0],["enhance_with_matching_rule","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-enhance_with_matching_rule","(task_name, level=0)","<p>If a rule can be found that matches the task name, enhance the task with\nthe prerequisites and actions …\n",null,0],["enlist_fixture_connections","ActiveRecord::TestFixtures","Rails/classes/ActiveRecord/TestFixtures.html#method-i-enlist_fixture_connections","()","",null,1],["enq","PrettyPrint::GroupQueue","Ruby/classes/PrettyPrint/GroupQueue.html#method-i-enq","(group)","",null,0],["enq","Queue","Ruby/classes/Queue.html#method-i-enq","(obj)","<p>Alias of push\n",null,0],["enq","SizedQueue","Ruby/classes/SizedQueue.html#method-i-enq","(obj)","<p>Alias of push\n",null,0],["ensure_dependencies_met","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-ensure_dependencies_met","()","<p>DOC: Missing docs or :nodoc:.\n",null,0],["ensure_dependency","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-ensure_dependency","(spec, dependency)","<p>Ensure that the dependency is satisfied by the current installation of gem.\nIf it is not an exception …\n",null,0],["ensure_gem_subdirectories","Gem","Ruby/classes/Gem.html#method-c-ensure_gem_subdirectories","(dir = Gem.dir, mode = nil)","<p>Quietly ensure the Gem directory <code>dir</code> contains all the proper\nsubdirectories.  If we can&#39;t create …\n",null,0],["ensure_loadable_spec","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-ensure_loadable_spec","()","<p>Ensures the Gem::Specification written out for this gem is loadable upon\ninstallation.\n",null,0],["ensure_required_ruby_version_met","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-ensure_required_ruby_version_met","()","<p>DOC: Missing docs or :nodoc:.\n",null,0],["ensure_required_rubygems_version_met","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-ensure_required_rubygems_version_met","()","<p>DOC: Missing docs or :nodoc:.\n",null,0],["ensure_xml_content","RSS::Maker::AtomTextConstructBase::EnsureXMLContent","Ruby/classes/RSS/Maker/AtomTextConstructBase/EnsureXMLContent.html#method-i-ensure_xml_content","(content)","",null,0],["entity","Net::HTTPResponse","Ruby/classes/Net/HTTPResponse.html#method-i-entity","()","",null,0],["entity","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-entity","( name )","",null,0],["entity","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-entity","( reference, entities )","",null,0],["entity","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-entity","(content)","<p>Called when %foo; is encountered in a doctype declaration. @p content “foo”\n",null,0],["entity?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-entity-3F","()","<p>Content: [ String text ]\n",null,0],["entity_class","DL::CStruct","Ruby/classes/DL/CStruct.html#method-c-entity_class","()","<p>accessor to DL::CStructEntity\n",null,0],["entity_class","DL::CUnion","Ruby/classes/DL/CUnion.html#method-c-entity_class","()","<p>accessor to DL::CUnionEntity\n",null,0],["entity_class","Fiddle::CStruct","Ruby/classes/Fiddle/CStruct.html#method-c-entity_class","()","<p>accessor to Fiddle::CStructEntity\n",null,0],["entity_class","Fiddle::CUnion","Ruby/classes/Fiddle/CUnion.html#method-c-entity_class","()","<p>accessor to Fiddle::CUnionEntity\n",null,0],["entity_expansion_limit","REXML::Document","Ruby/classes/REXML/Document.html#method-c-entity_expansion_limit","()","<p>Get the entity expansion limit. By default the limit is set to 10000.\n",null,0],["entity_expansion_limit=","REXML::Document","Ruby/classes/REXML/Document.html#method-c-entity_expansion_limit-3D","( val )","<p>Set the entity expansion limit. By default the limit is set to 10000.\n",null,0],["entity_expansion_text_limit","REXML","Ruby/classes/REXML.html#method-c-entity_expansion_text_limit","()","<p>Get the entity expansion limit. By default the limit is set to 10240.\n",null,0],["entity_expansion_text_limit","REXML::Document","Ruby/classes/REXML/Document.html#method-c-entity_expansion_text_limit","()","<p>Get the entity expansion limit. By default the limit is set to 10240.\n<p>Deprecated. Use REXML.entity_expansion_text_limit …\n",null,0],["entity_expansion_text_limit=","REXML","Ruby/classes/REXML.html#method-c-entity_expansion_text_limit-3D","( val )","<p>Set the entity expansion limit. By default the limit is set to 10240.\n",null,0],["entity_expansion_text_limit=","REXML::Document","Ruby/classes/REXML/Document.html#method-c-entity_expansion_text_limit-3D","( val )","<p>Set the entity expansion limit. By default the limit is set to 10240.\n<p>Deprecated. Use REXML.entity_expansion_text_limit= …\n",null,0],["entitydecl","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-entitydecl","(name, decl)","<p>&lt;!ENTITY …&gt; The argument passed to this method is an array of the\nentity declaration.  It can …\n",null,0],["entitydecl","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-entitydecl","(content)","<p>&lt;!ENTITY …&gt; The argument passed to this method is an array of the\nentity declaration.  It can …\n",null,0],["entitydecl?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-entitydecl-3F","()","<p>Due to the wonders of DTDs, an entity declaration can be just about\nanything.  There&#39;s no way to …\n",null,0],["entries","Dir","Ruby/classes/Dir.html#method-c-entries","(*args)","<p>Returns an array containing all of the filenames in the given directory.\nWill raise a <code>SystemCallError</code> …\n",null,0],["entries","Enumerable","Ruby/classes/Enumerable.html#method-i-entries","(*args)","<p>Returns an array containing the items in <em>enum</em>.\n\n<pre><code>(1..7).to_a                       #=&gt; [1, 2, 3, 4, 5, 6, ...\n</code></pre>\n",null,0],["entries","Pathname","Ruby/classes/Pathname.html#method-i-entries","()","<p>Return the entries (files and subdirectories) in the directory, each as a\nPathname object.\n<p>The results …\n",null,0],["enum_for","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-enum_for","(*args)","<p>Similar to Kernel#to_enum, except it returns a lazy enumerator. This makes\nit easy to define Enumerable …\n",null,0],["enum_for","Object","Ruby/classes/Object.html#method-i-enum_for","(*args)","<p>Creates a new Enumerator which will enumerate by calling\n<code>method</code> on <code>obj</code>, passing <code>args</code> if any.\n<p>If a block …\n",null,0],["enumerate","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-c-enumerate","(tag, options={})","<p>Prints all annotations with tag <code>tag</code> under the root directories\n<code>app</code>, <code>config</code>, <code>db</code>, <code>lib</code>,\nand <code>test</code> (recursively). …\n",null,1],["env","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-env","()","",null,1],["env","Rails","Rails/classes/Rails.html#method-c-env","()","",null,1],["env=","Rails","Rails/classes/Rails.html#method-c-env-3D","(environment)","",null,1],["env_config","Rails::Application","Rails/classes/Rails/Application.html#method-i-env_config","()","<p>Stores some of the Rails initial environment parameters which will be used\nby middlewares and engines …\n",null,1],["env_config","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-env_config","()","<p>Defines additional Rack env configuration that is added on each call.\n",null,1],["env_filter","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-env_filter","()","",null,1],["environment","OptionParser","Ruby/classes/OptionParser.html#method-i-environment","(env = File.basename($0, '.*'))","<p>Parses environment variable <code>env</code> or its uppercase with\nsplitting like a shell.\n<p><code>env</code> defaults to the basename …\n",null,0],["environment","Rails::Console","Rails/classes/Rails/Console.html#method-i-environment","()","",null,1],["environment","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-i-environment","()","",null,1],["environment","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-environment","(data=nil, options={}, &block)","<p>Adds a line inside the Application class for config/application.rb.\n<p>If options :env is specified, the …\n",null,1],["environment?","Rails::Console","Rails/classes/Rails/Console.html#method-i-environment-3F","()","",null,1],["eof","ARGF","Ruby/classes/ARGF.html#method-i-eof","()","<p>Returns true if the current file in <code>ARGF</code> is at end of file,\ni.e. it has no data to read. The stream must …\n",null,0],["eof","IO","Ruby/classes/IO.html#method-i-eof","()","<p>Returns true if <em>ios</em> is at end of file that means there are no more\ndata to read. The stream must be opened …\n",null,0],["eof","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-eof","()","",null,0],["eof","StringIO","Ruby/classes/StringIO.html#method-i-eof","()","<p>Returns true if <strong>strio</strong> is at end of file. The stringio must\nbe opened for reading or an <code>IOError</code> will be …\n",null,0],["eof","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-eof","()","<p>Returns <code>true</code> or <code>false</code> whether the stream has\nreached the end.\n",null,0],["eof?","ARGF","Ruby/classes/ARGF.html#method-i-eof-3F","()","<p>Returns true if the current file in <code>ARGF</code> is at end of file,\ni.e. it has no data to read. The stream must …\n",null,0],["eof?","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-eof-3F","()","<p>Are we at the end of the tar entry?\n",null,0],["eof?","IO","Ruby/classes/IO.html#method-i-eof-3F","()","<p>Returns true if <em>ios</em> is at end of file that means there are no more\ndata to read. The stream must be opened …\n",null,0],["eof?","IRB::FileInputMethod","Ruby/classes/IRB/FileInputMethod.html#method-i-eof-3F","()","<p>Whether the end of this input method has been reached, returns\n<code>true</code> if there is no more data to read. …\n",null,0],["eof?","IRB::ReadlineInputMethod","Ruby/classes/IRB/ReadlineInputMethod.html#method-i-eof-3F","()","<p>Whether the end of this input method has been reached, returns\n<code>true</code> if there is no more data to read. …\n",null,0],["eof?","IRB::StdioInputMethod","Ruby/classes/IRB/StdioInputMethod.html#method-i-eof-3F","()","<p>Whether the end of this input method has been reached, returns\n<code>true</code> if there is no more data to read. …\n",null,0],["eof?","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-eof-3F","()","<p>Returns true if the stream is at file which means there is no more data to\nbe read.\n",null,0],["eof?","StringIO","Ruby/classes/StringIO.html#method-i-eof-3F","()","<p>Returns true if <strong>strio</strong> is at end of file. The stringio must\nbe opened for reading or an <code>IOError</code> will be …\n",null,0],["eof?","XMP::StringInputMethod","Ruby/classes/XMP/StringInputMethod.html#method-i-eof-3F","()","<p>Whether there are any expressions left in this printer.\n",null,0],["eof?","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-eof-3F","()","<p>Returns <code>true</code> or <code>false</code> whether the stream has\nreached the end.\n",null,0],["eof?","ActionDispatch::Http::UploadedFile","Rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-eof-3F","()","<p>Shortcut for <code>tempfile.eof?</code>.\n",null,1],["eos?","StringScanner","Ruby/classes/StringScanner.html#method-i-eos-3F","()","<p>Returns <code>true</code> if the scan pointer is at the end of the string.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;)\np s.eos? ...</code></pre>\n",null,0],["eql?","Array","Ruby/classes/Array.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <code>self</code> and <code>other</code> are\nthe same object, or are both arrays with the same content (according …\n",null,0],["eql?","BigDecimal","Ruby/classes/BigDecimal.html#method-i-eql-3F","(p1)","<p>Tests for value equality; returns true if the values are equal.\n<p>The == and === operators and the eql? …\n",null,0],["eql?","Bignum","Ruby/classes/Bignum.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a <code>Bignum</code>\nwith the same value as <em>big</em>. Contrast this with\n<code>Bignum#==</code>, which …\n",null,0],["eql?","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-eql-3F","(p1)","<p>Returns true if <code>other</code> wraps the same pointer, otherwise\nreturns false.\n",null,0],["eql?","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-eql-3F","(p1)","<p>Returns true if <code>other</code> wraps the same pointer, otherwise\nreturns false.\n",null,0],["eql?","Float","Ruby/classes/Float.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a <code>Float</code> with\nthe same value as <em>flt</em>. Contrast this with <code>Float#==</code>,\nwhich performs …\n",null,0],["eql?","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-i-eql-3F","(other)","",null,0],["eql?","Gem::Platform","Ruby/classes/Gem/Platform.html#method-i-eql-3F","(other)","",null,0],["eql?","Gem::Source","Ruby/classes/Gem/Source.html#method-i-eql-3F","(other)","",null,0],["eql?","Gem::Version","Ruby/classes/Gem/Version.html#method-i-eql-3F","(other)","<p>A Version is only eql? to another version if it&#39;s specified to the same\nprecision. Version “1.0” …\n",null,0],["eql?","Hash","Ruby/classes/Hash.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <em>hash</em> and <em>other</em> are both\nhashes with the same content.\n",null,0],["eql?","IPAddr","Ruby/classes/IPAddr.html#method-i-eql-3F","(other)","<p>Checks equality used by Hash.\n",null,0],["eql?","MatchData","Ruby/classes/MatchData.html#method-i-eql-3F","(p1)","<p>Equality—Two matchdata are equal if their target strings, patterns, and\nmatched positions are identical. …\n",null,0],["eql?","Matrix","Ruby/classes/Matrix.html#method-i-eql-3F","(other)","",null,0],["eql?","Method","Ruby/classes/Method.html#method-i-eql-3F","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition …\n",null,0],["eql?","Numeric","Ruby/classes/Numeric.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <em>num</em> and <em>numeric</em> are the same\ntype and have equal values.\n\n<pre><code>1 == 1.0          #=&gt; true\n1.eql?(1.0) ...\n</code></pre>\n",null,0],["eql?","Object","Ruby/classes/Object.html#method-i-eql-3F","(p1)","<p>Equality — At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <code>obj</code> and <code>other</code> are the\nsame object. Typically …\n",null,0],["eql?","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-eql-3F","(p1)","",null,0],["eql?","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-eql-3F","(p1)","",null,0],["eql?","OpenSSL::PKey::EC::Point","Ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-eql-3F","(p1)","",null,0],["eql?","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-eql-3F","(p1)","<p>Returns true if <code>name</code> and <code>other</code> refer to the same\nhash key.\n",null,0],["eql?","OpenStruct","Ruby/classes/OpenStruct.html#method-i-eql-3F","(other)","<p>Compares this object and <code>other</code> for equality.  An OpenStruct is\neql? to <code>other</code> when <code>other</code> is an OpenStruct …\n",null,0],["eql?","Pathname","Ruby/classes/Pathname.html#method-i-eql-3F","(p1)","<p>Compare this pathname with <code>other</code>.  The comparison is\nstring-based. Be aware that two different paths …\n",null,0],["eql?","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-eql-3F","(other)","",null,0],["eql?","Range","Ruby/classes/Range.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <code>obj</code> is a Range, has\nequivalent begin and end items (by comparing them with <code>eql?</code> …\n",null,0],["eql?","Regexp","Ruby/classes/Regexp.html#method-i-eql-3F","(p1)","<p>Equality—Two regexps are equal if their patterns are identical, they have\nthe same character set code, …\n",null,0],["eql?","String","Ruby/classes/String.html#method-i-eql-3F","(p1)","<p>Two strings are equal if they have the same length and content.\n",null,0],["eql?","Struct","Ruby/classes/Struct.html#method-i-eql-3F","(p1)","<p>Two structures are equal if they are the same object, or if all their\nfields are equal (using <code>eql?</code>). …\n",null,0],["eql?","Time","Ruby/classes/Time.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <em>time</em> and <code>other_time</code> are\nboth Time objects with the same seconds and fractional seconds. …\n",null,0],["eql?","URI::Generic","Ruby/classes/URI/Generic.html#method-i-eql-3F","(oth)","",null,0],["eql?","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-eql-3F","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition …\n",null,0],["eql?","Vector","Ruby/classes/Vector.html#method-i-eql-3F","(other)","",null,0],["eql?","ActionView::FileSystemResolver","Rails/classes/ActionView/FileSystemResolver.html#method-i-eql-3F","(resolver)","",null,1],["eql?","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-i-eql-3F","","<p>Equivalent to <code>String#eql?</code>. Returns <code>true</code> if the\nclass name and <code>other</code> have the same length and content, …\n",null,1],["eql?","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-eql-3F","(comparison_object)","",null,1],["eql?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-eql-3F","(other)","",null,1],["eql?","Time","Rails/classes/Time.html#method-i-eql-3F","(other)","",null,1],["eql_with_coercion","Time","Rails/classes/Time.html#method-i-eql_with_coercion","(other)","<p>Layers additional behavior on Time#eql? so that ActiveSupport::TimeWithZone\ninstances can be eql? to …\n",null,1],["eql_without_coercion","Time","Rails/classes/Time.html#method-i-eql_without_coercion","(other)","",null,1],["equal?","BasicObject","Ruby/classes/BasicObject.html#method-i-equal-3F","(p1)","<p>Equality — At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <code>obj</code> and <code>other</code> are the\nsame object. Typically …\n",null,0],["erf","Math","Ruby/classes/Math.html#method-c-erf","(p1)","<p>Calculates the error function of x.\n",null,0],["erfc","Math","Ruby/classes/Math.html#method-c-erfc","(p1)","<p>Calculates the complementary error function of x.\n",null,0],["errno","SystemCallError","Ruby/classes/SystemCallError.html#method-i-errno","()","<p>Return this SystemCallError&#39;s error number.\n",null,0],["error","GServer","Ruby/classes/GServer.html#method-i-error","(detail)","<p>Called if #debug is true whenever an unhandled exception is raised. This\nimplementation simply logs the …\n",null,0],["error","Gem::MockGemUi","Ruby/classes/Gem/MockGemUi.html#method-i-error","()","",null,0],["error","Logger","Ruby/classes/Logger.html#method-i-error","(progname = nil, &block)","<p>Log an <code>ERROR</code> message.\n<p>See #info for more information.\n",null,0],["error","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-error","(msg)","<p>Aborts with <code>msg</code>\n",null,0],["error","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-error","(msg)","<p>Report an error message and exit\n",null,0],["error","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-error","(exception, req, res)","<p>Generates an error page for the <code>exception</code> while handling\n<code>req</code> on <code>res</code>.\n",null,0],["error","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-i-error","","<p>Logs a <code>message</code> at the error (syslog warning) log level, or\nlogs the message returned from the block. …\n",null,0],["error","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-error","(msg)","<p>Shortcut for logging an ERROR message\n",null,0],["error","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-error","(error_message)","",null,1],["error?","Logger","Ruby/classes/Logger.html#method-i-error-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>ERROR</code> messages.\n",null,0],["error?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-error-3F","()","",null,0],["error?","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-error-3F","()","<p>Will the logger output ERROR messages?\n",null,0],["error?","WEBrick::HTTPStatus","Ruby/classes/WEBrick/HTTPStatus.html#method-c-error-3F","(code)","<p>Is <code>code</code> an error status?\n",null,0],["error_bytes","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-error_bytes","()","<p>Returns the discarded bytes when Encoding::InvalidByteSequenceError occurs.\n\n<pre><code>ec = Encoding::Converter.new(&quot;EUC-JP&quot;, ...</code></pre>\n",null,0],["error_char","Encoding::UndefinedConversionError","Ruby/classes/Encoding/UndefinedConversionError.html#method-i-error_char","()","<p>Returns the one-character string which cause\nEncoding::UndefinedConversionError.\n\n<pre><code>ec = Encoding::Converter.new(&quot;ISO-8859-1&quot;, ...</code></pre>\n",null,0],["error_message","GetoptLong","Ruby/classes/GetoptLong.html#method-i-error_message","()","<p>Return the appropriate error message in POSIX-defined format. If no error\nhas occurred, returns nil. …\n",null,0],["error_message","ActionView::Helpers::ActiveModelInstanceTag","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-error_message","()","",null,1],["error_number","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-error_number","(exception)","",null,1],["error_wrapping","ActionView::Helpers::ActiveModelInstanceTag","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-error_wrapping","(html_tag)","",null,1],["errors","OpenSSL","Ruby/classes/OpenSSL.html#method-c-errors","()","<p>See any remaining errors held in queue.\n<p>Any errors you see here are probably due to a bug in ruby&#39;s …\n",null,0],["errors","ActiveModel::Validations","Rails/classes/ActiveModel/Validations.html#method-i-errors","()","<p>Returns the <code>Errors</code> object that holds all information about\nattribute error messages.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["errors","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-i-errors","()","<p>POST create PATCH/PUT update\n",null,1],["escape","CGI","Ruby/classes/CGI.html#method-c-escape","(string)","<p>URL-encode a string.\n\n<pre><code>url_encoded_string = CGI::escape(&quot;&#39;Stop!&#39; said Fred&quot;)\n   # =&gt; &quot;%27Stop%21%27+said+Fred&quot;\n</code></pre>\n",null,0],["escape","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-escape","(str)","",null,0],["escape","Regexp","Ruby/classes/Regexp.html#method-c-escape","(p1)","<p>Escapes any characters that would have special meaning in a regular\nexpression. Returns a new escaped …\n",null,0],["escape","Shellwords","Ruby/classes/Shellwords.html#method-c-escape","(str)","",null,0],["escape","URI::Escape","Ruby/classes/URI/Escape.html#method-i-escape","(*arg)","<p>Synopsis\n\n<pre><code>URI.escape(str [, unsafe])</code></pre>\n<p>Args\n",null,0],["escape","URI::Parser","Ruby/classes/URI/Parser.html#method-i-escape","(str, unsafe = @regexp[:UNSAFE])","<p>Args\n<p><code>str</code> &mdash; String to make safe\n<p><code>unsafe</code> &mdash; Regexp to apply. Defaults to self.regexp\n",null,0],["escape","WEBrick::AccessLog","Ruby/classes/WEBrick/AccessLog.html#method-i-escape","(data)","<p>Escapes control characters in <code>data</code>\n",null,0],["escape","WEBrick::HTMLUtils","Ruby/classes/WEBrick/HTMLUtils.html#method-c-escape","(string)","<p>Escapes &amp;, “, &gt; and &lt; in <code>string</code>\n",null,0],["escape","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-i-escape","(str)","<p>Escapes HTTP reserved and unwise characters in <code>str</code>\n",null,0],["escape","ActiveSupport::JSON::Encoding::Encoder","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-escape","(string)","",null,1],["escape8bit","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-i-escape8bit","(str)","<p>Escapes 8 bit characters in <code>str</code>\n",null,0],["escapeElement","CGI","Ruby/classes/CGI.html#method-c-escapeElement","(string, *elements)","<p>Escape only the tags of certain HTML elements in <code>string</code>.\n<p>Takes an element or elements or array of elements. …\n",null,0],["escapeHTML","CGI","Ruby/classes/CGI.html#method-c-escapeHTML","(string)","<p>Escape special characters in HTML, namely &amp;&quot;&lt;&gt;\n\n<pre><code>CGI::escapeHTML(&#39;Usage: foo &quot;bar&quot; &lt;baz&gt;&#39;) ...</code></pre>\n",null,0],["escape_auth_info","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-escape_auth_info","(str)","",null,0],["escape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Quoting.html#method-i-escape_bytea","(value)","<p>Escapes binary strings for bytea input to the database.\n",null,1],["escape_element","CGI","Ruby/classes/CGI.html#method-c-escape_element","(str)","<p>Synonym for CGI::escapeElement(str)\n",null,0],["escape_form","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-i-escape_form","(str)","<p>Escapes form reserved characters in <code>str</code>\n",null,0],["escape_glob_chars","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-i-escape_glob_chars","(path)","",null,1],["escape_html","CGI","Ruby/classes/CGI.html#method-c-escape_html","(str)","<p>Synonym for CGI::escapeHTML(str)\n",null,0],["escape_javascript","ActionView::Helpers::JavaScriptHelper","Rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-escape_javascript","(javascript)","<p>Escapes carriage returns and single and double quotes for JavaScript\nsegments.\n<p>Also available through …\n",null,1],["escape_once","ActionView::Helpers::TagHelper","Rails/classes/ActionView/Helpers/TagHelper.html#method-i-escape_once","(html)","<p>Returns an escaped version of <code>html</code> without affecting existing\nescaped entities.\n\n<pre>escape_once(&quot;1 &lt; 2 &amp;amp; ...</pre>\n",null,1],["escape_path","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-i-escape_path","(str)","<p>Escapes path <code>str</code>\n",null,0],["establish_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-establish_connection","(owner, spec)","",null,1],["establish_connection","ActiveRecord::ConnectionHandling","Rails/classes/ActiveRecord/ConnectionHandling.html#method-i-establish_connection","(spec = ENV[\"DATABASE_URL\"])","<p>Establishes the connection to the database. Accepts a hash as input where\nthe <code>:adapter</code> key must be specified …\n",null,1],["etag","ActionController::ConditionalGet::ClassMethods","Rails/classes/ActionController/ConditionalGet/ClassMethods.html#method-i-etag","(&etagger)","<p>Allows you to consider additional controller-wide information when\ngenerating an etag. For example, if …\n",null,1],["etag=","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-etag-3D","(etag)","",null,1],["etag_matches?","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-etag_matches-3F","(etag)","",null,1],["euid","Process","Ruby/classes/Process.html#method-c-euid","()","<p>Returns the effective user ID for this process.\n\n<pre><code>Process.euid   #=&gt; 501\n</code></pre>\n",null,0],["euid=","Process","Ruby/classes/Process.html#method-c-euid-3D","(p1)","<p>Sets the effective user ID for this process. Not available on all\nplatforms.\n",null,0],["eval","Binding","Ruby/classes/Binding.html#method-i-eval","(p1, p2 = v2, p3 = v3)","<p>Evaluates the Ruby expression(s) in <em>string</em>, in the\n<em>binding</em>&#39;s context.  If the optional <em>filename</em> and …\n",null,0],["eval","Kernel","Ruby/classes/Kernel.html#method-i-eval","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Evaluates the Ruby expression(s) in <em>string</em>. If <em>binding</em> is\ngiven, which must be a <code>Binding</code> object, the …\n",null,0],["eval","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-eval","()","<p>Evaluates the instruction sequence and returns the result.\n\n<pre><code>RubyVM::InstructionSequence.compile(&quot;1 + 2&quot;).eval ...</code></pre>\n",null,0],["eval_history=","IRB::Context","Ruby/classes/IRB/Context.html#method-i-eval_history-3D","(no)","<p>Sets command result history limit.\n<p><code>no</code> is an Integer or <code>nil</code>.\n<p>Returns <code>no</code> of history items if greater than …\n",null,0],["eval_input","IRB::Irb","Ruby/classes/IRB/Irb.html#method-i-eval_input","()","<p>Evaluates input for this session.\n",null,0],["evaluate","IRB::WorkSpace","Ruby/classes/IRB/WorkSpace.html#method-i-evaluate","(context, statements, file = nil, line = nil)","<p>Evaluate the context of this workspace and use the Tracer library to output\nthe exact lines of code are …\n",null,0],["even?","Bignum","Ruby/classes/Bignum.html#method-i-even-3F","()","<p>Returns <code>true</code> if <em>big</em> is an even number.\n",null,0],["even?","Fixnum","Ruby/classes/Fixnum.html#method-i-even-3F","()","<p>Returns <code>true</code> if <em>fix</em> is an even number.\n",null,0],["even?","Integer","Ruby/classes/Integer.html#method-i-even-3F","()","<p>Returns <code>true</code> if <em>int</em> is an even number.\n",null,0],["even?","Integer","Ruby/classes/Integer.html#method-i-even-3F","()","<p>Returns <code>true</code> if <em>int</em> is an even number.\n",null,0],["event","TracePoint","Ruby/classes/TracePoint.html#method-i-event","()","<p>Type of event\n<p>See TracePoint@Events for more information.\n",null,0],["event?","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-event-3F","()","<p>Returns true if the method is event.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;) ...</code></pre>\n",null,0],["event_interface","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-event_interface","()","<p>Returns event interface name if the method is event.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object ...</code></pre>\n",null,0],["event_type","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-event_type","()","",null,0],["exabyte","Numeric","Rails/classes/Numeric.html#method-i-exabyte","()","",null,1],["exabytes","Numeric","Rails/classes/Numeric.html#method-i-exabytes","()","",null,1],["examine","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-examine","(mailbox)","<p>Sends a EXAMINE command to select a <code>mailbox</code> so that messages\nin the <code>mailbox</code> can be accessed.  Behaves …\n",null,0],["except","ActiveRecord::SpawnMethods","Rails/classes/ActiveRecord/SpawnMethods.html#method-i-except","(*skips)","<p>Removes from the query the condition(s) specified in <code>skips</code>.\n\n<pre>Post.order(&#39;id asc&#39;).except(:order)       ...</pre>\n",null,1],["except","Hash","Rails/classes/Hash.html#method-i-except","(*keys)","<p>Return a hash that includes everything but the given keys. This is useful\nfor limiting a set of parameters …\n",null,1],["except!","Hash","Rails/classes/Hash.html#method-i-except-21","(*keys)","<p>Replaces the hash without the given keys.\n",null,1],["exception","DRb::DRbUnknown","Ruby/classes/DRb/DRbUnknown.html#method-i-exception","()","<p>Create a DRbUnknownError exception containing this object.\n",null,0],["exception","Exception","Ruby/classes/Exception.html#method-c-exception","(*args)","<p>With no argument, or if the argument is the same as the receiver, return\nthe receiver. Otherwise, create …\n",null,0],["exception","Exception","Ruby/classes/Exception.html#method-i-exception","(*args)","<p>With no argument, or if the argument is the same as the receiver, return\nthe receiver. Otherwise, create …\n",null,0],["exception_class","Net::SMTP::Response","Ruby/classes/Net/SMTP/Response.html#method-i-exception_class","()","<p>Determines whether there was an error and raies the appropriate error based\non the reply code of the …\n",null,0],["exceptions","","Ruby/files/ruby/doc/syntax/exceptions_rdoc.html","","<p>Exception Handling\n<p>Exceptions are rescued in a <code>begin</code>/<code>end</code> block:\n\n<pre><code>begin\n  # code that might raise\nrescue ...</code></pre>\n",null,0],["excerpt","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-excerpt","(text, phrase, options = {})","<p>Extracts an excerpt from <code>text</code> that matches the first instance\nof <code>phrase</code>. The <code>:radius</code> option expands the …\n",null,1],["exclude","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-exclude","(*patterns, &block)","<p>Register a list of file name patterns that should be excluded from the\nlist.  Patterns may be regular …\n",null,0],["exclude?","Enumerable","Rails/classes/Enumerable.html#method-i-exclude-3F","(object)","<p>The negative of the <code>Enumerable#include?</code>. Returns\n<code>true</code> if the collection does not include the object. …\n",null,1],["exclude?","String","Rails/classes/String.html#method-i-exclude-3F","(string)","<p>The inverse of <code>String#include?</code>. Returns true if the string\ndoes not include the other string.\n\n<pre>&quot;hello&quot;.exclude? ...</pre>\n",null,1],["exclude_end?","Range","Ruby/classes/Range.html#method-i-exclude_end-3F","()","<p>Returns <code>true</code> if the range excludes its end value.\n\n<pre><code>(1..5).exclude_end?     #=&gt; false\n(1...5).exclude_end? ...\n</code></pre>\n",null,0],["exclusive","Thread","Ruby/classes/Thread.html#method-c-exclusive","()","<p>Wraps a block in Thread.critical, restoring the original value upon exit\nfrom the critical section, and …\n",null,0],["exec","Kernel","Ruby/classes/Kernel.html#method-i-exec","(*args)","<p>Replaces the current process by running the given external\n<em>command</em>. <em>command…</em> is one of following forms. …\n",null,0],["exec","Process","Ruby/classes/Process.html#method-c-exec","(*args)","<p>Replaces the current process by running the given external\n<em>command</em>. <em>command…</em> is one of following forms. …\n",null,0],["exec_app_rails","Rails::AppRailsLoader","Rails/classes/Rails/AppRailsLoader.html#method-c-exec_app_rails","()","",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_delete","(sql, name, binds)","<p>Executes delete <code>sql</code> statement in the context of this\nconnection using <code>binds</code> as the bind substitutes. …\n",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_delete","(sql, name, binds)","",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-exec_delete","(sql, name, binds)","",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-exec_delete","(sql, name = 'SQL', binds = [])","",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-exec_delete","(sql, name = 'SQL', binds = [])","",null,1],["exec_format","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-exec_format","()","<p>Defaults to use Ruby&#39;s program prefix and suffix.\n",null,0],["exec_if","IRB::Notifier::AbstractNotifier","Ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-exec_if","()","<p>Execute the given block if notifications are enabled.\n",null,0],["exec_insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_insert","(sql, name, binds, pk = nil, sequence_name = nil)","<p>Executes insert <code>sql</code> statement in the context of this\nconnection using <code>binds</code> as the bind substitutes. …\n",null,1],["exec_insert","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_insert","(sql, name, binds, pk = nil, sequence_name = nil)","",null,1],["exec_insert","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-exec_insert","(sql, name, binds, pk = nil, sequence_name = nil)","",null,1],["exec_migration","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-exec_migration","(conn, direction)","",null,1],["exec_query","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","<p>Executes <code>sql</code> statement in the context of this connection using\n<code>binds</code> as the bind substitutes. <code>name</code> is …\n",null,1],["exec_query","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","",null,1],["exec_query","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","",null,1],["exec_query","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","",null,1],["exec_query","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-exec_query","(sql, name = nil, binds = [])","",null,1],["exec_update","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_update","(sql, name, binds)","<p>Executes update <code>sql</code> statement in the context of this\nconnection using <code>binds</code> as the bind substitutes. …\n",null,1],["exec_update","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_update","(sql, name, binds)","",null,1],["exec_update","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-exec_update","(sql, name, binds)","",null,1],["exec_update","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-exec_update","(sql, name = 'SQL', binds = [])","",null,1],["exec_update","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-exec_update","(sql, name = 'SQL', binds = [])","",null,1],["exec_without_stmt","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_without_stmt","(sql, name = 'SQL', binds = [])","",null,1],["executable","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-executable","()","<p>Singular accessor for #executables\n",null,0],["executable=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-executable-3D","(o)","<p>Singular accessor for #executables\n",null,0],["executable?","File","Ruby/classes/File.html#method-c-executable-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the effective\nuser id of this process.\n",null,0],["executable?","File::Stat","Ruby/classes/File/Stat.html#method-i-executable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is executable or if the\noperating system doesn&#39;t distinguish executable files …\n",null,0],["executable?","FileTest","Ruby/classes/FileTest.html#method-i-executable-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the effective\nuser id of this process.\n",null,0],["executable?","Pathname","Ruby/classes/Pathname.html#method-i-executable-3F","()","<p>See FileTest.executable?.\n",null,0],["executable_real?","File","Ruby/classes/File.html#method-c-executable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the real user\nid of this process.\n",null,0],["executable_real?","File::Stat","Ruby/classes/File/Stat.html#method-i-executable_real-3F","()","<p>Same as <code>executable?</code>, but tests using the real owner of the\nprocess.\n",null,0],["executable_real?","FileTest","Ruby/classes/FileTest.html#method-i-executable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the real user\nid of this process.\n",null,0],["executable_real?","Pathname","Ruby/classes/Pathname.html#method-i-executable_real-3F","()","<p>See FileTest.executable_real?.\n",null,0],["executables","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-executables","()","<p>Executables included in the gem.\n<p>For example, the rake gem has rake as an executable. You don’t specify …\n",null,0],["executables=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-executables-3D","(value)","<p>Sets executables to <code>value</code>, ensuring it is an array. Don&#39;t\nuse this, push onto the array instead. …\n",null,0],["execute","Gem::Command","Ruby/classes/Gem/Command.html#method-i-execute","()","<p>Override to provide command handling.\n<p>#options will be filled in with your parsed options, unparsed options …\n",null,0],["execute","Gem::Commands::BuildCommand","Ruby/classes/Gem/Commands/BuildCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::CertCommand","Ruby/classes/Gem/Commands/CertCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::CheckCommand","Ruby/classes/Gem/Commands/CheckCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::CleanupCommand","Ruby/classes/Gem/Commands/CleanupCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::ContentsCommand","Ruby/classes/Gem/Commands/ContentsCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::DependencyCommand","Ruby/classes/Gem/Commands/DependencyCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::EnvironmentCommand","Ruby/classes/Gem/Commands/EnvironmentCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::FetchCommand","Ruby/classes/Gem/Commands/FetchCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::GenerateIndexCommand","Ruby/classes/Gem/Commands/GenerateIndexCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::HelpCommand","Ruby/classes/Gem/Commands/HelpCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::InstallCommand","Ruby/classes/Gem/Commands/InstallCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::ListCommand","Ruby/classes/Gem/Commands/ListCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::LockCommand","Ruby/classes/Gem/Commands/LockCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::MirrorCommand","Ruby/classes/Gem/Commands/MirrorCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::OutdatedCommand","Ruby/classes/Gem/Commands/OutdatedCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::OwnerCommand","Ruby/classes/Gem/Commands/OwnerCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::PristineCommand","Ruby/classes/Gem/Commands/PristineCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::PushCommand","Ruby/classes/Gem/Commands/PushCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::QueryCommand","Ruby/classes/Gem/Commands/QueryCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::RdocCommand","Ruby/classes/Gem/Commands/RdocCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::SearchCommand","Ruby/classes/Gem/Commands/SearchCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::ServerCommand","Ruby/classes/Gem/Commands/ServerCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::SourcesCommand","Ruby/classes/Gem/Commands/SourcesCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::SpecificationCommand","Ruby/classes/Gem/Commands/SpecificationCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::StaleCommand","Ruby/classes/Gem/Commands/StaleCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::UninstallCommand","Ruby/classes/Gem/Commands/UninstallCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::UnpackCommand","Ruby/classes/Gem/Commands/UnpackCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::UpdateCommand","Ruby/classes/Gem/Commands/UpdateCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::WhichCommand","Ruby/classes/Gem/Commands/WhichCommand.html#method-i-execute","()","",null,0],["execute","Gem::Commands::YankCommand","Ruby/classes/Gem/Commands/YankCommand.html#method-i-execute","()","",null,0],["execute","Rake::Task","Ruby/classes/Rake/Task.html#method-i-execute","(args=nil)","<p>Execute the actions associated with this task.\n",null,0],["execute","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-execute","(sql, name = nil)","<p>Executes the SQL statement in the context of this connection.\n",null,1],["execute","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-execute","(sql, name = nil)","<p>Executes the SQL statement in the context of this connection.\n",null,1],["execute","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-execute","(sql, name = nil)","<p>Executes the SQL statement in the context of this connection.\n",null,1],["execute","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-execute","(sql, name = nil)","<p>Executes an SQL statement, returning a PGresult object on success or\nraising a PGError exception otherwise. …\n",null,1],["execute","ActiveRecord::StatementCache","Rails/classes/ActiveRecord/StatementCache.html#method-i-execute","()","",null,1],["execute","ActiveSupport::FileUpdateChecker","Rails/classes/ActiveSupport/FileUpdateChecker.html#method-i-execute","()","<p>Executes the given block and updates the latest watched files and\ntimestamp.\n",null,1],["execute_and_free","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-execute_and_free","(sql, name = nil)","",null,1],["execute_hook","ActiveSupport","Rails/classes/ActiveSupport.html#method-c-execute_hook","(base, options, block)","",null,1],["execute_if_updated","ActiveSupport::FileUpdateChecker","Rails/classes/ActiveSupport/FileUpdateChecker.html#method-i-execute_if_updated","()","<p>Execute the block given if updated.\n",null,1],["exist?","Dir","Ruby/classes/Dir.html#method-c-exist-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory,\n<code>false</code> otherwise.\n",null,0],["exist?","File","Ruby/classes/File.html#method-c-exist-3F","(p1)","<p>Return <code>true</code> if the named file exists.\n<p><em>file_name</em> can be an IO object.\n<p>“file exists” means that …\n",null,0],["exist?","FileTest","Ruby/classes/FileTest.html#method-i-exist-3F","(p1)","<p>Return <code>true</code> if the named file exists.\n<p><em>file_name</em> can be an IO object.\n<p>“file exists” means that …\n",null,0],["exist?","Pathname","Ruby/classes/Pathname.html#method-i-exist-3F","()","<p>See FileTest.exist?.\n",null,0],["exist?","StringScanner","Ruby/classes/StringScanner.html#method-i-exist-3F","(p1)","<p>Looks <em>ahead</em> to see if the <code>pattern</code> exists\n<em>anywhere</em> in the string, without advancing the scan pointer. …\n",null,0],["exist?","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-i-exist-3F","(key)","",null,1],["exist?","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-exist-3F","(name, options = nil)","<p>Return <code>true</code> if the cache contains an entry for the given key.\n<p>Options are passed to the underlying cache …\n",null,1],["existent","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-existent","()","<p>Returns all expanded paths but only if they exist in the filesystem.\n",null,1],["existent_directories","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-existent_directories","()","",null,1],["exists?","Dir","Ruby/classes/Dir.html#method-c-exists-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory,\n<code>false</code> otherwise.\n",null,0],["exists?","File","Ruby/classes/File.html#method-c-exists-3F","(p1)","<p>Return <code>true</code> if the named file exists.\n<p><em>file_name</em> can be an IO object.\n<p>“file exists” means that …\n",null,0],["exists?","FileTest","Ruby/classes/FileTest.html#method-i-exists-3F","(p1)","<p>Return <code>true</code> if the named file exists.\n<p><em>file_name</em> can be an IO object.\n<p>“file exists” means that …\n",null,0],["exists?","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-exists-3F","(name, prefixes = [], partial = false, keys = [], options = {})","",null,1],["exists?","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-exists-3F","(conditions = :none)","<p>Returns <code>true</code> if a record exists in the table that matches the\n<code>id</code> or conditions given, or <code>false</code> otherwise. …\n",null,1],["exit","IRB::Context","Ruby/classes/IRB/Context.html#method-i-exit","(ret = 0)","<p>Exits the current session, see IRB.irb_exit\n",null,0],["exit","Kernel","Ruby/classes/Kernel.html#method-i-exit","(p1 = v1)","<p>Initiates the termination of the Ruby script by raising the\n<code>SystemExit</code> exception. This exception may …\n",null,0],["exit","Process","Ruby/classes/Process.html#method-c-exit","(p1 = v1)","<p>Initiates the termination of the Ruby script by raising the\n<code>SystemExit</code> exception. This exception may …\n",null,0],["exit","Thread","Ruby/classes/Thread.html#method-i-exit","()","<p>Terminates <em>thr</em> and schedules another thread to be run. If this\nthread is already marked to be killed, …\n",null,0],["exit","Thread","Ruby/classes/Thread.html#method-c-exit","()","<p>Terminates the currently running thread and schedules another thread to be\nrun. If this thread is already …\n",null,0],["exit!","Kernel","Ruby/classes/Kernel.html#method-i-exit-21","(p1 = v1)","<p>Exits the process immediately. No exit handlers are run. <em>status</em> is\nreturned to the underlying system …\n",null,0],["exit!","Process","Ruby/classes/Process.html#method-c-exit-21","(p1 = v1)","<p>Exits the process immediately. No exit handlers are run. <em>status</em> is\nreturned to the underlying system …\n",null,0],["exit_value","LocalJumpError","Ruby/classes/LocalJumpError.html#method-i-exit_value","()","<p>call_seq:\n\n<pre><code>local_jump_error.exit_value  -&gt; obj</code></pre>\n<p>Returns the exit value associated with this <code>LocalJumpError</code> …\n",null,0],["exited?","Process::Status","Ruby/classes/Process/Status.html#method-i-exited-3F","()","<p>Returns <code>true</code> if <em>stat</em> exited normally (for example\nusing an <code>exit()</code> call or finishing the program).\n",null,0],["exited?","Rake::PseudoStatus","Ruby/classes/Rake/PseudoStatus.html#method-i-exited-3F","()","",null,0],["exitstatus","Process::Status","Ruby/classes/Process/Status.html#method-i-exitstatus","()","<p>Returns the least significant eight bits of the return code of\n<em>stat</em>. Only available if <code>exited?</code> is <code>true</code>\n…\n",null,0],["exp","BigMath","Ruby/classes/BigMath.html#method-c-exp","(p1, p2)","<p>Computes the value of e (the base of natural logarithms) raised to the\npower of x, to the specified number …\n",null,0],["exp","CMath","Ruby/classes/CMath.html#method-c-exp","(z)","<p>Math::E raised to the <code>z</code> power\n\n<pre><code>exp(Complex(0,0))      #=&gt; 1.0+0.0i\nexp(Complex(0,PI))     #=&gt; -1.0+1.2246467991473532e-16i ...\n</code></pre>\n",null,0],["exp","Math","Ruby/classes/Math.html#method-c-exp","(p1)","<p>Returns e**x.\n\n<pre><code>Math.exp(0)       #=&gt; 1.0\nMath.exp(1)       #=&gt; 2.718281828459045\nMath.exp(1.5)     #=&gt; ...\n</code></pre>\n",null,0],["exp!","CMath","Ruby/classes/CMath.html#method-c-exp-21","(z)","",null,0],["expand","REXML::Parsers::XPathParser","Ruby/classes/REXML/Parsers/XPathParser.html#method-i-expand","( path )","",null,0],["expand","REXML::Text","Ruby/classes/REXML/Text.html#method-c-expand","(ref, doctype, filter)","",null,0],["expand_cache_key","ActiveSupport::Cache","Rails/classes/ActiveSupport/Cache.html#method-c-expand_cache_key","(key, namespace = nil)","<p>Expands out the <code>key</code> argument into a key that can be used for\nthe cache store. Optionally accepts a namespace, …\n",null,1],["expand_class","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-expand_class","(klass)","<p>Expands abbreviated klass <code>klass</code> into a fully-qualified class. \n“Zl::Da” will be expanded to …\n",null,0],["expand_environ","Win32::Registry","Ruby/classes/Win32/Registry.html#method-c-expand_environ","(str)","<p>Replace %w+% into the environment value of what is contained between the\n%&#39;s This method is used …\n",null,0],["expand_hash_conditions_for_aggregates","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-expand_hash_conditions_for_aggregates","(attrs)","<p>Accepts a hash of SQL conditions and replaces those attributes that\ncorrespond to a <code>composed_of</code> relationship …\n",null,1],["expand_hexstring","OpenSSL::X509::Name::RFC2253DN","Ruby/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-expand_hexstring","(str)","",null,0],["expand_name","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-expand_name","(name)","<p>Expands the class portion of <code>name</code> into a fully-qualified\nclass.  See #expand_class.\n",null,0],["expand_pair","OpenSSL::X509::Name::RFC2253DN","Ruby/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-expand_pair","(str)","",null,0],["expand_path","File","Ruby/classes/File.html#method-c-expand_path","(p1, p2 = v2)","<p>Converts a pathname to an absolute pathname. Relative paths are referenced\nfrom the current working directory …\n",null,0],["expand_path","Pathname","Ruby/classes/Pathname.html#method-i-expand_path","(p1 = v1)","<p>Returns the absolute path for the file.\n<p>See File.expand_path.\n",null,0],["expand_path","Shell","Ruby/classes/Shell.html#method-i-expand_path","(path)","",null,0],["expand_path","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-expand_path","(path)","<p>CommandProcessor#expand_path(path)\n\n<pre><code>  path:   String\n  return: String\nreturns the absolute path for &lt;path&gt;</code></pre>\n",null,0],["expand_ref_in","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-i-expand_ref_in","( arry, ind )","",null,0],["expand_tabs","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-expand_tabs","(text)","<p>Expands tab characters in <code>text</code> to eight spaces\n",null,0],["expand_value","OpenSSL::X509::Name::RFC2253DN","Ruby/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-expand_value","(str1, str2, str3)","",null,0],["expanded","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-expanded","()","<p>Expands all paths against the root and return all unique values.\n",null,1],["expanded_name","REXML::Document","Ruby/classes/REXML/Document.html#method-i-expanded_name","()","<p>According to the XML spec, a root node has no expanded name\n",null,0],["expect","IO","Ruby/classes/IO.html#method-i-expect","(pat,timeout=9999999)","<p>Reads from the IO until the given <code>pattern</code> matches or the\n<code>timeout</code> is over.\n<p>It returns an array with the …\n",null,0],["expected","REXML::Validation::Choice","Ruby/classes/REXML/Validation/Choice.html#method-i-expected","()","",null,0],["expected","REXML::Validation::Interleave","Ruby/classes/REXML/Validation/Interleave.html#method-i-expected","()","",null,0],["expected","REXML::Validation::OneOrMore","Ruby/classes/REXML/Validation/OneOrMore.html#method-i-expected","()","",null,0],["expected","REXML::Validation::Optional","Ruby/classes/REXML/Validation/Optional.html#method-i-expected","()","",null,0],["expected","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-i-expected","()","",null,0],["expected","REXML::Validation::ZeroOrMore","Ruby/classes/REXML/Validation/ZeroOrMore.html#method-i-expected","()","",null,0],["expected_response","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-expected_response","(http_method, uri, credentials, password, password_is_ha1=true)","<p>Returns the expected response for a request of <code>http_method</code> to\n<code>uri</code> with the decoded <code>credentials</code> and the …\n",null,1],["expire","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-expire","()","",null,1],["expire_fragment","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-expire_fragment","(key, options = nil)","<p>Removes fragments from the cache.\n<p><code>key</code> can take one of three forms:\n<p>String - This would normally take the …\n",null,1],["expired?","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-expired-3F","()","<p>Has this tuple expired? (true/false).\n<p>A tuple has expired when its expiry timer based on the <code>sec</code>\nargument …\n",null,0],["expires","WEBrick::Cookie","Ruby/classes/WEBrick/Cookie.html#method-i-expires","()","<p>Retrieves the expiration time as a Time\n",null,0],["expires=","WEBrick::Cookie","Ruby/classes/WEBrick/Cookie.html#method-i-expires-3D","(t)","<p>Sets the cookie expiration to the time <code>t</code>.  The expiration time\nmay be a false value to disable expiration …\n",null,0],["expires_in","ActionController::ConditionalGet","Rails/classes/ActionController/ConditionalGet.html#method-i-expires_in","(seconds, options = {})","<p>Sets a HTTP 1.1 Cache-Control header. Defaults to issuing a\n<code>private</code> instruction, so that intermediate …\n",null,1],["expires_now","ActionController::ConditionalGet","Rails/classes/ActionController/ConditionalGet.html#method-i-expires_now","()","<p>Sets a HTTP 1.1 Cache-Control header of <code>no-cache</code> so no caching\nshould occur by the browser or intermediate …\n",null,1],["explain","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-explain","(arel, binds = [])","<p>DATABASE STATEMENTS ======================================\n",null,1],["explain","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-explain","(arel, binds = [])","",null,1],["explain","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-explain","(arel, binds = [])","<p>DATABASE STATEMENTS ======================================\n",null,1],["explain","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-explain","()","<p>Runs EXPLAIN on the query or queries triggered by this relation and returns\nthe result as a string.  …\n",null,1],["exponent","BigDecimal","Ruby/classes/BigDecimal.html#method-i-exponent","()","<p>Returns the exponent of the BigDecimal number, as an Integer.\n<p>If the number can be represented as 0.xxxxxx …\n",null,0],["export","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-export","()","<p>Encodes this DH to its PEM encoding. Note that any existing per-session\npublic/private keys will <strong>not</strong> …\n",null,0],["export","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-export","(p1 = v1, p2 = v2)","<p>Encodes this DSA to its PEM encoding.\n<p>Parameters\n<p><code>cipher</code> is an OpenSSL::Cipher.\n",null,0],["export","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-export","(p1 = v1, p2 = v2)","<p>Outputs the EC key in PEM encoding.  If <code>cipher</code> and\n<code>pass_phrase</code> are given they will be used to encrypt …\n",null,0],["export","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-export","(p1 = v1, p2 = v2)","<p>Outputs this keypair in PEM encoding.  If <code>cipher</code> and\n<code>pass_phrase</code> are given they will be used to encrypt …\n",null,0],["export","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-export","(p1 = v1, p2 = v2)","<p>Outputs this keypair in PEM encoding.  If <code>cipher</code> and\n<code>pass_phrase</code> are given they will be used to encrypt …\n",null,0],["expunge","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-expunge","()","<p>Sends a EXPUNGE command to permanently remove from the currently selected\nmailbox all messages that have …\n",null,0],["ext","String","Ruby/classes/String.html#method-i-ext","(newext='')","<p>Replace the file extension with <code>newext</code>.  If there is no\nextension on the string, append the new extension …\n",null,0],["ext","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-i-ext","()","",null,1],["extend","Object","Ruby/classes/Object.html#method-i-extend","(*args)","<p>Adds to <em>obj</em> the instance methods from each module given as a\nparameter.\n\n<pre><code>module Mod\n  def hello\n    &quot;Hello ...\n</code></pre>\n",null,0],["extend_object","E2MM","Ruby/classes/E2MM.html#method-c-extend_object","(cl)","",null,0],["extend_object","E2MM","Ruby/classes/E2MM.html#method-c-extend_object","(cl)","",null,0],["extend_object","IRB::ExtendCommandBundle","Ruby/classes/IRB/ExtendCommandBundle.html#method-c-extend_object","(obj)","<p>Installs alias methods for the default irb commands on the given object\nusing #install_alias_method. …\n",null,0],["extend_object","MonitorMixin","Ruby/classes/MonitorMixin.html#method-c-extend_object","(obj)","",null,0],["extend_object","OptionParser::Arguable","Ruby/classes/OptionParser/Arguable.html#method-c-extend_object","(obj)","<p>Initializes instance variable.\n",null,0],["extend_object","Sync_m","Ruby/classes/Sync_m.html#method-c-extend_object","(obj)","",null,0],["extend_object","Sync_m","Ruby/classes/Sync_m.html#method-c-extend_object","(obj)","",null,0],["extending","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-extending","(*modules, &block)","<p>Used to extend a scope with additional methods, either through a module or\nthrough a block provided. …\n",null,1],["extension","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-c-extension","(name)","<p>Creates extension methods for the <code>name</code> extension to enable and\ndisable\nthe extension and to query if ...\n",null,0],["extension","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-extension","(name, enable)","<p>Enables or disables the extension with <code>name</code>\n",null,0],["extension?","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-extension-3F","(name)","<p>Is the extension <code>name</code> enabled?\n",null,0],["extension_build_error","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-extension_build_error","(build_dir, output, backtrace = nil)","<p>Logs the build <code>output</code> in <code>build_dir</code>, then raises\nExtensionBuildError.\n",null,0],["extension_enabled?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-extension_enabled-3F","(name)","",null,1],["extensions","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-extensions","()","<p>Extensions to build when installing the gem, specifically the paths to\nextconf.rb-style files used to …\n",null,0],["extensions","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-extensions","()","<p>Gets X509v3 extensions as array of X509Ext objects\n",null,0],["extensions","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-extensions","()","",null,0],["extensions","OpenSSL::X509::Revoked","Ruby/classes/OpenSSL/X509/Revoked.html#method-i-extensions","()","<p>Gets X509v3 extensions as array of X509Ext objects\n",null,0],["extensions","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-extensions","()","<p>returns extensions.\n",null,0],["extensions","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-extensions","()","<p>A list of extensions, to be filled in by adapters that support them. At the\nmoment only postgresql does. …\n",null,1],["extensions","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-extensions","()","",null,1],["extensions=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-extensions-3D","(extensions)","<p>Sets extensions to <code>extensions</code>, ensuring it is an array.\nDon&#39;t use this, push onto the array instead. …\n",null,0],["extensions=","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-extensions-3D","(p1)","<p>Sets X509_EXTENSIONs\n",null,0],["extensions=","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-extensions-3D","(p1)","",null,0],["extensions=","OpenSSL::X509::Revoked","Ruby/classes/OpenSSL/X509/Revoked.html#method-i-extensions-3D","(p1)","<p>Sets X509_EXTENSIONs\n",null,0],["extensions=","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-extensions-3D","(val)","<p>setter for extensions <code>val</code>\n",null,0],["extern","DL::Importer","Ruby/classes/DL/Importer.html#method-i-extern","(signature, *opts)","",null,0],["extern","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-extern","(signature, *opts)","<p>Creates a global method from the given C <code>signature</code>.\n",null,0],["external_encoding","ARGF","Ruby/classes/ARGF.html#method-i-external_encoding","()","\n<pre><code>Returns the external encoding for files read from +ARGF+ as an +Encoding+\nobject. The external encoding ...</code></pre>\n",null,0],["external_encoding","IO","Ruby/classes/IO.html#method-i-external_encoding","()","<p>Returns the Encoding object that represents the encoding of the file. If io\nis write mode and no encoding …\n",null,0],["external_encoding","StringIO","Ruby/classes/StringIO.html#method-i-external_encoding","()","<p>Returns the Encoding object that represents the encoding of the file. If\nstrio is write mode and no encoding …\n",null,0],["extify","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-extify","(name)","<p>Add an extension to the given name based on the platform.\n",null,1],["extname","File","Ruby/classes/File.html#method-c-extname","(p1)","<p>Returns the extension (the portion of file name in <code>path</code>\nstarting from the last period).\n<p>If <code>path</code> is a dotfile, …\n",null,0],["extname","Pathname","Ruby/classes/Pathname.html#method-i-extname","()","<p>Returns the file&#39;s extension.\n<p>See File.extname.\n",null,0],["extra_args","Gem::Command","Ruby/classes/Gem/Command.html#method-c-extra_args","()","",null,0],["extra_args=","Gem::Command","Ruby/classes/Gem/Command.html#method-c-extra_args-3D","(value)","",null,0],["extra_rdoc_files","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-extra_rdoc_files","()","<p>Extra files to add to RDoc such as README or doc/examples.txt\n<p>When the user elects to generate the RDoc …\n",null,0],["extra_rdoc_files=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-extra_rdoc_files-3D","(files)","<p>Sets extra_rdoc_files to <code>files</code>, ensuring it is an array.\nDon&#39;t use this, push onto the array instead. …\n",null,0],["extract","URI","Ruby/classes/URI.html#method-c-extract","(str, schemes = nil, &block)","<p>Synopsis\n\n<pre><code>URI::extract(str[, schemes][,&amp;blk])</code></pre>\n<p>Args\n",null,0],["extract","URI::Parser","Ruby/classes/URI/Parser.html#method-i-extract","(str, schemes = nil)","<p>Args\n<p><code>str</code> &mdash; String to search\n<p><code>schemes</code> &mdash; Patterns to apply to <code>str</code>\n",null,0],["extract!","Hash","Rails/classes/Hash.html#method-i-extract-21","(*keys)","<p>Removes and returns the key/value pairs matching the given keys.\n\n<pre>{ a: 1, b: 2, c: 3, d: 4 }.extract!(:a, ...</pre>\n",null,1],["extract_annotations_from","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-i-extract_annotations_from","(file, pattern)","<p>If <code>file</code> is the filename of a file that contains annotations\nthis method returns a hash with a single …\n",null,1],["extract_bounds","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Range","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Range.html#method-i-extract_bounds","(value)","",null,1],["extract_call_seq","RDoc::Comment","Ruby/classes/RDoc/Comment.html#method-i-extract_call_seq","(method)","<p>Look for a &#39;call-seq&#39; in the comment to override the normal\nparameter handling.  The :call-seq: …\n",null,0],["extract_comment","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-extract_comment","(comment)","<p>Extracts the comment for this section from the original comment block. If\nthe first line contains :section:, …\n",null,0],["extract_domain","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-c-extract_domain","(host, tld_length = @@tld_length)","",null,1],["extract_files","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-extract_files","()","<p>Reads the file index and extracts each file into the gem directory.\n<p>Ensures that files can&#39;t be installed …\n",null,0],["extract_files","Gem::Package","Ruby/classes/Gem/Package.html#method-i-extract_files","(destination_dir)","<p>Extracts the files in this package into <code>destination_dir</code>\n",null,0],["extract_files","Gem::Package::Old","Ruby/classes/Gem/Package/Old.html#method-i-extract_files","(destination_dir)","<p>Extracts the files in this package into <code>destination_dir</code>\n",null,0],["extract_options!","Array","Rails/classes/Array.html#method-i-extract_options-21","()","<p>Extracts options from a set of arguments. Removes and returns the last\nelement in the array if it&#39;s …\n",null,1],["extract_schema_and_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Utils","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Utils.html#method-i-extract_schema_and_table","(name)","<p>Returns an array of <code>[schema_name, table_name]</code> extracted from\n<code>name</code>. <code>schema_name</code> is nil if not specified …\n",null,1],["extract_session_id","ActionDispatch::Session::StaleSessionCheck","Rails/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-extract_session_id","(env)","",null,1],["extract_subdomain","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-c-extract_subdomain","(host, tld_length = @@tld_length)","",null,1],["extract_subdomains","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-c-extract_subdomains","(host, tld_length = @@tld_length)","",null,1],["extract_value_from_default","ActiveRecord::ConnectionAdapters::PostgreSQLColumn","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html#method-c-extract_value_from_default","(default)","<p>Extracts the value from a PostgreSQL column default definition.\n",null,1],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-extractable_options-3F","()","<p>Returns <code>true</code> so that <code>Array#extract_options!</code> finds\nmembers of this class.\n",null,1],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-extractable_options-3F","()","<p>Returns <code>true</code> so that <code>Array#extract_options!</code> finds\nmembers of this class.\n",null,1],["extractable_options?","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-extractable_options-3F","()","<p>Returns true to make sure that this hash is extractable via\n<code>Array#extract_options!</code>\n",null,1],["extractable_options?","Hash","Rails/classes/Hash.html#method-i-extractable_options-3F","()","<p>By default, only instances of Hash itself are extractable. Subclasses of\nHash may implement this method …\n",null,1],["facility","Syslog","Ruby/classes/Syslog.html#method-c-facility","()","<p>Returns the facility number used in the last call to open()\n",null,0],["fail","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-fail","(err = nil, *rest)","",null,0],["fail","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-i-fail","(err = nil, *rest)","",null,0],["fail","Kernel","Ruby/classes/Kernel.html#method-i-fail","(*args)","<p>With no arguments, raises the exception in <code>$!</code> or raises a\n<code>RuntimeError</code> if <code>$!</code> is <code>nil</code>. With a\nsingle <code>String</code> …\n",null,0],["fallbacks","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-fallbacks","()","<p>Hold configured generators fallbacks. If a plugin developer wants a\ngenerator group to fallback to another …\n",null,1],["false","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-false","( )","<p>UNTESTED\n",null,0],["family","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-family","()","<p>returns the socket family as an integer.\n\n<pre><code>p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, &quot;&quot;).family ...</code></pre>\n",null,0],["family","Socket::Option","Ruby/classes/Socket/Option.html#method-i-family","()","<p>returns the socket family as an integer.\n\n<pre><code>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).family ...</code></pre>\n",null,0],["family_addrinfo","Addrinfo","Ruby/classes/Addrinfo.html#method-i-family_addrinfo","(*args)","<p>creates an Addrinfo object from the arguments.\n<p>The arguments are interpreted as similar to self.\n\n<pre><code>Addrinfo.tcp(&quot;0.0.0.0&quot;, ...</code></pre>\n",null,0],["fast_generate","JSON","Ruby/classes/JSON.html#method-i-fast_generate","(obj, opts = nil)","<p>Generate a JSON document from the Ruby data structure <em>obj</em> and\nreturn it. This method disables the checks …\n",null,0],["fastmode=","GDBM","Ruby/classes/GDBM.html#method-i-fastmode-3D","(p1)","<p>Turns the database&#39;s fast mode on or off. If fast mode is turned on,\ngdbm does not wait for writes …\n",null,0],["fatal","","Ruby/classes/fatal.html","","<p>fatal is an Exception that is raised when ruby has encountered a fatal\nerror and must exit.  You are …\n",null,0],["fatal","Logger","Ruby/classes/Logger.html#method-i-fatal","(progname = nil, &block)","<p>Log a <code>FATAL</code> message.\n<p>See #info for more information.\n",null,0],["fatal","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-i-fatal","","<p>Logs a <code>message</code> at the fatal (syslog err) log level, or logs\nthe message returned from the block.\n",null,0],["fatal","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-fatal","(msg)","<p>Shortcut for logging a FATAL message\n",null,0],["fatal?","Logger","Ruby/classes/Logger.html#method-i-fatal-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>FATAL</code> messages.\n",null,0],["fatal?","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-fatal-3F","()","<p>Will the logger output FATAL messages?\n",null,0],["fault","XMLRPC::Convert","Ruby/classes/XMLRPC/Convert.html#method-c-fault","(hash)","<p>Converts the given <code>hash</code> to an XMLRPC::FaultException object by\npassing the <code>faultCode</code> and <code>faultString</code> …\n",null,0],["favicon_link_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-favicon_link_tag","(source='favicon.ico', options={})","<p>Returns a link loading a favicon file. You may specify a different file in\nthe first argument. The helper …\n",null,1],["fcntl","IO","Ruby/classes/IO.html#method-i-fcntl","(p1, p2 = v2)","<p>Provides a mechanism for issuing low-level commands to control or query\nfile-oriented I/O streams. Arguments …\n",null,0],["fcntl","StringIO","Ruby/classes/StringIO.html#method-i-fcntl","(*args)","",null,0],["fdatasync","IO","Ruby/classes/IO.html#method-i-fdatasync","()","<p>Immediately writes all buffered data in <em>ios</em> to disk.\n<p>If the underlying operating system does not support …\n",null,0],["fdiv","Bignum","Ruby/classes/Bignum.html#method-i-fdiv","(p1)","<p>Returns the floating point result of dividing <em>big</em> by\n<em>numeric</em>.\n\n<pre><code>-1234567890987654321.fdiv(13731)      #=&gt; ...\n</code></pre>\n",null,0],["fdiv","Complex","Ruby/classes/Complex.html#method-i-fdiv","(p1)","<p>Performs division as each part is a float, never returns a float.\n\n<pre><code>Complex(11, 22).fdiv(3)  #=&gt; (3.6666666666666665+7.333333333333333i)\n</code></pre>\n",null,0],["fdiv","Fixnum","Ruby/classes/Fixnum.html#method-i-fdiv","(p1)","<p>Returns the floating point result of dividing <em>fix</em> by\n<em>numeric</em>.\n\n<pre><code>654321.fdiv(13731)      #=&gt; 47.6528293642124 ...\n</code></pre>\n",null,0],["fdiv","Float","Ruby/classes/Float.html#method-i-fdiv","(p1)","<p>Returns float / numeric.\n",null,0],["fdiv","Numeric","Ruby/classes/Numeric.html#method-i-fdiv","(p1)","<p>Returns float division.\n",null,0],["fdiv","Rational","Ruby/classes/Rational.html#method-i-fdiv","(p1)","<p>Performs division and returns the value as a float.\n\n<pre><code>Rational(2, 3).fdiv(1)       #=&gt; 0.6666666666666666 ...\n</code></pre>\n",null,0],["feed","Enumerator","Ruby/classes/Enumerator.html#method-i-feed","(p1)","<p>Sets the value to be returned by the next yield inside <code>e</code>.\n<p>If the value is not set, the yield returns nil. …\n",null,0],["feed_info","RSS::RootElementMixin","Ruby/classes/RSS/RootElementMixin.html#method-i-feed_info","()","",null,0],["fetch","Array","Ruby/classes/Array.html#method-i-fetch","(p1, p2 = v2)","<p>Tries to return the element at position <code>index</code>, but throws an\nIndexError exception if the referenced  …\n",null,0],["fetch","CSV::Row","Ruby/classes/CSV/Row.html#method-i-fetch","(header, *varargs)","<p>This method will fetch the field value by <code>header</code>. It has the\nsame behavior as Hash#fetch: if there is …\n",null,0],["fetch","DBM","Ruby/classes/DBM.html#method-i-fetch","(p1, p2 = v2)","<p>Return a value from the database by locating the key string provided.  If\nthe key is not found, returns …\n",null,0],["fetch","ENV","Ruby/classes/ENV.html#method-c-fetch","(p1, p2 = v2)","<p>Retrieves the environment variable <code>name</code>.\n<p>If the given name does not exist and neither <code>default</code> nor a\nblock …\n",null,0],["fetch","GDBM","Ruby/classes/GDBM.html#method-i-fetch","(p1, p2 = v2)","<p>Retrieves the <em>value</em> corresponding to <em>key</em>. If there is no\nvalue associated with <em>key</em>, <em>default</em> will be returned …\n",null,0],["fetch","Gem::StreamUI::SilentDownloadReporter","Ruby/classes/Gem/StreamUI/SilentDownloadReporter.html#method-i-fetch","(filename, filesize)","",null,0],["fetch","Gem::StreamUI::VerboseDownloadReporter","Ruby/classes/Gem/StreamUI/VerboseDownloadReporter.html#method-i-fetch","(file_name, total_bytes)","",null,0],["fetch","Hash","Ruby/classes/Hash.html#method-i-fetch","(p1, p2 = v2)","<p>Returns a value from the hash for the given key. If the key can&#39;t be\nfound, there are several options: …\n",null,0],["fetch","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-fetch","(key, *args)","<p>Returns the header field corresponding to the case-insensitive key. Returns\nthe default value <code>args</code>, or …\n",null,0],["fetch","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-fetch","(set, attr)","<p>Sends a FETCH command to retrieve data associated with a message in the\nmailbox. The <code>set</code> parameter is …\n",null,0],["fetch","PStore","Ruby/classes/PStore.html#method-i-fetch","(name, default=PStore::Error)","<p>This method is just like PStore#[], save that you may also provide a\n<em>default</em> value for the object.   …\n",null,0],["fetch","Rinda::Tuple","Ruby/classes/Rinda/Tuple.html#method-i-fetch","(k)","<p>Fetches item <code>k</code> from the tuple.\n",null,0],["fetch","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-fetch","(key)","<p>Fetches <code>key</code> from the tuple.\n",null,0],["fetch","SDBM","Ruby/classes/SDBM.html#method-i-fetch","(p1, p2 = v2)","<p>Returns the <code>value</code> in the database associated with the given\n<code>key</code> string.\n<p>If a block is provided, the block …\n",null,0],["fetch","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-fetch","( keystr, ifnone = nil )","<p>Return value associated with <code>key</code>.\n<p>If there is no value for <code>key</code> and no block is given, returns\n<code>ifnone</code>. …\n",null,0],["fetch","ActionController::Parameters","Rails/classes/ActionController/Parameters.html#method-i-fetch","(key, *args)","<p>Returns a parameter for the given <code>key</code>. If the <code>key</code>\ncan&#39;t be found, there are several options: With …\n",null,1],["fetch","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-i-fetch","(key, *args, &block)","",null,1],["fetch","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::TypeMap","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/TypeMap.html#method-i-fetch","(ftype, fmod)","",null,1],["fetch","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-fetch","(name, options = nil)","<p>Fetches data from the cache, using the given key. If there is data in the\ncache with the given key, then …\n",null,1],["fetch","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-fetch","(key, *extras)","<p>Same as <code>Hash#fetch</code> where the key passed as argument can be\neither a string or a symbol:\n\n<pre>counters = ActiveSupport::HashWithIndifferentAccess.new ...</pre>\n",null,1],["fetch","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-fetch","(key, *extras)","<p>Same as <code>Hash#fetch</code> where the key passed as argument can be\neither a string or a symbol:\n\n<pre>counters = ActiveSupport::HashWithIndifferentAccess.new ...</pre>\n",null,1],["fetch","Mime","Rails/classes/Mime.html#method-c-fetch","(type)","",null,1],["fetch_file","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-fetch_file","(uri, *_)","<p>File Fetcher. Dispatched by <code>fetch_path</code>. Use it instead.\n",null,0],["fetch_http","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-fetch_http","(uri, last_modified = nil, head = false, depth = 0)","<p>HTTP Fetcher. Dispatched by <code>fetch_path</code>. Use it instead.\n",null,0],["fetch_https","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-fetch_https","(uri, last_modified = nil, head = false, depth = 0)","",null,0],["fetch_path","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-fetch_path","(uri, mtime = nil, head = false)","<p>Downloads <code>uri</code> and returns it as a String.\n",null,0],["fetch_server","DRb","Ruby/classes/DRb.html#method-c-fetch_server","(uri)","<p>Retrieves the server with the given <code>uri</code>.\n<p>See also regist_server and remove_server.\n",null,0],["fetch_size","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-fetch_size","(uri)","<p>Returns the size of <code>uri</code> in bytes.\n",null,0],["fetch_spec","Gem::Source","Ruby/classes/Gem/Source.html#method-i-fetch_spec","(name)","",null,0],["fetch_spec","Gem::Source::Local","Ruby/classes/Gem/Source/Local.html#method-i-fetch_spec","(name)","",null,0],["fetch_spec","Gem::Source::SpecificFile","Ruby/classes/Gem/Source/SpecificFile.html#method-i-fetch_spec","(name)","",null,0],["fetcher","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-c-fetcher","()","<p>Cached RemoteFetcher instance.\n",null,0],["fetcher","Gem::SpecFetcher","Ruby/classes/Gem/SpecFetcher.html#method-c-fetcher","()","",null,0],["fiddle?","DL","Ruby/classes/DL.html#method-c-fiddle-3F","()","<p>Returns true if DL is using Fiddle, the libffi wrapper.\n",null,0],["field","CSV::Row","Ruby/classes/CSV/Row.html#method-i-field","(header_or_index, minimum_index = 0)","<p>This method will return the field value by <code>header</code> or\n<code>index</code>.  If a field is not found, <code>nil</code> is returned.\n…\n",null,0],["field?","CSV::Row","Ruby/classes/CSV/Row.html#method-i-field-3F","(data)","<p>Returns <code>true</code> if <code>data</code> matches a field in this row,\nand <code>false</code> otherwise.\n",null,0],["field_row?","CSV::Row","Ruby/classes/CSV/Row.html#method-i-field_row-3F","()","<p>Returns <code>true</code> if this is a field row.\n",null,0],["field_set_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-field_set_tag","(legend = nil, options = nil, &block)","<p>Creates a field set for grouping HTML form elements.\n<p><code>legend</code> will become the fieldset&#39;s title (optional …\n",null,1],["fields","CSV::Row","Ruby/classes/CSV/Row.html#method-i-fields","(*headers_and_or_indices)","<p>This method accepts any number of arguments which can be headers, indices,\nRanges of either, or two-element …\n",null,0],["fields_for","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-fields_for","(record_name, record_object = nil, fields_options = {}, &block)","<p>Creates a scope around a specific model object like form_for, but\ndoesn&#39;t create the form tags themselves. …\n",null,1],["fields_for","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-fields_for","(record_name, record_object = nil, options = {}, &block)","<p>Creates a scope around a specific model object like form_for, but\ndoesn&#39;t create the form tags themselves. …\n",null,1],["fifth","Array","Rails/classes/Array.html#method-i-fifth","()","<p>Equal to <code>self[4]</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-node\">%w( a b c d e )</span>.<span class=\"ruby-identifier\">fifth</span> <span class=\"ruby-comment\"># =&gt; &quot;e&quot;</span>\n</pre>\n",null,1],["file","ARGF","Ruby/classes/ARGF.html#method-i-file","()","<p>Returns the current file as an <code>IO</code> or <code>File</code> object.\n#&lt;IO:&lt;STDIN&gt;&gt; is returned when the current …\n",null,0],["file","Digest::Class","Ruby/classes/Digest/Class.html#method-c-file","(name)","<p>creates a digest object and reads a given file, <em>name</em>.\n\n<pre><code>p Digest::SHA256.file(&quot;X11R6.8.2-src.tar.bz2&quot;).hexdigest ...</code></pre>\n",null,0],["file","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-file","(name)","<p>updates the digest with the contents of a given file <em>name</em> and\nreturns self.\n",null,0],["file=","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-i-file-3D","(location)","<p>The file this Document was created from.\n",null,0],["file?","File","Ruby/classes/File.html#method-c-file-3F","(p1)","<p>Returns <code>true</code> if the named file exists and is a regular file.\n<p><em>file_name</em> can be an IO object.\n",null,0],["file?","File::Stat","Ruby/classes/File/Stat.html#method-i-file-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a regular file (not a device\nfile, pipe, socket, etc.).\n\n<pre><code>File.stat(&quot;testfile&quot;).file? ...</code></pre>\n",null,0],["file?","FileTest","Ruby/classes/FileTest.html#method-i-file-3F","(p1)","<p>Returns <code>true</code> if the named file exists and is a regular file.\n<p><em>file_name</em> can be an IO object.\n",null,0],["file?","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-file-3F","()","<p>Is this tar entry a file?\n",null,0],["file?","Pathname","Ruby/classes/Pathname.html#method-i-file-3F","()","<p>See FileTest.file?.\n",null,0],["file_dir","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-file_dir","()","<p>Directory where generated class HTML files live relative to the output dir.\n",null,0],["file_dir","RDoc::Generator::JsonIndex","Ruby/classes/RDoc/Generator/JsonIndex.html#method-i-file_dir","()","<p>The directory files are written to\n",null,0],["file_field","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-file_field","(name = \"\", size = 20, maxlength = nil)","<p>Generate an File Upload Input element as a string.\n<p>The attributes of the element can be specified as three …\n",null,0],["file_field","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-file_field","(method, options = {})","<p>Returns a file upload input tag tailored for accessing a specified\nattribute (identified by <code>method</code>) on …\n",null,1],["file_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-file_field","(object_name, method, options = {})","<p>Returns a file upload input tag tailored for accessing a specified\nattribute (identified by <code>method</code>) on …\n",null,1],["file_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-file_field_tag","(name, options = {})","<p>Creates a file upload field. If you are using file uploads then you will\nalso need to set the multipart …\n",null,1],["file_input?","IRB::Context","Ruby/classes/IRB/Context.html#method-i-file_input-3F","()","<p>Whether #io uses a File for the <code>input_method</code> passed when\ncreating the current context, see ::new\n",null,0],["file_name","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-file_name","()","<p>The default (generated) file name of the gem.  See also #spec_name.\n\n<pre><code>spec.file_name # =&gt; &quot;example-1.0.gem&quot;\n</code></pre>\n",null,0],["file_name","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-file_name","()","<p>File name where this CodeObject was found.\n<p>See also RDoc::Context#in_files\n",null,0],["file_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-file_path","()","",null,1],["filename","ARGF","Ruby/classes/ARGF.html#method-i-filename","()","<p>Returns the current filename. “-” is returned when the current file is\nSTDIN.\n<p>For example:\n\n<pre><code>$ ...</code></pre>\n",null,0],["filename","Ripper::Filter","Ruby/classes/Ripper/Filter.html#method-i-filename","()","<p>The file name of the input.\n",null,0],["filename","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-c-filename","()","<p>Returns the filename for the data file for this version.\n",null,1],["filename_quote_characters","Readline","Ruby/classes/Readline.html#method-c-filename_quote_characters","()","<p>Gets a list of characters that cause a filename to be quoted by the\ncompleter when they appear in a completed …\n",null,0],["filename_quote_characters=","Readline","Ruby/classes/Readline.html#method-c-filename_quote_characters-3D","(p1)","<p>Sets a list of characters that cause a filename to be quoted by the\ncompleter when they appear in a completed …\n",null,0],["fileno","ARGF","Ruby/classes/ARGF.html#method-i-fileno","()","<p>Returns an integer representing the numeric file descriptor for the current\nfile. Raises an <code>ArgumentError</code> …\n",null,0],["fileno","IO","Ruby/classes/IO.html#method-i-fileno","()","<p>Returns an integer representing the numeric file descriptor for\n<em>ios</em>.\n\n<pre><code>$stdin.fileno    #=&gt; 0\n$stdout.fileno ...\n</code></pre>\n",null,0],["fileno","StringIO","Ruby/classes/StringIO.html#method-i-fileno","()","",null,0],["files","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-files","()","<p>Files included in this gem.  You cannot append to this accessor, you must\nassign to it.\n<p>Only add files …\n",null,0],["files=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-files-3D","(files)","<p>Sets files to <code>files</code>, ensuring it is an array.\n",null,0],["files_hash","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-files_hash","()","<p>Hash of all files known to RDoc\n",null,0],["fill","Array","Ruby/classes/Array.html#method-i-fill","(p1 = v1, p2 = v2)","<p>The first three forms set the selected elements of <code>self</code> (which\nmay be the entire array) to <code>obj</code>.\n<p>A <code>start</code> …\n",null,0],["fill_breakable","PrettyPrint","Ruby/classes/PrettyPrint.html#method-i-fill_breakable","(sep=' ', width=sep.length)","<p>This is similar to #breakable except the decision to break or not is\ndetermined individually.\n<p>Two #fill_breakable …\n",null,0],["filter","CSV","Ruby/classes/CSV.html#method-c-filter","(*args)","<p>This method is a convenience for building Unix-like filters for CSV data.\nEach row is yielded to the …\n",null,0],["filter","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-filter","(elements, path)","<p>Given an array of nodes it filters the array based on the path. The result\nis that when this method returns, …\n",null,0],["filter","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-filter","()","<p>returns filter.\n",null,0],["filter","ActionDispatch::Http::ParameterFilter","Rails/classes/ActionDispatch/Http/ParameterFilter.html#method-i-filter","(params)","",null,1],["filter","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-filter","(backtrace, kind = :silent)","",null,1],["filter=","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-filter-3D","(val)","<p>setter for filter <code>val</code>\n",null,0],["filter_backtrace","IRB::WorkSpace","Ruby/classes/IRB/WorkSpace.html#method-i-filter_backtrace","(bt)","<p>error message manipulator\n",null,0],["filter_backtrace","OptionParser::ParseError","Ruby/classes/OptionParser/ParseError.html#method-c-filter_backtrace","(array)","",null,0],["filter_by","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-filter_by","(constraint)","",null,1],["filter_methods","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-filter_methods","(found, name)","<p>Filters the methods in <code>found</code> trying to find a match for\n<code>name</code>.\n",null,0],["filter_proxies","ActionDispatch::RemoteIp::GetIp","Rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-filter_proxies","(ips)","",null,1],["filtered_env","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_env","()","<p>Return a hash of request.env with all sensitive data replaced.\n",null,1],["filtered_location","ActionDispatch::Http::FilterRedirect","Rails/classes/ActionDispatch/Http/FilterRedirect.html#method-i-filtered_location","()","",null,1],["filtered_parameters","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_parameters","()","<p>Return a hash of parameters with all sensitive data replaced.\n",null,1],["filtered_path","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_path","()","<p>Reconstructed a path with all sensitive GET parameters replaced.\n",null,1],["filtered_query_string","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_query_string","()","",null,1],["final","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-final","()","<p>Returns the remaining data held in the cipher object. Further calls to\nCipher#update or Cipher#final …\n",null,0],["find","Encoding","Ruby/classes/Encoding.html#method-c-find","(p1)","<p>Search the encoding with specified <em>name</em>. <em>name</em> should be a\nstring or symbol.\n\n<pre><code>Encoding.find(&quot;US-ASCII&quot;) ...</code></pre>\n",null,0],["find","Enumerable","Ruby/classes/Enumerable.html#method-i-find","(p1 = v1)","<p>Passes each entry in <em>enum</em> to <em>block</em>. Returns the first for\nwhich <em>block</em> is not false.  If no object matches, …\n",null,0],["find","Find","Ruby/classes/Find.html#method-c-find","(*paths)","<p>Calls the associated block with the name of every file and directory listed\nas arguments, then recursively …\n",null,0],["find","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-find","(file , paths = $:)","",null,0],["find","Pathname","Ruby/classes/Pathname.html#method-i-find","()","<p>Iterates over the directory tree in a depth first manner, yielding a\nPathname for each file under “this” …\n",null,0],["find","Rinda::TupleBag","Ruby/classes/Rinda/TupleBag.html#method-i-find","(template)","<p>Finds a live tuple that matches <code>template</code>.\n",null,0],["find","Rinda::TupleBag::TupleBin","Ruby/classes/Rinda/TupleBag/TupleBin.html#method-i-find","()","",null,0],["find","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-find","(name, prefixes = [], partial = false, keys = [], options = {})","",null,1],["find","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-find","(*args, &block)","<p>Finds an object in the collection responding to the <code>id</code>. Uses\nthe same rules as <code>ActiveRecord::Base.find</code> …\n",null,1],["find","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find","(*args)","<p>Find by id - This can either be a specific id (1), a list of ids (1, 5, 6),\nor an array of ids ([5, 6, …\n",null,1],["find","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-find","(path)","<p>Finds engine with given path\n",null,1],["find","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-c-find","(klass, params=nil)","<p>GET show GET edit PATCH/PUT update DELETE destroy\n",null,1],["find","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-i-find","(dirs)","<p>Returns a hash that maps filenames under <code>dirs</code> (recursively) to\narrays with their annotations.\n",null,1],["find_alias_comment","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-find_alias_comment","(class_name, new_name, old_name)","<p>Finds the comment for an alias on <code>class_name</code> from\n<code>new_name</code> to <code>old_name</code>\n",null,0],["find_all","Enumerable","Ruby/classes/Enumerable.html#method-i-find_all","()","<p>Returns an array containing all elements of <code>enum</code> for which the\ngiven <code>block</code> returns a true value.\n<p>If no …\n",null,0],["find_all","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-find_all","()","",null,0],["find_all","Gem::DependencyResolver::APISet","Ruby/classes/Gem/DependencyResolver/APISet.html#method-i-find_all","(req)","<p>Return an array of APISpecification objects matching DependencyRequest\n<code>req</code>.\n",null,0],["find_all","Gem::DependencyResolver::CurrentSet","Ruby/classes/Gem/DependencyResolver/CurrentSet.html#method-i-find_all","(req)","",null,0],["find_all","Gem::DependencyResolver::IndexSet","Ruby/classes/Gem/DependencyResolver/IndexSet.html#method-i-find_all","(req)","<p>Return an array of IndexSpecification objects matching DependencyRequest\n<code>req</code>.\n",null,0],["find_all","Rinda::TupleBag","Ruby/classes/Rinda/TupleBag.html#method-i-find_all","(template)","<p>Finds all live tuples that match <code>template</code>.\n",null,0],["find_all","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-find_all","(name, prefixes = [], partial = false, keys = [], options = {})","",null,1],["find_all","ActionView::Resolver","Rails/classes/ActionView/Resolver.html#method-i-find_all","(name, prefix=nil, partial=false, details={}, key=nil, locals=[])","<p>Normalizes the arguments and passes it on to find_templates.\n",null,1],["find_all_by_name","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-find_all_by_name","(name, *requirements)","<p>Returns every spec that matches <code>name</code> and optional\n<code>requirements</code>.\n",null,0],["find_all_template","Rinda::TupleBag","Ruby/classes/Rinda/TupleBag.html#method-i-find_all_template","(tuple)","<p>Finds all tuples in the TupleBag which when treated as templates, match\n<code>tuple</code> and are alive.\n",null,0],["find_ancestor_local_symbol","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-find_ancestor_local_symbol","(symbol)","<p>Looks for a symbol in the #ancestors. See Context#find_local_symbol.\n",null,0],["find_attr_comment","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-find_attr_comment","(var_name, attr_name, read = nil, write = nil)","<p>Finds a comment for rb_define_attr, rb_attr or Document-attr.\n<p><code>var_name</code> is the C class variable the attribute …\n",null,0],["find_attribute","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_attribute","(name, singleton)","<p>Finds an attribute <code>name</code> with singleton value\n<code>singleton</code>.\n",null,0],["find_attribute_named","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_attribute_named","(name)","<p>Finds an attribute with <code>name</code> in this context\n",null,0],["find_beginning_of_week!","Date","Rails/classes/Date.html#method-c-find_beginning_of_week-21","(week_start)","<p>Returns week start day symbol (e.g. :monday), or raises an ArgumentError\nfor invalid day symbol.\n",null,1],["find_body","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-find_body","(class_name, meth_name, meth_obj, file_content, quiet = false)","<p>Find the C code corresponding to a Ruby method\n",null,0],["find_by","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_by","(*args)","<p>Finds the first record matching the specified conditions. There is no\nimplied ordering so if order matters, …\n",null,1],["find_by!","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_by-21","(*args)","<p>Like <code>find_by</code>, except that if no record is found, raises an\n<code>ActiveRecord::RecordNotFound</code> error.\n",null,1],["find_by_name","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-find_by_name","(name, *requirements)","<p>Find the best specification matching a <code>name</code> and\n<code>requirements</code>. Raises if the dependency doesn&#39;t resolve …\n",null,0],["find_by_path","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-find_by_path","(path)","<p>Return the best specification that contains the file matching\n<code>path</code>.\n",null,0],["find_by_sql","ActiveRecord::Querying","Rails/classes/ActiveRecord/Querying.html#method-i-find_by_sql","(sql, binds = [])","<p>Executes a custom SQL query against your database and returns all the\nresults. The results will be returned …\n",null,1],["find_c_enclosure","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-find_c_enclosure","(variable)","<p>Finds the enclosure (namespace) for the given C <code>variable</code>.\n",null,0],["find_class","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-find_class","(raw_name, name)","<p>Finds a RDoc::NormalClass or RDoc::NormalModule for <code>raw_name</code>\n",null,0],["find_class_comment","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-find_class_comment","(class_name, class_mod)","<p>Look for class or module documentation above Init_+class_name+(void), in a\nDocument-class <code>class_name</code> …\n",null,0],["find_class_method_named","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_class_method_named","(name)","<p>Finds a class method with <code>name</code> in this context\n",null,0],["find_class_named","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-find_class_named","(name)","<p>Finds a class or module with <code>name</code> in this namespace or its\ndescendants\n",null,0],["find_class_named","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-find_class_named","(name)","<p>Finds the class with <code>name</code> in all discovered classes\n",null,0],["find_class_named_from","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-find_class_named_from","(name, from)","<p>Finds the class with <code>name</code> starting in namespace\n<code>from</code>\n",null,0],["find_class_or_module","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-find_class_or_module","(name)","<p>Finds the class or module with <code>name</code>\n",null,0],["find_class_or_module","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-find_class_or_module","(name)","<p>See RDoc::TopLevel::find_class_or_module\n",null,0],["find_cmd_and_exec","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-i-find_cmd_and_exec","(commands, *args)","",null,1],["find_command","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-i-find_command","(cmd_name)","",null,0],["find_command_possibilities","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-i-find_command_possibilities","(cmd_name)","",null,0],["find_const_comment","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-find_const_comment","(type, const_name, class_name = nil)","<p>Finds a comment matching <code>type</code> and <code>const_name</code>\neither above the comment or in the matching Document- section. …\n",null,0],["find_constant_named","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_constant_named","(name)","<p>Finds a constant with <code>name</code> in this context\n",null,0],["find_dependencies","ActionView::DependencyTracker","Rails/classes/ActionView/DependencyTracker.html#method-c-find_dependencies","(name, template)","",null,1],["find_each","ActiveRecord::Batches","Rails/classes/ActiveRecord/Batches.html#method-i-find_each","(options = {})","<p>Looping through a collection of records from the database (using the\n<code>all</code> method, for example) is very …\n",null,1],["find_enclosing_module_named","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_enclosing_module_named","(name)","<p>Find a module at a higher scope\n",null,0],["find_executable","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-find_executable","(bin, path = nil)","<p>Searches for the executable <code>bin</code> on <code>path</code>.  The\ndefault path is your <code>PATH</code> environment variable. If that …\n",null,0],["find_executable","Rails::AppRailsLoader","Rails/classes/Rails/AppRailsLoader.html#method-c-find_executable","()","",null,1],["find_external_alias","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_external_alias","(name, singleton)","<p>Finds an external alias <code>name</code> with singleton value\n<code>singleton</code>.\n",null,0],["find_external_alias_named","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_external_alias_named","(name)","<p>Finds an external alias with <code>name</code> in this context\n",null,0],["find_file_named","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_file_named","(name)","<p>Finds a file with <code>name</code> in this context\n",null,0],["find_file_named","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-find_file_named","(name)","<p>Finds the file with <code>name</code> in all discovered files\n",null,0],["find_files","Gem","Ruby/classes/Gem.html#method-c-find_files","(glob, check_load_path=true)","<p>Returns a list of paths matching <code>glob</code> that can be used by a\ngem to pick up features from other gems. …\n",null,0],["find_first","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_first","()","",null,1],["find_first_recursive","REXML::Node","Ruby/classes/REXML/Node.html#method-i-find_first_recursive","()","<p>Find (and return) first subnode (recursively) for which the block evaluates\nto true. Returns <code>nil</code> if none …\n",null,0],["find_gem","Gem::Source::Local","Ruby/classes/Gem/Source/Local.html#method-i-find_gem","(gem_name, version=Gem::Requirement.default, prerelease=false)","",null,0],["find_gems_with_sources","Gem::DependencyInstaller","Ruby/classes/Gem/DependencyInstaller.html#method-i-find_gems_with_sources","(dep)","<p>Returns a list of pairs of gemspecs and source_uris that match\nGem::Dependency <code>dep</code> from both local (Dir.pwd) …\n",null,0],["find_header","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-find_header","(header, *paths)","<p>Instructs mkmf to search for the given <code>header</code> in any of the\n<code>paths</code> provided, and returns whether or not …\n",null,0],["find_in","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-i-find_in","(dir)","<p>Returns a hash that maps filenames under <code>dir</code> (recursively) to\narrays with their annotations. Only files …\n",null,1],["find_in_batches","ActiveRecord::Batches","Rails/classes/ActiveRecord/Batches.html#method-i-find_in_batches","(options = {})","<p>Yields each batch of records that was found by the find\n<code>options</code> as an array. The size of each batch is …\n",null,1],["find_in_cache","Gem::Commands::UnpackCommand","Ruby/classes/Gem/Commands/UnpackCommand.html#method-i-find_in_cache","(filename)","<p>Find cached filename in Gem.path. Returns nil if the file cannot be found.\n",null,0],["find_in_unresolved","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-find_in_unresolved","(path)","<p>Return currently unresolved specs that contain the file matching\n<code>path</code>.\n",null,0],["find_in_unresolved_tree","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-find_in_unresolved_tree","(path)","<p>Search through all unresolved deps and sub-dependencies and return specs\nthat contain the file matching …\n",null,0],["find_inactive_by_path","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-find_inactive_by_path","(path)","<p>Return the best specification that contains the file matching\n<code>path</code> amongst the specs that are not activated. …\n",null,0],["find_include_file","RDoc::Markup::PreProcess","Ruby/classes/RDoc/Markup/PreProcess.html#method-i-find_include_file","(name)","<p>Look for the given file in the directory containing the current file, and\nthen in each of the directories …\n",null,0],["find_index","Array","Ruby/classes/Array.html#method-i-find_index","(p1)","<p>Returns the <em>index</em> of the first object in <code>ary</code> such\nthat the object is <code>==</code> to <code>obj</code>.\n<p>If a block is given instead …\n",null,0],["find_index","Enumerable","Ruby/classes/Enumerable.html#method-i-find_index","(p1)","<p>Compares each entry in <em>enum</em> with <em>value</em> or passes to\n<em>block</em>.  Returns the index for the first for which …\n",null,0],["find_index","Matrix","Ruby/classes/Matrix.html#method-i-find_index","(*args)","",null,0],["find_instance_method_named","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_instance_method_named","(name)","<p>Finds an instance method with <code>name</code> in this context\n",null,0],["find_last","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_last","()","",null,1],["find_library","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-find_library","(lib, func, *paths, &b)","<p>Returns whether or not the entry point <code>func</code> can be found\nwithin the library <code>lib</code> in one of the <code>paths</code>\nspecified, …\n",null,0],["find_local_symbol","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_local_symbol","(symbol)","<p>Finds a method, constant, attribute, external alias, module or file named\n<code>symbol</code> in this context.\n",null,0],["find_local_symbol","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-find_local_symbol","(symbol)","<p>Finds a class or module named <code>symbol</code>\n",null,0],["find_method","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_method","(name, singleton)","<p>Finds a method named <code>name</code> with singleton value\n<code>singleton</code>.\n",null,0],["find_method_named","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_method_named","(name)","<p>Finds a instance or module method with <code>name</code> in this context\n",null,0],["find_methods","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-find_methods","(name)","<p>Yields items matching <code>name</code> including the store they were found\nin, the class being searched for, the …\n",null,0],["find_modifiers","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-find_modifiers","(comment, meth_obj)","<p>Handles modifiers in <code>comment</code> and updates <code>meth_obj</code>\nas appropriate.\n",null,0],["find_module_named","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_module_named","(name)","<p>Find a module with <code>name</code> using ruby&#39;s scoping rules\n",null,0],["find_module_named","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-find_module_named","(name)","<p>Finds the module with <code>name</code> in all discovered modules\n",null,0],["find_module_named","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-find_module_named","(name)","<p>Finds a module or class with <code>name</code>\n",null,0],["find_name","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-find_name","(full_name)","",null,0],["find_one","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_one","(id)","",null,1],["find_or_create_by","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-find_or_create_by","(attributes, &block)","<p>Finds the first record with the given attributes, or creates a record with\nthe attributes if one is not …\n",null,1],["find_or_create_by!","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-find_or_create_by-21","(attributes, &block)","<p>Like <code>find_or_create_by</code>, but calls <code>create!</code> so an\nexception is raised if the created record is invalid. …\n",null,1],["find_or_initialize_by","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-find_or_initialize_by","(attributes, &block)","<p>Like <code>find_or_create_by</code>, but calls <code>new</code> instead of\n<code>create</code>.\n",null,1],["find_override_comment","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-find_override_comment","(class_name, meth_obj)","<p>Finds a <code>Document-method</code> override for <code>meth_obj</code> on\n<code>class_name</code>\n",null,0],["find_pager_jruby","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-find_pager_jruby","(pager)","<p>Finds the given <code>pager</code> for jruby.  Returns an IO if\n<code>pager</code> was found.\n<p>Returns false if <code>pager</code> does not exist. …\n",null,0],["find_paths","Gem::Commands::WhichCommand","Ruby/classes/Gem/Commands/WhichCommand.html#method-i-find_paths","(package_name, dirs)","",null,0],["find_proxy","URI::Generic","Ruby/classes/URI/Generic.html#method-i-find_proxy","()","<p>returns a proxy URI. The proxy URI is obtained from environment variables\nsuch as http_proxy, ftp_proxy …\n",null,0],["find_rakefile_location","Rake::Application","Ruby/classes/Rake/Application.html#method-i-find_rakefile_location","()","",null,0],["find_rakefile_location","Rake::Application","Ruby/classes/Rake/Application.html#method-i-find_rakefile_location","()","",null,0],["find_reverse_dependencies","Gem::Commands::DependencyCommand","Ruby/classes/Gem/Commands/DependencyCommand.html#method-i-find_reverse_dependencies","(spec)","<p>Returns an Array of [specification, dep] that are satisfied by\n<code>spec</code>.\n",null,0],["find_runnable","Rake::AltSystem","Ruby/classes/Rake/AltSystem.html#method-i-find_runnable","(file)","",null,0],["find_some","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_some","(ids)","",null,1],["find_spec_by_name_and_version","Gem::DependencyInstaller","Ruby/classes/Gem/DependencyInstaller.html#method-i-find_spec_by_name_and_version","(gem_name, version = Gem::Requirement.default, prerelease = false)","<p>Finds a spec and the source_uri it came from for gem <code>gem_name</code>\nand <code>version</code>.  Returns an Array of specs …\n",null,0],["find_store","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-find_store","(name)","<p>Finds a store that matches <code>name</code> which can be the name of a\ngem, “ruby”, “home” or …\n",null,0],["find_symbol","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_symbol","(symbol)","<p>Look up <code>symbol</code>, first as a module, then as a local symbol.\n",null,0],["find_symbol_module","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-find_symbol_module","(symbol)","<p>Look up a module named <code>symbol</code>.\n",null,0],["find_system_command","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-find_system_command","(command)","<p>private functions\n",null,0],["find_take","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_take","()","",null,1],["find_template","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-find_template","(name, prefixes = [], partial = false, keys = [], options = {})","",null,1],["find_text_page","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-find_text_page","(file_name)","<p>Returns the RDoc::TopLevel that is a text file and has the given\n<code>file_name</code>\n",null,0],["find_type","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-find_type","(type, opt, *headers, &b)","<p>Returns where the static type <code>type</code> is defined.\n<p>You may also pass additional flags to <code>opt</code> which are then …\n",null,0],["find_type","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields.html#method-c-find_type","(field)","",null,1],["find_tzinfo","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-find_tzinfo","(name)","",null,1],["find_unique","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-find_unique","(all_hash)","<p>Finds unique classes/modules defined in <code>all_hash</code>, and returns\nthem as an array. Performs the alias updates …\n",null,0],["find_unresolved_default_spec","Gem","Ruby/classes/Gem.html#method-i-find_unresolved_default_spec","(path)","<p>Find a Gem::Specification of default gem from <code>path</code>\n",null,0],["find_with_associations","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_with_associations","()","",null,1],["find_with_ids","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_with_ids","(*ids)","",null,1],["find_zone","Time","Rails/classes/Time.html#method-c-find_zone","(time_zone)","",null,1],["find_zone!","Time","Rails/classes/Time.html#method-c-find_zone-21","(time_zone)","<p>Returns a TimeZone instance or nil, or raises an ArgumentError for invalid\ntimezones.\n",null,1],["finder","ActiveRecord::DynamicMatchers::FindBy","Rails/classes/ActiveRecord/DynamicMatchers/FindBy.html#method-i-finder","()","",null,1],["finder","ActiveRecord::DynamicMatchers::FindByBang","Rails/classes/ActiveRecord/DynamicMatchers/FindByBang.html#method-i-finder","()","",null,1],["finder","ActiveRecord::DynamicMatchers::Finder","Rails/classes/ActiveRecord/DynamicMatchers/Finder.html#method-i-finder","()","",null,1],["finger","Rinda::RingFinger","Ruby/classes/Rinda/RingFinger.html#method-c-finger","()","<p>Creates a singleton RingFinger and looks for a RingServer.  Returns the\ncreated RingFinger.\n",null,0],["finish","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-finish","()","<p>Finishes the converter. It returns the last part of the converted string.\n\n<pre><code>ec = Encoding::Converter.new(&quot;utf-8&quot;, ...</code></pre>\n",null,0],["finish","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-finish","()","<p>Finishes the HTTP session and closes the TCP connection. Raises IOError if\nthe session has not been started. …\n",null,0],["finish","Net::POP3","Ruby/classes/Net/POP3.html#method-i-finish","()","<p>Finishes a POP3 session and closes TCP connection.\n",null,0],["finish","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-finish","()","<p>Finishes the SMTP session and closes TCP connection. Raises IOError if not\nstarted.\n",null,0],["finish","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-finish","()","",null,0],["finish","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-finish","()","",null,0],["finish","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-finish","()","<p>Completes any unfinished option setup business such as filtering for\nexistent files, creating a regexp …\n",null,0],["finish","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-finish","()","<p>Closes the GzipFile object. Unlike Zlib::GzipFile#close, this method never\ncalls the close method of …\n",null,0],["finish","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-finish","()","<p>Finishes the stream and flushes output buffer.  If a block is given each\nchunk is yielded to the block …\n",null,0],["finish","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-i-finish","(name, id, payload)","",null,1],["finish","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-finish","(name, id, payload)","",null,1],["finish","ActiveSupport::Notifications::Fanout::Subscribers::Timed","Rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/Timed.html#method-i-finish","(name, id, payload)","",null,1],["finish","ActiveSupport::Notifications::Instrumenter","Rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-i-finish","(name, payload)","<p>Send a finish notification with <code>name</code> and <code>payload</code>.\n",null,1],["finish","ActiveSupport::Subscriber","Rails/classes/ActiveSupport/Subscriber.html#method-i-finish","(name, id, payload)","",null,1],["finish_page_dir","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-finish_page_dir","()","<p>Fixes the page_dir to be relative to the root_dir and adds the page_dir to\nthe files list.\n",null,0],["finish_resolve","Gem","Ruby/classes/Gem.html#method-c-finish_resolve","(request_set=Gem::RequestSet.new)","",null,0],["finished?","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-finished-3F","()","<p>Returns <code>true</code> if any thread has terminated and is ready to be\ncollected.\n",null,0],["finished?","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-finished-3F","()","<p>Returns <code>true</code> if any thread has terminated and is ready to be\ncollected.\n",null,0],["finished?","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-finished-3F","()","<p>Returns true if the stream is finished.\n",null,0],["finite?","BigDecimal","Ruby/classes/BigDecimal.html#method-i-finite-3F","()","<p>Returns True if the value is finite (not NaN or infinite)\n",null,0],["finite?","Float","Ruby/classes/Float.html#method-i-finite-3F","()","<p>Returns <code>true</code> if <em>flt</em> is a valid IEEE floating point\nnumber (it is not infinite, and <code>nan?</code> is <code>false</code>).\n",null,0],["fips_mode=","OpenSSL","Ruby/classes/OpenSSL.html#method-c-fips_mode-3D","(p1)","<p>Turns FIPS mode on or off. Turning on FIPS mode will obviously only have an\neffect for FIPS-capable installations …\n",null,0],["first","Array","Ruby/classes/Array.html#method-i-first","(*args)","<p>Returns the first element, or the first <code>n</code> elements, of the\narray. If the array is empty, the first form …\n",null,0],["first","Enumerable","Ruby/classes/Enumerable.html#method-i-first","(*args)","<p>Returns the first element, or the first <code>n</code> elements, of the\nenumerable. If the enumerable is empty, the …\n",null,0],["first","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-first","()","",null,0],["first","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-first","(element, path, namespaces=EMPTY_HASH)","",null,0],["first","REXML::XPath","Ruby/classes/REXML/XPath.html#method-c-first","(element, path=nil, namespaces=nil, variables={})","<p>Finds and returns the first node that matches the supplied xpath.\n<p>element &mdash; The context element\n<p>path &mdash; The …\n",null,0],["first","REXML::XPathParser","Ruby/classes/REXML/XPathParser.html#method-i-first","( path_stack, node )","<p>Performs a depth-first (document order) XPath search, and returns the first\nmatch.  This is the fastest, …\n",null,0],["first","Range","Ruby/classes/Range.html#method-i-first","(p1)","<p>Returns the first object in the range, or an array of the first\n<code>n</code> elements.\n\n<pre><code>(10..20).first     #=&gt; 10 ...\n</code></pre>\n",null,0],["first","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-first","(*args)","<p>Returns the first record, or the first <code>n</code> records, from the\ncollection. If the collection is empty, the …\n",null,1],["first","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-first","(limit = nil)","<p>Find the first record (or first N records if a parameter is supplied). If\nno order is defined it will …\n",null,1],["first","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-first","()","",null,1],["first","String","Rails/classes/String.html#method-i-first","(limit = 1)","<p>Returns the first character. If a limit is supplied, returns a substring\nfrom the beginning of the string …\n",null,1],["first!","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-first-21","()","<p>Same as <code>first</code> but raises\n<code>ActiveRecord::RecordNotFound</code> if no record is found. Note that\n<code>first!</code> accepts …\n",null,1],["first?","PrettyPrint","Ruby/classes/PrettyPrint.html#method-i-first-3F","()","<p>first? is a predicate to test the call is a first call to first? with\ncurrent group.\n<p>It is useful to format …\n",null,0],["first?","PrettyPrint::Group","Ruby/classes/PrettyPrint/Group.html#method-i-first-3F","()","",null,0],["first?","PrettyPrint::SingleLine","Ruby/classes/PrettyPrint/SingleLine.html#method-i-first-3F","()","",null,0],["first_lineno","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-first_lineno","()","<p>Returns the number of the first source line where the instruction sequence\nwas loaded from.\n<p>For example, …\n",null,0],["fix","BigDecimal","Ruby/classes/BigDecimal.html#method-i-fix","()","<p>Return the integer part of the number.\n",null,0],["fix_basic_object_inheritance","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-fix_basic_object_inheritance","()","<p>Fixes the erroneous <code>BasicObject &lt; Object</code> in 1.9.\n<p>Because we assumed all classes without a stated superclass …\n",null,0],["fixed_encoding?","Regexp","Ruby/classes/Regexp.html#method-i-fixed_encoding-3F","()","<p>Returns false if rxp is applicable to a string with any ASCII compatible\nencoding. Returns true otherwise. …\n",null,0],["fixture_is_cached?","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-c-fixture_is_cached-3F","(connection, table_name)","",null,1],["fixtures","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-fixtures","(*fixture_set_names)","",null,1],["flags=","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-flags-3D","(p1)","",null,0],["flash","Curses","Ruby/classes/Curses.html#method-c-flash","()","<p>Flashs the screen, for visual alarm on the terminal, if possible; otherwise\nit sounds the alert.\n<p>see also …\n",null,0],["flash","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-flash","()","<p>Access the contents of the flash. Use <code>flash[\"notice\"]</code> to read\na notice you put there or <code>flash[\"notice\"]</code> …\n",null,1],["flat_map","Enumerable","Ruby/classes/Enumerable.html#method-i-flat_map","()","<p>Returns a new array with the concatenated results of running <em>block</em>\nonce for every element in <em>enum</em>.\n<p>If …\n",null,0],["flat_map","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-flat_map","()","<p>Returns a new lazy enumerator with the concatenated results of running\n<em>block</em> once for every element in …\n",null,0],["flatten","Array","Ruby/classes/Array.html#method-i-flatten","(p1 = v1)","<p>Returns a new array that is a one-dimensional flattening of\n<code>self</code> (recursively).\n<p>That is, for every element …\n",null,0],["flatten","Hash","Ruby/classes/Hash.html#method-i-flatten","(*args)","<p>Returns a new array that is a one-dimensional flattening of this hash. That\nis, for every key or value …\n",null,0],["flatten","Set","Ruby/classes/Set.html#method-i-flatten","()","<p>Returns a new set that is a copy of the set, flattening each containing set\nrecursively.\n",null,0],["flatten!","Array","Ruby/classes/Array.html#method-i-flatten-21","(p1 = v1)","<p>Flattens <code>self</code> in place.\n<p>Returns <code>nil</code> if no modifications were made (i.e., the array\ncontains no subarrays.) …\n",null,0],["flatten!","Set","Ruby/classes/Set.html#method-i-flatten-21","()","<p>Equivalent to Set#flatten, but replaces the receiver with the result in\nplace.  Returns nil if no modifications …\n",null,0],["flock","File","Ruby/classes/File.html#method-i-flock","(p1)","<p>Locks or unlocks a file according to <em>locking_constant</em> (a logical\n<em>or</em> of the values in the table below). …\n",null,0],["floor","BigDecimal","Ruby/classes/BigDecimal.html#method-i-floor","(p1 = v1)","<p>Return the largest integer less than or equal to the value, as a\nBigDecimal.\n\n<pre><code>BigDecimal(&#39;3.14159&#39;).floor ...</code></pre>\n",null,0],["floor","Float","Ruby/classes/Float.html#method-i-floor","()","<p>Returns the largest integer less than or equal to <em>flt</em>.\n\n<pre><code>1.2.floor      #=&gt; 1\n2.0.floor      #=&gt; 2\n(-1.2).floor ...\n</code></pre>\n",null,0],["floor","Integer","Ruby/classes/Integer.html#method-i-floor","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["floor","Integer","Ruby/classes/Integer.html#method-i-floor","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["floor","Numeric","Ruby/classes/Numeric.html#method-i-floor","()","<p>Returns the largest integer less than or equal to <em>num</em>.\n<code>Numeric</code> implements this by converting <em>anInteger</em> …\n",null,0],["floor","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-floor","( number )","",null,0],["floor","Rational","Ruby/classes/Rational.html#method-i-floor","(*args)","<p>Returns the truncated value (toward negative infinity).\n\n<pre><code>Rational(3).floor      #=&gt; 3\nRational(2, 3).floor ...\n</code></pre>\n",null,0],["flow","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-flow","(str)","<p>Processes <code>str</code> converting attributes, HTML and specials\n",null,0],["flush","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-i-flush","()","<p>Flushes the TarWriter&#39;s IO\n",null,0],["flush","IO","Ruby/classes/IO.html#method-i-flush","()","<p>Flushes any buffered data within <em>ios</em> to the underlying operating\nsystem (note that this is Ruby internal …\n",null,0],["flush","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-flush","()","<p>Flushes buffered data to the SSLSocket.\n",null,0],["flush","PrettyPrint","Ruby/classes/PrettyPrint.html#method-i-flush","()","<p>outputs buffered data.\n",null,0],["flush","PrettyPrint::SingleLine","Ruby/classes/PrettyPrint/SingleLine.html#method-i-flush","()","",null,0],["flush","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-flush","()","",null,0],["flush","StringIO","Ruby/classes/StringIO.html#method-i-flush","()","",null,0],["flush","WEBrick::HTTPAuth::Htdigest","Ruby/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-flush","(output=nil)","<p>Flush the password database.  If <code>output</code> is given the database\nwill be written there instead of to the …\n",null,0],["flush","WEBrick::HTTPAuth::Htgroup","Ruby/classes/WEBrick/HTTPAuth/Htgroup.html#method-i-flush","(output=nil)","<p>Flush the group database.  If <code>output</code> is given the database\nwill be written there instead of to the original …\n",null,0],["flush","WEBrick::HTTPAuth::Htpasswd","Ruby/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-flush","(output=nil)","<p>Flush the password database.  If <code>output</code> is given the database\nwill be written there instead of to the …\n",null,0],["flush","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-flush","()","<p>Write all the attributes into the registry file.\n",null,0],["flush","Zlib::Deflate","Ruby/classes/Zlib/Deflate.html#method-i-flush","(p1 = v1)","<p>This method is equivalent to <code>deflate(&#39;&#39;, flush)</code>. This\nmethod is just provided to improve the …\n",null,0],["flush","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-flush","(p1 = v1)","<p>Flushes all the internal buffers of the GzipWriter object.  The meaning of\n<code>flush</code> is same as in Zlib::Deflate#deflate …\n",null,0],["flush","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-i-flush","()","",null,1],["flush_all!","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-c-flush_all-21","()","<p>Flush all log_subscribers&#39; logger.\n",null,1],["flush_left","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-flush_left","(text)","<p>Flush <code>text</code> left based on the shortest line\n",null,0],["flush_newline_if_pending","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-flush_newline_if_pending","(src)","",null,1],["flush_next_in","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-flush_next_in","()","<p>Flushes output buffer and returns all data in that buffer.  If a block is\ngiven each chunk is yielded …\n",null,0],["flush_next_out","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-flush_next_out","()","<p>Flushes output buffer and returns all data in that buffer.\n",null,0],["flush_sessions","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-flush_sessions","(p1 = v1)","<p>Removes sessions in the internal cache that have expired at\n<code>time</code>.\n",null,0],["fnmatch","File","Ruby/classes/File.html#method-c-fnmatch","(p1, p2, p3 = v3)","<p>Returns true if <em>path</em> matches against <em>pattern</em> The pattern\nis not a regular expression; instead it follows …\n",null,0],["fnmatch","Pathname","Ruby/classes/Pathname.html#method-i-fnmatch","(p1, p2 = v2)","<p>Return <code>true</code> if the receiver matches the given pattern.\n<p>See File.fnmatch.\n",null,0],["fnmatch?","File","Ruby/classes/File.html#method-c-fnmatch-3F","(p1, p2, p3 = v3)","<p>Returns true if <em>path</em> matches against <em>pattern</em> The pattern\nis not a regular expression; instead it follows …\n",null,0],["fnmatch?","Pathname","Ruby/classes/Pathname.html#method-i-fnmatch-3F","(p1, p2 = v2)","<p>Return <code>true</code> if the receiver matches the given pattern.\n<p>See File.fnmatch.\n",null,0],["font_path","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-font_path","(source, options = {})","<p>Computes the path to a font asset. Full paths from the document root will\nbe passed through.\n\n<pre>font_path(&quot;font&quot;) ...</pre>\n",null,1],["font_url","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-font_url","(source, options = {})","<p>Computes the full URL to a font asset. This will use <code>font_path</code>\ninternally, so most of their behaviors …\n",null,1],["for","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-for","(top_level, file_name, content, options, stats)","<p>Finds and instantiates the correct parser for the given\n<code>file_name</code> and <code>content</code>.\n",null,0],["for_cache","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-for_cache","()","<p>Creates a duplicate spec without large blobs that aren&#39;t used at\nruntime.\n",null,0],["for_class","HTML::Selector","Rails/classes/HTML/Selector.html#method-c-for_class","(cls)","<p>Creates a new selector for the given class name.\n",null,1],["for_current_gems","Gem::DependencyResolver","Ruby/classes/Gem/DependencyResolver.html#method-c-for_current_gems","(needed)","<p>Provide a DependencyResolver that queries only against the already\ninstalled gems.\n",null,0],["for_fd","BasicSocket","Ruby/classes/BasicSocket.html#method-c-for_fd","(p1)","<p>Returns a socket object which contains the file descriptor, <em>fd</em>.\n\n<pre><code># If invoked by inetd, STDIN/STDOUT/STDERR ...</code></pre>\n",null,0],["for_fd","IO","Ruby/classes/IO.html#method-c-for_fd","(*args)","<p>Synonym for <code>IO.new</code>.\n",null,0],["for_files","Sys","Ruby/classes/Sys.html#method-i-for_files","(*wildcards)","<p>Perform a block with each file matching a set of wildcards.\n",null,0],["for_id","HTML::Selector","Rails/classes/HTML/Selector.html#method-c-for_id","(id)","<p>Creates a new selector for the given id.\n",null,1],["for_spec?","Gem::DependencyResolver::DependencyConflict","Ruby/classes/Gem/DependencyResolver/DependencyConflict.html#method-i-for_spec-3F","(spec)","",null,0],["force_documentation=","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-force_documentation-3D","(value)","<p>Force the documentation of this object unless documentation has been turned\noff by :enddoc:\n",null,0],["force_encoding","RDoc::Comment","Ruby/classes/RDoc/Comment.html#method-i-force_encoding","(encoding)","<p>HACK dubious\n",null,0],["force_encoding","String","Ruby/classes/String.html#method-i-force_encoding","(p1)","<p>Changes the encoding to <code>encoding</code> and returns self.\n",null,0],["force_quotes?","CSV","Ruby/classes/CSV.html#method-i-force_quotes-3F","()","<p>Returns <code>true</code> if all output fields are quoted. See CSV::new for\ndetails.\n",null,0],["force_ssl","ActionController::ForceSSL::ClassMethods","Rails/classes/ActionController/ForceSSL/ClassMethods.html#method-i-force_ssl","(options = {})","<p>Force the request to this particular controller or specified actions to be\nunder HTTPS protocol.\n<p>If you …\n",null,1],["force_ssl_redirect","ActionController::ForceSSL","Rails/classes/ActionController/ForceSSL.html#method-i-force_ssl_redirect","(host_or_options = nil)","<p>Redirect the existing request to use the HTTPS protocol.\n<p>Parameters\n<p><code>host_or_options</code> - Either a host name …\n",null,1],["foreach","Addrinfo","Ruby/classes/Addrinfo.html#method-c-foreach","(nodename, service, family=nil, socktype=nil, protocol=nil, flags=nil, &block)","<p>iterates over the list of Addrinfo objects obtained by\nAddrinfo.getaddrinfo.\n\n<pre><code>Addrinfo.foreach(nil, 80) ...</code></pre>\n",null,0],["foreach","CSV","Ruby/classes/CSV.html#method-c-foreach","(path, options = Hash.new, &block)","<p>This method is intended as the primary interface for reading CSV files. \nYou pass a <code>path</code> and any <code>options</code> …\n",null,0],["foreach","Dir","Ruby/classes/Dir.html#method-c-foreach","(*args)","<p>Calls the block once for each entry in the named directory, passing the\nfilename of each entry as a parameter …\n",null,0],["foreach","IO","Ruby/classes/IO.html#method-c-foreach","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = {})","<p>Executes the block for every line in the named I/O port, where lines are\nseparated by <em>sep</em>.\n<p>If no block …\n",null,0],["foreach","Net::POP3","Ruby/classes/Net/POP3.html#method-c-foreach","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Starts a POP3 session and iterates over each POPMail object, yielding it to\nthe <code>block</code>. This method is …\n",null,0],["foreach","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-foreach","(path = nil, *rs)","<p>See IO.foreach when <code>path</code> is a file.\n<p>See Dir.foreach when <code>path</code> is a directory.\n",null,0],["foreign_key","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-foreign_key","(class_name, separate_class_name_and_id_with_underscore = true)","<p>Creates a foreign key name from a class name.\n<code>separate_class_name_and_id_with_underscore</code> sets whether …\n",null,1],["foreign_key","String","Rails/classes/String.html#method-i-foreign_key","(separate_class_name_and_id_with_underscore = true)","<p>Creates a foreign key name from a class name.\n<code>separate_class_name_and_id_with_underscore</code> sets whether …\n",null,1],["fork","Kernel","Ruby/classes/Kernel.html#method-i-fork","()","<p>Creates a subprocess. If a block is specified, that block is run in the\nsubprocess, and the subprocess …\n",null,0],["fork","Process","Ruby/classes/Process.html#method-c-fork","()","<p>Creates a subprocess. If a block is specified, that block is run in the\nsubprocess, and the subprocess …\n",null,0],["fork","Thread","Ruby/classes/Thread.html#method-c-fork","(*args)","<p>Basically the same as ::new. However, if class Thread is subclassed, then\ncalling <code>start</code> in that subclass …\n",null,0],["form","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-form","(method = \"post\", action = script_name, enctype = \"application/x-www-form-urlencoded\")","<p>Generate a Form element as a string.\n<p><code>method</code> should be either “get” or “post”, and …\n",null,0],["form_authenticity_param","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-form_authenticity_param","()","<p>The form&#39;s authenticity parameter. Override to provide your own.\n",null,1],["form_authenticity_token","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-form_authenticity_token","()","<p>Sets the token value for the current session.\n",null,1],["form_data=","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-form_data-3D","(params, sep = '&')","",null,0],["form_data?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-form_data-3F","()","",null,1],["form_for","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-form_for","(record, options = {}, &block)","<p>Creates a form that allows the user to create or update the attributes of a\nspecific model object.\n<p>The …\n",null,1],["form_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-form_tag","(url_for_options = {}, options = {}, &block)","<p>Starts a form tag that points the action to an url configured with\n<code>url_for_options</code> just like ActionController::Base#url_for …\n",null,1],["format","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-i-format","(format = nil, *args)","<p>Returns the contents of this Tms object as a formatted string, according to\na format string like that …\n",null,0],["format","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-format","(*opts)","",null,0],["format","Kernel","Ruby/classes/Kernel.html#method-i-format","(*args)","<p>Returns the string resulting from applying <em>format_string</em> to any\nadditional arguments.  Within the format …\n",null,0],["format","PrettyPrint","Ruby/classes/PrettyPrint.html#method-c-format","(output='', maxwidth=79, newline=\"\\n\", genspace=lambda {|n| ' ' * n})","<p>This is a convenience method which is same as follows:\n\n<pre><code>begin\n  q = PrettyPrint.new(output, maxwidth, newline, ...</code></pre>\n",null,0],["format","WEBrick::AccessLog","Ruby/classes/WEBrick/AccessLog.html#method-i-format","(format_string, params)","<p>Formats <code>params</code> according to <code>format_string</code> which\nis described in setup_params.\n",null,0],["format","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-format","(view_path = [])","<p>Returns the MIME type for the format used in the request.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">GET</span> <span class=\"ruby-regexp\">/posts/</span><span class=\"ruby-value\">5</span>.<span class=\"ruby-identifier\">xml</span>   <span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">request</span>.<span class=\"ruby-identifier\">format</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">Mime</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">XML</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["format=","RDoc::Comment","Ruby/classes/RDoc/Comment.html#method-i-format-3D","(format)","<p>Sets the format of this comment and resets any parsed document\n",null,0],["format=","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-format-3D","(extension)","<p>Sets the format by string extension, which can be used to force custom\nformats that are not controlled …\n",null,1],["format_date","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-format_date","(time)","<p>Formats <code>time</code> as an IMAP-style date.\n",null,0],["format_datetime","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-format_datetime","(time)","<p>Formats <code>time</code> as an IMAP-style date-time.\n",null,0],["format_paragraph","ActionMailer::MailHelper","Rails/classes/ActionMailer/MailHelper.html#method-i-format_paragraph","(text, len = 72, indent = 2)","<p>Returns <code>text</code> wrapped at <code>len</code> columns and indented\n<code>indent</code> spaces.\n\n<pre>my_text = &#39;Here is a sample text with ...</pre>\n",null,1],["format_text","Gem::Text","Ruby/classes/Gem/Text.html#method-i-format_text","(text, wrap, indent=0)","<p>Wraps <code>text</code> to <code>wrap</code> characters and optionally\nindents by <code>indent</code> characters\n",null,0],["formats","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-formats","()","",null,1],["formats=","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-formats-3D","(extensions)","<p>Sets the formats by string extensions. This differs from #format= by\nallowing you to set multiple, ordered …\n",null,1],["formatted_offset","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>Returns a formatted string of the offset from UTC, or an alternative string\nif the time zone is already …\n",null,1],["formatted_offset","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-formatted_offset","(colon=true, alternate_utc_string = nil)","<p>Returns the offset of this time zone as a formatted string, of the format\n“+HH:MM”.\n",null,1],["formatted_offset","DateTime","Rails/classes/DateTime.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>datetime = DateTime.civil(2000, 1, 1, 0, 0, 0, Rational(-6, 24))\ndatetime.formatted_offset         # …\n",null,1],["formatted_offset","Time","Rails/classes/Time.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>Returns the UTC offset as an +HH:MM formatted string.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2000</span>).<span class=\"ruby-identifier\">formatted_offset</span>        <span class=\"ruby-comment\"># =&gt; &quot;-06:00&quot; ...</span>\n</pre>\n",null,1],["formatted_program_filename","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-formatted_program_filename","(filename)","<p>Prefix and suffix the program filename the same as ruby.\n",null,0],["formatted_program_filename","Gem::Uninstaller","Ruby/classes/Gem/Uninstaller.html#method-i-formatted_program_filename","(filename)","",null,0],["formatter","RDoc::Generator::Markup","Ruby/classes/RDoc/Generator/Markup.html#method-i-formatter","()","<p>Creates an RDoc::Markup::ToHtmlCrossref formatter\n",null,0],["formatter","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-formatter","(io)","<p>Creates a new RDoc::Markup::Formatter.  If a formatter is given with -f,\nuse it.  If we&#39;re outputting …\n",null,0],["fortnight","Numeric","Rails/classes/Numeric.html#method-i-fortnight","()","",null,1],["fortnights","Numeric","Rails/classes/Numeric.html#method-i-fortnights","()","",null,1],["forty_two","Array","Rails/classes/Array.html#method-i-forty_two","()","<p>Equal to <code>self[41]</code>. Also known as accessing “the reddit”.\n",null,1],["fourth","Array","Rails/classes/Array.html#method-i-fourth","()","<p>Equal to <code>self[3]</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-node\">%w( a b c d e )</span>.<span class=\"ruby-identifier\">fourth</span> <span class=\"ruby-comment\"># =&gt; &quot;d&quot;</span>\n</pre>\n",null,1],["frac","BigDecimal","Ruby/classes/BigDecimal.html#method-i-frac","()","<p>Return the fractional part of the number.\n",null,0],["fragment=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-fragment-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["fragment_cache_key","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-fragment_cache_key","(key)","<p>Given a key (as described in <code>expire_fragment</code>), returns a key\nsuitable for use in reading, writing, or …\n",null,1],["fragment_exist?","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-fragment_exist-3F","(key, options = nil)","<p>Check if a cached fragment from the location signified by <code>key</code>\nexists (see <code>expire_fragment</code> for acceptable …\n",null,1],["framework_trace","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-framework_trace","()","",null,1],["framework_version","Rails::Info","Rails/classes/Rails/Info.html#method-c-framework_version","(framework)","",null,1],["frameworks","Rails::Info","Rails/classes/Rails/Info.html#method-c-frameworks","()","",null,1],["free","DL","Ruby/classes/DL.html#method-c-free","(p1)","<p>Free the memory at address <code>addr</code>\n",null,0],["free","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-free","()","<p>Get the free function for this pointer.  Returns  DL::CFunc or nil.\n",null,0],["free","Fiddle","Ruby/classes/Fiddle.html#method-c-free","(p1)","<p>Free the memory at address <code>addr</code>\n",null,0],["free","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-free","()","<p>Get the free function for this pointer.\n<p>Returns a new instance of Fiddle::Function.\n<p>See Fiddle::Function.new …\n",null,0],["free=","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-free-3D","(p1)","<p>Set the free function for this pointer to the DL::CFunc in\n<code>function</code>.\n",null,0],["free=","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-free-3D","(p1)","<p>Set the free function for this pointer to <code>function</code> in the\ngiven Fiddle::Function.\n",null,0],["freeze","Delegator","Ruby/classes/Delegator.html#method-i-freeze","","<p>Freeze both the object returned by _<em>getobj</em>_ and self.\n",null,0],["freeze","Module","Ruby/classes/Module.html#method-i-freeze","()","<p>Prevents further modifications to <em>mod</em>.\n<p>This method returns self.\n",null,0],["freeze","Object","Ruby/classes/Object.html#method-i-freeze","()","<p>Prevents further modifications to <em>obj</em>. A <code>RuntimeError</code>\nwill be raised if modification is attempted. There …\n",null,0],["freeze","Pathname","Ruby/classes/Pathname.html#method-i-freeze","()","<p>Freezes this Pathname.\n<p>See Object.freeze.\n",null,0],["freeze","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-freeze","()","<p>Clone and freeze the attributes hash such that associations are still\naccessible, even on destroyed records, …\n",null,1],["freeze","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-freeze","()","",null,1],["freeze","Thread","Rails/classes/Thread.html#method-i-freeze","()","",null,1],["fresh?","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-fresh-3F","(response)","<p>Check response freshness (Last-Modified and ETag) against request\nIf-Modified-Since and If-None-Match …\n",null,1],["fresh_when","ActionController::ConditionalGet","Rails/classes/ActionController/ConditionalGet.html#method-i-fresh_when","(record_or_options, additional_options = {})","<p>Sets the etag, <code>last_modified</code>, or both on the response and\nrenders a <code>304 Not Modified</code> response if the …\n",null,1],["frexp","Math","Ruby/classes/Math.html#method-c-frexp","(p1)","<p>Returns a two-element array containing the normalized fraction (a\n<code>Float</code>) and exponent (a <code>Fixnum</code>) of  …\n",null,0],["friday?","Date","Ruby/classes/Date.html#method-i-friday-3F","()","<p>Returns true if the date is Friday.\n",null,0],["friday?","Time","Ruby/classes/Time.html#method-i-friday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Friday.\n\n<pre><code>t = Time.local(1987, 12, 18)     #=&gt; 1987-12-18 00:00:00 -0600 ...\n</code></pre>\n",null,0],["friendly_path","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-friendly_path","()","<p>Friendly rendition of #path\n",null,0],["from","Gem::Package::TarHeader","Ruby/classes/Gem/Package/TarHeader.html#method-c-from","(stream)","<p>Creates a tar header from IO <code>stream</code>\n",null,0],["from","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-c-from","(ary)","",null,0],["from","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-from","(value, subquery_name = nil)","<p>Specifies table from which the records will be fetched. For example:\n\n<pre>Topic.select(&#39;title&#39;).from(&#39;posts&#39;) ...</pre>\n",null,1],["from","Array","Rails/classes/Array.html#method-i-from","(position)","<p>Returns the tail of the array from <code>position</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">from</span>(<span class=\"ruby-value\">0</span>)  <span class=\"ruby-comment\"># =&gt; [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]</span>\n<span class=\"ruby-node\">%w( a b ...\n</span></pre>\n",null,1],["from","String","Rails/classes/String.html#method-i-from","(position)","<p>Returns a substring from the given position to the end of the string. If\nthe position is negative, it …\n",null,1],["from_hash","JSON::GenericObject","Ruby/classes/JSON/GenericObject.html#method-i-from_hash","(object)","",null,0],["from_json","ActiveModel::Serializers::JSON","Rails/classes/ActiveModel/Serializers/JSON.html#method-i-from_json","(json, include_root=include_root_in_json)","<p>Sets the model <code>attributes</code> from a JSON string. Returns\n<code>self</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Serializers</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">JSON</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["from_list","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-c-from_list","(list)","<p>Turn an array of [name, version, platform] into an array of NameTuple\nobjects.\n",null,0],["from_module","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-c-from_module","(class_type, mod)","<p>Return a RDoc::ClassModule of class <code>class_type</code> that is a copy\nof module <code>module</code>. Used to promote modules …\n",null,0],["from_name","Process::GID","Ruby/classes/Process/GID.html#method-c-from_name","(p1)","",null,0],["from_name","Process::UID","Ruby/classes/Process/UID.html#method-c-from_name","(p1)","",null,0],["from_now","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-from_now","(time = ::Time.current)","",null,1],["from_now","Numeric","Rails/classes/Numeric.html#method-i-from_now","(time = ::Time.current)","<p>Reads best without arguments:  10.minutes.from_now\n",null,1],["from_prime_division","Integer","Ruby/classes/Integer.html#method-c-from_prime_division","(pd)","<p>Re-composes a prime factorization and returns the product.\n<p>See Prime#int_from_prime_division for more …\n",null,0],["from_prime_division","Integer","Ruby/classes/Integer.html#method-c-from_prime_division","(pd)","<p>Re-composes a prime factorization and returns the product.\n<p>See Prime#int_from_prime_division for more …\n",null,0],["from_rails_root","ActionView::LogSubscriber","Rails/classes/ActionView/LogSubscriber.html#method-i-from_rails_root","(string)","",null,1],["from_session_value","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-c-from_session_value","(value)","",null,1],["from_specs","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-c-from_specs","()","<p>Creates a DependencyList from the current specs.\n",null,0],["from_trusted_xml","Hash","Rails/classes/Hash.html#method-c-from_trusted_xml","(xml)","<p>Builds a Hash from XML just like <code>Hash.from_xml</code>, but also\nallows Symbol and YAML.\n",null,1],["from_xml","ActiveModel::Serializers::Xml","Rails/classes/ActiveModel/Serializers/Xml.html#method-i-from_xml","(xml)","<p>Sets the model <code>attributes</code> from a JSON string. Returns\n<code>self</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Serializers</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Xml</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["from_xml","Hash","Rails/classes/Hash.html#method-c-from_xml","(xml, disallowed_types = nil)","<p>Returns a Hash containing a collection of pairs when the key is the node\nname and the value is its content …\n",null,1],["from_yaml","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-from_yaml","(input)","<p>Special loader for YAML files.  When a Specification object is loaded from\na YAML file, it bypasses the …\n",null,0],["front","DRb","Ruby/classes/DRb.html#method-c-front","()","<p>Get the front object of the current server.\n<p>This raises a DRbServerNotFound error if there is no current …\n",null,0],["front","DRb::ExtServ","Ruby/classes/DRb/ExtServ.html#method-i-front","()","",null,0],["frozen?","Array","Ruby/classes/Array.html#method-i-frozen-3F","()","<p>Return <code>true</code> if this array is frozen (or temporarily frozen\nwhile being sorted). See also Object#frozen? …\n",null,0],["frozen?","Object","Ruby/classes/Object.html#method-i-frozen-3F","()","<p>Returns the freeze status of <em>obj</em>.\n\n<pre><code>a = [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ]\na.freeze    #=&gt; [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]\na.frozen?   #=&gt; ...\n</code></pre>\n",null,0],["frozen?","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-frozen-3F","()","<p>Returns <code>true</code> if the attributes hash has been frozen.\n",null,1],["fsync","IO","Ruby/classes/IO.html#method-i-fsync","()","<p>Immediately writes all buffered data in <em>ios</em> to disk. Note that\n<code>fsync</code> differs from using <code>IO#sync=</code>. The …\n",null,0],["fsync","StringIO","Ruby/classes/StringIO.html#method-i-fsync","()","",null,0],["ftype","File","Ruby/classes/File.html#method-c-ftype","(p1)","<p>Identifies the type of the named file; the return string is one of\n“<code>file</code>&#39;&#39;, “<code>directory</code>&#39;&#39;, …\n",null,0],["ftype","File::Stat","Ruby/classes/File/Stat.html#method-i-ftype","()","<p>Identifies the type of <em>stat</em>. The return string is one of:\n“<code>file</code>&#39;&#39;, “<code>directory</code>&#39;&#39;, “ …\n",null,0],["ftype","Pathname","Ruby/classes/Pathname.html#method-i-ftype","()","<p>Returns “type” of file (“file”, “directory”, etc).\n<p>See File.ftype.\n",null,0],["full_gem_path","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-full_gem_path","()","<p>The full path to the gem (install path + full name).\n",null,0],["full_message","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-full_message","(attribute, message)","<p>Returns a full message for a given attribute.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">full_message</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-string\">&#39;is invalid&#39;</span>) <span class=\"ruby-comment\"># =&gt; &quot;Name ...</span>\n</pre>\n",null,1],["full_messages","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-full_messages","()","<p>Returns all the full error messages in an array.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">validates_presence_of</span> :<span class=\"ruby-identifier\">name</span>, :<span class=\"ruby-identifier\">address</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["full_messages_for","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-full_messages_for","(attribute)","<p>Returns all the full error messages for a given attribute in an array.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">validates_presence_of</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["full_name","Gem::DependencyResolver::APISpecification","Ruby/classes/Gem/DependencyResolver/APISpecification.html#method-i-full_name","()","",null,0],["full_name","Gem::DependencyResolver::ActivationRequest","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html#method-i-full_name","()","",null,0],["full_name","Gem::DependencyResolver::IndexSpecification","Ruby/classes/Gem/DependencyResolver/IndexSpecification.html#method-i-full_name","()","",null,0],["full_name","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-full_name","()","<p>Full name of the tar entry\n",null,0],["full_name","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-full_name","()","<p>Returns the full name (name-version) of this Gem.  Platform information is\nincluded (name-version-platform) …\n",null,0],["full_name","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-full_name","()","<p>Return the fully qualified name of this class or module\n",null,0],["full_name","RDoc::Constant","Ruby/classes/RDoc/Constant.html#method-i-full_name","()","<p>Full constant name including namespace\n",null,0],["full_name","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-full_name","()","<p>The full name for this context.  This method is overridden by subclasses.\n",null,0],["full_name","RDoc::Extend","Ruby/classes/RDoc/Extend.html#method-i-full_name","()","<p>Full name based on #module\n",null,0],["full_name","RDoc::Include","Ruby/classes/RDoc/Include.html#method-i-full_name","()","<p>Full name based on #module\n",null,0],["full_name","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-full_name","()","<p>Full method/attribute name including namespace\n",null,0],["full_name","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-full_name","()","<p>Returns the relative name of this file\n",null,0],["full_name","RSS::Element","Ruby/classes/RSS/Element.html#method-i-full_name","()","",null,0],["full_name","RSS::ITunesChannelModel::ITunesCategory","Ruby/classes/RSS/ITunesChannelModel/ITunesCategory.html#method-i-full_name","()","",null,0],["full_name","RSS::ITunesChannelModel::ITunesImage","Ruby/classes/RSS/ITunesChannelModel/ITunesImage.html#method-i-full_name","()","",null,0],["full_name","RSS::ITunesChannelModel::ITunesOwner","Ruby/classes/RSS/ITunesChannelModel/ITunesOwner.html#method-i-full_name","()","",null,0],["full_name","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-full_name","()","",null,0],["full_name","RSS::ImageFaviconModel::ImageFavicon","Ruby/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-i-full_name","()","",null,0],["full_name","RSS::ImageItemModel::ImageItem","Ruby/classes/RSS/ImageItemModel/ImageItem.html#method-i-full_name","()","",null,0],["full_name","RSS::RDF","Ruby/classes/RSS/RDF.html#method-i-full_name","()","",null,0],["full_name","RSS::RDF::Li","Ruby/classes/RSS/RDF/Li.html#method-i-full_name","()","",null,0],["full_name","RSS::RDF::Li","Ruby/classes/RSS/RDF/Li.html#method-i-full_name","()","",null,0],["full_name","RSS::RDF::Li","Ruby/classes/RSS/RDF/Li.html#method-i-full_name","()","",null,0],["full_name","RSS::RDF::Seq","Ruby/classes/RSS/RDF/Seq.html#method-i-full_name","()","",null,0],["full_name","RSS::RDF::Seq","Ruby/classes/RSS/RDF/Seq.html#method-i-full_name","()","",null,0],["full_name","RSS::TaxonomyTopicModel::TaxonomyTopic","Ruby/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html#method-i-full_name","()","",null,0],["full_name","RSS::TaxonomyTopicsModel::TaxonomyTopics","Ruby/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-i-full_name","()","",null,0],["full_name","RSS::TrackBackModel10::TrackBackAbout","Ruby/classes/RSS/TrackBackModel10/TrackBackAbout.html#method-i-full_name","()","",null,0],["full_name","RSS::TrackBackModel10::TrackBackPing","Ruby/classes/RSS/TrackBackModel10/TrackBackPing.html#method-i-full_name","()","",null,0],["full_name","RSS::TrackBackModel20::TrackBackAbout","Ruby/classes/RSS/TrackBackModel20/TrackBackAbout.html#method-i-full_name","()","",null,0],["full_name","RSS::TrackBackModel20::TrackBackPing","Ruby/classes/RSS/TrackBackModel20/TrackBackPing.html#method-i-full_name","()","",null,0],["full_name","RSS::XML::Element","Ruby/classes/RSS/XML/Element.html#method-i-full_name","()","",null,0],["full_name=","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-full_name-3D","(full_name)","<p>Sets the full_name overriding any computed full name.\n<p>Set to <code>nil</code> to clear RDoc&#39;s cached value\n",null,0],["full_old_name","RDoc::Alias","Ruby/classes/RDoc/Alias.html#method-i-full_old_name","()","<p>Full old name including namespace\n",null,0],["full_spec","Gem::DependencyResolver::ActivationRequest","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html#method-i-full_spec","()","",null,0],["full_trace","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-full_trace","()","",null,1],["fullpath","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-fullpath","()","<p>Returns the <code>String</code> full path including params of the last URL\nrequested.\n\n<pre># get &quot;/articles&quot;\nrequest.fullpath ...</pre>\n",null,1],["fully_documented?","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-fully_documented-3F","()","<p>Does this context and its methods and constants all have documentation?\n<p>(Yes, fully documented doesn&#39;t …\n",null,0],["fully_documented?","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-fully_documented-3F","()","<p>The documentation status of this project.  <code>true</code> when 100%,\n<code>false</code> when less than 100% and <code>nil</code> when unknown. …\n",null,0],["fully_expanded_name","REXML::Namespace","Ruby/classes/REXML/Namespace.html#method-i-fully_expanded_name","()","<p>Fully expand the name, even if the prefix wasn&#39;t specified in the\nsource file.\n",null,0],["function","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-function","( elements, fname, rest )","",null,0],["future?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-future-3F","()","<p>Returns true if the current object&#39;s time is in the future.\n",null,1],["future?","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-future-3F","()","<p>Returns true if the date/time is in the future.\n",null,1],["future?","DateTime","Rails/classes/DateTime.html#method-i-future-3F","()","<p>Tells whether the DateTime object&#39;s datetime lies in the future.\n",null,1],["gamma","Math","Ruby/classes/Math.html#method-c-gamma","(p1)","<p>Calculates the gamma function of x.\n<p>Note that gamma(n) is same as fact(n-1) for integer n &gt; 0. However …\n",null,0],["garbage_collect","GC","Ruby/classes/GC.html#method-i-garbage_collect","()","<p>Initiates garbage collection, unless manually disabled.\n",null,0],["garbage_collect","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-garbage_collect","()","<p>Initiates garbage collection, unless manually disabled.\n",null,0],["gather_dependencies","Gem::DependencyInstaller","Ruby/classes/Gem/DependencyInstaller.html#method-i-gather_dependencies","()","<p>Gathers all dependencies necessary for the installation from local and\nremote sources unless the ignore_dependencies …\n",null,0],["gather_files","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-gather_files","(files)","<p>Gathers a set of parseable files from the files and directories listed in\n<code>files</code>.\n",null,0],["gcd","Integer","Ruby/classes/Integer.html#method-i-gcd","(p1)","<p>Returns the greatest common divisor (always positive).  0.gcd(x) and\nx.gcd(0) return abs(x).\n\n<pre><code>2.gcd(2) ...</code></pre>\n",null,0],["gcd","Integer","Ruby/classes/Integer.html#method-i-gcd","(p1)","<p>Returns the greatest common divisor (always positive).  0.gcd(x) and\nx.gcd(0) return abs(x).\n\n<pre><code>2.gcd(2) ...</code></pre>\n",null,0],["gcdlcm","Integer","Ruby/classes/Integer.html#method-i-gcdlcm","(p1)","<p>Returns an array; [int.gcd(int2), int.lcm(int2)].\n\n<pre><code>2.gcdlcm(2)                    #=&gt; [2, 2]\n3.gcdlcm(-7) ...\n</code></pre>\n",null,0],["gcdlcm","Integer","Ruby/classes/Integer.html#method-i-gcdlcm","(p1)","<p>Returns an array; [int.gcd(int2), int.lcm(int2)].\n\n<pre><code>2.gcdlcm(2)                    #=&gt; [2, 2]\n3.gcdlcm(-7) ...\n</code></pre>\n",null,0],["gem","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-gem","(name, *reqs)","<p>Declare that a gem of name <code>name</code> with <code>reqs</code>\nrequirements is needed.\n",null,0],["gem","Gem::RequestSet::GemDepedencyAPI","Ruby/classes/Gem/RequestSet/GemDepedencyAPI.html#method-i-gem","(name, *reqs)","",null,0],["gem","Kernel","Ruby/classes/Kernel.html#method-i-gem","(gem_name, *requirements)","<p>Use Kernel#gem to activate a specific version of <code>gem_name</code>.\n<p><code>requirements</code> is a list of version requirements …\n",null,0],["gem","Build","Rails/classes/Build.html#method-i-gem","()","",null,1],["gem","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-gem","(*args)","<p>Adds an entry into Gemfile for the supplied gem.\n\n<pre>gem &quot;rspec&quot;, group: :test\ngem &quot;technoweenie-restful-authentication&quot;, ...</pre>\n",null,1],["gem_dir","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-gem_dir","()","<p>Lazy accessor for the spec&#39;s gem directory.\n",null,0],["gem_dir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-gem_dir","()","<p>Returns the full path to this spec&#39;s gem directory. eg:\n/usr/local/lib/ruby/1.8/gems/mygem-1.0\n",null,0],["gem_dir","RDoc::RI::Paths","Ruby/classes/RDoc/RI/Paths.html#method-c-gem_dir","(name, version)","<p>The ri directory for the gem with <code>gem_name</code>.\n",null,0],["gem_file_list","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-gem_file_list","()","<p>List of gem file names to index.\n",null,0],["gem_group","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-gem_group","(*names, &block)","<p>Wraps gem entries inside a group.\n\n<pre>gem_group :development, :test do\n  gem &quot;rspec-rails&quot;\nend</pre>\n",null,1],["gem_original_require","Kernel","Ruby/classes/Kernel.html#method-i-gem_original_require","(path)","<p>The Kernel#require from before RubyGems was loaded.\n",null,0],["gem_paths","Gem::Commands::WhichCommand","Ruby/classes/Gem/Commands/WhichCommand.html#method-i-gem_paths","(spec)","",null,0],["gem_repository?","Gem::Doctor","Ruby/classes/Gem/Doctor.html#method-i-gem_repository-3F","()","<p>Are we doctoring a gem repository?\n",null,0],["gemdirs","RDoc::RI::Paths","Ruby/classes/RDoc/RI/Paths.html#method-c-gemdirs","(filter = :latest)","<p>The latest installed gems&#39; ri directories.  <code>filter</code> can be\n:all or :latest.\n<p>A <code>filter</code> :all includes …\n",null,0],["gemfile","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-gemfile","()","",null,1],["gemfile","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-gemfile","()","",null,1],["gemfile_entry","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-gemfile_entry","()","",null,1],["gems_dir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-gems_dir","()","<p>Returns the full path to the gems directory containing this spec&#39;s gem\ndirectory. eg: /usr/local/lib/ruby/1.8/gems …\n",null,0],["gemspec","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-gemspec","()","",null,1],["gen_relative_url","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-c-gen_relative_url","(path, target)","<p>Converts a target url to one that is relative to a given path\n",null,0],["gen_sub_directories","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-gen_sub_directories","()","<p>Create the directories the generated docs will live in if they don&#39;t\nalready exist.\n",null,0],["gen_url","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-gen_url","(url, text)","<p>Generate a link to <code>url</code> with content <code>text</code>. \nHandles the special cases for img: and link: described under …\n",null,0],["gen_url","RDoc::Markup::ToHtmlCrossref","Ruby/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-gen_url","(url, text)","<p>Generates links for <code>rdoc-ref:</code> scheme URLs and allows\nRDoc::Markup::ToHtml to handle other schemes.\n",null,0],["gen_url","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-gen_url","(url, text)","<p>Returns just the text of <code>link</code>, <code>url</code> is only used\nto determine the link type.\n",null,0],["gen_url","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-gen_url","(url, text)","<p>Creates a Markdown-style URL from <code>url</code> with <code>text</code>.\n",null,0],["generate","CSV","Ruby/classes/CSV.html#method-c-generate","(*args)","<p>This method wraps a String you provide, or an empty default String, in a\nCSV object which is passed to …\n",null,0],["generate","JSON","Ruby/classes/JSON.html#method-i-generate","(obj, opts = nil)","<p>Generate a JSON document from the Ruby data structure <em>obj</em> and\nreturn it. <em>state</em> is\n<p>a JSON::State object, …\n",null,0],["generate","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-c-generate","(p1, p2 = v2)","<p>Creates a new DH instance from scratch by generating the private and public\ncomponents alike.\n<p>Parameters …\n",null,0],["generate","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-c-generate","(p1)","<p>Creates a new DSA instance by generating a private/public key pair from\nscratch.\n<p>Parameters\n<p><code>size</code> is an …\n",null,0],["generate","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-c-generate","(p1, p2 = v2)","<p>Generates an RSA keypair.  <code>size</code> is an integer representing the\ndesired key size.  Keys smaller than 1024 …\n",null,0],["generate","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-c-generate","(p1, p2 = v2)","<p>Generates an RSA keypair.  <code>size</code> is an integer representing the\ndesired key size.  Keys smaller than 1024 …\n",null,0],["generate","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-generate","()","<p>Build the initial indices and output objects based on an array of TopLevel\nobjects containing the extracted …\n",null,0],["generate","RDoc::Generator::JsonIndex","Ruby/classes/RDoc/Generator/JsonIndex.html#method-i-generate","()","<p>Writes the JSON index to disk\n",null,0],["generate","RDoc::Generator::RI","Ruby/classes/RDoc/Generator/RI.html#method-i-generate","()","<p>Writes the parsed data store to disk for use by ri.\n",null,0],["generate","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-generate","()","<p>Generates documentation for <code>file_info</code> (from #parse_files) into\nthe output dir using the generator selected …\n",null,0],["generate","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-generate","()","<p>Generates RDoc and ri data\n",null,0],["generate","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-generate","()","<p>Generates RDoc and ri data\n",null,0],["generate","ActiveSupport::MessageVerifier","Rails/classes/ActiveSupport/MessageVerifier.html#method-i-generate","(value)","",null,1],["generate","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-generate","(what, *args)","<p>Generate something using a generator from Rails or a plugin. The second\nparameter is the argument string …\n",null,1],["generate_bin","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-generate_bin","()","<p>DOC: Missing docs or :nodoc:.\n",null,0],["generate_bin_script","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-generate_bin_script","(filename, bindir)","<p>Creates the scripts to run the applications in the gem.\n",null,0],["generate_bin_symlink","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-generate_bin_symlink","(filename, bindir)","<p>Creates the symlinks to run the applications in the gem.  Moves the symlink\nif the gem being installed …\n",null,0],["generate_class","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-generate_class","(klass, template_file = nil)","<p>Generates a class file for <code>klass</code>\n",null,0],["generate_class_files","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-generate_class_files","()","<p>Generate a documentation file for each class and module\n",null,0],["generate_default_dirs","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-generate_default_dirs","(install_destdir)","",null,0],["generate_event","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-i-generate_event","( event )","",null,0],["generate_file_files","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-generate_file_files","()","<p>Generate a documentation file for each file\n",null,0],["generate_index","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-generate_index","()","<p>Builds and installs indicies.\n",null,0],["generate_index","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-generate_index","()","<p>Generate an index page which lists all the classes which are documented.\n",null,0],["generate_key","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-generate_key","()","<p>See the OpenSSL documentation for EC_KEY_generate_key()\n",null,0],["generate_key","ActiveSupport::CachingKeyGenerator","Rails/classes/ActiveSupport/CachingKeyGenerator.html#method-i-generate_key","(salt, key_size=64)","<p>Returns a derived key suitable for use.  The default key_size is chosen to\nbe compatible with the default …\n",null,1],["generate_key","ActiveSupport::KeyGenerator","Rails/classes/ActiveSupport/KeyGenerator.html#method-i-generate_key","(salt, key_size=64)","<p>Returns a derived key suitable for use.  The default key_size is chosen to\nbe compatible with the default …\n",null,1],["generate_key!","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-generate_key-21","()","<p>Generates a private and public key unless a private key already exists. If\nthis DH instance was generated …\n",null,0],["generate_line","CSV","Ruby/classes/CSV.html#method-c-generate_line","(row, options = Hash.new)","<p>This method is a shortcut for converting a single row (Array) into a CSV\nString.\n<p>The <code>options</code> parameter …\n",null,0],["generate_message","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-generate_message","(attribute, type = :invalid, options = {})","<p>Translates an error message in its default scope\n(<code>activemodel.errors.messages</code>).\n<p>Error messages are first …\n",null,1],["generate_method_for_mime","AbstractController::Collector","Rails/classes/AbstractController/Collector.html#method-c-generate_method_for_mime","(mime)","",null,1],["generate_page","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-generate_page","(file)","<p>Generate a page file for <code>file</code>\n",null,0],["generate_prime","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-c-generate_prime","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Parameters\n<p><code>bits</code> - integer\n<p><code>safe</code> - boolean\n",null,0],["generate_railtie_name","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-generate_railtie_name","(class_or_module)","",null,1],["generate_servlet_not_found","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-generate_servlet_not_found","(path)","<p>Generates the 404 page for the RDoc servlet\n",null,0],["generate_servlet_root","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-generate_servlet_root","(installed)","<p>Generates the servlet root page for the RDoc servlet\n",null,0],["generate_sid","ActionDispatch::Session::Compatibility","Rails/classes/ActionDispatch/Session/Compatibility.html#method-i-generate_sid","()","",null,1],["generate_table_of_contents","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-generate_table_of_contents","()","<p>Generate an index page which lists all the classes which are documented.\n",null,0],["generate_test_dummy","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-generate_test_dummy","(force = false)","",null,1],["generate_windows_script","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-generate_windows_script","(filename, bindir)","<p>Creates windows .bat files for easy running of commands\n",null,0],["generated_feature_methods","ActiveRecord::Core::ClassMethods","Rails/classes/ActiveRecord/Core/ClassMethods.html#method-i-generated_feature_methods","()","",null,1],["generation_hook","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-c-generation_hook","(installer, specs)","<p>Post installs hook that generates documentation for each specification in\n<code>specs</code>\n",null,0],["generation_hook","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-c-generation_hook","(installer, specs)","<p>Post installs hook that generates documentation for each specification in\n<code>specs</code>\n",null,0],["generator","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-generator","()","<p>See the OpenSSL documentation for EC_GROUP_get0_generator()\n",null,0],["generator_descriptions","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-generator_descriptions","()","<p>Returns a properly-space list of generators and their descriptions.\n",null,0],["generator_for","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-generator_for","(store)","<p>Instantiates a Darkfish generator for <code>store</code>\n",null,0],["generator_name","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-generator_name","()","<p>Removes the namespaces and get the generator name. For example,\nRails::Generators::ModelGenerator will …\n",null,1],["generators","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-generators","(&blk)","",null,1],["get","GetoptLong","Ruby/classes/GetoptLong.html#method-i-get","()","<p>Get next option name and its argument, as an Array of two elements.\n<p>The option name is always converted …\n",null,0],["get","Net::FTP","Ruby/classes/Net/FTP.html#method-i-get","(remotefile, localfile = File.basename(remotefile), blocksize = DEFAULT_BLOCKSIZE)","<p>Retrieves <code>remotefile</code> in whatever mode the session is set (text\nor binary).  See #gettextfile and #getbinaryfile …\n",null,0],["get","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-get","(path, initheader = {}, dest = nil)","<p>Retrieves data from <code>path</code> on the connected-to host which may be\nan absolute path String or a URI to extract …\n",null,0],["get","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-get","(uri_or_host, path = nil, port = nil)","<p>Sends a GET request to the target and returns the HTTP response as a\nstring.  The target can either be …\n",null,0],["get","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-get","()","<p>Pulls the next token from the stream.\n",null,0],["get","ActionDispatch::Routing::Mapper::HttpHelpers","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-get","(*args, &block)","<p>Define a route that only recognizes HTTP GET. For supported arguments, see\nmatch\n\n<pre>get &#39;bacon&#39;, to: &#39;food#bacon&#39;</pre>\n",null,1],["get","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-get","(key)","<p>Get messages for <code>key</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">messages</span>   <span class=\"ruby-comment\"># =&gt; {:name=&gt;[&quot;can not be nil&quot;]}</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">get</span>(:<span class=\"ruby-identifier\">name</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["get","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-get","(key)","",null,1],["get2","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-get2","(path, initheader = nil)","",null,0],["get?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-get-3F","()","<p>Is this a GET (or HEAD) request? Equivalent to\n<code>request.request_method_symbol == :get</code>.\n",null,1],["get_all_gem_names","Gem::Command","Ruby/classes/Gem/Command.html#method-i-get_all_gem_names","()","<p>Get all gem names from the command line.\n",null,0],["get_all_gem_names_and_versions","Gem::Command","Ruby/classes/Gem/Command.html#method-i-get_all_gem_names_and_versions","()","<p>Get all [gem, version] from the command line.\n<p>An argument in the form gem:ver is pull apart into the gen …\n",null,0],["get_attributes","RSS::Element","Ruby/classes/RSS/Element.html#method-i-get_attributes","()","",null,0],["get_bool","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-get_bool","()","<p>Looks for a true or false token.  Returns false if TkFALSE or TkNIL are\nfound.\n",null,0],["get_byte","StringScanner","Ruby/classes/StringScanner.html#method-i-get_byte","()","<p>Scans one byte and returns it. This method is not multibyte character\nsensitive. See also: #getch.\n\n<pre><code>s = ...</code></pre>\n",null,0],["get_candidate_gems","Gem::Commands::CleanupCommand","Ruby/classes/Gem/Commands/CleanupCommand.html#method-i-get_candidate_gems","()","",null,0],["get_class_or_module","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-get_class_or_module","(container, ignore_constants = false)","<p>Look for the name of a class of module (optionally with a leading  &mdash; or\n<p>with  &mdash; separated named) and return …\n\n",null,0],["get_class_specification","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-get_class_specification","()","<p>Return a superclass, which can be either a constant of an expression\n",null,0],["get_constant","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-get_constant","()","<p>Parse a constant, which might be qualified by one or more class or module\nnames\n",null,0],["get_constant_with_optional_parens","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-get_constant_with_optional_parens","()","<p>Get a constant that may be surrounded by parens\n",null,0],["get_default_handler","XMLRPC::BasicServer","Ruby/classes/XMLRPC/BasicServer.html#method-i-get_default_handler","()","<p>Returns the default-handler, which is called when no handler for a\nmethod-name is found.\n<p>It is either …\n",null,0],["get_elements","REXML::Element","Ruby/classes/REXML/Element.html#method-i-get_elements","( xpath )","<p>Synonym for Element.to_a This is a little slower than calling elements.each\ndirectly.\n<p>xpath &mdash; any XPath …\n",null,0],["get_fields","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-get_fields","(key)","<p>Ruby 1.8.3 &mdash; Returns an array of header field strings corresponding to the\ncase-insensitive <code>key</code>.  This …\n",null,0],["get_file_and_line_from_caller","RSS::Utils","Ruby/classes/RSS/Utils.html#method-i-get_file_and_line_from_caller","(i=0)","",null,0],["get_first","REXML::XPathParser","Ruby/classes/REXML/XPathParser.html#method-i-get_first","(path, nodeset)","",null,0],["get_gems_to_cleanup","Gem::Commands::CleanupCommand","Ruby/classes/Gem/Commands/CleanupCommand.html#method-i-get_gems_to_cleanup","()","",null,0],["get_hosts_path","Win32::Resolv","Ruby/classes/Win32/Resolv.html#method-c-get_hosts_path","()","",null,0],["get_initial_token","Win32::SSPI::NegotiateAuth","Ruby/classes/Win32/SSPI/NegotiateAuth.html#method-i-get_initial_token","()","<p>Gets the initial Negotiate token. Returns it as a base64 encoded string\nsuitable for use in HTTP. Can …\n",null,0],["get_instance","WEBrick::HTTPServlet::AbstractServlet","Ruby/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-c-get_instance","(server, *options)","<p>Factory for servlet instances that will handle a request from\n<code>server</code> using <code>options</code> from the mount point. …\n",null,0],["get_instance","XMLRPC::WEBrickServlet","Ruby/classes/XMLRPC/WEBrickServlet.html#method-i-get_instance","(config, *options)","",null,0],["get_metadata","Gem::Commands::UnpackCommand","Ruby/classes/Gem/Commands/UnpackCommand.html#method-i-get_metadata","(path)","<p>Extracts the Gem::Specification and raw metadata from the .gem file at\n<code>path</code>.\n",null,0],["get_methods","XMLRPC::Service::Interface","Ruby/classes/XMLRPC/Service/Interface.html#method-i-get_methods","(obj, delim=\".\")","",null,0],["get_methods","XMLRPC::Service::PublicInstanceMethodsInterface","Ruby/classes/XMLRPC/Service/PublicInstanceMethodsInterface.html#method-i-get_methods","(obj, delim=\".\")","",null,0],["get_namespace","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-get_namespace","( node_set = nil )","<p>Helper method.\n",null,0],["get_no_proxy_from_env","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-get_no_proxy_from_env","()","<p>Returns list of no_proxy entries (if any) from the environment\n",null,0],["get_one_gem_name","Gem::Command","Ruby/classes/Gem/Command.html#method-i-get_one_gem_name","()","<p>Get a single gem name from the command line.  Fail if there is no gem name\nor if there is more than one …\n",null,0],["get_one_optional_argument","Gem::Command","Ruby/classes/Gem/Command.html#method-i-get_one_optional_argument","()","<p>Get a single optional argument from the command line.  If more than one\nargument is given, return only …\n",null,0],["get_option","GetoptLong","Ruby/classes/GetoptLong.html#method-i-get_option","()","<p>`get_option&#39; is an alias of `get&#39;.\n",null,0],["get_passwd","WEBrick::HTTPAuth::Htdigest","Ruby/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-get_passwd","(realm, user, reload_db)","<p>Retrieves a password from the database for <code>user</code> in\n<code>realm</code>.  If <code>reload_db</code> is true the database will be\n…\n",null,0],["get_passwd","WEBrick::HTTPAuth::Htpasswd","Ruby/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-get_passwd","(realm, user, reload_db)","<p>Retrieves a password from the database for <code>user</code> in\n<code>realm</code>.  If <code>reload_db</code> is true the database will be\n…\n",null,0],["get_passwd","WEBrick::HTTPAuth::UserDB","Ruby/classes/WEBrick/HTTPAuth/UserDB.html#method-i-get_passwd","(realm, user, reload_db=false)","<p>Retrieves a password in <code>realm</code> for <code>user</code> for the\nauth_type of this database.  <code>reload_db</code> is a dummy value. …\n",null,0],["get_path","Gem::Commands::UnpackCommand","Ruby/classes/Gem/Commands/UnpackCommand.html#method-i-get_path","(dependency)","<p>Return the full path to the cached gem file matching the given name and\nversion requirement.  Returns …\n",null,0],["get_primary_gems","Gem::Commands::CleanupCommand","Ruby/classes/Gem/Commands/CleanupCommand.html#method-i-get_primary_gems","()","",null,0],["get_print","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-get_print","(uri_or_host, path = nil, port = nil)","<p>Gets the body text from the target and outputs it to $stdout.  The target\ncan either be specified as …\n",null,0],["get_proxy_from_env","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-get_proxy_from_env","()","<p>Returns an HTTP proxy URI if one is set in the environment variables.\n",null,0],["get_resolv_info","Win32::Resolv","Ruby/classes/Win32/Resolv.html#method-c-get_resolv_info","()","",null,0],["get_response","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-get_response","(uri_or_host, path = nil, port = nil, &block)","<p>Sends a GET request to the target and returns the HTTP response as a\nNet::HTTPResponse object.  The target …\n",null,0],["get_screen_size","Readline","Ruby/classes/Readline.html#method-c-get_screen_size","()","<p>Returns the terminal&#39;s rows and columns.\n<p>See GNU Readline&#39;s rl_get_screen_size function.\n<p>Raises …\n",null,0],["get_service_hook","XMLRPC::BasicServer","Ruby/classes/XMLRPC/BasicServer.html#method-i-get_service_hook","()","<p>Returns the service-hook, which is called on each service request (RPC)\nunless it&#39;s <code>nil</code>.\n",null,0],["get_session","ActionDispatch::Session::CacheStore","Rails/classes/ActionDispatch/Session/CacheStore.html#method-i-get_session","(env, sid)","<p>Get a session from the cache.\n",null,1],["get_sorted_module_list","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-get_sorted_module_list","(classes)","<p>Return a list of the documented modules sorted by salience first, then by\nname.\n",null,0],["get_svninfo","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-get_svninfo","(klass)","<p>Try to extract Subversion information out of the first constant whose value\nlooks like a subversion  …\n",null,0],["get_symbol_or_name","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-get_symbol_or_name","()","<p>Extracts a name or symbol from the token stream.\n",null,0],["get_text","REXML::Element","Ruby/classes/REXML/Element.html#method-i-get_text","(path = nil)","<p>Returns the first child Text node, if any, or <code>nil</code> otherwise.\nThis method returns the actual <code>Text</code> node, …\n",null,0],["get_thread","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-get_thread","(num)","",null,0],["get_tk","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-get_tk","()","<p>Fetches the next token from the scanner\n",null,0],["get_tk_until","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-get_tk_until","(*tokens)","<p>Reads and returns all tokens up to one of <code>tokens</code>.  Leaves the\nmatched token in the token list.\n",null,0],["get_tkread","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-get_tkread","()","<p>Retrieves a String representation of the read tokens\n",null,0],["get_valid_ip","XMLRPC::WEBrickServlet","Ruby/classes/XMLRPC/WEBrickServlet.html#method-i-get_valid_ip","()","<p>Return the valid IP addresses that are allowed to connect to the server.\n<p>See also, XMLRPC::Server#set_valid_ip …\n",null,0],["get_value","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-get_value","(section, key)","",null,0],["getacl","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-getacl","(mailbox)","<p>Send the GETACL command along with specified <code>mailbox</code>. If this\nmailbox exists, an array containing objects …\n",null,0],["getaddress","IPSocket","Ruby/classes/IPSocket.html#method-c-getaddress","(p1)","<p>Lookups the IP address of <em>host</em>.\n\n<pre><code>IPSocket.getaddress(&quot;localhost&quot;)     #=&gt; &quot;127.0.0.1&quot;\nIPSocket.getaddress(&quot;ip6-localhost&quot;) ...\n</code></pre>\n",null,0],["getaddress","IPSocket","Ruby/classes/IPSocket.html#method-i-getaddress","(s)","<p>Returns a <code>String</code> based representation of a valid DNS hostname,\nIPv4 or IPv6 address.\n\n<pre><code>IPSocket.getaddress ...</code></pre>\n",null,0],["getaddress","Resolv","Ruby/classes/Resolv.html#method-c-getaddress","(name)","<p>Looks up the first IP address for <code>name</code>.\n",null,0],["getaddress","Resolv","Ruby/classes/Resolv.html#method-i-getaddress","(name)","<p>Looks up the first IP address for <code>name</code>.\n",null,0],["getaddress","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-getaddress","(name)","<p>Gets the IP address of <code>name</code> from the DNS resolver.\n<p><code>name</code> can be a Resolv::DNS::Name or a String.  Retrieved …\n",null,0],["getaddress","Resolv::Hosts","Ruby/classes/Resolv/Hosts.html#method-i-getaddress","(name)","<p>Gets the IP address of <code>name</code> from the hosts file.\n",null,0],["getaddresses","Resolv","Ruby/classes/Resolv.html#method-i-getaddresses","(name)","<p>Looks up all IP address for <code>name</code>.\n",null,0],["getaddresses","Resolv","Ruby/classes/Resolv.html#method-c-getaddresses","(name)","<p>Looks up all IP address for <code>name</code>.\n",null,0],["getaddresses","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-getaddresses","(name)","<p>Gets all IP addresses for <code>name</code> from the DNS resolver.\n<p><code>name</code> can be a Resolv::DNS::Name or a String.  Retrieved …\n",null,0],["getaddresses","Resolv::Hosts","Ruby/classes/Resolv/Hosts.html#method-i-getaddresses","(name)","<p>Gets all IP addresses for <code>name</code> from the hosts file.\n",null,0],["getaddrinfo","Addrinfo","Ruby/classes/Addrinfo.html#method-c-getaddrinfo","(p1, p2, p3 = v3, p4 = v4, p5 = v5, p6 = v6)","<p>returns a list of addrinfo objects as an array.\n<p>This method converts nodename (hostname) and service (port) …\n",null,0],["getaddrinfo","Socket","Ruby/classes/Socket.html#method-c-getaddrinfo","(p1, p2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7)","<p>Obtains address information for <em>nodename</em>:<em>servname</em>.\n<p><em>family</em> should be an address family such as: :INET, …\n",null,0],["getbinaryfile","Net::FTP","Ruby/classes/Net/FTP.html#method-i-getbinaryfile","(remotefile, localfile = File.basename(remotefile), blocksize = DEFAULT_BLOCKSIZE)","<p>Retrieves <code>remotefile</code> in binary mode, storing the result in\n<code>localfile</code>. If <code>localfile</code> is nil, returns retrieved\n…\n",null,0],["getbkgd","Curses::Window","Ruby/classes/Curses/Window.html#method-i-getbkgd","()","<p>Returns an Interer (<code>ch</code>) for the character property in the\ncurrent window.\n",null,0],["getbyte","ARGF","Ruby/classes/ARGF.html#method-i-getbyte","()","<p>Gets the next 8-bit byte (0..255) from <code>ARGF</code>. Returns\n<code>nil</code> if called at the end of the stream.\n<p>For example: …\n",null,0],["getbyte","IO","Ruby/classes/IO.html#method-i-getbyte","()","<p>Gets the next 8-bit byte (0..255) from <em>ios</em>. Returns\n<code>nil</code> if called at end of file.\n\n<pre><code>f = File.new(&quot;testfile&quot;) ...</code></pre>\n",null,0],["getbyte","String","Ruby/classes/String.html#method-i-getbyte","(p1)","<p>returns the <em>index</em>th byte as an integer.\n",null,0],["getbyte","StringIO","Ruby/classes/StringIO.html#method-i-getbyte","()","<p>See IO#getbyte.\n",null,0],["getbyte","StringScanner","Ruby/classes/StringScanner.html#method-i-getbyte","()","<p>Equivalent to #get_byte. This method is obsolete; use #get_byte instead.\n",null,0],["getbyte","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-getbyte","()","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["getc","ARGF","Ruby/classes/ARGF.html#method-i-getc","()","<p>Reads the next character from <code>ARGF</code> and returns it as a\n<code>String</code>. Returns <code>nil</code> at the end of the stream. …\n",null,0],["getc","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-getc","()","<p>Read one byte from the tar entry\n",null,0],["getc","IO","Ruby/classes/IO.html#method-i-getc","()","<p>Reads a one-character string from <em>ios</em>. Returns <code>nil</code> if\ncalled at end of file.\n\n<pre><code>f = File.new(&quot;testfile&quot;) ...</code></pre>\n",null,0],["getc","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-getc","()","<p>Reads one character from the stream.  Returns nil if called at end of file.\n",null,0],["getc","StringIO","Ruby/classes/StringIO.html#method-i-getc","()","<p>See IO#getc.\n",null,0],["getc","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-getc","()","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["getch","Curses","Ruby/classes/Curses.html#method-c-getch","()","<p>Read and returns a character from the window.\n<p>See Curses::Key to all the function KEY_* available\n",null,0],["getch","Curses::Window","Ruby/classes/Curses/Window.html#method-i-getch","()","<p>Read and returns a character from the window.\n<p>See Curses::Key to all the function KEY_* available\n",null,0],["getch","IO","Ruby/classes/IO.html#method-i-getch","(*args)","<p>Reads and returns a character in raw mode.\n<p>You must require &#39;io/console&#39; to use this method.\n",null,0],["getch","IO::readable","Ruby/classes/IO/readable.html#method-i-getch","(*args)","",null,0],["getch","StringScanner","Ruby/classes/StringScanner.html#method-i-getch","()","<p>Scans one character and returns it. This method is multibyte character\nsensitive.\n\n<pre><code>s = StringScanner.new(&quot;ab&quot;) ...</code></pre>\n",null,0],["getdir","Net::FTP","Ruby/classes/Net/FTP.html#method-i-getdir","()","",null,0],["getegid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-getegid","()","<p>Returns the effective group ID for this process. Not available on all\nplatforms.\n\n<pre><code>Process.egid   #=&gt; 500\n</code></pre>\n",null,0],["geteuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-geteuid","()","<p>Returns the effective user ID for this process.\n\n<pre><code>Process.euid   #=&gt; 501\n</code></pre>\n",null,0],["getgid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-getgid","()","<p>Returns the (real) group ID for this process.\n\n<pre><code>Process.gid   #=&gt; 500\n</code></pre>\n",null,0],["getgm","Time","Ruby/classes/Time.html#method-i-getgm","()","<p>Returns a new Time object representing <em>time</em> in UTC.\n\n<pre><code>t = Time.local(2000,1,1,20,15,1)   #=&gt; 2000-01-01 ...\n</code></pre>\n",null,0],["getgm","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-getgm","()","",null,1],["getgrent","Etc","Ruby/classes/Etc.html#method-c-getgrent","()","<p>Returns an entry from the /etc/group file.\n<p>The first time it is called it opens the file and returns the …\n",null,0],["getgrgid","Etc","Ruby/classes/Etc.html#method-c-getgrgid","(p1 = v1)","<p>Returns information about the group with specified integer\n<code>group_id</code>, as found in /etc/group.\n<p>The information …\n",null,0],["getgrnam","Etc","Ruby/classes/Etc.html#method-c-getgrnam","(p1)","<p>Returns information about the group with specified <code>name</code>, as\nfound in /etc/group.\n<p>The information is returned …\n",null,0],["gethostbyaddr","Socket","Ruby/classes/Socket.html#method-c-gethostbyaddr","(p1, p2 = v2)","<p>Obtains the host information for <em>address</em>.\n\n<pre><code>p Socket.gethostbyaddr([221,186,184,68].pack(&quot;CCCC&quot;))\n#=&gt; [&quot;carbon.ruby-lang.org&quot;, ...\n</code></pre>\n",null,0],["gethostbyname","Socket","Ruby/classes/Socket.html#method-c-gethostbyname","(p1)","<p>Obtains the host information for <em>hostname</em>.\n\n<pre><code>p Socket.gethostbyname(&quot;hal&quot;) #=&gt; [&quot;localhost&quot;, [&quot;hal&quot;], 2, ...\n</code></pre>\n",null,0],["gethostbyname","TCPSocket","Ruby/classes/TCPSocket.html#method-c-gethostbyname","(p1)","<p>Lookups host information by <em>hostname</em>.\n\n<pre><code>TCPSocket.gethostbyname(&quot;localhost&quot;)\n#=&gt; [&quot;localhost&quot;, [&quot;hal&quot;], ...\n</code></pre>\n",null,0],["gethostname","Socket","Ruby/classes/Socket.html#method-c-gethostname","()","<p>Returns the hostname.\n\n<pre><code>p Socket.gethostname #=&gt; &quot;hal&quot;\n</code></pre>\n<p>Note that it is not guaranteed to be able to convert …\n",null,0],["getlocal","Time","Ruby/classes/Time.html#method-i-getlocal","(p1 = v1)","<p>Returns a new Time object representing <em>time</em> in local time (using\nthe local time zone in effect for this …\n",null,0],["getlocal","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-getlocal","()","",null,1],["getlogin","Etc","Ruby/classes/Etc.html#method-c-getlogin","()","<p>Returns the short user name of the currently logged in user. Unfortunately,\nit is often rather easy to …\n",null,0],["getmouse","Curses","Ruby/classes/Curses.html#method-c-getmouse","()","<p>Returns coordinates of the mouse.\n<p>This will read and pop the mouse event data off the queue\n<p>See the BUTTON*, …\n",null,0],["getname","Resolv","Ruby/classes/Resolv.html#method-i-getname","(address)","<p>Looks up the hostname of <code>address</code>.\n",null,0],["getname","Resolv","Ruby/classes/Resolv.html#method-c-getname","(address)","<p>Looks up the hostname of <code>address</code>.\n",null,0],["getname","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-getname","(address)","<p>Gets the hostname for <code>address</code> from the DNS resolver.\n<p><code>address</code> must be a Resolv::IPv4, Resolv::IPv6 or a …\n",null,0],["getname","Resolv::Hosts","Ruby/classes/Resolv/Hosts.html#method-i-getname","(address)","<p>Gets the hostname of <code>address</code> from the hosts file.\n",null,0],["getnameinfo","Addrinfo","Ruby/classes/Addrinfo.html#method-i-getnameinfo","(p1 = v1)","<p>returns nodename and service as a pair of strings. This converts struct\nsockaddr in addrinfo to textual …\n",null,0],["getnameinfo","Socket","Ruby/classes/Socket.html#method-c-getnameinfo","(p1, p2 = v2)","<p>Obtains name information for <em>sockaddr</em>.\n<p><em>sockaddr</em> should be one of follows.\n<p>packed sockaddr string such as …\n",null,0],["getnames","Resolv","Ruby/classes/Resolv.html#method-c-getnames","(address)","<p>Looks up all hostnames for <code>address</code>.\n",null,0],["getnames","Resolv","Ruby/classes/Resolv.html#method-i-getnames","(address)","<p>Looks up all hostnames for <code>address</code>.\n",null,0],["getnames","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-getnames","(address)","<p>Gets all hostnames for <code>address</code> from the DNS resolver.\n<p><code>address</code> must be a Resolv::IPv4, Resolv::IPv6 or …\n",null,0],["getnames","Resolv::Hosts","Ruby/classes/Resolv/Hosts.html#method-i-getnames","(address)","<p>Gets all hostnames for <code>address</code> from the hosts file.\n",null,0],["getopts","OptionParser","Ruby/classes/OptionParser.html#method-c-getopts","(*args)","<p>See #getopts.\n",null,0],["getopts","OptionParser","Ruby/classes/OptionParser.html#method-i-getopts","(*args)","<p>Wrapper method for getopts.rb.\n\n<pre><code>params = ARGV.getopts(&quot;ab:&quot;, &quot;foo&quot;, &quot;bar:&quot;)\n# params[:a] = true   # -a ...</code></pre>\n",null,0],["getopts","OptionParser::Arguable","Ruby/classes/OptionParser/Arguable.html#method-i-getopts","(*args)","<p>Substitution of getopts is possible as follows. Also see\nOptionParser#getopts.\n\n<pre><code>def getopts(*args)\n  ($OPT ...\n</code></pre>\n",null,0],["getpeereid","BasicSocket","Ruby/classes/BasicSocket.html#method-i-getpeereid","()","<p>Returns the user and group on the peer of the UNIX socket. The result is a\ntwo element array which contains …\n",null,0],["getpeername","BasicSocket","Ruby/classes/BasicSocket.html#method-i-getpeername","()","<p>Returns the remote address of the socket as a sockaddr string.\n\n<pre><code>TCPServer.open(&quot;127.0.0.1&quot;, 1440) {|serv| ...\n</code></pre>\n",null,0],["getpgid","Process","Ruby/classes/Process.html#method-c-getpgid","(p1)","<p>Returns the process group ID for the given process id. Not available on all\nplatforms.\n\n<pre><code>Process.getpgid(Process.ppid()) ...</code></pre>\n",null,0],["getpgrp","Process","Ruby/classes/Process.html#method-c-getpgrp","()","<p>Returns the process group ID for this process. Not available on all\nplatforms.\n\n<pre><code>Process.getpgid(0)   #=&gt; ...\n</code></pre>\n",null,0],["getpriority","Process","Ruby/classes/Process.html#method-c-getpriority","(p1, p2)","<p>Gets the scheduling priority for specified process, process group, or user.\n<em>kind</em> indicates the kind of …\n",null,0],["getpty","PTY","Ruby/classes/PTY.html#method-c-getpty","(*args)","<p>Spawns the specified command on a newly allocated pty. You can also use the\nalias ::getpty.\n<p>The command&#39;s …\n",null,0],["getpwent","Etc","Ruby/classes/Etc.html#method-c-getpwent","()","<p>Returns an entry from the /etc/passwd file.\n<p>The first time it is called it opens the file and returns …\n",null,0],["getpwnam","Etc","Ruby/classes/Etc.html#method-c-getpwnam","(p1)","<p>Returns the /etc/passwd information for the user with specified login\n<code>name</code>.\n<p>The information is returned …\n",null,0],["getpwuid","Etc","Ruby/classes/Etc.html#method-c-getpwuid","(p1 = v1)","<p>Returns the /etc/passwd information for the user with the given integer\n<code>uid</code>.\n<p>The information is returned …\n",null,0],["getquota","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-getquota","(mailbox)","<p>Sends the GETQUOTA command along with specified <code>mailbox</code>. If\nthis mailbox exists, then an array containing …\n",null,0],["getquotaroot","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-getquotaroot","(mailbox)","<p>Sends the GETQUOTAROOT command along with specified <code>mailbox</code>.\nThis command is generally available to both …\n",null,0],["getresource","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-getresource","(name, typeclass)","<p>Look up the <code>typeclass</code> DNS resource of <code>name</code>.\n<p><code>name</code> must be a Resolv::DNS::Name or a String.\n<p><code>typeclass</code> should …\n",null,0],["getresources","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-getresources","(name, typeclass)","<p>Looks up all <code>typeclass</code> DNS resources for <code>name</code>. \nSee #getresource for argument details.\n",null,0],["getrlimit","Process","Ruby/classes/Process.html#method-c-getrlimit","(p1)","<p>Gets the resource limit of the process. <em>cur_limit</em> means current\n(soft) limit and <em>max_limit</em> means maximum …\n",null,0],["gets","ARGF","Ruby/classes/ARGF.html#method-i-gets","(*args)","<p>Returns the next line from the current file in <code>ARGF</code>.\n<p>By default lines are assumed to be separated by +$/+; …\n",null,0],["gets","CSV","Ruby/classes/CSV.html#method-i-gets","()","",null,0],["gets","IO","Ruby/classes/IO.html#method-i-gets","(*args)","<p>Reads the next “line&#39;&#39; from the I/O stream; lines are separated by\n<em>sep</em>. A separator of <code>nil</code> reads …\n",null,0],["gets","IRB::FileInputMethod","Ruby/classes/IRB/FileInputMethod.html#method-i-gets","()","<p>Reads the next line from this input method.\n<p>See IO#gets for more information.\n",null,0],["gets","IRB::InputMethod","Ruby/classes/IRB/InputMethod.html#method-i-gets","()","<p>Reads the next line from this input method.\n<p>See IO#gets for more information.\n",null,0],["gets","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-gets","(*rs)","",null,0],["gets","IRB::ReadlineInputMethod","Ruby/classes/IRB/ReadlineInputMethod.html#method-i-gets","()","<p>Reads the next line from this input method.\n<p>See IO#gets for more information.\n",null,0],["gets","IRB::StdioInputMethod","Ruby/classes/IRB/StdioInputMethod.html#method-i-gets","()","<p>Reads the next line from this input method.\n<p>See IO#gets for more information.\n",null,0],["gets","Kernel","Ruby/classes/Kernel.html#method-i-gets","(*args)","<p>Returns (and assigns to <code>$_</code>) the next line from the list of\nfiles in <code>ARGV</code> (or <code>$*</code>), or from standard input …\n",null,0],["gets","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-gets","(eol=$/, limit=nil)","<p>Reads the next “line+ from the stream.  Lines are separated by\n<code>eol</code>.  If <code>limit</code> is provided the result …\n",null,0],["gets","StringIO","Ruby/classes/StringIO.html#method-i-gets","(*args)","<p>See IO#gets.\n",null,0],["gets","XMP::StringInputMethod","Ruby/classes/XMP/StringInputMethod.html#method-i-gets","()","<p>Reads the next expression from this printer.\n<p>See IO#gets for more information.\n",null,0],["gets","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-gets","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["getservbyname","Socket","Ruby/classes/Socket.html#method-c-getservbyname","(p1, p2 = v2)","<p>Obtains the port number for <em>service_name</em>.\n<p>If <em>protocol_name</em> is not given, “tcp” is assumed.\n\n<pre><code>Socket.getservbyname(&quot;smtp&quot;) ...</code></pre>\n",null,0],["getservbyport","Socket","Ruby/classes/Socket.html#method-c-getservbyport","(p1, p2 = v2)","<p>Obtains the port number for <em>port</em>.\n<p>If <em>protocol_name</em> is not given, “tcp” is assumed.\n\n<pre><code>Socket.getservbyport(80) ...</code></pre>\n",null,0],["getservername","WEBrick::Utils","Ruby/classes/WEBrick/Utils.html#method-c-getservername","()","<p>The server hostname\n",null,0],["getsid","Process","Ruby/classes/Process.html#method-c-getsid","(p1 = v1)","<p>Returns the session ID for for the given process id. If not give, return\ncurrent process sid. Not available …\n",null,0],["getsockname","BasicSocket","Ruby/classes/BasicSocket.html#method-i-getsockname","()","<p>Returns the local address of the socket as a sockaddr string.\n\n<pre><code>TCPServer.open(&quot;127.0.0.1&quot;, 15120) {|serv| ...\n</code></pre>\n",null,0],["getsockopt","BasicSocket","Ruby/classes/BasicSocket.html#method-i-getsockopt","(p1, p2)","<p>Gets a socket option. These are protocol and system specific, see your\nlocal system documentation for …\n",null,0],["getstr","Curses","Ruby/classes/Curses.html#method-c-getstr","()","<p>This is equivalent to a series f Curses::Window.getch calls\n",null,0],["getstr","Curses::Window","Ruby/classes/Curses/Window.html#method-i-getstr","()","<p>This is equivalent to a series f Curses::Window.getch calls\n",null,0],["getter","RSS::BaseListener","Ruby/classes/RSS/BaseListener.html#method-i-getter","(uri, tag_name)","",null,0],["gettextfile","Net::FTP","Ruby/classes/Net/FTP.html#method-i-gettextfile","(remotefile, localfile = File.basename(remotefile))","<p>Retrieves <code>remotefile</code> in ASCII (text) mode, storing the result\nin <code>localfile</code>. If <code>localfile</code> is nil, returns …\n",null,0],["getuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-getuid","()","<p>Returns the (real) user ID of this process.\n\n<pre><code>Process.uid   #=&gt; 501\n</code></pre>\n",null,0],["getutc","Time","Ruby/classes/Time.html#method-i-getutc","()","<p>Returns a new Time object representing <em>time</em> in UTC.\n\n<pre><code>t = Time.local(2000,1,1,20,15,1)   #=&gt; 2000-01-01 ...\n</code></pre>\n",null,0],["getutc","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-getutc","()","",null,1],["getutc","DateTime","Rails/classes/DateTime.html#method-i-getutc","()","",null,1],["getwd","Dir","Ruby/classes/Dir.html#method-c-getwd","()","<p>Returns the path to the current working directory of this process as a\nstring.\n\n<pre><code>Dir.chdir(&quot;/tmp&quot;)   #=&gt; ...\n</code></pre>\n",null,0],["getwd","FileUtils","Ruby/classes/FileUtils.html#method-c-getwd","()","",null,0],["getwd","Pathname","Ruby/classes/Pathname.html#method-c-getwd","()","<p>Returns the current working directory as a Pathname.\n\n<pre><code>Pathname.getwd\n    #=&gt; #&lt;Pathname:/home/zzak/projects/ruby&gt;\n</code></pre>\n",null,0],["gid","File::Stat","Ruby/classes/File/Stat.html#method-i-gid","()","<p>Returns the numeric group id of the owner of <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).gid   #=&gt; 500\n</code></pre>\n",null,0],["gid","Process","Ruby/classes/Process.html#method-c-gid","()","<p>Returns the (real) group ID for this process.\n\n<pre><code>Process.gid   #=&gt; 500\n</code></pre>\n",null,0],["gid=","Process","Ruby/classes/Process.html#method-c-gid-3D","(p1)","<p>Sets the group ID for this process.\n",null,0],["gigabyte","Numeric","Rails/classes/Numeric.html#method-i-gigabyte","()","",null,1],["gigabytes","Numeric","Rails/classes/Numeric.html#method-i-gigabytes","()","",null,1],["git","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-git","(commands={})","<p>Run a command in git.\n\n<pre>git :init\ngit add: &quot;this.file that.rb&quot;\ngit add: &quot;onefile.rb&quot;, rm: &quot;badfile.cxx&quot;</pre>\n",null,1],["github","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-github","","<p>Allow Github Flavored Markdown\n",null,0],["gitignore","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/gitignore.html","","<p>.bundle/ log/*.log pkg/ &lt;% unless options &amp;&amp; options ==\n&#39;test/dummy&#39; -%&gt; &lt;%= …\n",null,1],["gitignore","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/gitignore.html","","<p># See help.github.com/articles/ignoring-files for more about ignoring\nfiles. # # If you find yourself …\n",null,1],["gitignore","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-gitignore","()","",null,1],["gitignore","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-gitignore","()","",null,1],["glob","Dir","Ruby/classes/Dir.html#method-c-glob","(p1, p2 = v2)","<p>Returns the filenames found by expanding <em>pattern</em> which is an\n<code>Array</code> of the patterns or the pattern <code>String</code> …\n",null,0],["glob","Pathname","Ruby/classes/Pathname.html#method-c-glob","(p1, p2 = v2)","<p>Returns or yields Pathname objects.\n\n<pre><code>Pathname.glob(&quot;config/&quot; &quot;*.rb&quot;)\n    #=&gt; [#&lt;Pathname:config/environment.rb&gt;, ...\n</code></pre>\n",null,0],["glob","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-glob","(pattern)","\n<pre><code>def sort(*filenames)\n  Sort.new(self, *filenames)\nend\n</code></pre>\n<p>Returns a Glob filter object, with the given <code>pattern</code> …\n",null,0],["global_variables","Kernel","Ruby/classes/Kernel.html#method-i-global_variables","()","<p>Returns an array of the names of global variables.\n\n<pre><code>global_variables.grep /std/   #=&gt; [:$stdin, :$stdout, ...\n</code></pre>\n",null,0],["globals","","Ruby/files/ruby/doc/globals_rdoc.html","","<p>Pre-defined variables\n<p>$! &mdash; The exception information message set by &#39;raise&#39;.\n<p>$@ &mdash; Array of backtrace …\n",null,0],["gm","Time","Ruby/classes/Time.html#method-c-gm","(*args)","<p>Creates a Time object based on given values, interpreted as UTC (GMT). The\nyear must be specified. Other …\n",null,0],["gmt?","Time","Ruby/classes/Time.html#method-i-gmt-3F","()","<p>Returns <code>true</code> if <em>time</em> represents a time in UTC (GMT).\n\n<pre><code>t = Time.now                        #=&gt; 2007-11-19 ...\n</code></pre>\n",null,0],["gmt?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmt-3F","()","",null,1],["gmt_offset","Time","Ruby/classes/Time.html#method-i-gmt_offset","()","<p>Returns the offset in seconds between the timezone of <em>time</em> and\nUTC.\n\n<pre><code>t = Time.gm(2000,1,1,20,15,1)   #=&gt; ...\n</code></pre>\n",null,0],["gmt_offset","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmt_offset","()","",null,1],["gmtime","Time","Ruby/classes/Time.html#method-i-gmtime","()","<p>Converts <em>time</em> to UTC (GMT), modifying the receiver.\n\n<pre><code>t = Time.now   #=&gt; 2007-11-19 08:18:31 -0600\nt.gmt? ...\n</code></pre>\n",null,0],["gmtime","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmtime","()","",null,1],["gmtoff","Time","Ruby/classes/Time.html#method-i-gmtoff","()","<p>Returns the offset in seconds between the timezone of <em>time</em> and\nUTC.\n\n<pre><code>t = Time.gm(2000,1,1,20,15,1)   #=&gt; ...\n</code></pre>\n",null,0],["gmtoff","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmtoff","()","",null,1],["grammar.en","","Ruby/files/ruby/lib/racc/rdoc/grammar_en_rdoc.html","","<p>Racc Grammar File Reference\n<p>Global Structure\n<p>Class Block and User Code Block\n",null,0],["grant_privilege","Process::GID","Ruby/classes/Process/GID.html#method-c-grant_privilege","(p1)","<p>Set the effective group ID, and if possible, the saved group ID of the\nprocess to the given <em>group</em>. Returns …\n",null,0],["grant_privilege","Process::UID","Ruby/classes/Process/UID.html#method-c-grant_privilege","(p1)","<p>Set the effective user ID, and if possible, the saved user ID of the\nprocess to the given <em>user</em>. Returns …\n",null,0],["grapheme_length","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-grapheme_length","()","<p>Returns the number of grapheme clusters in the string.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;क्षि&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">length</span>   <span class=\"ruby-comment\"># =&gt; 4</span>\n<span class=\"ruby-string\">&#39;क्षि&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">grapheme_length</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["great_job","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-great_job","()","<p>A report that says you did a great job!\n",null,0],["gregorian","Date","Ruby/classes/Date.html#method-i-gregorian","()","<p>This method is equivalent to new_start(Date::GREGORIAN).\n",null,0],["gregorian?","Date","Ruby/classes/Date.html#method-i-gregorian-3F","()","<p>Retunrs true if the date is on or after the day of calendar reform.\n\n<pre><code>Date.new(1582,10,15).gregorian?   ...</code></pre>\n",null,0],["gregorian_leap?","Date","Ruby/classes/Date.html#method-c-gregorian_leap-3F","(p1)","<p>Returns true if the given year is a leap year of the proleptic Gregorian\ncalendar.\n\n<pre><code>Date.gregorian_leap?(1900) ...</code></pre>\n",null,0],["grep","Enumerable","Ruby/classes/Enumerable.html#method-i-grep","(p1)","<p>Returns an array of every element in <em>enum</em> for which <code>Pattern\n=== element</code>. If the optional <em>block</em> is supplied, …\n",null,0],["grep","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-grep","(p1)","",null,0],["group","Etc","Ruby/classes/Etc.html#method-c-group","()","<p>Provides a convenient Ruby iterator which executes a block for each entry\nin the /etc/group file.\n<p>The …\n",null,0],["group","Gem::RequestSet::GemDepedencyAPI","Ruby/classes/Gem/RequestSet/GemDepedencyAPI.html#method-i-group","(*what)","",null,0],["group","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-group","()","<p>Returns a constant <code>OpenSSL::EC::Group</code> that is tied to the key.\nModifying the returned group can make …\n",null,0],["group","PrettyPrint","Ruby/classes/PrettyPrint.html#method-i-group","(indent=0, open_obj='', close_obj='', open_width=open_obj.length, close_width=close_obj.length)","<p>Groups line break hints added in the block. The line break hints are all to\nbe used or not.\n<p>If <code>indent</code> …\n",null,0],["group","PrettyPrint::SingleLine","Ruby/classes/PrettyPrint/SingleLine.html#method-i-group","(indent=nil, open_obj='', close_obj='', open_width=nil, close_width=nil)","",null,0],["group","Thread","Ruby/classes/Thread.html#method-i-group","()","<p>Returns the <code>ThreadGroup</code> which contains <em>thr</em>, or nil if\nthe thread is not a member of any group.\n\n<pre><code>Thread.main.group ...</code></pre>\n",null,0],["group","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-group","(*args)","<p>Allows to specify a group attribute:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">group</span>(:<span class=\"ruby-identifier\">name</span>)\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">SELECT</span> <span class=\"ruby-string\">&quot;users&quot;</span>.* <span class=\"ruby-constant\">FROM</span> <span class=\"ruby-string\">&quot;users&quot;</span> <span class=\"ruby-constant\">GROUP</span> <span class=\"ruby-constant\">BY</span> <span class=\"ruby-identifier\">name</span>\n</pre>\n",null,1],["group=","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-group-3D","(p1)","<p>Returns the same object passed, not the group object associated with the\nkey. If you wish to access the …\n",null,0],["group_by","Enumerable","Ruby/classes/Enumerable.html#method-i-group_by","()","<p>Groups the collection by result of the block.  Returns a hash where the\nkeys are the evaluated result …\n",null,0],["group_entries","RDoc::Parser::ChangeLog","Ruby/classes/RDoc/Parser/ChangeLog.html#method-i-group_entries","(entries)","<p>Groups <code>entries</code> by date.\n",null,0],["group_sub","PrettyPrint","Ruby/classes/PrettyPrint.html#method-i-group_sub","()","",null,0],["grouped_collection_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-grouped_collection_select","(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::FormOptionsHelper#grouped_collection_select for\nform builders:\n\n<pre>&lt;%= form_for ...</pre>\n",null,1],["grouped_collection_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-grouped_collection_select","(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","<p>Returns <code>&lt;select&gt;</code>, <code>&lt;optgroup&gt;</code> and\n<code>&lt;option&gt;</code> tags for the collection of existing return …\n",null,1],["grouped_options_for_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-grouped_options_for_select","(grouped_options, selected_key = nil, options = {})","<p>Returns a string of <code>&lt;option&gt;</code> tags, like\n<code>options_for_select</code>, but wraps them with\n<code>&lt;optgroup&gt;</code> …\n",null,1],["groups","Process","Ruby/classes/Process.html#method-c-groups","()","<p>Get an <code>Array</code> of the gids of groups in the supplemental group\naccess list for this process.\n\n<pre><code>Process.groups ...</code></pre>\n",null,0],["groups","Rails","Rails/classes/Rails.html#method-c-groups","(*groups)","<p>Returns all rails groups for loading based on:\n<p>The Rails environment;\n<p>The environment variable RAILS_GROUPS …\n",null,1],["groups=","Process","Ruby/classes/Process.html#method-c-groups-3D","(p1)","<p>Set the supplemental group access list to the given <code>Array</code> of\ngroup IDs.\n\n<pre><code>Process.groups   #=&gt; [0, 1, 2, ...\n</code></pre>\n",null,0],["grpowned?","File","Ruby/classes/File.html#method-c-grpowned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective group\nid of the calling process is the owner …\n",null,0],["grpowned?","File::Stat","Ruby/classes/File/Stat.html#method-i-grpowned-3F","()","<p>Returns true if the effective group id of the process is the same as the\ngroup id of <em>stat</em>. On Windows …\n",null,0],["grpowned?","FileTest","Ruby/classes/FileTest.html#method-i-grpowned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective group\nid of the calling process is the owner …\n",null,0],["grpowned?","Pathname","Ruby/classes/Pathname.html#method-i-grpowned-3F","()","<p>See FileTest.grpowned?.\n",null,0],["gsub","Kernel","Ruby/classes/Kernel.html#method-i-gsub","(*args)","<p>Equivalent to <code>$_.gsub...</code>, except that <code>$_</code> receives\nthe modified result. Available only when -p/-n command …\n",null,0],["gsub","String","Ruby/classes/String.html#method-i-gsub","(*args)","<p>Returns a copy of <em>str</em> with the <em>all</em> occurrences of\n<em>pattern</em> substituted for the second argument. The <em>pattern</em>\n…\n",null,0],["gsub!","String","Ruby/classes/String.html#method-i-gsub-21","(*args)","<p>Performs the substitutions of <code>String#gsub</code> in place, returning\n<em>str</em>, or <code>nil</code> if no substitutions were performed. …\n",null,0],["guard_inspect_key","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-guard_inspect_key","()","",null,0],["guess","Kconv","Ruby/classes/Kconv.html#method-c-guess","(str)","<p>Guess input encoding by NKF.guess\n",null,0],["guess","NKF","Ruby/classes/NKF.html#method-c-guess","(p1)","<p>Returns guessed encoding of <em>str</em> by nkf routine.\n",null,0],["guess","OptionParser::Switch","Ruby/classes/OptionParser/Switch.html#method-c-guess","(arg)","<p>Guesses argument style from <code>arg</code>.  Returns corresponding\nOptionParser::Switch class (OptionalArgument, …\n",null,0],["guid","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-guid","()","<p>Returns GUID.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Application&#39;)\nputs tobj.guid ...</code></pre>\n",null,0],["guid","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-guid","()","<p>Returns guid string which specifies type library.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object ...</code></pre>\n",null,0],["gunzip","Gem","Ruby/classes/Gem.html#method-c-gunzip","(data)","<p>Zlib::GzipReader wrapper that unzips <code>data</code>.\n",null,0],["gzip","Gem","Ruby/classes/Gem.html#method-c-gzip","(data)","<p>Zlib::GzipWriter wrapper that zips <code>data</code>.\n",null,0],["gzip","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-gzip","(filename)","<p>Zlib::GzipWriter wrapper that gzips <code>filename</code> on disk.\n",null,0],["gzip_to","Gem::Package","Ruby/classes/Gem/Package.html#method-i-gzip_to","(io)","<p>Gzips content written to <code>gz_io</code> to <code>io</code>.\n",null,0],["h","ERB::Util","Ruby/classes/ERB/Util.html#method-c-h","(s)","",null,0],["h","RSS::Utils","Ruby/classes/RSS/Utils.html#method-i-h","(s)","",null,0],["h","ERB::Util","Rails/classes/ERB/Util.html#method-c-h","(s)","",null,1],["ha1","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-ha1","(credentials, password)","",null,1],["halted_callback","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-halted_callback","(event)","",null,1],["handle","RDoc::Markup::PreProcess","Ruby/classes/RDoc/Markup/PreProcess.html#method-i-handle","(text, code_object = nil, &block)","<p>Look for directives in the given <code>text</code>.\n<p>Options that we don&#39;t handle are yielded.  If the block returns …\n",null,0],["handle_arguments","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-handle_arguments","(arg_list)","<p>Handle the command arguments.\n",null,0],["handle_attr","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-handle_attr","(var_name, attr_name, read, write)","<p>Creates a new RDoc::Attr <code>attr_name</code> on class\n<code>var_name</code> that is either <code>read</code>, <code>write</code>\nor both\n",null,0],["handle_class_module","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-handle_class_module","(var_name, type, class_name, parent, in_module)","<p>Creates a new RDoc::NormalClass or RDoc::NormalModule based on\n<code>type</code> named <code>class_name</code> in <code>parent</code>\nwhich …\n",null,0],["handle_constants","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-handle_constants","(type, var_name, const_name, definition)","<p>Adds constants.  By providing some_value: at the start of the comment you\ncan override the C value of …\n",null,0],["handle_directive","RDoc::Markup::PreProcess","Ruby/classes/RDoc/Markup/PreProcess.html#method-i-handle_directive","(prefix, directive, param, code_object = nil, encoding = nil)","<p>Performs the actions described by <code>directive</code> and its parameter\n<code>param</code>.\n<p><code>code_object</code> is used for directives …\n",null,0],["handle_ifdefs_in","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-handle_ifdefs_in","(body)","<p>Removes #ifdefs that would otherwise confuse us\n",null,0],["handle_interrupt","Thread","Ruby/classes/Thread.html#method-c-handle_interrupt","(p1)","<p>Changes asynchronous interrupt timing.\n<p><em>interrupt</em> means asynchronous event and corresponding procedure …\n",null,0],["handle_method","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-handle_method","(type, var_name, meth_name, function, param_count, source_file = nil)","<p>Adds an RDoc::AnyMethod <code>meth_name</code> defined on a class or module\nassigned to <code>var_name</code>.  <code>type</code> is the type …\n",null,0],["handle_options","Gem::Command","Ruby/classes/Gem/Command.html#method-i-handle_options","(args)","<p>Handle the given list of arguments by parsing them and recording the\nresults.\n",null,0],["handle_options","Rake::Application","Ruby/classes/Rake/Application.html#method-i-handle_options","()","<p>Read and handle the command line options.\n",null,0],["handle_options","Rake::Application","Ruby/classes/Rake/Application.html#method-i-handle_options","()","<p>Read and handle the command line options.\n",null,0],["handle_pipe","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-handle_pipe","()","<p>Turns RDoc from stdin into HTML\n",null,0],["handle_rdoc_link","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-handle_rdoc_link","(url)","<p>Handles <code>rdoc-</code> type links for footnotes.\n",null,0],["handle_singleton","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-handle_singleton","(sclass_var, class_var)","<p>Registers a singleton class <code>sclass_var</code> as a singleton of\n<code>class_var</code>\n",null,0],["handle_special_CROSSREF","RDoc::Markup::ToHtmlCrossref","Ruby/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-handle_special_CROSSREF","(special)","<p>We&#39;re invoked when any text matches the CROSSREF pattern.  If we find\nthe corresponding reference, …\n",null,0],["handle_special_CROSSREF","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-handle_special_CROSSREF","(special)","<p>Removes escaping from the cross-references in <code>special</code>\n",null,0],["handle_special_CROSSREF","RDoc::Markup::ToLabel","Ruby/classes/RDoc/Markup/ToLabel.html#method-i-handle_special_CROSSREF","(special)","<p>Converts the CROSSREF <code>special</code> to plain text, removing the\nsuppression marker, if any\n",null,0],["handle_special_HARD_BREAK","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-handle_special_HARD_BREAK","(special)","<p><code>special</code> is a <code><br></code>\n",null,0],["handle_special_HARD_BREAK","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-handle_special_HARD_BREAK","(special)","<p><code>special</code> is a <code><br></code>\n",null,0],["handle_special_HARD_BREAK","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-handle_special_HARD_BREAK","(special)","<p>Adds a newline to the output\n",null,0],["handle_special_HARD_BREAK","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-handle_special_HARD_BREAK","(special)","<p>Adds a newline to the output\n",null,0],["handle_special_HYPERLINK","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-handle_special_HYPERLINK","(special)","<p><code>special</code> is a potential link.  The following schemes are\nhandled:\n<p><code>mailto:</code> &mdash; Inserted as-is.\n<p><code>http:</code> &mdash; Links are …\n",null,0],["handle_special_HYPERLINK","RDoc::Markup::ToHtmlCrossref","Ruby/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-handle_special_HYPERLINK","(special)","<p>Handles <code>rdoc-ref:</code> scheme links and allows RDoc::Markup::ToHtml\nto handle other schemes.\n",null,0],["handle_special_RDOCLINK","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-handle_special_RDOCLINK","(special)","<p><code>special</code> is an rdoc-schemed link that will be converted into a\nhyperlink.\n<p>For the <code>rdoc-ref</code> scheme the named …\n",null,0],["handle_special_RDOCLINK","RDoc::Markup::ToHtmlCrossref","Ruby/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-handle_special_RDOCLINK","(special)","<p><code>special</code> is an rdoc-schemed link that will be converted into a\nhyperlink. For the rdoc-ref scheme the …\n",null,0],["handle_special_RDOCLINK","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-handle_special_RDOCLINK","(special)","<p>Converts the rdoc-…: links into a Markdown.style links.\n",null,0],["handle_special_SUPPRESSED_CROSSREF","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-handle_special_SUPPRESSED_CROSSREF","(special)","<p>Removes preceding \\ from the suppressed crossref <code>special</code>\n",null,0],["handle_special_TIDYLINK","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-handle_special_TIDYLINK","(special)","<p>This <code>special</code> is a link where the label is different from the\nURL <code>label[url]</code> or <code>{long label}[url]</code>\n",null,0],["handle_special_TIDYLINK","RDoc::Markup::ToLabel","Ruby/classes/RDoc/Markup/ToLabel.html#method-i-handle_special_TIDYLINK","(special)","<p>Converts the TIDYLINK <code>special</code> to just the text part\n",null,0],["handle_special_TIDYLINK","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-handle_special_TIDYLINK","(special)","<p>Converts the RDoc markup tidylink into a Markdown.style link.\n",null,0],["handle_tab_width","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-handle_tab_width","(body)","<p>Normalizes tabs in <code>body</code>\n",null,0],["handle_unverified_request","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-handle_unverified_request","()","",null,1],["handle_unverified_request","ActionController::RequestForgeryProtection::ProtectionMethods::Exception","Rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/Exception.html#method-i-handle_unverified_request","()","",null,1],["handle_unverified_request","ActionController::RequestForgeryProtection::ProtectionMethods::NullSession","Rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/NullSession.html#method-i-handle_unverified_request","()","<p>This is the method that defines the application behavior when a request is\nfound to be unverified.\n",null,1],["handle_unverified_request","ActionController::RequestForgeryProtection::ProtectionMethods::ResetSession","Rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/ResetSession.html#method-i-handle_unverified_request","()","",null,1],["handler","DL::Importer","Ruby/classes/DL/Importer.html#method-i-handler","()","",null,0],["handler","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-handler","()","<p>The Fiddle::CompositeHandler instance\n<p>Will raise an error if no handlers are open.\n",null,0],["handler","WIN32OLE_EVENT","Ruby/classes/WIN32OLE_EVENT.html#method-i-handler","()","<p>returns handler object.\n",null,0],["handler=","WIN32OLE_EVENT","Ruby/classes/WIN32OLE_EVENT.html#method-i-handler-3D","(p1)","<p>sets event handler object. If handler object has onXXX method according to\nXXX event, then onXXX method …\n",null,0],["handler_for_rescue","ActiveSupport::Rescuable","Rails/classes/ActiveSupport/Rescuable.html#method-i-handler_for_rescue","(exception)","",null,1],["handlers","DL::CompositeHandler","Ruby/classes/DL/CompositeHandler.html#method-i-handlers","()","",null,0],["handlers","Fiddle::CompositeHandler","Ruby/classes/Fiddle/CompositeHandler.html#method-i-handlers","()","<p>Array of the currently loaded libraries.\n",null,0],["handles?","Gem::Command","Ruby/classes/Gem/Command.html#method-i-handles-3F","(args)","<p>True if the command handles the given argument list.\n",null,0],["handles_encoding?","ActionView::Template::Handlers::ERB","Rails/classes/ActionView/Template/Handlers/ERB.html#method-i-handles_encoding-3F","()","",null,1],["hasChildNodes","NQXML::Node","Ruby/classes/NQXML/Node.html#method-i-hasChildNodes","()","",null,0],["has_and_belongs_to_many","ActiveRecord::Associations::ClassMethods","Rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_and_belongs_to_many","(name, scope = nil, options = {}, &extension)","<p>Specifies a many-to-many relationship with another class. This associates\ntwo classes via an intermediate …\n",null,1],["has_attribute?","ActiveRecord::AttributeMethods","Rails/classes/ActiveRecord/AttributeMethods.html#method-i-has_attribute-3F","(attr_name)","<p>Returns <code>true</code> if the given attribute is in the attributes hash,\notherwise <code>false</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["has_attributes?","REXML::Element","Ruby/classes/REXML/Element.html#method-i-has_attributes-3F","()","<p>Evaluates to <code>true</code> if this element has any attributes set,\nfalse otherwise.\n",null,0],["has_colors?","Curses","Ruby/classes/Curses.html#method-c-has_colors-3F","()","<p>Returns <code>true</code> or <code>false</code> depending on whether the\nterminal has color capbilities.\n",null,0],["has_elements?","REXML::Element","Ruby/classes/REXML/Element.html#method-i-has_elements-3F","()","<p>Evaluates to <code>true</code> if this element has at least one child\nElement\n\n<pre><code>doc = Document.new &quot;&lt;a&gt;&lt;b/&gt;&lt;c&gt;Text&lt;/c&gt;&lt;/a&gt;&quot; ...</code></pre>\n",null,0],["has_errors?","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-has_errors-3F","()","<p>Check whether the resource has errors.\n",null,1],["has_expires?","Rinda::TupleBag","Ruby/classes/Rinda/TupleBag.html#method-i-has_expires-3F","()","<p><code>true</code> if the TupleBag to see if it has any expired entries.\n",null,0],["has_key?","CGI::QueryExtension","Ruby/classes/CGI/QueryExtension.html#method-i-has_key-3F","(*args)","<p>Returns true if a given query string parameter exists.\n",null,0],["has_key?","CSV::Row","Ruby/classes/CSV/Row.html#method-i-has_key-3F","(header)","<p>Returns <code>true</code> if there is a field with the given\n<code>header</code>.\n",null,0],["has_key?","DBM","Ruby/classes/DBM.html#method-i-has_key-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n",null,0],["has_key?","ENV","Ruby/classes/ENV.html#method-c-has_key-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,0],["has_key?","GDBM","Ruby/classes/GDBM.html#method-i-has_key-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n",null,0],["has_key?","Hash","Ruby/classes/Hash.html#method-i-has_key-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200 }\nh.has_key?(&quot;a&quot;)   #=&gt; ...\n</code></pre>\n",null,0],["has_key?","SDBM","Ruby/classes/SDBM.html#method-i-has_key-3F","(p1)","<p>Returns <code>true</code> if the database contains the given\n<code>key</code>.\n",null,0],["has_key?","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-has_key-3F","(attribute)","<p>aliases include?\n",null,1],["has_many","ActiveRecord::Associations::ClassMethods","Rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_many","(name, scope = nil, options = {}, &extension)","<p>Specifies a one-to-many association. The following methods for retrieval\nand query of collections of …\n",null,1],["has_name?","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-has_name-3F","( name, namespace = '' )","",null,0],["has_name?","REXML::Namespace","Ruby/classes/REXML/Namespace.html#method-i-has_name-3F","( other, ns=nil )","<p>Compares names optionally WITH namespaces\n",null,0],["has_named_route?","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-has_named_route-3F","(name)","<p>Query if the following named route was already defined.\n",null,1],["has_next?","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-has_next-3F","()","<p>Returns true if there are more events.  Synonymous with !empty?\n",null,0],["has_one","ActiveRecord::Associations::ClassMethods","Rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_one","(name, scope = nil, options = {})","<p>Specifies a one-to-one association with another class. This method should\nonly be used if the other class …\n",null,1],["has_secure_password","ActiveModel::SecurePassword::ClassMethods","Rails/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password","(options = {})","<p>Adds methods to set and authenticate against a BCrypt password. This\nmechanism requires you to have a …\n",null,1],["has_text?","REXML::Element","Ruby/classes/REXML/Element.html#method-i-has_text-3F","()","<p>Evaluates to <code>true</code> if this element has at least one Text child\n",null,0],["has_unit_tests?","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-has_unit_tests-3F","()","<p>True if this gem has files in test_files\n",null,0],["has_value?","DBM","Ruby/classes/DBM.html#method-i-has_value-3F","(p1)","<p>Returns true if the database contains the specified string value, false\notherwise.\n",null,0],["has_value?","ENV","Ruby/classes/ENV.html#method-c-has_value-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>value</code>.\n",null,0],["has_value?","GDBM","Ruby/classes/GDBM.html#method-i-has_value-3F","(p1)","<p>Returns true if the given value <em>v</em> exists within the database.\nReturns false otherwise.\n",null,0],["has_value?","Hash","Ruby/classes/Hash.html#method-i-has_value-3F","(p1)","<p>Returns <code>true</code> if the given value is present for some key in\n<em>hsh</em>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200 }\nh.has_value?(100) ...\n</code></pre>\n",null,0],["has_value?","SDBM","Ruby/classes/SDBM.html#method-i-has_value-3F","(p1)","<p>Returns <code>true</code> if the database contains the given\n<code>value</code>.\n",null,0],["has_value?","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-has_value-3F","( val )","<p>Returns true if specified value is found in the database.\n",null,0],["hash","Array","Ruby/classes/Array.html#method-i-hash","()","<p>Compute a hash-code for this array.\n<p>Two arrays with the same content will have the same hash code (and …\n",null,0],["hash","BigDecimal","Ruby/classes/BigDecimal.html#method-i-hash","()","<p>Creates a hash for this BigDecimal.\n<p>Two BigDecimals with equal sign, fractional part and exponent have …\n",null,0],["hash","Bignum","Ruby/classes/Bignum.html#method-i-hash","()","<p>Compute a hash based on the value of <em>big</em>.\n",null,0],["hash","Float","Ruby/classes/Float.html#method-i-hash","()","<p>Returns a hash code for this float.\n",null,0],["hash","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-i-hash","()","",null,0],["hash","Gem::Source","Ruby/classes/Gem/Source.html#method-i-hash","()","",null,0],["hash","Hash","Ruby/classes/Hash.html#method-i-hash","()","<p>Compute a hash-code for this hash. Two hashes with the same content will\nhave the same hash code (and …\n",null,0],["hash","IPAddr","Ruby/classes/IPAddr.html#method-i-hash","()","<p>Returns a hash value used by Hash, Set, and Array classes\n",null,0],["hash","MatchData","Ruby/classes/MatchData.html#method-i-hash","()","<p>Produce a hash based on the target string, regexp and matched positions of\nthis matchdata.\n",null,0],["hash","Matrix","Ruby/classes/Matrix.html#method-i-hash","()","<p>Returns a hash-code for the matrix.\n",null,0],["hash","Method","Ruby/classes/Method.html#method-i-hash","()","<p>Returns a hash value corresponding to the method object.\n",null,0],["hash","Object","Ruby/classes/Object.html#method-i-hash","()","<p>Generates a Fixnum hash value for this object.  This function must have the\nproperty that <code>a.eql?(b)</code> implies …\n",null,0],["hash","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-hash","()","<p>The hash value returned is suitable for use as a certificate&#39;s filename\nin a CA path.\n",null,0],["hash","OpenStruct","Ruby/classes/OpenStruct.html#method-i-hash","()","<p>Compute a hash-code for this OpenStruct. Two hashes with the same content\nwill have the same hash code …\n",null,0],["hash","Proc","Ruby/classes/Proc.html#method-i-hash","()","<p>Returns a hash value corresponding to proc body.\n",null,0],["hash","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-hash","()","<p>An RDoc::TopLevel has the same hash as another with the same relative_name\n",null,0],["hash","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-hash","()","<p>Creates (and returns) a hash from both the name and value\n",null,0],["hash","Range","Ruby/classes/Range.html#method-i-hash","()","<p>Compute a hash-code for this range. Two ranges with equal begin and end\npoints (using <code>eql?</code>), and the …\n",null,0],["hash","Regexp","Ruby/classes/Regexp.html#method-i-hash","()","<p>Produce a hash based on the text and options of this regular expression.\n",null,0],["hash","String","Ruby/classes/String.html#method-i-hash","()","<p>Return a hash based on the string&#39;s length and content.\n",null,0],["hash","Struct","Ruby/classes/Struct.html#method-i-hash","()","<p>Return a hash value based on this struct&#39;s contents.\n",null,0],["hash","Time","Ruby/classes/Time.html#method-i-hash","()","<p>Returns a hash code for this Time object.\n",null,0],["hash","URI::Generic","Ruby/classes/URI/Generic.html#method-i-hash","()","",null,0],["hash","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-hash","()","<p>Returns a hash value corresponding to the method object.\n",null,0],["hash","Vector","Ruby/classes/Vector.html#method-i-hash","()","<p>Return a hash-code for the vector.\n",null,0],["hash","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-hash","()","<p>Delegates to id in order to allow two records of the same type and id to\nwork with something like:\n\n<pre>[ Person.find(1), ...</pre>\n",null,1],["hash","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-hash","()","",null,1],["hash_old","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-hash_old","()","<p>Returns an MD5 based hash used in OpenSSL 0.9.X.\n",null,0],["have_author?","RSS::Atom::Entry","Ruby/classes/RSS/Atom/Entry.html#method-i-have_author-3F","()","<p>Returns where there are any authors present or there is a source with an\nauthor\n",null,0],["have_author?","RSS::Atom::Feed","Ruby/classes/RSS/Atom/Feed.html#method-i-have_author-3F","()","<p>Returns true if there are any authors for the feed or any of the Entry\nchild elements have an author …\n",null,0],["have_author?","RSS::Atom::Feed::Entry","Ruby/classes/RSS/Atom/Feed/Entry.html#method-i-have_author-3F","(check_parent=true)","<p>Returns whether any of the following are true\n<p>There are any authors in the feed\n<p>If the parent element has …\n",null,0],["have_author?","RSS::Atom::Feed::Entry::Source","Ruby/classes/RSS/Atom/Feed/Entry/Source.html#method-i-have_author-3F","()","",null,0],["have_children_elements","RSS::Element","Ruby/classes/RSS/Element.html#method-i-have_children_elements","()","",null,0],["have_const","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-have_const","(const, headers = nil, opt = \"\", &b)","<p>Returns whether or not the constant <code>const</code> is defined.  You may\noptionally pass the <code>type</code> of <code>const</code> as  …\n",null,0],["have_content?","RSS::Element","Ruby/classes/RSS/Element.html#method-i-have_content-3F","()","",null,0],["have_framework","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-have_framework","(fw, &b)","<p>Returns whether or not the given <code>framework</code> can be found on\nyour system. If found, a macro is passed as …\n",null,0],["have_func","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-have_func","(func, headers = nil, opt = \"\", &b)","<p>Returns whether or not the function <code>func</code> can be found in the\ncommon header files, or within any <code>headers</code> …\n",null,0],["have_header","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-have_header","(header, preheaders = nil, opt = \"\", &b)","<p>Returns whether or not the given <code>header</code> file can be found on\nyour system. If found, a macro is passed …\n",null,0],["have_library","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-have_library","(lib, func = nil, headers = nil, opt = \"\", &b)","<p>Returns whether or not the given entry point <code>func</code> can be found\nwithin <code>lib</code>.  If <code>func</code> is <code>nil</code>, the\n<code>main()</code> …\n",null,0],["have_macro","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-have_macro","(macro, headers = nil, opt = \"\", &b)","<p>Returns whether or not <code>macro</code> is defined either in the common\nheader files or within any <code>headers</code> you provide. …\n",null,0],["have_rakefile","Rake::Application","Ruby/classes/Rake/Application.html#method-i-have_rakefile","()","<p>True if one of the files in RAKEFILES is in the current directory. If a\nmatch is found, it is copied …\n",null,0],["have_rakefile","Rake::Application","Ruby/classes/Rake/Application.html#method-i-have_rakefile","()","<p>True if one of the files in RAKEFILES is in the current directory. If a\nmatch is found, it is copied …\n",null,0],["have_rdoc_4_plus?","Gem::Server","Ruby/classes/Gem/Server.html#method-i-have_rdoc_4_plus-3F","()","",null,0],["have_required_elements?","RSS::Element","Ruby/classes/RSS/Element.html#method-i-have_required_elements-3F","()","",null,0],["have_required_values?","RSS::Maker::Atom::Feed::Channel","Ruby/classes/RSS/Maker/Atom/Feed/Channel.html#method-i-have_required_values-3F","()","",null,0],["have_required_values?","RSS::Maker::Atom::Feed::Items::Item","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item.html#method-i-have_required_values-3F","()","",null,0],["have_required_values?","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-have_required_values-3F","()","",null,0],["have_required_values?","RSS::Maker::ITunesChannelModel::ITunesCategoriesBase::ITunesCategoryBase","Ruby/classes/RSS/Maker/ITunesChannelModel/ITunesCategoriesBase/ITunesCategoryBase.html#method-i-have_required_values-3F","()","",null,0],["have_required_values?","RSS::Maker::ImageFaviconModel::ImageFaviconBase","Ruby/classes/RSS/Maker/ImageFaviconModel/ImageFaviconBase.html#method-i-have_required_values-3F","()","",null,0],["have_required_values?","RSS::Maker::ImageItemModel::ImageItemBase","Ruby/classes/RSS/Maker/ImageItemModel/ImageItemBase.html#method-i-have_required_values-3F","()","",null,0],["have_required_values?","RSS::Maker::RSS10::Image","Ruby/classes/RSS/Maker/RSS10/Image.html#method-i-have_required_values-3F","()","",null,0],["have_required_values?","RSS::Maker::RSS10::Textinput","Ruby/classes/RSS/Maker/RSS10/Textinput.html#method-i-have_required_values-3F","()","",null,0],["have_required_values?","RSS::Maker::TaxonomyTopicModel::TaxonomyTopicsBase::TaxonomyTopicBase","Ruby/classes/RSS/Maker/TaxonomyTopicModel/TaxonomyTopicsBase/TaxonomyTopicBase.html#method-i-have_required_values-3F","()","",null,0],["have_required_values?","RSS::Maker::TrackBackModel::TrackBackAboutsBase::TrackBackAboutBase","Ruby/classes/RSS/Maker/TrackBackModel/TrackBackAboutsBase/TrackBackAboutBase.html#method-i-have_required_values-3F","()","",null,0],["have_struct_member","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-have_struct_member","(type, member, headers = nil, opt = \"\", &b)","<p>Returns whether or not the struct of type <code>type</code> contains\n<code>member</code>.  If it does not, or the struct type can&#39;t …\n",null,0],["have_type","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-have_type","(type, headers = nil, opt = \"\", &b)","<p>Returns whether or not the static type <code>type</code> is defined.  You\nmay optionally pass additional <code>headers</code> to …\n",null,0],["have_var","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-have_var","(var, headers = nil, opt = \"\", &b)","<p>Returns whether or not the variable <code>var</code> can be found in the\ncommon header files, or within any <code>headers</code> …\n",null,0],["have_xml_content?","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-have_xml_content-3F","()","",null,0],["have_xml_content?","RSS::Atom::TextConstruct","Ruby/classes/RSS/Atom/TextConstruct.html#method-i-have_xml_content-3F","()","<p>Returns true if type is “xhtml”\n",null,0],["have_xml_content?","RSS::Element","Ruby/classes/RSS/Element.html#method-i-have_xml_content-3F","()","",null,0],["having","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-having","(opts, *rest)","<p>Allows to specify a HAVING clause. Note that you can&#39;t use HAVING\nwithout also specifying a GROUP …\n",null,1],["head","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-head","(path, initheader = nil)","<p>Gets only the header from <code>path</code> on the connected-to host.\n<code>header</code> is a Hash like { &#39;Accept&#39; =&gt; …\n",null,0],["head","ActionController::Head","Rails/classes/ActionController/Head.html#method-i-head","(status, options = {})","<p>Return a response that has no content (merely headers). The options\nargument is interpreted to be a hash …\n",null,1],["head2","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-head2","(path, initheader = nil, &block)","",null,0],["head?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-head-3F","()","<p>Is this a HEAD request? Equivalent to <code>request.request_method_symbol\n== :head</code>.\n",null,1],["header","CGI","Ruby/classes/CGI.html#method-i-header","(options='text/html')","<p>This method is an alias for #http_header, when HTML5 tag maker is inactive.\n<p>NOTE: use #http_header to …\n",null,0],["header","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-header","(dest = '')","<p>Fetches the message header.\n<p>The optional <code>dest</code> argument is obsolete.\n<p>This method raises a POPError if an …\n",null,0],["header","ActionDispatch::Routing::ConsoleFormatter","Rails/classes/ActionDispatch/Routing/ConsoleFormatter.html#method-i-header","(routes)","",null,1],["header","ActionDispatch::Routing::HtmlTableFormatter","Rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-i-header","(routes)","<p>the header is part of the HTML page, so we don&#39;t construct it here.\n",null,1],["header?","CSV::Row","Ruby/classes/CSV/Row.html#method-i-header-3F","(name)","<p>Returns <code>true</code> if <code>name</code> is a header for this row,\nand <code>false</code> otherwise.\n",null,0],["header_convert","CSV","Ruby/classes/CSV.html#method-i-header_convert","(name = nil, &converter)","<p>Identical to CSV#convert(), but for header rows.\n<p>Note that this method must be called before header rows …\n",null,0],["header_converters","CSV","Ruby/classes/CSV.html#method-i-header_converters","()","<p>Returns the current list of converters in effect for headers.  See CSV::new\nfor details.  Built-in converters …\n",null,0],["header_row?","CSV","Ruby/classes/CSV.html#method-i-header_row-3F","()","<p>Returns <code>true</code> if the next row read will be a header row.\n",null,0],["header_row?","CSV::Row","Ruby/classes/CSV/Row.html#method-i-header_row-3F","()","<p>Returns <code>true</code> if this is a header row.\n",null,0],["headers","CSV","Ruby/classes/CSV.html#method-i-headers","()","<p>Returns <code>nil</code> if headers will not be used, <code>true</code> if\nthey will but have not yet been read, or the actual …\n",null,0],["headers","CSV::Row","Ruby/classes/CSV/Row.html#method-i-headers","()","<p>Returns the headers of this row.\n",null,0],["headers","CSV::Table","Ruby/classes/CSV/Table.html#method-i-headers","()","<p>Returns the headers for the first row of this table (assumed to match all\nother rows).  An empty Array …\n",null,0],["headers","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-headers","()","<p>Provides access to the request&#39;s HTTP headers, for example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">request</span>.<span class=\"ruby-identifier\">headers</span>[<span class=\"ruby-string\">&quot;Content-Type&quot;</span>] <span class=\"ruby-comment\"># =&gt; &quot;text/plain&quot;</span>\n</pre>\n",null,1],["headers","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-headers","(args = nil)","<p>Allows you to pass random and unusual headers to the new\n<code>Mail::Message</code> object which will add them to …\n",null,1],["headers=","URI::MailTo","Ruby/classes/URI/MailTo.html#method-i-headers-3D","(v)","<p>setter for headers <code>v</code>\n",null,0],["heading","Build","Rails/classes/Build.html#method-i-heading","()","",null,1],["helo","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-helo","(domain)","",null,0],["help","Net::FTP","Ruby/classes/Net/FTP.html#method-i-help","(arg = nil)","<p>Issues the HELP command.\n",null,0],["help","Object","Ruby/classes/Object.html#method-i-help","()","<p>Display help message.\n\n<pre><code>ruby -run -e help [COMMAND]</code></pre>\n",null,0],["help","OptionParser","Ruby/classes/OptionParser.html#method-i-help","()","<p>Returns option summary string.\n",null,0],["help","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-help","(command = 'generate')","<p>Show help message with available generators.\n",null,1],["helpcontext","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-helpcontext","()","<p>Returns help context.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbooks&#39;)\nmethod ...</code></pre>\n",null,0],["helpcontext","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-helpcontext","()","<p>Returns helpcontext. If helpcontext is not found, then returns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</code></pre>\n",null,0],["helper","AbstractController::Helpers::ClassMethods","Rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-helper","(*args, &block)","<p>The <code>helper</code> class method can take a series of helper module\nnames, a block, or both.\n<p>Options\n<p><code>*args</code> - Module …\n",null,1],["helper","Rails::ConsoleMethods","Rails/classes/Rails/ConsoleMethods.html#method-i-helper","()","",null,1],["helper_attr","ActionController::Helpers::ClassMethods","Rails/classes/ActionController/Helpers/ClassMethods.html#method-i-helper_attr","(*attrs)","<p>Declares helper accessors for controller attributes. For example, the\nfollowing adds new <code>name</code> and <code>name=</code> …\n",null,1],["helper_method","AbstractController::Helpers::ClassMethods","Rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-helper_method","(*meths)","<p>Declare a controller method as a helper. For example, the following makes\nthe <code>current_user</code> controller …\n",null,1],["helpers","ActionController::Helpers::ClassMethods","Rails/classes/ActionController/Helpers/ClassMethods.html#method-i-helpers","()","<p>Provides a proxy to access helpers methods from outside the view.\n",null,1],["helpers","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-helpers","()","<p>Returns a module with all the helpers defined for the engine.\n",null,1],["helpers_paths","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-helpers_paths","()","<p>Returns all registered helpers paths.\n",null,1],["helpfile","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-helpfile","()","<p>Returns help file. If help file is not found, then the method returns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</code></pre>\n",null,0],["helpfile","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-helpfile","()","<p>Returns helpfile path. If helpfile is not found, then returns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</code></pre>\n",null,0],["helpstring","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-helpstring","()","<p>Returns help string of OLE method. If the help string is not found, then\nthe method returns nil.\n\n<pre><code>tobj ...</code></pre>\n",null,0],["helpstring","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-helpstring","()","<p>Returns help string.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Internet Controls&#39;, &#39;IWebBrowser&#39;)\nputs tobj.helpstring ...</code></pre>\n",null,0],["here?","DRb","Ruby/classes/DRb.html#method-c-here-3F","(uri)","<p>Is <code>uri</code> the URI for the current local server?\n",null,0],["here?","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-i-here-3F","(uri)","<p>Is <code>uri</code> the URI for this server?\n",null,0],["hermitian?","Matrix","Ruby/classes/Matrix.html#method-i-hermitian-3F","()","<p>Returns <code>true</code> is this is an hermitian matrix. Raises an error\nif matrix is not square.\n",null,0],["hex","SecureRandom","Ruby/classes/SecureRandom.html#method-c-hex","(n=nil)","<p>SecureRandom.hex generates a random hex string.\n<p>The argument <em>n</em> specifies the length of the random length. …\n",null,0],["hex","String","Ruby/classes/String.html#method-i-hex","()","<p>Treats leading characters from <em>str</em> as a string of hexadecimal\ndigits (with an optional sign and an optional …\n",null,0],["hexdigest","Digest::Class","Ruby/classes/Digest/Class.html#method-c-hexdigest","(*args)","<p>Returns the hex-encoded hash value of a given <em>string</em>.  This is\nalmost equivalent to Digest.hexencode …\n",null,0],["hexdigest","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-hexdigest","(p1 = v1)","<p>If none is given, returns the resulting hash value of the digest in a\nhex-encoded form, keeping the digest&#39;s …\n",null,0],["hexdigest","OpenSSL::HMAC","Ruby/classes/OpenSSL/HMAC.html#method-i-hexdigest","()","",null,0],["hexdigest","OpenSSL::HMAC","Ruby/classes/OpenSSL/HMAC.html#method-c-hexdigest","(p1, p2, p3)","",null,0],["hexdigest!","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-hexdigest-21","()","<p>Returns the resulting hash value in a hex-encoded form and resets the\ndigest to the initial state.\n",null,0],["hexencode","Digest","Ruby/classes/Digest.html#method-c-hexencode","(p1)","<p>Generates a hex-encoded version of a given <em>string</em>.\n",null,0],["hidden","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-hidden","(name = \"\", value = nil)","<p>Generate a Hidden Input element as a string.\n<p>The attributes of the element can be specified as two arguments, …\n",null,0],["hidden_actions","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-hidden_actions","()","<p>The list of hidden actions. Defaults to an empty array. This can be\nmodified by other modules or subclasses …\n",null,1],["hidden_field","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-hidden_field","(method, options = {})","<p>Returns a hidden input tag tailored for accessing a specified attribute\n(identified by <code>method</code>) on an …\n",null,1],["hidden_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-hidden_field","(object_name, method, options = {})","<p>Returns a hidden input tag tailored for accessing a specified attribute\n(identified by <code>method</code>) on an …\n",null,1],["hidden_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-hidden_field_tag","(name, value = nil, options = {})","<p>Creates a hidden form input field used to transmit data that would be lost\ndue to HTTP&#39;s statelessness …\n",null,1],["hidden_namespaces","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-hidden_namespaces","()","",null,1],["hide!","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-hide-21","()","<p>Convenience method to hide this generator from the available ones when\nrunning rails generator command. …\n",null,1],["hide_action","ActionController::HideActions::ClassMethods","Rails/classes/ActionController/HideActions/ClassMethods.html#method-i-hide_action","(*args)","<p>Sets all of the actions passed in as hidden actions.\n<p>Parameters\n<p><code>args</code> - A list of actions\n",null,1],["hide_namespace","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-hide_namespace","(*namespaces)","",null,1],["hide_namespaces","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-hide_namespaces","(*namespaces)","",null,1],["hierarchical?","URI::Generic","Ruby/classes/URI/Generic.html#method-i-hierarchical-3F","()","<p>Checks if URI has a path\n",null,0],["hierarchical?","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-hierarchical-3F","()","<p>Checks if URI has a path For URI::LDAP this will return <code>false</code>\n",null,0],["highlight","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-highlight","(text, phrases, options = {})","<p>Highlights one or more <code>phrases</code> everywhere in <code>text</code>\nby inserting it into a <code>:highlighter</code> string. The highlighter …\n",null,1],["history_file","IRB::Context","Ruby/classes/IRB/Context.html#method-i-history_file","()","<p>A copy of the default <code>IRB.conf[:HISTORY_FILE]</code>\n",null,0],["history_file=","IRB::Context","Ruby/classes/IRB/Context.html#method-i-history_file-3D","(hist)","<p>Set <code>IRB.conf[:HISTORY_FILE]</code> to the given <code>hist</code>.\n",null,0],["home","Dir","Ruby/classes/Dir.html#method-c-home","(p1 = v1)","<p>Returns the home directory of the current user or the named user if given.\n",null,0],["home_dir","RDoc::RI::Paths","Ruby/classes/RDoc/RI/Paths.html#method-c-home_dir","()","<p>The location of the rdoc data in the user&#39;s home directory.\n<p>Like ::system, ri data in the user&#39;s …\n",null,0],["home_workspace","IRB::Context","Ruby/classes/IRB/Context.html#method-i-home_workspace","()","<p>Inherited from <code>TOPLEVEL_BINDING</code>.\n",null,0],["hook_for","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-hook_for","(*names, &block)","<p>Invoke a generator based on the value supplied by the user to the given\noption named “name”. …\n",null,1],["host","Gem","Ruby/classes/Gem.html#method-c-host","()","<p>Get the default RubyGems API host. This is normally\n<code>https://rubygems.org</code>.\n",null,0],["host","Gem::GemcutterUtilities","Ruby/classes/Gem/GemcutterUtilities.html#method-i-host","()","",null,0],["host","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-host","()","<p>The host this request is for\n",null,0],["host","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-host","()","<p>Returns the host for this request, such as example.com.\n",null,1],["host=","Gem","Ruby/classes/Gem.html#method-c-host-3D","(host)","<p>Set the default RubyGems API host.\n",null,0],["host=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-host-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["host_with_port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-host_with_port","()","<p>Returns a host:port string for this request, such as “example.com” or\n“example.com:8080”. …\n",null,1],["hostname","URI::Generic","Ruby/classes/URI/Generic.html#method-i-hostname","()","<p>extract the host part of the URI and unwrap brackets for IPv6 addresses.\n<p>This method is same as URI::Generic#host …\n",null,0],["hostname=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-hostname-3D","(v)","<p>set the host part of the URI as the argument with brackets for IPv6\naddresses.\n<p>This method is same as …\n",null,0],["hour","Time","Ruby/classes/Time.html#method-i-hour","()","<p>Returns the hour of the day (0..23) for <em>time</em>.\n\n<pre><code>t = Time.now   #=&gt; 2007-11-19 08:26:20 -0600\nt.hour     ...\n</code></pre>\n",null,0],["hour","Numeric","Rails/classes/Numeric.html#method-i-hour","()","",null,1],["hour=","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-hour-3D","(hour)","",null,0],["hour=","RSS::Maker::ITunesItemModel::ITunesDurationBase","Ruby/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html#method-i-hour-3D","(hour)","",null,0],["hour=","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-hour-3D","(value)","<p>Set <code>value</code> as the new date/time component.\n<p>Raises an ArgumentError if the given <code>value</code> isn&#39;t between …\n",null,0],["hours","Numeric","Rails/classes/Numeric.html#method-i-hours","()","",null,1],["href=","RSS::XMLStyleSheet","Ruby/classes/RSS/XMLStyleSheet.html#method-i-href-3D","(value)","",null,0],["hstore","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-hstore","(name, options = {})","",null,1],["hstore_to_string","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-hstore_to_string","(object)","",null,1],["html","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-html","(attributes = {})","<p>Generate a top-level HTML element as a string.\n<p>The attributes of the element are specified as a hash. …\n",null,0],["html","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-html","","<p>Allow HTML\n",null,0],["html?","Mime::Type","Rails/classes/Mime/Type.html#method-i-html-3F","()","",null,1],["html_escape","ERB::Util","Ruby/classes/ERB/Util.html#method-c-html_escape","(s)","<p>A utility method for escaping HTML tag characters in <em>s</em>.\n\n<pre><code>require &quot;erb&quot;\ninclude ERB::Util\n\nputs html_escape(&quot;is ...\n</code></pre>\n",null,0],["html_escape","RSS::Utils","Ruby/classes/RSS/Utils.html#method-i-html_escape","(s)","<p>escape &#39;&amp;&#39;, &#39;“&#39;, &#39;&lt;&#39; and &#39;&gt;&#39; for\nuse in HTML.\n",null,0],["html_escape","ERB::Util","Rails/classes/ERB/Util.html#method-c-html_escape","(s)","<p>A utility method for escaping HTML tag characters. This method is also\naliased as <code>h</code>.\n<p>In your ERB templates, …\n",null,1],["html_escape_once","ERB::Util","Rails/classes/ERB/Util.html#method-c-html_escape_once","(s)","<p>A utility method for escaping HTML without affecting existing escaped\nentities.\n\n<pre>html_escape_once(&#39;1 &lt; ...</pre>\n",null,1],["html_list_name","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-html_list_name","(list_type, open_tag)","<p>Determines the HTML list element for <code>list_type</code> and\n<code>open_tag</code>\n",null,0],["html_list_name","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-html_list_name","(list_type, open_tag)","<p>In snippets, there are no lists\n",null,0],["html_name","RDoc::Alias","Ruby/classes/RDoc/Alias.html#method-i-html_name","()","<p>HTML id-friendly version of <code>#new_name</code>.\n",null,0],["html_name","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-html_name","()","<p>HTML id-friendly method/attribute name\n",null,0],["html_safe","String","Rails/classes/String.html#method-i-html_safe","()","",null,1],["html_safe?","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-html_safe-3F","()","",null,1],["html_safe?","Numeric","Rails/classes/Numeric.html#method-i-html_safe-3F","()","",null,1],["html_safe?","Object","Rails/classes/Object.html#method-i-html_safe-3F","()","",null,1],["hton","IPAddr","Ruby/classes/IPAddr.html#method-i-hton","()","<p>Returns a network byte ordered string form of the IP address.\n",null,0],["http_basic_authenticate_with","ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html#method-i-http_basic_authenticate_with","(options = {})","",null,1],["http_date","HttpServer","Ruby/classes/HttpServer.html#method-i-http_date","( aTime )","<p>Returns a string which represents the time as rfc1123-date of HTTP-date\n",null,0],["http_default_port","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-http_default_port","()","<p>The default port to use for HTTP requests; defaults to 80.\n",null,0],["http_header","CGI","Ruby/classes/CGI.html#method-i-http_header","(options='text/html')","<p>Create an HTTP header block as a string.\n<p>Includes the empty line that ends the header block.\n<p><code>content_type_string</code> … &mdash; ",null,0],["http_header","HttpServer","Ruby/classes/HttpServer.html#method-i-http_header","(header=nil)","<p>Generates a Hash with the HTTP headers\n",null,0],["http_resp","HttpServer","Ruby/classes/HttpServer.html#method-i-http_resp","(status_code, status_message=nil, header=nil, body=nil)","<p>Returns a string which includes the status code message as, http headers,\nand body for the response. …\n",null,0],["http_url","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-http_url","(prefix)","<p>URL for this with a <code>prefix</code>\n",null,0],["http_url","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-http_url","(prefix)","<p>URL for this with a <code>prefix</code>\n",null,0],["httpd","Object","Ruby/classes/Object.html#method-i-httpd","()","<p>Run WEBrick HTTP server.\n\n<pre><code>ruby -run -e httpd -- [OPTION] DocumentRoot\n\n--bind-address=ADDR         address ...</code></pre>\n",null,0],["httpdate","Date","Ruby/classes/Date.html#method-i-httpdate","()","<p>This method is equivalent to strftime(&#39;%a, %d %b %Y %T GMT&#39;). See\nalso RFC 2616.\n",null,0],["httpdate","Date","Ruby/classes/Date.html#method-c-httpdate","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some RFC\n2616 format.\n\n<pre><code>Date.httpdate(&#39;Sat, ...</code></pre>\n",null,0],["httpdate","DateTime","Ruby/classes/DateTime.html#method-c-httpdate","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some RFC\n2616 format.\n\n<pre><code>DateTime.httpdate(&#39;Sat, ...</code></pre>\n",null,0],["httpdate","Time","Ruby/classes/Time.html#method-i-httpdate","(date)","<p>Parses <code>date</code> as an HTTP-date defined by RFC 2616 and converts\nit to a Time object.\n<p>ArgumentError is raised …\n",null,0],["httpdate","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-httpdate","()","<p>Returns a string of the object&#39;s date and time in the format used by\nHTTP requests.\n\n<pre>Time.zone.now.httpdate ...</pre>\n",null,1],["https?","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-https-3F","(uri)","",null,0],["https_default_port","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-https_default_port","()","<p>The default port to use for HTTPS requests; defaults to 443.\n",null,0],["human","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-i-human","(options={})","<p>Transform the model name into a more humane format, using I18n. By default,\nit will underscore then humanize …\n",null,1],["human","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-human","(rule, replacement)","<p>Specifies a humanized form of a string by a regular expression rule or by a\nstring mapping. When using …\n",null,1],["human_attribute_name","ActiveModel::Translation","Rails/classes/ActiveModel/Translation.html#method-i-human_attribute_name","(attribute, options = {})","<p>Transforms attribute names into a more human format, such as “First name”\ninstead of “ …\n",null,1],["human_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-human_name","()","",null,1],["humanize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-humanize","(lower_case_and_underscored_word)","<p>Capitalizes the first word and turns underscores into spaces and strips a\ntrailing “_id”, if …\n",null,1],["humanize","String","Rails/classes/String.html#method-i-humanize","()","<p>Capitalizes the first word, turns underscores into spaces, and strips\n&#39;_id&#39;. Like <code>titleize</code>, this …\n",null,1],["hypot","Math","Ruby/classes/Math.html#method-c-hypot","(p1, p2)","<p>Returns sqrt(x**2 + y**2), the hypotenuse of a right-angled triangle with\nsides <em>x</em> and <em>y</em>.\n\n<pre><code>Math.hypot(3, ...</code></pre>\n",null,0],["i","Numeric","Ruby/classes/Numeric.html#method-i-i","()","<p>Returns the corresponding imaginary number. Not available for complex\nnumbers.\n",null,0],["i18n_scope","ActiveModel::Translation","Rails/classes/ActiveModel/Translation.html#method-i-i18n_scope","()","<p>Returns the <code>i18n_scope</code> for the class. Overwrite if you want\ncustom lookup.\n",null,1],["i18n_scope","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-i18n_scope","()","",null,1],["icon","RSS::Maker::ChannelBase","Ruby/classes/RSS/Maker/ChannelBase.html#method-i-icon","()","",null,0],["icon=","RSS::Maker::ChannelBase","Ruby/classes/RSS/Maker/ChannelBase.html#method-i-icon-3D","(url)","",null,0],["iconv","JSON","Ruby/classes/JSON.html#method-c-iconv","(to, from, string)","<p>Encodes string using Ruby&#39;s <em>String.encode</em>\n",null,0],["id","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-id","()","",null,0],["id","OpenSSL::SSL::Session","Ruby/classes/OpenSSL/SSL/Session.html#method-i-id","()","<p>Returns the Session ID.\n",null,0],["id","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-id","( object )","<p>Since REXML is non-validating, this method is not implemented as it\nrequires a DTD\n",null,0],["id","ActiveRecord::AttributeMethods::PrimaryKey","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id","()","<p>Returns the primary key value.\n",null,1],["id2name","Symbol","Ruby/classes/Symbol.html#method-i-id2name","()","<p>Returns the name or string corresponding to <em>sym</em>.\n\n<pre><code>:fred.id2name   #=&gt; &quot;fred&quot;\n</code></pre>\n",null,0],["id=","ActiveRecord::AttributeMethods::PrimaryKey","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id-3D","(value)","<p>Sets the primary key value.\n",null,1],["id?","ActiveRecord::AttributeMethods::PrimaryKey","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id-3F","()","<p>Queries the primary key value.\n",null,1],["id_before_type_cast","ActiveRecord::AttributeMethods::PrimaryKey","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id_before_type_cast","()","<p>Returns the primary key value before type cast.\n",null,1],["ident","Syslog","Ruby/classes/Syslog.html#method-c-ident","()","<p>Returns the identity string used in the last call to open()\n",null,0],["identical?","File","Ruby/classes/File.html#method-c-identical-3F","(p1, p2)","<p>Returns <code>true</code> if the named files are identical.\n<p><em>file_1</em> and <em>file_2</em> can be an IO object.\n\n<pre><code>open(&quot;a&quot;, &quot;w&quot;) {} ...</code></pre>\n",null,0],["identical?","FileTest","Ruby/classes/FileTest.html#method-i-identical-3F","(p1, p2)","<p>Returns <code>true</code> if the named files are identical.\n<p><em>file_1</em> and <em>file_2</em> can be an IO object.\n\n<pre><code>open(&quot;a&quot;, &quot;w&quot;) {} ...</code></pre>\n",null,0],["identical?","FileUtils","Ruby/classes/FileUtils.html#method-c-identical-3F","(a, b)","",null,0],["identify","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-c-identify","(label)","<p>Returns a consistent, platform-independent identifier for\n<code>label</code>. Identifiers are positive integers less …\n",null,1],["identity","Matrix","Ruby/classes/Matrix.html#method-c-identity","(n)","<p>Creates an <code>n</code> by <code>n</code> identity matrix.\n\n<pre><code>Matrix.identity(2)\n  =&gt; 1 0\n     0 1\n</code></pre>\n",null,0],["identity","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-i-identity","(event)","",null,1],["idle","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-idle","(&response_handler)","<p>Sends an IDLE command that waits for notifications of new or expunged\nmessages.  Yields responses from …\n",null,0],["idle_done","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-idle_done","()","<p>Leaves IDLE.\n",null,0],["idlok","Curses::Window","Ruby/classes/Curses/Window.html#method-i-idlok","(p1)","<p>If <code>bool</code> is <code>true</code> curses considers using the\nhardware insert/delete line feature of terminals so equipped. …\n",null,0],["ids","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-ids","()","<p>Pluck all the ID&#39;s for the relation using the table&#39;s primary key\n\n<pre>Person.ids # SELECT people.id ...</pre>\n",null,1],["if_modified_since","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-if_modified_since","(req, res, path = nil)","<p>Handles the If-Modified-Since HTTP header on <code>req</code> for\n<code>path</code>.  If the file has not been modified a Not  …\n",null,0],["if_modified_since","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-if_modified_since","()","",null,1],["if_none_match","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-if_none_match","()","",null,1],["if_none_match_etags","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-if_none_match_etags","()","",null,1],["iflush","IO","Ruby/classes/IO.html#method-i-iflush","()","<p>Flushes input buffer in kernel.\n<p>You must require &#39;io/console&#39; to use this method.\n",null,0],["ignore","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-ignore","()","<p>Use this to ignore a CodeObject and all its children until found again\n(#record_location is called). …\n",null,0],["ignore","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-ignore","(*node)","<p>Use ignore in your subclass to ignore the content of a node.\n\n<pre><code>##\n# We don&#39;t support raw nodes in ToNoRaw ...</code></pre>\n",null,0],["ignore_unknown_element","RSS::BaseParser","Ruby/classes/RSS/BaseParser.html#method-i-ignore_unknown_element","()","",null,0],["ignore_unknown_element=","RSS::BaseParser","Ruby/classes/RSS/BaseParser.html#method-i-ignore_unknown_element-3D","(new_value)","",null,0],["ignore_whitespace_nodes","REXML::Element","Ruby/classes/REXML/Element.html#method-i-ignore_whitespace_nodes","()","",null,0],["ignored?","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-ignored-3F","()","<p>Has this class been ignored?\n",null,0],["imag","Complex","Ruby/classes/Complex.html#method-i-imag","()","<p>Returns the imaginary part.\n\n<pre><code>Complex(7).imaginary      #=&gt; 0\nComplex(9, -4).imaginary  #=&gt; -4\n</code></pre>\n",null,0],["imag","Matrix","Ruby/classes/Matrix.html#method-i-imag","()","",null,0],["imag","Numeric","Ruby/classes/Numeric.html#method-i-imag","()","<p>Returns zero.\n",null,0],["image","RSS::Rss","Ruby/classes/RSS/Rss.html#method-i-image","()","",null,0],["image_alt","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-image_alt","(src)","<p>Returns a string suitable for an html image tag alt attribute. The\n<code>src</code> argument is meant to be an image …\n",null,1],["image_button","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-image_button","(src = \"\", name = nil, alt = nil)","<p>Generate an Image Button Input element as a string.\n<p><code>src</code> is the URL of the image to use for the button. …\n",null,0],["image_path","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-image_path","(source, options = {})","<p>Computes the path to an image asset. Full paths from the document root will\nbe passed through. Used internally …\n",null,1],["image_size=","RSS::ImageFaviconModel::ImageFavicon","Ruby/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-i-image_size-3D","(new_value)","",null,0],["image_submit_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-image_submit_tag","(source, options = {})","<p>Displays an image which when clicked will submit the form.\n<p><code>source</code> is passed to AssetTagHelper#path_to_image …\n",null,1],["image_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-image_tag","(source, options={})","<p>Returns an HTML image tag for the <code>source</code>. The\n<code>source</code> can be a full path or a file.\n<p>Options\n<p>You can add …\n",null,1],["image_url","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-image_url","(source, options = {})","<p>Computes the full URL to an image asset. This will use\n<code>image_path</code> internally, so most of their behaviors …\n",null,1],["imaginary","Complex","Ruby/classes/Complex.html#method-i-imaginary","()","<p>Returns the imaginary part.\n\n<pre><code>Complex(7).imaginary      #=&gt; 0\nComplex(9, -4).imaginary  #=&gt; -4\n</code></pre>\n",null,0],["imaginary","Matrix","Ruby/classes/Matrix.html#method-i-imaginary","()","<p>Returns the imaginary part of the matrix.\n\n<pre><code>Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]]\n  =&gt; 1+2i ...\n</code></pre>\n",null,0],["imaginary","Numeric","Ruby/classes/Numeric.html#method-i-imaginary","()","<p>Returns zero.\n",null,0],["img","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-img","(src = \"\", alt = \"\", width = nil, height = nil)","<p>Generate an Image element as a string.\n<p><code>src</code> is the URL of the image.  <code>alt</code> is the\nalternative text for the …\n",null,0],["implemented_ole_types","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-implemented_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the\nWIN32OLE_TYPE object.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</code></pre>\n",null,0],["import","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-import","(deps)","<p>Add <code>deps</code> Gem::Depedency objects to the set.\n",null,0],["import_function","DL::Importer","Ruby/classes/DL/Importer.html#method-i-import_function","(name, ctype, argtype, call_type = nil)","",null,0],["import_function","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-import_function","(name, ctype, argtype, call_type = nil)","<p>Returns a new Fiddle::Function instance at the memory address of the given\n<code>name</code> function.\n<p>Raises a DLError …\n",null,0],["import_symbol","DL::Importer","Ruby/classes/DL/Importer.html#method-i-import_symbol","(name)","",null,0],["import_symbol","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-import_symbol","(name)","<p>Returns a new Fiddle::Pointer instance at the memory address of the given\n<code>name</code> symbol.\n<p>Raises a DLError …\n",null,0],["import_value","DL::Importer","Ruby/classes/DL/Importer.html#method-i-import_value","(ty, addr)","",null,0],["import_value","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-import_value","(ty, addr)","<p>Returns a new instance of the C struct with the value <code>ty</code> at\nthe <code>addr</code> address.\n",null,0],["in","Date","Rails/classes/Date.html#method-i-in","(seconds)","",null,1],["in","DateTime","Rails/classes/DateTime.html#method-i-in","(seconds)","",null,1],["in","Time","Rails/classes/Time.html#method-i-in","(seconds)","",null,1],["in?","Object","Rails/classes/Object.html#method-i-in-3F","(*args)","<p>Returns true if this object is included in the argument. Argument must be\nany object which responds to …\n",null,1],["in_background","Gem::DependencyInstaller","Ruby/classes/Gem/DependencyInstaller.html#method-i-in_background","(what)","",null,0],["in_char_class?","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-in_char_class-3F","(codepoint, classes)","<p>Detect whether the codepoint is in a certain character class. Returns\n<code>true</code> when it&#39;s in the specified …\n",null,1],["in_clause_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-in_clause_length","()","<p>Returns the maximum number of elements in an IN (x,y,z) clause. nil means\nno limit.\n",null,1],["in_files","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-in_files","()","<p>The files comments in this section come from\n",null,0],["in_groups","Array","Rails/classes/Array.html#method-i-in_groups","(number, fill_with = nil)","<p>Splits or iterates over the array in <code>number</code> of groups, padding\nany remaining slots with <code>fill_with</code> unless …\n",null,1],["in_groups_of","Array","Rails/classes/Array.html#method-i-in_groups_of","(number, fill_with = nil)","<p>Splits or iterates over the array in groups of size <code>number</code>,\npadding any remaining slots with <code>fill_with</code> …\n",null,1],["in_namespace","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-in_namespace","(name)","<p>Evaluate the block in a nested namespace named <code>name</code>.  Create\nan anonymous namespace if <code>name</code> is nil.\n",null,0],["in_path?","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-in_path-3F","(file)","<p>Is <code>file</code> in ENV?\n",null,0],["in_service?","GServer","Ruby/classes/GServer.html#method-c-in_service-3F","(port, host = DEFAULT_HOST)","<p>Check if a server is running on the given port and host\n<p><code>port</code> &mdash; port, as a FixNum, of the server to check …\n",null,0],["in_time_zone","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-in_time_zone","(new_zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code>, or the specified\nzone.\n",null,1],["in_time_zone","Date","Rails/classes/Date.html#method-i-in_time_zone","(zone = ::Time.zone)","<p>Converts Date to a TimeWithZone in the current zone if Time.zone or\nTime.zone_default is set, otherwise …\n",null,1],["in_time_zone","DateTime","Rails/classes/DateTime.html#method-i-in_time_zone","(zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">zone</span> = <span class=\"ruby-string\">&#39;Hawaii&#39;</span>             <span class=\"ruby-comment\"># =&gt; &#39;Hawaii&#39;</span>\n<span class=\"ruby-constant\">DateTime</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2000</span>).<span class=\"ruby-identifier\">in_time_zone</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["in_time_zone","String","Rails/classes/String.html#method-i-in_time_zone","(zone = ::Time.zone)","<p>Converts String to a TimeWithZone in the current zone if Time.zone or\nTime.zone_default is set, otherwise …\n",null,1],["in_time_zone","Time","Rails/classes/Time.html#method-i-in_time_zone","(zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">zone</span> = <span class=\"ruby-string\">&#39;Hawaii&#39;</span>        <span class=\"ruby-comment\"># =&gt; &#39;Hawaii&#39;</span>\n<span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">utc</span>(<span class=\"ruby-value\">2000</span>).<span class=\"ruby-identifier\">in_time_zone</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["in_tt?","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-in_tt-3F","()","<p>Are we currently inside tt tags?\n",null,0],["inactivate","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-inactivate","(pc)","",null,0],["inc","OptionParser","Ruby/classes/OptionParser.html#method-c-inc","(arg, default = nil)","<p>Returns an incremented value of <code>default</code> according to\n<code>arg</code>.\n",null,0],["inc","OptionParser","Ruby/classes/OptionParser.html#method-i-inc","(*args)","",null,0],["inch","Curses","Ruby/classes/Curses.html#method-c-inch","()","<p>Returns the character at the current position.\n",null,0],["inch","Curses::Window","Ruby/classes/Curses/Window.html#method-i-inch","()","<p>Returns the character at the current position of the window.\n",null,0],["include","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-include","(*filenames)","<p>Add file names defined by glob patterns to the file list.  If an array is\ngiven, add each element of …\n",null,0],["include?","Array","Ruby/classes/Array.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if the given <code>object</code> is present in\n<code>self</code> (that is, if any element <code>==</code>\n<code>object</code>), otherwise returns …\n",null,0],["include?","CGI::QueryExtension","Ruby/classes/CGI/QueryExtension.html#method-i-include-3F","(*args)","",null,0],["include?","CSV::Row","Ruby/classes/CSV/Row.html#method-i-include-3F","(header)","",null,0],["include?","DBM","Ruby/classes/DBM.html#method-i-include-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n",null,0],["include?","ENV","Ruby/classes/ENV.html#method-c-include-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,0],["include?","Enumerable","Ruby/classes/Enumerable.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if any member of <em>enum</em> equals\n<em>obj</em>. Equality is tested using <code>==</code>.\n\n<pre><code>IO.constants.include? :SEEK_SET ...</code></pre>\n",null,0],["include?","GDBM","Ruby/classes/GDBM.html#method-i-include-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n",null,0],["include?","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-include-3F","(other)","",null,0],["include?","Hash","Ruby/classes/Hash.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200 }\nh.has_key?(&quot;a&quot;)   #=&gt; ...\n</code></pre>\n",null,0],["include?","IPAddr","Ruby/classes/IPAddr.html#method-i-include-3F","(other)","<p>Returns true if the given ipaddr is in the range.\n<p>e.g.:\n\n<pre><code>require &#39;ipaddr&#39;\nnet1 = IPAddr.new(&quot;192.168.2.0/24&quot;) ...\n</code></pre>\n",null,0],["include?","Module","Ruby/classes/Module.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <em>module</em> is included in <em>mod</em> or\none of <em>mod</em>&#39;s ancestors.\n\n<pre><code>module A\nend\nclass B\n  include ...\n</code></pre>\n",null,0],["include?","REXML::AttlistDecl","Ruby/classes/REXML/AttlistDecl.html#method-i-include-3F","(key)","<p>Whether an attlist declaration includes the given attribute definition\n\n<pre><code>if attlist_decl.include? &quot;xmlns:foobar&quot;</code></pre>\n",null,0],["include?","Range","Ruby/classes/Range.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <code>obj</code> is an element of the range,\n<code>false</code> otherwise.  If begin and end are numeric, comparison …\n",null,0],["include?","SDBM","Ruby/classes/SDBM.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if the database contains the given\n<code>key</code>.\n",null,0],["include?","Set","Ruby/classes/Set.html#method-i-include-3F","(o)","<p>Returns true if the set contains the given object.\n",null,0],["include?","String","Ruby/classes/String.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <em>str</em> contains the given string or\ncharacter.\n\n<pre><code>&quot;hello&quot;.include? &quot;lo&quot;   #=&gt; true\n&quot;hello&quot;.include? ...\n</code></pre>\n",null,0],["include?","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-i-include-3F","(key)","",null,1],["include?","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-include-3F","(attribute)","<p>Returns <code>true</code> if the error messages include an error for the\ngiven key <code>attribute</code>, <code>false</code> otherwise.\n\n<pre>person.errors.messages ...</pre>\n",null,1],["include?","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-include-3F","(record)","<p>Returns <code>true</code> if the given object is present in the collection.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-identifier\">has_many</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["include_fallbacks_module","I18n::Railtie","Rails/classes/I18n/Railtie.html#method-c-include_fallbacks_module","()","",null,1],["include_file","RDoc::Markup::PreProcess","Ruby/classes/RDoc/Markup/PreProcess.html#method-i-include_file","(name, indent, encoding)","<p>Handles the <code>:include: <em>filename</em></code> directive.\n<p>If the first line of the included file starts with &#39;#&#39;, …\n",null,0],["include_with_range?","Range","Rails/classes/Range.html#method-i-include_with_range-3F","(value)","<p>Extends the default Range#include? to support range comparisons.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">include?</span>(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>) <span class=\"ruby-comment\"># =&gt; true</span>\n(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">include?</span>(<span class=\"ruby-value\">2</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">3</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["included","RSS::Maker::AtomTextConstructBase::EnsureXMLContent","Ruby/classes/RSS/Maker/AtomTextConstructBase/EnsureXMLContent.html#method-i-included","(base)","",null,0],["included","Syslog::Constants","Ruby/classes/Syslog/Constants.html#method-c-included","(p1)","",null,0],["included","Syslog::Macros","Ruby/classes/Syslog/Macros.html#method-c-included","(p1)","",null,0],["included","ActiveSupport::Concern","Rails/classes/ActiveSupport/Concern.html#method-i-included","(base = nil, &block)","",null,1],["included_modules","Module","Ruby/classes/Module.html#method-i-included_modules","()","<p>Returns the list of modules included in <em>mod</em>.\n\n<pre><code>module Mixin\nend\n\nmodule Outer\n  include Mixin\nend\n\nMixin.included_modules ...\n</code></pre>\n",null,0],["includes","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-includes","(*args)","<p>Specify relationships to be included in the result set. For example:\n\n<pre>users = User.includes(:address)\nusers.each ...</pre>\n",null,1],["incompatible_argument_styles","OptionParser::Switch","Ruby/classes/OptionParser/Switch.html#method-c-incompatible_argument_styles","(arg, t)","",null,0],["incompatible_argument_styles","OptionParser::Switch::NoArgument","Ruby/classes/OptionParser/Switch/NoArgument.html#method-c-incompatible_argument_styles","(*)","",null,0],["incomplete_input?","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-incomplete_input-3F","()","<p>Returns true if the invalid byte sequence error is caused by premature end\nof string.\n\n<pre><code>ec = Encoding::Converter.new(&quot;EUC-JP&quot;, ...</code></pre>\n",null,0],["increment","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-increment","(attribute, by = 1)","<p>Initializes <code>attribute</code> to zero if <code>nil</code> and adds the\nvalue passed as <code>by</code> (default is 1). The increment is …\n",null,1],["increment","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-increment","(name, amount = 1, options = nil)","",null,1],["increment","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-increment","(name, amount = 1, options = nil)","<p>Increment an integer value in the cache.\n",null,1],["increment","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-i-increment","(name, amount = 1, options = nil)","",null,1],["increment","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-increment","(name, amount = 1, options = nil)","<p>Increment an integer value in the cache.\n<p>Options are passed to the underlying cache implementation.\n<p>All …\n",null,1],["increment!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-increment-21","(attribute, by = 1)","<p>Wrapper around <code>increment</code> that saves the record. This method\ndiffers from its non-bang version in that …\n",null,1],["increment_counter","ActiveRecord::CounterCache::ClassMethods","Rails/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-increment_counter","(counter_name, id)","<p>Increment a numeric field by one, via a direct SQL update.\n<p>This method is used primarily for maintaining …\n",null,1],["increment_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-increment_open_transactions","()","",null,1],["indent","REXML::Node","Ruby/classes/REXML/Node.html#method-i-indent","(to, ind)","",null,0],["indent","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-indent","(content, multiplier = 2)","",null,1],["indent","String","Rails/classes/String.html#method-i-indent","(amount, indent_string=nil, indent_empty_lines=false)","<p>Indents the lines in the receiver:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;def some_method\n  some_code\nend\n&quot;</span>.<span class=\"ruby-identifier\">indent</span>(<span class=\"ruby-value\">2</span>)\n<span class=\"ruby-comment\"># =&gt;</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">some_method</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["indent!","String","Rails/classes/String.html#method-i-indent-21","(amount, indent_string=nil, indent_empty_lines=false)","<p>Same as <code>indent</code>, except it indents the receiver in-place.\n<p>Returns the indented string, or <code>nil</code> if there …\n",null,1],["indent_text","REXML::Text","Ruby/classes/REXML/Text.html#method-i-indent_text","(string, level=1, style=\"\\t\", indentfirstline=true)","",null,0],["index","Array","Ruby/classes/Array.html#method-i-index","(p1)","<p>Returns the <em>index</em> of the first object in <code>ary</code> such\nthat the object is <code>==</code> to <code>obj</code>.\n<p>If a block is given instead …\n",null,0],["index","CSV::Row","Ruby/classes/CSV/Row.html#method-i-index","(header, minimum_index = 0)","<p>This method will return the index of a field with the provided\n<code>header</code>. The <code>offset</code> can be used to locate …\n",null,0],["index","ENV","Ruby/classes/ENV.html#method-c-index","(p1)","<p>Deprecated method that is equivalent to ENV.key\n",null,0],["index","Matrix","Ruby/classes/Matrix.html#method-i-index","(*args)","<p>The index method is specialized to return the index as [row, column] It\nalso accepts an optional <code>selector</code> …\n",null,0],["index","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-index","( child )","<p>Fetches the index of a given child @param child the child to get the index\nof @return the index of the …\n",null,0],["index","String","Ruby/classes/String.html#method-i-index","(p1, p2 = v2)","<p>Returns the index of the first occurrence of the given <em>substring</em>\nor pattern (<em>regexp</em>) in <em>str</em>. Returns …\n",null,0],["index","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-index","( keystr )","<p>Deprecated, used YAML::DBM#key instead.\n<p>Note: YAML::DBM#index makes warning from internal of ::DBM#index …\n",null,0],["index","ActionController::Middleware","Rails/classes/ActionController/Middleware.html#method-i-index","()","",null,1],["index","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-index","(column_name, options = {})","<p>Adds a new index to the table. <code>column_name</code> can be a single\nSymbol, or an Array of Symbols. See SchemaStatements#add_index …\n",null,1],["index","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-index","(column_name, options = {})","<p>Adds index options to the indexes hash, keyed by column name This is\nprimarily used to track indexes …\n",null,1],["index_algorithms","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-index_algorithms","()","<p>A list of index algorithms, to be filled by adapters that support them.\nMySQL and PostgreSQL have support …\n",null,1],["index_algorithms","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-index_algorithms","()","",null,1],["index_algorithms","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-index_algorithms","()","",null,1],["index_by","Enumerable","Rails/classes/Enumerable.html#method-i-index_by","()","<p>Convert an enumerable to a hash.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">people</span>.<span class=\"ruby-identifier\">index_by</span>(&amp;:<span class=\"ruby-identifier\">login</span>)\n  =<span class=\"ruby-operator\">&gt;</span> { <span class=\"ruby-string\">&quot;nextangle&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">&lt;</span><span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span><span class=\"ruby-operator\">&gt;</span>, <span class=\"ruby-string\">&quot;chade-&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["index_classes","RDoc::Generator::JsonIndex","Ruby/classes/RDoc/Generator/JsonIndex.html#method-i-index_classes","()","<p>Adds classes and modules to the index\n",null,0],["index_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_exists-3F","(table_name, column_name, options = {})","<p>Checks to see if an index exists on a table for a given index definition.\n\n<pre># Check an index exists\nindex_exists?(:suppliers, ...</pre>\n",null,1],["index_exists?","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-index_exists-3F","(column_name, options = {})","<p>Checks to see if an index exists. See SchemaStatements#index_exists?\n",null,1],["index_helper","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-index_helper","()","",null,1],["index_in_parent","REXML::Node","Ruby/classes/REXML/Node.html#method-i-index_in_parent","()","<p>Returns the position that <code>self</code> holds in its parent&#39;s\narray, indexed from 1.\n",null,0],["index_methods","RDoc::Generator::JsonIndex","Ruby/classes/RDoc/Generator/JsonIndex.html#method-i-index_methods","()","<p>Adds methods to the index\n",null,0],["index_name","ActiveRecord::SchemaMigration","Rails/classes/ActiveRecord/SchemaMigration.html#method-c-index_name","()","",null,1],["index_name_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_name_exists-3F","(table_name, index_name, default)","<p>Verifies the existence of an index with a given name.\n<p>The default argument is returned if the underlying …\n",null,1],["index_name_for_remove","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_name_for_remove","(table_name, options = {})","",null,1],["index_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-index_name_length","()","<p>Returns the maximum length of an index name.\n",null,1],["index_name_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-index_name_length","()","",null,1],["index_pages","RDoc::Generator::JsonIndex","Ruby/classes/RDoc/Generator/JsonIndex.html#method-i-index_pages","()","<p>Adds pages to the index\n",null,0],["indexes","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-indexes","(table_name, name = nil)","<p>Returns an array of indexes for the given table.\n",null,1],["indexes_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-indexes_per_table","()","<p>Returns the maximum number of indexes per table.\n",null,1],["indir","Sys","Ruby/classes/Sys.html#method-i-indir","(dir)","<p>Make <code>dir</code> the current working directory for the duration of\nexecuting the given block.\n",null,0],["inet","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-inet","(name, options = {})","",null,1],["infinite?","BigDecimal","Ruby/classes/BigDecimal.html#method-i-infinite-3F","()","<p>Returns nil, -1, or +1 depending on whether the value is finite, -infinity,\nor +infinity.\n",null,0],["infinite?","Float","Ruby/classes/Float.html#method-i-infinite-3F","()","<p>Returns <code>nil</code>, -1, or +1 depending on whether <em>flt</em> is\nfinite, -infinity, or +infinity.\n\n<pre><code>(0.0).infinite?   ...</code></pre>\n",null,0],["infinity","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Range","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Range.html#method-i-infinity","(options = {})","",null,1],["infinity?","OpenSSL::PKey::EC::Point","Ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-infinity-3F","()","",null,0],["infinity?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Range","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Range.html#method-i-infinity-3F","(value)","",null,1],["inflate","Gem","Ruby/classes/Gem.html#method-c-inflate","(data)","<p>A Zlib::Inflate#inflate wrapper\n",null,0],["inflate","Zlib","Ruby/classes/Zlib.html#method-c-inflate","(p1)","<p>Decompresses <code>string</code>. Raises a Zlib::NeedDict exception if a\npreset dictionary is needed for decompression. …\n",null,0],["inflate","Zlib::Inflate","Ruby/classes/Zlib/Inflate.html#method-c-inflate","(p1)","<p>Decompresses <code>string</code>. Raises a Zlib::NeedDict exception if a\npreset dictionary is needed for decompression. …\n",null,0],["inflate","Zlib::Inflate","Ruby/classes/Zlib/Inflate.html#method-i-inflate","(p1)","<p>Inputs <code>deflate_string</code> into the inflate stream and returns the\noutput from the stream.  Calling this method, …\n",null,0],["inflections","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-inflections","(locale = :en)","<p>Yields a singleton instance of Inflector::Inflections so you can specify\nadditional inflector rules. …\n",null,1],["info","Logger","Ruby/classes/Logger.html#method-i-info","(progname = nil, &block)","<p>Log an <code>INFO</code> message.\n<p><code>message</code> &mdash; The message to log; does not need to be a String.\n<p><code>progname</code> &mdash; In the block form, …\n",null,0],["info","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-i-info","","<p>Logs a <code>message</code> at the info (syslog info) log level, or logs\nthe message returned from the block.\n",null,0],["info","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-info","(msg)","<p>Shortcut for logging an INFO message\n",null,0],["info","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-info","()","<p>Returns key information as Array of: :num_keys\n\n<pre><code>The number of subkeys.</code></pre>\n<p>:max_key_length\n",null,0],["info?","Logger","Ruby/classes/Logger.html#method-i-info-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>INFO</code> messages.\n",null,0],["info?","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-info-3F","()","<p>Will the logger output INFO messages?\n",null,0],["info?","WEBrick::HTTPStatus","Ruby/classes/WEBrick/HTTPStatus.html#method-c-info-3F","(code)","<p>Is <code>code</code> an informational status?\n",null,0],["inheritable_copy","ActiveSupport::InheritableOptions","Rails/classes/ActiveSupport/InheritableOptions.html#method-i-inheritable_copy","()","",null,1],["inheritance_column","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-inheritance_column","()","<p>Defines the name of the table column which will store the class name on\nsingle-table inheritance situations. …\n",null,1],["inheritance_column=","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-inheritance_column-3D","(value)","<p>Sets the value of inheritance_column\n",null,1],["inherited","RSS::Element","Ruby/classes/RSS/Element.html#method-i-inherited","(klass)","",null,0],["inherited","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-inherited","(subclass)","",null,0],["inherited","AbstractController::Helpers::ClassMethods","Rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-inherited","(klass)","<p>When a class is inherited, wrap its helper module in a new module. This\nensures that the parent class&#39;s …\n",null,1],["inherited","ActionController::ParamsWrapper::ClassMethods","Rails/classes/ActionController/ParamsWrapper/ClassMethods.html#method-i-inherited","(klass)","<p>Sets the default wrapper key or model which will be used to determine\nwrapper key and attribute names. …\n",null,1],["inherited","ActionController::Railties::Helpers","Rails/classes/ActionController/Railties/Helpers.html#method-i-inherited","(klass)","",null,1],["inherited","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-c-inherited","(*)","",null,1],["inherited","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-i-inherited","(base)","",null,1],["inherited","Rails::Application","Rails/classes/Rails/Application.html#method-c-inherited","(base)","",null,1],["inherited","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-inherited","(base)","",null,1],["inherited","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-inherited","(base)","",null,1],["inherited","Rails::Railtie::Configurable::ClassMethods","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-inherited","(base)","",null,1],["inherited_array_reader","RSS::Utils::InheritedReader","Ruby/classes/RSS/Utils/InheritedReader.html#method-i-inherited_array_reader","(constant_name)","",null,0],["inherited_base","RSS::Element","Ruby/classes/RSS/Element.html#method-i-inherited_base","()","",null,0],["inherited_base","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-inherited_base","()","",null,0],["inherited_hash_reader","RSS::Utils::InheritedReader","Ruby/classes/RSS/Utils/InheritedReader.html#method-i-inherited_hash_reader","(constant_name)","",null,0],["inherited_reader","RSS::Utils::InheritedReader","Ruby/classes/RSS/Utils/InheritedReader.html#method-i-inherited_reader","(constant_name)","",null,0],["init","Gem::PackageTask","Ruby/classes/Gem/PackageTask.html#method-i-init","(gem)","<p>Initialization tasks without the “yield self” or define operations.\n",null,0],["init","IRB::Inspector","Ruby/classes/IRB/Inspector.html#method-i-init","()","<p>Proc to call when the inspector is activated, good for requiring dependant\nlibraries.\n",null,0],["init","Rake::Application","Ruby/classes/Rake/Application.html#method-i-init","(app_name='rake')","<p>Initialize the command line parameters and app name.\n",null,0],["init","Rake::Application","Ruby/classes/Rake/Application.html#method-i-init","(app_name='rake')","<p>Initialize the command line parameters and app name.\n",null,0],["init","Rake::PackageTask","Ruby/classes/Rake/PackageTask.html#method-i-init","(name, version)","<p>Initialization that bypasses the “yield self” and “define” step.\n",null,0],["init_color","Curses","Ruby/classes/Curses.html#method-c-init_color","(p1, p2, p3, p4)","<p>Changes the definition of a color. It takes four arguments:\n<p>the number of the color to be changed, <code>color</code> …\n",null,0],["init_fallbacks","I18n::Railtie","Rails/classes/I18n/Railtie.html#method-c-init_fallbacks","(fallbacks)","",null,1],["init_pair","Curses","Ruby/classes/Curses.html#method-c-init_pair","(p1, p2, p3)","<p>Changes the definition of a color-pair.\n<p>It takes three arguments: the number of the color-pair to be changed …\n",null,0],["init_screen","Curses","Ruby/classes/Curses.html#method-c-init_screen","()","<p>Initialize a standard screen\n<p>see also Curses.stdscr\n",null,0],["init_tags","RDoc::Markup::ToAnsi","Ruby/classes/RDoc/Markup/ToAnsi.html#method-i-init_tags","()","<p>Maps attributes to ANSI sequences\n",null,0],["init_tags","RDoc::Markup::ToBs","Ruby/classes/RDoc/Markup/ToBs.html#method-i-init_tags","()","<p>Sets a flag that is picked up by #annotate to do the right thing in\n#convert_string\n",null,0],["init_tags","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-init_tags","()","<p>Maps attributes to HTML tags\n",null,0],["init_tags","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-i-init_tags","()","<p>Maps attributes to HTML sequences\n",null,0],["init_tags","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-init_tags","()","<p>Maps attributes to HTML sequences\n",null,0],["init_with","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-init_with","(coder)","<p>Initialize an empty model object from <code>coder</code>.\n<code>coder</code> must contain the attributes necessary for initializing …\n",null,1],["initgroups","Process","Ruby/classes/Process.html#method-c-initgroups","(p1, p2)","<p>Initializes the supplemental group access list by reading the system group\ndatabase and using all groups …\n",null,0],["initialize","Gem::Package","Ruby/classes/Gem/Package.html#method-i-initialize","(gem)","<p>Creates a new package that will read or write to the file <code>gem</code>.\n",null,0],["initialize","RDoc::Generator::RI","Ruby/classes/RDoc/Generator/RI.html#method-i-initialize","(store, options)","<p>Set up a new ri generator\n",null,0],["initialize","RDoc::RD::Inline","Ruby/classes/RDoc/RD/Inline.html#method-i-initialize","(rdoc, reference)","<p>Initializes the Inline with <code>rdoc</code> and <code>inline</code>\n",null,0],["initialize","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-c-initialize","()","",null,0],["initialize","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-initialize","()","",null,1],["initialize!","Rails","Rails/classes/Rails.html#method-c-initialize-21","()","",null,1],["initialize_copy","Array","Ruby/classes/Array.html#method-i-initialize_copy","(p1)","<p>Replaces the contents of <code>self</code> with the contents of\n<code>other_ary</code>, truncating or expanding if necessary.\n\n<pre><code>a ...</code></pre>\n",null,0],["initialize_copy","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-initialize_copy","(other_spec)","<p>Duplicates array_attributes from <code>other_spec</code> so state isn&#39;t\nshared.\n",null,0],["initialize_copy","Hash","Ruby/classes/Hash.html#method-i-initialize_copy","(p1)","",null,0],["initialize_copy","OpenStruct","Ruby/classes/OpenStruct.html#method-i-initialize_copy","(orig)","<p>Duplicate an OpenStruct object members.\n",null,0],["initialize_copy","Rake::Cloneable","Ruby/classes/Rake/Cloneable.html#method-i-initialize_copy","(source)","<p>The hook that invoked by &#39;clone&#39; and &#39;dup&#39; methods.\n",null,0],["initialize_copy","Set","Ruby/classes/Set.html#method-i-initialize_copy","(orig)","<p>Copy internal hash.\n",null,0],["initialize_copy","String","Ruby/classes/String.html#method-i-initialize_copy","(p1)","<p>Replaces the contents and taintedness of <em>str</em> with the\ncorresponding values in <em>other_str</em>.\n\n<pre><code>s = &quot;hello&quot;  ...</code></pre>\n",null,0],["initialize_copy","Zlib::Deflate","Ruby/classes/Zlib/Deflate.html#method-i-initialize_copy","(p1)","<p>Duplicates the deflate stream.\n",null,0],["initialize_copy","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-initialize_copy","(other)","",null,1],["initialize_copy","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-initialize_copy","(other)","",null,1],["initialize_copy","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-initialize_copy","(other)","",null,1],["initialize_copy","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-i-initialize_copy","(other)","",null,1],["initialize_copy","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-initialize_copy","(other)","",null,1],["initialize_generated_modules","ActiveRecord::Core::ClassMethods","Rails/classes/ActiveRecord/Core/ClassMethods.html#method-i-initialize_generated_modules","()","",null,1],["initialize_http_header","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-initialize_http_header","(initheader)","",null,0],["initialize_i18n","I18n::Railtie","Rails/classes/I18n/Railtie.html#method-c-initialize_i18n","(app)","<p>Setup i18n configuration.\n",null,1],["initialize_methods_etc","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-initialize_methods_etc","()","<p>Sets the defaults for methods and so-forth\n",null,0],["initialize_schema_migrations_table","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-initialize_schema_migrations_table","()","",null,1],["initialize_schema_migrations_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-initialize_schema_migrations_table","()","<p>Should not be called normally, but this operation is non-destructive. The\nmigrations module handles this …\n",null,1],["initialize_sid","ActionDispatch::Session::Compatibility","Rails/classes/ActionDispatch/Session/Compatibility.html#method-i-initialize_sid","()","",null,1],["initialize_tracer","IRB","Ruby/classes/IRB.html#method-c-initialize_tracer","()","<p>initialize tracing function\n",null,0],["initialized?","Rails","Rails/classes/Rails.html#method-c-initialized-3F","()","",null,1],["initialized?","Rails::Application","Rails/classes/Rails/Application.html#method-i-initialized-3F","()","<p>Returns true if the application is initialized.\n",null,1],["initializer","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-initializer","(filename, data=nil, &block)","<p>Create a new initializer with the provided code (either in a block or a\nstring).\n\n<pre>initializer(&quot;globals.rb&quot;) ...</pre>\n",null,1],["initializer","Rails::Initializable::ClassMethods","Rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializer","(name, opts = {}, &blk)","",null,1],["initializers","Rails::Initializable","Rails/classes/Rails/Initializable.html#method-i-initializers","()","",null,1],["initializers","Rails::Initializable::ClassMethods","Rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializers","()","",null,1],["initializers_chain","Rails::Initializable::ClassMethods","Rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializers_chain","()","",null,1],["initializers_for","Rails::Initializable::ClassMethods","Rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializers_for","(binding)","",null,1],["inject","Enumerable","Ruby/classes/Enumerable.html#method-i-inject","(p1 = v1, p2 = v2)","<p>Combines all elements of <em>enum</em> by applying a binary operation,\nspecified by a block or a symbol that names …\n",null,0],["inject_into_list","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-inject_into_list","(dep_list)","",null,0],["inline","RDoc::RD::InlineParser","Ruby/classes/RDoc/RD/InlineParser.html#method-i-inline","(rdoc, reference = rdoc)","<p>Creates a new RDoc::RD::Inline for the <code>rdoc</code> markup and the raw\n<code>reference</code>\n",null,0],["inline_html?","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_html-3F","()","",null,0],["inline_html?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_html-3F","()","",null,0],["inline_other?","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_other-3F","()","",null,0],["inline_other?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_other-3F","()","",null,0],["inline_other_base64?","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_other_base64-3F","()","",null,0],["inline_other_base64?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_other_base64-3F","()","",null,0],["inline_other_text?","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_other_text-3F","()","",null,0],["inline_other_text?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_other_text-3F","()","",null,0],["inline_other_xml?","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_other_xml-3F","()","",null,0],["inline_other_xml?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_other_xml-3F","()","",null,0],["inline_text?","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_text-3F","()","",null,0],["inline_text?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_text-3F","()","",null,0],["inline_xhtml?","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-inline_xhtml-3F","()","",null,0],["inline_xhtml?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-inline_xhtml-3F","()","",null,0],["inner_product","Vector","Ruby/classes/Vector.html#method-i-inner_product","(v)","<p>Returns the inner product of this vector with the other.\n\n<pre><code>Vector[4,7].inner_product Vector[10,1]  =&gt; 47\n</code></pre>\n",null,0],["ino","File::Stat","Ruby/classes/File/Stat.html#method-i-ino","()","<p>Returns the inode number for <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).ino   #=&gt; 1083669\n</code></pre>\n",null,0],["inplace_mode","ARGF","Ruby/classes/ARGF.html#method-i-inplace_mode","()","<p>Returns the file extension appended to the names of modified files under\ninplace-edit mode. This value …\n",null,0],["inplace_mode=","ARGF","Ruby/classes/ARGF.html#method-i-inplace_mode-3D","(p1)","\n<pre><code>Sets the filename extension for inplace editing mode to the given String.\nEach file being edited has ...</code></pre>\n",null,0],["input","Gem::MockGemUi","Ruby/classes/Gem/MockGemUi.html#method-i-input","()","",null,0],["input=","Readline","Ruby/classes/Readline.html#method-c-input-3D","(p1)","<p>Specifies a File object <code>input</code> that is input stream for\nReadline.readline method.\n<p>Raises SecurityError …\n",null,0],["input=","Shell::AppendFile","Ruby/classes/Shell/AppendFile.html#method-i-input-3D","(filter)","",null,0],["input=","Shell::AppendIO","Ruby/classes/Shell/AppendIO.html#method-i-input-3D","(filter)","",null,0],["input=","Shell::Filter","Ruby/classes/Shell/Filter.html#method-i-input-3D","(filter)","",null,0],["input=","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-input-3D","(inp)","",null,0],["input?","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-i-input-3F","()","<p>Returns true if the parameter is input.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</code></pre>\n",null,0],["inquiry","String","Rails/classes/String.html#method-i-inquiry","()","<p>Wraps the current string in the <code>ActiveSupport::StringInquirer</code>\nclass, which gives you a prettier way to …\n",null,1],["insch","Curses","Ruby/classes/Curses.html#method-c-insch","(p1)","<p>Insert a character <code>ch</code>, before the cursor.\n",null,0],["insch","Curses::Window","Ruby/classes/Curses/Window.html#method-i-insch","(p1)","<p>Insert a character <code>ch</code>, before the cursor, in the current\nwindow\n",null,0],["insert","Array","Ruby/classes/Array.html#method-i-insert","(*args)","<p>Inserts the given values before the element with the given\n<code>index</code>.\n<p>Negative indices count backwards from …\n",null,0],["insert","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-insert","(irb)","<p>Add the given <code>irb</code> session to the jobs Array.\n",null,0],["insert","String","Ruby/classes/String.html#method-i-insert","(p1, p2)","<p>Inserts <em>other_str</em> before the character at the given\n<em>index</em>, modifying <em>str</em>. Negative indices count from …\n",null,0],["insert","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-insert","(index, *args, &block)","",null,1],["insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert","(arel, name = nil, pk = nil, id_value = nil, sequence_name = nil, binds = [])","<p>Returns the last auto-generated ID from the affected table.\n<p><code>id_value</code> will be returned unless the value …\n",null,1],["insert","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-insert","(values)","",null,1],["insert","Rails::Configuration::MiddlewareStackProxy","Rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-insert","(*args, &block)","",null,1],["insert_after","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-insert_after","( child1, child2 )","<p>Inserts an child after another child @param child1 this is either an xpath\nor an Element.  If an Element …\n",null,0],["insert_after","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-insert_after","(index, *args, &block)","",null,1],["insert_after","Rails::Configuration::MiddlewareStackProxy","Rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-insert_after","(*args, &block)","",null,1],["insert_before","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-insert_before","( child1, child2 )","<p>Inserts an child before another child @param child1 this is either an xpath\nor an Element.  If an Element …\n",null,0],["insert_before","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-insert_before","(index, *args, &block)","",null,1],["insert_before","Rails::Configuration::MiddlewareStackProxy","Rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-insert_before","(*args, &block)","",null,1],["insert_fixture","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert_fixture","(fixture, table_name)","<p>Inserts the given fixture into the table. Overridden in adapters that\nrequire something beyond a simple …\n",null,1],["insert_output","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-insert_output","(p1)","<p>Inserts string into the encoding converter. The string will be converted to\nthe destination encoding …\n",null,0],["insert_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert_sql","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","<p>Returns the last auto-generated ID from the affected table.\n",null,1],["insert_sql","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-insert_sql","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","",null,1],["insert_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-insert_sql","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","<p>Executes an INSERT query and returns the new record&#39;s ID\n",null,1],["insert_text","Readline","Ruby/classes/Readline.html#method-c-insert_text","(p1)","<p>Insert text into the line at the current cursor position.\n<p>See GNU Readline&#39;s rl_insert_text function. …\n",null,0],["insertln","Curses","Ruby/classes/Curses.html#method-c-insertln","()","<p>Inserts a line above the cursor, and the bottom line is lost\n",null,0],["insertln","Curses::Window","Ruby/classes/Curses/Window.html#method-i-insertln","()","<p>Inserts a line above the cursor, and the bottom line is lost\n",null,0],["inside_template","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-inside_template","()","",null,1],["inside_template?","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-inside_template-3F","()","",null,1],["inspect","ARGF","Ruby/classes/ARGF.html#method-i-inspect","()","",null,0],["inspect","Addrinfo","Ruby/classes/Addrinfo.html#method-i-inspect","()","<p>returns a string which shows addrinfo in human-readable form.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).inspect #=&gt; ...\n</code></pre>\n",null,0],["inspect","Array","Ruby/classes/Array.html#method-i-inspect","()","<p>Creates a string representation of <code>self</code>.\n\n<pre><code>[ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ].to_s     #=&gt; &quot;[\\&quot;a\\&quot;, \\&quot;b\\&quot;, \\&quot;c\\&quot;]&quot;\n</code></pre>\n",null,0],["inspect","BigDecimal","Ruby/classes/BigDecimal.html#method-i-inspect","()","<p>Returns debugging information about the value as a string of\ncomma-separated values in angle brackets …\n",null,0],["inspect","Bignum","Ruby/classes/Bignum.html#method-i-inspect","(p1 = v1)","",null,0],["inspect","CSV","Ruby/classes/CSV.html#method-i-inspect","()","<p>Returns a simplified description of the key CSV attributes in an ASCII\ncompatible String.\n",null,0],["inspect","CSV::Row","Ruby/classes/CSV/Row.html#method-i-inspect","()","<p>A summary of fields, by header, in an ASCII compatible String.\n",null,0],["inspect","CSV::Table","Ruby/classes/CSV/Table.html#method-i-inspect","()","<p>Shows the mode and size of this table in a US-ASCII String.\n",null,0],["inspect","Complex","Ruby/classes/Complex.html#method-i-inspect","()","<p>Returns the value as a string for inspection.\n\n<pre><code>Complex(2).inspect                       #=&gt; &quot;(2+0i)&quot;\nComplex(&#39;-8/6&#39;).inspect ...\n</code></pre>\n",null,0],["inspect","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-inspect","()","<p>Returns a string formatted with an easily readable representation of the\ninternal state of the DL::CFunc …\n",null,0],["inspect","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-inspect","()","<p>Returns a string formatted with an easily readable representation of the\ninternal state of the DL::CPtr …\n",null,0],["inspect","Date","Ruby/classes/Date.html#method-i-inspect","()","<p>Returns the value as a string for inspection.\n\n<pre><code>Date.new(2001,2,3).inspect\n          #=&gt; &quot;#&lt;Date: 2001-02-03 ...\n</code></pre>\n",null,0],["inspect","Digest::HMAC","Ruby/classes/Digest/HMAC.html#method-i-inspect","()","<p>Creates a printable version of the hmac object.\n",null,0],["inspect","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-inspect","()","<p>Creates a printable version of the digest object.\n",null,0],["inspect","Dir","Ruby/classes/Dir.html#method-i-inspect","()","<p>Return a string describing this Dir object.\n",null,0],["inspect","ENV","Ruby/classes/ENV.html#method-c-inspect","()","<p>Returns the contents of the environment as a String.\n",null,0],["inspect","Encoding","Ruby/classes/Encoding.html#method-i-inspect","()","<p>Returns a string which represents the encoding for programmers.\n\n<pre><code>Encoding::UTF_8.inspect       #=&gt; &quot;#&lt;Encoding:UTF-8&gt;&quot; ...\n</code></pre>\n",null,0],["inspect","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-inspect","()","<p>Returns a printable version of <em>ec</em>\n\n<pre><code>ec = Encoding::Converter.new(&quot;iso-8859-1&quot;, &quot;utf-8&quot;)\nputs ec.inspect ...</code></pre>\n",null,0],["inspect","Enumerator","Ruby/classes/Enumerator.html#method-i-inspect","()","<p>Creates a printable version of <em>e</em>.\n",null,0],["inspect","Exception","Ruby/classes/Exception.html#method-i-inspect","()","<p>Return this exception&#39;s class name and message\n",null,0],["inspect","FalseClass","Ruby/classes/FalseClass.html#method-i-inspect","()","",null,0],["inspect","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-inspect","()","<p>Returns a string formatted with an easily readable representation of the\ninternal state of the pointer. …\n",null,0],["inspect","File::Stat","Ruby/classes/File/Stat.html#method-i-inspect","()","<p>Produce a nicely formatted description of <em>stat</em>.\n\n<pre><code>File.stat(&quot;/etc/passwd&quot;).inspect\n   #=&gt; &quot;#&lt;File::Stat ...\n</code></pre>\n",null,0],["inspect","Fixnum","Ruby/classes/Fixnum.html#method-i-inspect","(p1 = v1)","",null,0],["inspect","Float","Ruby/classes/Float.html#method-i-inspect","()","",null,0],["inspect","Gem::Platform","Ruby/classes/Gem/Platform.html#method-i-inspect","()","",null,0],["inspect","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-inspect","()","",null,0],["inspect","Hash","Ruby/classes/Hash.html#method-i-inspect","()","<p>Return the contents of this hash as a string.\n\n<pre><code>h = { &quot;c&quot; =&gt; 300, &quot;a&quot; =&gt; 100, &quot;d&quot; =&gt; 400, &quot;c&quot; =&gt; 300  } ...\n</code></pre>\n",null,0],["inspect","IO","Ruby/classes/IO.html#method-i-inspect","()","<p>Return a string describing this IO object.\n",null,0],["inspect","IPAddr","Ruby/classes/IPAddr.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of the ipaddr.\n(“#&lt;IPAddr: family:address/mask&gt;”) …\n",null,0],["inspect","IRB::Irb","Ruby/classes/IRB/Irb.html#method-i-inspect","()","<p>Outputs the local variables to this current session, including\n#signal_status and #context, using IRB::Locale …\n",null,0],["inspect","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-inspect","()","<p>Outputs a list of jobs, see the irb command <code>irb_jobs</code>, or\n<code>jobs</code>.\n",null,0],["inspect","MatchData","Ruby/classes/MatchData.html#method-i-inspect","()","<p>Returns a printable version of <em>mtch</em>.\n\n<pre><code>puts /.$/.match(&quot;foo&quot;).inspect\n#=&gt; #&lt;MatchData &quot;o&quot;&gt;\n\nputs /(.)(.)(.)/.match(&quot;foo&quot;).inspect ...\n</code></pre>\n",null,0],["inspect","Matrix","Ruby/classes/Matrix.html#method-i-inspect","()","<p>Overrides Object#inspect\n",null,0],["inspect","Method","Ruby/classes/Method.html#method-i-inspect","()","<p>Returns the name of the underlying method.\n\n<pre><code>&quot;cat&quot;.method(:count).inspect   #=&gt; &quot;#&lt;Method: String#count&gt;&quot;\n</code></pre>\n",null,0],["inspect","Module","Ruby/classes/Module.html#method-i-inspect","()","",null,0],["inspect","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-inspect","()","",null,0],["inspect","Net::HTTPGenericRequest","Ruby/classes/Net/HTTPGenericRequest.html#method-i-inspect","()","",null,0],["inspect","Net::HTTPResponse","Ruby/classes/Net/HTTPResponse.html#method-i-inspect","()","",null,0],["inspect","Net::InternetMessageIO::WriteAdapter","Ruby/classes/Net/InternetMessageIO/WriteAdapter.html#method-i-inspect","()","",null,0],["inspect","Net::POP3","Ruby/classes/Net/POP3.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n",null,0],["inspect","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n",null,0],["inspect","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n",null,0],["inspect","NilClass","Ruby/classes/NilClass.html#method-i-inspect","()","<p>Always returns the string “nil”.\n",null,0],["inspect","Object","Ruby/classes/Object.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of\n<em>obj</em>. By default, show the class name and …\n",null,0],["inspect","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-inspect","()","",null,0],["inspect","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-inspect","()","",null,0],["inspect","OpenSSL::HMAC","Ruby/classes/OpenSSL/HMAC.html#method-i-inspect","()","",null,0],["inspect","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-inspect","()","",null,0],["inspect","OpenStruct","Ruby/classes/OpenStruct.html#method-i-inspect","()","<p>Returns a string containing a detailed summary of the keys and values.\n",null,0],["inspect","OptionParser::ParseError","Ruby/classes/OptionParser/ParseError.html#method-i-inspect","()","",null,0],["inspect","Proc","Ruby/classes/Proc.html#method-i-inspect","()","",null,0],["inspect","Process::Status","Ruby/classes/Process/Status.html#method-i-inspect","()","<p>Override the inspection method.\n\n<pre><code>system(&quot;false&quot;)\np $?.inspect #=&gt; &quot;#&lt;Process::Status: pid 12861 exit 1&gt;&quot;\n</code></pre>\n",null,0],["inspect","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-inspect","()","",null,0],["inspect","REXML::Element","Ruby/classes/REXML/Element.html#method-i-inspect","()","",null,0],["inspect","REXML::Instruction","Ruby/classes/REXML/Instruction.html#method-i-inspect","()","",null,0],["inspect","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-inspect","()","",null,0],["inspect","REXML::Text","Ruby/classes/REXML/Text.html#method-i-inspect","()","",null,0],["inspect","REXML::Validation::Choice","Ruby/classes/REXML/Validation/Choice.html#method-i-inspect","()","",null,0],["inspect","REXML::Validation::Event","Ruby/classes/REXML/Validation/Event.html#method-i-inspect","()","",null,0],["inspect","REXML::Validation::Interleave","Ruby/classes/REXML/Validation/Interleave.html#method-i-inspect","()","",null,0],["inspect","REXML::Validation::Ref","Ruby/classes/REXML/Validation/Ref.html#method-i-inspect","()","",null,0],["inspect","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-i-inspect","()","",null,0],["inspect","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-i-inspect","()","",null,0],["inspect","Rake::Task","Ruby/classes/Rake/Task.html#method-i-inspect","()","",null,0],["inspect","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-i-inspect","()","",null,0],["inspect","Range","Ruby/classes/Range.html#method-i-inspect","()","<p>Convert this range object to a printable form (using <code>inspect</code>\nto convert the begin and end objects).\n",null,0],["inspect","Rational","Ruby/classes/Rational.html#method-i-inspect","()","<p>Returns the value as a string for inspection.\n\n<pre><code>Rational(2).inspect      #=&gt; &quot;(2/1)&quot;\nRational(-8, 6).inspect ...\n</code></pre>\n",null,0],["inspect","Regexp","Ruby/classes/Regexp.html#method-i-inspect","()","<p>Produce a nicely formatted string-version of <em>rxp</em>. Perhaps\nsurprisingly, <code>#inspect</code> actually produces the …\n",null,0],["inspect","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-inspect","()","<p>Returns a human-readable string representation of this instruction\nsequence, including the #label and …\n",null,0],["inspect","Set","Ruby/classes/Set.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of the set.\n(“#&lt;Set: {element1, element2, …\n",null,0],["inspect","Shell","Ruby/classes/Shell.html#method-i-inspect","()","",null,0],["inspect","Shell::Filter","Ruby/classes/Shell/Filter.html#method-i-inspect","()","",null,0],["inspect","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-inspect","()","<p>returns a string which shows ancillarydata in human-readable form.\n\n<pre><code>p Socket::AncillaryData.new(:INET6, ...</code></pre>\n",null,0],["inspect","Socket::Option","Ruby/classes/Socket/Option.html#method-i-inspect","()","<p>Returns a string which shows sockopt in human-readable form.\n\n<pre><code>p Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, ...</code></pre>\n",null,0],["inspect","String","Ruby/classes/String.html#method-i-inspect","()","<p>Returns a printable version of <em>str</em>, surrounded by quote marks,\nwith special characters escaped.\n\n<pre><code>str = ...</code></pre>\n",null,0],["inspect","StringScanner","Ruby/classes/StringScanner.html#method-i-inspect","()","<p>Returns a string that represents the StringScanner object, showing:\n<p>the current position\n<p>the size of the …\n",null,0],["inspect","Struct","Ruby/classes/Struct.html#method-i-inspect","()","<p>Describe the contents of this struct in a string.\n",null,0],["inspect","Symbol","Ruby/classes/Symbol.html#method-i-inspect","()","<p>Returns the representation of <em>sym</em> as a symbol literal.\n\n<pre><code>:fred.inspect   #=&gt; &quot;:fred&quot;\n</code></pre>\n",null,0],["inspect","Syslog","Ruby/classes/Syslog.html#method-c-inspect","()","<p>Returns an inspect() string summarizing the object state.\n",null,0],["inspect","Tempfile","Ruby/classes/Tempfile.html#method-i-inspect","()","",null,0],["inspect","Thread","Ruby/classes/Thread.html#method-i-inspect","()","<p>Dump the name, id, and status of <em>thr</em> to a string.\n",null,0],["inspect","Thread::Backtrace::Location","Ruby/classes/Thread/Backtrace/Location.html#method-i-inspect","()","<p>Returns the same as calling <code>inspect</code> on the string\nrepresentation of #to_str\n",null,0],["inspect","Time","Ruby/classes/Time.html#method-i-inspect","()","<p>Returns a string representing <em>time</em>. Equivalent to calling\n#strftime with the appropriate format string. …\n",null,0],["inspect","TracePoint","Ruby/classes/TracePoint.html#method-i-inspect","()","<p>Return a string containing a human-readable TracePoint status.\n",null,0],["inspect","TrueClass","Ruby/classes/TrueClass.html#method-i-inspect","()","",null,0],["inspect","URI::Generic","Ruby/classes/URI/Generic.html#method-i-inspect","()","",null,0],["inspect","URI::Parser","Ruby/classes/URI/Parser.html#method-i-inspect","()","",null,0],["inspect","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-inspect","()","<p>Returns the name of the underlying method.\n\n<pre><code>&quot;cat&quot;.method(:count).inspect   #=&gt; &quot;#&lt;Method: String#count&gt;&quot;\n</code></pre>\n",null,0],["inspect","Vector","Ruby/classes/Vector.html#method-i-inspect","()","<p>Overrides Object#inspect\n",null,0],["inspect","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-inspect","()","<p>Returns the method name with class name.\n",null,0],["inspect","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-i-inspect","()","<p>Returns the parameter name with class name. If the parameter has default\nvalue, then returns name=value …\n",null,0],["inspect","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-inspect","()","<p>Returns the type name with class name.\n\n<pre><code>ie = WIN32OLE.new(&#39;InternetExplorer.Application&#39;)\nie.ole_type.inspect ...</code></pre>\n",null,0],["inspect","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-inspect","()","<p>Returns the type library name with class name.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object ...</code></pre>\n",null,0],["inspect","WIN32OLE_VARIABLE","Ruby/classes/WIN32OLE_VARIABLE.html#method-i-inspect","()","<p>Returns the OLE variable name and the value with class name.\n",null,0],["inspect","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-inspect","()","",null,0],["inspect","Zlib::GzipFile::Error","Ruby/classes/Zlib/GzipFile/Error.html#method-i-inspect","()","<p>Constructs a String of the GzipFile Error\n",null,0],["inspect","ActionDispatch::MiddlewareStack::Middleware","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-inspect","()","",null,1],["inspect","ActionDispatch::Routing::PathRedirect","Rails/classes/ActionDispatch/Routing/PathRedirect.html#method-i-inspect","()","",null,1],["inspect","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-inspect","()","",null,1],["inspect","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-inspect","()","<p>Returns the contents of the record as a nicely formatted string.\n",null,1],["inspect","ActiveRecord::Core::ClassMethods","Rails/classes/ActiveRecord/Core/ClassMethods.html#method-i-inspect","()","<p>Returns a string like &#39;Post(id:integer, title:string, body:text)&#39;\n",null,1],["inspect","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-inspect","()","",null,1],["inspect","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-inspect","()","",null,1],["inspect","Date","Rails/classes/Date.html#method-i-inspect","()","",null,1],["inspect","DateTime","Rails/classes/DateTime.html#method-i-inspect","()","",null,1],["inspect","Rails::Info","Rails/classes/Rails/Info.html#method-c-inspect","()","",null,1],["inspect?","IRB::Context","Ruby/classes/IRB/Context.html#method-i-inspect-3F","()","<p>Whether #inspect_mode is set or not, see #inspect_mode= for more detail.\n",null,0],["inspect_mode=","IRB::Context","Ruby/classes/IRB/Context.html#method-i-inspect_mode-3D","(opt)","<p>Specifies the inspect mode with <code>opt</code>:\n<p><code>true</code> &mdash; display <code>inspect</code>\n<p><code>false</code> &mdash; display <code>to_s</code>\n",null,0],["inspect_sockaddr","Addrinfo","Ruby/classes/Addrinfo.html#method-i-inspect_sockaddr","()","<p>returns a string which shows the sockaddr in <em>addrinfo</em> with\nhuman-readable form.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, ...</code></pre>\n",null,0],["inspect_value","IRB::Inspector","Ruby/classes/IRB/Inspector.html#method-i-inspect_value","(v)","<p>Proc to call when the input is evaluated and output in irb.\n",null,0],["install","FileUtils","Ruby/classes/FileUtils.html#method-c-install","(src, dest, options = {})","<p>Options: mode preserve noop verbose\n<p>If <code>src</code> is not same as <code>dest</code>, copies it and changes\nthe permission mode …\n",null,0],["install","Gem","Ruby/classes/Gem.html#method-c-install","(name, version = Gem::Requirement.default)","<p>Top level install helper method. Allows you to install gems interactively:\n\n<pre><code>% irb\n&gt;&gt; Gem.install &quot;minitest&quot; ...</code></pre>\n",null,0],["install","Gem::DependencyInstaller","Ruby/classes/Gem/DependencyInstaller.html#method-i-install","(dep_or_name, version = Gem::Requirement.default)","<p>Installs the gem <code>dep_or_name</code> and all its dependencies. \nReturns an Array of installed gem specifications. …\n",null,0],["install","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-install","()","<p>Installs the gem and returns a loaded Gem::Specification for the installed\ngem.\n<p>The gem will be installed …\n",null,0],["install","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-install","(options, &b)","",null,0],["install","Object","Ruby/classes/Object.html#method-i-install","()","<p>Copy SOURCE to DEST.\n\n<pre><code>ruby -run -e install -- [OPTION] SOURCE DEST\n\n-p          apply access/modification ...</code></pre>\n",null,0],["install","Sys","Ruby/classes/Sys.html#method-i-install","(wildcard, dest_dir, mode)","<p>Install all the files matching <code>wildcard</code> into the\n<code>dest_dir</code> directory.  The permission mode is set to  …\n",null,0],["install_acl","DRb","Ruby/classes/DRb.html#method-c-install_acl","(acl)","<p>Set the default ACL to <code>acl</code>.\n<p>See DRb::DRbServer.default_acl.\n",null,0],["install_alias_method","IRB::ExtendCommandBundle","Ruby/classes/IRB/ExtendCommandBundle.html#method-i-install_alias_method","(to, from, override = NO_OVERRIDE)","<p>Installs alias methods for the default irb commands, see\n::install_extend_commands.\n",null,0],["install_class_name","RSS::BaseListener","Ruby/classes/RSS/BaseListener.html#method-i-install_class_name","(uri, tag_name, class_name)","<p>record class_name for the supplied uri and tag_name\n",null,0],["install_date_element","RSS::BaseModel","Ruby/classes/RSS/BaseModel.html#method-i-install_date_element","(tag_name, uri, occurs, name=nil, type=nil, disp_name=nil)","",null,0],["install_dublin_core","RSS::Maker::DublinCoreModel","Ruby/classes/RSS/Maker/DublinCoreModel.html#method-c-install_dublin_core","(klass)","",null,0],["install_executables","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-install_executables","(bin_dir)","",null,0],["install_extend_commands","IRB::ContextExtender","Ruby/classes/IRB/ContextExtender.html#method-c-install_extend_commands","()","<p>Installs the default context extensions as irb commands:\n<p>Context#eval_history= &mdash; <code>irb/ext/history.rb</code>\n<p>Context#use_tracer= … &mdash; ",null,0],["install_extend_commands","IRB::ExtendCommandBundle","Ruby/classes/IRB/ExtendCommandBundle.html#method-c-install_extend_commands","()","<p>Installs the default irb commands:\n<p><code>irb_current_working_workspace</code> &mdash; Context#main\n<p><code>irb_change_workspace</code> &mdash; Context#change_workspace …\n",null,0],["install_file","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-install_file","(file, dest_dir)","",null,0],["install_from_gemdeps","Gem::Commands::InstallCommand","Ruby/classes/Gem/Commands/InstallCommand.html#method-i-install_from_gemdeps","(gf)","",null,0],["install_get_attribute","RSS::Element","Ruby/classes/RSS/Element.html#method-i-install_get_attribute","(name, uri, required=true, type=nil, disp_name=nil, element_name=nil)","",null,0],["install_get_text_element","RSS::BaseListener","Ruby/classes/RSS/BaseListener.html#method-i-install_get_text_element","(uri, name, accessor_base)","",null,0],["install_have_attribute_element","RSS::BaseModel","Ruby/classes/RSS/BaseModel.html#method-i-install_have_attribute_element","(tag_name, uri, occurs, name=nil, type=nil)","",null,0],["install_have_child_element","RSS::BaseModel","Ruby/classes/RSS/BaseModel.html#method-i-install_have_child_element","(tag_name, uri, occurs, name=nil, type=nil)","",null,0],["install_have_children_element","RSS::BaseModel","Ruby/classes/RSS/BaseModel.html#method-i-install_have_children_element","(tag_name, uri, occurs, name=nil, plural_name=nil)","",null,0],["install_id_conv","DRb","Ruby/classes/DRb.html#method-c-install_id_conv","(idconv)","<p>Set the default id conversion object.\n<p>This is expected to be an instance such as DRb::DRbIdConv that responds …\n",null,0],["install_image_favicon","RSS::Maker::ImageFaviconModel","Ruby/classes/RSS/Maker/ImageFaviconModel.html#method-c-install_image_favicon","(klass)","",null,0],["install_image_item","RSS::Maker::ImageItemModel","Ruby/classes/RSS/Maker/ImageItemModel.html#method-c-install_image_item","(klass)","",null,0],["install_indicies","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-install_indicies","()","<p>Install generated indicies into the destination directory.\n",null,0],["install_into","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-install_into","(dir, force=true, &b)","",null,0],["install_lib","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-install_lib","(lib_dir)","",null,0],["install_list","ACL","Ruby/classes/ACL.html#method-i-install_list","(list)","<p>Adds <code>list</code> of ACL entries to this ACL.\n",null,0],["install_model","RSS::Element","Ruby/classes/RSS/Element.html#method-i-install_model","(tag, uri, occurs=nil, getter=nil, plural=false)","",null,0],["install_must_call_validator","RSS::Element","Ruby/classes/RSS/Element.html#method-i-install_must_call_validator","(prefix, uri)","",null,0],["install_ns","RSS::Element","Ruby/classes/RSS/Element.html#method-i-install_ns","(prefix, uri)","",null,0],["install_rdoc","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-install_rdoc","()","",null,0],["install_siginfo_handler","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-install_siginfo_handler","()","<p>Installs a siginfo handler that prints the current filename.\n",null,0],["install_system_commands","Shell","Ruby/classes/Shell.html#method-c-install_system_commands","(pre = \"sys_\")","<p>Convenience method for Shell::CommandProcessor.install_system_commands\n",null,0],["install_taxo_topic","RSS::Maker::TaxonomyTopicModel","Ruby/classes/RSS/Maker/TaxonomyTopicModel.html#method-c-install_taxo_topic","(klass)","",null,0],["install_taxo_topics","RSS::Maker::TaxonomyTopicsModel","Ruby/classes/RSS/Maker/TaxonomyTopicsModel.html#method-c-install_taxo_topics","(klass)","",null,0],["install_text_element","RSS::BaseModel","Ruby/classes/RSS/BaseModel.html#method-i-install_text_element","(tag_name, uri, occurs, name=nil, type=nil, disp_name=nil)","",null,0],["install_update_defaults_str","Gem::InstallUpdateOptions","Ruby/classes/Gem/InstallUpdateOptions.html#method-i-install_update_defaults_str","()","<p>Default options for the gem install command.\n",null,0],["installation_satisfies_dependency?","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-installation_satisfies_dependency-3F","(dependency)","<p>True if the gems in the system satisfy <code>dependency</code>.\n",null,0],["installed?","Gem::DependencyResolver::ActivationRequest","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html#method-i-installed-3F","()","<p>Indicates if the requested gem has already been installed.\n",null,0],["installed_docs","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-installed_docs","()","<p>Returns an Array of installed documentation.\n<p>Each entry contains the documentation name (gem name, &#39;Ruby …\n",null,0],["installed_specs","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-installed_specs","()","<p>Return an Array of Specifications contained within the gem_home we&#39;ll\nbe installing into.\n",null,0],["instance","CSV","Ruby/classes/CSV.html#method-c-instance","(data = $stdout, options = Hash.new)","<p>This method will return a CSV instance, just like CSV::new(), but the\ninstance will be cached and returned …\n",null,0],["instance","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-i-instance","()","<p>Returns self. Allows a CommandManager instance to stand in for the class\nitself.\n",null,0],["instance","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-c-instance","()","<p>Return the authoritative instance of the command manager.\n",null,0],["instance","Prime","Ruby/classes/Prime.html#method-i-instance","()","<p>Returns the default instance of Prime.\n",null,0],["instance","Syslog","Ruby/classes/Syslog.html#method-c-instance","()","<p>Returns self, for backward compatibility.\n",null,0],["instance","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-c-instance","(locale = :en)","",null,1],["instance","Rails::Railtie::Configurable::ClassMethods","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-instance","()","",null,1],["instance_attributes","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-instance_attributes","()","<p>Instance attributes\n",null,0],["instance_delegate","Forwardable","Ruby/classes/Forwardable.html#method-i-instance_delegate","(hash)","<p>Takes a hash as its argument.  The key is a symbol or an array of symbols. \nThese symbols correspond …\n",null,0],["instance_eval","BasicObject","Ruby/classes/BasicObject.html#method-i-instance_eval","(*args)","<p>Evaluates a string containing Ruby source code, or the given block, within\nthe context of the receiver …\n",null,0],["instance_exec","BasicObject","Ruby/classes/BasicObject.html#method-i-instance_exec","(*args)","<p>Executes the given block within the context of the receiver (<em>obj</em>).\nIn order to set the context, the variable …\n",null,0],["instance_method","Module","Ruby/classes/Module.html#method-i-instance_method","(p1)","<p>Returns an <code>UnboundMethod</code> representing the given instance\nmethod in <em>mod</em>.\n\n<pre><code>class Interpreter\n  def do_a() ...\n</code></pre>\n",null,0],["instance_method_already_implemented?","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-instance_method_already_implemented-3F","(method_name)","<p>Raises a <code>ActiveRecord::DangerousAttributeError</code> exception when\nan Active Record method is defined in the …\n",null,1],["instance_method_list","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-instance_method_list","()","<p>Instance methods\n",null,0],["instance_methods","Module","Ruby/classes/Module.html#method-i-instance_methods","(*args)","<p>Returns an array containing the names of the public and protected instance\nmethods in the receiver.  …\n",null,0],["instance_methods","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-instance_methods","()","<p>Instance methods cache accessor.  Maps a class to an Array of its instance\nmethods (not full name).\n",null,0],["instance_of?","Object","Ruby/classes/Object.html#method-i-instance_of-3F","(p1)","<p>Returns <code>true</code> if <em>obj</em> is an instance of the given\nclass. See also <code>Object#kind_of?</code>.\n\n<pre><code>class A;     end\nclass ...\n</code></pre>\n",null,0],["instance_values","Object","Rails/classes/Object.html#method-i-instance_values","()","<p>Returns a hash with string keys that maps instance variable names without\n“@” to their corresponding …\n",null,1],["instance_variable_defined?","Object","Ruby/classes/Object.html#method-i-instance_variable_defined-3F","(p1)","<p>Returns <code>true</code> if the given instance variable is defined in\n<em>obj</em>.\n\n<pre><code>class Fred\n  def initialize(p1, p2)\n   ...\n</code></pre>\n",null,0],["instance_variable_get","Object","Ruby/classes/Object.html#method-i-instance_variable_get","(p1)","<p>Returns the value of the given instance variable, or nil if the instance\nvariable is not set. The <code>@</code> part …\n",null,0],["instance_variable_names","Object","Rails/classes/Object.html#method-i-instance_variable_names","()","<p>Returns an array of instance variable names as strings including “@”.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">C</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">initialize</span>(<span class=\"ruby-identifier\">x</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["instance_variable_set","Object","Ruby/classes/Object.html#method-i-instance_variable_set","(p1, p2)","<p>Sets the instance variable names by <em>symbol</em> to <em>object</em>,\nthereby frustrating the efforts of the class&#39;s …\n",null,0],["instance_variables","Object","Ruby/classes/Object.html#method-i-instance_variables","()","<p>Returns an array of instance variable names for the receiver. Note that\nsimply defining an accessor does …\n",null,0],["instantiate","ActiveRecord::Persistence::ClassMethods","Rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-instantiate","(record, column_types = {})","<p>Given an attributes hash, <code>instantiate</code> returns a new instance\nof the appropriate class.\n<p>For example, <code>Post.all</code> …\n",null,1],["instantiate_all_loaded_fixtures","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-c-instantiate_all_loaded_fixtures","(object, load_instances = true)","",null,1],["instantiate_fixtures","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-c-instantiate_fixtures","(object, fixture_set, load_instances = true)","",null,1],["instruction","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-instruction","(name, instruction)","<p>Called when an instruction is encountered.  EG: &lt;?xsl\nsheet=&#39;foo&#39;?&gt; @p name the instruction …\n",null,0],["instruction","RSS::ListenerMixin","Ruby/classes/RSS/ListenerMixin.html#method-i-instruction","(name, content)","",null,0],["instruction?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-instruction-3F","()","<p>Content: [ String text ]\n",null,0],["instructions","REXML::Element","Ruby/classes/REXML/Element.html#method-i-instructions","()","<p>Get an array of all Instruction children. IMMUTABLE\n",null,0],["instrument","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-c-instrument","()","",null,1],["instrument","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-instrument","(name, payload = {})","",null,1],["instrument","ActiveSupport::Notifications::Instrumenter","Rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-i-instrument","(name, payload={})","<p>Instrument the given block by measuring the time taken to execute it and\npublish it. Notice that events …\n",null,1],["instrument=","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-c-instrument-3D","(boolean)","<p>Set to <code>true</code> if cache stores should be instrumented. Default is\n<code>false</code>.\n",null,1],["instrumenter","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-instrumenter","()","",null,1],["int","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-c-int","(p1, p2, p3, p4)","<p>Creates a new Socket::AncillaryData object which contains a int as data.\n<p>The size and endian is dependent …\n",null,0],["int","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-int","()","<p>Returns the data in <em>ancillarydata</em> as an int.\n<p>The size and endian is dependent on the host.\n\n<pre><code>ancdata = Socket::AncillaryData.int(:UNIX, ...</code></pre>\n",null,0],["int","Socket::Option","Ruby/classes/Socket/Option.html#method-i-int","()","<p>Returns the data in <em>sockopt</em> as an int.\n<p>The size and endian is dependent on the platform.\n\n<pre><code>sockopt = Socket::Option.int(:INET, ...</code></pre>\n",null,0],["int","Socket::Option","Ruby/classes/Socket/Option.html#method-c-int","(p1, p2, p3, p4)","<p>Creates a new Socket::Option object which contains an int as data.\n<p>The size and endian is dependent on …\n",null,0],["int","XMLRPC::Convert","Ruby/classes/XMLRPC/Convert.html#method-c-int","(str)","<p>Converts a String to an Integer\n<p>See also String.to_i\n",null,0],["int4range","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-int4range","(name, options = {})","",null,1],["int8range","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-int8range","(name, options = {})","",null,1],["int_from_prime_division","Prime","Ruby/classes/Prime.html#method-i-int_from_prime_division","(pd)","<p>Re-composes a prime factorization and returns the product.\n<p>Parameters\n<p><code>pd</code> &mdash; Array of pairs of integers. The …\n",null,0],["integer?","Integer","Ruby/classes/Integer.html#method-i-integer-3F","()","<p>Always returns <code>true</code>.\n",null,0],["integer?","Integer","Ruby/classes/Integer.html#method-i-integer-3F","()","<p>Always returns <code>true</code>.\n",null,0],["integer?","Numeric","Ruby/classes/Numeric.html#method-i-integer-3F","()","<p>Returns <code>true</code> if <code>num</code> is an Integer (including\nFixnum and Bignum).\n\n<pre><code>(1.0).integer? #=&gt; false\n(1).integer? ...\n</code></pre>\n",null,0],["interactive","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-interactive","()","<p>Runs ri interactively using Readline if it is available.\n",null,0],["intern","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-intern","(task_class, task_name)","<p>Lookup a task.  Return an existing task if found, otherwise create a task\nof the current type.\n",null,0],["intern","String","Ruby/classes/String.html#method-i-intern","()","<p>Returns the <code>Symbol</code> corresponding to <em>str</em>, creating the\nsymbol if it did not previously exist. See <code>Symbol#id2name</code> …\n",null,0],["intern","Symbol","Ruby/classes/Symbol.html#method-i-intern","()","<p>In general, <code>to_sym</code> returns the <code>Symbol</code>\ncorresponding to an object. As <em>sym</em> is already a symbol,\n<code>self</code> is …\n",null,0],["internal?","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-internal-3F","()","",null,1],["internal_encoding","ARGF","Ruby/classes/ARGF.html#method-i-internal_encoding","()","<p>Returns the internal encoding for strings read from <code>ARGF</code> as an\n<code>Encoding</code> object.\n<p>If <code>ARGF.set_encoding</code> has …\n",null,0],["internal_encoding","IO","Ruby/classes/IO.html#method-i-internal_encoding","()","<p>Returns the Encoding of the internal string if conversion is specified. \nOtherwise returns nil.\n",null,0],["internal_encoding","StringIO","Ruby/classes/StringIO.html#method-i-internal_encoding","()","<p>Returns the Encoding of the internal string if conversion is specified. \nOtherwise returns nil.\n",null,0],["internal_methods","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-internal_methods","()","<p>A list of all internal methods for a controller. This finds the first\nabstract superclass of a controller, …\n",null,1],["interrupt","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-interrupt","()","",null,0],["interrupt","WEBrick::Utils::TimeoutHandler","Ruby/classes/WEBrick/Utils/TimeoutHandler.html#method-i-interrupt","(thread, id, exception)","<p>Interrupts the timeout handler <code>id</code> and raises\n<code>exception</code>\n",null,0],["intersection","Set","Ruby/classes/Set.html#method-i-intersection","(enum)","",null,0],["inv","Matrix","Ruby/classes/Matrix.html#method-i-inv","()","",null,0],["invalid?","ActiveModel::Validations","Rails/classes/ActiveModel/Validations.html#method-i-invalid-3F","(context = nil)","<p>Performs the opposite of <code>valid?</code>. Returns <code>true</code> if\nerrors were added, <code>false</code> otherwise.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["inverse","Matrix","Ruby/classes/Matrix.html#method-i-inverse","()","<p>Returns the inverse of the matrix.\n\n<pre><code>Matrix[[-1, -1], [0, -1]].inverse\n  =&gt; -1  1\n      0 -1\n</code></pre>\n",null,0],["inverse_of","ActiveRecord::Migration::CommandRecorder","Rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-inverse_of","(command, args, &block)","<p>Returns the inverse of the given command. For example:\n\n<pre>recorder.inverse_of(:rename_table, [:old, :new]) ...</pre>\n",null,1],["invert","DBM","Ruby/classes/DBM.html#method-i-invert","()","<p>Returns a Hash (not a DBM database) created by using each value in the\ndatabase as a key, with the corresponding …\n",null,0],["invert","ENV","Ruby/classes/ENV.html#method-c-invert","()","<p>Returns a new hash created by using environment variable names as values\nand values as names.\n",null,0],["invert","GDBM","Ruby/classes/GDBM.html#method-i-invert","()","<p>Returns a hash created by using <em>gdbm</em>&#39;s values as keys, and the\nkeys as values.\n",null,0],["invert","Hash","Ruby/classes/Hash.html#method-i-invert","()","<p>Returns a new hash created by using <em>hsh</em>&#39;s values as keys, and\nthe keys as values.\n\n<pre><code>h = { &quot;n&quot; =&gt; 100, ...\n</code></pre>\n",null,0],["invert","SDBM","Ruby/classes/SDBM.html#method-i-invert","()","<p>Returns a Hash in which the key-value pairs have been inverted.\n<p>Example:\n\n<pre><code>require &#39;sdbm&#39;\n\nSDBM.open &#39;my_database&#39; ...\n</code></pre>\n",null,0],["invert","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-invert","()","<p>Returns a Hash (not a DBM database) created by using each value in the\ndatabase as a key, with the corresponding …\n",null,0],["invert!","OpenSSL::PKey::EC::Point","Ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-invert-21","()","",null,0],["investigation","Rake::Task","Ruby/classes/Rake/Task.html#method-i-investigation","()","<p>Return a string describing the internal state of a task.  Useful for\ndebugging.\n",null,0],["invkind","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-invkind","()","<p>Returns the method invoke kind.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbooks&#39;) ...</code></pre>\n",null,0],["invoke","Gem::Command","Ruby/classes/Gem/Command.html#method-i-invoke","(*args)","<p>Invoke the command with the given list of arguments.\n",null,0],["invoke","Rake::Task","Ruby/classes/Rake/Task.html#method-i-invoke","(*args)","<p>Invoke the task if it is needed.  Prerequisites are invoked first.\n",null,0],["invoke","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-invoke","(*args)","<p>Runs OLE method. The first argument specifies the method name of OLE\nAutomation object. The others specify …\n",null,0],["invoke","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-invoke","(namespace, args=ARGV, config={})","<p>Receives a namespace, arguments and the behavior to invoke the generator.\nIt&#39;s used as the default …\n",null,1],["invoke_kind","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-invoke_kind","()","<p>Returns the method kind string. The string is “UNKNOWN” or “PROPERTY” or\n“PROPERTY” …\n",null,0],["invoke_task","Rake::Application","Ruby/classes/Rake/Application.html#method-i-invoke_task","(task_string)","<p>private —————————————————————-\n",null,0],["invoke_task","Rake::Application","Ruby/classes/Rake/Application.html#method-i-invoke_task","(task_string)","<p>private —————————————————————-\n",null,0],["invoke_with_build_args","Gem::Command","Ruby/classes/Gem/Command.html#method-i-invoke_with_build_args","(args, build_args)","<p>Invoke the command with the given list of normal arguments and additional\nbuild arguments.\n",null,0],["ioctl","IO","Ruby/classes/IO.html#method-i-ioctl","(p1, p2 = v2)","<p>Provides a mechanism for issuing low-level commands to control or query I/O\ndevices. Arguments and results …\n",null,0],["ioflush","IO","Ruby/classes/IO.html#method-i-ioflush","()","<p>Flushes input and output buffers in kernel.\n<p>You must require &#39;io/console&#39; to use this method. …\n",null,0],["ip","Addrinfo","Ruby/classes/Addrinfo.html#method-c-ip","(p1)","<p>returns an addrinfo object for IP address.\n<p>The port, socktype, protocol of the result is filled by zero. …\n",null,0],["ip","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-ip","()","",null,1],["ip6_arpa","IPAddr","Ruby/classes/IPAddr.html#method-i-ip6_arpa","()","<p>Returns a string for DNS reverse lookup compatible with RFC3172.\n",null,0],["ip6_int","IPAddr","Ruby/classes/IPAddr.html#method-i-ip6_int","()","<p>Returns a string for DNS reverse lookup compatible with RFC1886.\n",null,0],["ip?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ip-3F","()","<p>returns true if addrinfo is internet (IPv4/IPv6) address. returns false\notherwise.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, ...</code></pre>\n",null,0],["ip_address","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ip_address","()","<p>Returns the IP address as a string.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ip_address    #=&gt; &quot;127.0.0.1&quot;\nAddrinfo.tcp(&quot;::1&quot;, ...\n</code></pre>\n",null,0],["ip_address_list","Socket","Ruby/classes/Socket.html#method-c-ip_address_list","()","<p>Returns local IP addresses as an array.\n<p>The array contains Addrinfo objects.\n\n<pre><code>pp Socket.ip_address_list ...</code></pre>\n",null,0],["ip_pktinfo","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-c-ip_pktinfo","(p1, p2, p3 = v3)","<p>Returns new ancillary data for IP_PKTINFO.\n<p>If spec_dst is not given, addr is used.\n<p>IP_PKTINFO is not standard. …\n",null,0],["ip_pktinfo","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-ip_pktinfo","()","<p>Extracts addr, ifindex and spec_dst from IP_PKTINFO ancillary data.\n<p>IP_PKTINFO is not standard.\n<p>Supported …\n",null,0],["ip_port","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ip_port","()","<p>Returns the port number as an integer.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ip_port    #=&gt; 80\nAddrinfo.tcp(&quot;::1&quot;, ...\n</code></pre>\n",null,0],["ip_unpack","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ip_unpack","()","<p>Returns the IP address and port number as 2-element array.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ip_unpack    ...</code></pre>\n",null,0],["ips_from","ActionDispatch::RemoteIp::GetIp","Rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-ips_from","(header)","",null,1],["ipv4?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv4-3F","()","<p>returns true if addrinfo is IPv4 address. returns false otherwise.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ipv4? ...</code></pre>\n",null,0],["ipv4?","IPAddr","Ruby/classes/IPAddr.html#method-i-ipv4-3F","()","<p>Returns true if the ipaddr is an IPv4 address.\n",null,0],["ipv4_compat","IPAddr","Ruby/classes/IPAddr.html#method-i-ipv4_compat","()","<p>Returns a new ipaddr built by converting the native IPv4 address into an\nIPv4-compatible IPv6 address. …\n",null,0],["ipv4_compat?","IPAddr","Ruby/classes/IPAddr.html#method-i-ipv4_compat-3F","()","<p>Returns true if the ipaddr is an IPv4-compatible IPv6 address.\n",null,0],["ipv4_loopback?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv4_loopback-3F","()","<p>Returns true for IPv4 loopback address (127.0.0.0/8). It returns false\notherwise.\n",null,0],["ipv4_mapped","IPAddr","Ruby/classes/IPAddr.html#method-i-ipv4_mapped","()","<p>Returns a new ipaddr built by converting the native IPv4 address into an\nIPv4-mapped IPv6 address.\n",null,0],["ipv4_mapped?","IPAddr","Ruby/classes/IPAddr.html#method-i-ipv4_mapped-3F","()","<p>Returns true if the ipaddr is an IPv4-mapped IPv6 address.\n",null,0],["ipv4_multicast?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv4_multicast-3F","()","<p>Returns true for IPv4 multicast address (224.0.0.0/4). It returns false\notherwise.\n",null,0],["ipv4_private?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv4_private-3F","()","<p>Returns true for IPv4 private address (10.0.0.0/8, 172.16.0.0/12,\n192.168.0.0/16). It returns false otherwise. …\n",null,0],["ipv6?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6-3F","()","<p>returns true if addrinfo is IPv6 address. returns false otherwise.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ipv6? ...</code></pre>\n",null,0],["ipv6?","IPAddr","Ruby/classes/IPAddr.html#method-i-ipv6-3F","()","<p>Returns true if the ipaddr is an IPv6 address.\n",null,0],["ipv6_linklocal?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_linklocal-3F","()","<p>Returns true for IPv6 link local address (ff80::/10). It returns false\notherwise.\n",null,0],["ipv6_loopback?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_loopback-3F","()","<p>Returns true for IPv6 loopback address (::1). It returns false otherwise.\n",null,0],["ipv6_mc_global?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_mc_global-3F","()","<p>Returns true for IPv6 multicast global scope address. It returns false\notherwise.\n",null,0],["ipv6_mc_linklocal?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_mc_linklocal-3F","()","<p>Returns true for IPv6 multicast link-local scope address. It returns false\notherwise.\n",null,0],["ipv6_mc_nodelocal?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_mc_nodelocal-3F","()","<p>Returns true for IPv6 multicast node-local scope address. It returns false\notherwise.\n",null,0],["ipv6_mc_orglocal?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_mc_orglocal-3F","()","<p>Returns true for IPv6 multicast organization-local scope address. It\nreturns false otherwise.\n",null,0],["ipv6_mc_sitelocal?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_mc_sitelocal-3F","()","<p>Returns true for IPv6 multicast site-local scope address. It returns false\notherwise.\n",null,0],["ipv6_multicast?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_multicast-3F","()","<p>Returns true for IPv6 multicast address (ff00::/8). It returns false\notherwise.\n",null,0],["ipv6_pktinfo","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-ipv6_pktinfo","()","<p>Extracts addr and ifindex from IPV6_PKTINFO ancillary data.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre><code>addr = ...</code></pre>\n",null,0],["ipv6_pktinfo","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-c-ipv6_pktinfo","(p1, p2)","<p>Returns new ancillary data for IPV6_PKTINFO.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre><code>addr = Addrinfo.ip(&quot;::1&quot;) ...</code></pre>\n",null,0],["ipv6_pktinfo_addr","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-ipv6_pktinfo_addr","()","<p>Extracts addr from IPV6_PKTINFO ancillary data.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre><code>addr = Addrinfo.ip(&quot;::1&quot;) ...</code></pre>\n",null,0],["ipv6_pktinfo_ifindex","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-ipv6_pktinfo_ifindex","()","<p>Extracts ifindex from IPV6_PKTINFO ancillary data.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre><code>addr = Addrinfo.ip(&quot;::1&quot;) ...</code></pre>\n",null,0],["ipv6_sitelocal?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_sitelocal-3F","()","<p>Returns true for IPv6 site local address (ffc0::/10). It returns false\notherwise.\n",null,0],["ipv6_to_ipv4","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_to_ipv4","()","<p>Returns IPv4 address of IPv4 mapped/compatible IPv6 address. It returns nil\nif <code>self</code> is not IPv4 mapped/compatible …\n",null,0],["ipv6_unique_local?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_unique_local-3F","()","<p>Returns true for IPv6 unique local address (fc00::/7, RFC4193). It returns\nfalse otherwise.\n",null,0],["ipv6_unspecified?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_unspecified-3F","()","<p>Returns true for IPv6 unspecified address (::). It returns false otherwise.\n",null,0],["ipv6_v4compat?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_v4compat-3F","()","<p>Returns true for IPv4-compatible IPv6 address (::/80). It returns false\notherwise.\n",null,0],["ipv6_v4mapped?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-ipv6_v4mapped-3F","()","<p>Returns true for IPv4-mapped IPv6 address (::ffff:0:0/80). It returns false\notherwise.\n",null,0],["irb","IRB","Ruby/classes/IRB.html#method-c-irb","(file = nil, *main)","<p>Creates a new IRB session, see Irb.new.\n<p>The optional <code>file</code> argument is given to Context.new, along with\n…\n",null,0],["irb","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-irb","(key)","<p>Returns the irb session for the given <code>key</code> object, see #search\nfor more information.\n",null,0],["irb_abort","IRB","Ruby/classes/IRB.html#method-c-irb_abort","(irb, exception = Abort)","<p>Aborts then interrupts irb.\n<p>Will raise an Abort exception, or the given <code>exception</code>.\n",null,0],["irb_at_exit","IRB","Ruby/classes/IRB.html#method-c-irb_at_exit","()","<p>Calls each event hook of IRB.conf when the current session quits.\n",null,0],["irb_context","IRB::ExtendCommandBundle","Ruby/classes/IRB/ExtendCommandBundle.html#method-i-irb_context","()","<p>Displays current configuration.\n<p>Modifing the configuration is achieved by sending a message to IRB.conf …\n",null,0],["irb_exit","IRB","Ruby/classes/IRB.html#method-c-irb_exit","(irb, ret)","<p>Quits irb\n",null,0],["irb_exit","IRB::ExtendCommandBundle","Ruby/classes/IRB/ExtendCommandBundle.html#method-i-irb_exit","(ret = 0)","<p>Quits the current irb context\n<p><code>ret</code> is the optional signal or message to send to Context#exit\n<p>Same as <code>IRB.CurrentContext.exit</code> …\n",null,0],["irb_level","IRB::Context","Ruby/classes/IRB/Context.html#method-i-irb_level","()","<p>Size of the current WorkSpace stack\n",null,0],["irb_load","IRB::ExtendCommandBundle","Ruby/classes/IRB/ExtendCommandBundle.html#method-i-irb_load","(*opts, &b)","<p>Loads the given file similarly to Kernel#load, see IrbLoader#irb_load\n",null,0],["irb_load","IRB::IrbLoader","Ruby/classes/IRB/IrbLoader.html#method-i-irb_load","(fn, priv = nil)","<p>Loads the given file similarly to Kernel#load\n",null,0],["irb_require","IRB::ExtendCommandBundle","Ruby/classes/IRB/ExtendCommandBundle.html#method-i-irb_require","(*opts, &b)","<p>Loads the given file similarly to Kernel#require\n",null,0],["irregular","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-irregular","(singular, plural)","<p>Specifies a new irregular that applies to both pluralization and\nsingularization at the same time. This …\n",null,1],["isEqual","Jacobian","Ruby/classes/Jacobian.html#method-i-isEqual","(a,b,zero=0.0,e=1.0e-8)","<p>Determines the equality of two numbers by comparing to zero, or using the\nepsilon value\n",null,0],["is_a?","Object","Ruby/classes/Object.html#method-i-is_a-3F","(p1)","<p>Returns <code>true</code> if <em>class</em> is the class of <em>obj</em>,\nor if <em>class</em> is one of the superclasses of <em>obj</em> or modules\nincluded …\n",null,0],["is_a?","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-is_a-3F","(klass)","<p>Lie about our class.\n",null,0],["is_a?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-is_a-3F","(klass)","<p>Say we&#39;re a Time to thwart type checking.\n",null,1],["is_alias_for","RDoc::Constant","Ruby/classes/RDoc/Constant.html#method-i-is_alias_for","()","<p>The module or class this constant is an alias for\n",null,0],["is_missing?","LoadError","Rails/classes/LoadError.html#method-i-is_missing-3F","(location)","",null,1],["is_missing?","LoadError","Rails/classes/LoadError.html#method-i-is_missing-3F","(location)","",null,1],["is_utf8?","String","Rails/classes/String.html#method-i-is_utf8-3F","()","",null,1],["is_version_1_2?","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-is_version_1_2-3F","()","",null,0],["isatty","IO","Ruby/classes/IO.html#method-i-isatty","()","<p>Returns <code>true</code> if <em>ios</em> is associated with a terminal\ndevice (tty), <code>false</code> otherwise.\n\n<pre><code>File.new(&quot;testfile&quot;).isatty ...</code></pre>\n",null,0],["isatty","StringIO","Ruby/classes/StringIO.html#method-i-isatty","()","",null,0],["isdst","Time","Ruby/classes/Time.html#method-i-isdst","()","<p>Returns <code>true</code> if <em>time</em> occurs during Daylight Saving\nTime in its time zone.\n\n<pre><code># CST6CDT:\n  Time.local(2000, ...</code></pre>\n",null,0],["isdst","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-isdst","()","",null,1],["iseuc","Kconv","Ruby/classes/Kconv.html#method-c-iseuc","(str)","<p>Returns whether input encoding is EUC-JP or not.\n<p><strong>Note</strong> don&#39;t expect this return value is MatchData …\n",null,0],["iseuc","String","Ruby/classes/String.html#method-i-iseuc","()","<p>Returns whether <code>self</code>&#39;s encoding is EUC-JP or not.\n",null,0],["isjis","Kconv","Ruby/classes/Kconv.html#method-c-isjis","(str)","<p>Returns whether input encoding is ISO-2022-JP or not.\n",null,0],["isjis","String","Ruby/classes/String.html#method-i-isjis","()","<p>Returns whether <code>self</code>&#39;s encoding is ISO-2022-JP or not.\n",null,0],["iso8601","Date","Ruby/classes/Date.html#method-i-iso8601","()","<p>This method is equivalent to strftime(&#39;%F&#39;).\n",null,0],["iso8601","Date","Ruby/classes/Date.html#method-c-iso8601","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical ISO 8601 formats.\n\n<pre><code>Date.iso8601(&#39;2001-02-03&#39;) ...</code></pre>\n",null,0],["iso8601","DateTime","Ruby/classes/DateTime.html#method-c-iso8601","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical ISO 8601 formats.\n\n<pre><code>DateTime.iso8601(&#39;2001-02-03T04:05:06+07:00&#39;) ...</code></pre>\n",null,0],["iso8601","DateTime","Ruby/classes/DateTime.html#method-i-iso8601","(p1 = v1)","<p>This method is equivalent to strftime(&#39;%FT%T&#39;).  The optional\nargument n is length of fractional …\n",null,0],["iso8601","Time","Ruby/classes/Time.html#method-i-iso8601","(date)","",null,0],["iso8601","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-iso8601","(fraction_digits = 0)","",null,1],["isolate_namespace","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-isolate_namespace","(mod)","",null,1],["isolated?","Build","Rails/classes/Build.html#method-i-isolated-3F","()","",null,1],["issetugid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-issetugid","()","<p>Returns <code>true</code> if the process was created as a result of an\nexecve(2) system call which had either of the …\n",null,0],["issjis","Kconv","Ruby/classes/Kconv.html#method-c-issjis","(str)","<p>Returns whether input encoding is Shift_JIS or not.\n",null,0],["issjis","String","Ruby/classes/String.html#method-i-issjis","()","<p>Returns whether <code>self</code>&#39;s encoding is Shift_JIS or not.\n",null,0],["issuer","OpenSSL::PKCS7::RecipientInfo","Ruby/classes/OpenSSL/PKCS7/RecipientInfo.html#method-i-issuer","()","",null,0],["issuer","OpenSSL::PKCS7::SignerInfo","Ruby/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-issuer","()","",null,0],["issuer","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-issuer","()","",null,0],["issuer","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-issuer","()","",null,0],["issuer=","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-issuer-3D","(p1)","",null,0],["issuer=","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-issuer-3D","(p1)","",null,0],["issuer_certificate=","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-issuer_certificate-3D","(p1)","",null,0],["issuer_of","Gem::Security::TrustDir","Ruby/classes/Gem/Security/TrustDir.html#method-i-issuer_of","(certificate)","<p>Returns the issuer certificate of the given <code>certificate</code> if it\nexists in the trust directory.\n",null,0],["isutf8","Kconv","Ruby/classes/Kconv.html#method-c-isutf8","(str)","<p>Returns whether input encoding is UTF-8 or not.\n",null,0],["isutf8","String","Ruby/classes/String.html#method-i-isutf8","()","<p>Returns whether <code>self</code>&#39;s encoding is UTF-8 or not.\n",null,0],["italy","Date","Ruby/classes/Date.html#method-i-italy","()","<p>This method is equivalent to new_start(Date::ITALY).\n",null,0],["items","RSS::Atom::Entry","Ruby/classes/RSS/Atom/Entry.html#method-i-items","()","<p>Returns the Entry in an array\n",null,0],["items","RSS::Rss","Ruby/classes/RSS/Rss.html#method-i-items","()","",null,0],["iterator?","Kernel","Ruby/classes/Kernel.html#method-i-iterator-3F","()","<p>Returns <code>true</code> if <code>yield</code> would execute a block in\nthe current context. The <code>iterator?</code> form is mildly deprecated.\n…\n",null,0],["iv=","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-iv-3D","(p1)","<p>Sets the cipher IV. Please note that since you should never be using ECB\nmode, an IV is always explicitly …\n",null,0],["j","ActionView::Helpers::JavaScriptHelper","Rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-j","(javascript)","",null,1],["jacobian","Jacobian","Ruby/classes/Jacobian.html#method-i-jacobian","(f,fx,x)","<p>Computes the Jacobian of f at x. fx is the value of f at x.\n",null,0],["javascript_include_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-javascript_include_tag","(*sources)","<p>Returns an HTML script tag for each of the <code>sources</code> provided.\n<p>Sources may be paths to JavaScript files. …\n",null,1],["javascript_path","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-javascript_path","(source, options = {})","<p>Computes the path to a javascript asset in the public javascripts\ndirectory. If the <code>source</code> filename has …\n",null,1],["javascript_tag","ActionView::Helpers::JavaScriptHelper","Rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-javascript_tag","(content_or_options_with_block = nil, html_options = {}, &block)","<p>Returns a JavaScript tag with the <code>content</code> inside. Example:\n\n<pre>javascript_tag &quot;alert(&#39;All is good&#39;)&quot;</pre>\n<p>Returns: …\n",null,1],["javascript_url","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-javascript_url","(source, options = {})","<p>Computes the full URL to a javascript asset in the public javascripts\ndirectory. This will use <code>javascript_path</code> …\n",null,1],["javascripts","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-javascripts","()","",null,1],["jd","Date","Ruby/classes/Date.html#method-i-jd","()","<p>Returns the Julian day number.  This is a whole number, which is adjusted\nby the offset as the local …\n",null,0],["jd","Date","Ruby/classes/Date.html#method-c-jd","(p1 = v1, p2 = v2)","<p>Creates a date object denoting the given chronological Julian day number.\n\n<pre><code>Date.jd(2451944)          #=&gt; ...\n</code></pre>\n",null,0],["jd","DateTime","Ruby/classes/DateTime.html#method-c-jd","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6)","<p>Creates a datetime object denoting the given chronological Julian day\nnumber.\n\n<pre><code>DateTime.jd(2451944)    ...</code></pre>\n",null,0],["jisx0301","Date","Ruby/classes/Date.html#method-i-jisx0301","()","<p>Returns a string in a JIS X 0301 format.\n\n<pre><code>Date.new(2001,2,3).jisx0301       #=&gt; &quot;H13.02.03&quot;\n</code></pre>\n",null,0],["jisx0301","Date","Ruby/classes/Date.html#method-c-jisx0301","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical JIS X 0301 formats.\n\n<pre><code>Date.jisx0301(&#39;H13.02.03&#39;) ...</code></pre>\n",null,0],["jisx0301","DateTime","Ruby/classes/DateTime.html#method-c-jisx0301","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical JIS X 0301 formats.\n\n<pre><code>DateTime.jisx0301(&#39;H13.02.03T04:05:06+07:00&#39;) ...</code></pre>\n",null,0],["jisx0301","DateTime","Ruby/classes/DateTime.html#method-i-jisx0301","(p1 = v1)","<p>Returns a string in a JIS X 0301 format.  The optional argument n is length\nof fractional seconds.\n\n<pre><code>DateTime.parse(&#39;2001-02-03T04:05:06.123456789+07:00&#39;).jisx0301(9) ...</code></pre>\n",null,0],["jobs","Shell","Ruby/classes/Shell.html#method-i-jobs","()","<p>Returns a list of scheduled jobs.\n",null,0],["jobs","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-jobs","()","",null,0],["jobs_exist?","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-jobs_exist-3F","()","",null,0],["join","Array","Ruby/classes/Array.html#method-i-join","(p1 = v1)","<p>Returns a string created by converting each element of the array to a\nstring, separated by the given …\n",null,0],["join","File","Ruby/classes/File.html#method-c-join","(*args)","<p>Returns a new string formed by joining the strings using\n<code>File::SEPARATOR</code>.\n\n<pre><code>File.join(&quot;usr&quot;, &quot;mail&quot;, &quot;gumby&quot;) ...</code></pre>\n",null,0],["join","GServer","Ruby/classes/GServer.html#method-i-join","()","<p>Join with the server thread\n",null,0],["join","Pathname","Ruby/classes/Pathname.html#method-i-join","(*args)","<p>Joins the given pathnames onto <code>self</code> to create a new Pathname\nobject.\n\n<pre><code>path0 = Pathname.new(&quot;/usr&quot;)     ...</code></pre>\n",null,0],["join","Shellwords","Ruby/classes/Shellwords.html#method-c-join","(array)","",null,0],["join","Thread","Ruby/classes/Thread.html#method-i-join","(p1 = v1)","<p>The calling thread will suspend execution and run <em>thr</em>. Does not\nreturn until <em>thr</em> exits or until <em>limit</em> …\n",null,0],["join","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-join","(*threads)","<p>Waits for specified threads to terminate, and returns when one of the\nthreads terminated.\n",null,0],["join","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-join","(*threads)","<p>Waits for specified threads to terminate, and returns when one of the\nthreads terminated.\n",null,0],["join","URI","Ruby/classes/URI.html#method-c-join","(*str)","<p>Synopsis\n\n<pre><code>URI::join(str[, str, ...])</code></pre>\n<p>Args\n",null,0],["join","URI::Parser","Ruby/classes/URI/Parser.html#method-i-join","(*uris)","<p>Args\n<p><code>uris</code> &mdash; an Array of Strings\n\n<p>Description\n",null,0],["join_nowait","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-join_nowait","(*threads)","<p>Specifies the threads that this object will wait for, but does not actually\nwait.\n",null,0],["join_nowait","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-join_nowait","(*threads)","<p>Specifies the threads that this object will wait for, but does not actually\nwait.\n",null,0],["joined_includes_values","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-joined_includes_values","()","<p>Joins that are also marked for preloading. In which case we should just\neager load them. Note that this …\n",null,1],["joins","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-joins","(*args)","<p>Performs a joins on <code>args</code>:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">joins</span>(:<span class=\"ruby-identifier\">posts</span>)\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">SELECT</span> <span class=\"ruby-string\">&quot;users&quot;</span>.* <span class=\"ruby-constant\">FROM</span> <span class=\"ruby-string\">&quot;users&quot;</span> <span class=\"ruby-constant\">INNER</span> <span class=\"ruby-constant\">JOIN</span> <span class=\"ruby-string\">&quot;posts&quot;</span> <span class=\"ruby-constant\">ON</span> <span class=\"ruby-string\">&quot;posts&quot;</span>.<span class=\"ruby-string\">&quot;user_id&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["joins_per_query","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-joins_per_query","()","<p>Returns maximum number of joins in a single query.\n",null,1],["json","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-json","(name, options = {})","",null,1],["json_creatable?","JSON::GenericObject","Ruby/classes/JSON/GenericObject.html#method-i-json_creatable-3F","()","",null,0],["json_create","BigDecimal","Ruby/classes/BigDecimal.html#method-c-json_create","(object)","<p>Import a JSON Marshalled object.\n<p>method used for JSON marshalling support.\n",null,0],["json_create","Complex","Ruby/classes/Complex.html#method-c-json_create","(object)","",null,0],["json_create","Date","Ruby/classes/Date.html#method-c-json_create","(object)","<p>Deserializes JSON string by converting Julian year <code>y</code>, month\n<code>m</code>, day <code>d</code> and Day of Calendar Reform\n<code>sg</code> to …\n",null,0],["json_create","DateTime","Ruby/classes/DateTime.html#method-c-json_create","(object)","<p>Deserializes JSON string by converting year <code>y</code>, month\n<code>m</code>, day <code>d</code>, hour <code>H</code>, minute\n<code>M</code>, second <code>S</code>, offset <code>of</code> …\n",null,0],["json_create","Exception","Ruby/classes/Exception.html#method-c-json_create","(object)","<p>Deserializes JSON string by constructing new Exception object with message\n<code>m</code> and backtrace <code>b</code> serialized …\n",null,0],["json_create","JSON::GenericObject","Ruby/classes/JSON/GenericObject.html#method-i-json_create","(data)","",null,0],["json_create","OpenStruct","Ruby/classes/OpenStruct.html#method-c-json_create","(object)","<p>Deserializes JSON string by constructing new Struct object with values\n<code>v</code> serialized by <code>to_json</code>.\n",null,0],["json_create","Range","Ruby/classes/Range.html#method-c-json_create","(object)","<p>Deserializes JSON string by constructing new Range object with arguments\n<code>a</code> serialized by <code>to_json</code>.\n",null,0],["json_create","Rational","Ruby/classes/Rational.html#method-c-json_create","(object)","",null,0],["json_create","Regexp","Ruby/classes/Regexp.html#method-c-json_create","(object)","<p>Deserializes JSON string by constructing new Regexp object with source\n<code>s</code> (Regexp or String) and options …\n",null,0],["json_create","Struct","Ruby/classes/Struct.html#method-c-json_create","(object)","<p>Deserializes JSON string by constructing new Struct object with values\n<code>v</code> serialized by <code>to_json</code>.\n",null,0],["json_create","Symbol","Ruby/classes/Symbol.html#method-c-json_create","(o)","<p>Deserializes JSON string by converting the <code>string</code> value stored\nin the object to a Symbol\n",null,0],["json_create","Time","Ruby/classes/Time.html#method-c-json_create","(object)","<p>Deserializes JSON string by converting time since epoch to Time\n",null,0],["json_escape","ERB::Util","Rails/classes/ERB/Util.html#method-c-json_escape","(s)","<p>A utility method for escaping HTML entities in JSON strings using uXXXX\nJavaScript escape sequences for …\n",null,1],["json_regexp","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-json_regexp","()","",null,1],["json_resource_errors","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-json_resource_errors","()","",null,1],["json_to_string","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-json_to_string","(object)","",null,1],["julian","Date","Ruby/classes/Date.html#method-i-julian","()","<p>This method is equivalent to new_start(Date::JULIAN).\n",null,0],["julian?","Date","Ruby/classes/Date.html#method-i-julian-3F","()","<p>Retruns true if the date is before the day of calendar reform.\n\n<pre><code>Date.new(1582,10,15).julian?           ...</code></pre>\n",null,0],["julian_leap?","Date","Ruby/classes/Date.html#method-c-julian_leap-3F","(p1)","<p>Returns true if the given year is a leap year of the proleptic Julian\ncalendar.\n\n<pre><code>Date.julian_leap?(1900) ...</code></pre>\n",null,0],["kconv","Kconv","Ruby/classes/Kconv.html#method-c-kconv","(str, to_enc, from_enc=nil)","<p>Convert <code>str</code> to <code>to_enc</code>. <code>to_enc</code> and\n<code>from_enc</code> are given as constants of Kconv or Encoding objects.\n",null,0],["kconv","String","Ruby/classes/String.html#method-i-kconv","(to_enc, from_enc=nil)","<p>Convert <code>self</code> to <code>to_enc</code>. <code>to_enc</code> and\n<code>from_enc</code> are given as constants of Kconv or Encoding objects.\n",null,0],["keep","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-keep","(k = nil)","<p>Keeps either the entire current flash or a specific flash entry available\nfor the next action:\n\n<pre>flash.keep ...</pre>\n",null,1],["keep_alive?","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-keep_alive-3F","()","<p>Should the connection this request was made on be kept alive?\n",null,0],["keep_alive?","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-keep_alive-3F","()","<p>Will this response&#39;s connection be kept alive?\n",null,0],["keep_if","Array","Ruby/classes/Array.html#method-i-keep_if","()","<p>Deletes every element of <code>self</code> for which the given block\nevaluates to <code>false</code>.\n<p>See also Array#select!\n<p>If no …\n",null,0],["keep_if","ENV","Ruby/classes/ENV.html#method-c-keep_if","()","<p>Deletes every environment variable where the block evaluates to\n<code>false</code>.\n<p>Returns an enumerator if no block …\n",null,0],["keep_if","Hash","Ruby/classes/Hash.html#method-i-keep_if","()","<p>Deletes every key-value pair from <em>hsh</em> for which <em>block</em>\nevaluates to false.\n<p>If no block is given, an enumerator …\n",null,0],["keep_if","Set","Ruby/classes/Set.html#method-i-keep_if","()","<p>Deletes every element of the set for which block evaluates to false, and\nreturns self.\n",null,0],["key","DBM","Ruby/classes/DBM.html#method-i-key","(p1)","<p>Returns the key for the specified value.\n",null,0],["key","ENV","Ruby/classes/ENV.html#method-c-key","(p1)","<p>Returns the name of the environment variable with <code>value</code>.  If\nthe value is not found <code>nil</code> is returned. …\n",null,0],["key","GDBM","Ruby/classes/GDBM.html#method-i-key","(p1)","<p>Returns the <em>key</em> for a given <em>value</em>. If several keys may\nmap to the same value, the key that is found first …\n",null,0],["key","Hash","Ruby/classes/Hash.html#method-i-key","(p1)","<p>Returns the key of an occurrence of a given value. If the value is not\nfound, returns <code>nil</code>.\n\n<pre><code>h = { &quot;a&quot; =&gt; ...\n</code></pre>\n",null,0],["key","SDBM","Ruby/classes/SDBM.html#method-i-key","(p1)","<p>Returns the <code>key</code> associated with the given <code>value</code>.\nIf more than one <code>key</code> corresponds to the given\n<code>value</code> …\n",null,0],["key","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-key","( keystr )","",null,0],["key","Build","Rails/classes/Build.html#method-i-key","()","",null,1],["key=","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-key-3D","(p1)","<p>Sets the cipher key. To generate a key, you should either use a secure\nrandom byte string or, if the …\n",null,0],["key?","CGI::QueryExtension","Ruby/classes/CGI/QueryExtension.html#method-i-key-3F","(*args)","",null,0],["key?","CSV::Row","Ruby/classes/CSV/Row.html#method-i-key-3F","(header)","",null,0],["key?","DBM","Ruby/classes/DBM.html#method-i-key-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n",null,0],["key?","ENV","Ruby/classes/ENV.html#method-c-key-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,0],["key?","GDBM","Ruby/classes/GDBM.html#method-i-key-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n",null,0],["key?","Hash","Ruby/classes/Hash.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200 }\nh.has_key?(&quot;a&quot;)   #=&gt; ...\n</code></pre>\n",null,0],["key?","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-key-3F","(key)","<p>true if <code>key</code> header exists.\n",null,0],["key?","SDBM","Ruby/classes/SDBM.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if the database contains the given\n<code>key</code>.\n",null,0],["key?","Thread","Ruby/classes/Thread.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if the given string (or symbol) exists as a\nfiber-local variable.\n\n<pre><code>me = Thread.current\nme[:oliver] ...</code></pre>\n",null,0],["key?","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-key-3F","(name)","",null,1],["key?","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-i-key-3F","(key)","",null,1],["key?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-key-3F","(key)","",null,1],["key?","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-key-3F","(key)","",null,1],["key?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::TypeMap","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/TypeMap.html#method-i-key-3F","(oid)","",null,1],["key?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-key-3F","(key)","",null,1],["key?","ActiveRecord::ConnectionAdapters::SQLite3Adapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/StatementPool.html#method-i-key-3F","(key)","",null,1],["key?","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-key-3F","(key)","",null,1],["key?","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-key-3F","(key)","",null,1],["key?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-key-3F","(key)","<p>Checks the hash for a key matching the argument passed in:\n\n<pre>hash = ActiveSupport::HashWithIndifferentAccess.new ...</pre>\n",null,1],["key?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-key-3F","(key)","<p>Checks the hash for a key matching the argument passed in:\n\n<pre>hash = ActiveSupport::HashWithIndifferentAccess.new ...</pre>\n",null,1],["key_generator","Rails::Application","Rails/classes/Rails/Application.html#method-i-key_generator","()","<p>Return the application&#39;s KeyGenerator\n",null,1],["key_len=","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-key_len-3D","(p1)","<p>Sets the key length of the cipher.  If the cipher is a fixed length cipher\nthen attempting to set the …\n",null,0],["key_matcher","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-key_matcher","(pattern, options)","<p>Add the namespace defined in the options to a pattern designed to match\nkeys. Implementations that support …\n",null,1],["keyname","Curses","Ruby/classes/Curses.html#method-c-keyname","(p1)","<p>Returns the character string corresponding to key <code>c</code>\n",null,0],["keypad","Curses::Window","Ruby/classes/Curses/Window.html#method-i-keypad","(p1)","<p>Enables the keypad of the user&#39;s terminal.\n<p>If enabled (<code>bool</code> is <code>true</code>), the user can press a\nfunction …\n",null,0],["keypad=","Curses::Window","Ruby/classes/Curses/Window.html#method-i-keypad-3D","(p1)","<p>Enables the keypad of the user&#39;s terminal.\n<p>If enabled (<code>bool</code> is <code>true</code>), the user can press a\nfunction …\n",null,0],["keys","CGI::QueryExtension","Ruby/classes/CGI/QueryExtension.html#method-i-keys","(*args)","<p>Return all query parameter names as an array of String.\n",null,0],["keys","DBM","Ruby/classes/DBM.html#method-i-keys","()","<p>Returns an array of all the string keys in the database.\n",null,0],["keys","ENV","Ruby/classes/ENV.html#method-c-keys","()","<p>Returns every environment variable name in an Array\n",null,0],["keys","GDBM","Ruby/classes/GDBM.html#method-i-keys","()","<p>Returns an array of all keys of this database.\n",null,0],["keys","Hash","Ruby/classes/Hash.html#method-i-keys","()","<p>Returns a new array populated with the keys from this hash. See also\n<code>Hash#values</code>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; ...\n</code></pre>\n",null,0],["keys","SDBM","Ruby/classes/SDBM.html#method-i-keys","()","<p>Returns a new Array containing the keys in the database.\n",null,0],["keys","Thread","Ruby/classes/Thread.html#method-i-keys","()","<p>Returns an an array of the names of the fiber-local variables (as Symbols).\n\n<pre><code>thr = Thread.new do\n  Thread.current[:cat] ...</code></pre>\n",null,0],["keys","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-keys","()","<p>return keys as an array\n",null,0],["keys","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-keys","()","",null,1],["keys","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-keys","()","<p>Returns all message keys.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">messages</span> <span class=\"ruby-comment\"># =&gt; {:name=&gt;[&quot;can not be nil&quot;, &quot;must be specified&quot;]} ...</span>\n</pre>\n",null,1],["keys","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-keys","()","",null,1],["keys_with_inspector","IRB::Inspector","Ruby/classes/IRB/Inspector.html#method-c-keys_with_inspector","(inspector)","<p>Determines the inspector to use where <code>inspector</code> is one of the\nkeys passed during inspector definition. …\n",null,0],["kill","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-kill","(*keys)","<p>Terminates the irb sessions specified by the given <code>keys</code>.\n<p>Raises an IrbAlreadyDead exception if one of …\n",null,0],["kill","Process","Ruby/classes/Process.html#method-c-kill","(*args)","<p>Sends the given signal to the specified process id(s) if <em>pid</em> is\npositive. If <em>pid</em> is zero <em>signal</em> is sent …\n",null,0],["kill","Shell","Ruby/classes/Shell.html#method-i-kill","(sig, command)","<p>Sends the given <code>signal</code> to the given <code>job</code>\n",null,0],["kill","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-kill","(sig)","",null,0],["kill","Thread","Ruby/classes/Thread.html#method-c-kill","(p1)","<p>Causes the given <em>thread</em> to exit (see <code>Thread::exit</code>).\n\n<pre><code>count = 0\na = Thread.new { loop { count += 1 } }\nsleep(0.1) ...</code></pre>\n",null,0],["kill","Thread","Ruby/classes/Thread.html#method-i-kill","()","<p>Terminates <em>thr</em> and schedules another thread to be run. If this\nthread is already marked to be killed, …\n",null,0],["kill_job","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-kill_job","(sig, command)","<p>kill a job\n",null,0],["kilobyte","Numeric","Rails/classes/Numeric.html#method-i-kilobyte","()","",null,1],["kilobytes","Numeric","Rails/classes/Numeric.html#method-i-kilobytes","()","",null,1],["kind","ActiveModel::Validator","Rails/classes/ActiveModel/Validator.html#method-i-kind","()","<p>Return the kind for this validator.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">PresenceValidator</span>.<span class=\"ruby-identifier\">new</span>.<span class=\"ruby-identifier\">kind</span>   <span class=\"ruby-comment\"># =&gt; :presence</span>\n<span class=\"ruby-constant\">UniquenessValidator</span>.<span class=\"ruby-identifier\">new</span>.<span class=\"ruby-identifier\">kind</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["kind","ActiveModel::Validator","Rails/classes/ActiveModel/Validator.html#method-c-kind","()","<p>Returns the kind of the validator.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">PresenceValidator</span>.<span class=\"ruby-identifier\">kind</span>   <span class=\"ruby-comment\"># =&gt; :presence</span>\n<span class=\"ruby-constant\">UniquenessValidator</span>.<span class=\"ruby-identifier\">kind</span> <span class=\"ruby-comment\"># ...</span>\n</pre>\n",null,1],["kind_of?","Object","Ruby/classes/Object.html#method-i-kind_of-3F","(p1)","<p>Returns <code>true</code> if <em>class</em> is the class of <em>obj</em>,\nor if <em>class</em> is one of the superclasses of <em>obj</em> or modules\nincluded …\n",null,0],["kind_of?","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-kind_of-3F","(klass)","",null,0],["kind_of?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-kind_of-3F","(klass)","",null,1],["klass","ActionDispatch::MiddlewareStack::Middleware","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-klass","()","",null,1],["klass","ActiveRecord::Reflection::MacroReflection","Rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-klass","()","<p>Returns the class for the macro.\n<p><code>composed_of :balance, class_name: &#39;Money&#39;</code> returns the\nMoney class …\n",null,1],["l","Matrix::LUPDecomposition","Ruby/classes/Matrix/LUPDecomposition.html#method-i-l","()","",null,0],["l","AbstractController::Translation","Rails/classes/AbstractController/Translation.html#method-i-l","(*args)","",null,1],["l","ActionView::Helpers::TranslationHelper","Rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-l","(*args)","",null,1],["label","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-label","()","<p>Returns the label of this instruction sequence.\n<p><code>&lt;main&gt;</code> if it&#39;s at the top level,\n<code>&lt;compiled&gt;</code> …\n",null,0],["label","Thread::Backtrace::Location","Ruby/classes/Thread/Backtrace/Location.html#method-i-label","()","<p>Returns the label of this frame.\n<p>Usually consists of method, class, module, etc names with decoration. …\n",null,0],["label","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-label","(method, text = nil, options = {}, &block)","<p>Returns a label tag tailored for labelling an input field for a specified\nattribute (identified by <code>method</code> …\n",null,1],["label","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-label","(object_name, method, content_or_options = nil, options = nil, &block)","<p>Returns a label tag tailored for labelling an input field for a specified\nattribute (identified by <code>method</code> …\n",null,1],["label_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-label_tag","(name = nil, content_or_options = nil, options = nil, &block)","<p>Creates a label element. Accepts a block.\n<p>Options\n<p>Creates standard HTML attributes for the tag.\n",null,1],["lambda","Kernel","Ruby/classes/Kernel.html#method-i-lambda","()","<p>Equivalent to <code>Proc.new</code>, except the resulting Proc objects\ncheck the number of parameters passed when …\n",null,0],["lambda?","Proc","Ruby/classes/Proc.html#method-i-lambda-3F","()","<p>Returns <code>true</code> for a Proc object for which argument handling is\nrigid. Such procs are typically generated …\n",null,0],["lang","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-lang","( language )","<p>UNTESTED\n",null,0],["last","Array","Ruby/classes/Array.html#method-i-last","(*args)","<p>Returns the last element(s) of <code>self</code>. If the array is empty,\nthe first form returns <code>nil</code>.\n<p>See also Array#first …\n",null,0],["last","RDoc::Markup::List","Ruby/classes/RDoc/Markup/List.html#method-i-last","()","<p>Returns the last item in the list\n",null,0],["last","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-last","( )","<p>Returns the last node of the given list of nodes.\n",null,0],["last","Range","Ruby/classes/Range.html#method-i-last","(*args)","<p>Returns the last object in the range, or an array of the last\n<code>n</code> elements.\n<p>Note that with no arguments …\n",null,0],["last","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-last","()","",null,1],["last","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-last","(*args)","<p>Returns the last record, or the last <code>n</code> records, from the\ncollection. If the collection is empty, the …\n",null,1],["last","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-last","(limit = nil)","<p>Find the last record (or last N records if a parameter is supplied). If no\norder is defined it will order …\n",null,1],["last","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-i-last","()","",null,1],["last","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-last","()","",null,1],["last","String","Rails/classes/String.html#method-i-last","(limit = 1)","<p>Returns the last character of the string. If a limit is supplied, returns a\nsubstring from the end of …\n",null,1],["last!","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-last-21","()","<p>Same as <code>last</code> but raises\n<code>ActiveRecord::RecordNotFound</code> if no record is found. Note that\n<code>last!</code> accepts no …\n",null,1],["lastBuildDate=","RSS::Maker::ChannelBase","Ruby/classes/RSS/Maker/ChannelBase.html#method-i-lastBuildDate-3D","(_date)","",null,0],["last_error","DL::CFunc","Ruby/classes/DL/CFunc.html#method-c-last_error","()","<p>Returns the last error for the current executing thread\n",null,0],["last_error","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-last_error","()","<p>Returns an exception object for the last conversion. Returns nil if the\nlast conversion did not produce …\n",null,0],["last_error","Fiddle","Ruby/classes/Fiddle.html#method-c-last_error","()","<p>Returns the last <code>Error</code> of the current executing\n<code>Thread</code> or nil if none\n",null,0],["last_error=","Fiddle","Ruby/classes/Fiddle.html#method-c-last_error-3D","(error)","<p>Sets the last <code>Error</code> of the current executing\n<code>Thread</code> to <code>error</code>\n",null,0],["last_inserted_id","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-last_inserted_id","(result)","",null,1],["last_inserted_id","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-last_inserted_id","(result)","",null,1],["last_inserted_id","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-last_inserted_id","(result)","",null,1],["last_inserted_id","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-last_inserted_id","(result)","",null,1],["last_match","Regexp","Ruby/classes/Regexp.html#method-c-last_match","(p1 = v1)","<p>The first form returns the MatchData object generated by the last\nsuccessful pattern match.  Equivalent …\n",null,0],["last_modified","OpenURI::Meta","Ruby/classes/OpenURI/Meta.html#method-i-last_modified","()","<p>returns a Time that represents the Last-Modified field.\n",null,0],["last_modified","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-last_modified","()","<p>Time this file was last modified, if known\n",null,0],["last_modified","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified","()","",null,1],["last_modified=","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified-3D","(utc_time)","",null,1],["last_modified?","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified-3F","()","",null,1],["last_month","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-last_month","()","",null,1],["last_quarter","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-last_quarter","()","",null,1],["last_update","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-last_update","()","",null,0],["last_update=","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-last_update-3D","(p1)","",null,0],["last_week","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-last_week","(start_day = Date.beginning_of_week)","",null,1],["last_year","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-last_year","()","",null,1],["latest_rubygems_version","Gem","Ruby/classes/Gem.html#method-c-latest_rubygems_version","()","<p>Returns the latest release version of RubyGems.\n",null,0],["latest_spec_for","Gem","Ruby/classes/Gem.html#method-c-latest_spec_for","(name)","<p>Returns the latest release-version specification for the gem\n<code>name</code>.\n",null,0],["latest_specs","Gem::Server","Ruby/classes/Gem/Server.html#method-i-latest_specs","(req, res)","",null,0],["latest_specs","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-latest_specs","(prerelease = false)","<p>Return the latest specs, optionally including prerelease specs if\n<code>prerelease</code> is true.\n",null,0],["latest_version?","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-latest_version-3F","()","<p>Is this dependency simply asking for the latest version of a gem?\n",null,0],["latest_version_for","Gem","Ruby/classes/Gem.html#method-c-latest_version_for","(name)","<p>Returns the version of the latest release-version of gem <code>name</code>\n",null,0],["launch","Gem::Server","Ruby/classes/Gem/Server.html#method-i-launch","()","",null,0],["layout","AbstractController::Layouts::ClassMethods","Rails/classes/AbstractController/Layouts/ClassMethods.html#method-i-layout","(layout, conditions = {})","<p>Specify the layout to use for this class.\n<p>If the specified layout is a:\n<p>String &mdash; the String is the template …\n",null,1],["lazy","Enumerable","Ruby/classes/Enumerable.html#method-i-lazy","()","<p>Returns a lazy enumerator, whose methods map/collect,\nflat_map/collect_concat, select/find_all, reject, …\n",null,0],["lazy","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-lazy","()","",null,0],["lchmod","File","Ruby/classes/File.html#method-c-lchmod","(p1, *args)","<p>Equivalent to <code>File::chmod</code>, but does not follow symbolic links\n(so it will change the permissions associated …\n",null,0],["lchmod","Pathname","Ruby/classes/Pathname.html#method-i-lchmod","(p1)","<p>Same as Pathname.chmod, but does not follow symbolic links.\n<p>See File.lchmod.\n",null,0],["lchown","File","Ruby/classes/File.html#method-c-lchown","(p1, p2, *args)","<p>Equivalent to <code>File::chown</code>, but does not follow symbolic links\n(so it will change the owner associated …\n",null,0],["lchown","Pathname","Ruby/classes/Pathname.html#method-i-lchown","(p1, p2)","<p>Same as Pathname.chown, but does not follow symbolic links.\n<p>See File.lchown.\n",null,0],["lcm","Integer","Ruby/classes/Integer.html#method-i-lcm","(p1)","<p>Returns the least common multiple (always positive).  0.lcm(x) and x.lcm(0)\nreturn zero.\n\n<pre><code>2.lcm(2)     ...</code></pre>\n",null,0],["lcm","Integer","Ruby/classes/Integer.html#method-i-lcm","(p1)","<p>Returns the least common multiple (always positive).  0.lcm(x) and x.lcm(0)\nreturn zero.\n\n<pre><code>2.lcm(2)     ...</code></pre>\n",null,0],["ld","Date","Ruby/classes/Date.html#method-i-ld","()","<p>Returns the Lilian day number.  This is a whole number, which is adjusted\nby the offset as the local …\n",null,0],["ldexp","Math","Ruby/classes/Math.html#method-c-ldexp","(p1, p2)","<p>Returns the value of <em>flt</em>*(2**<em>int</em>).\n\n<pre><code>fraction, exponent = Math.frexp(1234)\nMath.ldexp(fraction, exponent) ...</code></pre>\n",null,0],["leap?","Date","Ruby/classes/Date.html#method-c-leap-3F","(p1)","<p>Returns true if the given year is a leap year of the proleptic Gregorian\ncalendar.\n\n<pre><code>Date.gregorian_leap?(1900) ...</code></pre>\n",null,0],["leap?","Date","Ruby/classes/Date.html#method-i-leap-3F","()","<p>Returns true if the year is a leap year.\n\n<pre><code>Date.new(2000).leap?      #=&gt; true\nDate.new(2001).leap?      ...\n</code></pre>\n",null,0],["lease","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-lease","()","",null,1],["length","Array","Ruby/classes/Array.html#method-i-length","()","<p>Returns the number of elements in <code>self</code>. May be zero.\n\n<pre><code>[ 1, 2, 3, 4, 5 ].length   #=&gt; 5\n[].length       ...\n</code></pre>\n",null,0],["length","DBM","Ruby/classes/DBM.html#method-i-length","()","<p>Returns the number of entries in the database.\n",null,0],["length","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-length","()","<p>Returns digest_obj.digest_length().\n",null,0],["length","ENV","Ruby/classes/ENV.html#method-c-length","()","<p>Returns the number of environment variables.\n",null,0],["length","GDBM","Ruby/classes/GDBM.html#method-i-length","()","<p>Returns the number of key-value pairs in this database.\n",null,0],["length","Hash","Ruby/classes/Hash.html#method-i-length","()","<p>Returns the number of key-value pairs in the hash.\n\n<pre><code>h = { &quot;d&quot; =&gt; 100, &quot;a&quot; =&gt; 200, &quot;v&quot; =&gt; 300, &quot;e&quot; =&gt; 400 ...\n</code></pre>\n",null,0],["length","MatchData","Ruby/classes/MatchData.html#method-i-length","()","<p>Returns the number of elements in the match array.\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.length   ...</code></pre>\n",null,0],["length","Queue","Ruby/classes/Queue.html#method-i-length","()","<p>Returns the length of the queue.\n",null,0],["length","RDoc::Markup::ListItem","Ruby/classes/RDoc/Markup/ListItem.html#method-i-length","()","<p>Length of parts in the ListItem\n",null,0],["length","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-length","()","",null,0],["length","REXML::SyncEnumerator","Ruby/classes/REXML/SyncEnumerator.html#method-i-length","()","<p>Returns the number of enumerated Enumerable objects, i.e. the size of each\nrow.\n",null,0],["length","SDBM","Ruby/classes/SDBM.html#method-i-length","()","<p>Returns the number of keys in the database.\n",null,0],["length","Set","Ruby/classes/Set.html#method-i-length","()","",null,0],["length","String","Ruby/classes/String.html#method-i-length","()","<p>Returns the character length of <em>str</em>.\n",null,0],["length","StringIO","Ruby/classes/StringIO.html#method-i-length","()","<p>Returns the size of the buffer string.\n",null,0],["length","Struct","Ruby/classes/Struct.html#method-i-length","()","<p>Returns the number of instance variables.\n\n<pre><code>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</code></pre>\n",null,0],["length","Symbol","Ruby/classes/Symbol.html#method-i-length","()","<p>Same as <code>sym.to_s.length</code>.\n",null,0],["length","Tempfile","Ruby/classes/Tempfile.html#method-i-length","()","",null,0],["length","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-length","()","<p>Returns the size of the collection calling <code>size</code> on the target.\nIf the collection has been already loaded, …\n",null,1],["length","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-length","()","",null,1],["length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-length","()","",null,1],["length","ActiveRecord::ConnectionAdapters::SQLite3Adapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/StatementPool.html#method-i-length","()","",null,1],["length","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-length","()","",null,1],["level","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-level","()","<p>returns the cmsg level as an integer.\n\n<pre><code>p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, &quot;&quot;).level\n#=&gt; ...\n</code></pre>\n",null,0],["level","Socket::Option","Ruby/classes/Socket/Option.html#method-i-level","()","<p>returns the socket level as an integer.\n\n<pre><code>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).level ...</code></pre>\n",null,0],["level","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-level","()","<p>Returns compression level.\n",null,0],["level=","IRB::Notifier::CompositeNotifier","Ruby/classes/IRB/Notifier/CompositeNotifier.html#method-i-level-3D","(value)","",null,0],["level=","Logger::Application","Ruby/classes/Logger/Application.html#method-i-level-3D","(level)","<p>Set the logging threshold, just like <code>Logger#level=</code>.\n",null,0],["level_notifier=","IRB::Notifier::CompositeNotifier","Ruby/classes/IRB/Notifier/CompositeNotifier.html#method-i-level_notifier-3D","(value)","<p>Sets the leveled notifier for this object.\n<p>When the given <code>value</code> is an instance of AbstractNotifier,\n#level_notifier …\n",null,0],["levenshtein_distance","Gem::Text","Ruby/classes/Gem/Text.html#method-i-levenshtein_distance","(str1, str2)","<p>This code is based directly on the Text gem implementation Returns a value\nrepresenting the “cost” …\n",null,0],["lex","Ripper","Ruby/classes/Ripper.html#method-c-lex","(src, filename = '-', lineno = 1)","<p>Tokenizes the Ruby program and returns an array of an array, which is\nformatted like <code>[[lineno, column],</code> …\n",null,0],["lgamma","Math","Ruby/classes/Math.html#method-c-lgamma","(p1)","<p>Calculates the logarithmic gamma of x and the sign of gamma of x.\n<p>Math.lgamma(x) is same as\n\n<pre><code>[Math.log(Math.gamma(x).abs), ...</code></pre>\n",null,0],["lib","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-lib","()","",null,1],["lib","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-lib","(filename, data=nil, &block)","<p>Create a new file in the lib/ directory. Code can be specified in a block\nor a data string can be given. …\n",null,1],["lib","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-lib","()","",null,1],["lib_dirs_glob","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-lib_dirs_glob","()","<p>Returns a string usable in Dir.glob to match all requirable paths for this\nspec.\n",null,0],["lib_files","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-lib_files","()","<p>Files in the Gem under one of the require_paths\n",null,0],["library_name","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-library_name","()","<p>Returns library name. If the method fails to access library name,\nWIN32OLERuntimeError is raised.\n\n<pre><code>tlib ...</code></pre>\n",null,0],["libyaml_version","Psych","Ruby/classes/Psych.html#method-c-libyaml_version","()","<p>Returns the version of libyaml being used\n",null,0],["license","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-license","()","<p>Singular accessor for #licenses\n",null,0],["license","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-license","()","",null,1],["license=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-license-3D","(o)","<p>The license for this gem.\n<p>The license must be a short name, no more than 64 characters.\n<p>This should just …\n",null,0],["licenses","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-licenses","()","<p>Plural accessor for setting licenses\n",null,0],["licenses=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-licenses-3D","(licenses)","<p>The license(s) for the library.\n<p>Each license must be a short name, no more than 64 characters.\n<p>This should …\n",null,0],["limit","BigDecimal","Ruby/classes/BigDecimal.html#method-c-limit","(p1 = v1)","<p>Limit the number of significant digits in newly created BigDecimal numbers\nto the specified value. Rounding …\n",null,0],["limit","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-limit","(value)","<p>Specifies a limit for the number of records to retrieve.\n\n<pre>User.limit(10) # generated SQL has &#39;LIMIT 10&#39; ...</pre>\n",null,1],["limit","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-limit","(limit)","<p>Limits the byte size of the string to a number of bytes without breaking\ncharacters. Usable when the …\n",null,1],["limited_update_conditions","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-limited_update_conditions","(where_sql, quoted_table_name, quoted_primary_key)","",null,1],["limited_update_conditions","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-limited_update_conditions","(where_sql, quoted_table_name, quoted_primary_key)","",null,1],["line","IRB::ReadlineInputMethod","Ruby/classes/IRB/ReadlineInputMethod.html#method-i-line","(line_no)","<p>Returns the current line number for #io.\n<p>#line counts the number of times #gets is called.\n<p>See IO#lineno …\n",null,0],["line","IRB::StdioInputMethod","Ruby/classes/IRB/StdioInputMethod.html#method-i-line","(line_no)","<p>Returns the current line number for #io.\n<p>#line counts the number of times #gets is called.\n<p>See IO#lineno …\n",null,0],["line","REXML::ParseException","Ruby/classes/REXML/ParseException.html#method-i-line","()","",null,0],["line_buffer","Readline","Ruby/classes/Readline.html#method-c-line_buffer","()","<p>Returns the full line that is being edited. This is useful from within the\ncomplete_proc for determining …\n",null,0],["line_index","RDoc::RD::BlockParser","Ruby/classes/RDoc/RD/BlockParser.html#method-i-line_index","()","<p>Current line number\n",null,0],["line_trace_all","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-line_trace_all","()","<p><strong>Experimental MRI specific feature, only available as C level\napi.</strong>\n<p>Returns all <code>specified_line</code> events.\n",null,0],["line_trace_specify","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-line_trace_specify","(p1, p2)","<p><strong>Experimental MRI specific feature, only available as C level\napi.</strong>\n<p>Set a <code>specified_line</code> event at the given …\n",null,0],["lineno","ARGF","Ruby/classes/ARGF.html#method-i-lineno","()","<p>Returns the current line number of ARGF as a whole. This value can be set\nmanually with <code>ARGF.lineno=</code> …\n",null,0],["lineno","IO","Ruby/classes/IO.html#method-i-lineno","()","<p>Returns the current line number in <em>ios</em>.  The stream must be opened\nfor reading. <code>lineno</code> counts the number …\n",null,0],["lineno","Ripper::Filter","Ruby/classes/Ripper/Filter.html#method-i-lineno","()","<p>The line number of the current token. This value starts from 1. This method\nis valid only in event handlers. …\n",null,0],["lineno","StringIO","Ruby/classes/StringIO.html#method-i-lineno","()","<p>Returns the current line number in <strong>strio</strong>. The stringio\nmust be opened for reading. <code>lineno</code> counts the …\n",null,0],["lineno","Thread::Backtrace::Location","Ruby/classes/Thread/Backtrace/Location.html#method-i-lineno","()","<p>Returns the line number of this frame.\n<p>For example, using <code>caller_locations.rb</code> from\nThread::Backtrace::Location …\n",null,0],["lineno","TracePoint","Ruby/classes/TracePoint.html#method-i-lineno","()","<p>Line number of the event\n",null,0],["lineno","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-lineno","()","<p>The line number of the last row read from this file.\n",null,0],["lineno=","ARGF","Ruby/classes/ARGF.html#method-i-lineno-3D","(p1)","<p>Sets the line number of <code>ARGF</code> as a whole to the given\n<code>Integer</code>.\n<p><code>ARGF</code> sets the line number automatically …\n",null,0],["lineno=","IO","Ruby/classes/IO.html#method-i-lineno-3D","(p1)","<p>Manually sets the current line number to the given value. <code>$.</code>\nis updated only on the next read.\n\n<pre><code>f = File.new(&quot;testfile&quot;) ...</code></pre>\n",null,0],["lineno=","StringIO","Ruby/classes/StringIO.html#method-i-lineno-3D","(p1)","<p>Manually sets the current line number to the given value. <code>$.</code>\nis updated only on the next read.\n",null,0],["lineno=","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-lineno-3D","(p1)","<p>Specify line number of the last row read from this file.\n",null,0],["lines","ARGF","Ruby/classes/ARGF.html#method-i-lines","(*args)","<p>This is a deprecated alias for <code>each_line</code>.\n",null,0],["lines","Curses","Ruby/classes/Curses.html#method-c-lines","()","<p>Returns the number of lines on the screen\n",null,0],["lines","IO","Ruby/classes/IO.html#method-i-lines","(*args)","<p>This is a deprecated alias for <code>each_line</code>.\n",null,0],["lines","String","Ruby/classes/String.html#method-i-lines","(*args)","<p>Returns an array of lines in <em>str</em> split using the supplied record\nseparator (<code>$/</code> by default).  This is …\n",null,0],["lines","StringIO","Ruby/classes/StringIO.html#method-i-lines","(*args)","<p>This is a deprecated alias for <code>each_line</code>.\n",null,0],["lines","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-lines","(*args)","<p>This is a deprecated alias for <code>each_line</code>.\n",null,0],["linger","Socket::Option","Ruby/classes/Socket/Option.html#method-c-linger","(p1, p2)","<p>Creates a new Socket::Option object for SOL_SOCKET/SO_LINGER.\n<p><em>onoff</em> should be an integer or a boolean. …\n",null,0],["linger","Socket::Option","Ruby/classes/Socket/Option.html#method-i-linger","()","<p>Returns the linger data in <em>sockopt</em> as a pair of boolean and\ninteger.\n\n<pre><code>sockopt = Socket::Option.linger(true, ...</code></pre>\n",null,0],["link","File","Ruby/classes/File.html#method-c-link","(p1, p2)","<p>Creates a new name for an existing file using a hard link. Will not\noverwrite <em>new_name</em> if it already …\n",null,0],["link","FileUtils","Ruby/classes/FileUtils.html#method-c-link","(src, dest, options = {})","",null,0],["link","RDoc::Markup::ToHtmlCrossref","Ruby/classes/RDoc/Markup/ToHtmlCrossref.html#method-i-link","(name, text)","<p>Creates an HTML link to <code>name</code> with the given <code>text</code>.\n",null,0],["link","RSS::Maker::ImageBase","Ruby/classes/RSS/Maker/ImageBase.html#method-i-link","()","",null,0],["link","Sys","Ruby/classes/Sys.html#method-i-link","(file_name, dest_file)","<p>Link <code>file_name</code> to <code>dest_file</code>.\n",null,0],["link_files","Sys","Ruby/classes/Sys.html#method-i-link_files","(wildcard, dest_dir)","<p>Link all files matching <code>wildcard</code> into the directory\n<code>dest_dir</code>.\n",null,0],["link_to","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-link_to","(content, label = content, text = nil)","<p>Finds a link reference for <code>label</code> and creates a new link to it\nwith\n<code>content</code> as the link text. If <code>label</code> ...\n",null,0],["link_to","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to","(name = nil, options = nil, html_options = nil, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code>. See the valid options …\n",null,1],["link_to_function","ActionView::Helpers::JavaScriptHelper","Rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-link_to_function","(name, function, html_options={})","<p>Returns a link whose <code>onclick</code> handler triggers the passed\nJavaScript.\n<p>The helper receives a name, JavaScript …\n",null,1],["link_to_if","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_if","(condition, name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code> if <code>condition</code> is true, …\n",null,1],["link_to_unless","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_unless","(condition, name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code> unless <code>condition</code> is true, …\n",null,1],["link_to_unless_current","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_unless_current","(name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code> unless the current request …\n",null,1],["list","Encoding","Ruby/classes/Encoding.html#method-c-list","()","<p>Returns the list of loaded encodings.\n\n<pre><code>Encoding.list\n#=&gt; [#&lt;Encoding:ASCII-8BIT&gt;, #&lt;Encoding:UTF-8&gt;,\n  ...\n</code></pre>\n",null,0],["list","Net::FTP","Ruby/classes/Net/FTP.html#method-i-list","(*args)","<p>Returns an array of file information in the directory (the output is like\n`ls -l`).  If a block is given, …\n",null,0],["list","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-list","(refname, mailbox)","<p>Sends a LIST command, and returns a subset of names from the complete set\nof all names available to the …\n",null,0],["list","Signal","Ruby/classes/Signal.html#method-c-list","()","<p>Returns a list of signal names mapped to the corresponding underlying\nsignal numbers.\n\n<pre><code>Signal.list   #=&gt; ...\n</code></pre>\n",null,0],["list","Thread","Ruby/classes/Thread.html#method-c-list","()","<p>Returns an array of <code>Thread</code> objects for all threads that are\neither runnable or stopped.\n\n<pre><code>Thread.new { sleep(200) ...</code></pre>\n",null,0],["list","ThreadGroup","Ruby/classes/ThreadGroup.html#method-i-list","()","<p>Returns an array of all existing <code>Thread</code> objects that belong to\nthis group.\n\n<pre><code>ThreadGroup::Default.list  ...</code></pre>\n",null,0],["list","WEBrick::HTTPUtils::FormData","Ruby/classes/WEBrick/HTTPUtils/FormData.html#method-i-list","()","<p>Returns all the FormData as an Array\n",null,0],["list_end_for","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-list_end_for","(list_type)","<p>Returns the HTML end-tag for <code>list_type</code>\n",null,0],["list_files_in_directory","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-list_files_in_directory","(dir)","<p>Return a list of the files to be processed in a directory. We know that\nthis directory doesn&#39;t have …\n",null,0],["list_item_from","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-list_item_from","(unparsed)","<p>Creates an RDoc::Markup::ListItem by parsing the <code>unparsed</code>\ncontent from\nthe first parsing pass.\n",null,0],["list_item_start","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-list_item_start","(list_item, list_type)","<p>Returns the HTML tag for <code>list_type</code>, possible using a label\nfrom <code>list_item</code>\n",null,0],["list_item_start","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-list_item_start","(list_item, list_type)","<p>Lists are paragraphs, but notes and labels have a separator\n",null,0],["list_known_classes","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-list_known_classes","(names = [])","<p>Lists classes known to ri starting with <code>names</code>.  If\n<code>names</code> is empty all known classes are shown.\n",null,0],["list_methods_matching","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-list_methods_matching","(name)","<p>Returns an Array of methods matching <code>name</code>\n",null,0],["listen","Addrinfo","Ruby/classes/Addrinfo.html#method-i-listen","(backlog=Socket::SOMAXCONN)","<p>creates a listening socket bound to self.\n",null,0],["listen","Gem::Server","Ruby/classes/Gem/Server.html#method-i-listen","(addresses = @addresses)","<p>Creates server sockets based on the addresses option.  If no addresses were\ngiven a server socket for …\n",null,0],["listen","REXML::Parsers::SAX2Parser","Ruby/classes/REXML/Parsers/SAX2Parser.html#method-i-listen","( *args, &blok )","<p>Listen arguments:\n<p>Symbol, Array, Block\n\n<pre><code>Listen to Symbol events on Array elements</code></pre>\n",null,0],["listen","Socket","Ruby/classes/Socket.html#method-i-listen","(p1)","<p>Listens for connections, using the specified <code>int</code> as the\nbacklog. A call to <em>listen</em> only applies if the …\n",null,0],["listen","TCPServer","Ruby/classes/TCPServer.html#method-i-listen","(p1)","<p>Listens for connections, using the specified <code>int</code> as the\nbacklog. A call to <em>listen</em> only applies if the …\n",null,0],["listen","UNIXServer","Ruby/classes/UNIXServer.html#method-i-listen","(p1)","<p>Listens for connections, using the specified <code>int</code> as the\nbacklog. A call to <em>listen</em> only applies if the …\n",null,0],["listen","WEBrick::GenericServer","Ruby/classes/WEBrick/GenericServer.html#method-i-listen","(address, port)","<p>Adds listeners from <code>address</code> and <code>port</code> to the\nserver.  See WEBrick::Utils::create_listeners for details. …\n",null,0],["listener","RSS::REXMLParser","Ruby/classes/RSS/REXMLParser.html#method-i-listener","()","",null,0],["listener","RSS::XMLParserParser","Ruby/classes/RSS/XMLParserParser.html#method-i-listener","()","",null,0],["listener","RSS::XMLScanParser","Ruby/classes/RSS/XMLScanParser.html#method-i-listener","()","",null,0],["listener=","RSS::REXMLLikeXMLParser","Ruby/classes/RSS/REXMLLikeXMLParser.html#method-i-listener-3D","(listener)","",null,0],["listeners_for","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-listeners_for","(name)","",null,1],["listening?","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-listening-3F","(name)","",null,1],["literals","","Ruby/files/ruby/doc/syntax/literals_rdoc.html","","<p>Literals\n<p>Literals create objects you can use in your program.  Literals include:\n<p>Booleans and nil\n",null,0],["ljust","String","Ruby/classes/String.html#method-i-ljust","(*args)","<p>If <em>integer</em> is greater than the length of <em>str</em>, returns a\nnew <code>String</code> of length <em>integer</em> with <em>str</em> left\njustified …\n",null,0],["ln","FileUtils","Ruby/classes/FileUtils.html#method-c-ln","(src, dest, options = {})","<p>Options: force noop verbose\n<p><strong><code>ln(old, new, options = {})</code></strong>\n<p>Creates a hard link <code>new</code> which points to <code>old</code>. If …\n",null,0],["ln","Object","Ruby/classes/Object.html#method-i-ln","()","<p>Create a link to the specified TARGET with LINK_NAME.\n\n<pre><code>ruby -run -e ln -- [OPTION] TARGET LINK_NAME\n\n-s ...</code></pre>\n",null,0],["ln","OpenSSL::ASN1::ObjectId","Ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-ln","()","",null,0],["ln_s","FileUtils","Ruby/classes/FileUtils.html#method-c-ln_s","(src, dest, options = {})","<p>Options: force noop verbose\n<p><strong><code>ln_s(old, new, options = {})</code></strong>\n<p>Creates a symbolic link <code>new</code> which points to <code>old</code> …\n",null,0],["ln_sf","FileUtils","Ruby/classes/FileUtils.html#method-c-ln_sf","(src, dest, options = {})","<p>Options: noop verbose\n<p>Same as\n\n<pre><code>#ln_s(src, dest, :force =&gt; true)\n</code></pre>\n",null,0],["load","Gem::RequestSet::GemDepedencyAPI","Ruby/classes/Gem/RequestSet/GemDepedencyAPI.html#method-i-load","()","",null,0],["load","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-load","(file)","<p>Loads Ruby format gemspec from <code>file</code>.\n",null,0],["load","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-load","(file, priv=nil)","",null,0],["load","JSON","Ruby/classes/JSON.html#method-i-load","(source, proc = nil, options = {})","<p>Load a ruby data structure from a JSON <em>source</em> and return it. A\nsource can either be a string-like object, …\n",null,0],["load","Kernel","Ruby/classes/Kernel.html#method-i-load","(p1, p2 = v2)","<p>Loads and executes the Ruby program in the file <em>filename</em>. If the\nfilename does not resolve to an absolute …\n",null,0],["load","Marshal","Ruby/classes/Marshal.html#method-c-load","(p1, p2 = v2)","<p>Returns the result of converting the serialized data in source into a Ruby\nobject (possibly with associated …\n",null,0],["load","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-c-load","(p1 = v1)","",null,0],["load","OptionParser","Ruby/classes/OptionParser.html#method-i-load","(filename = nil)","<p>Loads options from file names as <code>filename</code>. Does nothing when\nthe file is not present. Returns whether …\n",null,0],["load","Psych","Ruby/classes/Psych.html#method-c-load","(yaml, filename = nil)","<p>Load <code>yaml</code> in to a Ruby data structure.  If multiple documents\nare provided, the object contained in the …\n",null,0],["load","Rake::DefaultLoader","Ruby/classes/Rake/DefaultLoader.html#method-i-load","(fn)","",null,0],["load","Rake::MakefileLoader","Ruby/classes/Rake/MakefileLoader.html#method-i-load","(fn)","<p>Load the makefile dependencies in <code>fn</code>.\n",null,0],["load","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-load","()","<p>Causes the records to be loaded from the database if they have not been\nloaded already. You can use this …\n",null,1],["load","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-i-load","()","<p>Loads the Unicode database and returns all the internal objects of\nUnicodeDatabase.\n",null,1],["load_all","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-load_all","()","<p>Loads all items from this store into memory.  This recreates a\ndocumentation tree for use by a generator …\n",null,0],["load_and_configure_sdoc","Rails::API::RepoTask","Rails/classes/Rails/API/RepoTask.html#method-i-load_and_configure_sdoc","()","",null,1],["load_and_configure_sdoc","Rails::API::Task","Rails/classes/Rails/API/Task.html#method-i-load_and_configure_sdoc","()","",null,1],["load_api_keys","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-load_api_keys","()","",null,0],["load_cache","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-load_cache","()","<p>Loads cache file for this store\n",null,0],["load_call","XMLRPC::Marshal","Ruby/classes/XMLRPC/Marshal.html#method-i-load_call","( stringOrReadable )","",null,0],["load_certificate","Gem::Security::TrustDir","Ruby/classes/Gem/Security/TrustDir.html#method-i-load_certificate","(certificate_file)","<p>Loads the given <code>certificate_file</code>\n",null,0],["load_class","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-load_class","(klass_name)","<p>Loads ri data for <code>klass_name</code> and hooks it up to this store.\n",null,0],["load_class_data","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-load_class_data","(klass_name)","<p>Loads ri data for <code>klass_name</code>\n",null,0],["load_console","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-load_console","(app=self)","<p>Load console and invoke the registered hooks. Check\n<code>Rails::Railtie.console</code> for more info.\n",null,1],["load_default_cert","Gem::Commands::CertCommand","Ruby/classes/Gem/Commands/CertCommand.html#method-i-load_default_cert","()","",null,0],["load_default_key","Gem::Commands::CertCommand","Ruby/classes/Gem/Commands/CertCommand.html#method-i-load_default_key","()","",null,0],["load_defaults","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-load_defaults","()","<p>Loads the default specifications. It should be called only once.\n",null,0],["load_documents","Psych","Ruby/classes/Psych.html#method-c-load_documents","(yaml, &block)","<p>This method is deprecated, use Psych.load_stream instead.\n",null,0],["load_env_plugins","Gem","Ruby/classes/Gem.html#method-c-load_env_plugins","()","<p>Find all &#39;rubygems_plugin&#39; files in $LOAD_PATH and load them\n",null,0],["load_file","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-load_file","(filename)","",null,0],["load_file","IRB::IrbLoader","Ruby/classes/IRB/IrbLoader.html#method-i-load_file","(path, priv = nil)","<p>Loads the given file in the current session&#39;s context and evaluates it.\n<p>See Irb#suspend_input_method …\n",null,0],["load_file","Psych","Ruby/classes/Psych.html#method-c-load_file","(filename)","<p>Load the document contained in <code>filename</code>.  Returns the yaml\ncontained in <code>filename</code> as a ruby object\n",null,0],["load_gemdeps","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-load_gemdeps","(path)","<p>Load a dependency management file.\n",null,0],["load_generators","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-load_generators","(app=self)","<p>Load rails generators and invoke the registered hooks. Check\n<code>Rails::Railtie.generators</code> for more info. …\n",null,1],["load_imports","Rake::Application","Ruby/classes/Rake/Application.html#method-i-load_imports","()","<p>Load the pending list of imported files.\n",null,0],["load_imports","Rake::Application","Ruby/classes/Rake/Application.html#method-i-load_imports","()","<p>Load the pending list of imported files.\n",null,0],["load_method","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-load_method","(store, cache, klass, type, name)","<p>Loads RI data for method <code>name</code> on <code>klass</code> from\n<code>store</code>.  <code>type</code> and <code>cache</code> indicate if\nit is a class or instance …\n",null,0],["load_method","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-load_method","(klass_name, method_name)","<p>Loads ri data for <code>method_name</code> in <code>klass_name</code>\n",null,0],["load_methods_matching","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-load_methods_matching","(name)","<p>Returns an Array of RI data for methods matching <code>name</code>\n",null,0],["load_mime_types","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-load_mime_types","(file)","<p>Loads Apache-compatible mime.types in <code>file</code>.\n",null,0],["load_options","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-load_options","()","<p>Loads options from .rdoc_options if the file exists, otherwise creates a\nnew RDoc::Options instance. …\n",null,0],["load_page","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-load_page","(page_name)","<p>Loads ri data for <code>page_name</code>\n",null,0],["load_path_insert_index","Gem","Ruby/classes/Gem.html#method-c-load_path_insert_index","()","<p>The index to insert activated gem paths into the $LOAD_PATH.\n<p>Defaults to the site lib directory unless …\n",null,0],["load_paths","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-load_paths","()","",null,1],["load_plugin_files","Gem","Ruby/classes/Gem.html#method-c-load_plugin_files","(plugins)","<p>Load <code>plugins</code> as ruby files\n",null,0],["load_plugins","Gem","Ruby/classes/Gem.html#method-c-load_plugins","()","<p>Find all &#39;rubygems_plugin&#39; files in installed gems and load them\n",null,0],["load_private_key","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-load_private_key","(p1 = v1, p2 = v2)","",null,0],["load_public_key","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-load_public_key","(p1 = v1, p2 = v2)","",null,0],["load_rack_cache","Rails::Application","Rails/classes/Rails/Application.html#method-i-load_rack_cache","()","",null,1],["load_rakefile","Rake","Ruby/classes/Rake.html#method-i-load_rakefile","(path)","<p>Load a rakefile.\n",null,0],["load_rakefile","Rake::Application","Ruby/classes/Rake/Application.html#method-i-load_rakefile","()","<p>Find the rakefile and then load it and any pending imports.\n",null,0],["load_rakefile","Rake::Application","Ruby/classes/Rake/Application.html#method-i-load_rakefile","()","<p>Find the rakefile and then load it and any pending imports.\n",null,0],["load_rdoc","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-c-load_rdoc","()","<p>Loads the RDoc generator\n",null,0],["load_rdoc","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-c-load_rdoc","()","<p>Loads the RDoc generator\n",null,0],["load_response","XMLRPC::Marshal","Ruby/classes/XMLRPC/Marshal.html#method-i-load_response","( stringOrReadable )","",null,0],["load_runner","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-load_runner","(app=self)","<p>Load Rails runner and invoke the registered hooks. Check\n<code>Rails::Railtie.runner</code> for more info.\n",null,1],["load_seed","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-load_seed","()","",null,1],["load_seed","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-load_seed","()","<p>Load data from db/seeds.rb file. It can be used in to load engines&#39;\nseeds, e.g.:\n<p>Blog::Engine.load_seed …\n",null,1],["load_session","ActionDispatch::Session::CookieStore","Rails/classes/ActionDispatch/Session/CookieStore.html#method-i-load_session","(env)","",null,1],["load_session","ActionDispatch::Session::StaleSessionCheck","Rails/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-load_session","(env)","",null,1],["load_spec","Gem::DependencyResolver::IndexSet","Ruby/classes/Gem/DependencyResolver/IndexSet.html#method-i-load_spec","(name, ver, source)","<p>Called from IndexSpecification to get a true Specification object.\n",null,0],["load_specs","Gem::Source","Ruby/classes/Gem/Source.html#method-i-load_specs","(type)","<p>Loads <code>type</code> kind of specs fetching from +@uri+ if the on-disk\ncache is out of date.\n<p><code>type</code> is one of the …\n",null,0],["load_specs","Gem::Source::Local","Ruby/classes/Gem/Source/Local.html#method-i-load_specs","(type)","",null,0],["load_specs","Gem::Source::SpecificFile","Ruby/classes/Gem/Source/SpecificFile.html#method-i-load_specs","(*a)","",null,0],["load_stream","Psych","Ruby/classes/Psych.html#method-c-load_stream","(yaml, filename = nil)","<p>Load multiple documents given in <code>yaml</code>.  Returns the parsed\ndocuments as a list.  If a block is given, …\n",null,0],["load_target","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-load_target","()","",null,1],["load_tasks","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-load_tasks","(app=self)","<p>Load Rake, railties tasks and invoke the registered hooks. Check\n<code>Rails::Railtie.rake_tasks</code> for more info. …\n",null,1],["load_variable_map","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-load_variable_map","(map_name)","<p>Loads the variable map with the given <code>name</code> from the\nRDoc::Store, if present.\n",null,0],["load_with_autoloading","Marshal","Rails/classes/Marshal.html#method-c-load_with_autoloading","(source)","",null,1],["load_yaml","Gem","Ruby/classes/Gem.html#method-c-load_yaml","()","<p>Loads YAML, preferring Psych\n",null,0],["load_yaml","RDoc","Ruby/classes/RDoc.html#method-c-load_yaml","()","<p>Loads the best available YAML library.\n",null,0],["loaded?","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-loaded-3F","()","<p>Returns <code>true</code> if the association has been loaded, otherwise\n<code>false</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">pets</span>.<span class=\"ruby-identifier\">loaded?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">pets</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["loaded_from=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-loaded_from-3D","(path)","<p>Set the location a Specification was loaded from. <code>obj</code> is\nconverted to a String.\n",null,0],["local","Gem::Platform","Ruby/classes/Gem/Platform.html#method-c-local","()","",null,0],["local","Time","Ruby/classes/Time.html#method-c-local","(*args)","<p>Same as Time::gm, but interprets the values in the local time zone.\n\n<pre><code>Time.local(2000,&quot;jan&quot;,1,20,15,1)  ...</code></pre>\n",null,0],["local","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-local","(*args)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone\nof <code>self</code> from given values. …\n",null,1],["local?","Gem::LocalRemoteOptions","Ruby/classes/Gem/LocalRemoteOptions.html#method-i-local-3F","()","<p>Is local fetching enabled?\n",null,0],["local?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-local-3F","()","<p>True if the request came from localhost, 127.0.0.1.\n",null,1],["local_address","BasicSocket","Ruby/classes/BasicSocket.html#method-i-local_address","()","<p>Returns an Addrinfo object for local address obtained by getsockname.\n<p>Note that addrinfo.protocol is filled …\n",null,0],["local_constant_names","Module","Rails/classes/Module.html#method-i-local_constant_names","()","<p><strong>DEPRECATED</strong>: Use <code>local_constants</code> instead.\n<p>Returns the names of the constants defined locally as strings. …\n",null,1],["local_name","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-local_name","( node_set=nil )","<p>UNTESTED\n",null,0],["local_name","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-local_name","()","",null,0],["local_name=","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-local_name-3D","( name_str )","",null,0],["local_offset","DateTime","Rails/classes/DateTime.html#method-c-local_offset","()","<p><strong>DEPRECATED</strong>: Use <code>DateTime.civil_from_format</code>\ndirectly.\n",null,1],["local_time","Time","Rails/classes/Time.html#method-c-local_time","(*args)","<p><strong>DEPRECATED</strong>: Use +Time#local+ instead.\n<p>Wraps class method <code>time_with_datetime_fallback</code> with\n<code>utc_or_local</code> …\n",null,1],["local_to_utc","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-local_to_utc","(time, dst=true)","<p>Adjust the given time to the simultaneous time in UTC. Returns a Time.utc()\ninstance.\n",null,1],["local_variables","Kernel","Ruby/classes/Kernel.html#method-i-local_variables","()","<p>Returns the names of the current local variables.\n\n<pre><code>fred = 1\nfor i in 1..10\n   # ...\nend\nlocal_variables ...</code></pre>\n",null,0],["locale","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-locale","()","<p>Returns current locale id (lcid). The default locale is\nLOCALE_SYSTEM_DEFAULT.\n\n<pre><code>lcid = WIN32OLE.locale</code></pre>\n",null,0],["locale=","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-locale-3D","(p1)","<p>Sets current locale id (lcid).\n\n<pre><code>WIN32OLE.locale = 1033 # set locale English(U.S)\nobj = WIN32OLE_VARIANT.new(&quot;$100,000&quot;, ...</code></pre>\n",null,0],["locale_charmap","Encoding","Ruby/classes/Encoding.html#method-c-locale_charmap","()","<p>Returns the locale charmap name. It returns nil if no appropriate\ninformation.\n\n<pre><code>Debian GNU/Linux\n  LANG=C ...</code></pre>\n",null,0],["localize","AbstractController::Translation","Rails/classes/AbstractController/Translation.html#method-i-localize","(*args)","<p>Delegates to <code>I18n.localize</code>. Also aliased as <code>l</code>.\n",null,1],["localize","ActionView::Helpers::TranslationHelper","Rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-localize","(*args)","<p>Delegates to <code>I18n.localize</code> with no additional functionality.\n<p>See rubydoc.info/github/svenfuchs/i18n/master/I18n/Backend/Base:localize …\n",null,1],["localtime","Time","Ruby/classes/Time.html#method-i-localtime","(p1 = v1)","<p>Converts <em>time</em> to local time (using the local time zone in effect\nfor this process) modifying the receiver. …\n",null,0],["localtime","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-localtime","()","<p>Returns a <code>Time.local()</code> instance of the simultaneous time in\nyour system&#39;s <code>ENV['TZ']</code> zone.\n",null,1],["location","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-location","()","",null,1],["location","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-location","()","",null,1],["location=","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-location-3D","(url)","",null,1],["location=","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-location-3D","(url)","",null,1],["location_of_caller","Gem","Ruby/classes/Gem.html#method-c-location_of_caller","()","<p>The file name and line number of the caller of the caller of this method.\n",null,0],["lock","Mutex","Ruby/classes/Mutex.html#method-i-lock","()","<p>Attempts to grab the lock and waits if it isn&#39;t available. Raises\n<code>ThreadError</code> if <code>mutex</code> was locked …\n",null,0],["lock","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-lock","(path, body, initheader = nil)","<p>Sends a LOCK request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,0],["lock","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-lock","(locks = true)","<p>Specifies locking settings (default to <code>true</code>). For more\ninformation on locking, please see +ActiveRecord::Locking+. …\n",null,1],["lock!","ActiveRecord::Locking::Pessimistic","Rails/classes/ActiveRecord/Locking/Pessimistic.html#method-i-lock-21","(lock = true)","<p>Obtain a row lock on this record. Reloads the record to obtain the\nrequested lock. Pass an SQL locking …\n",null,1],["locked?","Mutex","Ruby/classes/Mutex.html#method-i-locked-3F","()","<p>Returns <code>true</code> if this lock is currently held by some thread.\n",null,0],["locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_column","()","<p>The version column used for optimistic locking. Defaults to\n<code>lock_version</code>.\n",null,1],["locking_column=","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_column-3D","(value)","<p>Set the column to use for optimistic locking. Defaults to\n<code>lock_version</code>.\n",null,1],["locking_enabled?","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_enabled-3F","()","<p>Returns true if the <code>lock_optimistically</code> flag is set to true\n(which it is, by default) and the table includes …\n",null,1],["log","BigMath","Ruby/classes/BigMath.html#method-c-log","(p1, p2)","<p>Computes the natural logarithm of x to the specified number of digits of\nprecision.\n<p>If x is zero or negative, …\n",null,0],["log","CMath","Ruby/classes/CMath.html#method-c-log","(*args)","<p>Returns the natural logarithm of Complex.  If a second argument is given,\nit will be the base of logarithm. …\n",null,0],["log","GServer","Ruby/classes/GServer.html#method-i-log","(msg)","<p>Log a message to #stdlog, if it&#39;s defined.  This implementation outputs\nthe timestamp and message …\n",null,0],["log","Logger","Ruby/classes/Logger.html#method-i-log","(severity, message = nil, progname = nil, &block)","",null,0],["log","Logger::Application","Ruby/classes/Logger/Application.html#method-i-log","(severity, message = nil, &block)","<p>See Logger#add.  This application&#39;s <code>appname</code> is used.\n",null,0],["log","Math","Ruby/classes/Math.html#method-c-log","(p1, p2 = v2)","<p>Returns the natural logarithm of <em>numeric</em>. If additional second\nargument is given, it will be the base …\n",null,0],["log","Sys","Ruby/classes/Sys.html#method-i-log","(msg)","<p>Write a message to standard error if $verbose is enabled.\n",null,0],["log","Syslog","Ruby/classes/Syslog.html#method-c-log","(*args)","<p>Log a message with the specified priority. Example:\n\n<pre><code>Syslog.log(Syslog::LOG_CRIT, &quot;Out of disk space&quot;) ...</code></pre>\n",null,0],["log","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-log","(level, data)","<p>Logs <code>data</code> at <code>level</code> if the given level is above\nthe current log level.\n",null,0],["log","WEBrick::Log","Ruby/classes/WEBrick/Log.html#method-i-log","(level, data)","<p>Same as BasicLog#log\n",null,0],["log","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-log","(sql, name = \"SQL\", binds = [])","",null,1],["log","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-log","()","",null,1],["log","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-log","(*args)","<p>Define log for backwards compatibility. If just one argument is sent,\ninvoke say, otherwise invoke say_status. …\n",null,1],["log!","CMath","Ruby/classes/CMath.html#method-c-log-21","(*args)","",null,0],["log10","CMath","Ruby/classes/CMath.html#method-c-log10","(z)","<p>returns the base 10 logarithm of <code>z</code>\n",null,0],["log10","Math","Ruby/classes/Math.html#method-c-log10","(p1)","<p>Returns the base 10 logarithm of <em>numeric</em>.\n\n<pre><code>Math.log10(1)       #=&gt; 0.0\nMath.log10(10)      #=&gt; 1.0\nMath.log10(10**100) ...\n</code></pre>\n",null,0],["log10!","CMath","Ruby/classes/CMath.html#method-c-log10-21","(z)","",null,0],["log2","CMath","Ruby/classes/CMath.html#method-c-log2","(z)","<p>returns the base 2 logarithm of <code>z</code>\n",null,0],["log2","Math","Ruby/classes/Math.html#method-c-log2","(p1)","<p>Returns the base 2 logarithm of <em>numeric</em>.\n\n<pre><code>Math.log2(1)      #=&gt; 0.0\nMath.log2(2)      #=&gt; 1.0\nMath.log2(32768) ...\n</code></pre>\n",null,0],["log2!","CMath","Ruby/classes/CMath.html#method-c-log2-21","(z)","",null,0],["log=","Logger::Application","Ruby/classes/Logger/Application.html#method-i-log-3D","(logdev)","",null,0],["log_error","ActionController::Live","Rails/classes/ActionController/Live.html#method-i-log_error","(exception)","",null,1],["log_level","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-log_level","()","",null,1],["log_path","Rails::Server","Rails/classes/Rails/Server.html#method-i-log_path","()","",null,1],["log_subscribers","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-c-log_subscribers","()","",null,1],["logger","Logger::Application","Ruby/classes/Logger/Application.html#method-i-logger","()","<p>Logger for this application.  See the class Logger for an explanation.\n",null,0],["logger","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-logger","()","",null,1],["logger","ActionMailer::LogSubscriber","Rails/classes/ActionMailer/LogSubscriber.html#method-i-logger","()","",null,1],["logger","ActionView::LogSubscriber","Rails/classes/ActionView/LogSubscriber.html#method-i-logger","()","",null,1],["logger","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-i-logger","()","",null,1],["logger","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-i-logger","()","",null,1],["logger","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-c-logger","()","",null,1],["logger=","Logger::Application","Ruby/classes/Logger/Application.html#method-i-logger-3D","(logger)","<p>Sets the logger for this application.  See the class Logger for an\nexplanation.\n",null,0],["logging","Net::POP3","Ruby/classes/Net/POP3.html#method-i-logging","(msg)","<p>deguging output for <code>msg</code>\n",null,0],["login","Net::FTP","Ruby/classes/Net/FTP.html#method-i-login","(user = \"anonymous\", passwd = nil, acct = nil)","<p>Logs in to the remote host. The session must have been previously\nconnected.  If <code>user</code> is the string “anonymous” …\n",null,0],["login","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-login","(user, password)","<p>Sends a LOGIN command to identify the client and carries the plaintext\n<code>password</code> authenticating this  …\n",null,0],["login","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-login","(options, password = nil)","<p>Login to the host with a given username and password.\n<p>The username and password can either be provided …\n",null,0],["logo","RSS::Maker::ChannelBase","Ruby/classes/RSS/Maker/ChannelBase.html#method-i-logo","()","",null,0],["logo=","RSS::Maker::ChannelBase","Ruby/classes/RSS/Maker/ChannelBase.html#method-i-logo-3D","(url)","",null,0],["logout","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-logout","()","<p>Sends a LOGOUT command to inform the server that the client is done with\nthe connection.\n",null,0],["long_name","OpenSSL::ASN1::ObjectId","Ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-long_name","()","",null,0],["look_for_directives_in","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-look_for_directives_in","(context, comment)","<p>Look for directives in a normal comment block:\n\n<pre><code>* :title: My Awesome Project</code></pre>\n<p>This method modifies the <code>comment</code> …\n",null,0],["look_for_directives_in","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-look_for_directives_in","(context, comment)","<p>Look for directives in a normal comment block:\n\n<pre><code># :stopdoc:\n# Don&#39;t display comment from this point forward</code></pre>\n",null,0],["lookup","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-i-lookup","(name)","",null,0],["lookup","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-lookup","(task_name, initial_scope=nil)","<p>Lookup a task, using scope and the scope hints in the task name. This\nmethod performs straight lookups …\n",null,0],["lookup","Mime::Type","Rails/classes/Mime/Type.html#method-c-lookup","(string)","",null,1],["lookup_ancestors","ActiveModel::Translation","Rails/classes/ActiveModel/Translation.html#method-i-lookup_ancestors","()","<p>When localizing a string, it goes through the lookup returned by this\nmethod, which is used in ActiveModel::Name#human …\n",null,1],["lookup_by_extension","Mime::Type","Rails/classes/Mime/Type.html#method-c-lookup_by_extension","(extension)","",null,1],["lookup_context","AbstractController::ViewPaths","Rails/classes/AbstractController/ViewPaths.html#method-i-lookup_context","()","<p>LookupContext is the object responsible to hold all information required to\nlookup templates, i.e. view …\n",null,1],["lookup_method","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-lookup_method","(name)","<p>Returns a filtered list of methods matching <code>name</code>\n",null,0],["lookup_ring","Rinda::RingFinger","Ruby/classes/Rinda/RingFinger.html#method-i-lookup_ring","(timeout=5, &block)","<p>Looks up RingServers waiting <code>timeout</code> seconds.  RingServers\nwill be given <code>block</code> as a callback, which will …\n",null,0],["lookup_ring_any","Rinda::RingFinger","Ruby/classes/Rinda/RingFinger.html#method-i-lookup_ring_any","(timeout=5)","<p>Returns the first found remote TupleSpace.  Any further recovered\nTupleSpaces can be found by calling …\n",null,0],["lookup_server","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-lookup_server","(req)","<p>Finds the appropriate virtual host to handle <code>req</code>\n",null,0],["lookup_store","ActiveSupport::Cache","Rails/classes/ActiveSupport/Cache.html#method-c-lookup_store","(*store_option)","<p>Creates a new CacheStore object according to the given options.\n<p>If no arguments are passed to this method, …\n",null,1],["loop","Kernel","Ruby/classes/Kernel.html#method-i-loop","()","<p>Repeatedly executes the block.\n<p>If no block is given, an enumerator is returned instead.\n\n<pre><code>loop do\n  print ...</code></pre>\n",null,0],["lower","Win32::SSPI::SecurityHandle","Ruby/classes/Win32/SSPI/SecurityHandle.html#method-i-lower","()","",null,0],["lower_triangular?","Matrix","Ruby/classes/Matrix.html#method-i-lower_triangular-3F","()","<p>Returns <code>true</code> is this is a lower triangular matrix.\n",null,0],["ls","Net::FTP","Ruby/classes/Net/FTP.html#method-i-ls","(*args)","",null,0],["lstat","File","Ruby/classes/File.html#method-c-lstat","(p1)","<p>Same as <code>File::stat</code>, but does not follow the last symbolic\nlink. Instead, reports on the link itself. …\n",null,0],["lstat","File","Ruby/classes/File.html#method-i-lstat","()","<p>Same as <code>IO#stat</code>, but does not follow the last symbolic link.\nInstead, reports on the link itself.\n\n<pre><code>File.symlink(&quot;testfile&quot;, ...</code></pre>\n",null,0],["lstat","Pathname","Ruby/classes/Pathname.html#method-i-lstat","()","<p>See File.lstat.\n",null,0],["lstrip","String","Ruby/classes/String.html#method-i-lstrip","()","<p>Returns a copy of <em>str</em> with leading whitespace removed. See also\n<code>String#rstrip</code> and <code>String#strip</code>.\n\n<pre><code>&quot;  hello ...</code></pre>\n",null,0],["lstrip!","String","Ruby/classes/String.html#method-i-lstrip-21","()","<p>Removes leading whitespace from <em>str</em>, returning <code>nil</code> if\nno change was made. See also <code>String#rstrip!</code> and …\n",null,0],["lsub","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-lsub","(refname, mailbox)","<p>Sends a LSUB command, and returns a subset of names from the set of names\nthat the user has declared …\n",null,0],["ltree","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-ltree","(name, options = {})","",null,1],["ludecomp","LUSolve","Ruby/classes/LUSolve.html#method-i-ludecomp","(a,n,zero=0,one=1)","<p>Performs LU decomposition of the n by n matrix a.\n",null,0],["lup","Matrix","Ruby/classes/Matrix.html#method-i-lup","()","<p>Returns the LUP decomposition of the matrix; see\n<code>LUPDecomposition</code>.\n\n<pre><code>a = Matrix[[1, 2], [3, 4]]\nl, u, p ...</code></pre>\n",null,0],["lup_decomposition","Matrix","Ruby/classes/Matrix.html#method-i-lup_decomposition","()","",null,0],["lusolve","LUSolve","Ruby/classes/LUSolve.html#method-i-lusolve","(a,b,ps,zero=0.0)","<p>Solves a*x = b for x, using LU decomposition.\n<p>a is a matrix, b is a constant vector, x is the solution …\n",null,0],["macaddr","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-macaddr","(name, options = {})","",null,1],["magnitude","Bignum","Ruby/classes/Bignum.html#method-i-magnitude","()","<p>Returns the absolute value of <em>big</em>.\n\n<pre><code>-1234567890987654321.abs   #=&gt; 1234567890987654321\n</code></pre>\n",null,0],["magnitude","Complex","Ruby/classes/Complex.html#method-i-magnitude","()","<p>Returns the absolute part of its polar form.\n\n<pre><code>Complex(-1).abs         #=&gt; 1\nComplex(3.0, -4.0).abs  #=&gt; ...\n</code></pre>\n",null,0],["magnitude","Fixnum","Ruby/classes/Fixnum.html#method-i-magnitude","()","<p>Returns the absolute value of <em>fix</em>.\n\n<pre><code>-12345.abs   #=&gt; 12345\n12345.abs    #=&gt; 12345\n</code></pre>\n",null,0],["magnitude","Float","Ruby/classes/Float.html#method-i-magnitude","()","<p>Returns the absolute value of <em>flt</em>.\n\n<pre><code>(-34.56).abs   #=&gt; 34.56\n-34.56.abs     #=&gt; 34.56\n</code></pre>\n",null,0],["magnitude","Numeric","Ruby/classes/Numeric.html#method-i-magnitude","()","<p>Returns the absolute value of <em>num</em>.\n\n<pre><code>12.abs         #=&gt; 12\n(-34.56).abs   #=&gt; 34.56\n-34.56.abs     #=&gt; 34.56\n</code></pre>\n",null,0],["magnitude","Vector","Ruby/classes/Vector.html#method-i-magnitude","()","<p>Returns the modulus (Pythagorean distance) of the vector.\n\n<pre><code>Vector[5,8,2].r =&gt; 9.643650761\n</code></pre>\n",null,0],["mail","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-mail","( dest = '' )","",null,0],["mail","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-mail","(headers = {}, &block)","<p>The main method that creates the message and renders the email templates.\nThere are two ways to call …\n",null,1],["mail_to","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-mail_to","(email_address, name = nil, html_options = {}, &block)","<p>Creates a mailto link tag to the specified <code>email_address</code>,\nwhich is also used as the name of the link …\n",null,1],["mailer","ActionMailer::MailHelper","Rails/classes/ActionMailer/MailHelper.html#method-i-mailer","()","<p>Access the mailer instance.\n",null,1],["mailer_name","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-mailer_name","()","",null,1],["mailer_name","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-mailer_name","()","",null,1],["mailfrom","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-mailfrom","(from_addr)","",null,0],["mails","Net::POP3","Ruby/classes/Net/POP3.html#method-i-mails","()","<p>Returns an array of Net::POPMail objects, representing all the messages on\nthe server.  This array is …\n",null,0],["main","IRB::Context","Ruby/classes/IRB/Context.html#method-i-main","()","<p>The top-level workspace, see WorkSpace#main\n",null,0],["main","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-main","()","<p>Gets the main page for this RDoc store.  This page is used as the root of\nthe RDoc server.\n",null,0],["main","Thread","Ruby/classes/Thread.html#method-c-main","()","<p>Returns the main thread.\n",null,0],["main=","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-main-3D","(page)","<p>Sets the main page for this RDoc store.\n",null,0],["main_irb","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-main_irb","()","<p>Returns the top level irb session.\n",null,0],["main_thread","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-main_thread","()","<p>Returns the top level thread.\n",null,0],["main_type","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-main_type","()","<p>Returns a content type string such as “text”. This method returns nil if\nContent-Type: header …\n",null,0],["major_version","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-major_version","()","<p>Returns major version.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Word 10.0 Object Library&#39;, &#39;Documents&#39;)\nputs ...</code></pre>\n",null,0],["major_version","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-major_version","()","<p>Returns the type library major version.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;) ...</code></pre>\n",null,0],["make","Gem::Ext::Builder","Ruby/classes/Gem/Ext/Builder.html#method-c-make","(dest_path, results)","",null,0],["make","RSS::Maker","Ruby/classes/RSS/Maker.html#method-i-make","(version, &block)","<p>Builder for an RSS object Creates an object of the type passed in\n<code>args</code>\n<p>Executes the <code>block</code> to populate …\n",null,0],["make","RSS::Maker::RSSBase","Ruby/classes/RSS/Maker/RSSBase.html#method-i-make","(*args, &block)","",null,0],["make_affine!","OpenSSL::PKey::EC::Point","Ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-make_affine-21","()","",null,0],["make_compiler","ERB","Ruby/classes/ERB.html#method-i-make_compiler","(trim_mode)","<p>Creates a new compiler for ERB.  See ERB::Compiler.new for details\n",null,0],["make_destination_dirs","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-make_destination_dirs","(install_destdir)","",null,0],["make_expires","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-make_expires","(sec=nil)","<p>Returns an expiry Time based on <code>sec</code> which can be one of:\n<p>Numeric &mdash; <code>sec</code> seconds into the future\n<p><code>true</code> &mdash; the expiry …\n",null,0],["make_link","Pathname","Ruby/classes/Pathname.html#method-i-make_link","(p1)","<p>Creates a hard link at <em>pathname</em>.\n<p>See File.link.\n",null,0],["make_message","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-make_message","(message)","<p>Adds useful info about the parser to <code>message</code>\n",null,0],["make_methods","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-c-make_methods","(meth)","<p>Builds a methods for level <code>meth</code>.\n",null,0],["make_passwd","WEBrick::HTTPAuth::BasicAuth","Ruby/classes/WEBrick/HTTPAuth/BasicAuth.html#method-c-make_passwd","(realm, user, pass)","<p>Used by UserDB to create a basic password entry\n",null,0],["make_passwd","WEBrick::HTTPAuth::DigestAuth","Ruby/classes/WEBrick/HTTPAuth/DigestAuth.html#method-c-make_passwd","(realm, user, pass)","<p>Used by UserDB to create a digest password entry\n",null,0],["make_passwd","WEBrick::HTTPAuth::UserDB","Ruby/classes/WEBrick/HTTPAuth/UserDB.html#method-i-make_passwd","(realm, user, pass)","<p>Creates an obscured password in <code>realm</code> with <code>user</code>\nand <code>password</code> using the auth_type of this database.\n",null,0],["make_regexp","URI::Parser","Ruby/classes/URI/Parser.html#method-i-make_regexp","(schemes = nil)","<p>returns Regexp that is default self.regexp, unless <code>schemes</code> is\nprovided. Then it is a Regexp.union with …\n",null,0],["make_switch","OptionParser","Ruby/classes/OptionParser.html#method-i-make_switch","(opts, block = nil)","<p>Creates an OptionParser::Switch from the parameters. The parsed argument\nvalue is passed to the given …\n",null,0],["make_symlink","Pathname","Ruby/classes/Pathname.html#method-i-make_symlink","(p1)","<p>Creates a symbolic link.\n<p>See File.symlink.\n",null,0],["make_temp_directories","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-make_temp_directories","()","<p>Make directories for index generation\n",null,0],["make_thread_list","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-make_thread_list","()","",null,0],["make_tuple","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-make_tuple","(ary)","<p>Creates a Rinda::Tuple for <code>ary</code>.\n",null,0],["make_variable_map","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-make_variable_map","(variables)","<p>Converts the variable =&gt; ClassModule map <code>variables</code> from a C\nparser into  a variable =&gt; class name …\n",null,0],["makedirs","FileUtils","Ruby/classes/FileUtils.html#method-c-makedirs","(list, options = {})","",null,0],["makedirs","Rake::FtpUploader","Ruby/classes/Rake/FtpUploader.html#method-i-makedirs","(path)","<p>Create the directory <code>path</code> in the uploader root path.\n",null,0],["makedirs","Sys","Ruby/classes/Sys.html#method-i-makedirs","(*dirs)","<p>Make the directories given in <code>dirs</code>.\n",null,0],["maker_target","RSS::Atom::ContentModel","Ruby/classes/RSS/Atom/ContentModel.html#method-i-maker_target","(target)","",null,0],["maker_target","RSS::Atom::Feed::Logo","Ruby/classes/RSS/Atom/Feed/Logo.html#method-i-maker_target","(target)","",null,0],["maker_target","RSS::Atom::PersonConstruct","Ruby/classes/RSS/Atom/PersonConstruct.html#method-i-maker_target","(target)","",null,0],["maker_target","RSS::TaxonomyTopicModel::TaxonomyTopic","Ruby/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html#method-i-maker_target","(target)","",null,0],["maker_target","RSS::TaxonomyTopicsModel::TaxonomyTopics","Ruby/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-i-maker_target","(target)","",null,0],["makers","RSS::Maker","Ruby/classes/RSS/Maker.html#method-i-makers","()","<p>Returns collection of supported makers\n",null,0],["malloc","DL","Ruby/classes/DL.html#method-c-malloc","(p1)","<p>Allocate <code>size</code> bytes of memory and return the integer memory\naddress for the allocated memory.\n",null,0],["malloc","DL::CPtr","Ruby/classes/DL/CPtr.html#method-c-malloc","(p1, p2 = v2)","<p>Allocate <code>size</code> bytes of memory and associate it with an\noptional <code>freefunc</code> that will be called when the …\n",null,0],["malloc","DL::CStructEntity","Ruby/classes/DL/CStructEntity.html#method-c-malloc","(types, func = nil)","<p>Allocates a C struct the <code>types</code> provided.  The C function\n<code>func</code> is called when the instance is garbage …\n",null,0],["malloc","DL::CUnionEntity","Ruby/classes/DL/CUnionEntity.html#method-c-malloc","(types, func=nil)","<p>Allocates a C union the <code>types</code> provided.  The C function\n<code>func</code> is called when the instance is garbage collected. …\n",null,0],["malloc","Fiddle","Ruby/classes/Fiddle.html#method-c-malloc","(p1)","<p>Allocate <code>size</code> bytes of memory and return the integer memory\naddress for the allocated memory.\n",null,0],["malloc","Fiddle::CStructEntity","Ruby/classes/Fiddle/CStructEntity.html#method-c-malloc","(types, func = nil)","<p>Allocates a C struct with the <code>types</code> provided.\n<p>When the instance is garbage collected, the C function  …\n",null,0],["malloc","Fiddle::CUnionEntity","Ruby/classes/Fiddle/CUnionEntity.html#method-c-malloc","(types, func=nil)","<p>Allocates a C union the <code>types</code> provided.\n<p>When the instance is garbage collected, the C function <code>func</code> is\n…\n",null,0],["malloc","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-c-malloc","(p1, p2 = v2)","<p>Allocate <code>size</code> bytes of memory and associate it with an\noptional <code>freefunc</code> that will be called when the …\n",null,0],["malloc_allocated_size","GC","Ruby/classes/GC.html#method-c-malloc_allocated_size","()","<p>Returns the size of memory allocated by malloc().\n<p>Only available if ruby was built with <code>CALC_EXACT_MALLOC_SIZE</code> …\n",null,0],["malloc_allocations","GC","Ruby/classes/GC.html#method-c-malloc_allocations","()","<p>Returns the number of malloc() allocations.\n<p>Only available if ruby was built with <code>CALC_EXACT_MALLOC_SIZE</code> …\n",null,0],["manage_owners","Gem::Commands::OwnerCommand","Ruby/classes/Gem/Commands/OwnerCommand.html#method-i-manage_owners","(method, name, owners)","",null,0],["many?","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-many-3F","(&block)","<p>Returns true if the collection has more than one record. Equivalent to\n<code>collection.size &gt; 1</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["many?","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-many-3F","()","<p>Returns true if there is more than one record.\n",null,1],["many?","Enumerable","Rails/classes/Enumerable.html#method-i-many-3F","()","<p>Returns <code>true</code> if the enumerable has more than 1 element.\nFunctionally equivalent to <code>enum.to_a.size &gt;</code> …\n",null,1],["map","Array","Ruby/classes/Array.html#method-i-map","()","<p>Invokes the given block once for each element of <code>self</code>.\n<p>Creates a new array containing the values returned …\n",null,0],["map","Enumerable","Ruby/classes/Enumerable.html#method-i-map","()","<p>Returns a new array with the results of running <em>block</em> once for\nevery element in <em>enum</em>.\n<p>If no block is given, …\n",null,0],["map","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-map","()","",null,0],["map","Matrix","Ruby/classes/Matrix.html#method-i-map","()","",null,0],["map","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-map","(tag = @tag, style = @style)","<p>Emit a map.  The coder will be yielded to the block.\n",null,0],["map","Vector","Ruby/classes/Vector.html#method-i-map","()","",null,0],["map!","Array","Ruby/classes/Array.html#method-i-map-21","()","<p>Invokes the given block once for each element of <code>self</code>,\nreplacing the element with the value returned …\n",null,0],["map!","Set","Ruby/classes/Set.html#method-i-map-21","()","",null,0],["map2","Vector","Ruby/classes/Vector.html#method-i-map2","(v)","<p>Like Vector#collect2, but returns a Vector instead of an Array.\n",null,0],["map=","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-map-3D","(map)","<p>Emit a map with <code>value</code>\n",null,0],["map_gems_to_specs","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-map_gems_to_specs","(gems)","",null,0],["mark_for_destruction","ActiveRecord::AutosaveAssociation","Rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-mark_for_destruction","()","<p>Marks this record to be destroyed as part of the parents save transaction.\nThis does <em>not</em> actually destroy …\n",null,1],["mark_version","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-mark_version","()","<p>Sets the rubygems_version to the current RubyGems version.\n",null,0],["marked_for_destruction?","ActiveRecord::AutosaveAssociation","Rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-marked_for_destruction-3F","()","<p>Returns whether or not this record will be destroyed as part of the parents\nsave transaction.\n<p>Only useful …\n",null,1],["markup","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-markup","(text)","<p>Convert a string in markup format into HTML.\n<p>Requires the including class to implement #formatter\n",null,0],["markup_code","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-markup_code","()","<p>Turns the method&#39;s token stream into HTML.\n<p>Prepends line numbers if <code>add_line_numbers</code> is true.\n",null,0],["marshal_dump","Delegator","Ruby/classes/Delegator.html#method-i-marshal_dump","()","<p>Serialization support for the object returned by _<em>getobj</em>_.\n",null,0],["marshal_dump","Gem::Version","Ruby/classes/Gem/Version.html#method-i-marshal_dump","()","<p>Dump only the raw version string, not the complete object. It&#39;s a\nstring for backwards (RubyGems …\n",null,0],["marshal_dump","OpenStruct","Ruby/classes/OpenStruct.html#method-i-marshal_dump","()","<p>Provides marshalling support for use by the Marshal library.\n",null,0],["marshal_dump","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-i-marshal_dump","()","<p>Dumps this AnyMethod for use by ri.  See also #marshal_load\n",null,0],["marshal_dump","RDoc::Attr","Ruby/classes/RDoc/Attr.html#method-i-marshal_dump","()","<p>Dumps this Attr for use by ri.  See also #marshal_load\n",null,0],["marshal_dump","RDoc::Constant","Ruby/classes/RDoc/Constant.html#method-i-marshal_dump","()","<p>Dumps this Constant for use by ri.  See also #marshal_load\n",null,0],["marshal_dump","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-marshal_dump","()","<p>Serializes this Section.  The title and parsed comment are saved, but not\nthe section parent which must …\n",null,0],["marshal_dump","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-marshal_dump","()","<p>Dumps this TopLevel for use by ri.  See also #marshal_load\n",null,0],["marshal_dump","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-marshal_dump","()","",null,1],["marshal_dump","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-marshal_dump","()","",null,1],["marshal_load","Delegator","Ruby/classes/Delegator.html#method-i-marshal_load","(data)","<p>Reinitializes delegation from a serialized object.\n",null,0],["marshal_load","Gem::Version","Ruby/classes/Gem/Version.html#method-i-marshal_load","(array)","<p>Load custom marshal format. It&#39;s a string for backwards (RubyGems 1.3.5\nand earlier) compatibility. …\n",null,0],["marshal_load","OpenStruct","Ruby/classes/OpenStruct.html#method-i-marshal_load","(x)","<p>Provides marshalling support for use by the Marshal library.\n",null,0],["marshal_load","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-i-marshal_load","(array)","<p>Loads this AnyMethod from <code>array</code>.  For a loaded AnyMethod the\nfollowing methods will return cached values: …\n",null,0],["marshal_load","RDoc::Attr","Ruby/classes/RDoc/Attr.html#method-i-marshal_load","(array)","<p>Loads this Attr from <code>array</code>.  For a loaded Attr the following\nmethods will return cached values:\n<p>#full_name …\n",null,0],["marshal_load","RDoc::Constant","Ruby/classes/RDoc/Constant.html#method-i-marshal_load","(array)","<p>Loads this Constant from <code>array</code>.  For a loaded Constant the\nfollowing methods will return cached values: …\n",null,0],["marshal_load","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-marshal_load","(array)","<p>De-serializes this Section.  The section parent must be restored manually.\n",null,0],["marshal_load","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-marshal_load","(array)","",null,1],["marshal_load","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-marshal_load","(variables)","",null,1],["marshal_version","Gem","Ruby/classes/Gem.html#method-c-marshal_version","()","<p>The version of the Marshal format for your Ruby.\n",null,0],["mask","IPAddr","Ruby/classes/IPAddr.html#method-i-mask","(prefixlen)","<p>Returns a new ipaddr built by masking IP address with the given\nprefixlen/netmask. (e.g. 8, 64, “255.255.255.0”, …\n",null,0],["mask","Syslog","Ruby/classes/Syslog.html#method-c-mask","()","<p>Returns the log priority mask in effect. The mask is not reset by opening\nor closing syslog.\n",null,0],["mask!","IPAddr","Ruby/classes/IPAddr.html#method-i-mask-21","(mask)","<p>Set current netmask to given mask.\n",null,0],["mask=","Syslog","Ruby/classes/Syslog.html#method-c-mask-3D","(p1)","<p>Sets the log priority mask. A method LOG_UPTO is defined to make it easier\nto set mask values. Example: …\n",null,0],["mask_protected_sequences","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-mask_protected_sequences","()","<p>Escapes special sequences of text to prevent conversion to RDoc\n",null,0],["match","ACL::ACLEntry","Ruby/classes/ACL/ACLEntry.html#method-i-match","(addr)","<p>Matches <code>addr</code> against this entry.\n",null,0],["match","ACL::ACLList","Ruby/classes/ACL/ACLList.html#method-i-match","(addr)","<p>Matches <code>addr</code> against each ACLEntry in this list.\n",null,0],["match","Gem::Platform","Ruby/classes/Gem/Platform.html#method-c-match","(platform)","",null,0],["match","OptionParser::CompletingHash","Ruby/classes/OptionParser/CompletingHash.html#method-i-match","(key)","<p>Completion for hash key.\n",null,0],["match","REXML::IOSource","Ruby/classes/REXML/IOSource.html#method-i-match","( pattern, cons=false )","",null,0],["match","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-match","(element, path, namespaces=EMPTY_HASH)","",null,0],["match","REXML::Source","Ruby/classes/REXML/Source.html#method-i-match","(pattern, cons=false)","",null,0],["match","REXML::XPath","Ruby/classes/REXML/XPath.html#method-c-match","(element, path=nil, namespaces=nil, variables={})","<p>Returns an array of nodes matching a given XPath.\n",null,0],["match","REXML::XPathParser","Ruby/classes/REXML/XPathParser.html#method-i-match","( path_stack, nodeset )","",null,0],["match","Regexp","Ruby/classes/Regexp.html#method-i-match","(p1, p2 = v2)","<p>Returns a <code>MatchData</code> object describing the match, or\n<code>nil</code> if there was no match. This is equivalent to …\n",null,0],["match","Rinda::Template","Ruby/classes/Rinda/Template.html#method-i-match","(tuple)","<p>Matches this template against <code>tuple</code>.  The <code>tuple</code>\nmust be the same size as the template.  An element with …\n",null,0],["match","Rinda::TemplateEntry","Ruby/classes/Rinda/TemplateEntry.html#method-i-match","(tuple)","<p>Matches this TemplateEntry against <code>tuple</code>.  See Template#match\nfor details on how a Template matches a …\n",null,0],["match","String","Ruby/classes/String.html#method-i-match","(*args)","<p>Converts <em>pattern</em> to a <code>Regexp</code> (if it isn&#39;t already\none), then invokes its <code>match</code> method on <em>str</em>.  If …\n",null,0],["match","Symbol","Ruby/classes/Symbol.html#method-i-match","(p1)","<p>Returns <code>sym.to_s =~ obj</code>.\n",null,0],["match","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-match","(path, options=nil)","<p>Matches a url pattern to one or more routes. Any symbols in a pattern are\ninterpreted as url query parameters …\n",null,1],["match","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-match","(path, *rest)","<p>match &#39;path&#39; =&gt; &#39;controller#action&#39; match\n&#39;path&#39;, to: &#39;controller#action …\n",null,1],["match","ActiveRecord::DynamicMatchers::Method","Rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-c-match","(model, name)","",null,1],["match","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-match","(element, first_only = false)","<p>Matches an element against the selector.\n<p>For a simple selector this method returns an array with the element …\n",null,1],["match?","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-match-3F","(obj, version=nil)","<p>DOC: this method needs either documented or :nodoc&#39;d\n",null,0],["match?","StringScanner","Ruby/classes/StringScanner.html#method-i-match-3F","(p1)","<p>Tests whether the given <code>pattern</code> is matched from the current\nscan pointer. Returns the length of the match, …\n",null,0],["match?","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-i-match-3F","(path)","",null,1],["match_platform!","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-match_platform-21","()","",null,0],["match_platform?","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-i-match_platform-3F","()","<p>Indicate if this NameTuple matches the current platform.\n",null,0],["match_to","REXML::Source","Ruby/classes/REXML/Source.html#method-i-match_to","( char, pattern )","",null,0],["match_to_consume","REXML::Source","Ruby/classes/REXML/Source.html#method-i-match_to_consume","( char, pattern )","",null,0],["matched","StringScanner","Ruby/classes/StringScanner.html#method-i-matched","()","<p>Returns the last matched string.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;)\ns.match?(/\\w+/)     # -&gt; 4\ns.matched ...</code></pre>\n",null,0],["matched?","StringScanner","Ruby/classes/StringScanner.html#method-i-matched-3F","()","<p>Returns <code>true</code> iff the last match was successful.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;)\ns.match?(/\\w+/)  ...</code></pre>\n",null,0],["matched_size","StringScanner","Ruby/classes/StringScanner.html#method-i-matched_size","()","<p>Returns the size of the most recent match (see #matched), or\n<code>nil</code> if there was no recent match.\n\n<pre><code>s = StringScanner.new(&#39;test ...</code></pre>\n",null,0],["matches?","REXML::Entity","Ruby/classes/REXML/Entity.html#method-c-matches-3F","(string)","<p>Evaluates whether the given string matchs an entity definition, returning\ntrue if so, and false otherwise. …\n",null,0],["matches?","REXML::Validation::Choice","Ruby/classes/REXML/Validation/Choice.html#method-i-matches-3F","( event )","",null,0],["matches?","REXML::Validation::Event","Ruby/classes/REXML/Validation/Event.html#method-i-matches-3F","( event )","",null,0],["matches?","REXML::Validation::Interleave","Ruby/classes/REXML/Validation/Interleave.html#method-i-matches-3F","( event )","",null,0],["matches?","REXML::Validation::OneOrMore","Ruby/classes/REXML/Validation/OneOrMore.html#method-i-matches-3F","( event )","",null,0],["matches?","REXML::Validation::Optional","Ruby/classes/REXML/Validation/Optional.html#method-i-matches-3F","(event)","",null,0],["matches?","REXML::Validation::Sequence","Ruby/classes/REXML/Validation/Sequence.html#method-i-matches-3F","(event)","",null,0],["matches_for_glob","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-matches_for_glob","(glob)","<p>Return all files in this gem that match for <code>glob</code>.\n",null,0],["matches_spec?","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-matches_spec-3F","(spec)","<p>DOC: this method needs either documented or :nodoc&#39;d\n",null,0],["matches_spec?","Gem::DependencyResolver::DependencyRequest","Ruby/classes/Gem/DependencyResolver/DependencyRequest.html#method-i-matches_spec-3F","(spec)","",null,0],["matching_specs","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-matching_specs","(platform_only = false)","<p>DOC: this method needs either documented or :nodoc&#39;d\n",null,0],["math_mode=","IRB::Context","Ruby/classes/IRB/Context.html#method-i-math_mode-3D","(opt)","<p>Sets bc mode, which loads <code>lib/mathn.rb</code> so fractions or matrix\nare available.\n<p>Also available as the <code>-m</code> …\n",null,0],["mattr_accessor","Module","Rails/classes/Module.html#method-i-mattr_accessor","(*syms)","<p>Extends the module object with module and instance accessors for class\nattributes, just like the native …\n",null,1],["mattr_reader","Module","Rails/classes/Module.html#method-i-mattr_reader","(*syms)","",null,1],["mattr_writer","Module","Rails/classes/Module.html#method-i-mattr_writer","(*syms)","",null,1],["max","Enumerable","Ruby/classes/Enumerable.html#method-i-max","()","<p>Returns the object in <em>enum</em> with the maximum value. The first form\nassumes all objects implement <code>Comparable</code> …\n",null,0],["max","Range","Ruby/classes/Range.html#method-i-max","()","<p>Returns the maximum value in the range. Returns <code>nil</code> if the\nbegin value of the range larger than the end …\n",null,0],["max","SizedQueue","Ruby/classes/SizedQueue.html#method-i-max","()","<p>Returns the maximum size of the queue.\n",null,0],["max=","SizedQueue","Ruby/classes/SizedQueue.html#method-i-max-3D","(max)","<p>Sets the maximum size of the queue.\n",null,0],["max_by","Enumerable","Ruby/classes/Enumerable.html#method-i-max_by","()","<p>Returns the object in <em>enum</em> that gives the maximum value from the\ngiven block.\n<p>If no block is given, an …\n",null,0],["max_flag_count","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-max_flag_count","()","<p>Returns the max number of flags interned to symbols.\n",null,0],["max_flag_count=","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-max_flag_count-3D","(count)","<p>Sets the max number of flags interned to symbols.\n",null,0],["maxgroups","Process","Ruby/classes/Process.html#method-c-maxgroups","()","<p>Returns the maximum number of gids allowed in the supplemental group access\nlist.\n\n<pre><code>Process.maxgroups   ...</code></pre>\n",null,0],["maxgroups=","Process","Ruby/classes/Process.html#method-c-maxgroups-3D","(p1)","<p>Sets the maximum number of gids allowed in the supplemental group access\nlist.\n",null,0],["maximum","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-maximum","(column_name, options = {})","<p>Calculates the maximum value on a given column. The value is returned with\nthe same data type of the …\n",null,1],["maxx","Curses::Window","Ruby/classes/Curses/Window.html#method-i-maxx","()","<p>A getter for the maximum columns for the window\n",null,0],["maxy","Curses::Window","Ruby/classes/Curses/Window.html#method-i-maxy","()","<p>A getter for the maximum lines for the window\n",null,0],["mb_chars","String","Rails/classes/String.html#method-i-mb_chars","()","<p>Multibyte proxy\n<p><code>mb_chars</code> is a multibyte safe proxy for string methods.\n<p>It creates and returns an instance …\n",null,1],["mday","Date","Ruby/classes/Date.html#method-i-mday","()","<p>Returns the day of the month (1-31).\n\n<pre><code>Date.new(2001,2,3).mday           #=&gt; 3\n</code></pre>\n",null,0],["mday","Time","Ruby/classes/Time.html#method-i-mday","()","<p>Returns the day of the month (1..n) for <em>time</em>.\n\n<pre><code>t = Time.now   #=&gt; 2007-11-19 08:27:03 -0600\nt.day      ...\n</code></pre>\n",null,0],["mdtm","Net::FTP","Ruby/classes/Net/FTP.html#method-i-mdtm","(filename)","<p>Issues the MDTM command.  TODO: more info.\n",null,0],["measure","Benchmark","Ruby/classes/Benchmark.html#method-c-measure","(label = \"\")","<p>Returns the time used to execute the given block as a Benchmark::Tms\nobject.\n",null,0],["media_subtype","Net::IMAP::BodyTypeBasic","Ruby/classes/Net/IMAP/BodyTypeBasic.html#method-i-media_subtype","()","<p>Obsolete: use <code>subtype</code> instead.  Calling this will generate a\nwarning message to <code>stderr</code>, then return the …\n",null,0],["media_subtype","Net::IMAP::BodyTypeMessage","Ruby/classes/Net/IMAP/BodyTypeMessage.html#method-i-media_subtype","()","<p>Obsolete: use <code>subtype</code> instead.  Calling this will generate a\nwarning message to <code>stderr</code>, then return the …\n",null,0],["media_subtype","Net::IMAP::BodyTypeMultipart","Ruby/classes/Net/IMAP/BodyTypeMultipart.html#method-i-media_subtype","()","<p>Obsolete: use <code>subtype</code> instead.  Calling this will generate a\nwarning message to <code>stderr</code>, then return the …\n",null,0],["media_subtype","Net::IMAP::BodyTypeText","Ruby/classes/Net/IMAP/BodyTypeText.html#method-i-media_subtype","()","<p>Obsolete: use <code>subtype</code> instead.  Calling this will generate a\nwarning message to <code>stderr</code>, then return the …\n",null,0],["media_type","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-media_type","()","<p>The <code>String</code> MIME type of the request.\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># get &quot;/articles&quot;</span>\n<span class=\"ruby-identifier\">request</span>.<span class=\"ruby-identifier\">media_type</span> <span class=\"ruby-comment\"># =&gt; &quot;application/x-www-form-urlencoded&quot;</span>\n</pre>\n",null,1],["megabyte","Numeric","Rails/classes/Numeric.html#method-i-megabyte","()","",null,1],["megabytes","Numeric","Rails/classes/Numeric.html#method-i-megabytes","()","",null,1],["member","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-member","()","<p>To add a member route, add a member block into the resource block:\n\n<pre>resources :photos do\n  member do\n  ...</pre>\n",null,1],["member?","CSV::Row","Ruby/classes/CSV/Row.html#method-i-member-3F","(header)","",null,0],["member?","DBM","Ruby/classes/DBM.html#method-i-member-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n",null,0],["member?","ENV","Ruby/classes/ENV.html#method-c-member-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,0],["member?","Enumerable","Ruby/classes/Enumerable.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if any member of <em>enum</em> equals\n<em>obj</em>. Equality is tested using <code>==</code>.\n\n<pre><code>IO.constants.include? :SEEK_SET ...</code></pre>\n",null,0],["member?","GDBM","Ruby/classes/GDBM.html#method-i-member-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n",null,0],["member?","Hash","Ruby/classes/Hash.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200 }\nh.has_key?(&quot;a&quot;)   #=&gt; ...\n</code></pre>\n",null,0],["member?","Rake::InvocationChain","Ruby/classes/Rake/InvocationChain.html#method-i-member-3F","(obj)","",null,0],["member?","Rake::InvocationChain::EmptyInvocationChain","Ruby/classes/Rake/InvocationChain/EmptyInvocationChain.html#method-i-member-3F","(obj)","",null,0],["member?","Range","Ruby/classes/Range.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if <code>obj</code> is an element of the range,\n<code>false</code> otherwise.  If begin and end are numeric, comparison …\n",null,0],["member?","SDBM","Ruby/classes/SDBM.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if the database contains the given\n<code>key</code>.\n",null,0],["member?","Set","Ruby/classes/Set.html#method-i-member-3F","(o)","",null,0],["members","Struct","Ruby/classes/Struct.html#method-i-members","()","<p>Returns an array of symbols representing the names of the instance\nvariables.\n\n<pre><code>Customer = Struct.new(:name, ...</code></pre>\n",null,0],["members","WEBrick::HTTPAuth::Htgroup","Ruby/classes/WEBrick/HTTPAuth/Htgroup.html#method-i-members","(group)","<p>Retrieve the list of members from <code>group</code>\n",null,0],["memberwise","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-i-memberwise","(op, x)","<p>Returns a new Tms object obtained by memberwise operation <code>op</code>\nof the individual times for this Tms object …\n",null,0],["merge","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-merge","(other)","<p>Merges the requirements of <code>other</code> into this dependency\n",null,0],["merge","Hash","Ruby/classes/Hash.html#method-i-merge","(p1)","<p>Returns a new hash containing the contents of <em>other_hash</em> and the\ncontents of <em>hsh</em>. If no block is specified, …\n",null,0],["merge","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-merge","(class_module)","<p>Merges <code>class_module</code> into this ClassModule.\n<p>The data in <code>class_module</code> is preferred over the receiver.\n",null,0],["merge","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-i-merge","(other)","<p>When this is a collection of documents (#file is not set and this document\ncontains only other documents …\n",null,0],["merge","RDoc::Markup::Raw","Ruby/classes/RDoc/Markup/Raw.html#method-i-merge","(other)","<p>Appends <code>other</code>&#39;s parts\n",null,0],["merge","Set","Ruby/classes/Set.html#method-i-merge","(enum)","<p>Merges the elements of the given enumerable object to the set and returns\nself.\n",null,0],["merge","URI::Generic","Ruby/classes/URI/Generic.html#method-i-merge","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,0],["merge","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-i-merge","(headers_or_env)","",null,1],["merge","ActiveRecord::SpawnMethods","Rails/classes/ActiveRecord/SpawnMethods.html#method-i-merge","(other)","<p>Merges in the conditions from <code>other</code>, if <code>other</code> is\nan <code>ActiveRecord::Relation</code>. Returns an array representing …\n",null,1],["merge","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge","(hash, &block)","<p>This method has the same semantics of <code>update</code>, except it does\nnot modify the receiver but rather returns …\n",null,1],["merge","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge","(hash, &block)","<p>This method has the same semantics of <code>update</code>, except it does\nnot modify the receiver but rather returns …\n",null,1],["merge!","Hash","Ruby/classes/Hash.html#method-i-merge-21","(p1)","<p>Adds the contents of <em>other_hash</em> to <em>hsh</em>.  If no block is\nspecified, entries with duplicate keys are overwritten …\n",null,0],["merge!","URI::Generic","Ruby/classes/URI/Generic.html#method-i-merge-21","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,0],["merge!","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-i-merge-21","(headers_or_env)","",null,1],["merge_options","Gem::Command","Ruby/classes/Gem/Command.html#method-i-merge_options","(new_options)","<p>Merge a set of command options with the set of default options (without\nmodifying the default option …\n",null,0],["merged?","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-i-merged-3F","()","<p>Does this Document contain other Documents?\n",null,0],["message","Exception","Ruby/classes/Exception.html#method-i-message","()","<p>Returns the result of invoking <code>exception.to_s</code>. Normally this\nreturns the exception&#39;s message or name. …\n",null,0],["message","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-c-message","(klass, exp)","",null,0],["message","Exception2MessageMapper","Ruby/classes/Exception2MessageMapper.html#method-c-message","(klass, exp)","",null,0],["message","Net::SMTP::Response","Ruby/classes/Net/SMTP/Response.html#method-i-message","()","<p>The first line of the human readable reply text\n",null,0],["message","OptionParser::ParseError","Ruby/classes/OptionParser/ParseError.html#method-i-message","()","<p>Default stringizing method to emit standard error message.\n",null,0],["message","Rake::RuleRecursionOverflowError","Ruby/classes/Rake/RuleRecursionOverflowError.html#method-i-message","()","",null,0],["message","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-message","()","<p>Returns the corresponding message for the current HTTP status code:\n\n<pre>response.status = 200\nresponse.message ...</pre>\n",null,1],["message","ActionMailer::MailHelper","Rails/classes/ActionMailer/MailHelper.html#method-i-message","()","<p>Access the message instance.\n",null,1],["message_loop","WIN32OLE_EVENT","Ruby/classes/WIN32OLE_EVENT.html#method-c-message_loop","()","<p>Translates and dispatches Windows message.\n",null,0],["meta_vars","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-meta_vars","()","<p>This method provides the metavariables defined by the revision 3 of “The\nWWW Common Gateway Interface …\n",null,0],["method","Object","Ruby/classes/Object.html#method-i-method","(p1)","<p>Looks up the named method as a receiver in <em>obj</em>, returning a\n<code>Method</code> object (or raising <code>NameError</code>). The …\n",null,0],["method","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-method","()","<p>Returns the original value of the environment&#39;s REQUEST_METHOD, even if\nit was overridden by middleware. …\n",null,1],["methodCall","XMLRPC::Create","Ruby/classes/XMLRPC/Create.html#method-i-methodCall","(name, *params)","",null,0],["methodResponse","XMLRPC::Create","Ruby/classes/XMLRPC/Create.html#method-i-methodResponse","(is_ret, *params)","<p>Generates a XML-RPC methodResponse document\n<p>When <code>is_ret</code> is <code>false</code> then the <code>params</code>\narray must contain only …\n",null,0],["method_added","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-c-method_added","(id)","",null,0],["method_added","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-method_added","(name)","<p>Refresh the cached action_methods when a new action_method is added.\n",null,1],["method_defined?","Module","Ruby/classes/Module.html#method-i-method_defined-3F","(p1)","<p>Returns <code>true</code> if the named method is defined by <em>mod</em>\n(or its included modules and, if <em>mod</em> is a class, its …\n",null,0],["method_document","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-method_document","(name, filtered)","<p>Builds a RDoc::Markup::Document from <code>found</code>,\n<code>klasses</code> and <code>includes</code>\n",null,0],["method_file","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-method_file","(klass_name, method_name)","<p>Path to the ri data for <code>method_name</code> in <code>klass_name</code>\n",null,0],["method_for_action","ActionController::ImplicitRender","Rails/classes/ActionController/ImplicitRender.html#method-i-method_for_action","(action_name)","",null,1],["method_id","TracePoint","Ruby/classes/TracePoint.html#method-i-method_id","()","<p>Return the name of the method being called\n",null,0],["method_missing","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-i-method_missing","(msg_id, *a, &b)","<p>Routes method calls to the referenced remote object.\n",null,0],["method_missing","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-i-method_missing","(msg_id, *a, &b)","<p>Routes method calls to the referenced remote object.\n",null,0],["method_missing","Delegator","Ruby/classes/Delegator.html#method-i-method_missing","(m, *args, &block)","<p>Handles the magic of delegation through _<em>getobj</em>_.\n",null,0],["method_missing","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-method_missing","( id )","",null,0],["method_missing","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-method_missing","( id, *args )","",null,0],["method_missing","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-i-method_missing","(sym, *args)","",null,0],["method_missing","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-method_missing","(*args)","<p>Calls WIN32OLE#invoke method.\n",null,0],["method_missing","XMLRPC::Client::Proxy","Ruby/classes/XMLRPC/Client/Proxy.html#method-i-method_missing","(mid, *args)","<p>Every method call is forwarded to the XML-RPC server defined in\nXMLRPC::Client::Proxy#new.\n<p>Note: Inherited …\n",null,0],["method_missing","XMLRPC::XMLParser::REXMLStreamParser::StreamListener","Ruby/classes/XMLRPC/XMLParser/REXMLStreamParser/StreamListener.html#method-i-method_missing","(*a)","",null,0],["method_missing","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-method_missing","(*a)","",null,0],["method_missing","AbstractController::Collector","Rails/classes/AbstractController/Collector.html#method-i-method_missing","(symbol, &block)","",null,1],["method_missing","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-method_missing","(method_name, *args)","",null,1],["method_missing","ActiveModel::AttributeMethods","Rails/classes/ActiveModel/AttributeMethods.html#method-i-method_missing","(method, *args, &block)","<p>Allows access to the object attributes, which are held in the hash returned\nby <code>attributes</code>, as though …\n",null,1],["method_missing","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-method_missing","(method, *arguments, &block)","",null,1],["method_missing","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-method_missing","(method, *args, &block)","<p>Forward all undefined methods to the wrapped string.\n",null,1],["method_missing","ActiveSupport::OrderedOptions","Rails/classes/ActiveSupport/OrderedOptions.html#method-i-method_missing","(name, *args)","",null,1],["method_missing","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-method_missing","(sym, *args, &block)","<p>Send the missing method to <code>time</code> instance, and wrap result in a\nnew TimeWithZone with the existing <code>time_zone</code> …\n",null,1],["method_missing","Rails::Railtie::Configurable::ClassMethods","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-method_missing","(*args, &block)","",null,1],["method_symbol","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-method_symbol","()","<p>Returns a symbol form of the #method\n",null,1],["method_type","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-method_type","(selector)","<p>Returns the type of method (:both, :instance, :class) for\n<code>selector</code>\n",null,0],["methods","","Ruby/files/ruby/doc/syntax/methods_rdoc.html","","<p>Methods\n<p>Methods implement the functionality of your program.  Here is a simple\nmethod definition:\n\n<pre><code>def one_plus_one ...\n</code></pre>\n",null,0],["methods","Delegator","Ruby/classes/Delegator.html#method-i-methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this\nobject&#39;s and _<em>getobj</em> …\n",null,0],["methods","Object","Ruby/classes/Object.html#method-i-methods","(p1)","<p>Returns a list of the names of public and protected methods of\n<em>obj</em>. This will include all the methods …\n",null,0],["methods_by_type","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-methods_by_type","(section = nil)","<p>Breaks method_list into a nested hash by type (<code>&#39;class&#39;</code>\nor <code>&#39;instance&#39;</code>) and visibility …\n",null,0],["methods_matching","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-methods_matching","(methods, singleton = false, &block)","<p>Yields AnyMethod and Attr entries matching the list of names in\n<code>methods</code>.\n",null,0],["middleware","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-middleware","()","<p>Alias for <code>middleware_stack</code>.\n",null,1],["middleware","ActiveSupport::Cache::Strategy::LocalCache","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache.html#method-i-middleware","()","<p>Middleware class can be inserted as a Rack handler to be local cache for\nthe duration of request.\n",null,1],["middleware","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-middleware","()","<p>Returns the middleware stack for the engine.\n",null,1],["middleware","Rails::Server","Rails/classes/Rails/Server.html#method-i-middleware","()","",null,1],["midnight","Date","Rails/classes/Date.html#method-i-midnight","()","",null,1],["midnight","DateTime","Rails/classes/DateTime.html#method-i-midnight","()","",null,1],["midnight","Time","Rails/classes/Time.html#method-i-midnight","()","",null,1],["migrate","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-c-migrate","(direction)","",null,1],["migrate","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-migrate","(direction)","<p>Execute this migration in the named direction\n",null,1],["migration_keys","ActiveRecord::ConnectionAdapters::ColumnDumper","Rails/classes/ActiveRecord/ConnectionAdapters/ColumnDumper.html#method-i-migration_keys","()","<p>Lists the valid migration options\n",null,1],["migration_keys","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-migration_keys","()","<p>Adds `:array` as a valid migration key\n",null,1],["migration_template","Rails::Generators::Migration","Rails/classes/Rails/Generators/Migration.html#method-i-migration_template","(source, destination=nil, config={})","<p>Creates a migration template at the given destination. The difference to\nthe default template method …\n",null,1],["migrations_paths","ActiveRecord::Schema","Rails/classes/ActiveRecord/Schema.html#method-i-migrations_paths","()","<p>Returns the migrations paths.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Schema</span>.<span class=\"ruby-identifier\">new</span>.<span class=\"ruby-identifier\">migrations_paths</span>\n<span class=\"ruby-comment\"># =&gt; [&quot;db/migrate&quot;] # Rails migration ...</span>\n</pre>\n",null,1],["mime_split","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-mime_split","()","",null,0],["mime_type","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-mime_type","(filename, mime_tab)","<p>Returns the mime type of <code>filename</code> from the list in\n<code>mime_tab</code>.  If no mime type was found application/octet-stream\n…\n",null,0],["mime_type","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-mime_type","()","",null,1],["min","Enumerable","Ruby/classes/Enumerable.html#method-i-min","()","<p>Returns the object in <em>enum</em> with the minimum value. The first form\nassumes all objects implement <code>Comparable</code> …\n",null,0],["min","Range","Ruby/classes/Range.html#method-i-min","()","<p>Returns the minimum value in the range. Returns <code>nil</code> if the\nbegin value of the range is larger than the …\n",null,0],["min","Time","Ruby/classes/Time.html#method-i-min","()","<p>Returns the minute of the hour (0..59) for <em>time</em>.\n\n<pre><code>t = Time.now   #=&gt; 2007-11-19 08:25:51 -0600\nt.min   ...\n</code></pre>\n",null,0],["min=","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-min-3D","(value)","<p>Set <code>value</code> as the new date/time component.\n<p>Raises an ArgumentError if the given <code>value</code> isn&#39;t between …\n",null,0],["min_by","Enumerable","Ruby/classes/Enumerable.html#method-i-min_by","()","<p>Returns the object in <em>enum</em> that gives the minimum value from the\ngiven block.\n<p>If no block is given, an …\n",null,0],["minimum","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-minimum","(column_name, options = {})","<p>Calculates the minimum value on a given column. The value is returned with\nthe same data type of the …\n",null,1],["minmax","Enumerable","Ruby/classes/Enumerable.html#method-i-minmax","()","<p>Returns two elements array which contains the minimum and the maximum value\nin the enumerable.  The first …\n",null,0],["minmax_by","Enumerable","Ruby/classes/Enumerable.html#method-i-minmax_by","()","<p>Returns a two element array containing the objects in <em>enum</em> that\ncorrespond to the minimum and maximum …\n",null,0],["minor","Matrix","Ruby/classes/Matrix.html#method-i-minor","(*param)","<p>Returns a section of the matrix.  The parameters are either:\n<p>start_row, nrows, start_col, ncols; OR\n<p>row_range …\n",null,0],["minor_version","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-minor_version","()","<p>Returns minor version.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Word 10.0 Object Library&#39;, &#39;Documents&#39;)\nputs ...</code></pre>\n",null,0],["minor_version","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-minor_version","()","<p>Returns the type library minor version.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;) ...</code></pre>\n",null,0],["minus_with_coercion","Time","Rails/classes/Time.html#method-i-minus_with_coercion","(other)","<p>Time#- can also be used to determine the number of seconds between two Time\ninstances. We&#39;re layering …\n",null,1],["minus_without_coercion","Time","Rails/classes/Time.html#method-i-minus_without_coercion","(other)","",null,1],["minus_without_duration","Time","Rails/classes/Time.html#method-i-minus_without_duration","(other)","",null,1],["minute","Numeric","Rails/classes/Numeric.html#method-i-minute","()","",null,1],["minute=","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-minute-3D","(minute)","",null,0],["minute=","RSS::Maker::ITunesItemModel::ITunesDurationBase","Ruby/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html#method-i-minute-3D","(minute)","",null,0],["minutes","Numeric","Rails/classes/Numeric.html#method-i-minutes","()","",null,1],["miscellaneous","","Ruby/files/ruby/doc/syntax/miscellaneous_rdoc.html","","<p>Miscellaneous Syntax\n<p>Ending an Expression\n<p>Ruby uses a newline as the end of an expression.  When ending …\n",null,0],["missing_name","NameError","Rails/classes/NameError.html#method-i-missing_name","()","<p>Extract the name of the missing constant from the exception message.\n",null,1],["missing_name?","NameError","Rails/classes/NameError.html#method-i-missing_name-3F","(name)","<p>Was this exception raised because the given name was missing?\n",null,1],["mjd","Date","Ruby/classes/Date.html#method-i-mjd","()","<p>Returns the modified Julian day number.  This is a whole number, which is\nadjusted by the offset as the …\n",null,0],["mkcol","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-mkcol","(path, body = nil, initheader = nil)","<p>Sends a MKCOL request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,0],["mkdir","Dir","Ruby/classes/Dir.html#method-c-mkdir","(p1, p2 = v2)","<p>Makes a new directory named by <em>string</em>, with permissions specified\nby the optional parameter <em>anInteger</em> …\n",null,0],["mkdir","FileUtils","Ruby/classes/FileUtils.html#method-c-mkdir","(list, options = {})","<p>Options: mode noop verbose\n<p>Creates one or more directories.\n\n<pre><code>FileUtils.mkdir &#39;test&#39;\nFileUtils.mkdir %w( ...</code></pre>\n",null,0],["mkdir","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-i-mkdir","(name, mode)","<p>Creates a new directory in the tar file <code>name</code> with\n<code>mode</code>\n",null,0],["mkdir","Net::FTP","Ruby/classes/Net/FTP.html#method-i-mkdir","(dirname)","<p>Creates a remote directory.\n",null,0],["mkdir","Object","Ruby/classes/Object.html#method-i-mkdir","()","<p>Create the DIR, if they do not already exist.\n\n<pre><code>ruby -run -e mkdir -- [OPTION] DIR\n\n-p          no error ...</code></pre>\n",null,0],["mkdir","Pathname","Ruby/classes/Pathname.html#method-i-mkdir","(p1 = v1)","<p>Create the referenced directory.\n<p>See Dir.mkdir.\n",null,0],["mkdir","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-mkdir","(*path)","<p>Same as Dir.mkdir, except multiple directories are allowed.\n",null,0],["mkdir_p","FileUtils","Ruby/classes/FileUtils.html#method-c-mkdir_p","(list, options = {})","<p>Options: mode noop verbose\n<p>Creates a directory and all its parent directories. For example,\n\n<pre><code>FileUtils.mkdir_p ...</code></pre>\n",null,0],["mkmf","Object","Ruby/classes/Object.html#method-i-mkmf","()","<p>Create makefile using mkmf.\n\n<pre><code>ruby -run -e mkmf -- [OPTION] EXTNAME [OPTION]\n\n-d ARGS     run dir_config ...</code></pre>\n",null,0],["mkpath","FileUtils","Ruby/classes/FileUtils.html#method-c-mkpath","(list, options = {})","",null,0],["mkpath","Pathname","Ruby/classes/Pathname.html#method-i-mkpath","()","<p>Creates a full path, including any intermediate directories that don&#39;t\nyet exist.\n<p>See FileUtils.mkpath …\n",null,0],["mktime","Time","Ruby/classes/Time.html#method-c-mktime","(*args)","<p>Same as Time::gm, but interprets the values in the local time zone.\n\n<pre><code>Time.local(2000,&quot;jan&quot;,1,20,15,1)  ...</code></pre>\n",null,0],["mktmpdir","Dir","Ruby/classes/Dir.html#method-c-mktmpdir","(prefix_suffix=nil, *rest)","<p>Dir.mktmpdir creates a temporary directory.\n<p>The directory is created with 0700 permission. Application …\n",null,0],["mode","BigDecimal","Ruby/classes/BigDecimal.html#method-c-mode","(p1, p2 = v2)","<p>Controls handling of arithmetic exceptions and rounding. If no value is\nsupplied, the current value is …\n",null,0],["mode","File::Stat","Ruby/classes/File/Stat.html#method-i-mode","()","<p>Returns an integer representing the permission bits of <em>stat</em>. The\nmeaning of the bits is platform dependent; …\n",null,0],["mode","Rake::FtpFile","Ruby/classes/Rake/FtpFile.html#method-i-mode","()","",null,0],["model_name","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-i-model_name","()","<p>Returns an ActiveModel::Name object for module. It can be used to retrieve\nall kinds of naming-related …\n",null,1],["model_name_from_record_or_class","ActionController::ModelNaming","Rails/classes/ActionController/ModelNaming.html#method-i-model_name_from_record_or_class","(record_or_class)","",null,1],["model_name_from_record_or_class","ActionView::ModelNaming","Rails/classes/ActionView/ModelNaming.html#method-i-model_name_from_record_or_class","(record_or_class)","",null,1],["models","RSS::Element","Ruby/classes/RSS/Element.html#method-i-models","()","",null,0],["modifiable","OpenStruct","Ruby/classes/OpenStruct.html#method-i-modifiable","()","<p>Used internally to check if the OpenStruct is able to be modified before\ngranting access to the internal …\n",null,0],["module","RDoc::Extend","Ruby/classes/RDoc/Extend.html#method-i-module","()","<p>Attempts to locate the extend module object.  Returns the name if not\nknown.\n<p>The scoping rules of Ruby …\n",null,0],["module","RDoc::Include","Ruby/classes/RDoc/Include.html#method-i-module","()","<p>Attempts to locate the included module object.  Returns the name if not\nknown.\n<p>The scoping rules of Ruby …\n",null,0],["module?","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-module-3F","()","<p>Does this object represent a module?\n",null,0],["module?","RDoc::NormalModule","Ruby/classes/RDoc/NormalModule.html#method-i-module-3F","()","<p>This is a module, returns true\n",null,0],["module_eval","Module","Ruby/classes/Module.html#method-i-module_eval","(*args)","<p>Evaluates the string or block in the context of <em>mod</em>, except that\nwhen a block is given, constant/class …\n",null,0],["module_exec","Module","Ruby/classes/Module.html#method-i-module_exec","(*args)","<p>Evaluates the given block in the context of the class/module. The method\ndefined in the block will belong …\n",null,0],["module_names","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-module_names","()","<p>Modules cache accessor.  An Array of all the module (and class) names in\nthe store.\n",null,0],["module_namespacing","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-module_namespacing","(&block)","<p>Wrap block with namespace of current application if namespace exists and is\nnot skipped\n",null,1],["modules","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-modules","()","<p>Array of modules in this context\n",null,0],["modules_and_classes","","Ruby/files/ruby/doc/syntax/modules_and_classes_rdoc.html","","<p>Modules\n<p>Modules serve two purposes in Ruby, namespacing and mix-in functionality.\n<p>A namespace can be used …\n",null,0],["modules_for_helpers","AbstractController::Helpers::ClassMethods","Rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-modules_for_helpers","(args)","<p>Returns a list of modules, normalized from the acceptable kinds of helpers\nwith the following behavior: …\n",null,1],["modules_for_helpers","ActionController::Helpers::ClassMethods","Rails/classes/ActionController/Helpers/ClassMethods.html#method-i-modules_for_helpers","(args)","<p>Overwrite modules_for_helpers to accept :all as argument, which loads all\nhelpers in helpers_path.\n<p>Parameters …\n",null,1],["modules_hash","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-modules_hash","()","<p>Hash of modules keyed by module name\n",null,0],["modules_hash","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-modules_hash","()","<p>Hash of all modules known to RDoc\n",null,0],["modulo","BigDecimal","Ruby/classes/BigDecimal.html#method-i-modulo","(p1)","<p>Returns the modulus from dividing by b.\n<p>See BigDecimal#divmod.\n",null,0],["modulo","Bignum","Ruby/classes/Bignum.html#method-i-modulo","(p1)","<p>Returns big modulo other. See Numeric.divmod for more information.\n",null,0],["modulo","Fixnum","Ruby/classes/Fixnum.html#method-i-modulo","(p1)","<p>Returns <code>fix</code> modulo <code>other</code>. See\n<code>numeric.divmod</code> for more information.\n",null,0],["modulo","Float","Ruby/classes/Float.html#method-i-modulo","(p1)","<p>Return the modulo after division of <code>float</code> by\n<code>other</code>.\n\n<pre><code>6543.21.modulo(137)      #=&gt; 104.21\n6543.21.modulo(137.24) ...\n</code></pre>\n",null,0],["modulo","Numeric","Ruby/classes/Numeric.html#method-i-modulo","(p1)","\n<pre><code>x.modulo(y) means x-y*(x/y).floor</code></pre>\n<p>Equivalent to <em>num.divmod(aNumeric)</em>.\n<p>See <code>Numeric#divmod</code>.\n",null,0],["mon","Date","Ruby/classes/Date.html#method-i-mon","()","<p>Returns the month (1-12).\n\n<pre><code>Date.new(2001,2,3).mon            #=&gt; 2\n</code></pre>\n",null,0],["mon","Time","Ruby/classes/Time.html#method-i-mon","()","<p>Returns the month of the year (1..12) for <em>time</em>.\n\n<pre><code>t = Time.now   #=&gt; 2007-11-19 08:27:30 -0600\nt.mon    ...\n</code></pre>\n",null,0],["mon=","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-mon-3D","(value)","<p>Alias for XMLRPC::DateTime#month=.\n",null,0],["mon_enter","MonitorMixin","Ruby/classes/MonitorMixin.html#method-i-mon_enter","()","<p>Enters exclusive section.\n",null,0],["mon_exit","MonitorMixin","Ruby/classes/MonitorMixin.html#method-i-mon_exit","()","<p>Leaves exclusive section.\n",null,0],["mon_synchronize","MonitorMixin","Ruby/classes/MonitorMixin.html#method-i-mon_synchronize","()","<p>Enters exclusive section and executes the block.  Leaves the exclusive\nsection automatically when the …\n",null,0],["mon_try_enter","MonitorMixin","Ruby/classes/MonitorMixin.html#method-i-mon_try_enter","()","<p>Attempts to enter exclusive section.  Returns <code>false</code> if lock\nfails.\n",null,0],["monday","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-monday","()","<p>Returns Monday of this week assuming that week starts on Monday.\n<code>DateTime</code> objects have their time set …\n",null,1],["monday?","Date","Ruby/classes/Date.html#method-i-monday-3F","()","<p>Returns true if the date is Monday.\n",null,0],["monday?","Time","Ruby/classes/Time.html#method-i-monday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Monday.\n\n<pre><code>t = Time.local(2003, 8, 4)       #=&gt; 2003-08-04 00:00:00 -0500 ...\n</code></pre>\n",null,0],["month","Date","Ruby/classes/Date.html#method-i-month","()","<p>Returns the month (1-12).\n\n<pre><code>Date.new(2001,2,3).mon            #=&gt; 2\n</code></pre>\n",null,0],["month","Time","Ruby/classes/Time.html#method-i-month","()","<p>Returns the month of the year (1..12) for <em>time</em>.\n\n<pre><code>t = Time.now   #=&gt; 2007-11-19 08:27:30 -0600\nt.mon    ...\n</code></pre>\n",null,0],["month","Integer","Rails/classes/Integer.html#method-i-month","()","",null,1],["month=","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-month-3D","(value)","<p>Set <code>value</code> as the new date/time component.\n<p>Raises an ArgumentError if the given <code>value</code> isn&#39;t between …\n",null,0],["month_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-month_field","(object_name, method, options = {})","<p>Returns a text_field of type “month”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">month_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;born_on&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_born_on&quot; ...</span>\n</pre>\n",null,1],["month_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-month_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “month”.\n<p>Options\n<p><code>:min</code> - The minimum acceptable value.\n",null,1],["months","Integer","Rails/classes/Integer.html#method-i-months","()","<p>Enables the use of time calculations and declarations, like\n<code>45.minutes + 2.hours + 4.years</code>.\n<p>These methods …\n",null,1],["months_ago","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-months_ago","(months)","<p>Returns a new date/time the specified number of months ago.\n",null,1],["months_since","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-months_since","(months)","<p>Returns a new date/time the specified number of months in the future.\n",null,1],["mount","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-mount","(dir, servlet, *options)","<p>Mounts <code>servlet</code> on <code>dir</code> passing\n<code>options</code> to the servlet at creation time\n",null,0],["mount","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-mount","(app, options = nil)","<p>Mount a Rack-based application to be used within the application.\n\n<pre>mount SomeRackApp, at: &quot;some_route&quot;</pre>\n",null,1],["mount_proc","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-mount_proc","(dir, proc=nil, &block)","<p>Mounts <code>proc</code> or <code>block</code> on <code>dir</code> and\ncalls it with a WEBrick::HTTPRequest and WEBrick::HTTPResponse\n",null,0],["mountpoint?","Pathname","Ruby/classes/Pathname.html#method-i-mountpoint-3F","()","<p>Returns <code>true</code> if <code>self</code> points to a mountpoint.\n",null,0],["mouseinterval","Curses","Ruby/classes/Curses.html#method-c-mouseinterval","(p1)","<p>The Curses.mouseinterval function sets the maximum time (in thousands of a\nsecond) that can elapse between …\n",null,0],["mousemask","Curses","Ruby/classes/Curses.html#method-c-mousemask","(p1)","<p>Returns the <code>mask</code> of the reportable events\n",null,0],["move","Curses::Window","Ruby/classes/Curses/Window.html#method-i-move","(p1, p2)","<p>Moves the window so that the upper left-hand corner is at position\n(<code>y</code>, <code>x</code>)\n",null,0],["move","FileUtils","Ruby/classes/FileUtils.html#method-c-move","(src, dest, options = {})","",null,0],["move","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-move","(path, initheader = nil)","<p>Sends a MOVE request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,0],["move","Rinda::TupleSpace","Ruby/classes/Rinda/TupleSpace.html#method-i-move","(port, tuple, sec=nil)","<p>Moves <code>tuple</code> to <code>port</code>.\n",null,0],["ms","Benchmark","Rails/classes/Benchmark.html#method-c-ms","()","<p>Benchmark realtime in milliseconds.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Benchmark</span>.<span class=\"ruby-identifier\">realtime</span> { <span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">all</span> }\n<span class=\"ruby-comment\"># =&gt; 8.0e-05</span>\n\n<span class=\"ruby-constant\">Benchmark</span>.<span class=\"ruby-identifier\">ms</span> { <span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">all</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["mtime","File","Ruby/classes/File.html#method-i-mtime","()","<p>Returns the modification time for <em>file</em>.\n\n<pre><code>File.new(&quot;testfile&quot;).mtime   #=&gt; Wed Apr 09 08:53:14 CDT 2003\n</code></pre>\n",null,0],["mtime","File","Ruby/classes/File.html#method-c-mtime","(p1)","<p>Returns the modification time for the named file as a Time object.\n<p><em>file_name</em> can be an IO object.\n\n<pre><code>File.mtime(&quot;testfile&quot;) ...</code></pre>\n",null,0],["mtime","File::Stat","Ruby/classes/File/Stat.html#method-i-mtime","()","<p>Returns the modification time of <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).mtime   #=&gt; Wed Apr 09 08:53:14 CDT 2003\n</code></pre>\n",null,0],["mtime","Net::FTP","Ruby/classes/Net/FTP.html#method-i-mtime","(filename, local = false)","<p>Returns the last modification time of the (remote) file.  If\n<code>local</code> is <code>true</code>, it is returned as a local …\n",null,0],["mtime","Pathname","Ruby/classes/Pathname.html#method-i-mtime","()","<p>Returns the last modified time of the file.\n<p>See File.mtime.\n",null,0],["mtime","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-mtime","()","<p>Returns last modification time recorded in the gzip file header.\n",null,0],["mtime","ActiveRecord::MigrationProxy","Rails/classes/ActiveRecord/MigrationProxy.html#method-i-mtime","()","",null,1],["mtime=","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-mtime-3D","(p1)","<p>Specify the modification time (<code>mtime</code>) in the gzip header.\nUsing a Fixnum or Integer\n",null,0],["mu_lock","Mutex_m","Ruby/classes/Mutex_m.html#method-i-mu_lock","()","<p>See Mutex#lock\n",null,0],["mu_locked?","Mutex_m","Ruby/classes/Mutex_m.html#method-i-mu_locked-3F","()","<p>See Mutex#locked?\n",null,0],["mu_synchronize","Mutex_m","Ruby/classes/Mutex_m.html#method-i-mu_synchronize","(&block)","<p>See Mutex#synchronize\n",null,0],["mu_try_lock","Mutex_m","Ruby/classes/Mutex_m.html#method-i-mu_try_lock","()","<p>See Mutex#try_lock\n",null,0],["mu_unlock","Mutex_m","Ruby/classes/Mutex_m.html#method-i-mu_unlock","()","<p>See Mutex#unlock\n",null,0],["mul","OpenSSL::PKey::EC::Point","Ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-mul","(p1, p2 = v2, p3 = v3)","",null,0],["mult","BigDecimal","Ruby/classes/BigDecimal.html#method-i-mult","(p1, p2)","<p>Multiply by the specified value.\n<p>e.g.\n\n<pre><code>c = a.mult(b,n)\nc = a * b</code></pre>\n",null,0],["multicall","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-multicall","(*methods)","<p>You can use this method to execute several methods on a XMLRPC server which\nsupport the multi-call extension. …\n",null,0],["multicall2","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-multicall2","(*methods)","<p>Same as XMLRPC::Client#multicall, but returns two parameters instead of\nraising an XMLRPC::FaultException …\n",null,0],["multicall2_async","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-multicall2_async","(*methods)","<p>Same as XMLRPC::Client#multicall2, but can be called concurrently.\n<p>See also XMLRPC::Client#multicall_async …\n",null,0],["multicall_async","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-multicall_async","(*methods)","<p>Similar to XMLRPC::Client#multicall, however can be called concurrently and\nuse a new connection for …\n",null,0],["multipart=","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-multipart-3D","(multipart)","",null,1],["multipart?","CGI::QueryExtension","Ruby/classes/CGI/QueryExtension.html#method-i-multipart-3F","()","<p>Returns whether the form contained multipart/form-data\n",null,0],["multipart?","Net::IMAP::BodyTypeAttachment","Ruby/classes/Net/IMAP/BodyTypeAttachment.html#method-i-multipart-3F","()","",null,0],["multipart?","Net::IMAP::BodyTypeBasic","Ruby/classes/Net/IMAP/BodyTypeBasic.html#method-i-multipart-3F","()","",null,0],["multipart?","Net::IMAP::BodyTypeExtension","Ruby/classes/Net/IMAP/BodyTypeExtension.html#method-i-multipart-3F","()","",null,0],["multipart?","Net::IMAP::BodyTypeMessage","Ruby/classes/Net/IMAP/BodyTypeMessage.html#method-i-multipart-3F","()","",null,0],["multipart?","Net::IMAP::BodyTypeMultipart","Ruby/classes/Net/IMAP/BodyTypeMultipart.html#method-i-multipart-3F","()","",null,0],["multipart?","Net::IMAP::BodyTypeText","Ruby/classes/Net/IMAP/BodyTypeText.html#method-i-multipart-3F","()","",null,0],["multipart_form","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-multipart_form","(action = nil, enctype = \"multipart/form-data\")","<p>Generate a Form element with multipart encoding as a String.\n<p>Multipart encoding is used for forms that …\n",null,0],["multiple_of?","Integer","Rails/classes/Integer.html#method-i-multiple_of-3F","(number)","<p>Check whether the integer is evenly divisible by the argument.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">0</span>.<span class=\"ruby-identifier\">multiple_of?</span>(<span class=\"ruby-value\">0</span>)  <span class=\"ruby-comment\">#=&gt; true</span>\n<span class=\"ruby-value\">6</span>.<span class=\"ruby-identifier\">multiple_of?</span>(<span class=\"ruby-value\">5</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["must_C_version","StringScanner","Ruby/classes/StringScanner.html#method-c-must_C_version","()","<p>This method is defined for backward compatibility.\n",null,0],["must_call_validators","RSS::Element","Ruby/classes/RSS/Element.html#method-i-must_call_validators","()","",null,0],["mute","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-mute","()","<p>Silence the logger within a block.\n",null,1],["mv","FileUtils","Ruby/classes/FileUtils.html#method-c-mv","(src, dest, options = {})","<p>Options: force noop verbose\n<p>Moves file(s) <code>src</code> to <code>dest</code>.  If <code>file</code>\nand <code>dest</code> exist on the different disk partition, …\n",null,0],["mv","Object","Ruby/classes/Object.html#method-i-mv","()","<p>Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\n\n<pre><code>ruby -run -e mv -- [OPTION] SOURCE DEST\n\n-v    ...</code></pre>\n",null,0],["n_bytes","Net::POP3","Ruby/classes/Net/POP3.html#method-i-n_bytes","()","<p>Returns the total size in bytes of all the messages on the POP server.\n",null,0],["n_jobs","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-n_jobs","()","<p>The total number of irb sessions, used to set <code>irb_name</code> of the\ncurrent Context.\n",null,0],["n_mails","Net::POP3","Ruby/classes/Net/POP3.html#method-i-n_mails","()","<p>Returns the number of messages on the POP server.\n",null,0],["name","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-name","()","<p>Get the name of this function\n",null,0],["name","DL::Function","Ruby/classes/DL/Function.html#method-i-name","()","",null,0],["name","Encoding","Ruby/classes/Encoding.html#method-i-name","()","<p>Returns the name of the encoding.\n\n<pre><code>Encoding::UTF_8.name      #=&gt; &quot;UTF-8&quot;\n</code></pre>\n",null,0],["name","Gem::DependencyResolver::ActivationRequest","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html#method-i-name","()","",null,0],["name","Gem::DependencyResolver::DependencyRequest","Ruby/classes/Gem/DependencyResolver/DependencyRequest.html#method-i-name","()","",null,0],["name","Method","Ruby/classes/Method.html#method-i-name","()","<p>Returns the name of the method.\n",null,0],["name","Module","Ruby/classes/Module.html#method-i-name","()","<p>Returns the name of the module <em>mod</em>.  Returns nil for anonymous\nmodules.\n",null,0],["name","NameError","Ruby/classes/NameError.html#method-i-name","()","<p>Return the name associated with this NameError exception.\n",null,0],["name","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-name","()","<p>Returns the name of the cipher which may differ slightly from the original\nname provided.\n",null,0],["name","OpenSSL::Digest","Ruby/classes/OpenSSL/Digest.html#method-i-name","()","<p>Returns the sn of this Digest instance.\n<p>Example\n\n<pre><code>digest = OpenSSL::Digest::SHA512.new\nputs digest.name # ...</code></pre>\n",null,0],["name","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-name","()","",null,0],["name","OpenSSL::PKCS7::SignerInfo","Ruby/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-name","()","",null,0],["name","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-i-name","()","<p>Method name\n<p>If the method has no assigned name, it extracts it from #call_seq.\n",null,0],["name","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-name","()","",null,0],["name","REXML::Document","Ruby/classes/REXML/Document.html#method-i-name","()","",null,0],["name","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-name","( node_set=nil )","",null,0],["name","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-name","()","",null,0],["name","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-name","()","",null,0],["name","Rake::Task","Ruby/classes/Rake/Task.html#method-i-name","()","<p>Name of the task, including any namespace qualifiers.\n",null,0],["name","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-name","()","<p>Returns the name of the method.\n",null,0],["name","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-name","()","<p>call-seq\n\n<pre><code>WIN32OLE_METHOD#name</code></pre>\n<p>Returns the name of the method.\n",null,0],["name","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-i-name","()","<p>Returns name.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;)\nmethod = WIN32OLE_METHOD.new(tobj, ...</code></pre>\n",null,0],["name","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-name","()","<p>Returns OLE type name.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Application&#39;)\nputs ...</code></pre>\n",null,0],["name","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-name","()","<p>Returns the type library name.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;)\nname ...</code></pre>\n",null,0],["name","WIN32OLE_VARIABLE","Ruby/classes/WIN32OLE_VARIABLE.html#method-i-name","()","<p>Returns the name of variable.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;XlSheetType&#39;) ...</code></pre>\n",null,0],["name","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-name","()","<p>Full path of key such as &#39;HKEY_CURRENT_USERSOFTWAREfoobar&#39;.\n",null,0],["name","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-name","()","",null,1],["name","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-c-name","()","<p>Report class name as &#39;Time&#39; to thwart type checking.\n",null,1],["name=","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-name-3D","(new_name)","<p>Allows overriding the initial name.\n<p>Used for modules and classes that are constant aliases.\n",null,0],["name=","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-name-3D","( name_str, ns=nil )","",null,0],["name=","REXML::Namespace","Ruby/classes/REXML/Namespace.html#method-i-name-3D","( name )","<p>Sets the name and the expanded name\n",null,0],["name_for_path","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-name_for_path","()","<p>Name to use to generate the url: modules and classes that are aliases for\nanother module or class return …\n",null,0],["name_for_path","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-name_for_path","()","<p>Name to use to generate the url. <code>#full_name</code> by default.\n",null,0],["name_list","Encoding","Ruby/classes/Encoding.html#method-c-name_list","()","<p>Returns the list of available encoding names.\n\n<pre><code>Encoding.name_list\n#=&gt; [&quot;US-ASCII&quot;, &quot;ASCII-8BIT&quot;, &quot;UTF-8&quot;, ...\n</code></pre>\n",null,0],["name_path","Gem::Security::TrustDir","Ruby/classes/Gem/Security/TrustDir.html#method-i-name_path","(name)","<p>Returns the path to the trusted certificate with the given ASN.1\n<code>name</code>\n",null,0],["name_prefix","RDoc::Alias","Ruby/classes/RDoc/Alias.html#method-i-name_prefix","()","<p>&#39;::&#39; for the alias of a singleton method/attribute, &#39;#&#39; for\ninstance-level.\n",null,0],["name_prefix","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-name_prefix","()","<p>&#39;::&#39; for a class method/attribute, &#39;#&#39; for an instance\nmethod.\n",null,0],["name_regexp","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-name_regexp","(name)","<p>Returns a regular expression for <code>name</code> that will match an\nRDoc::AnyMethod&#39;s name.\n",null,0],["name_tuple","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-name_tuple","()","<p>Return a NameTuple that represents this Specification\n",null,0],["named_captures","Regexp","Ruby/classes/Regexp.html#method-i-named_captures","()","<p>Returns a hash representing information about named captures of\n<em>rxp</em>.\n<p>A key of the hash is a name of the …\n",null,0],["names","Encoding","Ruby/classes/Encoding.html#method-i-names","()","<p>Returns the list of name and aliases of the encoding.\n\n<pre><code>Encoding::WINDOWS_31J.names  #=&gt; [&quot;Windows-31J&quot;, ...\n</code></pre>\n",null,0],["names","MatchData","Ruby/classes/MatchData.html#method-i-names","()","<p>Returns a list of names of captures as an array of strings. It is same as\nmtch.regexp.names.\n\n<pre><code>/(?&lt;foo&gt;.)(?&lt;bar&gt;.)(?&lt;baz&gt;.)/.match(&quot;hoge&quot;).names ...</code></pre>\n",null,0],["names","Regexp","Ruby/classes/Regexp.html#method-i-names","()","<p>Returns a list of names of captures as an array of strings.\n\n<pre><code>/(?&lt;foo&gt;.)(?&lt;bar&gt;.)(?&lt;baz&gt;.)/.names\n#=&gt; [&quot;foo&quot;, ...\n</code></pre>\n",null,0],["names","QualifiedConstUtils","Rails/classes/QualifiedConstUtils.html#method-c-names","(path)","",null,1],["namespace","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-namespace","(arg=nil)","<p>Returns the namespace URL, if defined, or nil otherwise\n\n<pre><code>e = Element.new(&quot;el&quot;)\ne.add_attributes({&quot;xmlns:ns&quot;, ...</code></pre>\n",null,0],["namespace","REXML::Element","Ruby/classes/REXML/Element.html#method-i-namespace","(prefix=nil)","<p>Evalutas to the URI for a prefix, or the empty string if no such namespace\nis declared for this element. …\n",null,0],["namespace","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-namespace","( prefix=prefix() )","",null,0],["namespace","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-namespace","(path, options = {})","<p>See ActionDispatch::Routing::Mapper::Scoping#namespace\n",null,1],["namespace","ActionDispatch::Routing::Mapper::Scoping","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-namespace","(path, options = {})","<p>Scopes routes to a specific namespace. For example:\n\n<pre>namespace :admin do\n  resources :posts\nend</pre>\n<p>This generates …\n",null,1],["namespace","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-namespace","(name=nil)","<p>Convenience method to get the namespace from the class name. It&#39;s the\nsame as Thor default except …\n",null,1],["namespace","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-namespace","()","",null,1],["namespace=","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-namespace-3D","( namespace )","",null,0],["namespace_context","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-namespace_context","()","",null,0],["namespace_context=","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-namespace_context-3D","(x)","",null,0],["namespace_uri","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-namespace_uri","( node_set=nil )","",null,0],["namespaced?","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-namespaced-3F","()","",null,1],["namespaced_class_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-namespaced_class_path","()","",null,1],["namespaced_file_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-namespaced_file_path","()","",null,1],["namespaced_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-namespaced_path","()","",null,1],["namespaces","REXML::Element","Ruby/classes/REXML/Element.html#method-i-namespaces","()","",null,0],["namespaces=","REXML::Parsers::XPathParser","Ruby/classes/REXML/Parsers/XPathParser.html#method-i-namespaces-3D","( namespaces )","",null,0],["namespaces=","REXML::XPathParser","Ruby/classes/REXML/XPathParser.html#method-i-namespaces-3D","( namespaces={} )","",null,0],["nan?","BigDecimal","Ruby/classes/BigDecimal.html#method-i-nan-3F","()","<p>Returns True if the value is Not a Number\n",null,0],["nan?","Float","Ruby/classes/Float.html#method-i-nan-3F","()","<p>Returns <code>true</code> if <em>flt</em> is an invalid IEEE floating point\nnumber.\n\n<pre><code>a = -1.0      #=&gt; -1.0\na.nan?        #=&gt; ...\n</code></pre>\n",null,0],["native","IPAddr","Ruby/classes/IPAddr.html#method-i-native","()","<p>Returns a new ipaddr built by converting the IPv6 address into a native\nIPv4 address.  If the IP address …\n",null,0],["native_database_types","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-native_database_types","()","",null,1],["native_database_types","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-native_database_types","()","<p>Returns a hash of mappings from the abstract data types to the native\ndatabase types. See TableDefinition#column …\n",null,1],["navigation_behavior","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-navigation_behavior","(error)","<p>This is the common behavior for formats associated with browsing, like\n:html, :iphone and so forth.\n",null,1],["navigation_location","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-navigation_location","()","",null,1],["need_base64_encode?","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-need_base64_encode-3F","()","",null,0],["need_base64_encode?","RSS::Element","Ruby/classes/RSS/Element.html#method-i-need_base64_encode-3F","()","",null,0],["need_initialize_variables","RSS::Element","Ruby/classes/RSS/Element.html#method-i-need_initialize_variables","()","",null,0],["need_initialize_variables","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-need_initialize_variables","()","",null,0],["need_parent?","RSS::Atom::CommonModel","Ruby/classes/RSS/Atom/CommonModel.html#method-i-need_parent-3F","()","",null,0],["need_parent?","RSS::Element","Ruby/classes/RSS/Element.html#method-i-need_parent-3F","()","",null,0],["needed?","Rake::FileCreationTask","Ruby/classes/Rake/FileCreationTask.html#method-i-needed-3F","()","<p>Is this file task needed?  Yes if it doesn&#39;t exist.\n",null,0],["needed?","Rake::FileTask","Ruby/classes/Rake/FileTask.html#method-i-needed-3F","()","<p>Is this file task needed?  Yes if it doesn&#39;t exist, or if its time\nstamp is out of date.\n",null,0],["needed?","Rake::Task","Ruby/classes/Rake/Task.html#method-i-needed-3F","()","<p>Is this task needed?\n",null,0],["needs","Gem","Ruby/classes/Gem.html#method-c-needs","()","",null,0],["negotiate_format","ActionController::MimeResponds::Collector","Rails/classes/ActionController/MimeResponds/Collector.html#method-i-negotiate_format","(request)","",null,1],["negotiate_mime","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-negotiate_mime","(order)","<p>Receives an array of mimes and return the first user sent mime that matches\nthe order array.\n",null,1],["nest","PrettyPrint","Ruby/classes/PrettyPrint.html#method-i-nest","(indent)","<p>Increases left margin after newline with <code>indent</code> for line\nbreaks added in the block.\n",null,0],["nest","PrettyPrint::SingleLine","Ruby/classes/PrettyPrint/SingleLine.html#method-i-nest","(indent)","",null,0],["nested","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-nested","()","",null,1],["nested_dependencies","ActionView::Digestor","Rails/classes/ActionView/Digestor.html#method-i-nested_dependencies","()","",null,1],["nested_under_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-nested_under_indifferent_access","()","",null,1],["nested_under_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-nested_under_indifferent_access","()","",null,1],["nested_under_indifferent_access","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-nested_under_indifferent_access","()","",null,1],["nested_under_indifferent_access","Hash","Rails/classes/Hash.html#method-i-nested_under_indifferent_access","()","<p>Called when object is nested under an object that receives\n#with_indifferent_access. This method will …\n",null,1],["nesting","Module","Ruby/classes/Module.html#method-c-nesting","()","<p>Returns the list of <code>Modules</code> nested at the point of call.\n\n<pre><code>module M1\n  module M2\n    $a = Module.nesting ...\n</code></pre>\n",null,0],["new","ACL","Ruby/classes/ACL.html#method-c-new","(list=nil, order = DENY_ALLOW)","<p>Creates a new ACL from <code>list</code> with an evaluation\n<code>order</code> of DENY_ALLOW or ALLOW_DENY.\n<p>An ACL <code>list</code> is an Array …\n",null,0],["new","ACL::ACLEntry","Ruby/classes/ACL/ACLEntry.html#method-c-new","(str)","<p>Creates a new entry using <code>str</code>.\n<p><code>str</code> may be “*” or “all” to match any address, an IP …\n",null,0],["new","ACL::ACLList","Ruby/classes/ACL/ACLList.html#method-c-new","()","<p>Creates an empty ACLList\n",null,0],["new","Addrinfo","Ruby/classes/Addrinfo.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>returns a new instance of Addrinfo. The instance contains sockaddr, family,\nsocktype, protocol. sockaddr …\n",null,0],["new","Array","Ruby/classes/Array.html#method-c-new","(p1 = v1, p2 = v2)","<p>Returns a new array.\n<p>In the first form, if no arguments are sent, the new array will be empty.\nWhen a …\n",null,0],["new","BasicObject","Ruby/classes/BasicObject.html#method-c-new","()","<p>Not documented\n",null,0],["new","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-c-new","(utime = 0.0, stime = 0.0, cutime = 0.0, cstime = 0.0, real = 0.0, label = nil)","<p>Returns an initialized Tms object which has <code>utime</code> as the user\nCPU time, <code>stime</code> as the system CPU time, …\n",null,0],["new","BigDecimal","Ruby/classes/BigDecimal.html#method-c-new","(*args)","<p>Create a new BigDecimal object.\n<p>initial &mdash; The initial value, as an Integer, a Float, a Rational, a BigDecimal …\n",null,0],["new","CGI","Ruby/classes/CGI.html#method-c-new","(options = {})","<p>Create a new CGI instance.\n<p><code>tag_maker</code> &mdash; This is the same as using the <code>options_hash</code> form with the value\n<code>{</code> …\n",null,0],["new","CGI::Cookie","Ruby/classes/CGI/Cookie.html#method-c-new","(name = \"\", *value)","<p>Create a new CGI::Cookie object.\n<p><code>name_string</code> &mdash; The name of the cookie; in this form, there is no #domain …\n",null,0],["new","CGI::Session","Ruby/classes/CGI/Session.html#method-c-new","(request, option={})","<p>Create a new CGI::Session object for <code>request</code>.\n<p><code>request</code> is an instance of the <code>CGI</code> class (see\ncgi.rb). <code>option</code> …\n",null,0],["new","CGI::Session::FileStore","Ruby/classes/CGI/Session/FileStore.html#method-c-new","(session, option={})","<p>Create a new FileStore instance.\n<p>This constructor is used internally by CGI::Session.  The user does not …\n",null,0],["new","CGI::Session::MemoryStore","Ruby/classes/CGI/Session/MemoryStore.html#method-c-new","(session, option=nil)","<p>Create a new MemoryStore instance.\n<p><code>session</code> is the session this instance is associated with.\n<code>option</code> is …\n",null,0],["new","CGI::Session::NullStore","Ruby/classes/CGI/Session/NullStore.html#method-c-new","(session, option=nil)","<p>Create a new NullStore instance.\n<p><code>session</code> is the session this instance is associated with.\n<code>option</code> is a …\n",null,0],["new","CGI::Session::PStore","Ruby/classes/CGI/Session/PStore.html#method-c-new","(session, option={})","<p>Create a new CGI::Session::PStore instance\n<p>This constructor is used internally by CGI::Session.  The user …\n",null,0],["new","CSV","Ruby/classes/CSV.html#method-c-new","(data, options = Hash.new)","<p>This constructor will wrap either a String or IO object passed in\n<code>data</code> for reading and/or writing.   …\n",null,0],["new","CSV::Row","Ruby/classes/CSV/Row.html#method-c-new","(headers, fields, header_row = false)","<p>Construct a new CSV::Row from <code>headers</code> and <code>fields</code>,\nwhich are expected to be Arrays.  If one Array is shorter …\n",null,0],["new","CSV::Table","Ruby/classes/CSV/Table.html#method-c-new","(array_of_rows)","<p>Construct a new CSV::Table from <code>array_of_rows</code>, which are\nexpected to be CSV::Row objects.  All rows are …\n",null,0],["new","Class","Ruby/classes/Class.html#method-i-new","(*args)","<p>Calls <code>allocate</code> to create a new object of <em>class</em>&#39;s\nclass, then invokes that object&#39;s <code>initialize</code> …\n",null,0],["new","Class","Ruby/classes/Class.html#method-c-new","(p1 = v1)","<p>Creates a new anonymous (unnamed) class with the given superclass (or\n<code>Object</code> if no parameter is given). …\n",null,0],["new","CompositePublisher","Ruby/classes/CompositePublisher.html#method-c-new","()","",null,0],["new","ConditionVariable","Ruby/classes/ConditionVariable.html#method-c-new","()","<p>Creates a new ConditionVariable\n",null,0],["new","Curses::Pad","Ruby/classes/Curses/Pad.html#method-c-new","(p1, p2)","<p>Contruct a new Curses::Pad with constraints of <code>height</code> lines,\n<code>width</code> columns\n",null,0],["new","Curses::Window","Ruby/classes/Curses/Window.html#method-c-new","(p1, p2, p3, p4)","<p>Contruct a new Curses::Window with constraints of <code>height</code>\nlines, <code>width</code> columns, begin at <code>top</code> line, and …\n",null,0],["new","DBM","Ruby/classes/DBM.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Open a dbm database with the specified name, which can include a directory\npath. Any file extensions …\n",null,0],["new","DL::CFunc","Ruby/classes/DL/CFunc.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Create a new function that points to <code>address</code> with an optional\nreturn type of <code>type</code>, a name of <code>name</code> and …\n",null,0],["new","DL::CPtr","Ruby/classes/DL/CPtr.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Create a new pointer to <code>address</code> with an optional\n<code>size</code> and <code>freefunc</code>. <code>freefunc</code> will be\ncalled when the …\n",null,0],["new","DL::CStructEntity","Ruby/classes/DL/CStructEntity.html#method-c-new","(addr, types, func = nil)","<p>Wraps the C pointer <code>addr</code> as a C struct with the given\n<code>types</code>.  The C function <code>func</code> is called when the …\n",null,0],["new","DL::CarriedFunction","Ruby/classes/DL/CarriedFunction.html#method-c-new","(cfunc, argtypes, n)","",null,0],["new","DL::CompositeHandler","Ruby/classes/DL/CompositeHandler.html#method-c-new","(handlers)","",null,0],["new","DL::Function","Ruby/classes/DL/Function.html#method-c-new","(cfunc, argtypes, abi = nil, &block)","",null,0],["new","DL::Handle","Ruby/classes/DL/Handle.html#method-c-new","(p1 = v1, p2 = v2)","<p>Create a new handler that opens library named <code>lib</code> with\n<code>flags</code>.  If no library is specified, RTLD_DEFAULT …\n",null,0],["new","DL::Packer","Ruby/classes/DL/Packer.html#method-c-new","(types)","",null,0],["new","DL::Stack","Ruby/classes/DL/Stack.html#method-c-new","(types)","",null,0],["new","DRb::DRbArray","Ruby/classes/DRb/DRbArray.html#method-c-new","(ary)","<p>Creates a new DRbArray that either dumps or wraps all the items in the\nArray <code>ary</code> so they can be loaded …\n",null,0],["new","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-c-new","(obj, uri=nil)","<p>Create a new remote object stub.\n<p><code>obj</code> is the (local) object we want to create a stub for. \nNormally this …\n",null,0],["new","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-c-new","(obj, uri=nil)","<p>Create a new remote object stub.\n<p><code>obj</code> is the (local) object we want to create a stub for. \nNormally this …\n",null,0],["new","DRb::DRbRemoteError","Ruby/classes/DRb/DRbRemoteError.html#method-c-new","(error)","<p>Creates a new remote error that wraps the Exception <code>error</code>\n",null,0],["new","DRb::DRbSSLSocket","Ruby/classes/DRb/DRbSSLSocket.html#method-c-new","(uri, soc, config, is_established)","<p>Create a DRb::DRbSSLSocket instance.\n<p><code>uri</code> is the URI we are connected to. <code>soc</code> is the\ntcp socket we are …\n",null,0],["new","DRb::DRbSSLSocket::SSLConfig","Ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-c-new","(config)","<p>Create a new DRb::DRbSSLSocket::SSLConfig instance\n<p>The DRb::DRbSSLSocket will take either a <code>config</code> Hash …\n",null,0],["new","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-c-new","(uri=nil, front=nil, config_or_acl=nil)","<p>Create a new DRbServer instance.\n<p><code>uri</code> is the URI to bind to.  This is normally of the form\n&#39;druby://&lt;hostname&gt;:&lt;port&gt;&#39; …\n",null,0],["new","DRb::DRbUnknown","Ruby/classes/DRb/DRbUnknown.html#method-c-new","(err, buf)","<p>Create a new DRbUnknown object.\n<p><code>buf</code> is a string containing a marshalled object that could not\nbe unmarshalled. …\n",null,0],["new","DRb::DRbUnknownError","Ruby/classes/DRb/DRbUnknownError.html#method-c-new","(unknown)","<p>Create a new DRbUnknownError for the DRb::DRbUnknown object\n<code>unknown</code>\n",null,0],["new","DRb::ExtServ","Ruby/classes/DRb/ExtServ.html#method-c-new","(there, name, server=nil)","",null,0],["new","DRb::ExtServManager","Ruby/classes/DRb/ExtServManager.html#method-c-new","()","",null,0],["new","DRb::GW","Ruby/classes/DRb/GW.html#method-c-new","()","<p>Creates a new GW\n",null,0],["new","DRb::TimerIdConv","Ruby/classes/DRb/TimerIdConv.html#method-c-new","(timeout=600)","<p>Creates a new TimerIdConv which will hold objects for <code>timeout</code>\nseconds.\n",null,0],["new","Date","Ruby/classes/Date.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Creates a date object denoting the given calendar date.\n<p>In this class, BCE years are counted astronomically. …\n",null,0],["new","DateTime","Ruby/classes/DateTime.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7, p8 = v8)","<p>Creates a date-time object denoting the given calendar date.\n\n<pre><code>DateTime.new(2001,2,3)    #=&gt; #&lt;DateTime: ...\n</code></pre>\n",null,0],["new","Delegator","Ruby/classes/Delegator.html#method-c-new","(obj)","<p>Pass in the <em>obj</em> to delegate method calls to.  All methods\nsupported by <em>obj</em> will be delegated to.\n",null,0],["new","Digest::HMAC","Ruby/classes/Digest/HMAC.html#method-c-new","(key, digester)","<p>Creates a Digest::HMAC instance.\n",null,0],["new","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-new","()","<p>Returns a new, initialized copy of the digest object.  Equivalent to\ndigest_obj.clone().reset().\n",null,0],["new","Dir","Ruby/classes/Dir.html#method-c-new","(p1, p2 = {})","<p>Returns a new directory object for the named directory.\n",null,0],["new","ERB","Ruby/classes/ERB.html#method-c-new","(str, safe_level=nil, trim_mode=nil, eoutvar='_erbout')","<p>Constructs a new ERB object with the template specified in <em>str</em>.\n<p>An ERB object works by building a chunk …\n",null,0],["new","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-c-new","(*args)","<p>possible options elements:\n\n<pre><code>hash form:\n  :invalid =&gt; nil            # raise error on invalid byte sequence ...\n</code></pre>\n",null,0],["new","Enumerator","Ruby/classes/Enumerator.html#method-c-new","(*args)","<p>Creates a new Enumerator object, which can be used as an Enumerable.\n<p>In the first form, iteration is defined …\n",null,0],["new","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-c-new","(*args)","<p>Creates a new Lazy enumerator. When the enumerator is actually enumerated\n(e.g. by calling #force),  …\n",null,0],["new","Exception","Ruby/classes/Exception.html#method-c-new","(p1 = v1)","<p>Construct a new Exception object, optionally passing in a message.\n",null,0],["new","Fiddle::CStructEntity","Ruby/classes/Fiddle/CStructEntity.html#method-c-new","(addr, types, func = nil)","<p>Wraps the C pointer <code>addr</code> as a C struct with the given\n<code>types</code>.\n<p>When the instance is garbage collected, the …\n",null,0],["new","Fiddle::Closure","Ruby/classes/Fiddle/Closure.html#method-c-new","(p1, p2, p3 = v3)","<p>Construct a new Closure object.\n<p><code>ret</code> is the C type to be returned\n<p><code>args</code> is an Array of arguments, passed …\n",null,0],["new","Fiddle::Closure::BlockCaller","Ruby/classes/Fiddle/Closure/BlockCaller.html#method-c-new","(ctype, args, abi = Fiddle::Function::DEFAULT, &block)","<p>Description\n<p>Construct a new BlockCaller object.\n<p><code>ctype</code> is the C type to be returned\n",null,0],["new","Fiddle::CompositeHandler","Ruby/classes/Fiddle/CompositeHandler.html#method-c-new","(handlers)","<p>Create a new handler with the open <code>handlers</code>\n<p>Used internally by Fiddle::Importer.dlload\n",null,0],["new","Fiddle::Function","Ruby/classes/Fiddle/Function.html#method-c-new","(p1, p2, p3, p4 = v4, p5 = {})","<p>Constructs a Function object.\n<p><code>ptr</code> is a referenced function, of a Fiddle::Handle\n<p><code>args</code> is an Array of arguments, …\n",null,0],["new","Fiddle::Handle","Ruby/classes/Fiddle/Handle.html#method-c-new","(p1 = v1, p2 = v2)","<p>Create a new handler that opens library named <code>lib</code> with\n<code>flags</code>.  If no library is specified, RTLD_DEFAULT …\n",null,0],["new","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Create a new pointer to <code>address</code> with an optional\n<code>size</code> and <code>freefunc</code>.\n<p><code>freefunc</code> will be called when the instance …\n",null,0],["new","File","Ruby/classes/File.html#method-c-new","(*args)","<p>Opens the file named by <code>filename</code> according to the given\n<code>mode</code> and returns a new File object.\n<p>See IO.new …\n",null,0],["new","File::Stat","Ruby/classes/File/Stat.html#method-c-new","(p1)","<p>Create a File::Stat object for the given file name (raising an exception if\nthe file doesn&#39;t exist). …\n",null,0],["new","GDBM","Ruby/classes/GDBM.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Creates a new GDBM instance by opening a gdbm file named <em>filename</em>.\nIf the file does not exist, a new …\n",null,0],["new","GServer","Ruby/classes/GServer.html#method-c-new","(port, host = DEFAULT_HOST, maxConnections = 4, stdlog = $stderr, audit = false, debug = false)","<p>Create a new server\n<p><code>port</code> &mdash; the port, as a FixNum, on which to listen.\n<p><code>host</code> &mdash; the host to bind to\n",null,0],["new","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-c-new","()","",null,0],["new","Gem::Command","Ruby/classes/Gem/Command.html#method-c-new","(command, summary=nil, defaults={})","<p>Initializes a generic gem command named <code>command</code>. \n<code>summary</code> is a short description displayed in `gem help …\n",null,0],["new","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-c-new","()","<p>Register all the subcommands supported by the gem command.\n",null,0],["new","Gem::Commands::BuildCommand","Ruby/classes/Gem/Commands/BuildCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::CertCommand","Ruby/classes/Gem/Commands/CertCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::CheckCommand","Ruby/classes/Gem/Commands/CheckCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::CleanupCommand","Ruby/classes/Gem/Commands/CleanupCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::ContentsCommand","Ruby/classes/Gem/Commands/ContentsCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::DependencyCommand","Ruby/classes/Gem/Commands/DependencyCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::EnvironmentCommand","Ruby/classes/Gem/Commands/EnvironmentCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::FetchCommand","Ruby/classes/Gem/Commands/FetchCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::GenerateIndexCommand","Ruby/classes/Gem/Commands/GenerateIndexCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::HelpCommand","Ruby/classes/Gem/Commands/HelpCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::InstallCommand","Ruby/classes/Gem/Commands/InstallCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::ListCommand","Ruby/classes/Gem/Commands/ListCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::LockCommand","Ruby/classes/Gem/Commands/LockCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::MirrorCommand","Ruby/classes/Gem/Commands/MirrorCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::OutdatedCommand","Ruby/classes/Gem/Commands/OutdatedCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::OwnerCommand","Ruby/classes/Gem/Commands/OwnerCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::PristineCommand","Ruby/classes/Gem/Commands/PristineCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::PushCommand","Ruby/classes/Gem/Commands/PushCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::QueryCommand","Ruby/classes/Gem/Commands/QueryCommand.html#method-c-new","(name = 'query', summary = 'Query gem information in local or remote repositories')","",null,0],["new","Gem::Commands::RdocCommand","Ruby/classes/Gem/Commands/RdocCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::SearchCommand","Ruby/classes/Gem/Commands/SearchCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::ServerCommand","Ruby/classes/Gem/Commands/ServerCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::SourcesCommand","Ruby/classes/Gem/Commands/SourcesCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::SpecificationCommand","Ruby/classes/Gem/Commands/SpecificationCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::StaleCommand","Ruby/classes/Gem/Commands/StaleCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::UninstallCommand","Ruby/classes/Gem/Commands/UninstallCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::UnpackCommand","Ruby/classes/Gem/Commands/UnpackCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::UpdateCommand","Ruby/classes/Gem/Commands/UpdateCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::WhichCommand","Ruby/classes/Gem/Commands/WhichCommand.html#method-c-new","()","",null,0],["new","Gem::Commands::YankCommand","Ruby/classes/Gem/Commands/YankCommand.html#method-c-new","()","",null,0],["new","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-c-new","(args)","<p>Create the config file object.  <code>args</code> is the list of arguments\nfrom the command line.\n<p>The following command …\n",null,0],["new","Gem::ConsoleUI","Ruby/classes/Gem/ConsoleUI.html#method-c-new","()","",null,0],["new","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-c-new","(name, *requirements)","<p>Constructs a dependency with <code>name</code> and\n<code>requirements</code>. The last argument can optionally be the\ndependency …\n",null,0],["new","Gem::DependencyInstaller","Ruby/classes/Gem/DependencyInstaller.html#method-c-new","(options = {})","<p>Creates a new installer instance.\n<p>Options are:\n<p>:cache_dir &mdash; Alternate repository path to store .gem files …\n",null,0],["new","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-c-new","(development = false)","<p>Creates a new DependencyList.  If <code>development</code> is true,\ndevelopment dependencies will be included.\n",null,0],["new","Gem::DependencyResolutionError","Ruby/classes/Gem/DependencyResolutionError.html#method-c-new","(conflict)","",null,0],["new","Gem::DependencyResolver","Ruby/classes/Gem/DependencyResolver.html#method-c-new","(needed, set=IndexSet.new)","<p>Create DependencyResolver object which will resolve the tree starting with\n<code>needed</code> Depedency objects. …\n",null,0],["new","Gem::DependencyResolver::APISet","Ruby/classes/Gem/DependencyResolver/APISet.html#method-c-new","()","",null,0],["new","Gem::DependencyResolver::APISpecification","Ruby/classes/Gem/DependencyResolver/APISpecification.html#method-c-new","(set, api_data)","",null,0],["new","Gem::DependencyResolver::ActivationRequest","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html#method-c-new","(spec, req, others_possible=true)","",null,0],["new","Gem::DependencyResolver::DependencyConflict","Ruby/classes/Gem/DependencyResolver/DependencyConflict.html#method-c-new","(dependency, activated, failed_dep=dependency)","",null,0],["new","Gem::DependencyResolver::DependencyRequest","Ruby/classes/Gem/DependencyResolver/DependencyRequest.html#method-c-new","(dep, act)","",null,0],["new","Gem::DependencyResolver::IndexSet","Ruby/classes/Gem/DependencyResolver/IndexSet.html#method-c-new","()","",null,0],["new","Gem::DependencyResolver::IndexSpecification","Ruby/classes/Gem/DependencyResolver/IndexSpecification.html#method-c-new","(set, name, version, source, plat)","",null,0],["new","Gem::Doctor","Ruby/classes/Gem/Doctor.html#method-c-new","(gem_repository, dry_run = false)","<p>Creates a new Gem::Doctor that will clean up <code>gem_repository</code>. \nOnly one gem repository may be cleaned …\n",null,0],["new","Gem::FilePermissionError","Ruby/classes/Gem/FilePermissionError.html#method-c-new","(directory)","",null,0],["new","Gem::GemRunner","Ruby/classes/Gem/GemRunner.html#method-c-new","(options={})","",null,0],["new","Gem::ImpossibleDependenciesError","Ruby/classes/Gem/ImpossibleDependenciesError.html#method-c-new","(request, conflicts)","",null,0],["new","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-c-new","(directory, options = {})","<p>Create an indexer that will index the gems in <code>directory</code>.\n",null,0],["new","Gem::Installer","Ruby/classes/Gem/Installer.html#method-c-new","(gem, options={})","<p>Constructs an Installer instance that will install the gem located at\n<code>gem</code>.  <code>options</code> is a Hash with the …\n",null,0],["new","Gem::MockGemUi","Ruby/classes/Gem/MockGemUi.html#method-c-new","(input = \"\")","",null,0],["new","Gem::MockGemUi::InputEOFError","Ruby/classes/Gem/MockGemUi/InputEOFError.html#method-c-new","(question)","",null,0],["new","Gem::MockGemUi::TermError","Ruby/classes/Gem/MockGemUi/TermError.html#method-c-new","(exit_code)","",null,0],["new","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-c-new","(name, version, platform=\"ruby\")","",null,0],["new","Gem::Package","Ruby/classes/Gem/Package.html#method-c-new","(gem)","<p>Creates a new Gem::Package for the file at <code>gem</code>.\n<p>If <code>gem</code> is an existing file in the old format a\nGem::Package::Old …\n",null,0],["new","Gem::Package::DigestIO","Ruby/classes/Gem/Package/DigestIO.html#method-c-new","(io, digests)","<p>Creates a new DigestIO instance.  Using ::wrap is recommended, see the\n::wrap documentation for documentation …\n",null,0],["new","Gem::Package::FormatError","Ruby/classes/Gem/Package/FormatError.html#method-c-new","(message, path = nil)","",null,0],["new","Gem::Package::Old","Ruby/classes/Gem/Package/Old.html#method-c-new","(gem)","<p>Creates a new old-format package reader for <code>gem</code>.  Old-format\npackages cannot be written.\n",null,0],["new","Gem::Package::PathError","Ruby/classes/Gem/Package/PathError.html#method-c-new","(destination, destination_dir)","",null,0],["new","Gem::Package::TarHeader","Ruby/classes/Gem/Package/TarHeader.html#method-c-new","(vals)","<p>Creates a new TarHeader using <code>vals</code>\n",null,0],["new","Gem::Package::TarReader","Ruby/classes/Gem/Package/TarReader.html#method-c-new","(io)","<p>Creates a new TarReader on <code>io</code> and yields it to the block, if\ngiven.\n",null,0],["new","Gem::Package::TarReader","Ruby/classes/Gem/Package/TarReader.html#method-c-new","(io)","<p>Creates a new tar file reader on <code>io</code> which needs to respond to\n#pos, #eof?, #read, #getc and #pos=\n",null,0],["new","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-c-new","(header, io)","<p>Creates a new tar entry for <code>header</code> that will be read from\n<code>io</code>\n",null,0],["new","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-c-new","(io)","<p>Creates a new TarWriter that will write to <code>io</code>\n",null,0],["new","Gem::Package::TarWriter","Ruby/classes/Gem/Package/TarWriter.html#method-c-new","(io)","<p>Creates a new TarWriter, yielding it if a block is given\n",null,0],["new","Gem::Package::TarWriter::BoundedStream","Ruby/classes/Gem/Package/TarWriter/BoundedStream.html#method-c-new","(io, limit)","<p>Wraps <code>io</code> and allows up to <code>limit</code> bytes to be\nwritten\n",null,0],["new","Gem::Package::TarWriter::RestrictedStream","Ruby/classes/Gem/Package/TarWriter/RestrictedStream.html#method-c-new","(io)","<p>Creates a new RestrictedStream wrapping <code>io</code>\n",null,0],["new","Gem::PackageTask","Ruby/classes/Gem/PackageTask.html#method-c-new","(gem_spec)","<p>Create a Gem Package task library.  Automatically define the gem if a block\nis given.  If no block is …\n",null,0],["new","Gem::PathSupport","Ruby/classes/Gem/PathSupport.html#method-c-new","(env=ENV)","<p>Constructor. Takes a single argument which is to be treated like a\nhashtable, or defaults to ENV, the …\n",null,0],["new","Gem::Platform","Ruby/classes/Gem/Platform.html#method-c-new","(arch)","",null,0],["new","Gem::PlatformMismatch","Ruby/classes/Gem/PlatformMismatch.html#method-c-new","(name, version)","",null,0],["new","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-c-new","(proxy=nil, dns=Resolv::DNS.new)","<p>Initialize a remote fetcher using the source URI and possible proxy\ninformation.\n<p><code>proxy</code>\n<p>[String]: explicit …\n",null,0],["new","Gem::RemoteFetcher::FetchError","Ruby/classes/Gem/RemoteFetcher/FetchError.html#method-c-new","(message, uri)","",null,0],["new","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-c-new","(*deps)","",null,0],["new","Gem::RequestSet::GemDepedencyAPI","Ruby/classes/Gem/RequestSet/GemDepedencyAPI.html#method-c-new","(set, path)","",null,0],["new","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-c-new","(*requirements)","<p>Constructs a requirement from <code>requirements</code>. Requirements can\nbe Strings, Gem::Versions, or Arrays of …\n",null,0],["new","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-c-new","(*requirements)","<p>Constructs a requirement from <code>requirements</code>. Requirements can\nbe Strings, Gem::Versions, or Arrays of …\n",null,0],["new","Gem::Security::Policy","Ruby/classes/Gem/Security/Policy.html#method-c-new","(name, policy = {})","<p>Create a new Gem::Security::Policy object with the given mode and options.\n",null,0],["new","Gem::Security::Signer","Ruby/classes/Gem/Security/Signer.html#method-c-new","(key, cert_chain)","<p>Creates a new signer with an RSA <code>key</code> or path to a key, and a\ncertificate <code>chain</code> containing X509 certificates, …\n",null,0],["new","Gem::Security::TrustDir","Ruby/classes/Gem/Security/TrustDir.html#method-c-new","(dir, permissions = DEFAULT_PERMISSIONS)","",null,0],["new","Gem::Server","Ruby/classes/Gem/Server.html#method-c-new","(gem_dirs, port, daemon, launch = nil, addresses = nil)","",null,0],["new","Gem::SilentUI","Ruby/classes/Gem/SilentUI.html#method-c-new","()","",null,0],["new","Gem::Source","Ruby/classes/Gem/Source.html#method-c-new","(uri)","",null,0],["new","Gem::Source::Local","Ruby/classes/Gem/Source/Local.html#method-c-new","()","",null,0],["new","Gem::Source::SpecificFile","Ruby/classes/Gem/Source/SpecificFile.html#method-c-new","(file)","",null,0],["new","Gem::SourceFetchProblem","Ruby/classes/Gem/SourceFetchProblem.html#method-c-new","(source, error)","",null,0],["new","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-c-new","()","",null,0],["new","Gem::SpecFetcher","Ruby/classes/Gem/SpecFetcher.html#method-c-new","()","",null,0],["new","Gem::SpecificGemNotFoundException","Ruby/classes/Gem/SpecificGemNotFoundException.html#method-c-new","(name, version, errors=nil)","",null,0],["new","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-new","(name = nil, version = nil)","<p>Specification constructor. Assigns the default values to the attributes and\nyields itself for further …\n",null,0],["new","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-c-new","(in_stream, out_stream, err_stream=STDERR, usetty=true)","",null,0],["new","Gem::StreamUI::SilentDownloadReporter","Ruby/classes/Gem/StreamUI/SilentDownloadReporter.html#method-c-new","(out_stream, *args)","",null,0],["new","Gem::StreamUI::SilentProgressReporter","Ruby/classes/Gem/StreamUI/SilentProgressReporter.html#method-c-new","(out_stream, size, initial_message, terminal_message = nil)","",null,0],["new","Gem::StreamUI::SimpleProgressReporter","Ruby/classes/Gem/StreamUI/SimpleProgressReporter.html#method-c-new","(out_stream, size, initial_message, terminal_message = \"complete\")","",null,0],["new","Gem::StreamUI::VerboseDownloadReporter","Ruby/classes/Gem/StreamUI/VerboseDownloadReporter.html#method-c-new","(out_stream, *args)","",null,0],["new","Gem::StreamUI::VerboseProgressReporter","Ruby/classes/Gem/StreamUI/VerboseProgressReporter.html#method-c-new","(out_stream, size, initial_message, terminal_message = 'complete')","",null,0],["new","Gem::SystemExitException","Ruby/classes/Gem/SystemExitException.html#method-c-new","(exit_code)","",null,0],["new","Gem::Uninstaller","Ruby/classes/Gem/Uninstaller.html#method-c-new","(gem, options = {})","<p>Constructs an uninstaller that will uninstall <code>gem</code>\n",null,0],["new","Gem::UnsatisfiableDepedencyError","Ruby/classes/Gem/UnsatisfiableDepedencyError.html#method-c-new","(dep)","",null,0],["new","Gem::Validator","Ruby/classes/Gem/Validator.html#method-c-new","()","",null,0],["new","Gem::Version","Ruby/classes/Gem/Version.html#method-c-new","(version)","<p>Constructs a Version from the <code>version</code> string.  A version\nstring is a series of digits or ASCII letters …\n",null,0],["new","GetoptLong","Ruby/classes/GetoptLong.html#method-c-new","(*arguments)","<p>Set up option processing.\n<p>The options to support are passed to new() as an array of arrays. Each\nsub-array …\n",null,0],["new","Hash","Ruby/classes/Hash.html#method-c-new","(p1 = v1)","<p>Returns a new, empty hash. If this hash is subsequently accessed by a key\nthat doesn&#39;t correspond …\n",null,0],["new","HttpServer","Ruby/classes/HttpServer.html#method-c-new","(handle_obj, port = 8080, host = DEFAULT_HOST, maxConnections = 4, stdlog = $stdout, audit = true, debug = true)","<p><code>handle_obj</code> specifies the object, that receives calls from\n<code>request_handler</code> and <code>ip_auth_handler</code>\n",null,0],["new","HttpServer::Request","Ruby/classes/HttpServer/Request.html#method-c-new","(data, method=nil, path=nil, proto=nil)","",null,0],["new","HttpServer::Response","Ruby/classes/HttpServer/Response.html#method-c-new","(status=200)","",null,0],["new","HttpServer::Table","Ruby/classes/HttpServer/Table.html#method-c-new","(hash={})","",null,0],["new","IO","Ruby/classes/IO.html#method-c-new","(p1, p2 = v2, p3 = {})","<p>Returns a new IO object (a stream) for the given integer file descriptor\n<code>fd</code> and <code>mode</code> string.  <code>opt</code> may …\n",null,0],["new","IPAddr","Ruby/classes/IPAddr.html#method-c-new","(addr = '::', family = Socket::AF_UNSPEC)","<p>Creates a new ipaddr object either from a human readable IP address\nrepresentation in string, or from …\n",null,0],["new","IRB::Context","Ruby/classes/IRB/Context.html#method-c-new","(irb, workspace = nil, input_method = nil, output_method = nil)","<p>Creates a new IRB context.\n<p>The optional <code>input_method</code> argument:\n<p><code>nil</code> &mdash; uses stdin or Readline\n",null,0],["new","IRB::FileInputMethod","Ruby/classes/IRB/FileInputMethod.html#method-c-new","(file)","<p>Creates a new input method object\n",null,0],["new","IRB::Frame","Ruby/classes/IRB/Frame.html#method-c-new","()","<p>Creates a new stack frame\n",null,0],["new","IRB::InputMethod","Ruby/classes/IRB/InputMethod.html#method-c-new","(file = STDIN_FILE_NAME)","<p>Creates a new input method object\n",null,0],["new","IRB::Inspector","Ruby/classes/IRB/Inspector.html#method-c-new","(inspect_proc, init_proc = nil)","<p>Creates a new inspector object, using the given <code>inspect_proc</code>\nwhen output return values in irb.\n",null,0],["new","IRB::Irb","Ruby/classes/IRB/Irb.html#method-c-new","(workspace = nil, input_method = nil, output_method = nil)","<p>Creates a new irb session\n",null,0],["new","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-c-new","()","<p>Creates a new JobManager object\n",null,0],["new","IRB::Locale","Ruby/classes/IRB/Locale.html#method-c-new","(locale = nil)","",null,0],["new","IRB::Notifier::AbstractNotifier","Ruby/classes/IRB/Notifier/AbstractNotifier.html#method-c-new","(prefix, base_notifier)","<p>Creates a new Notifier object\n",null,0],["new","IRB::Notifier::CompositeNotifier","Ruby/classes/IRB/Notifier/CompositeNotifier.html#method-c-new","(prefix, base_notifier)","<p>Create a new composite notifier object with the given <code>prefix</code>,\nand <code>base_notifier</code> to use for output.\n",null,0],["new","IRB::Notifier::LeveledNotifier","Ruby/classes/IRB/Notifier/LeveledNotifier.html#method-c-new","(base, level, prefix)","<p>Create a new leveled notifier with the given <code>base</code>, and\n<code>prefix</code> to send to AbstractNotifier.new\n<p>The given …\n",null,0],["new","IRB::Notifier::NoMsgNotifier","Ruby/classes/IRB/Notifier/NoMsgNotifier.html#method-c-new","()","<p>Creates a new notifier that should not be used to output messages.\n",null,0],["new","IRB::ReadlineInputMethod","Ruby/classes/IRB/ReadlineInputMethod.html#method-c-new","()","<p>Creates a new input method object using Readline\n",null,0],["new","IRB::StdioInputMethod","Ruby/classes/IRB/StdioInputMethod.html#method-c-new","()","<p>Creates a new input method object\n",null,0],["new","IRB::WorkSpace","Ruby/classes/IRB/WorkSpace.html#method-c-new","(*main)","<p>Creates a new workspace.\n<p>set self to main if specified, otherwise inherit main from\nTOPLEVEL_BINDING. …\n",null,0],["new","Logger","Ruby/classes/Logger.html#method-c-new","(logdev, shift_age = 0, shift_size = 1048576)","<p>Args\n<p><code>logdev</code> &mdash; The log device.  This is a filename (String) or IO object (typically\n<code>STDOUT</code>, <code>STDERR</code>, or an …\n",null,0],["new","Logger::Application","Ruby/classes/Logger/Application.html#method-c-new","(appname = nil)","<p>Args\n<p><code>appname</code> &mdash; Name of the application.\n\n<p>Description\n",null,0],["new","Logger::Formatter","Ruby/classes/Logger/Formatter.html#method-c-new","()","",null,0],["new","Logger::LogDevice","Ruby/classes/Logger/LogDevice.html#method-c-new","(log = nil, opt = {})","",null,0],["new","Matrix","Ruby/classes/Matrix.html#method-c-new","(rows, column_count = rows[0].size)","<p>Matrix.new is private; use Matrix.rows, columns, [], etc… to create.\n",null,0],["new","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-c-new","(a)","<p>Constructs the eigenvalue decomposition for a square matrix <code>A</code>\n",null,0],["new","Matrix::LUPDecomposition","Ruby/classes/Matrix/LUPDecomposition.html#method-c-new","(a)","",null,0],["new","Module","Ruby/classes/Module.html#method-c-new","()","<p>Creates a new anonymous module. If a block is given, it is passed the\nmodule object, and the block is …\n",null,0],["new","MonitorMixin","Ruby/classes/MonitorMixin.html#method-c-new","(*args)","<p>Use <code>extend MonitorMixin</code> or <code>include MonitorMixin</code>\ninstead of this constructor.  Have look at the examples …\n",null,0],["new","MonitorMixin::ConditionVariable","Ruby/classes/MonitorMixin/ConditionVariable.html#method-c-new","(monitor)","",null,0],["new","Mutex","Ruby/classes/Mutex.html#method-c-new","()","<p>Creates a new Mutex\n",null,0],["new","NameError","Ruby/classes/NameError.html#method-c-new","(*args)","<p>Construct a new NameError exception. If given the <em>name</em> parameter\nmay subsequently be examined using the …\n",null,0],["new","Net::FTP","Ruby/classes/Net/FTP.html#method-c-new","(host = nil, user = nil, passwd = nil, acct = nil)","<p>Creates and returns a new <code>FTP</code> object. If a <code>host</code>\nis given, a connection is made. Additionally, if the …\n",null,0],["new","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-new","(address, port = nil, p_addr = :ENV, p_port = nil, p_user = nil, p_pass = nil)","<p>Creates a new Net::HTTP object without opening a TCP connection or HTTP\nsession.\n<p>The <code>address</code> should be …\n",null,0],["new","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-new","(address, port = nil)","<p>Creates a new Net::HTTP object for the specified server address, without\nopening the TCP connection or …\n",null,0],["new","Net::HTTPGenericRequest","Ruby/classes/Net/HTTPGenericRequest.html#method-c-new","(m, reqbody, resbody, uri_or_path, initheader = nil)","",null,0],["new","Net::HTTPRequest","Ruby/classes/Net/HTTPRequest.html#method-c-new","(path, initheader = nil)","<p>Creates an HTTP request object for <code>path</code>.\n<p><code>initheader</code> are the default headers to use.  Net::HTTP adds\nAccept-Encoding …\n",null,0],["new","Net::IMAP","Ruby/classes/Net/IMAP.html#method-c-new","(host, port_or_options = {}, usessl = false, certs = nil, verify = true)","<p>Creates a new Net::IMAP object and connects it to the specified\n<code>host</code>.\n<p><code>options</code> is an option hash, each …\n",null,0],["new","Net::IMAP::CramMD5Authenticator","Ruby/classes/Net/IMAP/CramMD5Authenticator.html#method-c-new","(user, password)","",null,0],["new","Net::IMAP::DigestMD5Authenticator","Ruby/classes/Net/IMAP/DigestMD5Authenticator.html#method-c-new","(user, password, authname = nil)","",null,0],["new","Net::IMAP::LoginAuthenticator","Ruby/classes/Net/IMAP/LoginAuthenticator.html#method-c-new","(user, password)","",null,0],["new","Net::IMAP::PlainAuthenticator","Ruby/classes/Net/IMAP/PlainAuthenticator.html#method-c-new","(user, password)","",null,0],["new","Net::IMAP::ResponseError","Ruby/classes/Net/IMAP/ResponseError.html#method-c-new","(response)","",null,0],["new","Net::InternetMessageIO::WriteAdapter","Ruby/classes/Net/InternetMessageIO/WriteAdapter.html#method-c-new","(socket, method)","",null,0],["new","Net::POP3","Ruby/classes/Net/POP3.html#method-c-new","(addr, port = nil, isapop = false)","<p>Creates a new POP3 object.\n<p><code>address</code> is the hostname or ip address of your POP3 server.\n<p>The optional <code>port</code> …\n",null,0],["new","Net::SMTP","Ruby/classes/Net/SMTP.html#method-c-new","(address, port = nil)","<p>Creates a new Net::SMTP object.\n<p><code>address</code> is the hostname or ip address of your SMTP server. \n<code>port</code> is the …\n",null,0],["new","Net::SMTP::Response","Ruby/classes/Net/SMTP/Response.html#method-c-new","(status, string)","<p>Creates a new instance of the Response class and sets the status and string\nattributes\n",null,0],["new","Net::Telnet","Ruby/classes/Net/Telnet.html#method-c-new","(options)","<p>Creates a new Net::Telnet object.\n<p>Attempts to connect to the host (unless the Proxy option is provided: …\n",null,0],["new","NoMethodError","Ruby/classes/NoMethodError.html#method-c-new","(*args)","<p>Construct a NoMethodError exception for a method of the given name called\nwith the given arguments.  …\n",null,0],["new","OLEProperty","Ruby/classes/OLEProperty.html#method-c-new","(obj, dispid, gettypes, settypes)","",null,0],["new","OpenSSL::ASN1::ASN1Data","Ruby/classes/OpenSSL/ASN1/ASN1Data.html#method-c-new","(p1, p2, p3)","<p><code>value</code>: Please have a look at Constructive and Primitive to see\nhow Ruby types are mapped to ASN.1 types …\n",null,0],["new","OpenSSL::ASN1::Constructive","Ruby/classes/OpenSSL/ASN1/Constructive.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p><code>value</code>: is mandatory.\n<p><code>tag</code>: optional, may be specified for tagged values. If no\n<code>tag</code> is specified, the UNIVERSAL …\n",null,0],["new","OpenSSL::ASN1::Primitive","Ruby/classes/OpenSSL/ASN1/Primitive.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p><code>value</code>: is mandatory.\n<p><code>tag</code>: optional, may be specified for tagged values. If no\n<code>tag</code> is specified, the UNIVERSAL …\n",null,0],["new","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-c-new","(p1, p2 = v2)","",null,0],["new","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-c-new","(*args)","",null,0],["new","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-c-new","(p1)","<p>The string must contain a valid cipher name like “AES-128-CBC” or “3DES”.\n<p>A list of …\n",null,0],["new","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-c-new","(filename = nil)","",null,0],["new","OpenSSL::Digest","Ruby/classes/OpenSSL/Digest.html#method-c-new","(p1, p2 = v2)","<p>Creates a Digest instance based on <code>string</code>, which is either the\nln (long name) or sn (short name) of a …\n",null,0],["new","OpenSSL::Digest::Digest","Ruby/classes/OpenSSL/Digest/Digest.html#method-c-new","(*args)","",null,0],["new","OpenSSL::HMAC","Ruby/classes/OpenSSL/HMAC.html#method-c-new","(p1, p2)","",null,0],["new","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-c-new","(p1 = v1)","<p>Parameters\n<p><code>request</code> - optional raw request, either in PEM or DER format.\n\n",null,0],["new","OpenSSL::OCSP::BasicResponse","Ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-c-new","(*args)","",null,0],["new","OpenSSL::OCSP::CertificateId","Ruby/classes/OpenSSL/OCSP/CertificateId.html#method-c-new","(p1, p2, p3 = v3)","",null,0],["new","OpenSSL::OCSP::Request","Ruby/classes/OpenSSL/OCSP/Request.html#method-c-new","(p1 = v1)","",null,0],["new","OpenSSL::OCSP::Response","Ruby/classes/OpenSSL/OCSP/Response.html#method-c-new","(p1 = v1)","",null,0],["new","OpenSSL::PKCS12","Ruby/classes/OpenSSL/PKCS12.html#method-c-new","(p1 = v1, p2 = v2)","<p>Parameters\n<p><code>str</code> - Must be a DER encoded PKCS12 string.\n<p><code>pass</code> - string\n",null,0],["new","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-c-new","(p1 = v1)","<p>Many methods in this class aren&#39;t documented.\n",null,0],["new","OpenSSL::PKCS7::RecipientInfo","Ruby/classes/OpenSSL/PKCS7/RecipientInfo.html#method-c-new","(p1)","",null,0],["new","OpenSSL::PKCS7::SignerInfo","Ruby/classes/OpenSSL/PKCS7/SignerInfo.html#method-c-new","(p1, p2, p3)","",null,0],["new","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-c-new","(p1 = v1, p2 = v2)","<p>Either generates a DH instance from scratch or by reading already existing\nDH parameters from <code>string</code> …\n",null,0],["new","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-c-new","(p1 = v1, p2 = v2)","<p>Creates a new DSA instance by reading an existing key from\n<code>string</code>.\n<p>Parameters\n<p><code>size</code> is an integer representing …\n",null,0],["new","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-c-new","(p1 = v1, p2 = v2)","<p>See the OpenSSL documentation for:\n\n<pre><code>EC_KEY_*</code></pre>\n",null,0],["new","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>See the OpenSSL documentation for EC_GROUP_*\n",null,0],["new","OpenSSL::PKey::EC::Point","Ruby/classes/OpenSSL/PKey/EC/Point.html#method-c-new","(p1, p2 = v2)","<p>See the OpenSSL documentation for EC_POINT_*\n",null,0],["new","OpenSSL::PKey::PKey","Ruby/classes/OpenSSL/PKey/PKey.html#method-c-new","()","<p>Because PKey is an abstract class, actually calling this method explicitly\nwill raise a <code>NotImplementedError</code> …\n",null,0],["new","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-c-new","(p1 = v1, p2 = v2)","<p>Generates or loads an RSA keypair.  If an integer <code>key_size</code> is\ngiven it represents the desired key size. …\n",null,0],["new","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-c-new","(p1 = v1, p2 = v2)","<p>Generates or loads an RSA keypair.  If an integer <code>key_size</code> is\ngiven it represents the desired key size. …\n",null,0],["new","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-c-new","(p1 = v1)","<p>You can get a list of valid methods with OpenSSL::SSL::SSLContext::METHODS\n",null,0],["new","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-c-new","(p1, p2 = v2)","<p>Creates a new SSL socket from <code>io</code> which must be a real ruby\nobject (not an IO-like object that responds …\n",null,0],["new","OpenSSL::SSL::Session","Ruby/classes/OpenSSL/SSL/Session.html#method-c-new","(p1)","<p>Parameters\n<p><code>SSLSocket</code> is an OpenSSL::SSL::SSLSocket <code>string</code>\nmust be a DER or PEM encoded Session.\n",null,0],["new","OpenSSL::X509::Attribute","Ruby/classes/OpenSSL/X509/Attribute.html#method-c-new","(p1, p2 = v2)","",null,0],["new","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-c-new","(p1 = v1)","",null,0],["new","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-c-new","(p1 = v1)","",null,0],["new","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Creates an X509 extension.\n<p>The extension may be created from <code>asn1</code> data or from an\nextension <code>name</code> and  …\n",null,0],["new","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","",null,0],["new","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-c-new","(p1 = v1, p2 = v2)","<p>Creates a new Name.\n<p>A name may be created from a DER encoded string <code>der</code>, an Array\nrepresenting a <code>distinguished_name</code> …\n",null,0],["new","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-c-new","(p1 = v1)","",null,0],["new","OpenSSL::X509::Revoked","Ruby/classes/OpenSSL/X509/Revoked.html#method-c-new","(*args)","",null,0],["new","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-c-new","(*args)","",null,0],["new","OpenStruct","Ruby/classes/OpenStruct.html#method-c-new","(hash=nil)","<p>Creates a new OpenStruct object.  By default, the resulting OpenStruct\nobject will have no attributes. …\n",null,0],["new","OpenURI::HTTPError","Ruby/classes/OpenURI/HTTPError.html#method-c-new","(message, io)","",null,0],["new","OpenURI::HTTPRedirect","Ruby/classes/OpenURI/HTTPRedirect.html#method-c-new","(message, io, uri)","",null,0],["new","OptionParser","Ruby/classes/OptionParser.html#method-i-new","()","<p>Pushes a new List.\n",null,0],["new","OptionParser","Ruby/classes/OptionParser.html#method-c-new","(banner = nil, width = 32, indent = ' ' * 4)","<p>Initializes the instance and yields itself if called with a block.\n<p><code>banner</code> &mdash; Banner message.\n<p><code>width</code> &mdash; Summary …\n",null,0],["new","OptionParser::Arguable","Ruby/classes/OptionParser/Arguable.html#method-c-new","(*args)","",null,0],["new","OptionParser::List","Ruby/classes/OptionParser/List.html#method-c-new","()","<p>Just initializes all instance variables.\n",null,0],["new","OptionParser::ParseError","Ruby/classes/OptionParser/ParseError.html#method-c-new","(*args)","",null,0],["new","OptionParser::Switch","Ruby/classes/OptionParser/Switch.html#method-c-new","(pattern = nil, conv = nil, short = nil, long = nil, arg = nil, desc = ([] if short or long), block = Proc.new)","",null,0],["new","PStore","Ruby/classes/PStore.html#method-c-new","(file, thread_safe = false)","<p>To construct a PStore object, pass in the <em>file</em> path where you\nwould like the data to be stored.\n<p>PStore …\n",null,0],["new","Pathname","Ruby/classes/Pathname.html#method-c-new","(p1)","<p>Create a Pathname object from the given String (or String-like object). If\n<code>path</code> contains a NULL character …\n",null,0],["new","PrettyPrint","Ruby/classes/PrettyPrint.html#method-c-new","(output='', maxwidth=79, newline=\"\\n\", &genspace)","<p>Creates a buffer for pretty printing.\n<p><code>output</code> is an output target. If it is not specified, &#39;&#39;\nis …\n",null,0],["new","PrettyPrint::Breakable","Ruby/classes/PrettyPrint/Breakable.html#method-c-new","(sep, width, q)","",null,0],["new","PrettyPrint::Group","Ruby/classes/PrettyPrint/Group.html#method-c-new","(depth)","",null,0],["new","PrettyPrint::GroupQueue","Ruby/classes/PrettyPrint/GroupQueue.html#method-c-new","(*groups)","",null,0],["new","PrettyPrint::SingleLine","Ruby/classes/PrettyPrint/SingleLine.html#method-c-new","(output, maxwidth=nil, newline=nil)","",null,0],["new","PrettyPrint::Text","Ruby/classes/PrettyPrint/Text.html#method-c-new","()","",null,0],["new","Prime","Ruby/classes/Prime.html#method-c-new","()","<p>obsolete. Use <code>Prime</code>::<code>instance</code> or class methods of\n<code>Prime</code>.\n",null,0],["new","Prime::EratosthenesGenerator","Ruby/classes/Prime/EratosthenesGenerator.html#method-c-new","()","",null,0],["new","Prime::Generator23","Ruby/classes/Prime/Generator23.html#method-c-new","()","",null,0],["new","Prime::PseudoPrimeGenerator","Ruby/classes/Prime/PseudoPrimeGenerator.html#method-c-new","(ubound = nil)","",null,0],["new","Prime::TrialDivisionGenerator","Ruby/classes/Prime/TrialDivisionGenerator.html#method-c-new","()","",null,0],["new","Proc","Ruby/classes/Proc.html#method-c-new","(*args)","<p>Creates a new <code>Proc</code> object, bound to the current context.\n<code>Proc::new</code> may be called without a block only …\n",null,0],["new","Psych::Coder","Ruby/classes/Psych/Coder.html#method-c-new","(tag)","",null,0],["new","Psych::Handler::DumperOptions","Ruby/classes/Psych/Handler/DumperOptions.html#method-c-new","()","",null,0],["new","Psych::Handlers::Recorder","Ruby/classes/Psych/Handlers/Recorder.html#method-c-new","()","",null,0],["new","Psych::Nodes::Alias","Ruby/classes/Psych/Nodes/Alias.html#method-c-new","(anchor)","<p>Create a new Alias that points to an <code>anchor</code>\n",null,0],["new","Psych::Nodes::Document","Ruby/classes/Psych/Nodes/Document.html#method-c-new","(version = [], tag_directives = [], implicit = false)","<p>Create a new Psych::Nodes::Document object.\n<p><code>version</code> is a list indicating the YAML version.\n<code>tags_directives</code> …\n",null,0],["new","Psych::Nodes::Mapping","Ruby/classes/Psych/Nodes/Mapping.html#method-c-new","(anchor = nil, tag = nil, implicit = true, style = BLOCK)","<p>Create a new Psych::Nodes::Mapping object.\n<p><code>anchor</code> is the anchor associated with the map or\n<code>nil</code>. <code>tag</code> is …\n",null,0],["new","Psych::Nodes::Node","Ruby/classes/Psych/Nodes/Node.html#method-c-new","()","<p>Create a new Psych::Nodes::Node\n",null,0],["new","Psych::Nodes::Scalar","Ruby/classes/Psych/Nodes/Scalar.html#method-c-new","(value, anchor = nil, tag = nil, plain = true, quoted = false, style = ANY)","<p>Create a new Psych::Nodes::Scalar object.\n<p><code>value</code> is the string value of the scalar <code>anchor</code> is\nan associated …\n",null,0],["new","Psych::Nodes::Sequence","Ruby/classes/Psych/Nodes/Sequence.html#method-c-new","(anchor = nil, tag = nil, implicit = true, style = BLOCK)","<p>Create a new object representing a YAML sequence.\n<p><code>anchor</code> is the anchor associated with the sequence or …\n",null,0],["new","Psych::Nodes::Stream","Ruby/classes/Psych/Nodes/Stream.html#method-c-new","(encoding = UTF8)","<p>Create a new Psych::Nodes::Stream node with an <code>encoding</code> that\ndefaults to Psych::Nodes::Stream::UTF8. …\n",null,0],["new","Psych::Parser","Ruby/classes/Psych/Parser.html#method-c-new","(handler = Handler.new)","<p>Creates a new Psych::Parser instance with <code>handler</code>.  YAML\nevents will be called on <code>handler</code>.  See Psych::Parser …\n",null,0],["new","Psych::ScalarScanner","Ruby/classes/Psych/ScalarScanner.html#method-c-new","()","<p>Create a new scanner\n",null,0],["new","Psych::Streaming","Ruby/classes/Psych/Streaming.html#method-c-new","(io)","<p>Create a new streaming emitter.  Emitter will print to <code>io</code>. \nSee Psych::Stream for an example.\n",null,0],["new","Psych::SyntaxError","Ruby/classes/Psych/SyntaxError.html#method-c-new","(file, line, col, offset, problem, context)","",null,0],["new","Psych::TreeBuilder","Ruby/classes/Psych/TreeBuilder.html#method-c-new","()","<p>Create a new TreeBuilder instance\n",null,0],["new","Psych::Visitors::DepthFirst","Ruby/classes/Psych/Visitors/DepthFirst.html#method-c-new","(block)","",null,0],["new","Psych::Visitors::Emitter","Ruby/classes/Psych/Visitors/Emitter.html#method-c-new","(io, options = {})","",null,0],["new","Psych::Visitors::JSONTree","Ruby/classes/Psych/Visitors/JSONTree.html#method-c-new","(options = {})","",null,0],["new","Psych::Visitors::ToRuby","Ruby/classes/Psych/Visitors/ToRuby.html#method-c-new","(ss = ScalarScanner.new)","",null,0],["new","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-c-new","(options = {})","",null,0],["new","Queue","Ruby/classes/Queue.html#method-c-new","()","<p>Creates a new queue.\n",null,0],["new","RDoc::Alias","Ruby/classes/RDoc/Alias.html#method-c-new","(text, old_name, new_name, comment, singleton = false)","<p>Creates a new Alias with a token stream of <code>text</code> that aliases\n<code>old_name</code> to <code>new_name</code>, has <code>comment</code>\nand is …\n",null,0],["new","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-c-new","(text, name)","<p>Creates a new AnyMethod with a token stream <code>text</code> and\n<code>name</code>\n",null,0],["new","RDoc::Attr","Ruby/classes/RDoc/Attr.html#method-c-new","(text, name, rw, comment, singleton = false)","<p>Creates a new Attr with body <code>text</code>, <code>name</code>,\nread/write status <code>rw</code> and <code>comment</code>. \n<code>singleton</code> marks this as a …\n",null,0],["new","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-c-new","(name, superclass = nil)","<p>Creates a new ClassModule with <code>name</code> with optional\n<code>superclass</code>\n<p>This is a constructor for subclasses, and …\n",null,0],["new","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-c-new","()","<p>Creates a new CodeObject that will document itself and its children\n",null,0],["new","RDoc::Comment","Ruby/classes/RDoc/Comment.html#method-c-new","(text = nil, location = nil)","<p>Creates a new comment with <code>text</code> that is found in the\nRDoc::TopLevel <code>location</code>.\n",null,0],["new","RDoc::Constant","Ruby/classes/RDoc/Constant.html#method-c-new","(name, value, comment)","<p>Creates a new constant with <code>name</code>, <code>value</code> and\n<code>comment</code>\n",null,0],["new","RDoc::Context","Ruby/classes/RDoc/Context.html#method-c-new","()","<p>Creates an unnamed empty context with public current visibility\n",null,0],["new","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-c-new","(parent, title, comment)","<p>Creates a new section with <code>title</code> and <code>comment</code>\n",null,0],["new","RDoc::CrossReference","Ruby/classes/RDoc/CrossReference.html#method-c-new","(context)","<p>Allows cross-references to be created based on the given\n<code>context</code> (RDoc::Context).\n",null,0],["new","RDoc::ERBIO","Ruby/classes/RDoc/ERBIO.html#method-c-new","(str, safe_level = nil, trim_mode = nil, eoutvar = 'io')","<p>Defaults <code>eoutvar</code> to &#39;io&#39;, otherwise is identical to\nERB&#39;s initialize\n",null,0],["new","RDoc::Extend","Ruby/classes/RDoc/Extend.html#method-c-new","(name, comment)","<p>Creates a new Extend for <code>name</code> with <code>comment</code>\n",null,0],["new","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-c-new","(store, options)","<p>Initialize a few instance variables before we start\n",null,0],["new","RDoc::Generator::JsonIndex","Ruby/classes/RDoc/Generator/JsonIndex.html#method-c-new","(parent_generator, options)","<p>Creates a new generator.  <code>parent_generator</code> is used to\ndetermine the class_dir and file_dir of links in …\n",null,0],["new","RDoc::Include","Ruby/classes/RDoc/Include.html#method-c-new","(name, comment)","<p>Creates a new Include for <code>name</code> with <code>comment</code>\n",null,0],["new","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-c-new","(extensions = DEFAULT_EXTENSIONS, debug = false)","<p>Creates a new markdown parser that enables the given\n<code>extensions</code>.\n",null,0],["new","RDoc::Markup","Ruby/classes/RDoc/Markup.html#method-c-new","(attribute_manager = nil)","<p>Take a block of text and use various heuristics to determine its structure\n(paragraphs, lists, and so …\n",null,0],["new","RDoc::Markup::AttrSpan","Ruby/classes/RDoc/Markup/AttrSpan.html#method-c-new","(length)","<p>Creates a new AttrSpan for <code>length</code> characters\n",null,0],["new","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-c-new","()","<p>Creates a new attribute manager that understands bold, emphasized and\nteletype text.\n",null,0],["new","RDoc::Markup::Attributes","Ruby/classes/RDoc/Markup/Attributes.html#method-c-new","()","<p>Creates a new attributes set.\n",null,0],["new","RDoc::Markup::BlankLine","Ruby/classes/RDoc/Markup/BlankLine.html#method-c-new","()","<p>RDoc::Markup::BlankLine is a singleton\n",null,0],["new","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-c-new","(*parts)","<p>Creates a new Document with <code>parts</code>\n",null,0],["new","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-c-new","(options, markup = nil)","<p>Creates a new Formatter\n",null,0],["new","RDoc::Markup::HardBreak","Ruby/classes/RDoc/Markup/HardBreak.html#method-c-new","()","<p>RDoc::Markup::HardBreak is a singleton\n",null,0],["new","RDoc::Markup::Include","Ruby/classes/RDoc/Markup/Include.html#method-c-new","(file, include_path)","<p>Creates a new include that will import <code>file</code> from\n<code>include_path</code>\n",null,0],["new","RDoc::Markup::IndentedParagraph","Ruby/classes/RDoc/Markup/IndentedParagraph.html#method-c-new","(indent, *parts)","<p>Creates a new IndentedParagraph containing <code>parts</code> indented with\n<code>indent</code> spaces\n",null,0],["new","RDoc::Markup::List","Ruby/classes/RDoc/Markup/List.html#method-c-new","(type = nil, *items)","<p>Creates a new list of <code>type</code> with <code>items</code>.  Valid\nlist types are: <code>:BULLET</code>, <code>:LABEL</code>,\n<code>:LALPHA</code>, <code>:NOTE</code>, <code>:NUMBER</code> …\n",null,0],["new","RDoc::Markup::ListItem","Ruby/classes/RDoc/Markup/ListItem.html#method-c-new","(label = nil, *parts)","<p>Creates a new ListItem with an optional <code>label</code> containing\n<code>parts</code>\n",null,0],["new","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-c-new","()","<p>Creates a new Parser.  See also ::parse\n",null,0],["new","RDoc::Markup::PreProcess","Ruby/classes/RDoc/Markup/PreProcess.html#method-c-new","(input_file_name, include_path)","<p>Creates a new pre-processor for <code>input_file_name</code> that will look\nfor included files in <code>include_path</code>\n",null,0],["new","RDoc::Markup::Raw","Ruby/classes/RDoc/Markup/Raw.html#method-c-new","(*parts)","<p>Creates a new Raw containing <code>parts</code>\n",null,0],["new","RDoc::Markup::Special","Ruby/classes/RDoc/Markup/Special.html#method-c-new","(type, text)","<p>Creates a new special sequence of <code>type</code> with <code>text</code>\n",null,0],["new","RDoc::Markup::ToAnsi","Ruby/classes/RDoc/Markup/ToAnsi.html#method-c-new","(markup = nil)","<p>Creates a new ToAnsi visitor that is ready to output vibrant ANSI color!\n",null,0],["new","RDoc::Markup::ToBs","Ruby/classes/RDoc/Markup/ToBs.html#method-c-new","(markup = nil)","<p>Returns a new ToBs that is ready for hot backspace action!\n",null,0],["new","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-c-new","(options, markup = nil)","<p>Creates a new formatter that will output HTML\n",null,0],["new","RDoc::Markup::ToHtmlCrossref","Ruby/classes/RDoc/Markup/ToHtmlCrossref.html#method-c-new","(options, from_path, context, markup = nil)","<p>Creates a new crossref resolver that generates links relative to\n<code>context</code> which lives at <code>from_path</code> in …\n",null,0],["new","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-c-new","(options, characters = 100, paragraphs = 3, markup = nil)","<p>Creates a new ToHtmlSnippet formatter that will cut off the input on the\nnext word boundary after the …\n",null,0],["new","RDoc::Markup::ToLabel","Ruby/classes/RDoc/Markup/ToLabel.html#method-c-new","(markup = nil)","<p>Creates a new formatter that will output HTML-safe labels\n",null,0],["new","RDoc::Markup::ToMarkdown","Ruby/classes/RDoc/Markup/ToMarkdown.html#method-c-new","(markup = nil)","<p>Creates a new formatter that will output Markdown format text\n",null,0],["new","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-c-new","(markup = nil)","<p>Creates a new formatter that will output (mostly) RDoc markup\n",null,0],["new","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-c-new","(markup = nil)","<p>Creates a new tt-only formatter.\n",null,0],["new","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-c-new","(text, name)","<p>Creates a new MethodAttr from token stream <code>text</code> and method or\nattribute name <code>name</code>.\n<p>Usually this is called …\n",null,0],["new","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Creates a new Parser storing <code>top_level</code>,\n<code>file_name</code>, <code>content</code>, <code>options</code> and\n<code>stats</code> in instance variables. …\n",null,0],["new","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Prepares for parsing a C file.  See RDoc::Parser#initialize for details on\nthe arguments.\n",null,0],["new","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Creates a new Ruby parser.\n",null,0],["new","RDoc::Parser::Simple","Ruby/classes/RDoc/Parser/Simple.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Prepare to parse a plain file\n",null,0],["new","RDoc::RD::BlockParser","Ruby/classes/RDoc/RD/BlockParser.html#method-c-new","()","<p>Creates a new RDoc::RD::BlockParser.  Use #parse to parse an rd-format\ndocument.\n",null,0],["new","RDoc::RD::Inline","Ruby/classes/RDoc/RD/Inline.html#method-c-new","(rdoc, reference = rdoc)","<p>Creates a new Inline for <code>rdoc</code> and <code>reference</code>.\n<p><code>rdoc</code> may be another Inline or a String.  If\n<code>reference</code> is …\n",null,0],["new","RDoc::RD::InlineParser","Ruby/classes/RDoc/RD/InlineParser.html#method-c-new","(block_parser)","<p>Creates a new parser for inline markup in the rd format.  The\n<code>block_parser</code> is used to for footnotes and …\n",null,0],["new","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-c-new","()","<p>Creates a new RDoc::RDoc instance.  Call #document to parse files and\ngenerate documentation.\n",null,0],["new","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-c-new","(initial_options = {})","<p>Creates a new driver using <code>initial_options</code> from ::process_args\n",null,0],["new","RDoc::Require","Ruby/classes/RDoc/Require.html#method-c-new","(name, comment)","<p>Creates a new Require that loads <code>name</code> with\n<code>comment</code>\n",null,0],["new","RDoc::RubyLex","Ruby/classes/RDoc/RubyLex.html#method-c-new","(content, options)","<p>Creates a new lexer for <code>content</code>.  <code>options</code> is an\nRDoc::Options, only +tab_width is used.\n",null,0],["new","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-c-new","(spec, generate_rdoc = false, generate_ri = true)","<p>Creates a new documentation generator for <code>spec</code>.  RDoc and ri\ndata generation can be enabled or disabled …\n",null,0],["new","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-c-new","(spec, generate_rdoc = false, generate_ri = true)","<p>Creates a new documentation generator for <code>spec</code>.  RDoc and ri\ndata generation can be enabled or disabled …\n",null,0],["new","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-c-new","(server, stores, cache, mount_path = nil)","<p>Creates a new WEBrick servlet.\n<p>Use <code>mount_path</code> when mounting the servlet somewhere other than\n/.\n<p><code>server</code> …\n",null,0],["new","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-c-new","(store, num_files, verbosity = 1)","<p>Creates a new Stats that will have <code>num_files</code>. \n<code>verbosity</code> defaults to 1 which will create an\nRDoc::Stats::Normal …\n",null,0],["new","RDoc::Stats::Quiet","Ruby/classes/RDoc/Stats/Quiet.html#method-c-new","(num_files)","<p>Creates a new Quiet that will print nothing\n",null,0],["new","RDoc::Store","Ruby/classes/RDoc/Store.html#method-c-new","(path = nil, type = nil)","<p>Creates a new Store of <code>type</code> that will load or save to\n<code>path</code>\n",null,0],["new","RDoc::Store::MissingFileError","Ruby/classes/RDoc/Store/MissingFileError.html#method-c-new","(store, file, name)","<p>Creates a new MissingFileError for the missing <code>file</code> for the\ngiven <code>name</code> that should have been in the  …\n",null,0],["new","RDoc::Task","Ruby/classes/RDoc/Task.html#method-c-new","(name = :rdoc)","<p>Create an RDoc task with the given name. See the RDoc::Task class overview\nfor documentation.\n",null,0],["new","RDoc::TomDoc","Ruby/classes/RDoc/TomDoc.html#method-c-new","()","<p>Creates a new TomDoc parser.  See also RDoc::Markup::parse\n",null,0],["new","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-c-new","(absolute_name, relative_name = absolute_name)","<p>Creates a new TopLevel for the file at <code>absolute_name</code>.  If\ndocumentation is being generated outside the …\n",null,0],["new","REXML::AttlistDecl","Ruby/classes/REXML/AttlistDecl.html#method-c-new","(source)","<p>Create an AttlistDecl, pulling the information from a Source.  Notice that\nthis isn&#39;t very convenient; …\n",null,0],["new","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-c-new","( first, second=nil, parent=nil )","<p>Constructor. FIXME: The parser doesn&#39;t catch illegal characters in\nattributes\n<p>first &mdash; Either: an Attribute …\n",null,0],["new","REXML::CData","Ruby/classes/REXML/CData.html#method-c-new","( first, whitespace=true, parent=nil )","\n<pre><code>Constructor.  CData is data between &lt;![CDATA[ ... ]]&gt;</code></pre>\n<p><em>Examples</em>\n\n<pre><code>CData.new( source )\nCData.new( &quot;Here is ...</code></pre>\n",null,0],["new","REXML::Child","Ruby/classes/REXML/Child.html#method-c-new","( parent = nil )","<p>Constructor.  Any inheritors of this class should call super to make sure\nthis method is called.\n<p>parent … &mdash; ",null,0],["new","REXML::Comment","Ruby/classes/REXML/Comment.html#method-c-new","( first, second = nil )","<p>Constructor.  The first argument can be one of three types: @param first If\nString, the contents of this …\n",null,0],["new","REXML::DTD::ElementDecl","Ruby/classes/REXML/DTD/ElementDecl.html#method-c-new","(match)","<p>s*(((([“‘]).*?5)|*)*?)(/)?&gt;/um, true)\n",null,0],["new","REXML::DTD::EntityDecl","Ruby/classes/REXML/DTD/EntityDecl.html#method-c-new","(src)","<p>&lt;!ENTITY name SYSTEM “…”&gt; &lt;!ENTITY name “…”&gt;\n",null,0],["new","REXML::DTD::NotationDecl","Ruby/classes/REXML/DTD/NotationDecl.html#method-c-new","(src)","",null,0],["new","REXML::DocType","Ruby/classes/REXML/DocType.html#method-c-new","( first, parent=nil )","<p>Constructor\n\n<pre><code>dt = DocType.new( &#39;foo&#39;, &#39;-//I/Hate/External/IDs&#39; )\n# &lt;!DOCTYPE foo &#39;-//I/Hate/External/IDs&#39;&gt; ...</code></pre>\n",null,0],["new","REXML::Document","Ruby/classes/REXML/Document.html#method-c-new","( source = nil, context = {} )","<p>Constructor @param source if supplied, must be a Document, String, or IO.\nDocuments have their context …\n",null,0],["new","REXML::Element","Ruby/classes/REXML/Element.html#method-c-new","( arg = UNDEFINED, parent=nil, context=nil )","<p>Constructor\n<p>arg &mdash; if not supplied, will be set to the default value. If a String, the name of\nthis object …\n",null,0],["new","REXML::Entity","Ruby/classes/REXML/Entity.html#method-c-new","(stream, value=nil, parent=nil, reference=false)","<p>Create a new entity.  Simple entities can be constructed by passing a name,\nvalue to the constructor; …\n",null,0],["new","REXML::Formatters::Default","Ruby/classes/REXML/Formatters/Default.html#method-c-new","( ie_hack=false )","<p>Prints out the XML document with no formatting – except if id_hack is set.\n<p>ie_hack &mdash; If set to true, then …\n\n",null,0],["new","REXML::Formatters::Pretty","Ruby/classes/REXML/Formatters/Pretty.html#method-c-new","( indentation=2, ie_hack=false )","<p>Create a new pretty printer.\n<p>output &mdash; An object implementing &#39;&lt;&lt;(String)&#39;, to which the output …\n",null,0],["new","REXML::Formatters::Transitive","Ruby/classes/REXML/Formatters/Transitive.html#method-c-new","( indentation=2, ie_hack=false )","",null,0],["new","REXML::IOSource","Ruby/classes/REXML/IOSource.html#method-c-new","(arg, block_size=500, encoding=nil)","<p>block_size has been deprecated\n",null,0],["new","REXML::Instruction","Ruby/classes/REXML/Instruction.html#method-c-new","(target, content=nil)","<p>Constructs a new Instruction @param target can be one of a number of\nthings.  If String, then the target …\n",null,0],["new","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-c-new","(node=nil)","<p>Create a new element.\n",null,0],["new","REXML::Output","Ruby/classes/REXML/Output.html#method-c-new","(real_IO, encd=\"iso-8859-1\")","",null,0],["new","REXML::Parent","Ruby/classes/REXML/Parent.html#method-c-new","(parent=nil)","<p>Constructor @param parent if supplied, will be set as the parent of this\nobject\n",null,0],["new","REXML::ParseException","Ruby/classes/REXML/ParseException.html#method-c-new","( message, source=nil, parser=nil, exception=nil )","",null,0],["new","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-c-new","( source )","",null,0],["new","REXML::Parsers::LightParser","Ruby/classes/REXML/Parsers/LightParser.html#method-c-new","(stream)","",null,0],["new","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-c-new","(arg)","<p>The type of this event.  Will be one of :tag_start, :tag_end, :text,\n:processing_instruction, :comment, …\n",null,0],["new","REXML::Parsers::PullParser","Ruby/classes/REXML/Parsers/PullParser.html#method-c-new","(stream)","",null,0],["new","REXML::Parsers::SAX2Parser","Ruby/classes/REXML/Parsers/SAX2Parser.html#method-c-new","(source)","",null,0],["new","REXML::Parsers::StreamParser","Ruby/classes/REXML/Parsers/StreamParser.html#method-c-new","(source, listener)","",null,0],["new","REXML::Parsers::TreeParser","Ruby/classes/REXML/Parsers/TreeParser.html#method-c-new","( source, build_context = Document.new )","",null,0],["new","REXML::Parsers::UltraLightParser","Ruby/classes/REXML/Parsers/UltraLightParser.html#method-c-new","(stream)","",null,0],["new","REXML::Source","Ruby/classes/REXML/Source.html#method-c-new","(arg, encoding=nil)","<p>Constructor @param arg must be a String, and should be a valid XML document\n@param encoding if non-null, …\n",null,0],["new","REXML::SyncEnumerator","Ruby/classes/REXML/SyncEnumerator.html#method-c-new","(*enums)","<p>Creates a new SyncEnumerator which enumerates rows of given Enumerable\nobjects.\n",null,0],["new","REXML::Text","Ruby/classes/REXML/Text.html#method-c-new","(arg, respect_whitespace=false, parent=nil, raw=nil, entity_filter=nil, illegal=NEEDS_A_SECOND_CHECK )","<p>Constructor <code>arg</code> if a String, the content is set to the String.\nIf a Text, the object is shallowly cloned. …\n",null,0],["new","REXML::UndefinedNamespaceException","Ruby/classes/REXML/UndefinedNamespaceException.html#method-c-new","( prefix, source, parser )","",null,0],["new","REXML::Validation::Choice","Ruby/classes/REXML/Validation/Choice.html#method-c-new","(context)","",null,0],["new","REXML::Validation::Event","Ruby/classes/REXML/Validation/Event.html#method-c-new","(event_type, event_arg=nil )","",null,0],["new","REXML::Validation::Interleave","Ruby/classes/REXML/Validation/Interleave.html#method-c-new","(context)","",null,0],["new","REXML::Validation::OneOrMore","Ruby/classes/REXML/Validation/OneOrMore.html#method-c-new","(context)","",null,0],["new","REXML::Validation::Ref","Ruby/classes/REXML/Validation/Ref.html#method-c-new","(value)","",null,0],["new","REXML::Validation::RelaxNG","Ruby/classes/REXML/Validation/RelaxNG.html#method-c-new","(source)","<p>FIXME: Namespaces\n",null,0],["new","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-c-new","( context )","",null,0],["new","REXML::Validation::ValidationException","Ruby/classes/REXML/Validation/ValidationException.html#method-c-new","(msg)","",null,0],["new","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-c-new","(version=DEFAULT_VERSION, encoding=nil, standalone=nil)","",null,0],["new","REXML::XPathParser","Ruby/classes/REXML/XPathParser.html#method-c-new","( )","",null,0],["new","RSS::Atom::Entry","Ruby/classes/RSS/Atom/Entry.html#method-c-new","(version=nil, encoding=nil, standalone=nil)","<p>Creates a new Atom Entry element\n",null,0],["new","RSS::Atom::Feed","Ruby/classes/RSS/Atom/Feed.html#method-c-new","(version=nil, encoding=nil, standalone=nil)","<p>Creates a new Atom feed\n",null,0],["new","RSS::BaseParser","Ruby/classes/RSS/BaseParser.html#method-c-new","(rss)","",null,0],["new","RSS::ConversionError","Ruby/classes/RSS/ConversionError.html#method-c-new","(string, to, from)","",null,0],["new","RSS::Converter","Ruby/classes/RSS/Converter.html#method-c-new","(to_enc, from_enc=nil)","",null,0],["new","RSS::Element","Ruby/classes/RSS/Element.html#method-c-new","(do_validate=true, attrs=nil)","",null,0],["new","RSS::ITunesChannelModel::ITunesCategory","Ruby/classes/RSS/ITunesChannelModel/ITunesCategory.html#method-c-new","(*args)","",null,0],["new","RSS::ITunesChannelModel::ITunesImage","Ruby/classes/RSS/ITunesChannelModel/ITunesImage.html#method-c-new","(*args)","",null,0],["new","RSS::ITunesChannelModel::ITunesOwner","Ruby/classes/RSS/ITunesChannelModel/ITunesOwner.html#method-c-new","(*args)","",null,0],["new","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-c-new","(*args)","",null,0],["new","RSS::ImageFaviconModel::ImageFavicon","Ruby/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-c-new","(*args)","",null,0],["new","RSS::ImageItemModel::ImageItem","Ruby/classes/RSS/ImageItemModel/ImageItem.html#method-c-new","(*args)","",null,0],["new","RSS::ListenerMixin","Ruby/classes/RSS/ListenerMixin.html#method-c-new","()","",null,0],["new","RSS::Maker::Atom::Entry","Ruby/classes/RSS/Maker/Atom/Entry.html#method-c-new","(feed_version=\"1.0\")","",null,0],["new","RSS::Maker::Atom::Feed","Ruby/classes/RSS/Maker/Atom/Feed.html#method-c-new","(feed_version=\"1.0\")","",null,0],["new","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-c-new","(maker)","",null,0],["new","RSS::Maker::ItemsBase","Ruby/classes/RSS/Maker/ItemsBase.html#method-c-new","(maker)","",null,0],["new","RSS::Maker::RSS09","Ruby/classes/RSS/Maker/RSS09.html#method-c-new","(feed_version)","",null,0],["new","RSS::Maker::RSS091","Ruby/classes/RSS/Maker/RSS091.html#method-c-new","(feed_version=\"0.91\")","",null,0],["new","RSS::Maker::RSS092","Ruby/classes/RSS/Maker/RSS092.html#method-c-new","(feed_version=\"0.92\")","",null,0],["new","RSS::Maker::RSS10","Ruby/classes/RSS/Maker/RSS10.html#method-c-new","(feed_version=\"1.0\")","",null,0],["new","RSS::Maker::RSS20","Ruby/classes/RSS/Maker/RSS20.html#method-c-new","(feed_version=\"2.0\")","",null,0],["new","RSS::Maker::RSSBase","Ruby/classes/RSS/Maker/RSSBase.html#method-c-new","(feed_version)","",null,0],["new","RSS::MissingAttributeError","Ruby/classes/RSS/MissingAttributeError.html#method-c-new","(tag, attribute)","",null,0],["new","RSS::MissingTagError","Ruby/classes/RSS/MissingTagError.html#method-c-new","(tag, parent)","",null,0],["new","RSS::NSError","Ruby/classes/RSS/NSError.html#method-c-new","(tag, prefix, require_uri)","",null,0],["new","RSS::NotAvailableValueError","Ruby/classes/RSS/NotAvailableValueError.html#method-c-new","(tag, value, attribute=nil)","",null,0],["new","RSS::NotExpectedTagError","Ruby/classes/RSS/NotExpectedTagError.html#method-c-new","(tag, uri, parent)","",null,0],["new","RSS::NotExpectedTagError","Ruby/classes/RSS/NotExpectedTagError.html#method-c-new","(tag, uri, parent)","",null,0],["new","RSS::NotSetError","Ruby/classes/RSS/NotSetError.html#method-c-new","(name, variables)","",null,0],["new","RSS::NotValidXMLParser","Ruby/classes/RSS/NotValidXMLParser.html#method-c-new","(parser)","",null,0],["new","RSS::NotWellFormedError","Ruby/classes/RSS/NotWellFormedError.html#method-c-new","(line=nil, element=nil)","<p>Create a new NotWellFormedError for an error at <code>line</code> in\n<code>element</code>.  If a block is given the return value …\n",null,0],["new","RSS::OverlappedPrefixError","Ruby/classes/RSS/OverlappedPrefixError.html#method-c-new","(prefix)","",null,0],["new","RSS::Parser","Ruby/classes/RSS/Parser.html#method-c-new","(rss, parser_class=self.class.default_parser)","",null,0],["new","RSS::RDF","Ruby/classes/RSS/RDF.html#method-c-new","(version=nil, encoding=nil, standalone=nil)","",null,0],["new","RSS::RDF::Li","Ruby/classes/RSS/RDF/Li.html#method-c-new","(*args)","",null,0],["new","RSS::RDF::Li","Ruby/classes/RSS/RDF/Li.html#method-c-new","(*args)","",null,0],["new","RSS::RDF::Li","Ruby/classes/RSS/RDF/Li.html#method-c-new","(*args)","",null,0],["new","RSS::RDF::Seq","Ruby/classes/RSS/RDF/Seq.html#method-c-new","(*args)","",null,0],["new","RSS::RDF::Seq","Ruby/classes/RSS/RDF/Seq.html#method-c-new","(*args)","",null,0],["new","RSS::RootElementMixin","Ruby/classes/RSS/RootElementMixin.html#method-c-new","(feed_version, version=nil, encoding=nil, standalone=nil)","",null,0],["new","RSS::Rss","Ruby/classes/RSS/Rss.html#method-c-new","(feed_version, version=nil, encoding=nil, standalone=nil)","",null,0],["new","RSS::Rss::Channel::Cloud","Ruby/classes/RSS/Rss/Channel/Cloud.html#method-c-new","(*args)","",null,0],["new","RSS::Rss::Channel::Image","Ruby/classes/RSS/Rss/Channel/Image.html#method-c-new","(*args)","",null,0],["new","RSS::Rss::Channel::Item::Category","Ruby/classes/RSS/Rss/Channel/Item/Category.html#method-c-new","(*args)","",null,0],["new","RSS::Rss::Channel::Item::Enclosure","Ruby/classes/RSS/Rss/Channel/Item/Enclosure.html#method-c-new","(*args)","",null,0],["new","RSS::Rss::Channel::Item::Guid","Ruby/classes/RSS/Rss/Channel/Item/Guid.html#method-c-new","(*args)","",null,0],["new","RSS::Rss::Channel::Item::Source","Ruby/classes/RSS/Rss/Channel/Item/Source.html#method-c-new","(*args)","",null,0],["new","RSS::Rss::Channel::SkipDays::Day","Ruby/classes/RSS/Rss/Channel/SkipDays/Day.html#method-c-new","(*args)","",null,0],["new","RSS::Rss::Channel::SkipHours::Hour","Ruby/classes/RSS/Rss/Channel/SkipHours/Hour.html#method-c-new","(*args)","",null,0],["new","RSS::Rss::Channel::TextInput","Ruby/classes/RSS/Rss/Channel/TextInput.html#method-c-new","(*args)","",null,0],["new","RSS::TaxonomyTopicModel::TaxonomyTopic","Ruby/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html#method-c-new","(*args)","",null,0],["new","RSS::TaxonomyTopicsModel::TaxonomyTopics","Ruby/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-c-new","(*args)","",null,0],["new","RSS::TooMuchTagError","Ruby/classes/RSS/TooMuchTagError.html#method-c-new","(tag, parent)","",null,0],["new","RSS::TrackBackModel10::TrackBackAbout","Ruby/classes/RSS/TrackBackModel10/TrackBackAbout.html#method-c-new","(*args)","",null,0],["new","RSS::TrackBackModel10::TrackBackPing","Ruby/classes/RSS/TrackBackModel10/TrackBackPing.html#method-c-new","(*args)","",null,0],["new","RSS::TrackBackModel20::TrackBackAbout","Ruby/classes/RSS/TrackBackModel20/TrackBackAbout.html#method-c-new","(*args)","",null,0],["new","RSS::TrackBackModel20::TrackBackPing","Ruby/classes/RSS/TrackBackModel20/TrackBackPing.html#method-c-new","(*args)","",null,0],["new","RSS::UnknownConversionMethodError","Ruby/classes/RSS/UnknownConversionMethodError.html#method-c-new","(to, from)","",null,0],["new","RSS::UnknownConversionMethodError","Ruby/classes/RSS/UnknownConversionMethodError.html#method-c-new","(to, from)","",null,0],["new","RSS::UnknownTagError","Ruby/classes/RSS/UnknownTagError.html#method-c-new","(tag, uri)","",null,0],["new","RSS::UnsupportedMakerVersionError","Ruby/classes/RSS/UnsupportedMakerVersionError.html#method-c-new","(version)","",null,0],["new","RSS::XML::Element","Ruby/classes/RSS/XML/Element.html#method-c-new","(name, prefix=nil, uri=nil, attributes={}, children=[])","",null,0],["new","RSS::XMLParserNotFound","Ruby/classes/RSS/XMLParserNotFound.html#method-c-new","()","",null,0],["new","RSS::XMLStyleSheet","Ruby/classes/RSS/XMLStyleSheet.html#method-c-new","(*attrs)","",null,0],["new","RSS::XMLStyleSheetMixin","Ruby/classes/RSS/XMLStyleSheetMixin.html#method-c-new","(*args)","",null,0],["new","Rake::Application","Ruby/classes/Rake/Application.html#method-c-new","()","<p>Initialize a Rake::Application object.\n",null,0],["new","Rake::Application","Ruby/classes/Rake/Application.html#method-c-new","()","<p>Initialize a Rake::Application object.\n",null,0],["new","Rake::CompositePublisher","Ruby/classes/Rake/CompositePublisher.html#method-c-new","()","",null,0],["new","Rake::FileList","Ruby/classes/Rake/FileList.html#method-c-new","(*patterns)","<p>Create a file list from the globbable patterns given.  If you wish to\nperform multiple includes or excludes …\n",null,0],["new","Rake::FtpFile","Ruby/classes/Rake/FtpFile.html#method-c-new","(path, entry)","",null,0],["new","Rake::FtpUploader","Ruby/classes/Rake/FtpUploader.html#method-c-new","(path, host, account, password)","<p>Create an FTP uploader targeting the directory <code>path</code> on\n<code>host</code> using the given account and password.  <code>path</code>\n…\n",null,0],["new","Rake::InvocationChain","Ruby/classes/Rake/InvocationChain.html#method-c-new","(value, tail)","",null,0],["new","Rake::NameSpace","Ruby/classes/Rake/NameSpace.html#method-c-new","(task_manager, scope_list)","<p>Create a namespace lookup object using the given task manager and the list\nof scopes.\n",null,0],["new","Rake::PackageTask","Ruby/classes/Rake/PackageTask.html#method-c-new","(name=nil, version=nil)","<p>Create a Package Task with the given name and version.  Use\n<code>:noversion</code> as the version to build a package …\n",null,0],["new","Rake::PseudoStatus","Ruby/classes/Rake/PseudoStatus.html#method-c-new","(code=0)","",null,0],["new","Rake::RubyForgePublisher","Ruby/classes/Rake/RubyForgePublisher.html#method-c-new","(projname, user)","",null,0],["new","Rake::RuleRecursionOverflowError","Ruby/classes/Rake/RuleRecursionOverflowError.html#method-c-new","(*args)","",null,0],["new","Rake::SshDirPublisher","Ruby/classes/Rake/SshDirPublisher.html#method-c-new","(host, remote_dir, local_dir)","",null,0],["new","Rake::SshFilePublisher","Ruby/classes/Rake/SshFilePublisher.html#method-c-new","(host, remote_dir, local_dir, *files)","<p>Create a publisher using the give host information.\n",null,0],["new","Rake::Task","Ruby/classes/Rake/Task.html#method-c-new","(task_name, app)","<p>Create a task named <code>task_name</code> with no actions or\nprerequisites. Use <code>enhance</code> to add actions and prerequisites. …\n",null,0],["new","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-c-new","(names, values, parent=nil)","<p>Create a TaskArgument object with a list of named arguments (given by\n:names) and a set of associated …\n",null,0],["new","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-c-new","()","",null,0],["new","Random","Ruby/classes/Random.html#method-c-new","(p1 = v1)","<p>Creates a new PRNG using <code>seed</code> to set the initial state. If\n<code>seed</code> is omitted, the generator is initialized …\n",null,0],["new","Range","Ruby/classes/Range.html#method-c-new","(p1, p2, p3 = v3)","<p>Constructs a range using the given <code>begin</code> and <code>end</code>.\nIf the <code>exclude_end</code> parameter is omitted or is\n<code>false</code> …\n",null,0],["new","Regexp","Ruby/classes/Regexp.html#method-c-new","(*args)","<p>Constructs a new regular expression from <code>pattern</code>, which can be\neither a String or a Regexp (in which …\n",null,0],["new","Resolv","Ruby/classes/Resolv.html#method-c-new","(resolvers=[Hosts.new, DNS.new])","<p>Creates a new Resolv using <code>resolvers</code>.\n",null,0],["new","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-c-new","(config_info=nil)","<p>Creates a new DNS resolver.\n<p><code>config_info</code> can be:\n<p>nil &mdash; Uses /etc/resolv.conf.\n",null,0],["new","Resolv::DNS::Resource::DomainName","Ruby/classes/Resolv/DNS/Resource/DomainName.html#method-c-new","(name)","<p>Creates a new DomainName from <code>name</code>.\n",null,0],["new","Resolv::DNS::Resource::Generic","Ruby/classes/Resolv/DNS/Resource/Generic.html#method-c-new","(data)","<p>Creates a new generic resource.\n",null,0],["new","Resolv::DNS::Resource::HINFO","Ruby/classes/Resolv/DNS/Resource/HINFO.html#method-c-new","(cpu, os)","<p>Creates a new HINFO running <code>os</code> on <code>cpu</code>.\n",null,0],["new","Resolv::DNS::Resource::IN::A","Ruby/classes/Resolv/DNS/Resource/IN/A.html#method-c-new","(address)","<p>Creates a new A for <code>address</code>.\n",null,0],["new","Resolv::DNS::Resource::IN::AAAA","Ruby/classes/Resolv/DNS/Resource/IN/AAAA.html#method-c-new","(address)","<p>Creates a new AAAA for <code>address</code>.\n",null,0],["new","Resolv::DNS::Resource::IN::SRV","Ruby/classes/Resolv/DNS/Resource/IN/SRV.html#method-c-new","(priority, weight, port, target)","<p>Create a SRV resource record.\n<p>See the documentation for #priority, #weight, #port and #target for\n<code>priority</code> …\n",null,0],["new","Resolv::DNS::Resource::IN::WKS","Ruby/classes/Resolv/DNS/Resource/IN/WKS.html#method-c-new","(address, protocol, bitmap)","",null,0],["new","Resolv::DNS::Resource::MINFO","Ruby/classes/Resolv/DNS/Resource/MINFO.html#method-c-new","(rmailbx, emailbx)","",null,0],["new","Resolv::DNS::Resource::MX","Ruby/classes/Resolv/DNS/Resource/MX.html#method-c-new","(preference, exchange)","<p>Creates a new MX record with <code>preference</code>, accepting mail at\n<code>exchange</code>.\n",null,0],["new","Resolv::DNS::Resource::SOA","Ruby/classes/Resolv/DNS/Resource/SOA.html#method-c-new","(mname, rname, serial, refresh, retry_, expire, minimum)","<p>Creates a new SOA record.  See the attr documentation for the details of\neach argument.\n",null,0],["new","Resolv::DNS::Resource::TXT","Ruby/classes/Resolv/DNS/Resource/TXT.html#method-c-new","(first_string, *rest_strings)","",null,0],["new","Resolv::Hosts","Ruby/classes/Resolv/Hosts.html#method-c-new","(filename = DefaultFileName)","<p>Creates a new Resolv::Hosts, using <code>filename</code> for its data\nsource.\n",null,0],["new","Rinda::DRbObjectTemplate","Ruby/classes/Rinda/DRbObjectTemplate.html#method-c-new","(uri=nil, ref=nil)","<p>Creates a new DRbObjectTemplate that will match against <code>uri</code>\nand <code>ref</code>.\n",null,0],["new","Rinda::NotifyTemplateEntry","Ruby/classes/Rinda/NotifyTemplateEntry.html#method-c-new","(place, event, tuple, expires=nil)","<p>Creates a new NotifyTemplateEntry that watches <code>place</code> for\n+event+s that match <code>tuple</code>.\n",null,0],["new","Rinda::RingFinger","Ruby/classes/Rinda/RingFinger.html#method-c-new","(broadcast_list=@@broadcast_list, port=Ring_PORT)","<p>Creates a new RingFinger that will look for RingServers at\n<code>port</code> on the addresses in <code>broadcast_list</code>.\n",null,0],["new","Rinda::RingProvider","Ruby/classes/Rinda/RingProvider.html#method-c-new","(klass, front, desc, renewer = nil)","<p>Creates a RingProvider that will provide a <code>klass</code> service\nrunning on <code>front</code>, with a <code>description</code>. \n<code>renewer</code> …\n",null,0],["new","Rinda::RingServer","Ruby/classes/Rinda/RingServer.html#method-c-new","(ts, port=Ring_PORT)","<p>Advertises <code>ts</code> on the UDP broadcast address at\n<code>port</code>.\n",null,0],["new","Rinda::SimpleRenewer","Ruby/classes/Rinda/SimpleRenewer.html#method-c-new","(sec=180)","<p>Creates a new SimpleRenewer that keeps an object alive for another\n<code>sec</code> seconds.\n",null,0],["new","Rinda::Tuple","Ruby/classes/Rinda/Tuple.html#method-c-new","(ary_or_hash)","<p>Creates a new Tuple from <code>ary_or_hash</code> which must be an Array or\nHash.\n",null,0],["new","Rinda::TupleBag::TupleBin","Ruby/classes/Rinda/TupleBag/TupleBin.html#method-c-new","()","",null,0],["new","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-c-new","(ary, sec=nil)","<p>Creates a TupleEntry based on <code>ary</code> with an optional renewer or\nexpiry time <code>sec</code>.\n<p>A renewer must implement …\n",null,0],["new","Rinda::TupleSpace","Ruby/classes/Rinda/TupleSpace.html#method-c-new","(period=60)","<p>Creates a new TupleSpace.  <code>period</code> is used to control how often\nto look for dead tuples after modifications …\n",null,0],["new","Rinda::TupleSpaceProxy","Ruby/classes/Rinda/TupleSpaceProxy.html#method-c-new","(ts)","<p>Creates a new TupleSpaceProxy to wrap <code>ts</code>.\n",null,0],["new","Rinda::WaitTemplateEntry","Ruby/classes/Rinda/WaitTemplateEntry.html#method-c-new","(place, ary, expires=nil)","",null,0],["new","Ripper::Filter","Ruby/classes/Ripper/Filter.html#method-c-new","(src, filename = '-', lineno = 1)","<p>Creates a new Ripper::Filter instance, passes parameters <code>src</code>,\n<code>filename</code>, and <code>lineno</code> to Ripper::Lexer.new …\n",null,0],["new","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = v5)","<p>Takes <code>source</code>, a String of Ruby code and compiles it to an\nInstructionSequence.\n<p>Optionally takes <code>file</code>, …\n",null,0],["new","SDBM","Ruby/classes/SDBM.html#method-c-new","(p1, p2 = v2)","<p>Creates a new database handle by opening the given <code>filename</code>.\nSDBM actually uses two physical files, with …\n",null,0],["new","SOCKSSocket","Ruby/classes/SOCKSSocket.html#method-c-new","(host, serv)","",null,0],["new","SOCKSSocket","Ruby/classes/SOCKSSocket.html#method-c-new","(p1, p2)","<p>Opens a SOCKS connection to <code>host</code> via the SOCKS server\n<code>serv</code>.\n",null,0],["new","Set","Ruby/classes/Set.html#method-c-new","(enum = nil)","<p>Creates a new set containing the elements of the given enumerable object.\n<p>If a block is given, the elements …\n",null,0],["new","Shell","Ruby/classes/Shell.html#method-c-new","(pwd = Dir.pwd, umask = nil)","<p>Creates a Shell object which current directory is set to the process\ncurrent directory, unless otherwise …\n",null,0],["new","Shell::AppendFile","Ruby/classes/Shell/AppendFile.html#method-c-new","(sh, to_filename, filter)","",null,0],["new","Shell::AppendIO","Ruby/classes/Shell/AppendIO.html#method-c-new","(sh, io, filter)","",null,0],["new","Shell::Cat","Ruby/classes/Shell/Cat.html#method-c-new","(sh, *filenames)","",null,0],["new","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-c-new","(shell)","",null,0],["new","Shell::Concat","Ruby/classes/Shell/Concat.html#method-c-new","(sh, *jobs)","",null,0],["new","Shell::Echo","Ruby/classes/Shell/Echo.html#method-c-new","(sh, *strings)","",null,0],["new","Shell::Filter","Ruby/classes/Shell/Filter.html#method-c-new","(sh)","",null,0],["new","Shell::Glob","Ruby/classes/Shell/Glob.html#method-c-new","(sh, pattern)","",null,0],["new","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-c-new","(shell)","",null,0],["new","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-c-new","(sh, command, *opts)","",null,0],["new","Shell::Tee","Ruby/classes/Shell/Tee.html#method-c-new","(sh, filename)","",null,0],["new","Shell::Void","Ruby/classes/Shell/Void.html#method-c-new","(sh, *opts)","",null,0],["new","SignalException","Ruby/classes/SignalException.html#method-c-new","(*args)","<p>Construct a new SignalException object.  <code>sig_name</code> should be a\nknown signal name.\n",null,0],["new","SizedQueue","Ruby/classes/SizedQueue.html#method-c-new","(max)","<p>Creates a fixed-length queue with a maximum size of <code>max</code>.\n",null,0],["new","Socket","Ruby/classes/Socket.html#method-c-new","(p1, p2, p3 = v3)","<p>Creates a new socket object.\n<p><em>domain</em> should be a communications domain such as: :INET, :INET6,\n:UNIX, etc. …\n",null,0],["new","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-c-new","(p1, p2, p3, p4)","<p><em>family</em> should be an integer, a string or a symbol.\n<p>Socket::AF_INET, “AF_INET”, “INET”, …\n",null,0],["new","Socket::Option","Ruby/classes/Socket/Option.html#method-c-new","(p1, p2, p3, p4)","<p>Returns a new Socket::Option object.\n\n<pre><code>sockopt = Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, [1].pack(&quot;i&quot;)) ...</code></pre>\n",null,0],["new","Socket::UDPSource","Ruby/classes/Socket/UDPSource.html#method-c-new","(remote_address, local_address, &reply_proc)","<p><code>remote_address</code> is an Addrinfo object.\n<p><code>local_address</code> is an Addrinfo object.\n<p><code>reply_proc</code> is a Proc used to …\n",null,0],["new","SshDirPublisher","Ruby/classes/SshDirPublisher.html#method-c-new","(host, remote_dir, local_dir)","",null,0],["new","SshFilePublisher","Ruby/classes/SshFilePublisher.html#method-c-new","(host, remote_dir, local_dir, *files)","<p>Create a publisher using the give host information.\n",null,0],["new","String","Ruby/classes/String.html#method-c-new","(p1 = v1)","<p>Returns a new string object containing a copy of <em>str</em>.\n",null,0],["new","StringIO","Ruby/classes/StringIO.html#method-c-new","(*args)","<p>Creates new StringIO instance from with <em>string</em> and <em>mode</em>.\n",null,0],["new","StringScanner","Ruby/classes/StringScanner.html#method-c-new","(p1, p2 = v2)","<p>Creates a new StringScanner object to scan over the given\n<code>string</code>. <code>dup</code> argument is obsolete and not used …\n",null,0],["new","Struct","Ruby/classes/Struct.html#method-c-new","(*args)","<p>Creates a new class, named by <em>aString</em>, containing accessor methods\nfor the given symbols. If the name …\n",null,0],["new","Sync_m","Ruby/classes/Sync_m.html#method-c-new","(*args)","",null,0],["new","Sync_m","Ruby/classes/Sync_m.html#method-c-new","(*args)","",null,0],["new","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-c-new","(program_name = 'ruby')","<p>Fills in variables for Logger compatibility.  If this is the first instance\nof Syslog::Logger, <code>program_name</code> …\n",null,0],["new","SystemCallError","Ruby/classes/SystemCallError.html#method-c-new","(p1, p2 = v2)","<p>If <em>errno</em> corresponds to a known system error code, constructs the\nappropriate <code>Errno</code> class for that error, …\n",null,0],["new","SystemExit","Ruby/classes/SystemExit.html#method-c-new","(*args)","<p>Create a new <code>SystemExit</code> exception with the given status and\nmessage. Status is true, false, or an integer. …\n",null,0],["new","TCPServer","Ruby/classes/TCPServer.html#method-c-new","(p1 = v1, p2)","<p>Creates a new server socket bound to <em>port</em>.\n<p>If <em>hostname</em> is given, the socket is bound to it.\n\n<pre><code>serv = TCPServer.new(&quot;127.0.0.1&quot;, ...</code></pre>\n",null,0],["new","TCPSocket","Ruby/classes/TCPSocket.html#method-c-new","(host, serv, *rest)","",null,0],["new","TCPSocket","Ruby/classes/TCPSocket.html#method-c-new","(p1, p2, p3 = v3, p4 = v4)","<p>Opens a TCP connection to <code>remote_host</code> on\n<code>remote_port</code>.  If <code>local_host</code> and\n<code>local_port</code> are specified, then …\n",null,0],["new","Tempfile","Ruby/classes/Tempfile.html#method-c-new","(basename, *rest)","<p>Creates a temporary file with permissions 0600 (= only readable and\nwritable by the owner) and opens …\n",null,0],["new","Thread","Ruby/classes/Thread.html#method-c-new","(*args)","<p>Creates a new thread executing the given block.\n<p>Any <code>args</code> given to ::new will be passed to the block:\n\n<pre><code>arr ...</code></pre>\n",null,0],["new","ThreadsWait","Ruby/classes/ThreadsWait.html#method-c-new","(*threads)","<p>Creates a ThreadsWait object, specifying the threads to wait on.\nNon-blocking.\n",null,0],["new","ThreadsWait","Ruby/classes/ThreadsWait.html#method-c-new","(*threads)","<p>Creates a ThreadsWait object, specifying the threads to wait on.\nNon-blocking.\n",null,0],["new","Time","Ruby/classes/Time.html#method-c-new","(*args)","<p>Returns a Time object.\n<p>It is initialized to the current system time if no argument is given.\n<p><strong>Note:</strong> The …\n",null,0],["new","TracePoint","Ruby/classes/TracePoint.html#method-c-new","(*args)","<p>Returns a new TracePoint object, not enabled by default.\n<p>Next, in order to activate the trace, you must …\n",null,0],["new","UDPSocket","Ruby/classes/UDPSocket.html#method-c-new","(p1 = v1)","<p>Creates a new UDPSocket object.\n<p><em>address_family</em> should be an integer, a string or a symbol:\nSocket::AF_INET …\n",null,0],["new","UNIXServer","Ruby/classes/UNIXServer.html#method-c-new","(p1)","<p>Creates a new UNIX server socket bound to <em>path</em>.\n\n<pre><code>serv = UNIXServer.new(&quot;/tmp/sock&quot;)\ns = serv.accept\np s.read</code></pre>\n",null,0],["new","UNIXSocket","Ruby/classes/UNIXSocket.html#method-c-new","(p1)","<p>Creates a new UNIX client socket connected to <em>path</em>.\n\n<pre><code>s = UNIXSocket.new(&quot;/tmp/sock&quot;)\ns.send &quot;hello&quot;, 0</code></pre>\n",null,0],["new","URI::FTP","Ruby/classes/URI/FTP.html#method-c-new","(*arg)","<p>Description\n<p>Creates a new URI::FTP object from generic URL components with no syntax\nchecking.\n<p>Unlike build(), …\n",null,0],["new","URI::Generic","Ruby/classes/URI/Generic.html#method-c-new","(scheme, userinfo, host, port, registry, path, opaque, query, fragment, parser = DEFAULT_PARSER, arg_check = false)","<p>Args\n<p><code>scheme</code> &mdash; Protocol scheme, i.e. &#39;http&#39;,&#39;ftp&#39;,&#39;mailto&#39; and so\non.\n<p><code>userinfo</code> &mdash; User …\n",null,0],["new","URI::HTTP","Ruby/classes/URI/HTTP.html#method-c-new","(*arg)","<p>Description\n<p>Create a new URI::HTTP object from generic URI components as per RFC 2396.\nNo HTTP-specific …\n",null,0],["new","URI::LDAP","Ruby/classes/URI/LDAP.html#method-c-new","(*arg)","<p>Description\n<p>Create a new URI::LDAP object from generic URI components as per RFC 2396.\nNo LDAP-specific …\n",null,0],["new","URI::MailTo","Ruby/classes/URI/MailTo.html#method-c-new","(*arg)","<p>Description\n<p>Creates a new URI::MailTo object from generic URL components with no syntax\nchecking.\n<p>This …\n",null,0],["new","URI::Parser","Ruby/classes/URI/Parser.html#method-c-new","(opts = {})","<p>Synopsis\n\n<pre><code>URI::Parser.new([opts])</code></pre>\n<p>Args\n",null,0],["new","Vector","Ruby/classes/Vector.html#method-c-new","(array)","<p>Vector.new is private; use Vector[] or Vector.elements to create.\n",null,0],["new","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-c-new","(log_file=nil, level=nil)","<p>Initializes a new logger for <code>log_file</code> that outputs messages at\n<code>level</code> or higher.  <code>log_file</code> can be a filename, …\n",null,0],["new","WEBrick::CGI","Ruby/classes/WEBrick/CGI.html#method-c-new","(*args)","<p>Creates a new CGI interface.\n<p>The first argument in <code>args</code> is a configuration hash which would\nupdate WEBrick::Config::HTTP …\n",null,0],["new","WEBrick::Cookie","Ruby/classes/WEBrick/Cookie.html#method-c-new","(name, value)","<p>Creates a new cookie with the given <code>name</code> and\n<code>value</code>\n",null,0],["new","WEBrick::GenericServer","Ruby/classes/WEBrick/GenericServer.html#method-c-new","(config={}, default=Config::General)","<p>Creates a new generic server from <code>config</code>.  The default\nconfiguration comes from <code>default</code>.\n",null,0],["new","WEBrick::HTTPAuth::BasicAuth","Ruby/classes/WEBrick/HTTPAuth/BasicAuth.html#method-c-new","(config, default=Config::BasicAuth)","<p>Creates a new BasicAuth instance.\n<p>See WEBrick::Config::BasicAuth for default configuration entries\n<p>You …\n",null,0],["new","WEBrick::HTTPAuth::DigestAuth","Ruby/classes/WEBrick/HTTPAuth/DigestAuth.html#method-c-new","(config, default=Config::DigestAuth)","<p>Creates a new DigestAuth instance.  Be sure to use the same DigestAuth\ninstance for multiple requests …\n",null,0],["new","WEBrick::HTTPAuth::Htdigest","Ruby/classes/WEBrick/HTTPAuth/Htdigest.html#method-c-new","(path)","<p>Open a digest password database at <code>path</code>\n",null,0],["new","WEBrick::HTTPAuth::Htgroup","Ruby/classes/WEBrick/HTTPAuth/Htgroup.html#method-c-new","(path)","<p>Open a group database at <code>path</code>\n",null,0],["new","WEBrick::HTTPAuth::Htpasswd","Ruby/classes/WEBrick/HTTPAuth/Htpasswd.html#method-c-new","(path)","<p>Open a password database at <code>path</code>\n",null,0],["new","WEBrick::HTTPProxyServer","Ruby/classes/WEBrick/HTTPProxyServer.html#method-c-new","(config={}, default=Config::HTTP)","<p>Proxy server configurations.  The proxy server handles the following\nconfiguration items in addition …\n",null,0],["new","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-c-new","(config)","<p>Creates a new HTTP request.  WEBrick::Config::HTTP is the default\nconfiguration.\n",null,0],["new","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-c-new","(config)","<p>Creates a new HTTP response object.  WEBrick::Config::HTTP is the default\nconfiguration.\n",null,0],["new","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-c-new","(config={}, default=Config::HTTP)","<p>Creates a new HTTP server according to <code>config</code>\n<p>An HTTP server uses the following attributes:\n<p>:AccessLog … &mdash; ",null,0],["new","WEBrick::HTTPServlet::AbstractServlet","Ruby/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-c-new","(server, *options)","<p>Initializes a new servlet for <code>server</code> using\n<code>options</code> which are stored as-is in +@options+.  +@logger+ is …\n",null,0],["new","WEBrick::HTTPServlet::CGIHandler","Ruby/classes/WEBrick/HTTPServlet/CGIHandler.html#method-c-new","(server, name)","<p>Creates a new CGI script servlet for the script at <code>name</code>\n",null,0],["new","WEBrick::HTTPServlet::DefaultFileHandler","Ruby/classes/WEBrick/HTTPServlet/DefaultFileHandler.html#method-c-new","(server, local_path)","<p>Creates a DefaultFileHandler instance for the file at\n<code>local_path</code>.\n",null,0],["new","WEBrick::HTTPServlet::ERBHandler","Ruby/classes/WEBrick/HTTPServlet/ERBHandler.html#method-c-new","(server, name)","<p>Creates a new ERBHandler on <code>server</code> that will evaluate and\nserve the ERB file <code>name</code>\n",null,0],["new","WEBrick::HTTPServlet::FileHandler","Ruby/classes/WEBrick/HTTPServlet/FileHandler.html#method-c-new","(server, root, options={}, default=Config::FileHandler)","<p>Creates a FileHandler servlet on <code>server</code> that serves files\nstarting at directory <code>root</code>\n<p><code>options</code> may be a …\n",null,0],["new","WEBrick::HTTPUtils::FormData","Ruby/classes/WEBrick/HTTPUtils/FormData.html#method-c-new","(*args)","<p>Creates a new FormData object.\n<p><code>args</code> is an Array of form data entries.  One FormData will be\ncreated for …\n",null,0],["new","WEBrick::HTTPVersion","Ruby/classes/WEBrick/HTTPVersion.html#method-c-new","(version)","<p>Creates a new HTTPVersion from <code>version</code>.\n",null,0],["new","WEBrick::Log","Ruby/classes/WEBrick/Log.html#method-c-new","(log_file=nil, level=nil)","<p>Same as BasicLog#initialize\n<p>You can set the timestamp format through #time_format\n",null,0],["new","WEBrick::Utils::TimeoutHandler","Ruby/classes/WEBrick/Utils/TimeoutHandler.html#method-c-new","()","<p>Creates a new TimeoutHandler.  You should use ::register and ::cancel\ninstead of creating the timeout …\n",null,0],["new","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-new","(p1, p2 = v2, *args)","<p>Returns a new WIN32OLE object(OLE Automation object). The first argument\nserver specifies OLE Automation …\n",null,0],["new","WIN32OLE_EVENT","Ruby/classes/WIN32OLE_EVENT.html#method-c-new","(*args)","<p>Returns OLE event object. The first argument specifies WIN32OLE object. The\nsecond argument specifies …\n",null,0],["new","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-c-new","(p1, p2)","<p>Returns a new WIN32OLE_METHOD object which represents the information about\nOLE method. The first argument …\n",null,0],["new","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-c-new","(p1, p2)","",null,0],["new","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-c-new","(p1, p2)","<p>Returns a new WIN32OLE_TYPE object. The first argument <em>typelib</em>\nspecifies OLE type library name. The second …\n",null,0],["new","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-c-new","(*args)","<p>Returns a new WIN32OLE_TYPELIB object.\n<p>The first argument <em>typelib</em>  specifies OLE type library name or …\n",null,0],["new","WIN32OLE_VARIANT","Ruby/classes/WIN32OLE_VARIANT.html#method-c-new","(*args)","<p>Returns Ruby object wrapping OLE variant. The first argument specifies Ruby\nobject to convert OLE variant …\n",null,0],["new","WeakRef","Ruby/classes/WeakRef.html#method-c-new","(orig)","<p>Creates a weak reference to <code>orig</code>\n<p>Raises an ArgumentError if the given <code>orig</code> is immutable, such\nas Symbol …\n",null,0],["new","Win32::Registry::Error","Ruby/classes/Win32/Registry/Error.html#method-c-new","(code)","",null,0],["new","Win32::Registry::PredefinedKey","Ruby/classes/Win32/Registry/PredefinedKey.html#method-c-new","(hkey, keyname)","",null,0],["new","Win32::SSPI::Identity","Ruby/classes/Win32/SSPI/Identity.html#method-c-new","(user = nil, domain = nil, password = nil)","",null,0],["new","Win32::SSPI::NegotiateAuth","Ruby/classes/Win32/SSPI/NegotiateAuth.html#method-c-new","(user = nil, domain = nil)","<p>Creates a new instance ready for authentication as the given user in the\ngiven domain. Defaults to current …\n",null,0],["new","Win32::SSPI::SSPIResult","Ruby/classes/Win32/SSPI/SSPIResult.html#method-c-new","(value)","",null,0],["new","Win32::SSPI::SecurityBuffer","Ruby/classes/Win32/SSPI/SecurityBuffer.html#method-c-new","(buffer = nil)","",null,0],["new","Win32API","Ruby/classes/Win32API.html#method-c-new","(dllname, func, import, export = \"0\", calltype = :stdcall)","",null,0],["new","XMLRPC::Base64","Ruby/classes/XMLRPC/Base64.html#method-c-new","(str, state = :dec)","<p>Creates a new XMLRPC::Base64 instance with string <code>str</code> as the\ninternal string. When <code>state</code> is <code>:dec</code> it assumes …\n",null,0],["new","XMLRPC::BasicServer","Ruby/classes/XMLRPC/BasicServer.html#method-c-new","(class_delim=\".\")","<p>Creates a new XMLRPC::BasicServer instance, which should not be done,\nbecause XMLRPC::BasicServer is …\n",null,0],["new","XMLRPC::CGIServer","Ruby/classes/XMLRPC/CGIServer.html#method-c-new","(*a)","<p>Creates a new XMLRPC::CGIServer instance.\n<p>All parameters given are by-passed to XMLRPC::BasicServer.new …\n",null,0],["new","XMLRPC::CGIServer","Ruby/classes/XMLRPC/CGIServer.html#method-c-new","(*a)","",null,0],["new","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-c-new","(host=nil, path=nil, port=nil, proxy_host=nil, proxy_port=nil, user=nil, password=nil, use_ssl=nil, timeout=nil)","<p>Creates an object which represents the remote XML-RPC server on the given\n<code>host</code>. If the server is CGI-based, …\n",null,0],["new","XMLRPC::Client::Proxy","Ruby/classes/XMLRPC/Client/Proxy.html#method-c-new","(server, prefix, args=[], meth=:call, delim=\".\")","<p>Creates an object which provides XMLRPC::Client::Proxy#method_missing.\n<p>The given <code>server</code> must be an instance …\n",null,0],["new","XMLRPC::Create","Ruby/classes/XMLRPC/Create.html#method-c-new","(xml_writer = nil)","",null,0],["new","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-c-new","(year, month, day, hour, min, sec)","<p>Creates a new XMLRPC::DateTime instance with the parameters\n<code>year</code>, <code>month</code>, <code>day</code> as date and\n<code>hour</code>, <code>min</code>,  …\n",null,0],["new","XMLRPC::FaultException","Ruby/classes/XMLRPC/FaultException.html#method-c-new","(faultCode, faultString)","<p>Creates a new XMLRPC::FaultException instance.\n<p><code>faultString</code> is passed to StandardError as the <code>msg</code>\nof the …\n",null,0],["new","XMLRPC::Marshal","Ruby/classes/XMLRPC/Marshal.html#method-c-new","( parser = nil, writer = nil )","",null,0],["new","XMLRPC::ModRubyServer","Ruby/classes/XMLRPC/ModRubyServer.html#method-c-new","(*a)","<p>Creates a new XMLRPC::ModRubyServer instance.\n<p>All parameters given are by-passed to XMLRPC::BasicServer.new …\n",null,0],["new","XMLRPC::Server","Ruby/classes/XMLRPC/Server.html#method-c-new","(port=8080, host=\"127.0.0.1\", maxConnections=4, stdlog=$stdout, audit=true, debug=true, *a)","<p>Creates a new XMLRPC::Server instance, which is a XML-RPC server listening\non the given <code>port</code> and accepts …\n",null,0],["new","XMLRPC::Service::BasicInterface","Ruby/classes/XMLRPC/Service/BasicInterface.html#method-c-new","(prefix)","",null,0],["new","XMLRPC::Service::Interface","Ruby/classes/XMLRPC/Service/Interface.html#method-c-new","(prefix, &p)","",null,0],["new","XMLRPC::Service::PublicInstanceMethodsInterface","Ruby/classes/XMLRPC/Service/PublicInstanceMethodsInterface.html#method-c-new","(prefix)","",null,0],["new","XMLRPC::WEBrickServlet","Ruby/classes/XMLRPC/WEBrickServlet.html#method-c-new","(*a)","",null,0],["new","XMLRPC::XMLParser::NQXMLStreamParser","Ruby/classes/XMLRPC/XMLParser/NQXMLStreamParser.html#method-c-new","()","",null,0],["new","XMLRPC::XMLParser::NQXMLTreeParser","Ruby/classes/XMLRPC/XMLParser/NQXMLTreeParser.html#method-c-new","()","",null,0],["new","XMLRPC::XMLParser::NQXMLTreeParser","Ruby/classes/XMLRPC/XMLParser/NQXMLTreeParser.html#method-c-new","()","",null,0],["new","XMLRPC::XMLParser::REXMLStreamParser","Ruby/classes/XMLRPC/XMLParser/REXMLStreamParser.html#method-c-new","()","",null,0],["new","XMLRPC::XMLParser::StreamParserMixin","Ruby/classes/XMLRPC/XMLParser/StreamParserMixin.html#method-c-new","(*a)","",null,0],["new","XMLRPC::XMLParser::XMLScanStreamParser","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser.html#method-c-new","()","",null,0],["new","XMLRPC::XMLParser::XMLStreamParser","Ruby/classes/XMLRPC/XMLParser/XMLStreamParser.html#method-c-new","()","",null,0],["new","XMLRPC::XMLParser::XMLTreeParser","Ruby/classes/XMLRPC/XMLParser/XMLTreeParser.html#method-c-new","()","",null,0],["new","XMLRPC::XMLParser::XMLTreeParser","Ruby/classes/XMLRPC/XMLParser/XMLTreeParser.html#method-c-new","()","",null,0],["new","XMLRPC::XMLWriter::XMLParser","Ruby/classes/XMLRPC/XMLWriter/XMLParser.html#method-c-new","()","",null,0],["new","XMP","Ruby/classes/XMP.html#method-c-new","(bind = nil)","<p>Creates a new XMP object.\n<p>The top-level binding or, optional <code>bind</code> parameter will be used\nwhen creating …\n",null,0],["new","XMP::StringInputMethod","Ruby/classes/XMP/StringInputMethod.html#method-c-new","()","<p>Creates a new StringInputMethod object\n",null,0],["new","YAML::Store","Ruby/classes/YAML/Store.html#method-c-new","(file_name, yaml_opts = {})","<p>Creates a new YAML::Store object, which will store data in\n<code>file_name</code>. If the file does not already exist, …\n",null,0],["new","Zlib::Deflate","Ruby/classes/Zlib/Deflate.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Creates a new deflate stream for compression. If a given argument is nil,\nthe default value of that argument …\n",null,0],["new","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-c-new","(p1, p2 = {})","<p>Creates a GzipReader object associated with <code>io</code>. The GzipReader\nobject reads gzipped data from <code>io</code>, and …\n",null,0],["new","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Creates a GzipWriter object associated with <code>io</code>.\n<code>level</code> and <code>strategy</code> should be the same as the\narguments …\n",null,0],["new","Zlib::Inflate","Ruby/classes/Zlib/Inflate.html#method-c-new","(p1 = v1)","<p>Creates a new inflate stream for decompression.  <code>window_bits</code>\nsets the size of the history buffer and …\n",null,0],["new","AbstractController::DoubleRenderError","Rails/classes/AbstractController/DoubleRenderError.html#method-c-new","(message = nil)","",null,1],["new","AbstractController::Helpers::ClassMethods::MissingHelperError","Rails/classes/AbstractController/Helpers/ClassMethods/MissingHelperError.html#method-c-new","(error, path)","",null,1],["new","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-new","()","",null,1],["new","ActionController::Middleware","Rails/classes/ActionController/Middleware.html#method-c-new","(app)","",null,1],["new","ActionController::Middleware","Rails/classes/ActionController/Middleware.html#method-c-new","(app)","",null,1],["new","ActionController::Middleware::ActionMiddleware","Rails/classes/ActionController/Middleware/ActionMiddleware.html#method-c-new","(controller, app)","",null,1],["new","ActionController::MimeResponds::Collector","Rails/classes/ActionController/MimeResponds/Collector.html#method-c-new","(mimes)","",null,1],["new","ActionController::Parameters","Rails/classes/ActionController/Parameters.html#method-c-new","(attributes = nil)","<p>Returns a new instance of <code>ActionController::Parameters</code>. Also,\nsets the <code>permitted</code> attribute to the default …\n",null,1],["new","ActionController::RequestForgeryProtection::ProtectionMethods::Exception","Rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/Exception.html#method-c-new","(controller)","",null,1],["new","ActionController::RequestForgeryProtection::ProtectionMethods::NullSession","Rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/NullSession.html#method-c-new","(controller)","",null,1],["new","ActionController::RequestForgeryProtection::ProtectionMethods::ResetSession","Rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/ResetSession.html#method-c-new","(controller)","",null,1],["new","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-c-new","(controller, resources, options={})","",null,1],["new","ActionDispatch::Callbacks","Rails/classes/ActionDispatch/Callbacks.html#method-c-new","(app)","",null,1],["new","ActionDispatch::Cookies","Rails/classes/ActionDispatch/Cookies.html#method-c-new","(app)","",null,1],["new","ActionDispatch::Cookies::VerifyAndUpgradeLegacySignedMessage","Rails/classes/ActionDispatch/Cookies/VerifyAndUpgradeLegacySignedMessage.html#method-c-new","(*args)","",null,1],["new","ActionDispatch::DebugExceptions","Rails/classes/ActionDispatch/DebugExceptions.html#method-c-new","(app, routes_app = nil)","",null,1],["new","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-c-new","(env, exception)","",null,1],["new","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-c-new","(root, cache_control)","",null,1],["new","ActionDispatch::Flash","Rails/classes/ActionDispatch/Flash.html#method-c-new","(app)","",null,1],["new","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-c-new","(env)","",null,1],["new","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-c-new","(env = {})","",null,1],["new","ActionDispatch::Http::ParameterFilter","Rails/classes/ActionDispatch/Http/ParameterFilter.html#method-c-new","(filters = [])","",null,1],["new","ActionDispatch::Http::Parameters","Rails/classes/ActionDispatch/Http/Parameters.html#method-c-new","(env)","",null,1],["new","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-c-new","(env)","",null,1],["new","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-c-new","(*args)","",null,1],["new","ActionDispatch::MiddlewareStack::Middleware","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-c-new","(klass_or_name, *args, &block)","",null,1],["new","ActionDispatch::ParamsParser","Rails/classes/ActionDispatch/ParamsParser.html#method-c-new","(app, parsers = {})","",null,1],["new","ActionDispatch::ParamsParser::ParseError","Rails/classes/ActionDispatch/ParamsParser/ParseError.html#method-c-new","(message, original_exception)","",null,1],["new","ActionDispatch::PublicExceptions","Rails/classes/ActionDispatch/PublicExceptions.html#method-c-new","(public_path)","",null,1],["new","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-c-new","(store = Rails.cache)","",null,1],["new","ActionDispatch::RailsMetaStore","Rails/classes/ActionDispatch/RailsMetaStore.html#method-c-new","(store = Rails.cache)","",null,1],["new","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-c-new","(app, condition=nil)","",null,1],["new","ActionDispatch::RemoteIp","Rails/classes/ActionDispatch/RemoteIp.html#method-c-new","(app, check_ip_spoofing = true, custom_proxies = nil)","<p>Create a new <code>RemoteIp</code> middleware instance.\n<p>The <code>check_ip_spoofing</code> option is on by default. When on, an …\n",null,1],["new","ActionDispatch::RemoteIp::GetIp","Rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-c-new","(env, middleware)","",null,1],["new","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-c-new","(env)","",null,1],["new","ActionDispatch::RequestId","Rails/classes/ActionDispatch/RequestId.html#method-c-new","(app)","",null,1],["new","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-c-new","(status = 200, header = {}, body = [])","",null,1],["new","ActionDispatch::Routing::ConsoleFormatter","Rails/classes/ActionDispatch/Routing/ConsoleFormatter.html#method-c-new","()","",null,1],["new","ActionDispatch::Routing::HtmlTableFormatter","Rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-c-new","(view)","",null,1],["new","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-new","()","",null,1],["new","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-c-new","(*)","",null,1],["new","ActionDispatch::SSL","Rails/classes/ActionDispatch/SSL.html#method-c-new","(app, options = {})","",null,1],["new","ActionDispatch::Session::CacheStore","Rails/classes/ActionDispatch/Session/CacheStore.html#method-c-new","(app, options = {})","<p>Create a new store. The cache to use can be passed in the\n<code>:cache</code> option. If it is not specified,\n<code>Rails.cache</code> …\n",null,1],["new","ActionDispatch::Session::Compatibility","Rails/classes/ActionDispatch/Session/Compatibility.html#method-c-new","(app, options = {})","",null,1],["new","ActionDispatch::Session::CookieStore","Rails/classes/ActionDispatch/Session/CookieStore.html#method-c-new","(app, options={})","",null,1],["new","ActionDispatch::Session::MemCacheStore","Rails/classes/ActionDispatch/Session/MemCacheStore.html#method-c-new","(app, options = {})","",null,1],["new","ActionDispatch::ShowExceptions","Rails/classes/ActionDispatch/ShowExceptions.html#method-c-new","(app, exceptions_app)","",null,1],["new","ActionDispatch::Static","Rails/classes/ActionDispatch/Static.html#method-c-new","(app, path, cache_control=nil)","",null,1],["new","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-new","(method_name=nil, *args)","<p>Instantiate a new mailer object. If <code>method_name</code> is not\n<code>nil</code>, the mailer will be initialized according …\n",null,1],["new","ActionMailer::Collector","Rails/classes/ActionMailer/Collector.html#method-c-new","(context, &block)","",null,1],["new","ActionView::DependencyTracker::ERBTracker","Rails/classes/ActionView/DependencyTracker/ERBTracker.html#method-c-new","(name, template)","",null,1],["new","ActionView::Digestor","Rails/classes/ActionView/Digestor.html#method-c-new","(name, format, finder, options={})","",null,1],["new","ActionView::FileSystemResolver","Rails/classes/ActionView/FileSystemResolver.html#method-c-new","(path, pattern=nil)","",null,1],["new","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-c-new","(object_name, object, template, options, block=nil)","",null,1],["new","ActionView::Helpers::NumberHelper::InvalidNumberError","Rails/classes/ActionView/Helpers/NumberHelper/InvalidNumberError.html#method-c-new","(number)","",null,1],["new","ActionView::PartialRenderer","Rails/classes/ActionView/PartialRenderer.html#method-c-new","(*)","",null,1],["new","ActionView::Renderer","Rails/classes/ActionView/Renderer.html#method-c-new","(lookup_context)","",null,1],["new","ActionView::Resolver","Rails/classes/ActionView/Resolver.html#method-c-new","()","",null,1],["new","ActionView::Resolver::Cache::SmallCache","Rails/classes/ActionView/Resolver/Cache/SmallCache.html#method-c-new","(options = {})","",null,1],["new","ActionView::Resolver::Path","Rails/classes/ActionView/Resolver/Path.html#method-c-new","(name, prefix, partial, virtual)","",null,1],["new","ActionView::Template","Rails/classes/ActionView/Template.html#method-c-new","(source, identifier, handler, details)","",null,1],["new","ActionView::Template::Types::Type","Rails/classes/ActionView/Template/Types/Type.html#method-c-new","(symbol)","",null,1],["new","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-c-new","(base)","<p>Pass in the instance of the object that is using the errors object.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">initialize</span>\n    <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["new","ActiveModel::Model","Rails/classes/ActiveModel/Model.html#method-c-new","(params={})","<p>Initializes a new model with the given <code>params</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Model</span>\n  <span class=\"ruby-identifier\">attr_accessor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["new","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-c-new","(klass, namespace = nil, name = nil)","<p>Returns a new ActiveModel::Name instance. By default, the\n<code>namespace</code> and <code>name</code> option will take the namespace\n…\n",null,1],["new","ActiveModel::Validator","Rails/classes/ActiveModel/Validator.html#method-c-new","(options = {})","<p>Accepts options that will be made available through the\n<code>options</code> reader.\n",null,1],["new","ActiveRecord::AssociationRelation","Rails/classes/ActiveRecord/AssociationRelation.html#method-c-new","(klass, table, association)","",null,1],["new","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-new","(attributes = {}, &block)","",null,1],["new","ActiveRecord::AttributeAssignmentError","Rails/classes/ActiveRecord/AttributeAssignmentError.html#method-c-new","(message, exception, attribute)","",null,1],["new","ActiveRecord::ConnectionAdapters::AbstractAdapter::SchemaCreation","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter/SchemaCreation.html#method-c-new","(conn)","",null,1],["new","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-c-new","(connection, logger, connection_options, config)","<p>FIXME: Make the first parameter more similar for the two adapters\n",null,1],["new","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-c-new","()","",null,1],["new","ActiveRecord::ConnectionAdapters::ConnectionManagement","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html#method-c-new","(app)","",null,1],["new","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-c-new","(spec)","<p>Creates a new ConnectionPool object. <code>spec</code> is a\nConnectionSpecification object which describes database …\n",null,1],["new","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-c-new","(lock = Monitor.new)","",null,1],["new","ActiveRecord::ConnectionAdapters::ConnectionPool::Reaper","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Reaper.html#method-c-new","(pool, frequency)","",null,1],["new","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-c-new","()","",null,1],["new","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-c-new","(connection, logger, connection_options, config)","",null,1],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-c-new","(connection, logger, connection_options, config)","",null,1],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-c-new","(connection, max = 1000)","",null,1],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-c-new","(connection, logger, connection_parameters, config)","<p>Initializes and connects a PostgreSQL adapter.\n",null,1],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Array","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Array.html#method-c-new","(subtype)","",null,1],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Range","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Range.html#method-c-new","(subtype)","",null,1],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::TypeMap","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/TypeMap.html#method-c-new","()","",null,1],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Vector","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Vector.html#method-c-new","(delim, subtype)","<p><code>delim</code> corresponds to the `typdelim` column in the pg_types\ntable.  <code>subtype</code> is derived from the `typelem` …\n",null,1],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-c-new","(connection, max)","",null,1],["new","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-c-new","(connection, logger, config)","",null,1],["new","ActiveRecord::ConnectionAdapters::SQLite3Adapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/StatementPool.html#method-c-new","(connection, max)","",null,1],["new","ActiveRecord::ConnectionAdapters::SQLite3Adapter::Version","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter/Version.html#method-c-new","(version_string)","",null,1],["new","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-c-new","(conn)","",null,1],["new","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-c-new","(connection, max = 1000)","",null,1],["new","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-c-new","(table_name, base)","",null,1],["new","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-c-new","(types, name, temporary, options)","",null,1],["new","ActiveRecord::ConnectionAdapters::TransactionState","Rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-c-new","(state = nil)","",null,1],["new","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-c-new","(attributes = nil, options = {})","<p>New objects can be instantiated as either empty (pass no construction\nparameter) or pre-set with attributes …\n",null,1],["new","ActiveRecord::DynamicMatchers::Method","Rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-c-new","(model, name)","",null,1],["new","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-c-new","(connection, name, class_name, path)","",null,1],["new","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-new","(*args, &block)","<p>Determines if one of the attributes passed in is the inheritance column,\nand if the inheritance column …\n",null,1],["new","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-c-new","()","",null,1],["new","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-c-new","(name = self.class.name, version = nil)","",null,1],["new","ActiveRecord::Migration::CheckPending","Rails/classes/ActiveRecord/Migration/CheckPending.html#method-c-new","(app)","",null,1],["new","ActiveRecord::Migration::CommandRecorder","Rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-c-new","(delegate = nil)","",null,1],["new","ActiveRecord::MigrationProxy","Rails/classes/ActiveRecord/MigrationProxy.html#method-c-new","(name, version, filename, scope)","",null,1],["new","ActiveRecord::MultiparameterAssignmentErrors","Rails/classes/ActiveRecord/MultiparameterAssignmentErrors.html#method-c-new","(errors)","",null,1],["new","ActiveRecord::QueryCache","Rails/classes/ActiveRecord/QueryCache.html#method-c-new","(app)","",null,1],["new","ActiveRecord::QueryMethods::WhereChain","Rails/classes/ActiveRecord/QueryMethods/WhereChain.html#method-c-new","(scope)","",null,1],["new","ActiveRecord::Reflection::MacroReflection","Rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-c-new","(macro, name, scope, options, active_record)","",null,1],["new","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-new","(*args, &block)","<p>Initializes new record from relation while maintaining the current scope.\n<p>Expects arguments in the same …\n",null,1],["new","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-c-new","(klass, table, values = {})","",null,1],["new","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-c-new","(columns, rows, column_types = {})","",null,1],["new","ActiveRecord::StaleObjectError","Rails/classes/ActiveRecord/StaleObjectError.html#method-c-new","(record, attempted_action)","",null,1],["new","ActiveRecord::StatementCache","Rails/classes/ActiveRecord/StatementCache.html#method-c-new","()","",null,1],["new","ActiveRecord::StatementInvalid","Rails/classes/ActiveRecord/StatementInvalid.html#method-c-new","(message, original_exception = nil)","",null,1],["new","ActiveRecord::UnknownPrimaryKey","Rails/classes/ActiveRecord/UnknownPrimaryKey.html#method-c-new","(model)","",null,1],["new","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-c-new","()","",null,1],["new","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-c-new","(*args)","",null,1],["new","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-c-new","(cache_path, options = nil)","",null,1],["new","ActiveSupport::Cache::MemCacheStore","Rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-c-new","(*addresses)","<p>Creates a new MemCacheStore object, with the given memcached server\naddresses. Each address is either …\n",null,1],["new","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-c-new","(options = nil)","",null,1],["new","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-c-new","(options = nil)","",null,1],["new","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-c-new","(options = nil)","<p>Create a new cache. The options will be passed to any write method calls\nexcept for <code>:namespace</code> which …\n",null,1],["new","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-c-new","()","",null,1],["new","ActiveSupport::CachingKeyGenerator","Rails/classes/ActiveSupport/CachingKeyGenerator.html#method-c-new","(key_generator)","",null,1],["new","ActiveSupport::Concurrency::Latch","Rails/classes/ActiveSupport/Concurrency/Latch.html#method-c-new","(count = 1)","",null,1],["new","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-c-new","()","",null,1],["new","ActiveSupport::Dependencies::WatchStack","Rails/classes/ActiveSupport/Dependencies/WatchStack.html#method-c-new","()","<p>@watching is a stack of lists of constants being watched. For instance, if\nparent.rb is autoloaded, the …\n",null,1],["new","ActiveSupport::Deprecation","Rails/classes/ActiveSupport/Deprecation.html#method-c-new","(deprecation_horizon = '4.1', gem_name = 'Rails')","<p>It accepts two parameters on initialization. The first is an version of\nlibrary and the second is an …\n",null,1],["new","ActiveSupport::Deprecation::DeprecatedConstantProxy","Rails/classes/ActiveSupport/Deprecation/DeprecatedConstantProxy.html#method-c-new","(old_const, new_const, deprecator = ActiveSupport::Deprecation.instance)","",null,1],["new","ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy","Rails/classes/ActiveSupport/Deprecation/DeprecatedInstanceVariableProxy.html#method-c-new","(instance, method, var = \"@#{method}\", deprecator = ActiveSupport::Deprecation.instance)","",null,1],["new","ActiveSupport::Deprecation::DeprecatedObjectProxy","Rails/classes/ActiveSupport/Deprecation/DeprecatedObjectProxy.html#method-c-new","(object, message, deprecator = ActiveSupport::Deprecation.instance)","",null,1],["new","ActiveSupport::FileUpdateChecker","Rails/classes/ActiveSupport/FileUpdateChecker.html#method-c-new","(files, dirs={}, &block)","<p>It accepts two parameters on initialization. The first is an array of files\nand the second is an optional …\n",null,1],["new","ActiveSupport::FileWatcher","Rails/classes/ActiveSupport/FileWatcher.html#method-c-new","()","",null,1],["new","ActiveSupport::FileWatcher::Backend","Rails/classes/ActiveSupport/FileWatcher/Backend.html#method-c-new","(path, watcher)","",null,1],["new","ActiveSupport::Gzip::Stream","Rails/classes/ActiveSupport/Gzip/Stream.html#method-c-new","(*)","",null,1],["new","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new","(constructor = {})","",null,1],["new","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new","(constructor = {})","",null,1],["new","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-c-new","()","",null,1],["new","ActiveSupport::InheritableOptions","Rails/classes/ActiveSupport/InheritableOptions.html#method-c-new","(parent = nil)","",null,1],["new","ActiveSupport::JSON::Encoding::Encoder","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-c-new","(options = nil)","",null,1],["new","ActiveSupport::JSON::Variable","Rails/classes/ActiveSupport/JSON/Variable.html#method-c-new","(*args)","",null,1],["new","ActiveSupport::KeyGenerator","Rails/classes/ActiveSupport/KeyGenerator.html#method-c-new","(secret, options = {})","",null,1],["new","ActiveSupport::Logger","Rails/classes/ActiveSupport/Logger.html#method-c-new","(*args)","",null,1],["new","ActiveSupport::MessageEncryptor","Rails/classes/ActiveSupport/MessageEncryptor.html#method-c-new","(secret, *signature_key_or_options)","<p>Initialize a new MessageEncryptor. <code>secret</code> must be at least as\nlong as the cipher key size. For the default …\n",null,1],["new","ActiveSupport::MessageVerifier","Rails/classes/ActiveSupport/MessageVerifier.html#method-c-new","(secret, options = {})","",null,1],["new","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-c-new","(string)","<p>Creates a new Chars instance by wrapping <em>string</em>.\n",null,1],["new","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-c-new","()","",null,1],["new","ActiveSupport::Notifications::Event","Rails/classes/ActiveSupport/Notifications/Event.html#method-c-new","(name, start, ending, transaction_id, payload)","",null,1],["new","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-c-new","()","",null,1],["new","ActiveSupport::Notifications::Fanout::Subscribers::Timed","Rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/Timed.html#method-c-new","(pattern, delegate)","",null,1],["new","ActiveSupport::Notifications::Instrumenter","Rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-c-new","(notifier)","",null,1],["new","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-c-new","(*)","",null,1],["new","ActiveSupport::SafeBuffer::SafeConcatError","Rails/classes/ActiveSupport/SafeBuffer/SafeConcatError.html#method-c-new","()","",null,1],["new","ActiveSupport::Subscriber","Rails/classes/ActiveSupport/Subscriber.html#method-c-new","()","",null,1],["new","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-c-new","(logger)","",null,1],["new","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-c-new","(utc_time, time_zone, local_time = nil, period = nil)","",null,1],["new","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-new","(name)","<p>Return a TimeZone instance with the given name, or <code>nil</code> if no\nsuch TimeZone instance exists. (This exists …\n",null,1],["new","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-new","(name, utc_offset = nil, tzinfo = nil)","<p>Create a new TimeZone object with the given name and offset. The offset is\nthe number of seconds that …\n",null,1],["new","ActiveSupport::XMLConverter::DisallowedType","Rails/classes/ActiveSupport/XMLConverter/DisallowedType.html#method-c-new","(type)","",null,1],["new","Build","Rails/classes/Build.html#method-c-new","(component, options = {})","",null,1],["new","HTML::Selector","Rails/classes/HTML/Selector.html#method-c-new","(selector, *values)","<p>Creates a new selector from a CSS 2 selector expression.\n<p>The first argument is the selector expression. …\n",null,1],["new","Mime::Type","Rails/classes/Mime/Type.html#method-c-new","(string, symbol = nil, synonyms = [])","",null,1],["new","Rails::API::Task","Rails/classes/Rails/API/Task.html#method-c-new","(name)","",null,1],["new","Rails::Application","Rails/classes/Rails/Application.html#method-c-new","()","",null,1],["new","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-c-new","(*)","",null,1],["new","Rails::Application::RoutesReloader","Rails/classes/Rails/Application/RoutesReloader.html#method-c-new","()","",null,1],["new","Rails::BacktraceCleaner","Rails/classes/Rails/BacktraceCleaner.html#method-c-new","()","",null,1],["new","Rails::Configuration::MiddlewareStackProxy","Rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-c-new","()","",null,1],["new","Rails::Console","Rails/classes/Rails/Console.html#method-c-new","(app, options={})","",null,1],["new","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-c-new","(arguments = ARGV)","",null,1],["new","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-c-new","(root=nil)","",null,1],["new","Rails::Engine::Railties","Rails/classes/Rails/Engine/Railties.html#method-c-new","()","",null,1],["new","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-c-new","(name)","",null,1],["new","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-c-new","(name, context, options, &block)","",null,1],["new","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-c-new","(root, current, paths, options = {})","",null,1],["new","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-c-new","(path)","",null,1],["new","Rails::Rack::Debugger","Rails/classes/Rails/Rack/Debugger.html#method-c-new","(app)","",null,1],["new","Rails::Rack::LogTailer","Rails/classes/Rails/Rack/LogTailer.html#method-c-new","(app, log = nil)","",null,1],["new","Rails::Rack::Logger","Rails/classes/Rails/Rack/Logger.html#method-c-new","(app, taggers = nil)","",null,1],["new","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-c-new","()","",null,1],["new","Rails::Server","Rails/classes/Rails/Server.html#method-c-new","(*)","",null,1],["new","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-c-new","(tag)","",null,1],["new2","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-new2","(uri, proxy=nil, timeout=nil)","<p>Creates an object which represents the remote XML-RPC server at the given\n<code>uri</code>. The URI should have a …\n",null,0],["new3","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-new3","(hash={})","<p>Receives a Hash and calls XMLRPC::Client.new with the corresponding values.\n<p>The <code>hash</code> parameter has following …\n",null,0],["new_alias_name","IRB::MethodExtender","Ruby/classes/IRB/MethodExtender.html#method-i-new_alias_name","(name, prefix = \"__alias_of__\", postfix = \"__\")","<p>Returns a unique method name to use as an alias for the given\n<code>name</code>.\n<p>Usually returns <code>#{prefix}#{name}#{postfix}&lt;num&gt;</code> …\n",null,0],["new_comment","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-new_comment","(comment)","<p>Creates a comment with the correct format\n",null,0],["new_cond","MonitorMixin","Ruby/classes/MonitorMixin.html#method-i-new_cond","()","<p>Creates a new MonitorMixin::ConditionVariable associated with the receiver.\n",null,0],["new_constants","ActiveSupport::Dependencies::WatchStack","Rails/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-new_constants","()","<p>Returns a list of new constants found since the last call to\n<code>watch_namespaces</code>.\n",null,1],["new_from_hash_copying_default","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new_from_hash_copying_default","(hash)","",null,1],["new_from_hash_copying_default","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new_from_hash_copying_default","(hash)","",null,1],["new_ntoh","IPAddr","Ruby/classes/IPAddr.html#method-c-new_ntoh","(addr)","<p>Creates a new ipaddr containing the given network byte ordered string form\nof an IP address.\n",null,0],["new_ostruct_member","OpenStruct","Ruby/classes/OpenStruct.html#method-i-new_ostruct_member","(name)","<p>Used internally to defined properties on the OpenStruct. It does this by\nusing the metaprogramming function …\n",null,0],["new_record?","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-new_record-3F","()","<p>Returns true if this object hasn&#39;t been saved yet – that is, a record\nfor the object doesn&#39;t …\n",null,1],["new_scope","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-i-new_scope","(names)","<p>Create a new argument scope using the prerequisite argument names.\n",null,0],["new_seed","Random","Ruby/classes/Random.html#method-c-new_seed","()","<p>Returns an arbitrary seed value. This is used by Random.new when no seed\nvalue is specified as an argument. …\n",null,0],["new_session","Rails::ConsoleMethods","Rails/classes/Rails/ConsoleMethods.html#method-i-new_session","()","<p>create a new session. If a block is given, the new session will be yielded\nto the block before being …\n",null,1],["new_start","Date","Ruby/classes/Date.html#method-i-new_start","(p1 = v1)","<p>Duplicates self and resets its the day of calendar reform.\n\n<pre><code>d = Date.new(1582,10,15)\nd.new_start(Date::JULIAN) ...</code></pre>\n",null,0],["new_with","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-c-new_with","(uri, ref)","<p>Creates a DRb::DRbObject given the reference information to the remote host\n<code>uri</code> and object <code>ref</code>.\n",null,0],["new_with","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-c-new_with","(uri, ref)","<p>Creates a DRb::DRbObject given the reference information to the remote host\n<code>uri</code> and object <code>ref</code>.\n",null,0],["new_with_uri","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-c-new_with_uri","(uri)","<p>Create a new DRbObject from a URI alone.\n",null,0],["new_with_uri","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-c-new_with_uri","(uri)","<p>Create a new DRbObject from a URI alone.\n",null,0],["new_with_value_if_need","RSS::Utils","Ruby/classes/RSS/Utils.html#method-i-new_with_value_if_need","(klass, value)","<p>If <code>value</code> is an instance of class <code>klass</code>, return\nit, else create a new instance of <code>klass</code> with value\n<code>value</code> …\n",null,0],["newobj","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-newobj","(address, port = nil, p_addr = :ENV, p_port = nil, p_user = nil, p_pass = nil)","",null,0],["next","Date","Ruby/classes/Date.html#method-i-next","()","<p>Returns a date object denoting the following day.\n",null,0],["next","Enumerator","Ruby/classes/Enumerator.html#method-i-next","()","<p>Returns the next object in the enumerator, and move the internal position\nforward.  When the position …\n",null,0],["next","Integer","Ruby/classes/Integer.html#method-i-next","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre><code>1.next      #=&gt; 2\n(-1).next   #=&gt; 0\n</code></pre>\n",null,0],["next","Integer","Ruby/classes/Integer.html#method-i-next","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre><code>1.next      #=&gt; 2\n(-1).next   #=&gt; 0\n</code></pre>\n",null,0],["next","Prime::EratosthenesGenerator","Ruby/classes/Prime/EratosthenesGenerator.html#method-i-next","()","",null,0],["next","Prime::Generator23","Ruby/classes/Prime/Generator23.html#method-i-next","()","",null,0],["next","Prime::OldCompatibility","Ruby/classes/Prime/OldCompatibility.html#method-i-next","()","",null,0],["next","Prime::PseudoPrimeGenerator","Ruby/classes/Prime/PseudoPrimeGenerator.html#method-i-next","()","<p>alias of <code>succ</code>.\n",null,0],["next","Prime::TrialDivisionGenerator","Ruby/classes/Prime/TrialDivisionGenerator.html#method-i-next","()","",null,0],["next","REXML::Validation::Choice","Ruby/classes/REXML/Validation/Choice.html#method-i-next","( event )","",null,0],["next","REXML::Validation::Interleave","Ruby/classes/REXML/Validation/Interleave.html#method-i-next","( event )","",null,0],["next","REXML::Validation::OneOrMore","Ruby/classes/REXML/Validation/OneOrMore.html#method-i-next","( event )","",null,0],["next","REXML::Validation::Optional","Ruby/classes/REXML/Validation/Optional.html#method-i-next","( event )","",null,0],["next","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-i-next","( event )","",null,0],["next","REXML::Validation::ZeroOrMore","Ruby/classes/REXML/Validation/ZeroOrMore.html#method-i-next","( event )","",null,0],["next","String","Ruby/classes/String.html#method-i-next","()","<p>Returns the successor to <em>str</em>. The successor is calculated by\nincrementing characters starting from the …\n",null,0],["next","Symbol","Ruby/classes/Symbol.html#method-i-next","()","<p>Same as <code>sym.to_s.succ.intern</code>.\n",null,0],["next!","String","Ruby/classes/String.html#method-i-next-21","()","<p>Equivalent to <code>String#succ</code>, but modifies the receiver in place.\n",null,0],["next_current","REXML::Validation::Interleave","Ruby/classes/REXML/Validation/Interleave.html#method-i-next_current","( event )","",null,0],["next_day","Date","Ruby/classes/Date.html#method-i-next_day","(p1 = v1)","<p>This method is equivalent to d + n.\n",null,0],["next_element","REXML::Element","Ruby/classes/REXML/Element.html#method-i-next_element","()","<p>Returns the next sibling that is an element, or nil if there is no Element\nsibling after this one\n\n<pre><code>doc ...</code></pre>\n",null,0],["next_element","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-next_element","(element, name = nil)","<p>Return the next element after this one. Skips sibling text nodes.\n<p>With the <code>name</code> argument, returns the …\n",null,1],["next_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-next_key","()","",null,1],["next_migration_number","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-next_migration_number","(number)","",null,1],["next_month","Date","Ruby/classes/Date.html#method-i-next_month","(p1 = v1)","<p>This method is equivalent to d &gt;&gt; n\n",null,0],["next_month","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-next_month","()","<p>Short-hand for months_since(1).\n",null,1],["next_quarter","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-next_quarter","()","<p>Short-hand for months_since(3)\n",null,1],["next_selector","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-next_selector","(statement, values)","<p>Called to create a dependent selector (sibling, descendant, etc). Passes\nthe remainder of the statement …\n",null,1],["next_sibling=","REXML::Child","Ruby/classes/REXML/Child.html#method-i-next_sibling-3D","( other )","<p>Sets the next sibling of this child.  This can be used to insert a child\nafter some other child.\n\n<pre><code>a = Element.new(&quot;a&quot;) ...</code></pre>\n",null,0],["next_sibling_node","REXML::Node","Ruby/classes/REXML/Node.html#method-i-next_sibling_node","()","<p>@return the next sibling (nil if unset)\n",null,0],["next_to","Prime::EratosthenesSieve","Ruby/classes/Prime/EratosthenesSieve.html#method-i-next_to","(n)","<p>returns the least odd prime number which is greater than <code>n</code>.\n",null,0],["next_token","RDoc::RD::InlineParser","Ruby/classes/RDoc/RD/InlineParser.html#method-i-next_token","()","<p>Returns the next token from the inline text\n",null,0],["next_token","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-next_token","()","<p>The method to fetch next token. If you use #do_parse method, you must\nimplement #next_token.\n<p>The format …\n",null,0],["next_update","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-next_update","()","",null,0],["next_update=","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-next_update-3D","(p1)","",null,0],["next_values","Enumerator","Ruby/classes/Enumerator.html#method-i-next_values","()","<p>Returns the next object as an array in the enumerator, and move the\ninternal position forward.  When …\n",null,0],["next_wait","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-next_wait","(nonblock = nil)","<p>Waits until any of the specified threads has terminated, and returns the\none that does.\n<p>If there is no …\n",null,0],["next_wait","ThreadsWait","Ruby/classes/ThreadsWait.html#method-i-next_wait","(nonblock = nil)","<p>Waits until any of the specified threads has terminated, and returns the\none that does.\n<p>If there is no …\n",null,0],["next_week","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-next_week","(given_day_in_next_week = Date.beginning_of_week)","<p>Returns a new date/time representing the given day in the next week. The\n<code>given_day_in_next_week</code> defaults …\n",null,1],["next_words_on_error","RDoc::RD::InlineParser","Ruby/classes/RDoc/RD/InlineParser.html#method-i-next_words_on_error","()","<p>Returns words following an error\n",null,0],["next_year","Date","Ruby/classes/Date.html#method-i-next_year","(p1 = v1)","<p>This method is equivalent to d &gt;&gt; (n * 12)\n",null,0],["next_year","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-next_year","()","<p>Short-hand for years_since(1).\n",null,1],["nil?","NilClass","Ruby/classes/NilClass.html#method-i-nil-3F","()","<p>call_seq:\n\n<pre><code>nil.nil?               -&gt; true</code></pre>\n<p>Only the object <em>nil</em> responds <code>true</code> to\n<code>nil?</code>.\n",null,0],["nil?","Object","Ruby/classes/Object.html#method-i-nil-3F","()","<p>call_seq:\n\n<pre><code>nil.nil?               -&gt; true\n&lt;anything_else&gt;.nil?   -&gt; false</code></pre>\n<p>Only the object <em>nil</em> responds  …\n",null,0],["nil?","Mime::NullType","Rails/classes/Mime/NullType.html#method-i-nil-3F","()","",null,1],["nkf","NKF","Ruby/classes/NKF.html#method-c-nkf","(p1, p2)","<p>Convert <em>str</em> and return converted result. Conversion details are\nspecified by <em>opt</em> as String.\n\n<pre><code>require &#39;nkf&#39; ...\n</code></pre>\n",null,0],["nl","Curses","Ruby/classes/Curses.html#method-c-nl","()","<p>Enable the underlying display device to translate the return key into\nnewline on input, and whether it …\n",null,0],["nlink","File::Stat","Ruby/classes/File/Stat.html#method-i-nlink","()","<p>Returns the number of hard links to <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).nlink             #=&gt; 1\nFile.link(&quot;testfile&quot;, ...\n</code></pre>\n",null,0],["nlsolve","Newton","Ruby/classes/Newton.html#method-i-nlsolve","(f,x)","",null,0],["nlst","Net::FTP","Ruby/classes/Net/FTP.html#method-i-nlst","(dir = nil)","<p>Returns an array of filenames in the remote directory.\n",null,0],["no_color!","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-no_color-21","()","<p>Remove the color from output.\n",null,1],["no_proxy?","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-no_proxy-3F","(host)","",null,0],["no_routes","ActionDispatch::Routing::ConsoleFormatter","Rails/classes/ActionDispatch/Routing/ConsoleFormatter.html#method-i-no_routes","()","",null,1],["no_routes","ActionDispatch::Routing::HtmlTableFormatter","Rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-i-no_routes","()","",null,1],["nocbreak","Curses","Ruby/classes/Curses.html#method-c-nocbreak","()","<p>Put the terminal into normal mode (out of cbreak mode).\n<p>See Curses.cbreak for more detail.\n",null,0],["nocrmode","Curses","Ruby/classes/Curses.html#method-c-nocrmode","()","<p>Put the terminal into normal mode (out of cbreak mode).\n<p>See Curses.cbreak for more detail.\n",null,0],["nodeName","NQXML::Node","Ruby/classes/NQXML/Node.html#method-i-nodeName","()","",null,0],["nodeType","NQXML::Node","Ruby/classes/NQXML/Node.html#method-i-nodeType","()","",null,0],["nodeValue","NQXML::Node","Ruby/classes/NQXML/Node.html#method-i-nodeValue","()","",null,0],["node_type","REXML::AttlistDecl","Ruby/classes/REXML/AttlistDecl.html#method-i-node_type","()","",null,0],["node_type","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-node_type","()","",null,0],["node_type","REXML::Comment","Ruby/classes/REXML/Comment.html#method-i-node_type","()","",null,0],["node_type","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-node_type","()","",null,0],["node_type","REXML::Document","Ruby/classes/REXML/Document.html#method-i-node_type","()","",null,0],["node_type","REXML::Element","Ruby/classes/REXML/Element.html#method-i-node_type","()","",null,0],["node_type","REXML::Instruction","Ruby/classes/REXML/Instruction.html#method-i-node_type","()","",null,0],["node_type","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-node_type","()","",null,0],["node_type","REXML::Text","Ruby/classes/REXML/Text.html#method-i-node_type","()","",null,0],["node_type","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-i-node_type","()","",null,0],["nodelay=","Curses::Window","Ruby/classes/Curses/Window.html#method-i-nodelay-3D","(p1)","<p>When in no-delay mode Curses::Window#getch is a non-blocking call.  If no\ninput is ready #getch returns …\n",null,0],["nodoc","RDoc::Stats::Verbose","Ruby/classes/RDoc/Stats/Verbose.html#method-i-nodoc","(co)","<p>Returns a marker for RDoc::CodeObject <code>co</code> being undocumented\n",null,0],["noecho","Curses","Ruby/classes/Curses.html#method-c-noecho","()","<p>Disables characters typed by the user to be echoed by Curses.getch as they\nare typed.\n",null,0],["noecho","Gem::MockGemUi::TTY","Ruby/classes/Gem/MockGemUi/TTY.html#method-i-noecho","()","",null,0],["noecho","IO","Ruby/classes/IO.html#method-i-noecho","()","<p>Yields <code>self</code> with disabling echo back.\n\n<pre><code>STDIN.noecho(&amp;:gets)</code></pre>\n<p>will read and return a line without echo back. …\n",null,0],["non_aliases","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-non_aliases","()","<p>Returns the classes and modules that are not constants aliasing another\nclass or module. For use by formatters …\n",null,0],["non_nil_attributes","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-non_nil_attributes","()","<p>Specification attributes that must be non-nil\n",null,0],["nonce","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-nonce","(secret_key, time = Time.now)","<p>Uses an MD5 digest based on time to generate a value to be used only once.\n<p>A server-specified data string …\n",null,1],["none","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-none","()","<p>Returns a chainable relation with zero records, specifically an instance of\nthe <code>ActiveRecord::NullRelation</code> …\n",null,1],["none?","Enumerable","Ruby/classes/Enumerable.html#method-i-none-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block never …\n",null,0],["none?","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-none-3F","()","<p>FIX: maybe this should be using #default ?\n",null,0],["none?","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-none-3F","()","<p>FIX: maybe this should be using #default ?\n",null,0],["nonl","Curses","Ruby/classes/Curses.html#method-c-nonl","()","<p>Disable the underlying display device to translate the return key into\nnewline on input\n<p>See Curses.nl …\n",null,0],["nonzero?","BigDecimal","Ruby/classes/BigDecimal.html#method-i-nonzero-3F","()","<p>Returns self if the value is non-zero, nil otherwise.\n",null,0],["nonzero?","Numeric","Ruby/classes/Numeric.html#method-i-nonzero-3F","()","<p>Returns <code>self</code> if <em>num</em> is not zero, <code>nil</code>\notherwise. This behavior is useful when chaining comparisons:\n\n<pre><code>a = ...</code></pre>\n",null,0],["noop","Net::FTP","Ruby/classes/Net/FTP.html#method-i-noop","()","<p>Issues a NOOP command.\n<p>Does nothing except return a response.\n",null,0],["noop","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-noop","()","<p>Sends a NOOP command to the server. It does nothing.\n",null,0],["noraw","Curses","Ruby/classes/Curses.html#method-c-noraw","()","<p>Put the terminal out of raw mode.\n<p>see Curses.raw for more detail\n",null,0],["norm","Newton","Ruby/classes/Newton.html#method-i-norm","(fv,zero=0.0)","",null,0],["norm","Vector","Ruby/classes/Vector.html#method-i-norm","()","",null,0],["normal?","Matrix","Ruby/classes/Matrix.html#method-i-normal-3F","()","<p>Returns <code>true</code> is this is a normal matrix. Raises an error if\nmatrix is not square.\n",null,0],["normalize","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-normalize","()","<p>Normalize the list of files so that:\n<p>All file lists have redundancies removed.\n<p>Files referenced in the …\n",null,0],["normalize","RDoc::Comment","Ruby/classes/RDoc/Comment.html#method-i-normalize","()","<p>Normalizes the text.  See RDoc::Text#normalize_comment for details\n",null,0],["normalize","RDoc::Markup::Verbatim","Ruby/classes/RDoc/Markup/Verbatim.html#method-i-normalize","()","<p>Collapses 3+ newlines into two newlines\n",null,0],["normalize","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-normalize","( input, entities=nil, entity_filter=nil )","<p>Escapes all possible entities\n",null,0],["normalize","REXML::Text","Ruby/classes/REXML/Text.html#method-c-normalize","( input, doctype=nil, entity_filter=nil )","<p>Escapes all possible entities\n",null,0],["normalize","RSS::Maker::ItemsBase","Ruby/classes/RSS/Maker/ItemsBase.html#method-i-normalize","()","",null,0],["normalize","Rake::Win32","Ruby/classes/Rake/Win32.html#method-i-normalize","(path)","<p>Normalize a win32 path so that the slashes are all forward slashes.\n",null,0],["normalize","URI::Generic","Ruby/classes/URI/Generic.html#method-i-normalize","()","<p>Returns normalized URI\n",null,0],["normalize","Vector","Ruby/classes/Vector.html#method-i-normalize","()","<p>Returns a new vector with the same direction but with norm 1.\n\n<pre><code>v = Vector[5,8,2].normalize\n# =&gt; Vector[0.5184758473652127, ...\n</code></pre>\n",null,0],["normalize","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-normalize","(form = nil)","<p>Returns the KC normalization of the string by default. NFKC is considered\nthe best normalization form …\n",null,1],["normalize","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-normalize","(string, form=nil)","<p>Returns the KC normalization of the string by default. NFKC is considered\nthe best normalization form …\n",null,1],["normalize!","URI::Generic","Ruby/classes/URI/Generic.html#method-i-normalize-21","()","<p>Destructive version of #normalize\n",null,0],["normalize_comment","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-normalize_comment","(text)","<p>Strips hashes, expands tabs then flushes <code>text</code> to the left\n",null,0],["normalize_name","ActionDispatch::Routing::Mapper","Rails/classes/ActionDispatch/Routing/Mapper.html#method-c-normalize_name","(name)","",null,1],["normalize_path","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-normalize_path","(path)","<p>Normalizes a request path.  Raises an exception if the path cannot be\nnormalized.\n",null,0],["normalize_path","ActionDispatch::Routing::Mapper","Rails/classes/ActionDispatch/Routing/Mapper.html#method-c-normalize_path","(path)","<p>Invokes Journey::Router::Utils.normalize_path and ensure that (:locale)\nbecomes (/:locale) instead of …\n",null,1],["normalize_space","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-normalize_space","( string=nil )","<p>UNTESTED\n",null,0],["normalize_uri","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-normalize_uri","(uri)","<p>Normalize the URI by adding “http://” if it is missing.\n",null,0],["normalize_yaml_input","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-normalize_yaml_input","(input)","<p>Make sure the YAML specification is properly formatted with dashes\n",null,0],["normalized","REXML::Entity","Ruby/classes/REXML/Entity.html#method-i-normalized","()","<p>Returns the value of this entity unprocessed – raw.  This is the normalized\nvalue; that is, with all …\n",null,0],["normalized_file_list","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-normalized_file_list","(relative_files, force_doc = false, exclude_pattern = nil)","<p>Given a list of files and directories, create a list of all the Ruby files\nthey contain.\n<p>If <code>force_doc</code> …\n",null,0],["not","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-not","( object )","<p>UNTESTED\n",null,0],["not","ActiveRecord::QueryMethods::WhereChain","Rails/classes/ActiveRecord/QueryMethods/WhereChain.html#method-i-not","(opts, *rest)","<p>Returns a new relation expressing WHERE + NOT condition according to the\nconditions in the arguments. …\n",null,1],["not_after","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-not_after","()","",null,0],["not_after=","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-not_after-3D","(p1)","",null,0],["not_before","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-not_before","()","",null,0],["not_before=","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-not_before-3D","(p1)","",null,0],["not_found","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-not_found","(generator, req, res)","<p>Returns a 404 page built by <code>generator</code> for <code>req</code> on\n<code>res</code>.\n",null,0],["not_modified?","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-not_modified-3F","(modified_at)","",null,1],["not_set_name","RSS::Maker::Atom::Entry::Channel::Generator","Ruby/classes/RSS/Maker/Atom/Entry/Channel/Generator.html#method-c-not_set_name","()","",null,0],["not_set_name","RSS::Maker::Atom::Feed::Channel::Categories::Category","Ruby/classes/RSS/Maker/Atom/Feed/Channel/Categories/Category.html#method-c-not_set_name","()","",null,0],["not_set_name","RSS::Maker::Atom::Feed::Channel::Generator","Ruby/classes/RSS/Maker/Atom/Feed/Channel/Generator.html#method-c-not_set_name","()","",null,0],["not_set_name","RSS::Maker::Atom::Feed::Channel::Links::Link","Ruby/classes/RSS/Maker/Atom/Feed/Channel/Links/Link.html#method-c-not_set_name","()","",null,0],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Categories::Category","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Categories/Category.html#method-c-not_set_name","()","",null,0],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Links::Link","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Links/Link.html#method-c-not_set_name","()","",null,0],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Source::Categories::Category","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Categories/Category.html#method-c-not_set_name","()","",null,0],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Source::Generator","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Generator.html#method-c-not_set_name","()","",null,0],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Source::Links::Link","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Links/Link.html#method-c-not_set_name","()","",null,0],["not_set_name","RSS::Maker::Atom::Feed::Items::Item::Source::Logo","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Logo.html#method-c-not_set_name","()","",null,0],["notation","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-notation","(name)","<p>Retrieves a named notation. Only notations declared in the internal DTD\nsubset can be retrieved.\n<p>Method …\n",null,0],["notationdecl","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-notationdecl","(content)","<p>&lt;!NOTATION …&gt;\n",null,0],["notationdecl","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-notationdecl","(content)","<p>&lt;!NOTATION …&gt;\n",null,0],["notationdecl?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-notationdecl-3F","()","<p>Content: [ String text ]\n",null,0],["notations","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-notations","()","<p>This method returns a list of notations that have been declared in the\n<em>internal</em> DTD subset. Notations …\n",null,0],["note","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-note","(label)","<p>Stores <code>label</code> as a note and fills in previously unknown note\nreferences.\n",null,0],["note_for","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-note_for","(ref)","<p>Creates a new link for the footnote <code>reference</code> and adds the\nreference to\nthe note order list for proper ...\n",null,0],["notes","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-notes","","<p>Enables the notes extension\n",null,0],["notice","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-notice","()","<p>Convenience accessor for <code>flash[:notice]</code>.\n",null,1],["notice=","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-notice-3D","(message)","<p>Convenience accessor for <code>flash[:notice]=</code>.\n",null,1],["notify","Rinda::NotifyTemplateEntry","Ruby/classes/Rinda/NotifyTemplateEntry.html#method-i-notify","(ev)","<p>Called by TupleSpace to notify this NotifyTemplateEntry of a new event.\n",null,0],["notify","Rinda::TupleSpace","Ruby/classes/Rinda/TupleSpace.html#method-i-notify","(event, tuple, sec=nil)","<p>Registers for notifications of <code>event</code>.  Returns a\nNotifyTemplateEntry. See NotifyTemplateEntry for examples …\n",null,0],["notify","Rinda::TupleSpaceProxy","Ruby/classes/Rinda/TupleSpaceProxy.html#method-i-notify","(ev, tuple, sec=nil)","<p>Registers for notifications of event <code>ev</code> on the proxied\nTupleSpace. See TupleSpace#notify\n",null,0],["notify","Shell","Ruby/classes/Shell.html#method-c-notify","(*opts)","",null,0],["notify","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-notify","(*opts)","<p>%pwd, %cwd -&gt; @pwd\n",null,0],["notify","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-notify","(*opts)","<p>ex)\n\n<pre><code>if you wish to output:\n   &quot;shell: job(#{@command}:#{@pid}) close pipe-out.&quot;\nthen\n   mes: &quot;job(%id) ...</code></pre>\n",null,0],["notify?","IRB::Notifier::AbstractNotifier","Ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-notify-3F","()","<p>A wrapper method used to determine whether notifications are enabled.\n<p>Defaults to <code>true</code>.\n",null,0],["notify?","IRB::Notifier::LeveledNotifier","Ruby/classes/IRB/Notifier/LeveledNotifier.html#method-i-notify-3F","()","<p>Whether to output messages to the output method, depending on the level of\nthis notifier object.\n",null,0],["notify?","IRB::Notifier::NoMsgNotifier","Ruby/classes/IRB/Notifier/NoMsgNotifier.html#method-i-notify-3F","()","<p>Ensures notifications are ignored, see AbstractNotifier#notify? for more\ninformation.\n",null,0],["notify_observers","DRb::DRbObservable","Ruby/classes/DRb/DRbObservable.html#method-i-notify_observers","(*arg)","<p>Notifies observers of a change in state.  See also\nObservable#notify_observers\n",null,0],["notify_observers","Observable","Ruby/classes/Observable.html#method-i-notify_observers","(*arg)","<p>Notify observers of a change in state <strong>if</strong> this object&#39;s\nchanged state is <code>true</code>.\n<p>This will invoke the …\n",null,0],["noutrefresh","Curses::Pad","Ruby/classes/Curses/Pad.html#method-i-noutrefresh","(p1, p2, p3, p4, p5, p6)","<p>Refreshes the pad.  <code>pad_minrow</code> and pad_mincol+ define the\nupper-left corner of the rectangle to be displayed. …\n",null,0],["noutrefresh","Curses::Window","Ruby/classes/Curses/Window.html#method-i-noutrefresh","()","<p>Refreshes the windows and lines.\n<p>Curses::Window.noutrefresh allows multiple updates with more efficiency …\n",null,0],["now","DateTime","Ruby/classes/DateTime.html#method-c-now","(p1 = v1)","<p>Creates a date-time object denoting the present time.\n\n<pre><code>DateTime.now              #=&gt; #&lt;DateTime: 2011-06-11T21:20:44+09:00 ...\n</code></pre>\n",null,0],["now","Time","Ruby/classes/Time.html#method-c-now","()","<p>Alias for Time::new. Returns a Time object initialized to the current\nsystem time.\n",null,0],["now","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-now","()","<p>Sets a flash that will not be available to the next action, only to the\ncurrent.\n\n<pre>flash.now[:message] = ...</pre>\n",null,1],["now","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-now","()","<p>Returns an ActiveSupport::TimeWithZone instance representing the current\ntime in the time zone represented …\n",null,1],["now_is_loaded?","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-now_is_loaded-3F","()","",null,1],["nowrite","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-i-nowrite","()","",null,0],["nowrite","Rake::FileUtilsExt","Ruby/classes/Rake/FileUtilsExt.html#method-i-nowrite","(value=nil)","<p>Get/set the nowrite flag controlling output from the FileUtils utilities. \nIf verbose is true, then the …\n",null,0],["npn_protocol","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-npn_protocol","()","<p>Returns the protocol string that was finally selected by the client during\nthe handshake.\n",null,0],["nread","IO","Ruby/classes/IO.html#method-i-nread","()","<p>Returns number of bytes that can be read without blocking. Returns zero if\nno information available. …\n",null,0],["nsec","Time","Ruby/classes/Time.html#method-i-nsec","()","<p>Returns the number of nanoseconds for <em>time</em>.\n\n<pre><code>t = Time.now        #=&gt; 2007-11-17 15:18:03 +0900\n&quot;%10.9f&quot; ...\n</code></pre>\n",null,0],["nsec","DateTime","Rails/classes/DateTime.html#method-i-nsec","()","<p>Returns the fraction of a second as nanoseconds\n",null,1],["nth_child","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-nth_child","(a, b, of_type, reverse)","<p>Returns a lambda that can match an element against the nth-child pseudo\nclass, given the following arguments: …\n",null,1],["ntop","IPAddr","Ruby/classes/IPAddr.html#method-c-ntop","(addr)","<p>Convert a network byte ordered string form of an IP address into human\nreadable form.\n",null,0],["null","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-c-null","()","<p>A null NameTuple, ie name=nil, version=0\n",null,0],["null?","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-null-3F","()","<p>Returns true if this is a null pointer.\n",null,0],["null?","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-null-3F","()","<p>Returns <code>true</code> if this is a null pointer.\n",null,0],["num_waiting","Queue","Ruby/classes/Queue.html#method-i-num_waiting","()","<p>Returns the number of threads waiting on the queue.\n",null,0],["num_waiting","SizedQueue","Ruby/classes/SizedQueue.html#method-i-num_waiting","()","<p>Returns the number of threads waiting on the queue.\n",null,0],["num_waiting","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-num_waiting","()","<p>Return the number of threads currently waiting on this queue.\n",null,1],["number","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-number","( object=nil )","<p>a string that consists of optional whitespace followed by an optional minus\nsign followed by a Number …\n",null,0],["number_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-number_field","(object_name, method, options = {})","<p>Returns an input tag of type “number”.\n<p>Options\n<p>Accepts same options as number_field_tag\n",null,1],["number_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-number_field_tag","(name, value = nil, options = {})","<p>Creates a number field.\n<p>Options\n<p><code>:min</code> - The minimum acceptable value.\n",null,1],["number_to_currency","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_currency","(number, options = {})","<p>Formats a <code>number</code> into a currency string (e.g., $13.65). You\ncan customize the format in the <code>options</code> hash. …\n",null,1],["number_to_currency","ActiveSupport::NumberHelper","Rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_currency","(number, options = {})","<p>Formats a <code>number</code> into a currency string (e.g., $13.65). You\ncan customize the format in the <code>options</code> hash. …\n",null,1],["number_to_delimited","ActiveSupport::NumberHelper","Rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_delimited","(number, options = {})","<p>Formats a <code>number</code> with grouped thousands using\n<code>delimiter</code> (e.g., 12,324). You can customize the format …\n",null,1],["number_to_human","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_human","(number, options = {})","<p>Pretty prints (formats and approximates) a number in a way it is more\nreadable by humans (eg.: 1200000000 …\n",null,1],["number_to_human","ActiveSupport::NumberHelper","Rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_human","(number, options = {})","<p>Pretty prints (formats and approximates) a number in a way it is more\nreadable by humans (eg.: 1200000000 …\n",null,1],["number_to_human_size","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_human_size","(number, options = {})","<p>Formats the bytes in <code>number</code> into a more understandable\nrepresentation (e.g., giving it 1500 yields 1.5 …\n",null,1],["number_to_human_size","ActiveSupport::NumberHelper","Rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_human_size","(number, options = {})","<p>Formats the bytes in <code>number</code> into a more understandable\nrepresentation (e.g., giving it 1500 yields 1.5 …\n",null,1],["number_to_percentage","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_percentage","(number, options = {})","<p>Formats a <code>number</code> as a percentage string (e.g., 65%). You can\ncustomize the format in the <code>options</code> hash. …\n",null,1],["number_to_percentage","ActiveSupport::NumberHelper","Rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_percentage","(number, options = {})","<p>Formats a <code>number</code> as a percentage string (e.g., 65%). You can\ncustomize the format in the <code>options</code> hash. …\n",null,1],["number_to_phone","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_phone","(number, options = {})","<p>Formats a <code>number</code> into a US phone number (e.g., (555)\n123-9876). You can customize the format in the  …\n",null,1],["number_to_phone","ActiveSupport::NumberHelper","Rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_phone","(number, options = {})","<p>Formats a <code>number</code> into a US phone number (e.g., (555)\n123-9876). You can customize the format in the  …\n",null,1],["number_to_rounded","ActiveSupport::NumberHelper","Rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_rounded","(number, options = {})","<p>Formats a <code>number</code> with the specified level of\n<code>:precision</code> (e.g., 112.32 has a precision of 2 if\n<code>:significant</code> …\n",null,1],["number_with_delimiter","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_with_delimiter","(number, options = {})","<p>Formats a <code>number</code> with grouped thousands using\n<code>delimiter</code> (e.g., 12,324). You can customize the format …\n",null,1],["number_with_precision","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_with_precision","(number, options = {})","<p>Formats a <code>number</code> with the specified level of\n<code>:precision</code> (e.g., 112.32 has a precision of 2 if\n<code>:significant</code> …\n",null,1],["numerator","Complex","Ruby/classes/Complex.html#method-i-numerator","()","<p>Returns the numerator.\n\n<pre><code>    1   2       3+4i  &lt;-  numerator\n    - + -i  -&gt;  ----\n    2   3        6    ...</code></pre>\n",null,0],["numerator","Float","Ruby/classes/Float.html#method-i-numerator","()","<p>Returns the numerator.  The result is machine dependent.\n\n<pre><code>n = 0.3.numerator    #=&gt; 5404319552844595\nd = ...\n</code></pre>\n",null,0],["numerator","Integer","Ruby/classes/Integer.html#method-i-numerator","()","<p>Returns self.\n",null,0],["numerator","Integer","Ruby/classes/Integer.html#method-i-numerator","()","<p>Returns self.\n",null,0],["numerator","Numeric","Ruby/classes/Numeric.html#method-i-numerator","()","<p>Returns the numerator.\n",null,0],["numerator","Rational","Ruby/classes/Rational.html#method-i-numerator","()","<p>Returns the numerator.\n\n<pre><code>Rational(7).numerator        #=&gt; 7\nRational(7, 1).numerator     #=&gt; 7\nRational(9, ...\n</code></pre>\n",null,0],["numrange","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-numrange","(name, options = {})","",null,1],["object","ActionView::Helpers::ActiveModelInstanceTag","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-object","()","",null,1],["object_address_group","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-object_address_group","(obj, &block)","",null,0],["object_class","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-object_class","()","<p>Returns the NormalClass “Object”, creating it if not found.\n<p>Records <code>self</code> as a location in “Object”. …\n",null,0],["object_group","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-object_group","(obj)","<p>A convenience method which is same as follows:\n\n<pre><code>group(1, &#39;#&lt;&#39; + obj.class.name, &#39;&gt;&#39;) { ... }</code></pre>\n",null,0],["object_id","Object","Ruby/classes/Object.html#method-i-object_id","()","<p>Returns an integer identifier for <code>obj</code>.\n<p>The same number will be returned on all calls to <code>id</code> for a\ngiven …\n",null,0],["object_maker","Psych","Ruby/classes/Psych.html#method-c-object_maker","(klass, hash)","",null,0],["oct","String","Ruby/classes/String.html#method-i-oct","()","<p>Treats leading characters of <em>str</em> as a string of octal digits (with\nan optional sign) and returns the …\n",null,0],["odd?","Bignum","Ruby/classes/Bignum.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <em>big</em> is an odd number.\n",null,0],["odd?","Fixnum","Ruby/classes/Fixnum.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <em>fix</em> is an odd number.\n",null,0],["odd?","Integer","Ruby/classes/Integer.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <em>int</em> is an odd number.\n",null,0],["odd?","Integer","Ruby/classes/Integer.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <em>int</em> is an odd number.\n",null,0],["odd?","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-i-odd-3F","()","",null,1],["of","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-of","(p1)","<p>Returns the instruction sequence containing the given proc or method.\n<p>For example, using irb:\n\n<pre><code># a proc ...</code></pre>\n",null,0],["off","Tracer","Ruby/classes/Tracer.html#method-c-off","()","<p>Disable tracing\n",null,0],["off_event","WIN32OLE_EVENT","Ruby/classes/WIN32OLE_EVENT.html#method-i-off_event","(p1 = v1)","<p>removes the callback of event.\n\n<pre><code>ie = WIN32OLE.new(&#39;InternetExplorer.Application&#39;)\nev = WIN32OLE_EVENT.new(ie) ...</code></pre>\n",null,0],["off_tags","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-off_tags","(res, item)","<p>Turns off tags for <code>item</code> on <code>res</code>\n",null,0],["off_tags","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-off_tags","(res, item)","<p>Maintains a bitmask to allow HTML elements to be closed properly.  See\nRDoc::Markup::Formatter.\n",null,0],["offset","MatchData","Ruby/classes/MatchData.html#method-i-offset","(p1)","<p>Returns a two-element array containing the beginning and ending offsets of\nthe <em>n</em>th match. <em>n</em> can be a …\n",null,0],["offset","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-offset","(value)","<p>Specifies the number of rows to skip before returning rows.\n\n<pre>User.offset(10) # generated SQL has &quot;OFFSET ...</pre>\n",null,1],["offset_vtbl","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-offset_vtbl","()","<p>Returns the offset ov VTBL.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbooks&#39;) ...</code></pre>\n",null,0],["oflush","IO","Ruby/classes/IO.html#method-i-oflush","()","<p>Flushes output buffer in kernel.\n<p>You must require &#39;io/console&#39; to use this method.\n",null,0],["oid","OpenSSL::ASN1::ObjectId","Ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-oid","()","",null,0],["oid","OpenSSL::X509::Attribute","Ruby/classes/OpenSSL/X509/Attribute.html#method-i-oid","()","",null,0],["oid","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-i-oid","()","",null,0],["oid=","OpenSSL::X509::Attribute","Ruby/classes/OpenSSL/X509/Attribute.html#method-i-oid-3D","(p1)","",null,0],["oid=","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-i-oid-3D","(p1)","",null,0],["ok?","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-ok-3F","()","<p>Are all the dependencies in the list satisfied?\n",null,0],["ok?","Win32::SSPI::SSPIResult","Ruby/classes/Win32/SSPI/SSPIResult.html#method-i-ok-3F","()","",null,0],["ok_to_remove?","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-ok_to_remove-3F","(full_name, check_dev=true)","<p>Is is ok to remove a gemspec from the dependency list?\n<p>If removing the gemspec creates breaks a currently …\n",null,0],["old_enc=","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-i-old_enc-3D","( enc )","",null,0],["ole_activex_initialize","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_activex_initialize","()","<p>Initialize WIN32OLE object(ActiveX Control) by calling\nIPersistMemory::InitNew.\n<p>Before calling OLE method, …\n",null,0],["ole_classes","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-c-ole_classes","(p1)","<p>Returns array of WIN32OLE_TYPE objects defined by the <em>typelib</em> type\nlibrary. This method will be OBSOLETE …\n",null,0],["ole_classes","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-ole_classes","()","",null,0],["ole_free","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_free","()","<p>invokes Release method of Dispatch interface of WIN32OLE object. Usually,\nyou do not need to call this …\n",null,0],["ole_free","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-ole_free","(p1)","<p>Invokes Release method of Dispatch interface of WIN32OLE object. You should\nnot use this method because …\n",null,0],["ole_func_methods","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_func_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is\nproperty (settable) of WIN32OLE …\n",null,0],["ole_get_methods","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_get_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is\nproperty (gettable) of WIN32OLE …\n",null,0],["ole_initialize","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-ole_initialize","()","<p>:nodoc\n",null,0],["ole_method","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_method","(p1)","<p>Returns WIN32OLE_METHOD object corresponding with method specified by 1st\nargument.\n\n<pre><code>excel = WIN32OLE.new(&#39;Excel.Application&#39;) ...</code></pre>\n",null,0],["ole_method_help","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_method_help","(p1)","",null,0],["ole_methods","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_methods","()","<p>Returns the array of WIN32OLE_METHOD object. The element is OLE method of\nWIN32OLE object.\n\n<pre><code>excel = WIN32OLE.new(&#39;Excel.Application&#39;) ...</code></pre>\n",null,0],["ole_methods","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-ole_methods","()","<p>Returns array of WIN32OLE_METHOD objects which represent OLE method defined\nin OLE type library.\n\n<pre><code>tobj ...</code></pre>\n",null,0],["ole_obj_help","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_obj_help","()","",null,0],["ole_put_methods","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_put_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is\nproperty (settable) of WIN32OLE …\n",null,0],["ole_query_interface","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_query_interface","(p1)","<p>Returns WIN32OLE object for a specific dispatch or dual interface specified\nby iid.\n\n<pre><code>ie = WIN32OLE.new(&#39;InternetExplorer.Application&#39;) ...</code></pre>\n",null,0],["ole_reference_count","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-ole_reference_count","(p1)","<p>Returns reference counter of Dispatch interface of WIN32OLE object. You\nshould not use this method because …\n",null,0],["ole_respond_to?","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_respond_to-3F","(p1)","<p>Returns true when OLE object has OLE method, otherwise returns false.\n\n<pre><code>ie = WIN32OLE.new(&#39;InternetExplorer.Application&#39;) ...</code></pre>\n",null,0],["ole_show_help","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-ole_show_help","(p1, p2 = v2)","<p>Displays helpfile. The 1st argument specifies WIN32OLE_TYPE object or\nWIN32OLE_METHOD object or helpfile. …\n",null,0],["ole_type","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_type","()","<p>Returns WIN32OLE_TYPE object.\n\n<pre><code>excel = WIN32OLE.new(&#39;Excel.Application&#39;)\ntobj = excel.ole_type</code></pre>\n",null,0],["ole_type","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-i-ole_type","()","<p>Returns OLE type of WIN32OLE_PARAM object(parameter of OLE method).\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</code></pre>\n",null,0],["ole_type","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-ole_type","()","<p>returns type of OLE class.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Application&#39;) ...</code></pre>\n",null,0],["ole_type","WIN32OLE_VARIABLE","Ruby/classes/WIN32OLE_VARIABLE.html#method-i-ole_type","()","<p>Returns OLE type string.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;XlSheetType&#39;) ...</code></pre>\n",null,0],["ole_type_detail","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-i-ole_type_detail","()","<p>Returns detail information of type of argument.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</code></pre>\n",null,0],["ole_type_detail","WIN32OLE_VARIABLE","Ruby/classes/WIN32OLE_VARIABLE.html#method-i-ole_type_detail","()","<p>Returns detail information of type. The information is array of type.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;DirectX ...</code></pre>\n",null,0],["ole_typelib","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-ole_typelib","()","<p>Returns the WIN32OLE_TYPELIB object. The object represents the type library\nwhich contains the WIN32OLE …\n",null,0],["ole_typelib","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-ole_typelib","()","<p>Returns the WIN32OLE_TYPELIB object which is including the WIN32OLE_TYPE\nobject. If it is not found, …\n",null,0],["ole_types","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-ole_types","()","<p>Returns the type library file path.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;) ...</code></pre>\n",null,0],["ole_uninitialize","WIN32OLE","Ruby/classes/WIN32OLE.html#method-c-ole_uninitialize","()","<p>:nodoc\n",null,0],["on","OptionParser","Ruby/classes/OptionParser.html#method-i-on","(*opts, &block)","<p>Add option switch and handler. See #make_switch for an explanation of\nparameters.\n",null,0],["on","Tracer","Ruby/classes/Tracer.html#method-c-on","()","<p>Start tracing\n<p>Example\n\n<pre><code>Tracer.on\n# code to trace here\nTracer.off</code></pre>\n",null,0],["on_attr_charref","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_attr_charref","(code)","",null,0],["on_attr_charref_hex","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_attr_charref_hex","(code)","",null,0],["on_attr_entityref","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_attr_entityref","(ref)","",null,0],["on_attr_value","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_attr_value","(str)","",null,0],["on_attribute","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_attribute","(name)","",null,0],["on_cdata","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_cdata","(str)","",null,0],["on_cdata_block","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_cdata_block","(string)","",null,1],["on_characters","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_characters","(string)","",null,1],["on_chardata","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_chardata","(str)","",null,0],["on_charref","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_charref","(code)","",null,0],["on_charref","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_charref","(code)","",null,0],["on_charref_hex","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_charref_hex","(code)","",null,0],["on_charref_hex","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_charref_hex","(code)","",null,0],["on_curve?","OpenSSL::PKey::EC::Point","Ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-on_curve-3F","()","",null,0],["on_end_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_end_document","()","",null,1],["on_end_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_end_element","(name)","",null,1],["on_entityref","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_entityref","(ref)","",null,0],["on_entityref","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_entityref","(ent)","",null,0],["on_error","RDoc::RD::BlockParser","Ruby/classes/RDoc/RD/BlockParser.html#method-i-on_error","(et, ev, _values)","<p>Raises a ParseError when invalid formatting is found\n",null,0],["on_error","RDoc::RD::InlineParser","Ruby/classes/RDoc/RD/InlineParser.html#method-i-on_error","(et, ev, values)","<p>Raises a ParseError when invalid formatting is found\n",null,0],["on_error","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-on_error","(t, val, vstack)","<p>This method is called when a parse error is found.\n<p>ERROR_TOKEN_ID is an internal ID of token which caused …\n",null,0],["on_etag","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_etag","(name)","",null,0],["on_event","WIN32OLE_EVENT","Ruby/classes/WIN32OLE_EVENT.html#method-i-on_event","(*args)","<p>Defines the callback event. If argument is omitted, this method defines the\ncallback of all events.  …\n",null,0],["on_event_with_outargs","WIN32OLE_EVENT","Ruby/classes/WIN32OLE_EVENT.html#method-i-on_event_with_outargs","(*args)","<p>Defines the callback of event. If you want modify argument in callback, you\ncould use this method instead …\n",null,0],["on_head","OptionParser","Ruby/classes/OptionParser.html#method-i-on_head","(*opts, &block)","<p>Add option switch like with #on, but at head of summary.\n",null,0],["on_load","ActiveSupport","Rails/classes/ActiveSupport.html#method-c-on_load","(name, options = {}, &block)","",null,1],["on_stag","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_stag","(name)","",null,0],["on_stag_end","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_stag_end","(name)","",null,0],["on_stag_end","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_stag_end","(name)","",null,0],["on_stag_end_empty","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_stag_end_empty","(name)","",null,0],["on_stag_end_empty","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-on_stag_end_empty","(name)","",null,0],["on_start_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_start_document","()","",null,1],["on_start_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_start_element","(name, attrs = {})","",null,1],["on_tags","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-on_tags","(res, item)","<p>Turns on tags for <code>item</code> on <code>res</code>\n",null,0],["on_tags","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-on_tags","(res, item)","<p>Maintains a bitmask to allow HTML elements to be closed properly.  See\nRDoc::Markup::Formatter.\n",null,0],["on_tail","OptionParser","Ruby/classes/OptionParser.html#method-i-on_tail","(*opts, &block)","<p>Add option switch like with #on, but at tail of summary.\n",null,0],["on_xmldecl_encoding","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_xmldecl_encoding","(str)","",null,0],["on_xmldecl_end","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_xmldecl_end","()","",null,0],["on_xmldecl_standalone","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_xmldecl_standalone","(str)","",null,0],["on_xmldecl_version","RSS::XMLScanListener","Ruby/classes/RSS/XMLScanListener.html#method-i-on_xmldecl_version","(str)","",null,0],["one?","Enumerable","Ruby/classes/Enumerable.html#method-i-one-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block returns …\n",null,0],["ongoing_visibility=","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-ongoing_visibility-3D","(visibility)","<p>Changes the visibility for new methods to <code>visibility</code>\n",null,0],["only","ActiveRecord::SpawnMethods","Rails/classes/ActiveRecord/SpawnMethods.html#method-i-only","(*onlies)","<p>Removes any condition from the query other than the one(s) specified in\n<code>onlies</code>.\n\n<pre>Post.order(&#39;id asc&#39;).only(:where) ...</pre>\n",null,1],["only_child","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-only_child","(of_type)","<p>Creates a only child lambda. Pass <code>of-type</code> to only look at\nelements of its type.\n",null,1],["opaque","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-opaque","(secret_key)","<p>Opaque based on random generation - but changing each request?\n",null,1],["opaque=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-opaque-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["open","CSV","Ruby/classes/CSV.html#method-c-open","(*args)","<p>This method opens an IO object, and wraps that with CSV.  This is intended\nas the primary interface for …\n",null,0],["open","DBM","Ruby/classes/DBM.html#method-c-open","(*args)","<p>Open a dbm database and yields it if a block is given. See also\n<code>DBM.new</code>.\n",null,0],["open","DRb::DRbProtocol","Ruby/classes/DRb/DRbProtocol.html#method-c-open","(uri, config, first=true)","<p>Open a client connection to <code>uri</code> with the configuration\n<code>config</code>.\n<p>The DRbProtocol module asks each registered …\n",null,0],["open","DRb::DRbSSLSocket","Ruby/classes/DRb/DRbSSLSocket.html#method-c-open","(uri, config)","<p>Return an DRb::DRbSSLSocket instance as a client-side connection, with the\nSSL connected.  This is called …\n",null,0],["open","Dir","Ruby/classes/Dir.html#method-c-open","(*args)","<p>With no block, <code>open</code> is a synonym for <code>Dir::new</code>. If\na block is present, it is passed <em>aDir</em> as a parameter. …\n",null,0],["open","File","Ruby/classes/File.html#method-c-open","(*args)","<p>With no associated block, <code>File.open</code> is a synonym for File.new.\nIf the optional code block is given, it …\n",null,0],["open","GDBM","Ruby/classes/GDBM.html#method-c-open","(*args)","<p>If called without a block, this is synonymous to GDBM::new. If a block is\ngiven, the new GDBM instance …\n",null,0],["open","IO","Ruby/classes/IO.html#method-c-open","(*args)","<p>With no associated block, <code>IO.open</code> is a synonym for IO.new.  If\nthe optional code block is given, it will …\n",null,0],["open","Kernel","Ruby/classes/Kernel.html#method-c-open","(*args)","<p>Creates an IO object connected to the given stream, file, or subprocess.\n<p>If <code>path</code> does not start with a …\n",null,0],["open","Net::FTP","Ruby/classes/Net/FTP.html#method-c-open","(host, user = nil, passwd = nil, acct = nil)","<p>A synonym for <code>FTP.new</code>, but with a mandatory host parameter.\n<p>If a block is given, it is passed the <code>FTP</code> …\n",null,0],["open","OpenURI::OpenRead","Ruby/classes/OpenURI/OpenRead.html#method-i-open","(*rest, &block)","<p>OpenURI::OpenRead#open provides `open&#39; for URI::HTTP and URI::FTP.\n<p>OpenURI::OpenRead#open takes optional …\n",null,0],["open","PTY","Ruby/classes/PTY.html#method-c-open","()","<p>Allocates a pty (pseudo-terminal).\n<p>In the block form, yields two arguments <code>master_io, slave_file</code>\nand the …\n",null,0],["open","Pathname","Ruby/classes/Pathname.html#method-i-open","(p1 = v1, p2 = v2, p3 = v3)","<p>Opens the file for reading or writing.\n<p>See File.open.\n",null,0],["open","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-c-open","(*args)","<p>Creates a new DNS resolver.  See Resolv::DNS.new for argument details.\n<p>Yields the created DNS resolver …\n",null,0],["open","SDBM","Ruby/classes/SDBM.html#method-c-open","(*args)","<p>If called without a block, this is the same as SDBM.new.\n<p>If a block is given, the new database will be …\n",null,0],["open","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-open","(path, mode = nil, perm = 0666, &b)","<p>See IO.open when <code>path</code> is a file.\n<p>See Dir.open when <code>path</code> is a directory.\n",null,0],["open","StringIO","Ruby/classes/StringIO.html#method-c-open","(*args)","<p>Equivalent to StringIO.new except that when it is called with a block, it\nyields with the new instance …\n",null,0],["open","Syslog","Ruby/classes/Syslog.html#method-c-open","(p1 = v1, p2 = v2, p3 = v3)","<p>Open the syslog facility. Raises a runtime exception if it is already open.\n<p>Can be called with or without …\n",null,0],["open","Tempfile","Ruby/classes/Tempfile.html#method-i-open","()","<p>Opens or reopens the file with mode “r+”.\n",null,0],["open","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-open","(subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED, &blk)","<p>Same as Win32::Registry.open (self, subkey, desired, opt)\n",null,0],["open","Win32::Registry","Ruby/classes/Win32/Registry.html#method-c-open","(hkey, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)","<p>— Registry.open(key, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)\n<p>— Registry.open(key, subkey, …\n",null,0],["open","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-c-open","(*args)","<p>Opens a file specified by <code>filename</code> as a gzipped file, and\nreturns a GzipReader object associated with …\n",null,0],["open","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-c-open","(*args)","<p>Opens a file specified by <code>filename</code> for writing gzip compressed\ndata, and returns a GzipWriter object …\n",null,0],["open","ActionDispatch::Http::UploadedFile","Rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-open","()","<p>Shortcut for <code>tempfile.open</code>.\n",null,1],["open","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-i-open","(key)","",null,1],["open!","Syslog","Ruby/classes/Syslog.html#method-c-open-21","(*args)","<p>Closes and then reopens the syslog.\n<p>Arguments are the same as for open().\n",null,0],["open?","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-open-3F","()","<p>Returns if key is not closed.\n",null,0],["open_message_stream","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-open_message_stream","(from_addr, *to_addrs)","<p>Opens a message writer stream and gives it to the block. The stream is\nvalid only in the block, and has …\n",null,0],["open_server","DRb::DRbProtocol","Ruby/classes/DRb/DRbProtocol.html#method-c-open_server","(uri, config, first=true)","<p>Open a server listening for connections at <code>uri</code> with\nconfiguration <code>config</code>.\n<p>The DRbProtocol module asks …\n",null,0],["open_server","DRb::DRbSSLSocket","Ruby/classes/DRb/DRbSSLSocket.html#method-c-open_server","(uri, config)","<p>Returns a DRb::DRbSSLSocket instance as a server-side connection, with the\nSSL connected.  This is called …\n",null,0],["open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-open_transactions","()","",null,1],["opendir","Pathname","Ruby/classes/Pathname.html#method-i-opendir","()","<p>Opens the referenced directory.\n<p>See Dir.open.\n",null,0],["opened?","Syslog","Ruby/classes/Syslog.html#method-c-opened-3F","()","<p>Returns true if the syslog is open.\n",null,0],["opt_parser","Rails::Server","Rails/classes/Rails/Server.html#method-i-opt_parser","()","",null,1],["optimize_routes_generation?","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-optimize_routes_generation-3F","()","",null,1],["option_groups_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-option_groups_from_collection_for_select","(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = nil)","<p>Returns a string of <code>&lt;option&gt;</code> tags, like\n<code>options_from_collection_for_select</code>, but groups them by …\n",null,1],["option_list","RDoc::Task","Ruby/classes/RDoc/Task.html#method-i-option_list","()","<p>List of options that will be supplied to RDoc\n",null,0],["optional?","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-i-optional-3F","()","<p>Returns true if argument is optional.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;) ...</code></pre>\n",null,0],["optional_port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-optional_port","()","<p>Returns a number port suffix like 8080 if the port number of this request\nis not the default HTTP port …\n",null,1],["options","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-options","(path, initheader = nil)","<p>Sends a OPTIONS request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,0],["options","OptionParser::Arguable","Ruby/classes/OptionParser/Arguable.html#method-i-options","()","<p>Actual OptionParser object, automatically created if nonexistent.\n<p>If called with a block, yields the  …\n",null,0],["options","Rake::Application","Ruby/classes/Rake/Application.html#method-i-options","()","<p>Application options from the command line\n",null,0],["options","Rake::Application","Ruby/classes/Rake/Application.html#method-i-options","()","<p>Application options from the command line\n",null,0],["options","Regexp","Ruby/classes/Regexp.html#method-i-options","()","<p>Returns the set of bits corresponding to the options used when creating\nthis Regexp (see <code>Regexp::new</code> …\n",null,0],["options","Syslog","Ruby/classes/Syslog.html#method-c-options","()","<p>Returns the options bitmask used in the last call to open()\n",null,0],["options=","OptionParser::Arguable","Ruby/classes/OptionParser/Arguable.html#method-i-options-3D","(opt)","<p>Sets OptionParser object, when <code>opt</code> is <code>false</code> or\n<code>nil</code>, methods OptionParser::Arguable#options and\nOptionParser::Arguable#options= …\n",null,0],["options_for","ActiveSupport::JSON::Encoding::Encoder","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-options_for","(value)","",null,1],["options_for_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-options_for_select","(container, selected = nil)","<p>Accepts a container (hash, array, enumerable, your type) and returns a\nstring of option tags. Given a …\n",null,1],["options_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-options_from_collection_for_select","(collection, value_method, text_method, selected = nil)","<p>Returns a string of option tags that have been compiled by iterating over\nthe <code>collection</code> and assigning …\n",null,1],["options_include_default?","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-options_include_default-3F","(options)","",null,1],["optname","Socket::Option","Ruby/classes/Socket/Option.html#method-i-optname","()","<p>returns the socket option name as an integer.\n\n<pre><code>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).optname ...</code></pre>\n",null,0],["ord","Integer","Ruby/classes/Integer.html#method-i-ord","()","<p>Returns the int itself.\n\n<pre><code>?a.ord    #=&gt; 97\n</code></pre>\n<p>This method is intended for compatibility to character constant …\n",null,0],["ord","Integer","Ruby/classes/Integer.html#method-i-ord","()","<p>Returns the int itself.\n\n<pre><code>?a.ord    #=&gt; 97\n</code></pre>\n<p>This method is intended for compatibility to character constant …\n",null,0],["ord","String","Ruby/classes/String.html#method-i-ord","()","<p>Return the <code>Integer</code> ordinal of a one-character string.\n\n<pre><code>&quot;a&quot;.ord         #=&gt; 97\n</code></pre>\n",null,0],["order","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-order","()","<p>See the OpenSSL documentation for EC_GROUP_get_order()\n",null,0],["order","OptionParser","Ruby/classes/OptionParser.html#method-i-order","(*argv, &block)","<p>Parses command line arguments <code>argv</code> in order. When a block is\ngiven, each non-option argument is yielded. …\n",null,0],["order","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-order","(*args)","<p>Allows to specify an order attribute:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">order</span>(<span class=\"ruby-string\">&#39;name&#39;</span>)\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">SELECT</span> <span class=\"ruby-string\">&quot;users&quot;</span>.* <span class=\"ruby-constant\">FROM</span> <span class=\"ruby-string\">&quot;users&quot;</span> <span class=\"ruby-constant\">ORDER</span> <span class=\"ruby-constant\">BY</span> <span class=\"ruby-identifier\">name</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["order!","OptionParser","Ruby/classes/OptionParser.html#method-i-order-21","(argv = default_argv, &nonopt)","<p>Same as #order, but removes switches destructively. Non-option arguments\nremain in <code>argv</code>.\n",null,0],["order!","OptionParser::Arguable","Ruby/classes/OptionParser/Arguable.html#method-i-order-21","(&blk)","<p>Parses <code>self</code> destructively in order and returns\n<code>self</code> containing the rest arguments left unparsed.\n",null,0],["ordering=","GetoptLong","Ruby/classes/GetoptLong.html#method-i-ordering-3D","(ordering)","<p>Set the handling of the ordering of options and arguments. A RuntimeError\nis raised if option processing …\n",null,0],["ordinal","Date","Ruby/classes/Date.html#method-c-ordinal","(p1 = v1, p2 = v2, p3 = v3)","<p>Creates a date object denoting the given ordinal date.\n<p>The day of year should be a negative or a positive …\n",null,0],["ordinal","DateTime","Ruby/classes/DateTime.html#method-c-ordinal","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7)","<p>Creates a date-time object denoting the given ordinal date.\n\n<pre><code>DateTime.ordinal(2001,34) #=&gt; #&lt;DateTime: ...\n</code></pre>\n",null,0],["ordinal","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-ordinal","(number)","<p>Returns the suffix that should be added to a number to denote the position\nin an ordered sequence such …\n",null,1],["ordinal","Integer","Rails/classes/Integer.html#method-i-ordinal","()","<p>Ordinal returns the suffix used to denote the position in an ordered\nsequence such as 1st, 2nd, 3rd, …\n",null,1],["ordinalize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-ordinalize","(number)","<p>Turns a number into an ordinal string used to denote the position in an\nordered sequence such as 1st, …\n",null,1],["ordinalize","Integer","Rails/classes/Integer.html#method-i-ordinalize","()","<p>Ordinalize turns a number into an ordinal string used to denote the\nposition in an ordered sequence such …\n",null,1],["orig_initialize","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-orig_initialize","(extensions = DEFAULT_EXTENSIONS, debug = false)","<p>TODO remove when kpeg 0.10 is released\n",null,0],["orig_name","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-orig_name","()","<p>Returns original filename recorded in the gzip file header, or\n<code>nil</code> if original filename is not present. …\n",null,0],["orig_name=","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-orig_name-3D","(p1)","<p>Specify the original name (<code>str</code>) in the gzip header.\n",null,0],["original_concat","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-original_concat","(value)","",null,1],["original_dir","Rake","Ruby/classes/Rake.html#method-i-original_dir","()","<p>Return the original directory where the Rake application was started.\n",null,0],["original_fullpath","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-original_fullpath","()","",null,1],["original_url","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-original_url","()","<p>Returns the original request URL as a <code>String</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># get &quot;/articles?page=2&quot;</span>\n<span class=\"ruby-identifier\">request</span>.<span class=\"ruby-identifier\">original_url</span> <span class=\"ruby-comment\"># =&gt; &quot;http://www.example.com/articles?page=2&quot;</span>\n</pre>\n",null,1],["orthogonal?","Matrix","Ruby/classes/Matrix.html#method-i-orthogonal-3F","()","<p>Returns <code>true</code> is this is an orthogonal matrix Raises an error\nif matrix is not square.\n",null,0],["os_code","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-os_code","()","<p>Returns OS code number recorded in the gzip file header.\n",null,0],["other_elements","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-other_elements","()","",null,0],["others_possible?","Gem::DependencyResolver::ActivationRequest","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html#method-i-others_possible-3F","()","<p>Indicate if this activation is one of a set of possible requests for the\nsame Dependency request.\n",null,0],["out","CGI","Ruby/classes/CGI.html#method-i-out","(options = \"text/html\")","<p>Print an HTTP header and body to $DEFAULT_OUTPUT ($&gt;)\n<p><code>content_type_string</code> &mdash; If a string is passed, it …\n",null,0],["out","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-out","(dev = STDOUT, &block)","<p>Calls <code>device.print</code> on the result passing the <em>block</em> to\n#transact\n",null,0],["out_of_line?","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-out_of_line-3F","()","",null,0],["out_of_line?","RSS::Maker::ItemsBase::ItemBase::ContentBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-out_of_line-3F","()","",null,0],["outdated","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-outdated","()","<p>Return a list of all outdated specifications. This method is HEAVY as it\nmust go fetch specifications …\n",null,0],["output","Gem::MockGemUi","Ruby/classes/Gem/MockGemUi.html#method-i-output","()","",null,0],["output","PrettyPrint::Breakable","Ruby/classes/PrettyPrint/Breakable.html#method-i-output","(out, output_width)","",null,0],["output","PrettyPrint::Text","Ruby/classes/PrettyPrint/Text.html#method-i-output","(out, output_width)","",null,0],["output=","Readline","Ruby/classes/Readline.html#method-c-output-3D","(p1)","<p>Specifies a File object <code>output</code> that is output stream for\nReadline.readline method.\n<p>Raises SecurityError …\n",null,0],["output?","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-i-output-3F","()","<p>Returns true if argument is output.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Internet Controls&#39;, &#39;DWebBrowserEvents&#39;) ...</code></pre>\n",null,0],["output_encoding=","RSS::RootElementMixin","Ruby/classes/RSS/RootElementMixin.html#method-i-output_encoding-3D","(enc)","",null,0],["output_flag_file","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-output_flag_file","(op_dir)","<p>Return the path name of the flag file in an output directory.\n",null,0],["output_name","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-output_name","(context)","<p>Name for output to HTML.  For class methods the full name with a “.” is\nused like <code>SomeClass.method_name</code> …\n",null,0],["outside_transaction?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-outside_transaction-3F","()","",null,1],["overlaps?","Range","Rails/classes/Range.html#method-i-overlaps-3F","(other)","<p>Compare two ranges and see if they overlap each other\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">overlaps?</span>(<span class=\"ruby-value\">4</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">6</span>) <span class=\"ruby-comment\"># =&gt; true</span>\n(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">overlaps?</span>(<span class=\"ruby-value\">7</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">9</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["owned?","File","Ruby/classes/File.html#method-c-owned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective used\nid of the calling process is the owner of …\n",null,0],["owned?","File::Stat","Ruby/classes/File/Stat.html#method-i-owned-3F","()","<p>Returns <code>true</code> if the effective user id of the process is the\nsame as the owner of <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).owned? ...</code></pre>\n",null,0],["owned?","FileTest","Ruby/classes/FileTest.html#method-i-owned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective used\nid of the calling process is the owner of …\n",null,0],["owned?","Mutex","Ruby/classes/Mutex.html#method-i-owned-3F","()","<p>Returns <code>true</code> if this lock is currently held by current thread.\n<em>This API is experimental, and subject</em> …\n",null,0],["owned?","Pathname","Ruby/classes/Pathname.html#method-i-owned-3F","()","<p>See FileTest.owned?.\n",null,0],["owner","Method","Ruby/classes/Method.html#method-i-owner","()","<p>Returns the class or module that defines the method.\n",null,0],["owner","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-owner","()","<p>Returns the class or module that defines the method.\n",null,0],["p","Kernel","Ruby/classes/Kernel.html#method-i-p","(*args)","<p>For each object, directly writes <em>obj</em>.<code>inspect</code> followed\nby a newline to the program&#39;s standard output. …\n",null,0],["p","Matrix::LUPDecomposition","Ruby/classes/Matrix/LUPDecomposition.html#method-i-p","()","<p>Returns the permutation matrix <code>P</code>\n",null,0],["pack","Array","Ruby/classes/Array.html#method-i-pack","(p1)","<p>Packs the contents of <em>arr</em> into a binary sequence according to the\ndirectives in <em>aTemplateString</em> (see …\n",null,0],["pack","DL::Packer","Ruby/classes/DL/Packer.html#method-i-pack","(ary)","",null,0],["pack","DL::Stack","Ruby/classes/DL/Stack.html#method-i-pack","(ary)","",null,0],["pack_graphemes","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-pack_graphemes","(unpacked)","<p>Reverse operation of unpack_graphemes.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Unicode</span>.<span class=\"ruby-identifier\">pack_graphemes</span>(<span class=\"ruby-constant\">Unicode</span>.<span class=\"ruby-identifier\">unpack_graphemes</span>(<span class=\"ruby-string\">&#39;क्षि&#39;</span>)) <span class=\"ruby-comment\"># =&gt; &#39;क्षि&#39;</span>\n</pre>\n",null,1],["pack_sockaddr_in","Socket","Ruby/classes/Socket.html#method-c-pack_sockaddr_in","(p1, p2)","<p>Packs <em>port</em> and <em>host</em> as an AF_INET/AF_INET6 sockaddr\nstring.\n\n<pre><code>Socket.sockaddr_in(80, &quot;127.0.0.1&quot;)\n#=&gt; &quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&quot; ...\n</code></pre>\n",null,0],["pack_sockaddr_un","Socket","Ruby/classes/Socket.html#method-c-pack_sockaddr_un","(p1)","<p>Packs <em>path</em> as an AF_UNIX sockaddr string.\n\n<pre><code>Socket.sockaddr_un(&quot;/tmp/sock&quot;) #=&gt; &quot;\\x01\\x00/tmp/sock\\x00\\x00...&quot;\n</code></pre>\n",null,0],["package_dir_path","Rake::PackageTask","Ruby/classes/Rake/PackageTask.html#method-i-package_dir_path","()","",null,0],["package_name","Rake::PackageTask","Ruby/classes/Rake/PackageTask.html#method-i-package_name","()","",null,0],["packdw","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-packdw","(dw)","",null,0],["packqw","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-packqw","(qw)","",null,0],["padding=","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-padding-3D","(p1)","<p>Enables or disables padding. By default encryption operations are padded\nusing standard block padding …\n",null,0],["page","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-page","()","<p>Paginates output through a pager program.\n",null,0],["page","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-page","(name)","<p>Returns the RDoc::TopLevel that is a text file and has the given\n<code>name</code>\n",null,0],["page_cache_extension","ActionController::Caching","Rails/classes/ActionController/Caching.html#method-c-page_cache_extension","()","",null,1],["page_cache_extension=","ActionController::Caching","Rails/classes/ActionController/Caching.html#method-c-page_cache_extension-3D","(extension)","",null,1],["page_file","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-page_file","(page_name)","<p>Path to the ri data for <code>page_name</code>\n",null,0],["page_name","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-page_name","()","<p>Base name of this file without the extension\n",null,0],["paging?","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-paging-3F","()","<p>Are we using a pager?\n",null,0],["pair","Socket","Ruby/classes/Socket.html#method-c-pair","(p1, p2, p3 = v3)","<p>Creates a pair of sockets connected each other.\n<p><em>domain</em> should be a communications domain such as: :INET, …\n",null,0],["pair","UNIXSocket","Ruby/classes/UNIXSocket.html#method-c-pair","(p1 = v1, p2 = v2)","<p>Creates a pair of sockets connected each other.\n<p><em>socktype</em> should be a socket type such as: :STREAM, :DGRAM, …\n",null,0],["pair_content","Curses","Ruby/classes/Curses.html#method-c-pair_content","(p1)","<p>Returns a 2 item Array, with the foreground and background color, in\n<code>pair</code>\n",null,0],["pair_number","Curses","Ruby/classes/Curses.html#method-c-pair_number","(p1)","<p>Returns the Fixnum color pair number of attributes <code>attrs</code>.\n",null,0],["paragraph","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-paragraph","(parts)","<p>Creates an RDoc::Markup::Paragraph from <code>parts</code> and\nincluding\nextension-specific behavior\n",null,0],["paragraph","RDoc::RD::BlockParser","Ruby/classes/RDoc/RD/BlockParser.html#method-i-paragraph","(value)","<p>Creates a paragraph for <code>value</code>\n",null,0],["param_key","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-param_key","(record_or_class)","<p>Returns string to use for params names. It differs for namespaced models\nregarding whether it&#39;s inside …\n",null,1],["param_list","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-i-param_list","()","<p>A list of this method&#39;s method and yield parameters. \n<code>call-seq</code> params are preferred over parsed method …\n",null,0],["param_seq","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-i-param_seq","()","<p>Pretty parameter list for this method.  If the method&#39;s parameters were\ngiven by <code>call-seq</code> it is preferred …\n",null,0],["parameter_filter","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-parameter_filter","()","",null,1],["parameter_filter_for","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-parameter_filter_for","(filters)","",null,1],["parameterize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-parameterize","(string, sep = '-')","<p>Replaces special characters in a string so that it may be used as part of a\n&#39;pretty&#39; URL.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["parameterize","String","Rails/classes/String.html#method-i-parameterize","(sep = '-')","<p>Replaces special characters in a string so that it may be used as part of a\n&#39;pretty&#39; URL.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["parameters","Method","Ruby/classes/Method.html#method-i-parameters","()","<p>Returns the parameter information of this method.\n",null,0],["parameters","Proc","Ruby/classes/Proc.html#method-i-parameters","()","<p>Returns the parameter information of this proc.\n\n<pre><code>prc = lambda{|x, y=42, *other|}\nprc.parameters  #=&gt; [[:req, ...\n</code></pre>\n",null,0],["parameters","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-parameters","()","<p>Returns the parameter information of this method.\n",null,0],["parameters","ActionDispatch::Http::Parameters","Rails/classes/ActionDispatch/Http/Parameters.html#method-i-parameters","()","<p>Returns both GET and POST parameters in a single hash.\n",null,1],["params","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-params","()","<p>Stores all parameters of key to the hash INSECURE: PRIVATE INFORMATIONS CAN\nLEAK OUT!!! Don&#39;t use …\n",null,0],["params","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-params","()","<p>Stores all parameters of key to the hash INSECURE: PRIVATE INFORMATIONS CAN\nLEAK OUT!!! Don&#39;t use …\n",null,0],["params","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-params","()","<p>THIS METHOD IS INSECURE, PRIVATE INFORMATION CAN LEAK OUT!!!\n<p>Stores all parameters of key to the hash. …\n",null,0],["params","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-params","()","<p>THIS METHOD IS INSECURE, PRIVATE INFORMATION CAN LEAK OUT!!!\n<p>Stores all parameters of key to the hash. …\n",null,0],["params","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-params","()","<p>returns array of WIN32OLE_PARAM object corresponding with method\nparameters.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</code></pre>\n",null,0],["params","Zlib::Deflate","Ruby/classes/Zlib/Deflate.html#method-i-params","(p1, p2)","<p>Changes the parameters of the deflate stream to allow changes between\ndifferent types of data that require …\n",null,0],["params","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-params","()","",null,1],["params","ActionController::StrongParameters","Rails/classes/ActionController/StrongParameters.html#method-i-params","()","<p>Returns a new ActionController::Parameters object that has been\ninstantiated with the <code>request.parameters</code> …\n",null,1],["params","ActionDispatch::Http::Parameters","Rails/classes/ActionDispatch/Http/Parameters.html#method-i-params","()","",null,1],["params=","CGI::QueryExtension","Ruby/classes/CGI/QueryExtension.html#method-i-params-3D","(hash)","<p>Set all the parameters.\n",null,0],["params=","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-params-3D","(val)","",null,1],["params=","ActionController::StrongParameters","Rails/classes/ActionController/StrongParameters.html#method-i-params-3D","(value)","<p>Assigns the given <code>value</code> to the <code>params</code> hash. If\n<code>value</code> is a Hash, this will create an\nActionController::Parameters …\n",null,1],["params_array_from","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-params_array_from","(raw_params)","<p>Takes raw_params and turns it into an array of parameters\n",null,1],["params_ok?","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-params_ok-3F","()","<p>Validates the Diffie-Hellman parameters associated with this instance. It\nchecks whether a safe prime …\n",null,0],["paranoid","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-paranoid","(path, extension)","<p>Ensure <code>path</code> and path with <code>extension</code> are\nidentical.\n",null,0],["parent","Gem::DependencyResolver::ActivationRequest","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html#method-i-parent","()","<p>Return the ActivationRequest that contained the dependency that we were\nactivated for.\n",null,0],["parent","Pathname","Ruby/classes/Pathname.html#method-i-parent","()","<p>Returns the parent directory.\n<p>This is same as <code>self + &#39;..&#39;</code>.\n",null,0],["parent","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-parent","()","<p>Our parent CodeObject.  The parent may be missing for classes loaded from\nlegacy RI data stores.\n",null,0],["parent","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-parent","()","",null,0],["parent","Module","Rails/classes/Module.html#method-i-parent","()","<p>Returns the module which contains this one according to its name.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M</span>\n  <span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">N</span>\n  <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-constant\">X</span> = <span class=\"ruby-constant\">M</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">N</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["parent=","REXML::Child","Ruby/classes/REXML/Child.html#method-i-parent-3D","( other )","<p>Sets the parent of this child to the supplied argument.\n<p>other &mdash; Must be a Parent object.  If this object …\n",null,0],["parent=","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-parent-3D","( node )","",null,0],["parent=","REXML::Text","Ruby/classes/REXML/Text.html#method-i-parent-3D","(parent)","",null,0],["parent?","REXML::Node","Ruby/classes/REXML/Node.html#method-i-parent-3F","()","",null,0],["parent?","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-parent-3F","()","",null,0],["parent_file_name","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-parent_file_name","()","<p>File name of our parent\n",null,0],["parent_name","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-parent_name","()","<p>Name of our parent\n",null,0],["parent_name","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-parent_name","()","<p>Name of our parent with special handling for un-marshaled methods\n",null,0],["parent_name","Module","Rails/classes/Module.html#method-i-parent_name","()","<p>Returns the name of the module containing this one.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">M</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">N</span>.<span class=\"ruby-identifier\">parent_name</span> <span class=\"ruby-comment\"># =&gt; &quot;M&quot;</span>\n</pre>\n",null,1],["parent_of?","ActiveSupport::Notifications::Event","Rails/classes/ActiveSupport/Notifications/Event.html#method-i-parent_of-3F","(event)","",null,1],["parent_prefixes","AbstractController::ViewPaths::ClassMethods","Rails/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-parent_prefixes","()","",null,1],["parents","Module","Rails/classes/Module.html#method-i-parents","()","<p>Returns all the parents of this module according to its name, ordered from\nnested outwards. The receiver …\n",null,1],["parse","CGI","Ruby/classes/CGI.html#method-c-parse","(query)","<p>Parse an HTTP query string into a hash of key=&gt;value pairs.\n\n<pre><code>params = CGI::parse(&quot;query_string&quot;)\n  # ...</code></pre>\n",null,0],["parse","CGI::Cookie","Ruby/classes/CGI/Cookie.html#method-c-parse","(raw_cookie)","<p>Parse a raw cookie string into a hash of cookie-name=&gt;Cookie pairs.\n\n<pre><code>cookies = CGI::Cookie::parse(&quot;raw_cookie_string&quot;) ...</code></pre>\n",null,0],["parse","CSV","Ruby/classes/CSV.html#method-c-parse","(*args, &block)","<p>This method can be used to easily parse CSV out of a String.  You may\neither provide a <code>block</code> which will …\n",null,0],["parse","Date","Ruby/classes/Date.html#method-c-parse","(p1 = v1, p2 = v2, p3 = v3)","<p>Parses the given representation of date and time, and creates a date\nobject.  This method does not function …\n",null,0],["parse","DateTime","Ruby/classes/DateTime.html#method-c-parse","(p1 = v1, p2 = v2, p3 = v3)","<p>Parses the given representation of date and time, and creates a date\nobject.  This method does not function …\n",null,0],["parse","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-c-parse","(obj)","<p>REFACTOR: Little two element arrays like this have no real semantic value.\nI&#39;d love to see something …\n",null,0],["parse","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-c-parse","(obj)","<p>REFACTOR: Little two element arrays like this have no real semantic value.\nI&#39;d love to see something …\n",null,0],["parse","JSON","Ruby/classes/JSON.html#method-i-parse","(source, opts = {})","<p>Parse the JSON document <em>source</em> into a Ruby data structure and\nreturn it.\n<p><em>opts</em> can have the following keys: …\n",null,0],["parse","Net::SMTP::Response","Ruby/classes/Net/SMTP/Response.html#method-c-parse","(str)","<p>Parses the received response and separates the reply code and the human\nreadable reply text\n",null,0],["parse","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-parse","(str)","",null,0],["parse","OptionParser","Ruby/classes/OptionParser.html#method-i-parse","(*argv)","<p>Parses command line arguments <code>argv</code> in order when environment\nvariable POSIXLY_CORRECT is set, and in …\n",null,0],["parse","OptionParser::Switch::NoArgument","Ruby/classes/OptionParser/Switch/NoArgument.html#method-i-parse","(arg, argv)","<p>Raises an exception if any arguments given.\n",null,0],["parse","OptionParser::Switch::OptionalArgument","Ruby/classes/OptionParser/Switch/OptionalArgument.html#method-i-parse","(arg, argv, &error)","<p>Parses argument if given, or uses default value.\n",null,0],["parse","OptionParser::Switch::PlacedArgument","Ruby/classes/OptionParser/Switch/PlacedArgument.html#method-i-parse","(arg, argv, &error)","<p>Returns nil if argument is not present or begins with &#39;-&#39;.\n",null,0],["parse","OptionParser::Switch::RequiredArgument","Ruby/classes/OptionParser/Switch/RequiredArgument.html#method-i-parse","(arg, argv)","<p>Raises an exception if argument is not present.\n",null,0],["parse","Psych","Ruby/classes/Psych.html#method-c-parse","(yaml, filename = nil)","<p>Parse a YAML string in <code>yaml</code>.  Returns the first object of a\nYAML AST. <code>filename</code> is used in the exception …\n",null,0],["parse","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-parse","(comment_location)","<p>Parses <code>comment_location</code> into an RDoc::Markup::Document\ncomposed of multiple RDoc::Markup::Documents with …\n",null,0],["parse","RDoc::Comment","Ruby/classes/RDoc/Comment.html#method-i-parse","()","<p>Parses the comment into an RDoc::Markup::Document.  The parsed document is\ncached until the text is changed. …\n",null,0],["parse","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-parse","()","<p>Parses <code>comment_location</code> into an RDoc::Markup::Document\ncomposed of multiple RDoc::Markup::Documents with …\n",null,0],["parse","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-parse","(markdown)","<p>Parses <code>markdown</code> into an RDoc::Document\n",null,0],["parse","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-c-parse","(markdown)","<p>Parses the <code>markdown</code> document into an RDoc::Document using the\ndefault\nextensions.\n",null,0],["parse","RDoc::Markup","Ruby/classes/RDoc/Markup.html#method-c-parse","(str)","<p>Parses <code>str</code> into an RDoc::Markup::Document.\n",null,0],["parse","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-parse","(parent, indent = 0)","<p>Parses the tokens into an array of RDoc::Markup::XXX objects, and appends\nthem to the passed <code>parent</code>  …\n",null,0],["parse","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-c-parse","(str)","<p>Parses <code>str</code> into a Document.\n<p>Use RDoc::Markup#parse instead of this method.\n",null,0],["parse","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-parse","(argv)","<p>Parses command line options.\n",null,0],["parse","RDoc::RD","Ruby/classes/RDoc/RD.html#method-c-parse","(rd)","<p>Parses <code>rd</code> source and returns an RDoc::Markup::Document.  If\nthe <code>=begin</code> or <code>=end</code> lines are missing they …\n",null,0],["parse","RDoc::RD::BlockParser","Ruby/classes/RDoc/RD/BlockParser.html#method-i-parse","(src)","<p>Parses <code>src</code> and returns an RDoc::Markup::Document.\n",null,0],["parse","RDoc::RD::InlineParser","Ruby/classes/RDoc/RD/InlineParser.html#method-i-parse","(inline)","<p>Parses the <code>inline</code> text from RD format into RDoc format.\n",null,0],["parse","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-parse","(text, format = 'rdoc')","<p>Normalizes <code>text</code> then builds a RDoc::Markup::Document from it\n",null,0],["parse","RDoc::TomDoc","Ruby/classes/RDoc/TomDoc.html#method-c-parse","(text)","<p>Parses TomDoc from text\n<p>text &mdash; A String containing TomDoc-format text.\n\n<p>Examples\n",null,0],["parse","REXML::DTD::Parser","Ruby/classes/REXML/DTD/Parser.html#method-c-parse","( input )","",null,0],["parse","REXML::Parsers::LightParser","Ruby/classes/REXML/Parsers/LightParser.html#method-i-parse","()","",null,0],["parse","REXML::Parsers::SAX2Parser","Ruby/classes/REXML/Parsers/SAX2Parser.html#method-i-parse","()","",null,0],["parse","REXML::Parsers::StreamParser","Ruby/classes/REXML/Parsers/StreamParser.html#method-i-parse","()","",null,0],["parse","REXML::Parsers::TreeParser","Ruby/classes/REXML/Parsers/TreeParser.html#method-i-parse","()","",null,0],["parse","REXML::Parsers::UltraLightParser","Ruby/classes/REXML/Parsers/UltraLightParser.html#method-i-parse","()","",null,0],["parse","REXML::Parsers::XPathParser","Ruby/classes/REXML/Parsers/XPathParser.html#method-i-parse","(path)","",null,0],["parse","REXML::XPathParser","Ruby/classes/REXML/XPathParser.html#method-i-parse","(path, nodeset)","",null,0],["parse","RSS::BaseParser","Ruby/classes/RSS/BaseParser.html#method-i-parse","()","",null,0],["parse","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-parse","(duration, do_validate=true)","",null,0],["parse","RSS::Parser","Ruby/classes/RSS/Parser.html#method-i-parse","(rss, do_validate=true, ignore_unknown_element=true, parser_class=default_parser)","",null,0],["parse","RSS::Utils::CSV","Ruby/classes/RSS/Utils/CSV.html#method-i-parse","(value, &block)","",null,0],["parse","RSS::Utils::YesCleanOther","Ruby/classes/RSS/Utils/YesCleanOther.html#method-i-parse","(value)","",null,0],["parse","RSS::Utils::YesOther","Ruby/classes/RSS/Utils/YesOther.html#method-i-parse","(value)","",null,0],["parse","Ripper","Ruby/classes/Ripper.html#method-c-parse","(src, filename = '(ripper)', lineno = 1)","<p>Parses the given Ruby program read from <code>src</code>. <code>src</code>\nmust be a String or an IO or a object with a #gets method. …\n",null,0],["parse","Ripper::Filter","Ruby/classes/Ripper/Filter.html#method-i-parse","(init = nil)","<p>Starts the parser. <code>init</code> is a data accumulator and is passed to\nthe next event handler (as of Enumerable#inject …\n",null,0],["parse","Time","Ruby/classes/Time.html#method-i-parse","(date, now=self.now)","<p>Parses <code>date</code> using Date._parse and converts it to a Time\nobject.\n<p>If a block is given, the year described …\n",null,0],["parse","URI","Ruby/classes/URI.html#method-c-parse","(uri)","<p>Synopsis\n\n<pre><code>URI::parse(uri_str)</code></pre>\n<p>Args\n",null,0],["parse","URI::Parser","Ruby/classes/URI/Parser.html#method-i-parse","(uri)","<p>Args\n<p><code>uri</code> &mdash; String\n\n<p>Description\n",null,0],["parse","WEBrick::Cookie","Ruby/classes/WEBrick/Cookie.html#method-c-parse","(str)","<p>Parses a Cookie field sent from the user-agent.  Returns an array of\ncookies.\n",null,0],["parse","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-parse","(socket=nil)","<p>Parses a request from <code>socket</code>.  This is called internally by\nWEBrick::HTTPServer.\n",null,0],["parse","XMLRPC::XMLParser::NQXMLStreamParser::XMLRPCParser","Ruby/classes/XMLRPC/XMLParser/NQXMLStreamParser/XMLRPCParser.html#method-i-parse","(str)","",null,0],["parse","XMLRPC::XMLParser::REXMLStreamParser::StreamListener","Ruby/classes/XMLRPC/XMLParser/REXMLStreamParser/StreamListener.html#method-i-parse","(str)","",null,0],["parse","XMLRPC::XMLParser::XMLScanStreamParser::XMLScanParser","Ruby/classes/XMLRPC/XMLParser/XMLScanStreamParser/XMLScanParser.html#method-i-parse","(str)","",null,0],["parse","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-parse","(str, now=now)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone\nof <code>self</code> from parsed string. …\n",null,1],["parse","Mime::Type","Rails/classes/Mime/Type.html#method-c-parse","(accept_header)","",null,1],["parse!","JSON","Ruby/classes/JSON.html#method-i-parse-21","(source, opts = {})","<p>Parse the JSON document <em>source</em> into a Ruby data structure and\nreturn it. The bang version of the parse …\n",null,0],["parse!","OptionParser","Ruby/classes/OptionParser.html#method-i-parse-21","(argv = default_argv)","<p>Same as #parse, but removes switches destructively. Non-option arguments\nremain in <code>argv</code>.\n",null,0],["parse!","OptionParser::Arguable","Ruby/classes/OptionParser/Arguable.html#method-i-parse-21","()","<p>Parses <code>self</code> destructively and returns <code>self</code>\ncontaining the rest arguments left unparsed.\n",null,0],["parse!","Rails::Server::Options","Rails/classes/Rails/Server/Options.html#method-i-parse-21","(args)","",null,1],["parseMethodCall","XMLRPC::XMLParser::AbstractStreamParser","Ruby/classes/XMLRPC/XMLParser/AbstractStreamParser.html#method-i-parseMethodCall","(str)","",null,0],["parseMethodCall","XMLRPC::XMLParser::AbstractTreeParser","Ruby/classes/XMLRPC/XMLParser/AbstractTreeParser.html#method-i-parseMethodCall","(str)","",null,0],["parseMethodResponse","XMLRPC::XMLParser::AbstractStreamParser","Ruby/classes/XMLRPC/XMLParser/AbstractStreamParser.html#method-i-parseMethodResponse","(str)","",null,0],["parseMethodResponse","XMLRPC::XMLParser::AbstractTreeParser","Ruby/classes/XMLRPC/XMLParser/AbstractTreeParser.html#method-i-parseMethodResponse","(str)","",null,0],["parse_alias","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_alias","(context, single, tk, comment)","<p>Parses an <code>alias</code> in <code>context</code> with\n<code>comment</code>\n",null,0],["parse_args","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-parse_args","( element, string )","",null,0],["parse_arguments","Rails::Console","Rails/classes/Rails/Console.html#method-c-parse_arguments","(arguments)","",null,1],["parse_arguments","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-i-parse_arguments","(arguments)","",null,1],["parse_attr","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_attr","(context, single, tk, comment)","<p>Creates an RDoc::Attr for the name following <code>tk</code>, setting the\ncomment to <code>comment</code>.\n",null,0],["parse_attr_accessor","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_attr_accessor","(context, single, tk, comment)","<p>Creates an RDoc::Attr for each attribute listed after <code>tk</code>,\nsetting the comment for each to <code>comment</code>.\n",null,0],["parse_call_parameters","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_call_parameters","(tk)","<p>Extracts call parameters from the token stream.\n",null,0],["parse_class","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_class","(container, single, tk, comment)","<p>Parses a class in <code>context</code> with <code>comment</code>\n",null,0],["parse_comment","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_comment","(container, tk, comment)","<p>Generates an RDoc::Method or RDoc::Attr from <code>comment</code> by\nlooking for :method: or :attr: directives in …\n",null,0],["parse_comment_tomdoc","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_comment_tomdoc","(container, tk, comment)","<p>Creates an RDoc::Method on <code>container</code> from <code>comment</code>\nif there is a Signature section in the comment\n",null,0],["parse_config","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-parse_config","(io)","",null,0],["parse_constant","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_constant","(container, tk, comment, ignore_constants = false)","<p>Parses a constant in <code>context</code> with <code>comment</code>.  If\n<code>ignore_constants</code> is true, no found constants will be added …\n",null,0],["parse_content_type","XMLRPC::ParseContentType","Ruby/classes/XMLRPC/ParseContentType.html#method-i-parse_content_type","(str)","",null,0],["parse_ctype","DL::CParser","Ruby/classes/DL/CParser.html#method-i-parse_ctype","(ty, tymap=nil)","<p>Given a String of C type <code>ty</code>, return the corresponding DL\nconstant.\n<p><code>ty</code> can also accept an Array of C type …\n",null,0],["parse_ctype","Fiddle::CParser","Ruby/classes/Fiddle/CParser.html#method-i-parse_ctype","(ty, tymap=nil)","<p>Given a String of C type <code>ty</code>, returns the corresponding Fiddle\nconstant.\n<p><code>ty</code> can also accept an Array of …\n",null,0],["parse_data_with_trailing_star","Mime::Type","Rails/classes/Mime/Type.html#method-c-parse_data_with_trailing_star","(input)","<p>For an input of <code>&#39;text&#39;</code>, returns <code>[Mime::JSON,\nMime::XML, Mime::ICS, Mime::HTML, Mime::CSS, Mime::CSV</code> …\n",null,1],["parse_dot_doc_file","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-parse_dot_doc_file","(in_dir, filename)","<p>The .document file contains a list of file and directory name patterns,\nrepresenting candidates for documentation. …\n",null,0],["parse_entries","RDoc::Parser::ChangeLog","Ruby/classes/RDoc/Parser/ChangeLog.html#method-i-parse_entries","()","<p>Parses the entries in the ChangeLog.\n<p>Returns an Array of each ChangeLog entry in order of parsing.\n<p>A ChangeLog …\n",null,0],["parse_error","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-parse_error","()","<p>Returns the class of the error that will be raised when there is an error\nin decoding JSON. Using this …\n",null,1],["parse_extend","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_extend","(context, comment)","<p>Parses an <code>extend</code> in <code>context</code> with\n<code>comment</code>\n",null,0],["parse_file","Psych","Ruby/classes/Psych.html#method-c-parse_file","(filename)","<p>Parse a file at <code>filename</code>. Returns the YAML AST.\n<p>Raises a Psych::SyntaxError when a YAML syntax error is …\n",null,0],["parse_file","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-parse_file","(filename)","<p>Parses <code>filename</code> and returns an RDoc::TopLevel\n",null,0],["parse_files","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-parse_files","(files)","<p>Parse each file on the command line, recursively entering directories.\n",null,0],["parse_files_matching","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-parse_files_matching","(regexp)","<p>Record which file types this parser can understand.\n<p>It is ok to call this multiple times.\n",null,0],["parse_form_data","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-parse_form_data","(io, boundary)","<p>Parses form data in <code>io</code> with the given <code>boundary</code>\n",null,0],["parse_header","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-parse_header","(raw)","<p>Parses an HTTP header <code>raw</code> into a hash of header fields with an\nArray of values.\n",null,0],["parse_helper","REXML::DTD::Parser","Ruby/classes/REXML/DTD/Parser.html#method-c-parse_helper","( input )","<p>Takes a String and parses it out\n",null,0],["parse_include","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_include","(context, comment)","<p>Parses an <code>include</code> in <code>context</code> with\n<code>comment</code>\n",null,0],["parse_int","Psych::ScalarScanner","Ruby/classes/Psych/ScalarScanner.html#method-i-parse_int","(string)","<p>Parse and return an int from <code>string</code>\n",null,0],["parse_line","CSV","Ruby/classes/CSV.html#method-c-parse_line","(line, options = Hash.new)","<p>This method is a shortcut for converting a single line of a CSV String into\na into an Array.  Note that …\n",null,0],["parse_meta_attr","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_meta_attr","(context, single, tk, comment)","<p>Parses a meta-programmed attribute and creates an RDoc::Attr.\n<p>To create foo and bar attributes on class …\n",null,0],["parse_meta_method","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_meta_method","(container, single, tk, comment)","<p>Parses a meta-programmed method\n",null,0],["parse_method","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_method","(container, single, tk, comment)","<p>Parses a normal method defined by <code>def</code>\n",null,0],["parse_method_dummy","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_method_dummy","(container)","<p>Parses a method that needs to be ignored.\n",null,0],["parse_method_or_yield_parameters","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_method_or_yield_parameters","(method = nil, modifiers = RDoc::METHOD_MODIFIERS)","<p>Extracts <code>yield</code> parameters from <code>method</code>\n",null,0],["parse_method_parameters","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_method_parameters","(method)","<p>Capture the method&#39;s parameters. Along the way, look for a comment\ncontaining:\n\n<pre><code># yields: ....</code></pre>\n<p>and add …\n",null,0],["parse_module","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_module","(container, single, tk, comment)","<p>Parses an RDoc::NormalModule in <code>container</code> with\n<code>comment</code>\n",null,0],["parse_name","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-parse_name","(name)","<p>Extracts the class, selector and method name parts from <code>name</code>\nlike Foo::Bar#baz.\n<p>NOTE: Given Foo::Bar, …\n",null,0],["parse_openssl","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-parse_openssl","(str, template=OBJECT_TYPE_TEMPLATE)","",null,0],["parse_printf_format","IRB::OutputMethod","Ruby/classes/IRB/OutputMethod.html#method-i-parse_printf_format","(format, opts)","<p>Returns an array of the given <code>format</code> and <code>opts</code> to\nbe used by Kernel#sprintf, if there was a successful …\n",null,0],["parse_query","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-parse_query","(str)","<p>Parses the query component of a URI in <code>str</code>\n",null,0],["parse_query","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-parse_query","(qs)","",null,1],["parse_qvalues","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-parse_qvalues","(value)","<p>Parses q values in <code>value</code> as used in Accept headers.\n",null,0],["parse_range_header","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-parse_range_header","(ranges_specifier)","<p>Parses a Range header value <code>ranges_specifier</code>\n",null,0],["parse_require","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_require","(context, comment)","<p>Parses an RDoc::Require in <code>context</code> containing\n<code>comment</code>\n",null,0],["parse_rescue","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_rescue","()","<p>Parses a rescue\n",null,0],["parse_rfc2253","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-parse_rfc2253","(str, template=OBJECT_TYPE_TEMPLATE)","",null,0],["parse_set_cookie","WEBrick::Cookie","Ruby/classes/WEBrick/Cookie.html#method-c-parse_set_cookie","(str)","<p>Parses the cookie in <code>str</code>\n",null,0],["parse_set_cookies","WEBrick::Cookie","Ruby/classes/WEBrick/Cookie.html#method-c-parse_set_cookies","(str)","<p>Parses the cookies in <code>str</code>\n",null,0],["parse_signature","DL::CParser","Ruby/classes/DL/CParser.html#method-i-parse_signature","(signature, tymap=nil)","<p>Parses a C prototype signature\n<p>Example:\n\n<pre><code>include DL::CParser\n=&gt; Object\n\nparse_signature(&#39;double sum(double, ...\n</code></pre>\n",null,0],["parse_signature","Fiddle::CParser","Ruby/classes/Fiddle/CParser.html#method-i-parse_signature","(signature, tymap=nil)","<p>Parses a C prototype signature\n<p>If Hash <code>tymap</code> is provided, the return value and the arguments\nfrom the …\n",null,0],["parse_source","REXML::DTD::EntityDecl","Ruby/classes/REXML/DTD/EntityDecl.html#method-c-parse_source","(source, listener)","",null,0],["parse_source","REXML::DTD::NotationDecl","Ruby/classes/REXML/DTD/NotationDecl.html#method-c-parse_source","(source, listener)","",null,0],["parse_statements","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_statements","(container, single = NORMAL, current_method = nil, comment = new_comment(''))","<p>The core of the ruby parser.\n",null,0],["parse_stream","Psych","Ruby/classes/Psych.html#method-c-parse_stream","(yaml, filename = nil, &block)","<p>Parse a YAML string in <code>yaml</code>.  Returns the full AST for the\nYAML document. This method can handle multiple …\n",null,0],["parse_stream","REXML::Document","Ruby/classes/REXML/Document.html#method-c-parse_stream","( source, listener )","",null,0],["parse_struct_signature","DL::CParser","Ruby/classes/DL/CParser.html#method-i-parse_struct_signature","(signature, tymap=nil)","<p>Parses a C struct&#39;s members\n<p>Example:\n\n<pre><code>parse_struct_signature([&#39;int i&#39;, &#39;char c&#39;])\n=&gt; [[DL::TYPE_INT, ...\n</code></pre>\n",null,0],["parse_struct_signature","Fiddle::CParser","Ruby/classes/Fiddle/CParser.html#method-i-parse_struct_signature","(signature, tymap=nil)","<p>Parses a C struct&#39;s members\n<p>Example:\n\n<pre><code>include Fiddle::CParser\n  #=&gt; Object\n\nparse_struct_signature([&#39;int ...\n</code></pre>\n",null,0],["parse_symbol_arg","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_symbol_arg","(no = nil)","<p>Parse up to <code>no</code> symbol arguments\n",null,0],["parse_symbol_in_arg","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_symbol_in_arg","()","<p>Returns symbol text from the next token\n",null,0],["parse_task_string","Rake::Application","Ruby/classes/Rake/Application.html#method-i-parse_task_string","(string)","",null,0],["parse_task_string","Rake::Application","Ruby/classes/Rake/Application.html#method-i-parse_task_string","(string)","",null,0],["parse_time","Psych::ScalarScanner","Ruby/classes/Psych/ScalarScanner.html#method-i-parse_time","(string)","<p>Parse and return a Time from <code>string</code>\n",null,0],["parse_top_level_statements","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_top_level_statements","(container)","<p>Parses statements in the top-level <code>container</code>\n",null,0],["parse_trailing_star","Mime::Type","Rails/classes/Mime/Type.html#method-c-parse_trailing_star","(accept_header)","",null,1],["parse_url","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-parse_url","(url)","<p>Extracts and a scheme, url and an anchor id from <code>url</code> and\nreturns them.\n",null,0],["parse_visibility","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_visibility","(container, single, tk)","<p>Determines the visibility in <code>container</code> from <code>tk</code>\n",null,0],["parse_yield","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_yield","(context, single, tk, method)","<p>Determines the block parameter for <code>context</code>\n",null,0],["parseable?","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-parseable-3F","(text)","<p>Returns true if Ripper is available it can create a sexp from\n<code>text</code>\n",null,0],["parser","Psych","Ruby/classes/Psych.html#method-c-parser","()","<p>Returns a default parser\n",null,0],["parser","URI::Generic","Ruby/classes/URI/Generic.html#method-i-parser","()","<p>returns the parser to be used.\n<p>Unless a URI::Parser is defined, then DEFAULT_PARSER is used.\n",null,0],["parser","URI","Rails/classes/URI.html#method-c-parser","()","",null,1],["partition","Enumerable","Ruby/classes/Enumerable.html#method-i-partition","()","<p>Returns two arrays, the first containing the elements of <em>enum</em> for\nwhich the block evaluates to true, …\n",null,0],["partition","String","Ruby/classes/String.html#method-i-partition","(p1)","<p>Searches <em>sep</em> or pattern (<em>regexp</em>) in the string and\nreturns the part before it, the match, and the part …\n",null,0],["pass","Thread","Ruby/classes/Thread.html#method-c-pass","()","<p>Give the thread scheduler a hint to pass execution to another thread. A\nrunning thread may or may not …\n",null,0],["passwd","Etc","Ruby/classes/Etc.html#method-c-passwd","()","<p>Provides a convenient Ruby iterator which executes a block for each entry\nin the /etc/passwd file.\n<p>The …\n",null,0],["password","URI::Generic","Ruby/classes/URI/Generic.html#method-i-password","()","<p>returns the password component\n",null,0],["password=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-password-3D","(password)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["password=","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-password-3D","(new_password)","<p>Changes the password for the Basic Authentication header to\n<code>new_password</code>\n",null,0],["password=","ActiveModel::SecurePassword::ClassMethods::InstanceMethodsOnActivation","Rails/classes/ActiveModel/SecurePassword/ClassMethods/InstanceMethodsOnActivation.html#method-i-password-3D","(unencrypted_password)","<p>Encrypts the password into the <code>password_digest</code> attribute, only\nif the new password is not blank.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["password_confirmation=","ActiveModel::SecurePassword::ClassMethods::InstanceMethodsOnActivation","Rails/classes/ActiveModel/SecurePassword/ClassMethods/InstanceMethodsOnActivation.html#method-i-password_confirmation-3D","(unencrypted_password)","",null,1],["password_field","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-password_field","(name = \"\", value = nil, size = 40, maxlength = nil)","<p>Generate a Password Input element as a string.\n<p><code>name</code> is the name of the input field.  <code>value</code> is\nits default …\n",null,0],["password_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-password_field","(object_name, method, options = {})","<p>Returns an input tag of the “password” type tailored for accessing a\nspecified attribute (identified …\n",null,1],["password_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-password_field_tag","(name = \"password\", value = nil, options = {})","<p>Creates a password field, a masked text field that will hide the users\ninput behind a mask character. …\n",null,1],["past?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-past-3F","()","<p>Returns true if the current object&#39;s time is in the past.\n",null,1],["past?","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-past-3F","()","<p>Returns true if the date/time is in the past.\n",null,1],["past?","DateTime","Rails/classes/DateTime.html#method-i-past-3F","()","<p>Tells whether the DateTime object&#39;s datetime lies in the past.\n",null,1],["patch","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-patch","(path, data, initheader = nil, dest = nil)","<p>Sends a PATCH request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,0],["patch","ActionDispatch::Routing::Mapper::HttpHelpers","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-patch","(*args, &block)","<p>Define a route that only recognizes HTTP PATCH. For supported arguments,\nsee match\n\n<pre>patch &#39;bacon&#39;, to: ...</pre>\n",null,1],["patch?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-patch-3F","()","<p>Is this a PATCH request? Equivalent to <code>request.request_method ==\n:patch</code>.\n",null,1],["path","ARGF","Ruby/classes/ARGF.html#method-i-path","()","<p>Returns the current filename. “-” is returned when the current file is\nSTDIN.\n<p>For example:\n\n<pre><code>$ ...</code></pre>\n",null,0],["path","Dir","Ruby/classes/Dir.html#method-i-path","()","<p>Returns the path parameter passed to <em>dir</em>&#39;s constructor.\n\n<pre><code>d = Dir.new(&quot;..&quot;)\nd.path   #=&gt; &quot;..&quot;\n</code></pre>\n",null,0],["path","File","Ruby/classes/File.html#method-c-path","(p1)","<p>Returns the string representation of the path\n\n<pre><code>File.path(&quot;/dev/null&quot;)          #=&gt; &quot;/dev/null&quot;\nFile.path(Pathname.new(&quot;/tmp&quot;)) ...\n</code></pre>\n",null,0],["path","File","Ruby/classes/File.html#method-i-path","()","<p>Returns the pathname used to create <em>file</em> as a string. Does not\nnormalize the name.\n\n<pre><code>File.new(&quot;testfile&quot;).path ...</code></pre>\n",null,0],["path","Gem","Ruby/classes/Gem.html#method-c-path","()","",null,0],["path","PStore","Ruby/classes/PStore.html#method-i-path","()","<p>Returns the path to the data store file.\n",null,0],["path","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-path","()","<p>Path to this class or module for use with HTML generator output.\n",null,0],["path","RDoc::Constant","Ruby/classes/RDoc/Constant.html#method-i-path","()","<p>Path to this constant for use with HTML generator output.\n",null,0],["path","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-path","()","<p>Path to this method for use with HTML generator output.\n",null,0],["path","RDoc::RI::Paths","Ruby/classes/RDoc/RI/Paths.html#method-c-path","(system = true, site = true, home = true, gems = :latest, *extra_dirs)","<p>Returns existing directories from the selected documentation directories as\nan Array.\n<p>See also ::each …\n",null,0],["path","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-path","()","<p>Path to this file for use with HTML generator output.\n",null,0],["path","Rake::FtpFile","Ruby/classes/Rake/FtpFile.html#method-i-path","()","",null,0],["path","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-path","()","<p>Returns the path of this instruction sequence.\n<p><code>&lt;compiled&gt;</code> if the iseq was evaluated from a string. …\n",null,0],["path","Tempfile","Ruby/classes/Tempfile.html#method-i-path","()","<p>Returns the full path name of the temporary file. This will be nil if\n#unlink has been called.\n",null,0],["path","Thread::Backtrace::Location","Ruby/classes/Thread/Backtrace/Location.html#method-i-path","()","<p>Returns the file name of this frame.\n<p>For example, using <code>caller_locations.rb</code> from\nThread::Backtrace::Location …\n",null,0],["path","TracePoint","Ruby/classes/TracePoint.html#method-i-path","()","<p>Path of the file being run\n",null,0],["path","UNIXSocket","Ruby/classes/UNIXSocket.html#method-i-path","()","<p>Returns the path of the local address of unixsocket.\n\n<pre><code>s = UNIXServer.new(&quot;/tmp/sock&quot;)\np s.path #=&gt; &quot;/tmp/sock&quot;\n</code></pre>\n",null,0],["path","URI::FTP","Ruby/classes/URI/FTP.html#method-i-path","()","<p>Returns the path from an FTP URI.\n<p>RFC 1738 specifically states that the path for an FTP URI does not include\n…\n",null,0],["path","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-path","()","<p>Returns the type library file path.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;) ...</code></pre>\n",null,0],["path","ActionDispatch::Http::UploadedFile","Rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-path","()","<p>Shortcut for <code>tempfile.path</code>.\n",null,1],["path","ActionDispatch::Routing::PathRedirect","Rails/classes/ActionDispatch/Routing/PathRedirect.html#method-i-path","(params, request)","",null,1],["path","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-path","()","",null,1],["path","LoadError","Rails/classes/LoadError.html#method-i-path","()","",null,1],["path","LoadError","Rails/classes/LoadError.html#method-i-path","()","",null,1],["path=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-path-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["path_ok?","Gem::Uninstaller","Ruby/classes/Gem/Uninstaller.html#method-i-path_ok-3F","(gem_dir, spec)","<p>Is <code>spec</code> in <code>gem_dir</code>?\n",null,0],["path_parameters","ActionDispatch::Http::Parameters","Rails/classes/ActionDispatch/Http/Parameters.html#method-i-path_parameters","()","<p>Returns a hash with the parameters used to form the path of the request.\nReturned hash keys are strings: …\n",null,1],["path_separator","Gem","Ruby/classes/Gem.html#method-c-path_separator","()","<p>How String Gem paths should be split.  Overridable for esoteric platforms.\n",null,0],["path_to_asset","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_asset","(source, options = {})","",null,1],["path_to_audio","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_audio","(source, options = {})","",null,1],["path_to_font","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_font","(source, options = {})","",null,1],["path_to_image","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_image","(source, options = {})","",null,1],["path_to_javascript","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_javascript","(source, options = {})","",null,1],["path_to_stylesheet","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_stylesheet","(source, options = {})","",null,1],["path_to_video","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_video","(source, options = {})","",null,1],["pathmap","String","Ruby/classes/String.html#method-i-pathmap","(spec=nil, &block)","<p>Map the path according to the given specification.  The specification\ncontrols the details of the mapping. …\n",null,0],["pathmap_explode","String","Ruby/classes/String.html#method-i-pathmap_explode","()","<p>Explode a path into individual components.  Used by <code>pathmap</code>.\n",null,0],["pathmap_partial","String","Ruby/classes/String.html#method-i-pathmap_partial","(n)","<p>Extract a partial path from the path.  Include <code>n</code> directories\nfrom the front end (left hand side) if  …\n",null,0],["pathmap_replace","String","Ruby/classes/String.html#method-i-pathmap_replace","(patterns, &block)","<p>Preform the pathmap replacement operations on the given path. The patterns\ntake the form &#39;pat1,rep1;pat2,rep2…&#39;. …\n",null,0],["paths","Gem","Ruby/classes/Gem.html#method-c-paths","()","<p>DOC: needs doc&#39;d or :nodoc&#39;d\n",null,0],["paths","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-paths","()","",null,1],["paths","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-paths","()","",null,1],["paths=","Gem","Ruby/classes/Gem.html#method-c-paths-3D","(env)","<p>DOC: needs doc&#39;d or :nodoc&#39;d\n",null,0],["pattern","OptionParser::Switch","Ruby/classes/OptionParser/Switch.html#method-c-pattern","()","",null,0],["pattern","OptionParser::Switch::NoArgument","Ruby/classes/OptionParser/Switch/NoArgument.html#method-c-pattern","()","",null,0],["pattern","ActiveRecord::DynamicMatchers::Method","Rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-c-pattern","()","",null,1],["pbkdf2_hmac","OpenSSL::PKCS5","Ruby/classes/OpenSSL/PKCS5.html#method-c-pbkdf2_hmac","(p1, p2, p3, p4, p5)","<p>Parameters\n<p><code>pass</code> - string\n<p><code>salt</code> - string - should be at least 8 bytes long.\n",null,0],["pbkdf2_hmac_sha1","OpenSSL::PKCS5","Ruby/classes/OpenSSL/PKCS5.html#method-c-pbkdf2_hmac_sha1","(p1, p2, p3, p4)","<p>Parameters\n<p><code>pass</code> - string\n<p><code>salt</code> - string - should be at least 8 bytes long.\n",null,0],["peek","Enumerator","Ruby/classes/Enumerator.html#method-i-peek","()","<p>Returns the next object in the enumerator, but doesn&#39;t move the\ninternal position forward.  If the …\n",null,0],["peek","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-peek","(depth=0)","<p>Peek at the <code>depth</code> event in the stack.  The first element on\nthe stack is at depth 0.  If <code>depth</code> is -1, …\n",null,0],["peek","REXML::Parsers::PullParser","Ruby/classes/REXML/Parsers/PullParser.html#method-i-peek","(depth=0)","",null,0],["peek","StringScanner","Ruby/classes/StringScanner.html#method-i-peek","(p1)","<p>Extracts a string corresponding to <code>string[pos,len]</code>, without\nadvancing the scan pointer.\n\n<pre><code>s = StringScanner.new(&#39;test ...</code></pre>\n",null,0],["peek_read","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-peek_read","()","<p>Peek equivalent for get_tkread\n",null,0],["peek_tk","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-peek_tk","()","<p>Peek at the next token, but don&#39;t remove it from the stream\n",null,0],["peek_token","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-peek_token","()","<p>Returns the next token on the stream without modifying the stream\n",null,0],["peek_values","Enumerator","Ruby/classes/Enumerator.html#method-i-peek_values","()","<p>Returns the next object as an array, similar to Enumerator#next_values, but\ndoesn&#39;t move the internal …\n",null,0],["peep","StringScanner","Ruby/classes/StringScanner.html#method-i-peep","(p1)","<p>Equivalent to #peek. This method is obsolete; use #peek instead.\n",null,0],["peer_cert","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-peer_cert","()","<p>Returns the X.509 certificates the server presented.\n",null,0],["peer_cert","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-peer_cert","()","<p>The X509 certificate for this socket&#39;s peer.\n",null,0],["peer_cert_chain","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-peer_cert_chain","()","<p>The X509 certificate chain for this socket&#39;s peer.\n",null,0],["peeraddr","IPSocket","Ruby/classes/IPSocket.html#method-i-peeraddr","(*args)","<p>Returns the remote address as an array which contains address_family, port,\nhostname and numeric_address. …\n",null,0],["peeraddr","UNIXSocket","Ruby/classes/UNIXSocket.html#method-i-peeraddr","()","<p>Returns the remote address as an array which contains address_family and\nunix_path.\n<p>Example\n\n<pre><code>serv = UNIXServer.new(&quot;/tmp/sock&quot;) ...</code></pre>\n",null,0],["peg_parse","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-peg_parse","(markdown)","<p>The internal kpeg parse method\n",null,0],["pem_files_in","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-pem_files_in","(dir)","",null,0],["pending","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-pending","()","<p>The number of bytes that are immediately available for reading\n",null,0],["pending_interrupt?","Thread","Ruby/classes/Thread.html#method-c-pending_interrupt-3F","(*args)","<p>Returns whether or not the asynchronous queue is empty.\n<p>Since Thread::handle_interrupt can be used to …\n",null,0],["pending_interrupt?","Thread","Ruby/classes/Thread.html#method-i-pending_interrupt-3F","(p1 = v1)","<p>Returns whether or not the asychronous queue is empty for the target\nthread.\n<p>If <code>error</code> is given, then check …\n",null,0],["percent_doc","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-percent_doc","()","<p>Calculates the percentage of items documented.\n",null,0],["performed?","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-performed-3F","()","",null,1],["period","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-period","()","<p>Returns the underlying TZInfo::TimezonePeriod.\n",null,1],["period_for_local","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-period_for_local","(time, dst=true)","<p>Available so that TimeZone instances respond like TZInfo::Timezone\ninstances.\n",null,1],["period_for_utc","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-period_for_utc","(time)","<p>Available so that TimeZone instances respond like TZInfo::Timezone\ninstances.\n",null,1],["permanent","ActionDispatch::Cookies::ChainedCookieJars","Rails/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-permanent","()","<p>Returns a jar that&#39;ll automatically set the assigned cookies to have an\nexpiration date 20 years …\n",null,1],["permanent_link=","RSS::Maker::ItemsBase::ItemBase::GuidBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/GuidBase.html#method-i-permanent_link-3D","(bool)","",null,0],["permanent_link?","RSS::Maker::ItemsBase::ItemBase::GuidBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/GuidBase.html#method-i-permanent_link-3F","()","",null,0],["permit","ActionController::Parameters","Rails/classes/ActionController/Parameters.html#method-i-permit","(*filters)","<p>Returns a new <code>ActionController::Parameters</code> instance that\nincludes only the given <code>filters</code> and sets the …\n",null,1],["permit!","ActionController::Parameters","Rails/classes/ActionController/Parameters.html#method-i-permit-21","()","<p>Sets the <code>permitted</code> attribute to <code>true</code>. This can be\nused to pass mass assignment. Returns <code>self</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["permitted?","ActionController::Parameters","Rails/classes/ActionController/Parameters.html#method-i-permitted-3F","()","<p>Returns <code>true</code> if the parameter is permitted, <code>false</code>\notherwise.\n\n<pre>params = ActionController::Parameters.new ...</pre>\n",null,1],["permutation","Array","Ruby/classes/Array.html#method-i-permutation","(p1 = v1)","<p>When invoked with a block, yield all permutations of length <code>n</code>\nof the elements of the array, then return …\n",null,0],["permutation?","Matrix","Ruby/classes/Matrix.html#method-i-permutation-3F","()","<p>Returns <code>true</code> is this is a permutation matrix Raises an error\nif matrix is not square.\n",null,0],["permute","OptionParser","Ruby/classes/OptionParser.html#method-i-permute","(*argv)","<p>Parses command line arguments <code>argv</code> in permutation mode and\nreturns list of non-option arguments.\n",null,0],["permute!","OptionParser","Ruby/classes/OptionParser.html#method-i-permute-21","(argv = default_argv)","<p>Same as #permute, but removes switches destructively. Non-option arguments\nremain in <code>argv</code>.\n",null,0],["permute!","OptionParser::Arguable","Ruby/classes/OptionParser/Arguable.html#method-i-permute-21","()","<p>Parses <code>self</code> destructively in permutation mode and returns\n<code>self</code> containing the rest arguments left unparsed. …\n",null,0],["persisted?","ActiveModel::Model","Rails/classes/ActiveModel/Model.html#method-i-persisted-3F","()","<p>Indicates if the model is persisted. Default is <code>false</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Model</span>\n  <span class=\"ruby-identifier\">attr_accessor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["persisted?","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-persisted-3F","()","<p>Returns true if the record is persisted, i.e. it&#39;s not a new record and\nit was not destroyed, otherwise …\n",null,1],["petabyte","Numeric","Rails/classes/Numeric.html#method-i-petabyte","()","",null,1],["petabytes","Numeric","Rails/classes/Numeric.html#method-i-petabytes","()","",null,1],["pfamily","Addrinfo","Ruby/classes/Addrinfo.html#method-i-pfamily","()","<p>returns the protocol family as an integer.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).pfamily == Socket::PF_INET #=&gt; ...\n</code></pre>\n",null,0],["phase","Complex","Ruby/classes/Complex.html#method-i-phase","()","<p>Returns the angle part of its polar form.\n\n<pre><code>Complex.polar(3, Math::PI/2).arg  #=&gt; 1.5707963267948966\n</code></pre>\n",null,0],["phase","Float","Ruby/classes/Float.html#method-i-phase","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["phase","Numeric","Ruby/classes/Numeric.html#method-i-phase","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["phone_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-phone_field","(object_name, method, options = {})","<p>aliases telephone_field\n",null,1],["phone_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-phone_field_tag","(name, value = nil, options = {})","",null,1],["pi","XMLRPC::XMLWriter::Simple","Ruby/classes/XMLRPC/XMLWriter/Simple.html#method-i-pi","(name, *params)","",null,0],["pi","XMLRPC::XMLWriter::XMLParser","Ruby/classes/XMLRPC/XMLWriter/XMLParser.html#method-i-pi","(name, *params)","",null,0],["pick_best!","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-pick_best-21","()","",null,0],["pid","IO","Ruby/classes/IO.html#method-i-pid","()","<p>Returns the process ID of a child process associated with <em>ios</em>.\nThis will be set by <code>IO.popen</code>.\n\n<pre><code>pipe = IO.popen(&quot;-&quot;) ...</code></pre>\n",null,0],["pid","Process","Ruby/classes/Process.html#method-c-pid","()","<p>Returns the process id of this process. Not available on all platforms.\n\n<pre><code>Process.pid   #=&gt; 27415\n</code></pre>\n",null,0],["pid","Process::Status","Ruby/classes/Process/Status.html#method-i-pid","()","<p>Returns the process ID that this status object represents.\n\n<pre><code>fork { exit }   #=&gt; 26569\nProcess.wait    #=&gt; ...\n</code></pre>\n",null,0],["pid","StringIO","Ruby/classes/StringIO.html#method-i-pid","()","",null,0],["pipe","IO","Ruby/classes/IO.html#method-c-pipe","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a pair of pipe endpoints (connected to each other) and returns them\nas a two-element array of …\n",null,0],["pipe?","File","Ruby/classes/File.html#method-c-pipe-3F","(p1)","<p>Returns <code>true</code> if the named file is a pipe.\n<p><em>file_name</em> can be an IO object.\n",null,0],["pipe?","File::Stat","Ruby/classes/File/Stat.html#method-i-pipe-3F","()","<p>Returns <code>true</code> if the operating system supports pipes and\n<em>stat</em> is a pipe; <code>false</code> otherwise.\n",null,0],["pipe?","FileTest","Ruby/classes/FileTest.html#method-i-pipe-3F","(p1)","<p>Returns <code>true</code> if the named file is a pipe.\n<p><em>file_name</em> can be an IO object.\n",null,0],["pipe?","Pathname","Ruby/classes/Pathname.html#method-i-pipe-3F","()","<p>See FileTest.pipe?.\n",null,0],["pipeline","Open3","Ruby/classes/Open3.html#method-c-pipeline","(*cmds)","<p>Open3.pipeline starts a list of commands as a pipeline. It waits the finish\nof the commands. No pipe …\n",null,0],["pipeline_r","Open3","Ruby/classes/Open3.html#method-c-pipeline_r","(*cmds, &block)","<p>Open3.pipeline_r starts a list of commands as a pipeline with a pipe which\nconnects stdout of the last …\n",null,0],["pipeline_rw","Open3","Ruby/classes/Open3.html#method-c-pipeline_rw","(*cmds, &block)","<p>Open3.pipeline_rw starts a list of commands as a pipeline with pipes which\nconnects stdin of the first …\n",null,0],["pipeline_start","Open3","Ruby/classes/Open3.html#method-c-pipeline_start","(*cmds, &block)","<p>Open3.pipeline_start starts a list of commands as a pipeline. No pipe made\nfor stdin of the first command …\n",null,0],["pipeline_w","Open3","Ruby/classes/Open3.html#method-c-pipeline_w","(*cmds, &block)","<p>Open3.pipeline_w starts a list of commands as a pipeline with a pipe which\nconnects stdin of the first …\n",null,0],["pk_and_sequence_for","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-pk_and_sequence_for","(table)","<p>Returns a table&#39;s primary key and belonging sequence.\n",null,1],["pkcs5_keyivgen","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-pkcs5_keyivgen","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Generates and sets the key/IV based on a password.\n<p>WARNING: This method is only PKCS5 v1.5 compliant when …\n",null,0],["plain_html","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-plain_html","()","<p>The section&#39;s title, or &#39;Top Section&#39; if the title is nil.\n<p>This is used by the table of contents …\n",null,0],["platform","Gem::RequestSet::GemDepedencyAPI","Ruby/classes/Gem/RequestSet/GemDepedencyAPI.html#method-i-platform","(what)","",null,0],["platform","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-platform","()","<p>The platform this gem runs on.  See Gem::Platform for details.\n",null,0],["platform=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-platform-3D","(platform)","<p>The platform this gem runs on.\n<p>This is usually Gem::Platform::RUBY or Gem::Platform::CURRENT.\n<p>Most gems …\n",null,0],["platforms","Gem","Ruby/classes/Gem.html#method-c-platforms","()","<p>Array of platforms this RubyGems supports.\n",null,0],["platforms","Gem::RequestSet::GemDepedencyAPI","Ruby/classes/Gem/RequestSet/GemDepedencyAPI.html#method-i-platforms","(what)","",null,0],["platforms=","Gem","Ruby/classes/Gem.html#method-c-platforms-3D","(platforms)","<p>Set array of platforms this RubyGems supports (primarily for testing).\n",null,0],["pluck","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-pluck","(*column_names)","<p>Use <code>pluck</code> as a shortcut to select one or more attributes\nwithout loading a bunch of records just to grab …\n",null,1],["plural","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-plural","(record_or_class)","<p>Returns the plural class name of a record or class.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Naming</span>.<span class=\"ruby-identifier\">plural</span>(<span class=\"ruby-identifier\">post</span>)             <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["plural","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-plural","(rule, replacement)","<p>Specifies a new pluralization rule and its replacement. The rule can either\nbe a string or a regular …\n",null,1],["plural_file_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-plural_file_name","()","",null,1],["plural_forms","RSS::Element","Ruby/classes/RSS/Element.html#method-i-plural_forms","()","",null,0],["plural_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-plural_name","()","",null,1],["plural_table_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-plural_table_name","()","",null,1],["pluralize","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-pluralize","(count, singular, plural = nil)","<p>Attempts to pluralize the <code>singular</code> word unless\n<code>count</code> is 1. If <code>plural</code> is supplied, it will use\nthat when …\n",null,1],["pluralize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-pluralize","(word, locale = :en)","<p>Returns the plural form of the word in the string.\n<p>If passed an optional <code>locale</code> parameter, the word will …\n",null,1],["pluralize","String","Rails/classes/String.html#method-i-pluralize","(count = nil, locale = :en)","<p>Returns the plural form of the word in the string.\n<p>If the optional parameter <code>count</code> is specified, the singular …\n",null,1],["pluralize_table_names?","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-pluralize_table_names-3F","()","",null,1],["point","Readline","Ruby/classes/Readline.html#method-c-point","()","<p>Returns the index of the current cursor position in\n<code>Readline.line_buffer</code>.\n<p>The index in <code>Readline.line_buffer</code> …\n",null,0],["point_conversion_form","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-point_conversion_form","()","<p>See the OpenSSL documentation for EC_GROUP_get_point_conversion_form()\n",null,0],["point_conversion_form=","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-point_conversion_form-3D","(p1)","<p>See the OpenSSL documentation for EC_GROUP_set_point_conversion_form()\n",null,0],["point_to_string","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-point_to_string","(point)","",null,1],["pointer","StringScanner","Ruby/classes/StringScanner.html#method-i-pointer","()","<p>Returns the byte position of the scan pointer.  In the &#39;reset&#39;\nposition, this value is zero. …\n",null,0],["pointer=","StringScanner","Ruby/classes/StringScanner.html#method-i-pointer-3D","(p1)","<p>Set the byte position of the scan pointer.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;)\ns.pos = 7            # ...</code></pre>\n",null,0],["polar","Complex","Ruby/classes/Complex.html#method-c-polar","(p1, p2 = v2)","<p>Returns a complex object which denotes the given polar form.\n\n<pre><code>Complex.polar(3, 0)            #=&gt; (3.0+0.0i) ...\n</code></pre>\n",null,0],["polar","Complex","Ruby/classes/Complex.html#method-i-polar","()","<p>Returns an array; [cmp.abs, cmp.arg].\n\n<pre><code>Complex(1, 2).polar  #=&gt; [2.23606797749979, 1.1071487177940904]\n</code></pre>\n",null,0],["polar","Numeric","Ruby/classes/Numeric.html#method-i-polar","()","<p>Returns an array; [num.abs, num.arg].\n",null,0],["poll","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-poll","(timeout = nil)","<p>Remove the head of the queue.\n<p>If <code>timeout</code> is not given, remove and return the head the queue\nif the number …\n",null,1],["polymorphic_path","ActionDispatch::Routing::PolymorphicRoutes","Rails/classes/ActionDispatch/Routing/PolymorphicRoutes.html#method-i-polymorphic_path","(record_or_hash_or_array, options = {})","<p>Returns the path component of a URL for the given record. It uses\n<code>polymorphic_url</code> with <code>routing_type:</code> …\n",null,1],["polymorphic_url","ActionDispatch::Routing::PolymorphicRoutes","Rails/classes/ActionDispatch/Routing/PolymorphicRoutes.html#method-i-polymorphic_url","(record_or_hash_or_array, options = {})","<p>Constructs a call to a named RESTful route for the given record and returns\nthe resulting URL string. …\n",null,1],["pop","Array","Ruby/classes/Array.html#method-i-pop","(*args)","<p>Removes the last element from <code>self</code> and returns it, or\n<code>nil</code> if the array is empty.\n<p>If a number <code>n</code> is given, …\n",null,0],["pop","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-pop","( dest = '' )","<p>This method fetches the message.  If called with a block, the message is\nyielded to the block one chunk …\n",null,0],["pop","Queue","Ruby/classes/Queue.html#method-i-pop","(non_block=false)","<p>Retrieves data from the queue.  If the queue is empty, the calling thread\nis suspended until data is …\n",null,0],["pop","Rinda::NotifyTemplateEntry","Ruby/classes/Rinda/NotifyTemplateEntry.html#method-i-pop","()","<p>Retrieves a notification.  Raises RequestExpiredError when this\nNotifyTemplateEntry expires.\n",null,0],["pop","SizedQueue","Ruby/classes/SizedQueue.html#method-i-pop","(*args)","<p>Retrieves data from the queue and runs a waiting thread, if any.\n",null,0],["pop_inspect_key","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-pop_inspect_key","(id)","",null,0],["pop_token","RDoc::TokenStream","Ruby/classes/RDoc/TokenStream.html#method-i-pop_token","()","<p>Remove the last token from the collected tokens\n",null,0],["pop_workspace","IRB::Context","Ruby/classes/IRB/Context.html#method-i-pop_workspace","()","<p>Removes the last element from the current #workspaces stack and returns it,\nor <code>nil</code> if the current workspace …\n",null,0],["popd","Shell","Ruby/classes/Shell.html#method-i-popd","()","",null,0],["popdir","Shell","Ruby/classes/Shell.html#method-i-popdir","()","<p>Pops a directory from the directory stack, and sets the current directory\nto it.\n",null,0],["popen","IO","Ruby/classes/IO.html#method-c-popen","(*args)","<p>Runs the specified command as a subprocess; the subprocess&#39;s standard\ninput and output will be connected …\n",null,0],["popen2","Open3","Ruby/classes/Open3.html#method-c-popen2","(*cmd, &block)","<p>Open3.popen2 is similer to Open3.popen3 except it doesn&#39;t make a pipe\nfor the standard error stream. …\n",null,0],["popen2e","Open3","Ruby/classes/Open3.html#method-c-popen2e","(*cmd, &block)","<p>Open3.popen2e is similer to Open3.popen3 except it merges the standard\noutput stream and the standard …\n",null,0],["popen3","Open3","Ruby/classes/Open3.html#method-c-popen3","(*cmd, &block)","<p>Open stdin, stdout, and stderr streams and start external executable. In\naddition, a thread for waiting …\n",null,0],["populate_with_current_scope_attributes","ActiveRecord::Scoping","Rails/classes/ActiveRecord/Scoping.html#method-i-populate_with_current_scope_attributes","()","",null,1],["popup_menu","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-popup_menu","(name = \"\", *values)","<p>Generate a Select element as a string.\n<p><code>name</code> is the name of the element.  The <code>values</code> are\nthe options that …\n",null,0],["port","Net::POP3","Ruby/classes/Net/POP3.html#method-i-port","()","<p>The port number to connect to.\n",null,0],["port","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-port","()","<p>The port this request is for\n",null,0],["port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-port","()","<p>Returns the port number of this request as an integer.\n",null,1],["port=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-port-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["port_string","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-port_string","()","<p>Returns a string port suffix, including colon, like “:8080” if the port\nnumber of this request …\n",null,1],["pos","ARGF","Ruby/classes/ARGF.html#method-i-pos","()","<p>Returns the current offset (in bytes) of the current file in\n<code>ARGF</code>.\n\n<pre><code>ARGF.pos    #=&gt; 0\nARGF.gets   #=&gt; &quot;This ...\n</code></pre>\n",null,0],["pos","Dir","Ruby/classes/Dir.html#method-i-pos","()","<p>Returns the current position in <em>dir</em>. See also\n<code>Dir#seek</code>.\n\n<pre><code>d = Dir.new(&quot;testdir&quot;)\nd.tell   #=&gt; 0\nd.read  ...\n</code></pre>\n",null,0],["pos","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-pos","()","<p>The position in the tar entry\n",null,0],["pos","IO","Ruby/classes/IO.html#method-i-pos","()","<p>Returns the current offset (in bytes) of <em>ios</em>.\n\n<pre><code>f = File.new(&quot;testfile&quot;)\nf.pos    #=&gt; 0\nf.gets   #=&gt; &quot;This ...\n</code></pre>\n",null,0],["pos","StringIO","Ruby/classes/StringIO.html#method-i-pos","()","<p>Returns the current offset (in bytes) of <strong>strio</strong>.\n",null,0],["pos","StringScanner","Ruby/classes/StringScanner.html#method-i-pos","()","<p>Returns the byte position of the scan pointer.  In the &#39;reset&#39;\nposition, this value is zero. …\n",null,0],["pos","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-pos","()","<p>Total number of output bytes output so far.\n",null,0],["pos","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-pos","()","<p>Total number of input bytes read so far.\n",null,0],["pos=","ARGF","Ruby/classes/ARGF.html#method-i-pos-3D","(p1)","<p>Seeks to the position given by <em>position</em> (in bytes) in\n<code>ARGF</code>.\n<p>For example:\n\n<pre><code>ARGF.pos = 17\nARGF.gets   #=&gt; ...\n</code></pre>\n",null,0],["pos=","Dir","Ruby/classes/Dir.html#method-i-pos-3D","(p1)","<p>Synonym for <code>Dir#seek</code>, but returns the position parameter.\n\n<pre><code>d = Dir.new(&quot;testdir&quot;)   #=&gt; #&lt;Dir:0x401b3c40&gt; ...\n</code></pre>\n",null,0],["pos=","IO","Ruby/classes/IO.html#method-i-pos-3D","(p1)","<p>Seeks to the given position (in bytes) in <em>ios</em>. It is not guranteed\nthat seeking to the right position …\n",null,0],["pos=","StringIO","Ruby/classes/StringIO.html#method-i-pos-3D","(p1)","<p>Seeks to the given position (in bytes) in <strong>strio</strong>.\n",null,0],["pos=","StringScanner","Ruby/classes/StringScanner.html#method-i-pos-3D","(p1)","<p>Set the byte position of the scan pointer.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;)\ns.pos = 7            # ...</code></pre>\n",null,0],["position","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-position","( )","",null,0],["position","REXML::IOSource","Ruby/classes/REXML/IOSource.html#method-i-position","()","",null,0],["position","REXML::ParseException","Ruby/classes/REXML/ParseException.html#method-i-position","()","",null,0],["position","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-position","()","",null,0],["position","REXML::Source","Ruby/classes/REXML/Source.html#method-i-position","()","",null,0],["post","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-post","(path, data, initheader = nil, dest = nil)","<p>Posts <code>data</code> (must be a String) to <code>path</code>.\n<code>header</code> must be a Hash like { &#39;Accept&#39; =&gt;\n&#39;<strong>/</strong>&#39;, …\n",null,0],["post","ActionDispatch::Routing::Mapper::HttpHelpers","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-post","(*args, &block)","<p>Define a route that only recognizes HTTP POST. For supported arguments, see\nmatch\n\n<pre>post &#39;bacon&#39;, to: &#39;food#bacon&#39;</pre>\n",null,1],["post2","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-post2","(path, data, initheader = nil)","",null,0],["post?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-post-3F","()","<p>Is this a POST request? Equivalent to <code>request.request_method_symbol\n== :post</code>.\n",null,1],["post_build","Gem","Ruby/classes/Gem.html#method-c-post_build","(&hook)","<p>Adds a post-build hook that will be passed an Gem::Installer instance when\nGem::Installer#install is …\n",null,0],["post_form","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-post_form","(url, params)","<p>Posts HTML form data to the specified URI object. The form data must be\nprovided as a Hash mapping from …\n",null,0],["post_install","Gem","Ruby/classes/Gem.html#method-c-post_install","(&hook)","<p>Adds a post-install hook that will be passed an Gem::Installer instance\nwhen Gem::Installer#install is …\n",null,0],["post_match","MatchData","Ruby/classes/MatchData.html#method-i-post_match","()","<p>Returns the portion of the original string after the current match.\nEquivalent to the special variable …\n",null,0],["post_match","StringScanner","Ruby/classes/StringScanner.html#method-i-post_match","()","<p>Return the <strong><em>post</strong>-match</em> (in the regular expression\nsense) of the last scan.\n\n<pre><code>s = StringScanner.new(&#39;test ...</code></pre>\n",null,0],["post_process","RDoc::Markup::PreProcess","Ruby/classes/RDoc/Markup/PreProcess.html#method-c-post_process","(&block)","<p>Adds a post-process handler for directives.  The handler will be called\nwith the result RDoc::Comment …\n",null,0],["post_processors","RDoc::Markup::PreProcess","Ruby/classes/RDoc/Markup/PreProcess.html#method-c-post_processors","()","<p>Registered post-processors\n",null,0],["post_reset","Gem","Ruby/classes/Gem.html#method-c-post_reset","(&hook)","<p>Adds a hook that will get run after Gem::Specification.reset is run.\n",null,0],["post_uninstall","Gem","Ruby/classes/Gem.html#method-c-post_uninstall","(&hook)","<p>Adds a post-uninstall hook that will be passed a Gem::Uninstaller instance\nand the spec that was uninstalled …\n",null,0],["postgresql_version","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-postgresql_version","()","<p>Returns the version of the connected PostgreSQL server.\n",null,1],["power","BigDecimal","Ruby/classes/BigDecimal.html#method-i-power","(p1, p2 = v2)","<p>Returns the value raised to the power of n.\n<p>Note that n must be an Integer.\n<p>Also available as the operator …\n",null,0],["power!","Bignum","Ruby/classes/Bignum.html#method-i-power-21","(p1)","",null,0],["power!","Fixnum","Ruby/classes/Fixnum.html#method-i-power-21","(other)","",null,0],["power!","Float","Ruby/classes/Float.html#method-i-power-21","(other)","",null,0],["pp","IRB::Notifier::AbstractNotifier","Ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-pp","(*objs)","<p>Same as #ppx, except it uses the #prefix given during object\ninitialization. See OutputMethod#ppx for …\n",null,0],["pp","IRB::OutputMethod","Ruby/classes/IRB/OutputMethod.html#method-i-pp","(*objs)","<p>Prints the given <code>objs</code> calling Object#inspect on each.\n<p>See #puts for more detail.\n",null,0],["pp","Kernel","Ruby/classes/Kernel.html#method-i-pp","(*objs)","<p>prints arguments in pretty form.\n<p>pp returns argument(s).\n",null,0],["pp","Kernel","Ruby/classes/Kernel.html#method-c-pp","(*objs)","<p>prints arguments in pretty form.\n<p>pp returns argument(s).\n",null,0],["pp","PP","Ruby/classes/PP.html#method-c-pp","(obj, out=$>, width=79)","<p>Outputs <code>obj</code> to <code>out</code> in pretty printed format of\n<code>width</code> columns in width.\n<p>If <code>out</code> is omitted, +$&gt;+ is assumed. …\n",null,0],["pp","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-pp","(obj)","<p>Adds <code>obj</code> to the pretty printing buffer using\nObject#pretty_print or Object#pretty_print_cycle.\n<p>Object#pretty_print_cycle …\n",null,0],["pp_hash","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-pp_hash","(obj)","",null,0],["pp_object","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-pp_object","(obj)","",null,0],["ppid","Process","Ruby/classes/Process.html#method-c-ppid","()","<p>Returns the process id of the parent of this process. Returns untrustworthy\nvalue on Win32/64. Not available …\n",null,0],["ppx","IRB::Notifier::AbstractNotifier","Ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-ppx","(prefix, *objs)","<p>Same as #pp, except it concatenates the given <code>prefix</code> with the\n#prefix given during object initialization. …\n",null,0],["ppx","IRB::OutputMethod","Ruby/classes/IRB/OutputMethod.html#method-i-ppx","(prefix, *objs)","<p>Prints the given <code>objs</code> calling Object#inspect on each and\nappending the given <code>prefix</code>.\n<p>See #puts for more …\n",null,0],["pre_input_hook","Readline","Ruby/classes/Readline.html#method-c-pre_input_hook","()","<p>Returns a Proc object <code>proc</code> to call after the first prompt has\nbeen printed and just before readline starts …\n",null,0],["pre_input_hook=","Readline","Ruby/classes/Readline.html#method-c-pre_input_hook-3D","(p1)","<p>Specifies a Proc object <code>proc</code> to call after the first prompt\nhas been printed and just before readline …\n",null,0],["pre_install","Gem","Ruby/classes/Gem.html#method-c-pre_install","(&hook)","<p>Adds a pre-install hook that will be passed an Gem::Installer instance when\nGem::Installer#install is …\n",null,0],["pre_install_checks","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-pre_install_checks","()","<p>Performs various checks before installing the gem such as the install\nrepository is writable and its …\n",null,0],["pre_match","MatchData","Ruby/classes/MatchData.html#method-i-pre_match","()","<p>Returns the portion of the original string before the current match.\nEquivalent to the special variable …\n",null,0],["pre_match","StringScanner","Ruby/classes/StringScanner.html#method-i-pre_match","()","<p>Return the <strong><em>pre</strong>-match</em> (in the regular expression\nsense) of the last scan.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;) ...</code></pre>\n",null,0],["pre_reset","Gem","Ruby/classes/Gem.html#method-c-pre_reset","(&hook)","<p>Adds a hook that will get run before Gem::Specification.reset is run.\n",null,0],["pre_uninstall","Gem","Ruby/classes/Gem.html#method-c-pre_uninstall","(&hook)","<p>Adds a pre-uninstall hook that will be passed an Gem::Uninstaller instance\nand the spec that will be …\n",null,0],["precedence","","Ruby/files/ruby/doc/syntax/precedence_rdoc.html","","<p>Precedence\n<p>From highest to lowest, this is the precedence table for ruby.  High\nprecedence operations …\n",null,0],["precs","BigDecimal","Ruby/classes/BigDecimal.html#method-i-precs","()","<p>Returns an Array of two Integer values.\n<p>The first value is the current number of significant digits in …\n",null,0],["pred","Integer","Ruby/classes/Integer.html#method-i-pred","()","<p>Returns the <code>Integer</code> equal to <em>int</em> - 1.\n\n<pre><code>1.pred      #=&gt; 0\n(-1).pred   #=&gt; -2\n</code></pre>\n",null,0],["pred","Integer","Ruby/classes/Integer.html#method-i-pred","()","<p>Returns the <code>Integer</code> equal to <em>int</em> - 1.\n\n<pre><code>1.pred      #=&gt; 0\n(-1).pred   #=&gt; -2\n</code></pre>\n",null,0],["predicate","REXML::Parsers::XPathParser","Ruby/classes/REXML/Parsers/XPathParser.html#method-i-predicate","(path)","",null,0],["predicate","REXML::QuickPath","Ruby/classes/REXML/QuickPath.html#method-c-predicate","( elements, path )","<p>A predicate filters a node-set with respect to an axis to produce a new\nnode-set. For each node in the …\n",null,0],["predicate","REXML::XPathParser","Ruby/classes/REXML/XPathParser.html#method-i-predicate","(path, nodeset)","",null,0],["predicate_to_string","REXML::Parsers::XPathParser","Ruby/classes/REXML/Parsers/XPathParser.html#method-i-predicate_to_string","( path, &block )","",null,0],["prefetch","Gem::DependencyResolver::APISet","Ruby/classes/Gem/DependencyResolver/APISet.html#method-i-prefetch","(reqs)","<p>A hint run by the resolver to allow the Set to fetch data for\nDependencyRequests <code>reqs</code>.\n",null,0],["prefetch","Gem::DependencyResolver::CurrentSet","Ruby/classes/Gem/DependencyResolver/CurrentSet.html#method-i-prefetch","(gems)","",null,0],["prefetch","Gem::DependencyResolver::IndexSet","Ruby/classes/Gem/DependencyResolver/IndexSet.html#method-i-prefetch","(gems)","<p>No prefetching needed since we load the whole index in initially.\n",null,0],["prefetch_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-prefetch_primary_key-3F","(table_name = nil)","<p>Should primary key values be selected from their corresponding sequence\nbefore the insert statement? …\n",null,1],["prefix","Gem","Ruby/classes/Gem.html#method-c-prefix","()","<p>The directory prefix this RubyGems was installed at. If your prefix is in a\nstandard location (ie, rubygems …\n",null,0],["prefix","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-prefix","()","<p>Returns the namespace of the attribute.\n\n<pre><code>e = Element.new( &quot;elns:myelement&quot; )\ne.add_attribute( &quot;nsa:a&quot;, ...</code></pre>\n",null,0],["prefix","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-prefix","( namespace=nil )","",null,0],["prefix","ActiveRecord::DynamicMatchers::FindBy","Rails/classes/ActiveRecord/DynamicMatchers/FindBy.html#method-c-prefix","()","",null,1],["prefix","ActiveRecord::DynamicMatchers::FindByBang","Rails/classes/ActiveRecord/DynamicMatchers/FindByBang.html#method-c-prefix","()","",null,1],["prefix","ActiveRecord::DynamicMatchers::Method","Rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-c-prefix","()","",null,1],["prefixes","REXML::Element","Ruby/classes/REXML/Element.html#method-i-prefixes","()","<p>Evaluates to an <code>Array</code> containing the prefixes (names) of all\ndefined namespaces at this context node. …\n",null,0],["preload","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-preload","(*args)","<p>Allows preloading of <code>args</code>, in the same way that\n<code>includes</code> does:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">preload</span>(:<span class=\"ruby-identifier\">posts</span>)\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">SELECT</span> <span class=\"ruby-string\">&quot;posts&quot;</span>.* <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["prepare!","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-c-prepare-21","()","<p>Execute all prepare callbacks.\n",null,1],["prepare!","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-prepare-21","()","",null,1],["prepare_column_options","ActiveRecord::ConnectionAdapters::ColumnDumper","Rails/classes/ActiveRecord/ConnectionAdapters/ColumnDumper.html#method-i-prepare_column_options","(column, types)","<p>This can be overridden on a Adapter level basis to support other extended\ndatatypes (Example: Adding …\n",null,1],["prepare_column_options","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-prepare_column_options","(column, types)","<p>Adds `:array` option to the default set provided by the AbstractAdapter\n",null,1],["prepend","OptionParser::List","Ruby/classes/OptionParser/List.html#method-i-prepend","(*args)","<p>Inserts <code>switch</code> at the head of the list, and associates short,\nlong and negated long options. Arguments …\n",null,0],["prepend","String","Ruby/classes/String.html#method-i-prepend","(p1)","<p>Prepend—Prepend the given string to <em>str</em>.\n\n<pre><code>a = &quot;world&quot;\na.prepend(&quot;hello &quot;) #=&gt; &quot;hello world&quot;\na        ...\n</code></pre>\n",null,0],["prepend_after_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_after_action","","<p>Prepend a callback after actions. See _insert_callbacks for parameter\ndetails. Aliased as prepend_after_filter. …\n",null,1],["prepend_around_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_around_action","","<p>Prepend a callback around actions. See _insert_callbacks for parameter\ndetails. Aliased as prepend_around_filter. …\n",null,1],["prepend_before_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_before_action","","<p>Prepend a callback before actions. See _insert_callbacks for parameter\ndetails. Aliased as prepend_before_filter. …\n",null,1],["prepend_view_path","AbstractController::ViewPaths","Rails/classes/AbstractController/ViewPaths.html#method-i-prepend_view_path","(path)","",null,1],["prepend_view_path","AbstractController::ViewPaths::ClassMethods","Rails/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-prepend_view_path","(path)","<p>Prepend a path to the list of view paths for this controller.\n<p>Parameters\n<p><code>path</code> - If a String is provided, …\n",null,1],["preprocess","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-preprocess","(string)","<p>Preprocess received data from the host.\n<p>Performs newline conversion and detects telnet command sequences. …\n",null,0],["prerelease?","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-prerelease-3F","()","<p>Does this dependency require a prerelease?\n",null,0],["prerelease?","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-i-prerelease-3F","()","<p>Indicate if this NameTuple is for a prerelease version.\n",null,0],["prerelease?","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-prerelease-3F","()","<p>A requirement is a prerelease if any of the versions inside of it are\nprereleases\n",null,0],["prerelease?","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-prerelease-3F","()","<p>A requirement is a prerelease if any of the versions inside of it are\nprereleases\n",null,0],["prerelease?","Gem::Version","Ruby/classes/Gem/Version.html#method-i-prerelease-3F","()","<p>A version is considered a prerelease if it contains a letter.\n",null,0],["prerequisite_tasks","Rake::Task","Ruby/classes/Rake/Task.html#method-i-prerequisite_tasks","()","<p>List of prerequisite tasks\n",null,0],["presence","Object","Rails/classes/Object.html#method-i-presence","()","<p>Returns object if it&#39;s <code>present?</code> otherwise returns\n<code>nil</code>. <code>object.presence</code> is equivalent to\n<code>object.present</code> …\n",null,1],["present?","Object","Rails/classes/Object.html#method-i-present-3F","()","<p>An object is present if it&#39;s not <code>blank?</code>.\n",null,1],["pretty","CGI","Ruby/classes/CGI.html#method-c-pretty","(string, shift = \" \")","<p>Prettify (indent) an HTML string.\n<p><code>string</code> is the HTML string to indent.  <code>shift</code> is\nthe indentation unit …\n",null,0],["pretty_generate","JSON","Ruby/classes/JSON.html#method-i-pretty_generate","(obj, opts = nil)","<p>Generate a JSON document from the Ruby data structure <em>obj</em> and\nreturn it. The returned document is a prettier …\n",null,0],["pretty_inspect","Kernel","Ruby/classes/Kernel.html#method-i-pretty_inspect","()","<p>returns a pretty printed object as a string.\n",null,0],["pretty_name","RDoc::Alias","Ruby/classes/RDoc/Alias.html#method-i-pretty_name","()","",null,0],["pretty_name","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-pretty_name","()","<p>Method/attribute name with class/instance indicator\n",null,0],["pretty_new_name","RDoc::Alias","Ruby/classes/RDoc/Alias.html#method-i-pretty_new_name","()","<p>New name with prefix &#39;::&#39; or &#39;#&#39;.\n",null,0],["pretty_old_name","RDoc::Alias","Ruby/classes/RDoc/Alias.html#method-i-pretty_old_name","()","<p>Old name with prefix &#39;::&#39; or &#39;#&#39;.\n",null,0],["pretty_print","Array","Ruby/classes/Array.html#method-i-pretty_print","(q)","",null,0],["pretty_print","ENV","Ruby/classes/ENV.html#method-i-pretty_print","(q)","",null,0],["pretty_print","File::Stat","Ruby/classes/File/Stat.html#method-i-pretty_print","(q)","",null,0],["pretty_print","Hash","Ruby/classes/Hash.html#method-i-pretty_print","(q)","",null,0],["pretty_print","MatchData","Ruby/classes/MatchData.html#method-i-pretty_print","(q)","",null,0],["pretty_print","Object","Ruby/classes/Object.html#method-i-pretty_print","(q)","",null,0],["pretty_print","PP::ObjectMixin","Ruby/classes/PP/ObjectMixin.html#method-i-pretty_print","(q)","<p>A default pretty printing method for general objects. It calls\n#pretty_print_instance_variables to list …\n",null,0],["pretty_print","Range","Ruby/classes/Range.html#method-i-pretty_print","(q)","",null,0],["pretty_print","Struct","Ruby/classes/Struct.html#method-i-pretty_print","(q)","",null,0],["pretty_print","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-pretty_print","(q)","",null,1],["pretty_print_cycle","Array","Ruby/classes/Array.html#method-i-pretty_print_cycle","(q)","",null,0],["pretty_print_cycle","Hash","Ruby/classes/Hash.html#method-i-pretty_print_cycle","(q)","",null,0],["pretty_print_cycle","Object","Ruby/classes/Object.html#method-i-pretty_print_cycle","(q)","",null,0],["pretty_print_cycle","PP::ObjectMixin","Ruby/classes/PP/ObjectMixin.html#method-i-pretty_print_cycle","(q)","<p>A default pretty printing method for general objects that are detected as\npart of a cycle.\n",null,0],["pretty_print_cycle","Struct","Ruby/classes/Struct.html#method-i-pretty_print_cycle","(q)","",null,0],["pretty_print_inspect","PP::ObjectMixin","Ruby/classes/PP/ObjectMixin.html#method-i-pretty_print_inspect","()","<p>Is #inspect implementation using #pretty_print. If you implement\n#pretty_print, it can be used as follows. …\n",null,0],["pretty_print_instance_variables","PP::ObjectMixin","Ruby/classes/PP/ObjectMixin.html#method-i-pretty_print_instance_variables","()","<p>Returns a sorted array of instance variable names.\n<p>This method should return an array of names of instance …\n",null,0],["prev_day","Date","Ruby/classes/Date.html#method-i-prev_day","(p1 = v1)","<p>This method is equivalent to d - n.\n",null,0],["prev_month","Date","Ruby/classes/Date.html#method-i-prev_month","(p1 = v1)","<p>This method is equivalent to d &lt;&lt; n\n",null,0],["prev_month","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-prev_month","()","<p>Short-hand for months_ago(1).\n",null,1],["prev_quarter","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-prev_quarter","()","<p>Short-hand for months_ago(3).\n",null,1],["prev_week","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-prev_week","(start_day = Date.beginning_of_week)","<p>Returns a new date/time representing the given day in the previous week.\nWeek is assumed to start on …\n",null,1],["prev_words_on_error","RDoc::RD::InlineParser","Ruby/classes/RDoc/RD/InlineParser.html#method-i-prev_words_on_error","(ev)","<p>Returns words before the error\n",null,0],["prev_year","Date","Ruby/classes/Date.html#method-i-prev_year","(p1 = v1)","<p>This method is equivalent to d &lt;&lt; (n * 12)\n",null,0],["prev_year","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-prev_year","()","<p>Short-hand for years_ago(1).\n",null,1],["previous=","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-i-previous-3D","( previous )","",null,0],["previous_changes","ActiveModel::Dirty","Rails/classes/ActiveModel/Dirty.html#method-i-previous_changes","()","<p>Returns a hash of attributes that were changed before the model was saved.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-comment\"># =&gt; &quot;bob&quot;</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["previous_element","REXML::Element","Ruby/classes/REXML/Element.html#method-i-previous_element","()","<p>Returns the previous sibling that is an element, or nil if there is no\nElement sibling prior to this …\n",null,0],["previous_sibling=","REXML::Child","Ruby/classes/REXML/Child.html#method-i-previous_sibling-3D","(other)","<p>Sets the previous sibling of this child.  This can be used to insert a\nchild before some other child. …\n",null,0],["previous_sibling_node","REXML::Node","Ruby/classes/REXML/Node.html#method-i-previous_sibling_node","()","<p>@return the previous sibling (nil if unset)\n",null,0],["primary","Rinda::RingFinger","Ruby/classes/Rinda/RingFinger.html#method-c-primary","()","<p>Returns the first advertised TupleSpace.\n",null,0],["primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-primary_key","()","<p>Defines the primary key field – can be overridden in subclasses.\nOverwriting will negate any effect …\n",null,1],["primary_key","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-primary_key","(table)","<p>Returns just a table&#39;s primary key\n",null,1],["primary_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-primary_key","(table)","<p>Returns just a table&#39;s primary key\n",null,1],["primary_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html#method-i-primary_key","(name, type = :primary_key, options = {})","<p>Defines the primary key field. Use of the native PostgreSQL UUID type is\nsupported, and can be used by …\n",null,1],["primary_key","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-primary_key","(name, type = :primary_key, options = {})","<p>Appends a primary key definition to the table definition. Can be called\nmultiple times, but this is probably …\n",null,1],["primary_key=","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-primary_key-3D","(value)","<p>Sets the name of the primary key column.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Project</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">primary_key</span> = <span class=\"ruby-string\">&#39;sysid&#39;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["primary_keys","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-primary_keys","(table_name = nil)","",null,1],["prime?","Integer","Ruby/classes/Integer.html#method-i-prime-3F","()","<p>Returns true if <code>self</code> is a prime number, false for a composite.\n",null,0],["prime?","Integer","Ruby/classes/Integer.html#method-i-prime-3F","()","<p>Returns true if <code>self</code> is a prime number, false for a composite.\n",null,0],["prime?","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-prime-3F","(p1 = v1)","<p>Parameters\n<p><code>checks</code> - integer\n\n",null,0],["prime?","Prime","Ruby/classes/Prime.html#method-i-prime-3F","(value, generator = Prime::Generator23.new)","<p>Returns true if <code>value</code> is prime, false for a composite.\n<p>Parameters\n<p><code>value</code> &mdash; an arbitrary integer to be checked. …\n",null,0],["prime_division","Integer","Ruby/classes/Integer.html#method-i-prime_division","(generator = Prime::Generator23.new)","<p>Returns the factorization of <code>self</code>.\n<p>See Prime#prime_division for more details.\n",null,0],["prime_division","Integer","Ruby/classes/Integer.html#method-i-prime_division","(generator = Prime::Generator23.new)","<p>Returns the factorization of <code>self</code>.\n<p>See Prime#prime_division for more details.\n",null,0],["prime_division","Prime","Ruby/classes/Prime.html#method-i-prime_division","(value, generator= Prime::Generator23.new)","<p>Returns the factorization of <code>value</code>.\n<p>Parameters\n<p><code>value</code> &mdash; An arbitrary integer.\n",null,0],["prime_fasttest?","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-prime_fasttest-3F","(p1 = v1, p2 = v2)","<p>Parameters\n<p><code>checks</code> - integer\n<p><code>trial_div</code> - boolean\n",null,0],["primes","Prime::TrialDivision","Ruby/classes/Prime/TrialDivision.html#method-i-primes","()","",null,0],["primes_so_far","Prime::TrialDivision","Ruby/classes/Prime/TrialDivision.html#method-i-primes_so_far","()","",null,0],["primitive_convert","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-primitive_convert","(p1, p2, p3 = v3, p4 = v4, p5 = v5, p6 = {})","<p>possible opt elements:\n\n<pre><code>hash form:\n  :partial_input =&gt; true           # source buffer may be part of larger ...\n</code></pre>\n",null,0],["primitive_errinfo","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-primitive_errinfo","()","<p>primitive_errinfo returns important information regarding the last error as\na 5-element array:\n\n<pre><code>[result, ...</code></pre>\n",null,0],["print","ARGF","Ruby/classes/ARGF.html#method-i-print","(*args)","<p>Writes the given object(s) to <em>ios</em>. The stream must be opened for\nwriting. If the output field separator …\n",null,0],["print","CGI","Ruby/classes/CGI.html#method-i-print","(*options)","<p>Print an argument or list of arguments to the default output stream\n\n<pre><code>cgi = CGI.new\ncgi.print    # default: ...</code></pre>\n",null,0],["print","IO","Ruby/classes/IO.html#method-i-print","(*args)","<p>Writes the given object(s) to <em>ios</em>. The stream must be opened for\nwriting. If the output field separator …\n",null,0],["print","IO::writable","Ruby/classes/IO/writable.html#method-i-print","(*args)","<p>See IO#print.\n",null,0],["print","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-print","(*opts)","",null,0],["print","IRB::Notifier::AbstractNotifier","Ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-print","(*opts)","<p>See OutputMethod#print for more detail.\n",null,0],["print","IRB::OutputMethod","Ruby/classes/IRB/OutputMethod.html#method-i-print","(*opts)","<p>Open this method to implement your own output method, raises a\nNotImplementedError if you don&#39;t define …\n",null,0],["print","IRB::StdioOutputMethod","Ruby/classes/IRB/StdioOutputMethod.html#method-i-print","(*opts)","<p>Prints the given <code>opts</code> to standard output, see IO#print for\nmore information.\n",null,0],["print","Kernel","Ruby/classes/Kernel.html#method-i-print","(*args)","<p>Prints each object in turn to <code>$stdout</code>. If the output field\nseparator (<code>$,</code>) is not <code>nil</code>, its contents will …\n",null,0],["print","Net::InternetMessageIO::WriteAdapter","Ruby/classes/Net/InternetMessageIO/WriteAdapter.html#method-i-print","(str)","",null,0],["print","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-print","(string)","<p>Sends a string to the host.\n<p>This does <em>not</em> automatically append a newline to the string. \nEmbedded newlines …\n",null,0],["print","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-print","(*args)","<p>Writes <code>args</code> to the stream.\n<p>See IO#print for full details.\n",null,0],["print","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-print","(*args)","<p>Same as IO.\n",null,0],["print_alias","RDoc::Stats::Quiet","Ruby/classes/RDoc/Stats/Quiet.html#method-i-print_alias","(*)","<p>Prints when an alias is added\n",null,0],["print_attribute","RDoc::Stats::Quiet","Ruby/classes/RDoc/Stats/Quiet.html#method-i-print_attribute","(*)","<p>Prints when an attribute is added\n",null,0],["print_class","RDoc::Stats::Quiet","Ruby/classes/RDoc/Stats/Quiet.html#method-i-print_class","(*)","<p>Prints when a class is added\n",null,0],["print_constant","RDoc::Stats::Quiet","Ruby/classes/RDoc/Stats/Quiet.html#method-i-print_constant","(*)","<p>Prints when a constant is added\n",null,0],["print_dependencies","Gem::Commands::DependencyCommand","Ruby/classes/Gem/Commands/DependencyCommand.html#method-i-print_dependencies","(spec, level = 0)","",null,0],["print_file","RDoc::Stats::Normal","Ruby/classes/RDoc/Stats/Normal.html#method-i-print_file","(files_so_far, filename)","<p>Prints a file with a progress bar\n",null,0],["print_file","RDoc::Stats::Quiet","Ruby/classes/RDoc/Stats/Quiet.html#method-i-print_file","(*)","<p>Prints when a file is added\n",null,0],["print_method","RDoc::Stats::Quiet","Ruby/classes/RDoc/Stats/Quiet.html#method-i-print_method","(*)","<p>Prints when a method is added\n",null,0],["print_module","RDoc::Stats::Quiet","Ruby/classes/RDoc/Stats/Quiet.html#method-i-print_module","(*)","<p>Prints when a module is added\n",null,0],["print_profile","Profiler__","Ruby/classes/Profiler__.html#method-i-print_profile","(f)","",null,0],["print_rakefile_directory","Rake::Application","Ruby/classes/Rake/Application.html#method-i-print_rakefile_directory","(location)","",null,0],["print_rakefile_directory","Rake::Application","Ruby/classes/Rake/Application.html#method-i-print_rakefile_directory","(location)","",null,0],["print_usage","IRB","Ruby/classes/IRB.html#method-c-print_usage","()","<p>Outputs the irb help message, see IRB@Command+line+options.\n",null,0],["printf","ARGF","Ruby/classes/ARGF.html#method-i-printf","(*args)","<p>Formats and writes to <em>ios</em>, converting parameters under control of\nthe format string. See <code>Kernel#sprintf</code> …\n",null,0],["printf","IO","Ruby/classes/IO.html#method-i-printf","(*args)","<p>Formats and writes to <em>ios</em>, converting parameters under control of\nthe format string. See <code>Kernel#sprintf</code> …\n",null,0],["printf","IO::writable","Ruby/classes/IO/writable.html#method-i-printf","(*args)","<p>See IO#printf.\n",null,0],["printf","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-printf","(*opts)","",null,0],["printf","IRB::Notifier::AbstractNotifier","Ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-printf","(format, *opts)","<p>See OutputMethod#printf for more detail.\n",null,0],["printf","IRB::OutputMethod","Ruby/classes/IRB/OutputMethod.html#method-i-printf","(format, *opts)","<p>Extends IO#printf to format the given <code>opts</code> for Kernel#sprintf\nusing #parse_printf_format\n",null,0],["printf","Kernel","Ruby/classes/Kernel.html#method-i-printf","(*args)","<p>Equivalent to:\n\n<pre><code>io.write(sprintf(string, obj, ...)</code></pre>\n<p>or\n",null,0],["printf","Net::InternetMessageIO::WriteAdapter","Ruby/classes/Net/InternetMessageIO/WriteAdapter.html#method-i-printf","(*args)","",null,0],["printf","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-printf","(s, *args)","<p>Formats and writes to the stream converting parameters under control of the\nformat string.\n<p>See Kernel#sprintf …\n",null,0],["printf","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-printf","(*args)","<p>Same as IO.\n",null,0],["printn","IRB::Notifier::AbstractNotifier","Ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-printn","(*opts)","<p>See OutputMethod#printn for more detail.\n",null,0],["printn","IRB::OutputMethod","Ruby/classes/IRB/OutputMethod.html#method-i-printn","(*opts)","<p>Prints the given <code>opts</code>, with a newline delimiter.\n",null,0],["priority","Thread","Ruby/classes/Thread.html#method-i-priority","()","<p>Returns the priority of <em>thr</em>. Default is inherited from the current\nthread which creating the new thread, …\n",null,0],["priority=","Thread","Ruby/classes/Thread.html#method-i-priority-3D","(p1)","<p>Sets the priority of <em>thr</em> to <em>integer</em>. Higher-priority\nthreads will run more frequently than lower-priority …\n",null,0],["private?","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-private-3F","()","<p>Indicates whether this DH instance has a private key associated with it or\nnot. The private key may be …\n",null,0],["private?","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-private-3F","()","<p>Indicates whether this DSA instance has a private key associated with it or\nnot. The private key may …\n",null,0],["private?","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-private-3F","()","<p>Does this keypair contain a private key?\n",null,0],["private?","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-private-3F","()","<p>Does this keypair contain a private key?\n",null,0],["private_class_method","Module","Ruby/classes/Module.html#method-i-private_class_method","(*args)","<p>Makes existing class methods private. Often used to hide the default\nconstructor <code>new</code>.\n\n<pre><code>class SimpleSingleton ...\n</code></pre>\n",null,0],["private_constant","Module","Ruby/classes/Module.html#method-i-private_constant","(*args)","<p>Makes a list of existing constants private.\n",null,0],["private_decrypt","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-private_decrypt","(p1, p2 = v2)","<p>Decrypt <code>string</code>, which has been encrypted with the public key,\nwith the private key.  <code>padding</code> defaults …\n",null,0],["private_decrypt","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-private_decrypt","(p1, p2 = v2)","<p>Decrypt <code>string</code>, which has been encrypted with the public key,\nwith the private key.  <code>padding</code> defaults …\n",null,0],["private_encrypt","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-private_encrypt","(p1, p2 = v2)","<p>Encrypt <code>string</code> with the private key.  <code>padding</code>\ndefaults to PKCS1_PADDING. The encrypted string output …\n",null,0],["private_encrypt","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-private_encrypt","(p1, p2 = v2)","<p>Encrypt <code>string</code> with the private key.  <code>padding</code>\ndefaults to PKCS1_PADDING. The encrypted string output …\n",null,0],["private_instance_methods","Module","Ruby/classes/Module.html#method-i-private_instance_methods","(*args)","<p>Returns a list of the private instance methods defined in <em>mod</em>. If\nthe optional parameter is not <code>false</code> …\n",null,0],["private_key","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-private_key","()","<p>See the OpenSSL documentation for EC_KEY_get0_private_key()\n",null,0],["private_key=","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-private_key-3D","(p1)","<p>See the OpenSSL documentation for EC_KEY_set_private_key()\n",null,0],["private_key?","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-private_key-3F","()","<p>Both public_key? and private_key? may return false at the same time unlike\nother PKey classes.\n",null,0],["private_method_defined?","Module","Ruby/classes/Module.html#method-i-private_method_defined-3F","(p1)","<p>Returns <code>true</code> if the named private method is defined by _ mod_\n(or its included modules and, if <em>mod</em> is …\n",null,0],["private_methods","Object","Ruby/classes/Object.html#method-i-private_methods","(*args)","<p>Returns the list of private methods accessible to <em>obj</em>. If the\n<em>all</em> parameter is set to <code>false</code>, only those …\n",null,0],["proc","Kernel","Ruby/classes/Kernel.html#method-i-proc","()","<p>Equivalent to <code>Proc.new</code>.\n",null,0],["process","Net::IMAP::CramMD5Authenticator","Ruby/classes/Net/IMAP/CramMD5Authenticator.html#method-i-process","(challenge)","",null,0],["process","Net::IMAP::DigestMD5Authenticator","Ruby/classes/Net/IMAP/DigestMD5Authenticator.html#method-i-process","(challenge)","",null,0],["process","Net::IMAP::LoginAuthenticator","Ruby/classes/Net/IMAP/LoginAuthenticator.html#method-i-process","(data)","",null,0],["process","Net::IMAP::PlainAuthenticator","Ruby/classes/Net/IMAP/PlainAuthenticator.html#method-i-process","(data)","",null,0],["process","XMLRPC::BasicServer","Ruby/classes/XMLRPC/BasicServer.html#method-i-process","(data)","",null,0],["process","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-i-process","(action, *args)","<p>Calls the action going through the entire action dispatch stack.\n<p>The actual method that is called is determined …\n",null,1],["process","ActionController::Live","Rails/classes/ActionController/Live.html#method-i-process","(name)","",null,1],["process","ActionController::Middleware","Rails/classes/ActionController/Middleware.html#method-i-process","(action)","",null,1],["process_action","AbstractController::Callbacks","Rails/classes/AbstractController/Callbacks.html#method-i-process_action","(*args)","<p>Override AbstractController::Base&#39;s process_action to run the\nprocess_action callbacks around the …\n",null,1],["process_action","ActionController::Instrumentation","Rails/classes/ActionController/Instrumentation.html#method-i-process_action","(*args)","",null,1],["process_action","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-process_action","(event)","",null,1],["process_action","ActionController::ParamsWrapper","Rails/classes/ActionController/ParamsWrapper.html#method-i-process_action","(*args)","<p>Performs parameters wrapping upon the request. Will be called automatically\nby the metal call stack. …\n",null,1],["process_args","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-i-process_args","(args, build_args=nil)","",null,0],["process_args","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-c-process_args","(argv)","<p>Parses <code>argv</code> and returns a Hash of options\n",null,0],["process_attributes_for","HTML::WhiteListSanitizer","Rails/classes/HTML/WhiteListSanitizer.html#method-i-process_attributes_for","(node, options)","",null,1],["process_directive","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-process_directive","(code_object, directive, value)","<p>Processes common directives for CodeObjects for the C and Ruby parsers.\n<p>Applies <code>directive</code>&#39;s <code>value</code> …\n",null,0],["process_node","HTML::FullSanitizer","Rails/classes/HTML/FullSanitizer.html#method-i-process_node","(node, result, options)","",null,1],["process_node","HTML::LinkSanitizer","Rails/classes/HTML/LinkSanitizer.html#method-i-process_node","(node, result, options)","",null,1],["process_node","HTML::Sanitizer","Rails/classes/HTML/Sanitizer.html#method-i-process_node","(node, result, options)","",null,1],["process_node","HTML::WhiteListSanitizer","Rails/classes/HTML/WhiteListSanitizer.html#method-i-process_node","(node, result, options)","",null,1],["process_options","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-process_options","()","<p>DOC: Missing docs or :nodoc:.\n",null,0],["processingInstruction","RSS::REXMLLikeXMLParser","Ruby/classes/RSS/REXMLLikeXMLParser.html#method-i-processingInstruction","(target, content)","",null,0],["processing_instruction","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-processing_instruction","( node )","",null,0],["processing_instruction","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-processing_instruction","(target, data)","",null,0],["product","Array","Ruby/classes/Array.html#method-i-product","(*args)","<p>Returns an array of all combinations of elements from all arrays.\n<p>The length of the returned array is …\n",null,0],["progid","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-progid","()","<p>Returns ProgID if it exists. If not found, then returns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel ...</code></pre>\n",null,0],["progids","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-c-progids","()","<p>Returns array of ProgID.\n",null,0],["program_name","OptionParser","Ruby/classes/OptionParser.html#method-i-program_name","()","<p>Program name to be emitted in error message and default banner, defaults to\n$0.\n",null,0],["progress","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-progress","(position)","",null,0],["progress_reporter","Gem::SilentUI","Ruby/classes/Gem/SilentUI.html#method-i-progress_reporter","(*args)","",null,0],["progress_reporter","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-progress_reporter","(*args)","<p>Return a progress reporter object chosen from the current verbosity.\n",null,0],["prompt_mode=","IRB::Context","Ruby/classes/IRB/Context.html#method-i-prompt_mode-3D","(mode)","<p>Sets the <code>mode</code> of the prompt in this context.\n<p>See IRB@Customizing+the+IRB+Prompt for more information. …\n",null,0],["prompting?","IRB::Context","Ruby/classes/IRB/Context.html#method-i-prompting-3F","()","<p>Whether #verbose? is <code>true</code>, and <code>input_method</code> is\neither StdioInputMethod or ReadlineInputMethod, see #io …\n",null,0],["proper_subset?","Set","Ruby/classes/Set.html#method-i-proper_subset-3F","(set)","<p>Returns true if the set is a proper subset of the given set.\n",null,0],["proper_superset?","Set","Ruby/classes/Set.html#method-i-proper_superset-3F","(set)","<p>Returns true if the set is a proper superset of the given set.\n",null,0],["property","Rails::Info","Rails/classes/Rails/Info.html#method-c-property","(name, value = nil)","",null,1],["propfind","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-propfind","(path, body = nil, initheader = {'Depth' => '0'})","<p>Sends a PROPFIND request to the <code>path</code> and gets a response, as\nan HTTPResponse object.\n",null,0],["proppatch","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-proppatch","(path, body, initheader = nil)","<p>Sends a PROPPATCH request to the <code>path</code> and gets a response, as\nan HTTPResponse object.\n",null,0],["protect_against_forgery?","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-protect_against_forgery-3F","()","",null,1],["protect_from_forgery","ActionController::RequestForgeryProtection::ClassMethods","Rails/classes/ActionController/RequestForgeryProtection/ClassMethods.html#method-i-protect_from_forgery","(options = {})","<p>Turn on request forgery protection. Bear in mind that only non-GET,\nHTML/JavaScript requests are checked. …\n",null,1],["protected_instance_methods","Module","Ruby/classes/Module.html#method-i-protected_instance_methods","(*args)","<p>Returns a list of the protected instance methods defined in <em>mod</em>.\nIf the optional parameter is not <code>false</code> …\n",null,0],["protected_method_defined?","Module","Ruby/classes/Module.html#method-i-protected_method_defined-3F","(p1)","<p>Returns <code>true</code> if the named protected method is defined by\n<em>mod</em> (or its included modules and, if <em>mod</em> is …\n",null,0],["protected_methods","Delegator","Ruby/classes/Delegator.html#method-i-protected_methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this\nobject&#39;s and _<em>getobj</em> …\n",null,0],["protected_methods","Object","Ruby/classes/Object.html#method-i-protected_methods","(*args)","<p>Returns the list of protected methods accessible to <em>obj</em>. If the\n<em>all</em> parameter is set to <code>false</code>, only those …\n",null,0],["protocol","Addrinfo","Ruby/classes/Addrinfo.html#method-i-protocol","()","<p>returns the socket type as an integer.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).protocol == Socket::IPPROTO_TCP #=&gt; ...\n</code></pre>\n",null,0],["protocol","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-protocol","()","<p>Returns &#39;https://&#39; if this is an SSL request and &#39;http://&#39;\notherwise.\n",null,1],["provide","Rinda::RingProvider","Ruby/classes/Rinda/RingProvider.html#method-i-provide","()","<p>Advertises this service on the primary remote TupleSpace.\n",null,0],["provide","ActionView::Helpers::CaptureHelper","Rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-provide","(name, content = nil, &block)","<p>The same as <code>content_for</code> but when used with streaming flushes\nstraight back to the layout. In other words, …\n",null,1],["proxy","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-proxy","(prefix=nil, *args)","<p>Returns an object of class XMLRPC::Client::Proxy, initialized with\n<code>prefix</code> and <code>args</code>.\n<p>A proxy object returned …\n",null,0],["proxy2","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-proxy2","(prefix=nil, *args)","<p>Almost the same like XMLRPC::Client#proxy only that a call on the returned\nXMLRPC::Client::Proxy object …\n",null,0],["proxy2_async","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-proxy2_async","(prefix=nil, *args)","<p>Same as XMLRPC::Client#proxy2, but can be called concurrently.\n<p>See also XMLRPC::Client#proxy_async\n",null,0],["proxy?","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-proxy-3F","()","<p>True if requests for this connection will be proxied\n",null,0],["proxy_address","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-proxy_address","()","<p>The address of the proxy server, if one is configured.\n",null,0],["proxy_association","ActiveRecord::AssociationRelation","Rails/classes/ActiveRecord/AssociationRelation.html#method-i-proxy_association","()","",null,1],["proxy_association","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-proxy_association","()","",null,1],["proxy_async","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-proxy_async","(prefix=nil, *args)","<p>Similar to XMLRPC::Client#proxy, however can be called concurrently and use\na new connection for each …\n",null,0],["proxy_auth_get","Win32::SSPI::NegotiateAuth","Ruby/classes/Win32/SSPI/NegotiateAuth.html#method-c-proxy_auth_get","(http, path, user = nil, domain = nil)","<p>Given a connection and a request path, performs authentication as the\ncurrent user and returns the response …\n",null,0],["proxy_basic_auth","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-proxy_basic_auth","(account, password)","<p>Set Proxy-Authorization: header for “Basic” authorization.\n",null,0],["proxy_basic_auth","WEBrick::HTTPAuth","Ruby/classes/WEBrick/HTTPAuth.html#method-i-proxy_basic_auth","(req, res, realm)","<p>Simple wrapper for providing basic authentication for a proxied request.\nWhen called with a request  …\n",null,0],["proxy_class","ActiveSupport::Multibyte","Rails/classes/ActiveSupport/Multibyte.html#method-c-proxy_class","()","<p>Returns the current proxy class.\n",null,1],["proxy_class=","ActiveSupport::Multibyte","Rails/classes/ActiveSupport/Multibyte.html#method-c-proxy_class-3D","(klass)","<p>The proxy class returned when calling mb_chars. You can use this accessor\nto configure your own proxy …\n",null,1],["proxy_class?","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-proxy_class-3F","()","<p>returns true if self is a class which was created by HTTP::Proxy.\n",null,0],["proxy_from_env?","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-proxy_from_env-3F","()","<p>True if the proxy for this connection is determined from the environment\n",null,0],["proxy_pass","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-proxy_pass","()","<p>The proxy password, if one is configured\n",null,0],["proxy_port","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-proxy_port","()","<p>The port of the proxy server, if one is configured.\n",null,0],["proxy_user","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-proxy_user","()","<p>The proxy username, if one is configured\n",null,0],["proxyaddr","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-proxyaddr","()","",null,0],["proxyport","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-proxyport","()","",null,0],["prune","Find","Ruby/classes/Find.html#method-c-prune","()","<p>Skips the current file or directory, restarting the loop with the next\nentry. If the current file is …\n",null,0],["prune","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-prune","(target_size, max_time = nil)","<p>To ensure entries fit within the specified memory prune the cache by\nremoving the least recently accessed …\n",null,1],["pruning?","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-pruning-3F","()","<p>Returns true if the cache is currently being pruned.\n",null,1],["psych_to_yaml","Object","Ruby/classes/Object.html#method-i-psych_to_yaml","(options = {})","<p>Convert an object to YAML.  See Psych.dump for more information on the\navailable <code>options</code>.\n",null,0],["psych_yaml_as","Module","Ruby/classes/Module.html#method-i-psych_yaml_as","(url)","",null,0],["ptr","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-ptr","()","<p>Get the underlying function pointer as a DL::CPtr object.\n",null,0],["ptr","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-ptr","()","<p>Returns a DL::CPtr that is a dereferenced pointer for this DL::CPtr.\nAnalogous to the star operator in …\n",null,0],["ptr","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-ptr","()","<p>Returns a new Fiddle::Pointer instance that is a dereferenced pointer for\nthis pointer.\n<p>Analogous to the …\n",null,0],["ptr=","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-ptr-3D","(p1)","<p>Set the underlying function pointer to a DL::CPtr named\n<code>pointer</code>.\n",null,0],["pubDate","RSS::Maker::ChannelBase","Ruby/classes/RSS/Maker/ChannelBase.html#method-i-pubDate","()","",null,0],["pubDate","RSS::Maker::ItemsBase::ItemBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-pubDate","()","",null,0],["pubDate=","RSS::Maker::ChannelBase","Ruby/classes/RSS/Maker/ChannelBase.html#method-i-pubDate-3D","(date)","",null,0],["pubDate=","RSS::Maker::ItemsBase::ItemBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-pubDate-3D","(date)","",null,0],["public","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-public","()","<p>This method retrieves the public identifier identifying the document&#39;s\nDTD.\n<p>Method contributed by …\n",null,0],["public?","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-public-3F","()","<p>Indicates whether this DH instance has a public key associated with it or\nnot. The public key may be …\n",null,0],["public?","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-public-3F","()","<p>Indicates whether this DSA instance has a public key associated with it or\nnot. The public key may be …\n",null,0],["public?","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-public-3F","()","<p>The return value is always true since every private key is also a public\nkey.\n",null,0],["public?","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-public-3F","()","<p>The return value is always true since every private key is also a public\nkey.\n",null,0],["public_class_method","Module","Ruby/classes/Module.html#method-i-public_class_method","(*args)","<p>Makes a list of existing class methods public.\n",null,0],["public_constant","Module","Ruby/classes/Module.html#method-i-public_constant","(*args)","<p>Makes a list of existing constants public.\n",null,0],["public_decrypt","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-public_decrypt","(p1, p2 = v2)","<p>Decrypt <code>string</code>, which has been encrypted with the private key,\nwith the public key.  <code>padding</code> defaults …\n",null,0],["public_decrypt","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-public_decrypt","(p1, p2 = v2)","<p>Decrypt <code>string</code>, which has been encrypted with the private key,\nwith the public key.  <code>padding</code> defaults …\n",null,0],["public_directory","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-public_directory","()","",null,1],["public_encrypt","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-public_encrypt","(p1, p2 = v2)","<p>Encrypt <code>string</code> with the public key.  <code>padding</code>\ndefaults to PKCS1_PADDING. The encrypted string output can …\n",null,0],["public_encrypt","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-public_encrypt","(p1, p2 = v2)","<p>Encrypt <code>string</code> with the public key.  <code>padding</code>\ndefaults to PKCS1_PADDING. The encrypted string output can …\n",null,0],["public_instance_method","Module","Ruby/classes/Module.html#method-i-public_instance_method","(p1)","<p>Similar to <em>instance_method</em>, searches public method only.\n",null,0],["public_instance_methods","Module","Ruby/classes/Module.html#method-i-public_instance_methods","(*args)","<p>Returns a list of the public instance methods defined in <em>mod</em>. If\nthe optional parameter is not <code>false</code> …\n",null,0],["public_key","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-public_key","()","<p>Returns the public key associated with the SPKI, an instance of\nOpenSSL::PKey.\n",null,0],["public_key","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-public_key","()","<p>Returns a new DH instance that carries just the public information, i.e.\nthe prime <code>p</code> and the generator …\n",null,0],["public_key","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-public_key","()","<p>Returns a new DSA instance that carries just the public key information. If\nthe current instance has …\n",null,0],["public_key","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-public_key","()","<p>See the OpenSSL documentation for EC_KEY_get0_public_key()\n",null,0],["public_key","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-public_key","()","<p>Makes new RSA instance containing the public key from the private key.\n",null,0],["public_key","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-public_key","()","<p>Makes new RSA instance containing the public key from the private key.\n",null,0],["public_key","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-public_key","()","",null,0],["public_key","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-public_key","()","",null,0],["public_key=","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-public_key-3D","(p1)","<p>Parameters\n<p><code>pub</code> - the public key to be set for this instance\n\n<p>Sets the public key to be associated with the …\n",null,0],["public_key=","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-public_key-3D","(p1)","<p>See the OpenSSL documentation for EC_KEY_set_public_key()\n",null,0],["public_key=","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-public_key-3D","(p1)","",null,0],["public_key=","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-public_key-3D","(p1)","",null,0],["public_key?","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-public_key-3F","()","<p>Both public_key? and private_key? may return false at the same time unlike\nother PKey classes.\n",null,0],["public_method","Object","Ruby/classes/Object.html#method-i-public_method","(p1)","<p>Similar to <em>method</em>, searches public method only.\n",null,0],["public_method_defined?","Module","Ruby/classes/Module.html#method-i-public_method_defined-3F","(p1)","<p>Returns <code>true</code> if the named public method is defined by\n<em>mod</em> (or its included modules and, if <em>mod</em> is a class, …\n",null,0],["public_methods","Delegator","Ruby/classes/Delegator.html#method-i-public_methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this\nobject&#39;s and _<em>getobj</em> …\n",null,0],["public_methods","Object","Ruby/classes/Object.html#method-i-public_methods","(*args)","<p>Returns the list of public methods accessible to <em>obj</em>. If the\n<em>all</em> parameter is set to <code>false</code>, only those …\n",null,0],["public_path","Rails","Rails/classes/Rails.html#method-c-public_path","()","",null,1],["public_send","Object","Ruby/classes/Object.html#method-i-public_send","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments\nspecified. Unlike send, public_send …\n",null,0],["publish","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-publish","(name, *args)","",null,1],["publish","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-publish","(name, *args)","",null,1],["publish","ActiveSupport::Notifications::Fanout::Subscribers::Timed","Rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/Timed.html#method-i-publish","(name, *args)","",null,1],["pull","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-pull","()","<p>Returns the next event.  This is a <code>PullEvent</code> object.\n",null,0],["pull","REXML::Parsers::PullParser","Ruby/classes/REXML/Parsers/PullParser.html#method-i-pull","()","",null,0],["purge","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-purge","(configuration)","",null,1],["purpose=","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-purpose-3D","(p1)","",null,0],["push","Array","Ruby/classes/Array.html#method-i-push","(*args)","<p>Append — Pushes the given object(s) on to the end of this array. This\nexpression returns the array …\n",null,0],["push","CSV::Row","Ruby/classes/CSV/Row.html#method-i-push","(*args)","<p>A shortcut for appending multiple fields.  Equivalent to:\n\n<pre><code>args.each { |arg| csv_row &lt;&lt; arg }\n</code></pre>\n<p>This method …\n",null,0],["push","CSV::Table","Ruby/classes/CSV/Table.html#method-i-push","(*rows)","<p>A shortcut for appending multiple rows.  Equivalent to:\n\n<pre><code>rows.each { |row| self &lt;&lt; row }\n</code></pre>\n<p>This method returns …\n",null,0],["push","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-push","(object)","",null,0],["push","Queue","Ruby/classes/Queue.html#method-i-push","(obj)","<p>Pushes <code>obj</code> to the queue.\n",null,0],["push","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-i-push","(*parts)","<p>Appends <code>parts</code> to the document\n",null,0],["push","RDoc::Markup::List","Ruby/classes/RDoc/Markup/List.html#method-i-push","(*items)","<p>Appends <code>items</code> to the list\n",null,0],["push","RDoc::Markup::ListItem","Ruby/classes/RDoc/Markup/ListItem.html#method-i-push","(*parts)","<p>Adds <code>parts</code> to the ListItem\n",null,0],["push","RDoc::Markup::Raw","Ruby/classes/RDoc/Markup/Raw.html#method-i-push","(*texts)","<p>Appends <code>texts</code> onto this Paragraph\n",null,0],["push","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-push","( object )","",null,0],["push","Rinda::TupleBag","Ruby/classes/Rinda/TupleBag.html#method-i-push","(tuple)","<p>Add <code>tuple</code> to the TupleBag.\n",null,0],["push","SizedQueue","Ruby/classes/SizedQueue.html#method-i-push","(obj)","<p>Pushes <code>obj</code> to the queue.  If there is no space left in the\nqueue, waits until space becomes available. …\n",null,0],["push","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-push","(path)","",null,1],["push_inspect_key","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-push_inspect_key","(id)","",null,0],["push_workspace","IRB::Context","Ruby/classes/IRB/Context.html#method-i-push_workspace","(*_main)","<p>Creates a new workspace with the given object or binding, and appends it\nonto the current #workspaces …\n",null,0],["pushd","Shell","Ruby/classes/Shell.html#method-i-pushd","(path = nil, verbose = @verbose)","",null,0],["pushdir","Shell","Ruby/classes/Shell.html#method-i-pushdir","(path = nil, verbose = @verbose)","<p>Pushes the current directory to the directory stack, changing the current\ndirectory to <code>path</code>.\n<p>If <code>path</code> is …\n",null,0],["put","Net::FTP","Ruby/classes/Net/FTP.html#method-i-put","(localfile, remotefile = File.basename(localfile), blocksize = DEFAULT_BLOCKSIZE, &block)","<p>Transfers <code>localfile</code> to the server in whatever mode the session\nis set (text or binary).  See #puttextfile …\n",null,0],["put","ActionDispatch::Routing::Mapper::HttpHelpers","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-put","(*args, &block)","<p>Define a route that only recognizes HTTP PUT. For supported arguments, see\nmatch\n\n<pre>put &#39;bacon&#39;, to: &#39;food#bacon&#39;</pre>\n",null,1],["put?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-put-3F","()","<p>Is this a PUT request? Equivalent to <code>request.request_method_symbol ==\n:put</code>.\n",null,1],["putback","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-putback","(p1 = v1)","<p>call-seq\n\n<pre><code>ec.putback                    -&gt; string\nec.putback(max_numbytes)      -&gt; string</code></pre>\n<p>Put back the bytes …\n",null,0],["putbinaryfile","Net::FTP","Ruby/classes/Net/FTP.html#method-i-putbinaryfile","(localfile, remotefile = File.basename(localfile), blocksize = DEFAULT_BLOCKSIZE)","<p>Transfers <code>localfile</code> to the server in binary mode, storing the\nresult in <code>remotefile</code>. If a block is supplied, …\n",null,0],["putc","ARGF","Ruby/classes/ARGF.html#method-i-putc","(p1)","<p>If <em>obj</em> is <code>Numeric</code>, write the character whose code is\nthe least-significant byte of <em>obj</em>, otherwise write …\n",null,0],["putc","IO","Ruby/classes/IO.html#method-i-putc","(p1)","<p>If <em>obj</em> is <code>Numeric</code>, write the character whose code is\nthe least-significant byte of <em>obj</em>, otherwise write …\n",null,0],["putc","Kernel","Ruby/classes/Kernel.html#method-i-putc","(p1)","\n<pre><code>Equivalent to:\n\n  $stdout.putc(int)</code></pre>\n<p>Refer to the documentation for IO#putc for important information regarding\n…\n",null,0],["putc","StringIO","Ruby/classes/StringIO.html#method-i-putc","(p1)","<p>See IO#putc.\n",null,0],["putc","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-putc","(p1)","<p>Same as IO.\n",null,0],["puts","ARGF","Ruby/classes/ARGF.html#method-i-puts","(*args)","<p>Writes the given objects to <em>ios</em> as with <code>IO#print</code>.\nWrites a record separator (typically a newline) after …\n",null,0],["puts","CSV","Ruby/classes/CSV.html#method-i-puts","(row)","",null,0],["puts","IO","Ruby/classes/IO.html#method-i-puts","(*args)","<p>Writes the given objects to <em>ios</em> as with <code>IO#print</code>.\nWrites a record separator (typically a newline) after …\n",null,0],["puts","IO::writable","Ruby/classes/IO/writable.html#method-i-puts","(*args)","<p>See IO#puts.\n",null,0],["puts","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-puts","(*opts)","",null,0],["puts","IRB::Notifier::AbstractNotifier","Ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-puts","(*objs)","<p>See OutputMethod#puts for more detail.\n",null,0],["puts","IRB::OutputMethod","Ruby/classes/IRB/OutputMethod.html#method-i-puts","(*objs)","<p>Calls #print on each element in the given <code>objs</code>, followed by a\nnewline character.\n",null,0],["puts","Kernel","Ruby/classes/Kernel.html#method-i-puts","(*args)","<p>Equivalent to\n\n<pre><code>$stdout.puts(obj, ...)</code></pre>\n",null,0],["puts","Net::InternetMessageIO::WriteAdapter","Ruby/classes/Net/InternetMessageIO/WriteAdapter.html#method-i-puts","(str = '')","",null,0],["puts","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-puts","(string)","<p>Sends a string to the host.\n<p>Same as #print(), but appends a newline to the string.\n",null,0],["puts","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-puts","(*args)","<p>Writes <code>args</code> to the stream along with a record separator.\n<p>See IO#puts for full details.\n",null,0],["puts","XMP","Ruby/classes/XMP.html#method-i-puts","(exps)","<p>Evaluates the given <code>exps</code>, for example:\n\n<pre><code>require &#39;irb/xmp&#39;\nx = XMP.new\n\nx.puts &#39;{:a =&gt; 1, :b =&gt; 2, :c =&gt; ...\n</code></pre>\n",null,0],["puts","XMP::StringInputMethod","Ruby/classes/XMP/StringInputMethod.html#method-i-puts","(exps)","<p>Concatenates all expressions in this printer, separated by newlines.\n<p>An Encoding::CompatibilityError is …\n",null,0],["puts","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-puts","(*args)","<p>Same as IO.\n",null,0],["puttextfile","Net::FTP","Ruby/classes/Net/FTP.html#method-i-puttextfile","(localfile, remotefile = File.basename(localfile))","<p>Transfers <code>localfile</code> to the server in ASCII (text) mode,\nstoring the result in <code>remotefile</code>. If callback …\n",null,0],["pwd","Dir","Ruby/classes/Dir.html#method-c-pwd","()","<p>Returns the path to the current working directory of this process as a\nstring.\n\n<pre><code>Dir.chdir(&quot;/tmp&quot;)   #=&gt; ...\n</code></pre>\n",null,0],["pwd","FileUtils","Ruby/classes/FileUtils.html#method-c-pwd","()","<p>Options: (none)\n<p>Returns the name of the current directory.\n",null,0],["pwd","Net::FTP","Ruby/classes/Net/FTP.html#method-i-pwd","()","<p>Returns the current remote directory.\n",null,0],["pwd","Pathname","Ruby/classes/Pathname.html#method-c-pwd","()","<p>Returns the current working directory as a Pathname.\n\n<pre><code>Pathname.getwd\n    #=&gt; #&lt;Pathname:/home/zzak/projects/ruby&gt;\n</code></pre>\n",null,0],["qualified_const_defined?","Module","Rails/classes/Module.html#method-i-qualified_const_defined-3F","(path, search_parents=true)","",null,1],["qualified_const_get","Module","Rails/classes/Module.html#method-i-qualified_const_get","(path)","",null,1],["qualified_const_set","Module","Rails/classes/Module.html#method-i-qualified_const_set","(path, value)","",null,1],["query","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-query","()","<p>Request query as a Hash\n",null,0],["query=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-query-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["query_attribute","ActiveRecord::AttributeMethods::Query","Rails/classes/ActiveRecord/AttributeMethods/Query.html#method-i-query_attribute","(attr_name)","",null,1],["query_parameters","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-query_parameters","()","",null,1],["quick","Gem::Server","Ruby/classes/Gem/Server.html#method-i-quick","(req, res)","",null,0],["quiet","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-quiet","()","<p>Don&#39;t display progress as we process the files\n",null,0],["quiet","Sys","Ruby/classes/Sys.html#method-i-quiet","(&block)","<p>Perform a block with $verbose disabled.\n",null,0],["quiet=","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-quiet-3D","(bool)","<p>Set quietness to <code>bool</code>\n",null,0],["quietly","Kernel","Rails/classes/Kernel.html#method-i-quietly","()","<p>Silences both STDOUT and STDERR, even for subprocesses.\n\n<pre>quietly { system &#39;bundle install&#39; }</pre>\n",null,1],["quit","Net::FTP","Ruby/classes/Net/FTP.html#method-i-quit","()","<p>Exits the FTP session.\n",null,0],["quit","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-quit","()","",null,0],["quo","BigDecimal","Ruby/classes/BigDecimal.html#method-i-quo","(p1)","<p>Divide by the specified value.\n<p>e.g.\n\n<pre><code>c = a.div(b,n)</code></pre>\n",null,0],["quo","Complex","Ruby/classes/Complex.html#method-i-quo","(p1)","<p>Performs division.\n\n<pre><code>Complex(2, 3)  / Complex(2, 3)   #=&gt; ((1/1)+(0/1)*i)\nComplex(900)   / Complex(1)   ...\n</code></pre>\n",null,0],["quo","Float","Ruby/classes/Float.html#method-i-quo","(p1)","<p>Returns float / numeric.\n",null,0],["quo","Numeric","Ruby/classes/Numeric.html#method-i-quo","(p1)","<p>Returns most exact division (rational for integers, float for floats).\n",null,0],["quo","Rational","Ruby/classes/Rational.html#method-i-quo","(p1)","<p>Performs division.\n\n<pre><code>Rational(2, 3)  / Rational(2, 3)   #=&gt; (1/1)\nRational(900)   / Rational(1)      #=&gt; ...\n</code></pre>\n",null,0],["quote","Regexp","Ruby/classes/Regexp.html#method-c-quote","(p1)","<p>Escapes any characters that would have special meaning in a regular\nexpression. Returns a new escaped …\n",null,0],["quote","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-quote","(str)","<p>Quotes and escapes quotes in <code>str</code>\n",null,0],["quote","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quote","(value, column = nil)","<p>QUOTING ==================================================\n",null,1],["quote","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote","(value, column = nil)","<p>Quotes the column value to help prevent SQL injection attacks.\n",null,1],["quote","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-quote","(value, column = nil)","<p>QUOTING ==================================================\n",null,1],["quote_column_name","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_column_name","(column_name)","<p>Quotes the column name. Defaults to no quoting.\n",null,1],["quote_string","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-quote_string","(string)","<p>QUOTING ==================================================\n",null,1],["quote_string","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_string","(s)","<p>Quotes a string, escaping any &#39; (single quote) and \\ (backslash)\ncharacters.\n",null,1],["quote_table_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Quoting.html#method-i-quote_table_name","(name)","<p>Checks the following cases:\n<p>table_name\n<p>“table.name”\n",null,1],["quote_table_name","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_table_name","(table_name)","<p>Quotes the table name. Defaults to column name quoting.\n",null,1],["quote_table_name_for_assignment","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Quoting.html#method-i-quote_table_name_for_assignment","(table, attr)","",null,1],["quote_table_name_for_assignment","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_table_name_for_assignment","(table, attr)","<p>Override to return the quoted table name for assignment. Defaults to table\nquoting.\n<p>This works for mysql …\n",null,1],["quote_table_name_for_assignment","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-quote_table_name_for_assignment","(table, attr)","",null,1],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quoted_columns_for_index","(column_names, options = {})","",null,1],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-quoted_columns_for_index","(column_names, options = {})","<p>Overridden by the mysql adapter for supporting index lengths\n",null,1],["quoted_date","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_date","(value)","",null,1],["quoted_false","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quoted_false","()","",null,1],["quoted_false","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_false","()","",null,1],["quoted_id","ActiveRecord::Sanitization","Rails/classes/ActiveRecord/Sanitization.html#method-i-quoted_id","()","<p>TODO: Deprecate this\n",null,1],["quoted_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-quoted_locking_column","()","<p>Quote the column name used for optimistic locking.\n",null,1],["quoted_primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-quoted_primary_key","()","<p>Returns a quoted version of the primary key name, used to construct SQL\nstatements.\n",null,1],["quoted_table_name","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-quoted_table_name","()","<p>Returns a quoted version of the table name, used to construct SQL\nstatements.\n",null,1],["quoted_true","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quoted_true","()","",null,1],["quoted_true","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_true","()","",null,1],["r","Vector","Ruby/classes/Vector.html#method-i-r","()","",null,0],["racc_accept","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-racc_accept","()","",null,0],["racc_e_pop","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-racc_e_pop","(state, tstack, vstack)","",null,0],["racc_next_state","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-racc_next_state","(curstate, state)","",null,0],["racc_print_stacks","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-racc_print_stacks","(t, v)","",null,0],["racc_print_states","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-racc_print_states","(s)","",null,0],["racc_read_token","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-racc_read_token","(t, tok, val)","<p>For debugging output\n",null,0],["racc_reduce","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-racc_reduce","(toks, sim, tstack, vstack)","",null,0],["racc_shift","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-racc_shift","(tok, tstack, vstack)","",null,0],["racc_token2str","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-racc_token2str","(tok)","",null,0],["rack_app","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-rack_app","(app = self.app)","",null,1],["radio_button","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-radio_button","(name = \"\", value = nil, checked = nil)","<p>Generates a radio-button Input element.\n<p><code>name</code> is the name of the input field.  <code>value</code> is\nthe value of the …\n",null,0],["radio_button","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-radio_button","(method, tag_value, options = {})","<p>Returns a radio button tag for accessing a specified attribute (identified\nby <code>method</code>) on an object assigned …\n",null,1],["radio_button","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-radio_button","(object_name, method, tag_value, options = {})","<p>Returns a radio button tag for accessing a specified attribute (identified\nby <code>method</code>) on an object assigned …\n",null,1],["radio_button_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-radio_button_tag","(name, value, checked = false, options = {})","<p>Creates a radio button; use groups of radio buttons named the same to allow\nusers to select from a group …\n",null,1],["radio_group","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-radio_group","(name = \"\", *values)","<p>Generate a sequence of radio button Input elements, as a String.\n<p>This works the same as #checkbox_group() …\n",null,0],["rails_version","Rails::API::AppTask","Rails/classes/Rails/API/AppTask.html#method-i-rails_version","()","",null,1],["rails_version","Rails::API::EdgeTask","Rails/classes/Rails/API/EdgeTask.html#method-i-rails_version","()","",null,1],["rails_version","Rails::API::StableTask","Rails/classes/Rails/API/StableTask.html#method-i-rails_version","()","",null,1],["railtie_name","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-railtie_name","(name = nil)","",null,1],["railtie_namespace","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-i-railtie_namespace","()","",null,1],["railties","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-railties","()","",null,1],["raise","Kernel","Ruby/classes/Kernel.html#method-i-raise","(*args)","<p>With no arguments, raises the exception in <code>$!</code> or raises a\n<code>RuntimeError</code> if <code>$!</code> is <code>nil</code>. With a\nsingle <code>String</code> …\n",null,0],["raise","Thread","Ruby/classes/Thread.html#method-i-raise","(*args)","<p>Raises an exception (see <code>Kernel::raise</code>) from <em>thr</em>. The\ncaller does not have to be <em>thr</em>.\n\n<pre><code>Thread.abort_on_exception ...</code></pre>\n",null,0],["raise","ActiveSupport::ProxyObject","Rails/classes/ActiveSupport/ProxyObject.html#method-i-raise","(*args)","<p>Let ActiveSupport::ProxyObject at least raise exceptions.\n",null,1],["raise_for_undefined_entity?","RSS::BaseListener","Ruby/classes/RSS/BaseListener.html#method-i-raise_for_undefined_entity-3F","()","",null,0],["raise_for_undefined_entity?","RSS::BaseParser","Ruby/classes/RSS/BaseParser.html#method-i-raise_for_undefined_entity-3F","()","",null,0],["raise_for_undefined_entity?","RSS::REXMLListener","Ruby/classes/RSS/REXMLListener.html#method-i-raise_for_undefined_entity-3F","()","",null,0],["raise_if_absolute","QualifiedConstUtils","Rails/classes/QualifiedConstUtils.html#method-c-raise_if_absolute","(path)","",null,1],["raise_if_conflicts","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-raise_if_conflicts","()","<p>Check the spec for possible conflicts and freak out if there are any.\n",null,0],["raised_exception","TracePoint","Ruby/classes/TracePoint.html#method-i-raised_exception","()","<p>Value from exception raised on the <code>:raise</code> event\n",null,0],["rake","Build","Rails/classes/Build.html#method-i-rake","(*tasks)","",null,1],["rake","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-rake","(command, options={})","<p>Runs the supplied rake task\n\n<pre>rake(&quot;db:migrate&quot;)\nrake(&quot;db:migrate&quot;, env: &quot;production&quot;)\nrake(&quot;gems:install&quot;, ...</pre>\n",null,1],["rake_check_options","Rake::FileUtilsExt","Ruby/classes/Rake/FileUtilsExt.html#method-i-rake_check_options","(options, *optdecl)","<p>Check that the options do not contain options not listed in\n<code>optdecl</code>.  An ArgumentError exception is thrown …\n",null,0],["rake_extension","Module","Ruby/classes/Module.html#method-i-rake_extension","(method)","<p>Check for an existing method in the current class before extending.  IF the\nmethod already exists, then …\n",null,0],["rake_merge_option","Rake::FileUtilsExt","Ruby/classes/Rake/FileUtilsExt.html#method-i-rake_merge_option","(args, defaults)","<p>Merge the given options with the default values.\n",null,0],["rake_original_const_missing","Module","Ruby/classes/Module.html#method-i-rake_original_const_missing","(const_name)","<p>Rename the original handler to make it available.\n",null,0],["rake_original_time_compare","Time","Ruby/classes/Time.html#method-i-rake_original_time_compare","(other)","",null,0],["rake_output_message","Rake::FileUtilsExt","Ruby/classes/Rake/FileUtilsExt.html#method-i-rake_output_message","(message)","<p>Send the message to the default rake output (which is $stderr).\n",null,0],["rake_require","Rake::Application","Ruby/classes/Rake/Application.html#method-i-rake_require","(file_name, paths=$LOAD_PATH, loaded=$\")","<p>Similar to the regular Ruby <code>require</code> command, but will check\nfor *.rake files in addition to *.rb files. …\n",null,0],["rake_require","Rake::Application","Ruby/classes/Rake/Application.html#method-i-rake_require","(file_name, paths=$LOAD_PATH, loaded=$\")","<p>Similar to the regular Ruby <code>require</code> command, but will check\nfor *.rake files in addition to *.rb files. …\n",null,0],["rake_system","Rake::Win32","Ruby/classes/Rake/Win32.html#method-i-rake_system","(*cmd)","<p>Run a command line on windows.\n",null,0],["rake_tasks","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-rake_tasks","(&blk)","",null,1],["rakefile","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-rakefile","()","",null,1],["rakefile","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-rakefile","(filename, data=nil, &block)","<p>Create a new Rakefile with the provided code (either in a block or a\nstring).\n\n<pre>rakefile(&quot;bootstrap.rake&quot;) ...</pre>\n",null,1],["rakefile","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-rakefile","()","",null,1],["rakefile_location","Rake::Application","Ruby/classes/Rake/Application.html#method-i-rakefile_location","(backtrace=caller)","",null,0],["rakefile_location","Rake::Application","Ruby/classes/Rake/Application.html#method-i-rakefile_location","(backtrace=caller)","",null,0],["rand","Kernel","Ruby/classes/Kernel.html#method-i-rand","(p1 = v1)","<p>If called without an argument, or if <code>max.to_i.abs == 0</code>, rand\nreturns a pseudo-random floating point number …\n",null,0],["rand","Random","Ruby/classes/Random.html#method-c-rand","(*args)","<p>Alias of Random::DEFAULT.rand.\n",null,0],["rand","Random","Ruby/classes/Random.html#method-i-rand","(*args)","<p>When <code>max</code> is an Integer, <code>rand</code> returns a random\ninteger greater than or equal to zero and less than <code>max</code> …\n",null,0],["random_bytes","SecureRandom","Ruby/classes/SecureRandom.html#method-c-random_bytes","(n=nil)","<p>SecureRandom.random_bytes generates a random binary string.\n<p>The argument <em>n</em> specifies the length of the …\n",null,0],["random_iv","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-random_iv","()","<p>Generate, set, and return a random iv. You must call cipher.encrypt or\ncipher.decrypt before calling …\n",null,0],["random_key","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-random_key","()","<p>Generate, set, and return a random key. You must call cipher.encrypt or\ncipher.decrypt before calling …\n",null,0],["random_number","SecureRandom","Ruby/classes/SecureRandom.html#method-c-random_number","(n=0)","<p>SecureRandom.random_number generates a random number.\n<p>If a positive integer is given as <em>n</em>, SecureRandom.random_number …\n",null,0],["random_string","WEBrick::Utils","Ruby/classes/WEBrick/Utils.html#method-c-random_string","(len)","<p>Generates a random string of length <code>len</code>\n",null,0],["range","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-range","()","<p>Returns an Array of Range objects which represent the Range: HTTP header\nfield, or <code>nil</code> if there is no …\n",null,0],["range=","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-range-3D","(r, e = nil)","",null,0],["range_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-range_field","(object_name, method, options = {})","<p>Returns an input tag of type “range”.\n<p>Options\n<p>Accepts same options as range_field_tag\n",null,1],["range_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-range_field_tag","(name, value = nil, options = {})","<p>Creates a range form element.\n<p>Options\n<p>Accepts the same options as number_field_tag.\n",null,1],["range_length","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-range_length","()","<p>The length of the range represented in Content-Range: header.\n",null,0],["range_to_string","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-range_to_string","(object)","",null,1],["rank","Matrix","Ruby/classes/Matrix.html#method-i-rank","()","<p>Returns the rank of the matrix. Beware that using Float values can yield\nerroneous results because of …\n",null,0],["rank_e","Matrix","Ruby/classes/Matrix.html#method-i-rank_e","()","<p>deprecated; use Matrix#rank\n",null,0],["rassoc","Array","Ruby/classes/Array.html#method-i-rassoc","(p1)","<p>Searches through the array whose elements are also arrays.\n<p>Compares <code>obj</code> with the second element of each …\n",null,0],["rassoc","ENV","Ruby/classes/ENV.html#method-c-rassoc","(p1)","<p>Returns an Array of the name and value of the environment variable with\n<code>value</code> or <code>nil</code> if the value cannot …\n",null,0],["rassoc","Hash","Ruby/classes/Hash.html#method-i-rassoc","(p1)","<p>Searches through the hash comparing <em>obj</em> with the value using\n<code>==</code>. Returns the first key-value pair (two-element …\n",null,0],["rationalize","Complex","Ruby/classes/Complex.html#method-i-rationalize","(p1 = v1)","<p>Returns the value as a rational if possible (the imaginary part should be\nexactly zero).\n\n<pre><code>Complex(1.0/3, ...</code></pre>\n",null,0],["rationalize","Float","Ruby/classes/Float.html#method-i-rationalize","(p1 = v1)","<p>Returns a simpler approximation of the value (flt-|eps| &lt;= result &lt;=\nflt+|eps|).  if the optional …\n",null,0],["rationalize","Integer","Ruby/classes/Integer.html#method-i-rationalize","(p1 = v1)","<p>Returns the value as a rational.  The optional argument eps is always\nignored.\n",null,0],["rationalize","Integer","Ruby/classes/Integer.html#method-i-rationalize","(p1 = v1)","<p>Returns the value as a rational.  The optional argument eps is always\nignored.\n",null,0],["rationalize","NilClass","Ruby/classes/NilClass.html#method-i-rationalize","(p1 = v1)","<p>Returns zero as a rational.  The optional argument eps is always ignored.\n",null,0],["rationalize","Rational","Ruby/classes/Rational.html#method-i-rationalize","(p1 = v1)","<p>Returns a simpler approximation of the value if the optional argument eps\nis given (rat-|eps| &lt;= result …\n",null,0],["raw","Curses","Ruby/classes/Curses.html#method-c-raw","()","<p>Put the terminal into raw mode.\n<p>Raw mode is similar to Curses.cbreak mode, in that characters typed are …\n",null,0],["raw","IO","Ruby/classes/IO.html#method-i-raw","(*args)","<p>Yields <code>self</code> within raw mode.\n\n<pre><code>STDIN.raw(&amp;:gets)</code></pre>\n<p>will read and return a line without echo back and line editing. …\n",null,0],["raw","REXML::Element","Ruby/classes/REXML/Element.html#method-i-raw","()","<p>Evaluates to <code>true</code> if raw mode is set for this element.  This\nis the case if the context has :<code>raw</code> set …\n",null,0],["raw","ActionView::Helpers::OutputSafetyHelper","Rails/classes/ActionView/Helpers/OutputSafetyHelper.html#method-i-raw","(stringish)","<p>This method outputs without escaping a string. Since escaping tags is now\ndefault, this can be used when …\n",null,1],["raw!","IO","Ruby/classes/IO.html#method-i-raw-21","(*args)","<p>Enables raw mode.\n<p>If the terminal mode needs to be back, use io.raw { … }.\n<p>You must require &#39;io/console&#39; …\n",null,0],["raw_connection","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-raw_connection","()","<p>Provides access to the underlying database driver for this adapter. For\nexample, this method returns …\n",null,1],["raw_cookie","CGI::QueryExtension","Ruby/classes/CGI/QueryExtension.html#method-i-raw_cookie","()","<p>Get the raw cookies as a string.\n",null,0],["raw_cookie2","CGI::QueryExtension","Ruby/classes/CGI/QueryExtension.html#method-i-raw_cookie2","()","<p>Get the raw RFC2965 cookies as a string.\n",null,0],["raw_data","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-raw_data","()","<p>Returns an Array of individual raw profile data Hashes ordered from\nearliest to latest by <code>:GC_INVOKE_TIME</code> …\n",null,0],["raw_host_with_port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-raw_host_with_port","()","<p>Returns the host for this request, such as “example.com”.\n",null,1],["raw_params","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-raw_params","(auth)","<p>This method takes an authorization body and splits up the key-value pairs\nby the standardized `:`, `;`, …\n",null,1],["raw_path","RDoc::RI::Paths","Ruby/classes/RDoc/RI/Paths.html#method-c-raw_path","(system, site, home, gems, *extra_dirs)","<p>Returns selected documentation directories including nonexistent\ndirectories.\n<p>See also ::each\n",null,0],["raw_post","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-raw_post","()","<p>Read the request body. This is useful for web services that need to work\nwith raw requests directly. …\n",null,1],["raw_write_attribute","ActiveRecord::AttributeMethods::Write","Rails/classes/ActiveRecord/AttributeMethods/Write.html#method-i-raw_write_attribute","(attr_name, value)","",null,1],["rb_files_in","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-rb_files_in","(dir)","",null,0],["rb_scan_args","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-rb_scan_args","(method_body)","<p>Extracts parameters from the <code>method_body</code> and returns a method\nparameter string.  Follows 1.9.3dev&#39;s …\n",null,0],["rcptto","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-rcptto","(to_addr)","",null,0],["rcptto_list","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-rcptto_list","(to_addrs)","",null,0],["rdev","File::Stat","Ruby/classes/File/Stat.html#method-i-rdev","()","<p>Returns an integer representing the device type on which <em>stat</em>\nresides. Returns <code>nil</code> if the operating system …\n",null,0],["rdev_major","File::Stat","Ruby/classes/File/Stat.html#method-i-rdev_major","()","<p>Returns the major part of <code>File_Stat#rdev</code> or <code>nil</code>.\n\n<pre><code>File.stat(&quot;/dev/fd1&quot;).rdev_major   #=&gt; 2\nFile.stat(&quot;/dev/tty&quot;).rdev_major ...\n</code></pre>\n",null,0],["rdev_minor","File::Stat","Ruby/classes/File/Stat.html#method-i-rdev_minor","()","<p>Returns the minor part of <code>File_Stat#rdev</code> or <code>nil</code>.\n\n<pre><code>File.stat(&quot;/dev/fd1&quot;).rdev_minor   #=&gt; 1\nFile.stat(&quot;/dev/tty&quot;).rdev_minor ...\n</code></pre>\n",null,0],["rdoc","Gem::Server","Ruby/classes/Gem/Server.html#method-i-rdoc","(req, res)","<p>Can be used for quick navigation to the rdoc documentation.  You can then\ndefine a search shortcut for …\n",null,0],["rdoc_installed?","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-rdoc_installed-3F","()","<p>Is rdoc documentation installed?\n",null,0],["rdoc_installed?","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-rdoc_installed-3F","()","<p>Is rdoc documentation installed?\n",null,0],["rdoc_options","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-rdoc_options","()","<p>Specifies the rdoc options to be used when generating API documentation.\n<p>Usage:\n\n<pre><code>spec.rdoc_options &lt;&lt; &#39;--title&#39; ...</code></pre>\n",null,0],["rdoc_options=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-rdoc_options-3D","(options)","<p>Sets rdoc_options to <code>value</code>, ensuring it is an array. Don&#39;t\nuse this, push onto the array instead. …\n",null,0],["rdoc_task_description","RDoc::Task","Ruby/classes/RDoc/Task.html#method-i-rdoc_task_description","()","<p>Task description for the rdoc task or its renamed equivalent\n",null,0],["re","","Ruby/files/ruby/doc/re_rdoc.html","","<p>Regular expressions (<em>regexp</em>s) are patterns which describe the\ncontents of a string. They&#39;re used …\n",null,0],["re_exchange","Process::GID","Ruby/classes/Process/GID.html#method-c-re_exchange","()","<p>Exchange real and effective group IDs and return the new effective group\nID. Not available on all platforms. …\n",null,0],["re_exchange","Process::UID","Ruby/classes/Process/UID.html#method-c-re_exchange","()","<p>Exchange real and effective user IDs and return the new effective user ID.\nNot available on all platforms. …\n",null,0],["re_exchangeable?","Process::GID","Ruby/classes/Process/GID.html#method-c-re_exchangeable-3F","()","<p>Returns <code>true</code> if the real and effective group IDs of a process\nmay be exchanged on the current platform. …\n",null,0],["re_exchangeable?","Process::UID","Ruby/classes/Process/UID.html#method-c-re_exchangeable-3F","()","<p>Returns <code>true</code> if the real and effective user IDs of a process\nmay be exchanged on the current platform. …\n",null,0],["re_sign","Gem::Security","Ruby/classes/Gem/Security.html#method-c-re_sign","(expired_certificate, private_key, age = ONE_YEAR, extensions = EXTENSIONS)","<p>Signs <code>expired_certificate</code> with <code>private_key</code> if the\nkeys match and the expired certificate was self-signed. …\n",null,0],["read","ARGF","Ruby/classes/ARGF.html#method-i-read","(p1 = v1, p2 = v2)","\n<pre><code>Reads _length_ bytes from ARGF. The files named on the command line\nare concatenated and treated as a ...</code></pre>\n",null,0],["read","CSV","Ruby/classes/CSV.html#method-i-read","()","<p>Slurps the remaining rows and returns an Array of Arrays.\n<p>The data source must be open for reading.\n",null,0],["read","CSV","Ruby/classes/CSV.html#method-c-read","(path, *options)","<p>Use to slurp a CSV file into an Array of Arrays.  Pass the\n<code>path</code> to the file and any <code>options</code> CSV::new() …\n",null,0],["read","Dir","Ruby/classes/Dir.html#method-i-read","()","<p>Reads the next entry from <em>dir</em> and returns it as a string. Returns\n<code>nil</code> at the end of the stream.\n\n<pre><code>d = Dir.new(&quot;testdir&quot;) ...</code></pre>\n",null,0],["read","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-read","(len = nil)","<p>Reads <code>len</code> bytes from the tar file entry, or the rest of the\nentry if nil\n",null,0],["read","IO","Ruby/classes/IO.html#method-c-read","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = {})","<p>Opens the file, optionally seeks to the given <code>offset</code>, then\nreturns <code>length</code> bytes (defaulting to the rest …\n",null,0],["read","IO","Ruby/classes/IO.html#method-i-read","(p1 = v1, p2 = v2)","<p>Reads <em>length</em> bytes from the I/O stream.\n<p><em>length</em> must be a non-negative integer or <code>nil</code>.\n<p>If <em>length</em> is a positive …\n",null,0],["read","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-read","(size=nil, buf=nil)","<p>Reads <code>size</code> bytes from the stream.  If <code>buf</code> is\nprovided it must reference a string which will receive the …\n",null,0],["read","OpenSSL::PKey","Ruby/classes/OpenSSL/PKey.html#method-c-read","(p1, p2 = v2)","<p>Parameters\n<p><code>string</code> is a DER- or PEM-encoded string containing an arbitrary\nprivate\n\n<p>or public key.\n",null,0],["read","OpenURI::OpenRead","Ruby/classes/OpenURI/OpenRead.html#method-i-read","(options={})","<p>OpenURI::OpenRead#read() reads a content referenced by self and returns the\ncontent as string. The string …\n",null,0],["read","Pathname","Ruby/classes/Pathname.html#method-i-read","(p1 = v1, p2 = v2, p3 = v3)","<p>Returns all data from the file, or the first <code>N</code> bytes if\nspecified.\n<p>See IO.read.\n",null,0],["read","REXML::IOSource","Ruby/classes/REXML/IOSource.html#method-i-read","()","",null,0],["read","REXML::Source","Ruby/classes/REXML/Source.html#method-i-read","()","",null,0],["read","Rinda::TupleSpace","Ruby/classes/Rinda/TupleSpace.html#method-i-read","(tuple, sec=nil)","<p>Reads <code>tuple</code>, but does not remove it.\n",null,0],["read","Rinda::TupleSpaceProxy","Ruby/classes/Rinda/TupleSpaceProxy.html#method-i-read","(tuple, sec=nil, &block)","<p>Reads <code>tuple</code> from the proxied TupleSpace.  See TupleSpace#read.\n",null,0],["read","Rinda::WaitTemplateEntry","Ruby/classes/Rinda/WaitTemplateEntry.html#method-i-read","(tuple)","",null,0],["read","StringIO","Ruby/classes/StringIO.html#method-i-read","(*args)","<p>See IO#read.\n",null,0],["read","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-read","(name, *rtype)","<p>Read a registry value named name and return array of [ type, data ]. When\nname is nil, the `default&#39; …\n",null,0],["read","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-read","(p1 = v1)","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["read","ActionDispatch::Http::UploadedFile","Rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-read","(length=nil, buffer=nil)","<p>Shortcut for <code>tempfile.read</code>.\n",null,1],["read","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-i-read","(key)","",null,1],["read","ActionDispatch::RailsMetaStore","Rails/classes/ActionDispatch/RailsMetaStore.html#method-i-read","(key)","",null,1],["read","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-read","(name, options = nil)","<p>Fetches data from the cache, using the given key. If there is data in the\ncache with the given key, then …\n",null,1],["read_all","Rinda::TupleSpace","Ruby/classes/Rinda/TupleSpace.html#method-i-read_all","(tuple)","<p>Returns all tuples matching <code>tuple</code>.  Does not remove the found\ntuples.\n",null,0],["read_all","Rinda::TupleSpaceProxy","Ruby/classes/Rinda/TupleSpaceProxy.html#method-i-read_all","(tuple)","<p>Reads all tuples matching <code>tuple</code> from the proxied TupleSpace. \nSee TupleSpace#read_all.\n",null,0],["read_attribute","ActiveRecord::AttributeMethods::Read","Rails/classes/ActiveRecord/AttributeMethods/Read.html#method-i-read_attribute","(attr_name)","<p>Returns the value of the attribute identified by <code>attr_name</code>\nafter it has been typecast (for example, “2004-12-12” …\n",null,1],["read_attribute_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","Rails/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#method-i-read_attribute_before_type_cast","(attr_name)","<p>Returns the value of the attribute identified by <code>attr_name</code>\nbefore typecasting and deserialization.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["read_bin","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-read_bin","(name)","<p>Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin) registry\nvalue named name.\n<p>If the values …\n",null,0],["read_binary","Gem","Ruby/classes/Gem.html#method-c-read_binary","(path)","<p>Safely read a file in binary mode on all platforms.\n",null,0],["read_body","Net::HTTPResponse","Ruby/classes/Net/HTTPResponse.html#method-i-read_body","(dest = nil, &block)","<p>Gets the entity body returned by the remote HTTP server.\n<p>If a block is given, the body is passed to the …\n",null,0],["read_checksums","Gem::Package","Ruby/classes/Gem/Package.html#method-i-read_checksums","(gem)","<p>Reads and loads checksums.yaml.gz from the tar file <code>gem</code>\n",null,0],["read_directive","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-read_directive","(allowed)","<p>Directives are modifier comments that can appear after class, module, or\nmethod names. For example:\n\n<pre><code>def ...\n</code></pre>\n",null,0],["read_documentation_modifiers","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-read_documentation_modifiers","(context, allowed)","<p>Handles directives following the definition for <code>context</code> (any\nRDoc::CodeObject) if the directives are …\n",null,0],["read_entry","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-read_entry","(key, options)","",null,1],["read_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-read_entry","(key, options)","",null,1],["read_file","RDoc::Encoding","Ruby/classes/RDoc/Encoding.html#method-c-read_file","(filename, encoding, force_transcode = false)","<p>Reads the contents of <code>filename</code> and handles any encoding\ndirectives in the file.\n<p>The content will be converted …\n",null,0],["read_fragment","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-read_fragment","(key, options = nil)","<p>Reads a cached fragment from the location signified by <code>key</code>\n(see <code>expire_fragment</code> for acceptable formats). …\n",null,1],["read_i","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-read_i","(name)","<p>Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin) registry\nvalue named name.\n<p>If the values …\n",null,0],["read_multi","ActiveSupport::Cache::MemCacheStore","Rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-read_multi","(*names)","<p>Reads multiple values from the cache using a single call to the servers for\nall keys. Options can be …\n",null,1],["read_multi","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-read_multi","(*names)","<p>Read multiple values at once from the cache. Options can be passed in the\nlast argument.\n<p>Some cache implementation …\n",null,1],["read_nonblock","ARGF","Ruby/classes/ARGF.html#method-i-read_nonblock","(*args)","<p>Reads at most <em>maxlen</em> bytes from the ARGF stream in non-blocking\nmode.\n",null,0],["read_nonblock","IO","Ruby/classes/IO.html#method-i-read_nonblock","(*args)","<p>Reads at most <em>maxlen</em> bytes from <em>ios</em> using the read(2)\nsystem call after O_NONBLOCK is set for the underlying …\n",null,0],["read_nonblock","IO::readable","Ruby/classes/IO/readable.html#method-i-read_nonblock","(*args)","<p>Similar to #read, but raises <code>EOFError</code> at end of string instead\nof returning <code>nil</code>, as well as IO#sysread …\n",null,0],["read_nonblock","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-read_nonblock","(maxlen, buf=nil)","<p>Reads at most <code>maxlen</code> bytes in the non-blocking manner.\n<p>When no data can be read without blocking it raises …\n",null,0],["read_s","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-read_s","(name)","<p>Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin) registry\nvalue named name.\n<p>If the values …\n",null,0],["read_s_expand","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-read_s_expand","(name)","<p>Read a REG_SZ or REG_EXPAND_SZ registry value named name.\n<p>If the value type is REG_EXPAND_SZ, environment …\n",null,0],["read_smime","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-c-read_smime","(p1)","",null,0],["read_store_attribute","ActiveRecord::Store","Rails/classes/ActiveRecord/Store.html#method-i-read_store_attribute","(store_attribute, key)","",null,1],["read_timeout=","Net::FTP","Ruby/classes/Net/FTP.html#method-i-read_timeout-3D","(sec)","<p>Setter for the read_timeout attribute.\n",null,0],["read_timeout=","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-read_timeout-3D","(sec)","<p>Setter for the read_timeout attribute.\n",null,0],["read_timeout=","Net::POP3","Ruby/classes/Net/POP3.html#method-i-read_timeout-3D","(sec)","<p>Set the read timeout.\n",null,0],["read_timeout=","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-read_timeout-3D","(sec)","<p>Set the number of seconds to wait until timing-out a read(2) call.\n",null,0],["read_type_class","Psych","Ruby/classes/Psych.html#method-c-read_type_class","(type, reference)","",null,0],["read_with_substitution","REXML::Text","Ruby/classes/REXML/Text.html#method-c-read_with_substitution","( input, illegal=nil )","<p>Reads text, substituting entities\n",null,0],["readable?","File","Ruby/classes/File.html#method-c-readable-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the effective\nuser id of this process.\n",null,0],["readable?","File::Stat","Ruby/classes/File/Stat.html#method-i-readable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is readable by the effective\nuser id of this process.\n\n<pre><code>File.stat(&quot;testfile&quot;).readable? ...</code></pre>\n",null,0],["readable?","FileTest","Ruby/classes/FileTest.html#method-i-readable-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the effective\nuser id of this process.\n",null,0],["readable?","Pathname","Ruby/classes/Pathname.html#method-i-readable-3F","()","<p>See FileTest.readable?.\n",null,0],["readable_after_eof?","IRB::InputMethod","Ruby/classes/IRB/InputMethod.html#method-i-readable_after_eof-3F","()","<p>Whether this input method is still readable when there is no more data to\nread.\n<p>See IO#eof for more information. …\n",null,0],["readable_after_eof?","IRB::ReadlineInputMethod","Ruby/classes/IRB/ReadlineInputMethod.html#method-i-readable_after_eof-3F","()","<p>Whether this input method is still readable when there is no more data to\nread.\n<p>See IO#eof for more information. …\n",null,0],["readable_after_eof?","IRB::StdioInputMethod","Ruby/classes/IRB/StdioInputMethod.html#method-i-readable_after_eof-3F","()","<p>Whether this input method is still readable when there is no more data to\nread.\n<p>See IO#eof for more information. …\n",null,0],["readable_inspect","Date","Rails/classes/Date.html#method-i-readable_inspect","()","<p>Overrides the default inspect method with a human readable one, e.g., “Mon,\n21 Feb 2005”\n",null,1],["readable_inspect","DateTime","Rails/classes/DateTime.html#method-i-readable_inspect","()","<p>Overrides the default inspect method with a human readable one, e.g., “Mon,\n21 Feb 2005 14:30:00 …\n",null,1],["readable_real?","File","Ruby/classes/File.html#method-c-readable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the real user id\nof this process.\n",null,0],["readable_real?","File::Stat","Ruby/classes/File/Stat.html#method-i-readable_real-3F","()","<p>Returns <code>true</code> if <em>stat</em> is readable by the real user id\nof this process.\n\n<pre><code>File.stat(&quot;testfile&quot;).readable_real? ...</code></pre>\n",null,0],["readable_real?","FileTest","Ruby/classes/FileTest.html#method-i-readable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the real user id\nof this process.\n",null,0],["readable_real?","Pathname","Ruby/classes/Pathname.html#method-i-readable_real-3F","()","<p>See FileTest.readable_real?.\n",null,0],["readagain_bytes","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-readagain_bytes","()","<p>Returns the bytes to be read again when Encoding::InvalidByteSequenceError\noccurs.\n",null,0],["readbyte","ARGF","Ruby/classes/ARGF.html#method-i-readbyte","()","<p>Reads the next 8-bit byte from ARGF and returns it as a\n<code>Fixnum</code>. Raises an <code>EOFError</code> after the last byte …\n",null,0],["readbyte","IO","Ruby/classes/IO.html#method-i-readbyte","()","<p>Reads a byte as with <code>IO#getbyte</code>, but raises an\n<code>EOFError</code> on end of file.\n",null,0],["readbyte","IO::readable","Ruby/classes/IO/readable.html#method-i-readbyte","()","<p>See IO#readbyte.\n",null,0],["readbyte","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-readbyte","()","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["readchar","ARGF","Ruby/classes/ARGF.html#method-i-readchar","()","<p>Reads the next character from <code>ARGF</code> and returns it as a\n<code>String</code>. Raises an <code>EOFError</code> after the last\ncharacter …\n",null,0],["readchar","IO","Ruby/classes/IO.html#method-i-readchar","()","<p>Reads a one-character string from <em>ios</em>. Raises an\n<code>EOFError</code> on end of file.\n\n<pre><code>f = File.new(&quot;testfile&quot;)\nf.readchar ...</code></pre>\n",null,0],["readchar","IO::readable","Ruby/classes/IO/readable.html#method-i-readchar","()","<p>See IO#readchar.\n",null,0],["readchar","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-readchar","()","<p>Reads a one-character string from the stream.  Raises an EOFError at end of\nfile.\n",null,0],["readchar","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-readchar","()","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["readline","ARGF","Ruby/classes/ARGF.html#method-i-readline","(*args)","<p>Returns the next line from the current file in <code>ARGF</code>.\n<p>By default lines are assumed to be separated by +$/+; …\n",null,0],["readline","CSV","Ruby/classes/CSV.html#method-i-readline","()","",null,0],["readline","IO","Ruby/classes/IO.html#method-i-readline","(*args)","<p>Reads a line as with <code>IO#gets</code>, but raises an\n<code>EOFError</code> on end of file.\n",null,0],["readline","IO::readable","Ruby/classes/IO/readable.html#method-i-readline","(*args)","<p>See IO#readline.\n",null,0],["readline","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-readline","(*rs)","",null,0],["readline","Kernel","Ruby/classes/Kernel.html#method-i-readline","(*args)","<p>Equivalent to <code>Kernel::gets</code>, except <code>readline</code>\nraises <code>EOFError</code> at end of file.\n",null,0],["readline","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-readline","(eol=$/)","<p>Reads a line from the stream which is separated by <code>eol</code>.\n<p>Raises EOFError if at end of file.\n",null,0],["readline","Readline","Ruby/classes/Readline.html#method-c-readline","(p1 = v1, p2 = v2)","<p>Shows the <code>prompt</code> and reads the inputted line with line\nediting. The inputted line is added to the history …\n",null,0],["readline","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-readline","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["readlines","ARGF","Ruby/classes/ARGF.html#method-i-readlines","(*args)","<p>Reads <code>ARGF</code>&#39;s current file in its entirety, returning an\n<code>Array</code> of its lines, one line per element. …\n",null,0],["readlines","CSV","Ruby/classes/CSV.html#method-c-readlines","(*args)","<p>Alias for CSV::read().\n",null,0],["readlines","CSV","Ruby/classes/CSV.html#method-i-readlines","()","",null,0],["readlines","IO","Ruby/classes/IO.html#method-c-readlines","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = {})","<p>Reads the entire file specified by <em>name</em> as individual lines, and\nreturns those lines in an array. Lines …\n",null,0],["readlines","IO","Ruby/classes/IO.html#method-i-readlines","(*args)","<p>Reads all of the lines in <em>ios</em>, and returns them in\n<em>anArray</em>. Lines are separated by the optional <em>sep</em>. …\n",null,0],["readlines","Kernel","Ruby/classes/Kernel.html#method-i-readlines","(*args)","<p>Returns an array containing the lines returned by calling\n<code>Kernel.gets(<em>sep</em>)</code> until the end of file.\n",null,0],["readlines","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-readlines","(eol=$/)","<p>Reads lines from the stream which are separated by <code>eol</code>.\n<p>See also #gets\n",null,0],["readlines","Pathname","Ruby/classes/Pathname.html#method-i-readlines","(p1 = v1, p2 = v2, p3 = v3)","<p>Returns all the lines from the file.\n<p>See IO.readlines.\n",null,0],["readlines","StringIO","Ruby/classes/StringIO.html#method-i-readlines","(*args)","<p>See IO#readlines.\n",null,0],["readlines","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-readlines","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["readlink","File","Ruby/classes/File.html#method-c-readlink","(p1)","<p>Returns the name of the file referenced by the given link. Not available on\nall platforms.\n\n<pre><code>File.symlink(&quot;testfile&quot;, ...</code></pre>\n",null,0],["readlink","Pathname","Ruby/classes/Pathname.html#method-i-readlink","()","<p>Read symbolic link.\n<p>See File.readlink.\n",null,0],["readme","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-readme","()","",null,1],["readme","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-readme","(path)","<p>Reads the given file at the source root and prints it in the console.\n\n<pre>readme &quot;README&quot;</pre>\n",null,1],["readme","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-readme","()","",null,1],["readonly","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-readonly","(value = true)","<p>Sets readonly attributes for the returned relation. If value is true\n(default), attempting to update …\n",null,1],["readonly!","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-readonly-21","()","<p>Marks this record as read only.\n",null,1],["readonly?","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-readonly-3F","()","<p>Returns <code>true</code> if the record is read only. Records loaded\nthrough joins with piggy-back attributes will …\n",null,1],["readonly_attributes","ActiveRecord::ReadonlyAttributes::ClassMethods","Rails/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html#method-i-readonly_attributes","()","<p>Returns an array of all the attributes that have been specified as\nreadonly.\n",null,1],["readpartial","ARGF","Ruby/classes/ARGF.html#method-i-readpartial","(*args)","<p>Reads at most <em>maxlen</em> bytes from the ARGF stream. It blocks only if\n<code>ARGF</code> has no data immediately available. …\n",null,0],["readpartial","IO","Ruby/classes/IO.html#method-i-readpartial","(*args)","<p>Reads at most <em>maxlen</em> bytes from the I/O stream. It blocks only if\n<em>ios</em> has no data immediately available. …\n",null,0],["readpartial","IO::readable","Ruby/classes/IO/readable.html#method-i-readpartial","(*args)","<p>Similar to #read, but raises <code>EOFError</code> at end of string instead\nof returning <code>nil</code>, as well as IO#sysread …\n",null,0],["readpartial","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-readpartial","(maxlen, buf=nil)","<p>Reads at most <code>maxlen</code> bytes from the stream.  If\n<code>buf</code> is provided it must reference a string which will …\n",null,0],["readpartial","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-readpartial","(p1, p2 = v2)","<p>Reads at most <em>maxlen</em> bytes from the gziped stream but it blocks\nonly if <em>gzipreader</em> has no data immediately …\n",null,0],["ready","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-ready","(from_addr, *to_addrs)","",null,0],["ready?","IO","Ruby/classes/IO.html#method-i-ready-3F","()","<p>Returns true if input available without blocking, or false. Returns nil if\nno information available. …\n",null,0],["real","Complex","Ruby/classes/Complex.html#method-i-real","()","<p>Returns the real part.\n\n<pre><code>Complex(7).real      #=&gt; 7\nComplex(9, -4).real  #=&gt; 9\n</code></pre>\n",null,0],["real","Matrix","Ruby/classes/Matrix.html#method-i-real","()","<p>Returns the real part of the matrix.\n\n<pre><code>Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]]\n  =&gt; 1+2i  i  ...\n</code></pre>\n",null,0],["real","Numeric","Ruby/classes/Numeric.html#method-i-real","()","<p>Returns self.\n",null,0],["real?","Complex","Ruby/classes/Complex.html#method-i-real-3F","()","<p>Returns false.\n",null,0],["real?","Matrix","Ruby/classes/Matrix.html#method-i-real-3F","()","<p>Returns <code>true</code> if all entries of the matrix are real.\n",null,0],["real?","Numeric","Ruby/classes/Numeric.html#method-i-real-3F","()","<p>Returns <code>true</code> if <em>num</em> is a <code>Real</code> (i.e. non\n<code>Complex</code>).\n",null,0],["realdirpath","File","Ruby/classes/File.html#method-c-realdirpath","(p1, p2 = v2)","<p>Returns the real (absolute) pathname of <em>pathname</em> in the actual\nfilesystem. The real pathname doesn&#39;t …\n",null,0],["realdirpath","Pathname","Ruby/classes/Pathname.html#method-i-realdirpath","(p1 = v1)","<p>Returns the real (absolute) pathname of <code>self</code> in the actual\nfilesystem.\n<p>Does not contain symlinks or useless …\n",null,0],["realloc","DL","Ruby/classes/DL.html#method-c-realloc","(p1, p2)","<p>Change the size of the memory allocated at the memory location\n<code>addr</code> to <code>size</code> bytes.  Returns the memory …\n",null,0],["realloc","Fiddle","Ruby/classes/Fiddle.html#method-c-realloc","(p1, p2)","<p>Change the size of the memory allocated at the memory location\n<code>addr</code> to <code>size</code> bytes.  Returns the memory …\n",null,0],["really_verbose","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-really_verbose","()","<p>Really verbose mode gives you extra output.\n",null,0],["realpath","File","Ruby/classes/File.html#method-c-realpath","(p1, p2 = v2)","<p>Returns the real (absolute) pathname of <em>pathname</em> in the actual\nfilesystem not containing symlinks or …\n",null,0],["realpath","Pathname","Ruby/classes/Pathname.html#method-i-realpath","(p1 = v1)","<p>Returns the real (absolute) pathname for <code>self</code> in the actual\nfilesystem.\n<p>Does not contain symlinks or useless …\n",null,0],["realtime","Benchmark","Ruby/classes/Benchmark.html#method-c-realtime","()","<p>Returns the elapsed real time used to execute the given block.\n",null,0],["reap","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-reap","()","<p>Removes dead connections from the pool.  A dead connection can occur if a\nprogrammer forgets to close …\n",null,1],["reason","LocalJumpError","Ruby/classes/LocalJumpError.html#method-i-reason","()","<p>The reason this block was terminated: :break, :redo, :retry, :next,\n:return, or :noreason.\n",null,0],["reason","OptionParser::ParseError","Ruby/classes/OptionParser/ParseError.html#method-i-reason","()","<p>Returns error reason. Override this for I18N.\n",null,0],["reason_phrase","WEBrick::HTTPStatus","Ruby/classes/WEBrick/HTTPStatus.html#method-c-reason_phrase","(code)","<p>Returns the description corresponding to the HTTP status <code>code</code>\n\n<pre><code>WEBrick::HTTPStatus.reason_phrase 404\n=&gt; ...\n</code></pre>\n",null,0],["reason_phrase","WEBrick::HTTPStatus::Status","Ruby/classes/WEBrick/HTTPStatus/Status.html#method-i-reason_phrase","()","<p>Returns the HTTP status description\n",null,0],["receive","REXML::Validation::RelaxNG","Ruby/classes/REXML/Validation/RelaxNG.html#method-i-receive","(event)","",null,0],["receive","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-receive","(raw_mail)","<p>Receives a raw email, parses it into an email object, decodes it,\ninstantiates a new mailer, and passes …\n",null,1],["receive","ActionMailer::LogSubscriber","Rails/classes/ActionMailer/LogSubscriber.html#method-i-receive","(event)","",null,1],["receiver","Method","Ruby/classes/Method.html#method-i-receiver","()","<p>Returns the bound receiver of the method object.\n",null,0],["recipients","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-recipients","()","",null,0],["reconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-reconnect-21","()","<p>Disconnects from the database if already connected, and establishes a new\nconnection with the database. …\n",null,1],["reconnect!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-reconnect-21","()","",null,1],["reconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-reconnect-21","()","",null,1],["reconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-reconnect-21","()","<p>Close then reopen the connection.\n",null,1],["record","ActiveRecord::Migration::CommandRecorder","Rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-record","(*command, &block)","<p>record <code>command</code>. <code>command</code> should be a method name\nand arguments. For example:\n\n<pre>recorder.record(:method_name, ...</pre>\n",null,1],["record_entity_expansion","REXML::Document","Ruby/classes/REXML/Document.html#method-i-record_entity_expansion","()","",null,0],["record_key_for_dom_id","ActionView::RecordIdentifier","Rails/classes/ActionView/RecordIdentifier.html#method-i-record_key_for_dom_id","(record)","<p>Returns a string representation of the key attribute(s) that is suitable\nfor use in an HTML DOM id.  …\n",null,1],["record_location","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-record_location","(top_level)","<p>Records the RDoc::TopLevel (file) where this code object was defined\n",null,0],["record_location","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-record_location","(top_level)","<p>Record <code>top_level</code> as a file <code>self</code> is in.\n",null,0],["recover","OptionParser::ParseError","Ruby/classes/OptionParser/ParseError.html#method-i-recover","(argv)","<p>Pushes back erred argument(s) to <code>argv</code>.\n",null,0],["recreate_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-recreate_database","(name, options = {})","<p>Drops the database specified on the <code>name</code> attribute and creates\nit again using the provided <code>options</code>.\n",null,1],["rect","Complex","Ruby/classes/Complex.html#method-i-rect","()","<p>Returns an array; [cmp.real, cmp.imag].\n\n<pre><code>Complex(1, 2).rectangular  #=&gt; [1, 2]\n</code></pre>\n",null,0],["rect","Complex","Ruby/classes/Complex.html#method-c-rect","(p1, p2 = v2)","<p>Returns a complex object which denotes the given rectangular form.\n\n<pre><code>Complex.rectangular(1, 2)  #=&gt; (1+2i)\n</code></pre>\n",null,0],["rect","Matrix","Ruby/classes/Matrix.html#method-i-rect","()","<p>Returns an array containing matrices corresponding to the real and\nimaginary parts of the matrix\n<p>m.rect …\n",null,0],["rect","Numeric","Ruby/classes/Numeric.html#method-i-rect","()","<p>Returns an array; [num, 0].\n",null,0],["rectangular","Complex","Ruby/classes/Complex.html#method-i-rectangular","()","<p>Returns an array; [cmp.real, cmp.imag].\n\n<pre><code>Complex(1, 2).rectangular  #=&gt; [1, 2]\n</code></pre>\n",null,0],["rectangular","Complex","Ruby/classes/Complex.html#method-c-rectangular","(p1, p2 = v2)","<p>Returns a complex object which denotes the given rectangular form.\n\n<pre><code>Complex.rectangular(1, 2)  #=&gt; (1+2i)\n</code></pre>\n",null,0],["rectangular","Matrix","Ruby/classes/Matrix.html#method-i-rectangular","()","",null,0],["rectangular","Numeric","Ruby/classes/Numeric.html#method-i-rectangular","()","<p>Returns an array; [num, 0].\n",null,0],["recurse_proc","JSON","Ruby/classes/JSON.html#method-i-recurse_proc","(result, &proc)","<p>Recursively calls passed <em>Proc</em> if the parsed data structure is an\n<em>Array</em> or <em>Hash</em>\n",null,0],["recv","BasicSocket","Ruby/classes/BasicSocket.html#method-i-recv","(*args)","<p>Receives a message.\n<p><em>maxlen</em> is the maximum number of bytes to receive.\n<p><em>flags</em> should be a bitwise OR of Socket::MSG_* …\n",null,0],["recv_io","UNIXSocket","Ruby/classes/UNIXSocket.html#method-i-recv_io","(p1 = v1, p2 = v2)","<p>UNIXServer.open(“/tmp/sock”) {|serv|\n\n<pre><code>UNIXSocket.open(&quot;/tmp/sock&quot;) {|c|\n  s = serv.accept\n\n  ...\n</code></pre>\n",null,0],["recv_nonblock","BasicSocket","Ruby/classes/BasicSocket.html#method-i-recv_nonblock","(*args)","<p>Receives up to <em>maxlen</em> bytes from <code>socket</code> using\nrecvfrom(2) after O_NONBLOCK is set for the underlying …\n",null,0],["recvfrom","IPSocket","Ruby/classes/IPSocket.html#method-i-recvfrom","(*args)","<p>Receives a message and return the message as a string and an address which\nthe message come from.\n<p><em>maxlen</em> …\n",null,0],["recvfrom","Socket","Ruby/classes/Socket.html#method-i-recvfrom","(*args)","<p>Receives up to <em>maxlen</em> bytes from <code>socket</code>.\n<em>flags</em> is zero or more of the <code>MSG_</code> options. The first\nelement …\n",null,0],["recvfrom","UNIXSocket","Ruby/classes/UNIXSocket.html#method-i-recvfrom","(*args)","<p>Receives a message via <em>unixsocket</em>.\n<p><em>maxlen</em> is the maximum number of bytes to receive.\n<p><em>flags</em> should be a …\n",null,0],["recvfrom_nonblock","Socket","Ruby/classes/Socket.html#method-i-recvfrom_nonblock","(*args)","<p>Receives up to <em>maxlen</em> bytes from <code>socket</code> using\nrecvfrom(2) after O_NONBLOCK is set for the underlying …\n",null,0],["recvfrom_nonblock","UDPSocket","Ruby/classes/UDPSocket.html#method-i-recvfrom_nonblock","(*args)","<p>Receives up to <em>maxlen</em> bytes from <code>udpsocket</code> using\nrecvfrom(2) after O_NONBLOCK is set for the underlying …\n",null,0],["recvmsg","BasicSocket","Ruby/classes/BasicSocket.html#method-i-recvmsg","(*args)","<p>recvmsg receives a message using recvmsg(2) system call in blocking manner.\n<p><em>maxmesglen</em> is the maximum …\n",null,0],["recvmsg_nonblock","BasicSocket","Ruby/classes/BasicSocket.html#method-i-recvmsg_nonblock","(*args)","<p>recvmsg receives a message using recvmsg(2) system call in non-blocking\nmanner.\n<p>It is similar to BasicSocket#recvmsg …\n",null,0],["redefine_method","Module","Rails/classes/Module.html#method-i-redefine_method","(method, &block)","",null,1],["redirect","ActionDispatch::Routing::Redirection","Rails/classes/ActionDispatch/Routing/Redirection.html#method-i-redirect","(*args, &block)","<p>Redirect any path to another path:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">get</span> <span class=\"ruby-string\">&quot;/stories&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">redirect</span>(<span class=\"ruby-string\">&quot;/posts&quot;</span>)\n</pre>\n<p>You can also use interpolation …\n",null,1],["redirect?","WEBrick::HTTPStatus","Ruby/classes/WEBrick/HTTPStatus.html#method-c-redirect-3F","(code)","<p>Is <code>code</code> a redirection status?\n",null,0],["redirect_to","ActionController::Flash","Rails/classes/ActionController/Flash.html#method-i-redirect_to","(options = {}, response_status_and_flash = {})","",null,1],["redirect_to","ActionController::Instrumentation","Rails/classes/ActionController/Instrumentation.html#method-i-redirect_to","(*args)","",null,1],["redirect_to","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-redirect_to","(event)","",null,1],["redirect_to","ActionController::Redirecting","Rails/classes/ActionController/Redirecting.html#method-i-redirect_to","(options = {}, response_status = {})","<p>Redirects the browser to the target specified in <code>options</code>. This\nparameter can take one of three forms: …\n",null,1],["redirect_url","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-redirect_url","()","",null,1],["redirector","Gem::Ext::Builder","Ruby/classes/Gem/Ext/Builder.html#method-c-redirector","()","",null,0],["redisplay","Readline","Ruby/classes/Readline.html#method-c-redisplay","()","<p>Change what&#39;s displayed on the screen to reflect the current contents.\n<p>See GNU Readline&#39;s rl_redisplay …\n",null,0],["reduce","Enumerable","Ruby/classes/Enumerable.html#method-i-reduce","(p1 = v1, p2 = v2)","<p>Combines all elements of <em>enum</em> by applying a binary operation,\nspecified by a block or a symbol that names …\n",null,0],["reenable","Rake::Task","Ruby/classes/Rake/Task.html#method-i-reenable","()","<p>Reenable the task, allowing its tasks to be executed if the task is invoked\nagain.\n",null,0],["ref","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-ref","()","<p>Returns a DL::CPtr that is a reference pointer for this DL::CPtr. Analogous\nto the ampersand operator …\n",null,0],["ref","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-ref","()","<p>Returns a new Fiddle::Pointer instance that is a reference pointer for this\npointer.\n<p>Analogous to the …\n",null,0],["ref","ActionView::Template::Types::Type","Rails/classes/ActionView/Template/Types/Type.html#method-i-ref","()","",null,1],["ref","Mime::NullType","Rails/classes/Mime/NullType.html#method-i-ref","()","",null,1],["ref","Mime::Type","Rails/classes/Mime/Type.html#method-i-ref","()","",null,1],["reference","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-reference","(label, link)","<p>Stores <code>label</code> as a reference to <code>link</code> and fills in\npreviously unknown\nlink references.\n",null,0],["references","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-references","(*args)","<p>Adds a reference. Optionally adds a <code>type</code> column, if\n<code>:polymorphic</code> option is provided. <code>references</code> and \n…\n",null,1],["references","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-references","(*args)","",null,1],["references","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-references","(*args)","<p>Used to indicate that an association is referenced by an SQL string, and\nshould therefore be JOINed in …\n",null,1],["refinements","","Ruby/files/ruby/doc/syntax/refinements_rdoc.html","","<p>Refinements\n<p>Due to Ruby&#39;s open classes you can redefine or add functionality to\nexisting classes. …\n",null,0],["reflect_on_aggregation","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_aggregation","(aggregation)","<p>Returns the AggregateReflection object for the named\n<code>aggregation</code> (use the symbol).\n\n<pre>Account.reflect_on_aggregation(:balance) ...</pre>\n",null,1],["reflect_on_all_aggregations","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_aggregations","()","<p>Returns an array of AggregateReflection objects for all the aggregations in\nthe class.\n",null,1],["reflect_on_all_associations","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_associations","(macro = nil)","<p>Returns an array of AssociationReflection objects for all the associations\nin the class. If you only …\n",null,1],["reflect_on_all_autosave_associations","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_autosave_associations","()","<p>Returns an array of AssociationReflection objects for all associations\nwhich have <code>:autosave</code> enabled. …\n",null,1],["reflect_on_association","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_association","(association)","<p>Returns the AssociationReflection object for the <code>association</code>\n(use the symbol).\n\n<pre>Account.reflect_on_association(:owner) ...</pre>\n",null,1],["refresh","Curses","Ruby/classes/Curses.html#method-c-refresh","()","<p>Refreshes the windows and lines.\n",null,0],["refresh","Curses::Pad","Ruby/classes/Curses/Pad.html#method-i-refresh","(p1, p2, p3, p4, p5, p6)","<p>Refreshes the pad.  <code>pad_minrow</code> and pad_mincol+ define the\nupper-left corner of the rectangle to be displayed. …\n",null,0],["refresh","Curses::Window","Ruby/classes/Curses/Window.html#method-i-refresh","()","<p>Refreshes the windows and lines.\n",null,0],["refresh","Gem","Ruby/classes/Gem.html#method-c-refresh","()","<p>Refresh available gems from disk.\n",null,0],["refresh","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-refresh","(view)","<p>Receives a view object and return a template similar to self by using\n@virtual_path.\n<p>This method is useful …\n",null,1],["refresh_line","Readline","Ruby/classes/Readline.html#method-c-refresh_line","()","<p>Clear the current input line.\n<p>Raises SecurityError exception if $SAFE is 4.\n",null,0],["regexp","MatchData","Ruby/classes/MatchData.html#method-i-regexp","()","<p>Returns the regexp.\n\n<pre><code>m = /a.*b/.match(&quot;abc&quot;)\nm.regexp #=&gt; /a.*b/\n</code></pre>\n",null,0],["regexp","OptionParser::Completion","Ruby/classes/OptionParser/Completion.html#method-c-regexp","(key, icase)","",null,0],["regexp","URI","Ruby/classes/URI.html#method-c-regexp","(schemes = nil)","<p>Synopsis\n\n<pre><code>URI::regexp([match_schemes])</code></pre>\n<p>Args\n",null,0],["regexp","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-regexp","()","",null,1],["regist","DRb::ExtServManager","Ruby/classes/DRb/ExtServManager.html#method-i-regist","(name, ro)","",null,0],["regist_server","DRb","Ruby/classes/DRb.html#method-c-regist_server","(server)","<p>Registers <code>server</code> with DRb.\n<p>This is called when a new DRb::DRbServer is created.\n<p>If there is no primary …\n",null,0],["register","Gem::NoAliasYAMLTree","Ruby/classes/Gem/NoAliasYAMLTree.html#method-i-register","(target, obj)","<p>Noop this out so there are no anchors\n",null,0],["register","OpenSSL::ASN1::ObjectId","Ruby/classes/OpenSSL/ASN1/ObjectId.html#method-c-register","(p1, p2, p3)","",null,0],["register","RDoc::Markup::PreProcess","Ruby/classes/RDoc/Markup/PreProcess.html#method-c-register","(directive, &block)","<p>Registers <code>directive</code> as one handled by RDoc.  If a block is\ngiven the directive will be replaced by the …\n",null,0],["register","WEBrick::Utils::TimeoutHandler","Ruby/classes/WEBrick/Utils/TimeoutHandler.html#method-c-register","(seconds, exception)","<p>Registers a new timeout handler\n<p><code>time</code> &mdash; Timeout in seconds\n<p><code>exception</code> &mdash; Exception to raise when timeout elapsed …\n",null,0],["register","WEBrick::Utils::TimeoutHandler","Ruby/classes/WEBrick/Utils/TimeoutHandler.html#method-i-register","(thread, time, exception)","<p>Registers a new timeout handler\n<p><code>time</code> &mdash; Timeout in seconds\n<p><code>exception</code> &mdash; Exception to raise when timeout elapsed …\n",null,0],["register","ActionView::Template::Types::Type","Rails/classes/ActionView/Template/Types/Type.html#method-c-register","(*t)","",null,1],["register","Mime::Type","Rails/classes/Mime/Type.html#method-c-register","(string, symbol, mime_type_synonyms = [], extension_synonyms = [], skip_lookup = false)","",null,1],["register_alias","Mime::Type","Rails/classes/Mime/Type.html#method-c-register_alias","(string, symbol, extension_synonyms = [])","<p>Registers an alias that&#39;s not used on mime type lookup, but can be\nreferenced directly. Especially …\n",null,1],["register_callback","Mime::Type","Rails/classes/Mime/Type.html#method-c-register_callback","(&block)","",null,1],["register_command","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-i-register_command","(command, obj=false)","<p>Register the Symbol <code>command</code> as a gem command.\n",null,0],["register_default_spec","Gem","Ruby/classes/Gem.html#method-i-register_default_spec","(spec)","<p>Register a Gem::Specification for default gem\n",null,0],["register_interceptor","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-register_interceptor","(interceptor)","<p>Register an Interceptor which will be called before mail is sent. Either a\nclass or a string can be passed …\n",null,1],["register_interceptors","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-register_interceptors","(*interceptors)","<p>Register one or more Interceptors which will be called before mail is sent.\n",null,1],["register_observer","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-register_observer","(observer)","<p>Register an Observer which will be notified when mail is delivered. Either\na class or a string can be …\n",null,1],["register_observers","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-register_observers","(*observers)","<p>Register one or more Observers which will be notified when mail is\ndelivered.\n",null,1],["register_task","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-register_task","(pattern, task)","",null,1],["register_tracker","ActionView::DependencyTracker","Rails/classes/ActionView/DependencyTracker.html#method-c-register_tracker","(extension, tracker)","",null,1],["register_type","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields.html#method-c-register_type","(type_id, type)","<p>Register an MySQL <code>type_id</code> with a typecasting object in\n<code>type</code>.\n",null,1],["register_type","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID.html#method-c-register_type","(name, type)","<p>Register an OID type named <code>name</code> with a typcasting object in\n<code>type</code>.  <code>name</code> should correspond to the `typname` …\n",null,1],["register_uri","RSS::BaseListener","Ruby/classes/RSS/BaseListener.html#method-i-register_uri","(uri, name)","<p>register uri against this name.\n",null,0],["registered","RDoc::Markup::PreProcess","Ruby/classes/RDoc/Markup/PreProcess.html#method-c-registered","()","<p>Registered directives\n",null,0],["registered_type?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID.html#method-c-registered_type-3F","(name)","<p>Is <code>name</code> a registered type?\n",null,1],["registry=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-registry-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["regular?","Matrix","Ruby/classes/Matrix.html#method-i-regular-3F","()","<p>Returns <code>true</code> if this is a regular (i.e. non-singular) matrix.\n",null,0],["regular_class_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-regular_class_path","()","",null,1],["regular_update","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_update","(other_hash)","",null,1],["regular_update","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_update","(other_hash)","",null,1],["regular_writer","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_writer","(key, value)","",null,1],["regular_writer","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_writer","(key, value)","",null,1],["rehash","ENV","Ruby/classes/ENV.html#method-c-rehash","()","<p>Re-hashing the environment variables does nothing.  It is provided for\ncompatibility with Hash.\n",null,0],["rehash","Hash","Ruby/classes/Hash.html#method-i-rehash","()","<p>Rebuilds the hash based on the current hash values for each key. If values\nof key objects have changed …\n",null,0],["rehash","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-rehash","()","<p>Clears the command hash table.\n",null,0],["reject","Array","Ruby/classes/Array.html#method-i-reject","()","<p>Returns a new array containing the items in <code>self</code> for which the\ngiven block is not <code>true</code>.\n<p>See also Array#delete_if …\n",null,0],["reject","DBM","Ruby/classes/DBM.html#method-i-reject","()","<p>Converts the contents of the database to an in-memory Hash, then calls\nHash#reject with the specified …\n",null,0],["reject","ENV","Ruby/classes/ENV.html#method-c-reject","()","<p>Same as ENV#delete_if, but works on (and returns) a copy of the\nenvironment.\n",null,0],["reject","Enumerable","Ruby/classes/Enumerable.html#method-i-reject","()","<p>Returns an array for all elements of <code>enum</code> for which the given\n<code>block</code> returns false.\n<p>If no block is given, …\n",null,0],["reject","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-reject","()","",null,0],["reject","GDBM","Ruby/classes/GDBM.html#method-i-reject","()","<p>Returns a hash copy of <em>gdbm</em> where all key-value pairs from\n<em>gdbm</em> for which <em>block</em> evaluates to true are …\n",null,0],["reject","Hash","Ruby/classes/Hash.html#method-i-reject","()","<p>Same as <code>Hash#delete_if</code>, but works on (and returns) a copy of\nthe <em>hsh</em>. Equivalent to <code><em>hsh</em>.dup.delete_if</code> …\n",null,0],["reject","OptionParser","Ruby/classes/OptionParser.html#method-c-reject","(*args, &blk)","<p>See #reject.\n",null,0],["reject","OptionParser","Ruby/classes/OptionParser.html#method-i-reject","(*args, &blk)","<p>Directs to reject specified class argument.\n<p><code>t</code> &mdash; Argument class specifier, any object including Class.\n\n\n<pre><code>reject(t)</code></pre>\n",null,0],["reject","OptionParser::List","Ruby/classes/OptionParser/List.html#method-i-reject","(t)","<p>See OptionParser.reject.\n",null,0],["reject","SDBM","Ruby/classes/SDBM.html#method-i-reject","()","<p>Creates a new Hash using the key-value pairs from the database, then calls\nHash#reject with the given …\n",null,0],["reject","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-reject","()","<p>Converts the contents of the database to an in-memory Hash, then calls\nHash#reject with the specified …\n",null,0],["reject!","Array","Ruby/classes/Array.html#method-i-reject-21","()","<p>Equivalent to Array#delete_if, deleting elements from <code>self</code> for\nwhich the block evaluates to <code>true</code>, but …\n",null,0],["reject!","DBM","Ruby/classes/DBM.html#method-i-reject-21","()","<p>Deletes all entries for which the code block returns true. Returns self.\n",null,0],["reject!","ENV","Ruby/classes/ENV.html#method-c-reject-21","()","<p>Equivalent to ENV#delete_if but returns <code>nil</code> if no changes were\nmade.\n<p>Returns an Enumerator if no block …\n",null,0],["reject!","GDBM","Ruby/classes/GDBM.html#method-i-reject-21","()","<p>Deletes every key-value pair from <em>gdbm</em> for which <em>block</em>\nevaluates to true.\n",null,0],["reject!","Hash","Ruby/classes/Hash.html#method-i-reject-21","()","<p>Equivalent to <code>Hash#delete_if</code>, but returns <code>nil</code> if\nno changes were made.\n",null,0],["reject!","SDBM","Ruby/classes/SDBM.html#method-i-reject-21","()","<p>Iterates over the key-value pairs in the database, deleting those for which\nthe block returns <code>true</code>.\n",null,0],["reject!","Set","Ruby/classes/Set.html#method-i-reject-21","(&block)","<p>Equivalent to Set#delete_if, but returns nil if no changes were made.\n",null,0],["relative?","Pathname","Ruby/classes/Pathname.html#method-i-relative-3F","()","<p>The opposite of Pathname#absolute?\n<p>It returns <code>false</code> if the pathname begins with a slash.\n\n<pre><code>p = Pathname.new(&#39;/im/sure&#39;) ...</code></pre>\n",null,0],["relative?","URI::Generic","Ruby/classes/URI/Generic.html#method-i-relative-3F","()","<p>Checks if URI is relative\n",null,0],["relative_path_from","Pathname","Ruby/classes/Pathname.html#method-i-relative_path_from","(base_directory)","<p>Returns a relative path from the given <code>base_directory</code> to the\nreceiver.\n<p>If <code>self</code> is absolute, then <code>base_directory</code> …\n",null,0],["release","Gem::Version","Ruby/classes/Gem/Version.html#method-i-release","()","<p>The release for this version (e.g. 1.2.0.a -&gt; 1.2.0). Non-prerelease\nversions return themselves.\n",null,0],["release","OptionParser","Ruby/classes/OptionParser.html#method-i-release","()","<p>Release code\n",null,0],["release","ActiveSupport::Concurrency::Latch","Rails/classes/ActiveSupport/Concurrency/Latch.html#method-i-release","()","",null,1],["release_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-release_connection","(with_id = current_connection_id)","<p>Signal that the thread is finished with the current connection.\n#release_connection releases the connection-thread …\n",null,1],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-release_savepoint","()","",null,1],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-release_savepoint","()","",null,1],["release_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-release_savepoint","()","",null,1],["release_savepoint","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-release_savepoint","()","",null,1],["reload","DRb::DRbUnknown","Ruby/classes/DRb/DRbUnknown.html#method-i-reload","()","<p>Attempt to load the wrapped marshalled object again.\n<p>If the class of the object is now known locally, …\n",null,0],["reload","WEBrick::HTTPAuth::Htdigest","Ruby/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-reload","()","<p>Reloads passwords from the database\n",null,0],["reload","WEBrick::HTTPAuth::Htgroup","Ruby/classes/WEBrick/HTTPAuth/Htgroup.html#method-i-reload","()","<p>Reload groups from the database\n",null,0],["reload","WEBrick::HTTPAuth::Htpasswd","Ruby/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-reload","()","<p>Reload passwords from the database\n",null,0],["reload","ActiveRecord::AutosaveAssociation","Rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-reload","(options = nil)","<p>Reloads the attributes of the object as usual and clears\n<code>marked_for_destruction</code> flag.\n",null,1],["reload","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-reload","(options = nil)","<p>Reloads the record from the database.\n<p>This method finds record by its primary key (which could be assigned …\n",null,1],["reload","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-reload","()","<p>Forces reloading of relation.\n",null,1],["reload!","Rails::Application::RoutesReloader","Rails/classes/Rails/Application/RoutesReloader.html#method-i-reload-21","()","",null,1],["reload!","Rails::ConsoleMethods","Rails/classes/Rails/ConsoleMethods.html#method-i-reload-21","(print=true)","<p>reloads the environment\n",null,1],["reload_routes!","Rails::Application","Rails/classes/Rails/Application.html#method-i-reload_routes-21","()","<p>Reload application routes regardless if they changed or not.\n",null,1],["remainder","BigDecimal","Ruby/classes/BigDecimal.html#method-i-remainder","(p1)","<p>Returns the remainder from dividing by the value.\n<p>x.remainder(y) means x-y*(x/y).truncate\n",null,0],["remainder","Bignum","Ruby/classes/Bignum.html#method-i-remainder","(p1)","<p>Returns the remainder after dividing <em>big</em> by <em>numeric</em>.\n\n<pre><code>-1234567890987654321.remainder(13731)      #=&gt; -6966 ...\n</code></pre>\n",null,0],["remainder","Numeric","Ruby/classes/Numeric.html#method-i-remainder","(p1)","\n<pre><code>x.remainder(y) means x-y*(x/y).truncate</code></pre>\n<p>See <code>Numeric#divmod</code>.\n",null,0],["remote?","Gem::LocalRemoteOptions","Ruby/classes/Gem/LocalRemoteOptions.html#method-i-remote-3F","()","<p>Is remote fetching enabled?\n",null,0],["remote_address","BasicSocket","Ruby/classes/BasicSocket.html#method-i-remote_address","()","<p>Returns an Addrinfo object for remote address obtained by getpeername.\n<p>Note that addrinfo.protocol is …\n",null,0],["remote_ip","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-remote_ip","()","<p>The client&#39;s IP address\n",null,0],["remote_ip","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-remote_ip","()","<p>Originating IP address, usually set by the RemoteIp middleware.\n",null,1],["remove","FileUtils","Ruby/classes/FileUtils.html#method-c-remove","(list, options = {})","",null,0],["remove","Gem::Uninstaller","Ruby/classes/Gem/Uninstaller.html#method-i-remove","(spec)","<p>spec &mdash; the spec of the gem to be uninstalled\n<p>list &mdash; the list of all such gems\n\n<p>Warning: this method modifies …\n",null,0],["remove","OptionParser","Ruby/classes/OptionParser.html#method-i-remove","()","<p>Removes the last List.\n",null,0],["remove","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-remove","()","<p>Removes generated RDoc and ri data\n",null,0],["remove","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-remove","()","<p>Removes generated RDoc and ri data\n",null,0],["remove","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-remove","()","<p>Removes this Attribute from the tree, and returns true if successfull\n<p>This method is usually not called …\n",null,0],["remove","REXML::Child","Ruby/classes/REXML/Child.html#method-i-remove","()","<p>Removes this child from the parent.\n<p>Returns &mdash; self\n\n",null,0],["remove","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-remove","(conn)","<p>Remove a connection from the connection pool.  The connection will remain\nopen and active but will no …\n",null,1],["remove","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove","(*column_names)","<p>Removes the column(s) from the table definition.\n\n<pre>t.remove(:qualification)\nt.remove(:qualification, :experience)</pre>\n",null,1],["removeChild","NQXML::Node","Ruby/classes/NQXML/Node.html#method-i-removeChild","(node)","",null,0],["remove_all","Gem::Uninstaller","Ruby/classes/Gem/Uninstaller.html#method-i-remove_all","(list)","<p>Removes all gems in <code>list</code>.\n<p>NOTE: removes uninstalled gems from <code>list</code>.\n",null,0],["remove_belongs_to","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_belongs_to","(table_name, ref_name, options = {})","",null,1],["remove_belongs_to","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_belongs_to","(*args)","",null,1],["remove_by_name","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-remove_by_name","(full_name)","<p>Removes the gemspec matching <code>full_name</code> from the dependency\nlist\n",null,0],["remove_callback","DL","Ruby/classes/DL.html#method-i-remove_callback","(addr, ctype = nil)","",null,0],["remove_callback_internal","DL","Ruby/classes/DL.html#method-i-remove_callback_internal","(proc_entry, addr_entry, addr, ctype = nil)","",null,0],["remove_cdecl_callback","DL","Ruby/classes/DL.html#method-i-remove_cdecl_callback","(addr, ctype = nil)","",null,0],["remove_class_variable","Module","Ruby/classes/Module.html#method-i-remove_class_variable","(p1)","<p>Removes the definition of the <em>sym</em>, returning that constant&#39;s\nvalue.\n\n<pre><code>class Dummy\n  @@var = 99\n  puts ...\n</code></pre>\n",null,0],["remove_coding_comment","RDoc::Parser::Simple","Ruby/classes/RDoc/Parser/Simple.html#method-i-remove_coding_comment","(text)","<p>Removes the encoding magic comment from <code>text</code>\n",null,0],["remove_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_column","(table_name, column_name, type = nil, options = {})","<p>Removes the column from the table definition.\n\n<pre>remove_column(:suppliers, :qualification)</pre>\n<p>The <code>type</code> and <code>options</code> …\n",null,1],["remove_column","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-remove_column","(name)","",null,1],["remove_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-remove_column_sql","(table_name, column_name, type = nil, options = {})","",null,1],["remove_columns","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_columns","(table_name, *column_names)","<p>Removes the given columns from the table definition.\n\n<pre>remove_columns(:suppliers, :qualification, :experience)</pre>\n",null,1],["remove_columns_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-remove_columns_sql","(table_name, *column_names)","",null,1],["remove_comment","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-remove_comment","(comment)","<p>Removes a comment from this section if it is from the same file as\n<code>comment</code>\n",null,0],["remove_commented_out_lines","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-remove_commented_out_lines","()","<p>Removes lines that are commented out that might otherwise get picked up\nwhen scanning for classes and …\n",null,0],["remove_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-remove_connection","(owner)","<p>Remove the connection for this class. This will close the active connection\nand the defined connection …\n",null,1],["remove_connection","ActiveRecord::ConnectionHandling","Rails/classes/ActiveRecord/ConnectionHandling.html#method-i-remove_connection","(klass = self)","",null,1],["remove_dir","FileUtils","Ruby/classes/FileUtils.html#method-c-remove_dir","(path, force = false)","<p>Removes a directory <code>dir</code> and its contents recursively. This\nmethod ignores StandardError if <code>force</code> is true. …\n",null,0],["remove_entry","FileUtils","Ruby/classes/FileUtils.html#method-c-remove_entry","(path, force = false)","<p>This method removes a file system entry <code>path</code>.\n<code>path</code> might be a regular file, a directory, or something. …\n",null,0],["remove_entry_secure","FileUtils","Ruby/classes/FileUtils.html#method-c-remove_entry_secure","(path, force = false)","<p>This method removes a file system entry <code>path</code>. \n<code>path</code> shall be a regular file, a directory, or something. …\n",null,0],["remove_executables","Gem::Uninstaller","Ruby/classes/Gem/Uninstaller.html#method-i-remove_executables","(spec)","<p>Removes installed executables and batch files (windows only) for\n<code>gemspec</code>.\n",null,0],["remove_file","FileUtils","Ruby/classes/FileUtils.html#method-c-remove_file","(path, force = false)","<p>Removes a file <code>path</code>. This method ignores StandardError if\n<code>force</code> is true.\n",null,0],["remove_filters!","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-remove_filters-21","()","<p>Removes all filters, but leaves in silencers. Useful if you suddenly need\nto see entire filepaths in …\n",null,1],["remove_from_documentation?","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-remove_from_documentation-3F","()","<p>Should we remove this context from the documentation?\n<p>The answer is yes if:\n<p>#received_nodoc is <code>true</code>\n",null,0],["remove_handler","WEBrick::HTTPServlet::FileHandler","Ruby/classes/WEBrick/HTTPServlet/FileHandler.html#method-c-remove_handler","(suffix)","<p>Remove custom handling of requests for files with <code>suffix</code>\n",null,0],["remove_hook_for","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-remove_hook_for","(*names)","<p>Remove a previously added hook.\n\n<pre>remove_hook_for :orm</pre>\n",null,1],["remove_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_index","(table_name, options = {})","<p>Removes the given index from the table.\n<p>Removes the <code>index_accounts_on_column</code> in the\n<code>accounts</code> table.\n\n<pre>remove_index ...</pre>\n",null,1],["remove_index","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_index","(options = {})","<p>Removes the given index from the table.\n<p>Remove the index_table_name_on_column in the table_name table …\n",null,1],["remove_index_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-remove_index_sql","(table_name, options = {})","",null,1],["remove_installed!","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-remove_installed-21","(dep)","",null,0],["remove_instance_variable","Object","Ruby/classes/Object.html#method-i-remove_instance_variable","(p1)","<p>Removes the named instance variable from <em>obj</em>, returning that\nvariable&#39;s value.\n\n<pre><code>class Dummy\n  attr_reader ...\n</code></pre>\n",null,0],["remove_invisible","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-remove_invisible","(min_visibility)","<p>Removes methods and attributes with a visibility less than\n<code>min_visibility</code>.\n",null,0],["remove_nodoc","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-remove_nodoc","(all_hash)","<p>Removes from <code>all_hash</code> the contexts that are nodoc or have no\ncontent.\n<p>See RDoc::Context#remove_from_documentation? …\n",null,0],["remove_nodoc_children","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-remove_nodoc_children","()","<p>Updates the child modules or classes of class/module <code>parent</code> by\ndeleting the ones that have been removed …\n",null,0],["remove_old_bin_files","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-remove_old_bin_files","(bin_dir)","",null,0],["remove_old_lib_files","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-remove_old_lib_files","(lib_dir)","",null,0],["remove_option","Gem::Command","Ruby/classes/Gem/Command.html#method-i-remove_option","(name)","<p>Remove previously defined command-line argument <code>name</code>.\n",null,0],["remove_owners","Gem::Commands::OwnerCommand","Ruby/classes/Gem/Commands/OwnerCommand.html#method-i-remove_owners","(name, owners)","",null,0],["remove_possible_method","Module","Rails/classes/Module.html#method-i-remove_possible_method","(method)","",null,1],["remove_private","RDoc::Comment","Ruby/classes/RDoc/Comment.html#method-i-remove_private","()","<p>Removes private sections from this comment.  Private sections are flush to\nthe comment marker and start …\n",null,0],["remove_private_comment","RDoc::Parser::Simple","Ruby/classes/RDoc/Parser/Simple.html#method-i-remove_private_comment","(comment)","<p>Removes private comments.\n<p>Unlike RDoc::Comment#remove_private this implementation only looks for two\ndashes …\n",null,0],["remove_private_comments","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-remove_private_comments","(comment)","<p>Removes private comments from <code>comment</code>\n",null,0],["remove_reference","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_reference","(table_name, ref_name, options = {})","<p>Removes the reference(s). Also removes a <code>type</code> column if one\nexists. <code>remove_reference</code>, <code>remove_references</code> …\n",null,1],["remove_references","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_references","(*args)","<p>Removes a reference. Optionally removes a <code>type</code> column.\n<code>remove_references</code> and <code>remove_belongs_to</code> are\nacceptable. …\n",null,1],["remove_response_handler","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-remove_response_handler","(handler)","<p>Removes the response handler.\n",null,0],["remove_server","DRb","Ruby/classes/DRb.html#method-c-remove_server","(server)","<p>Removes <code>server</code> from the list of registered servers.\n",null,0],["remove_siginfo_handler","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-remove_siginfo_handler","()","<p>Removes a siginfo handler and replaces the previous\n",null,0],["remove_silencers!","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-remove_silencers-21","()","<p>Will remove all silencers, but leave in the filters. This is useful if your\ncontext of debugging suddenly …\n",null,1],["remove_spec","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-remove_spec","(spec)","<p>Removes <code>spec</code> from the known specs.\n",null,0],["remove_specs_unsatisfied_by","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-remove_specs_unsatisfied_by","(dependencies)","<p>Remove everything in the DependencyList that matches but doesn&#39;t\nsatisfy items in <code>dependencies</code> (a …\n",null,0],["remove_stdcall_callback","DL","Ruby/classes/DL.html#method-i-remove_stdcall_callback","(addr, ctype = nil)","",null,0],["remove_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_timestamps","(table_name)","<p>Removes the timestamp columns (<code>created_at</code> and\n<code>updated_at</code>) from the table definition.\n\n<pre>remove_timestamps(:suppliers)</pre>\n",null,1],["remove_timestamps","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_timestamps","()","<p>Removes the timestamp columns (<code>created_at</code> and\n<code>updated_at</code>) from the table.\n\n<pre>t.remove_timestamps</pre>\n",null,1],["remove_timestamps_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-remove_timestamps_sql","(table_name)","",null,1],["remove_token_listener","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-remove_token_listener","(obj)","<p>Removes the token listener <code>obj</code>\n",null,0],["remove_tracker","ActionView::DependencyTracker","Rails/classes/ActionView/DependencyTracker.html#method-c-remove_tracker","(handler)","",null,1],["remove_unparseable","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-remove_unparseable","(files)","<p>Removes file extensions known to be unparseable from <code>files</code> and\nTAGS files for emacs and vim.\n",null,0],["remove_unresolved_default_spec","Gem","Ruby/classes/Gem.html#method-i-remove_unresolved_default_spec","(spec)","<p>Remove needless Gem::Specification of default gem from unresolved default\ngem list\n",null,0],["rename","File","Ruby/classes/File.html#method-c-rename","(p1, p2)","<p>Renames the given file to the new name. Raises a\n<code>SystemCallError</code> if the file cannot be renamed.\n\n<pre><code>File.rename(&quot;afile&quot;, ...</code></pre>\n",null,0],["rename","Net::FTP","Ruby/classes/Net/FTP.html#method-i-rename","(fromname, toname)","<p>Renames a file on the server.\n",null,0],["rename","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-rename","(mailbox, newname)","<p>Sends a RENAME command to change the name of the <code>mailbox</code> to\n<code>newname</code>.\n<p>A Net::IMAP::NoResponseError is raised …\n",null,0],["rename","Pathname","Ruby/classes/Pathname.html#method-i-rename","(p1)","<p>Rename the file.\n<p>See File.rename.\n",null,0],["rename","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-rename","(column_name, new_column_name)","<p>Renames a column.\n\n<pre>t.rename(:description, :name)</pre>\n",null,1],["rename_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-rename_column","(table_name, column_name, new_column_name)","<p>Renames a column in a table.\n",null,1],["rename_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_column","(table_name, column_name, new_column_name)","<p>Renames a column.\n\n<pre>rename_column(:suppliers, :description, :name)</pre>\n",null,1],["rename_column_indexes","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_column_indexes","(table_name, column_name, new_column_name)","",null,1],["rename_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rename_column_sql","(table_name, column_name, new_column_name)","",null,1],["rename_index","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-rename_index","(table_name, old_name, new_name)","",null,1],["rename_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_index","(table_name, old_name, new_name)","<p>Renames an index.\n<p>Rename the <code>index_people_on_last_name</code> index to\n<code>index_users_on_last_name</code>:\n\n<pre>rename_index ...</pre>\n",null,1],["rename_index","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-rename_index","(index_name, new_index_name)","<p>Renames the given index on the table.\n\n<pre>t.rename_index(:user_id, :account_id)</pre>\n",null,1],["rename_key","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-rename_key","(key, options = {})","",null,1],["rename_table","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table.\n<p>Example:\n\n<pre>rename_table(&#39;octopuses&#39;, &#39;octopi&#39;)</pre>\n",null,1],["rename_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table. Also renames a table&#39;s primary key sequence if the\nsequence name matches the Active …\n",null,1],["rename_table","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table.\n<p>Example:\n\n<pre>rename_table(&#39;octopuses&#39;, &#39;octopi&#39;)</pre>\n",null,1],["rename_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table.\n\n<pre>rename_table(&#39;octopuses&#39;, &#39;octopi&#39;)</pre>\n",null,1],["rename_table_indexes","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_table_indexes","(table_name, new_name)","",null,1],["render","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-render","(file_name)","<p>Renders the ERb contained in <code>file_name</code> relative to the\ntemplate directory and returns the result based …\n",null,0],["render","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-render","(*args, &block)","<p>Normalize arguments, options and then delegates render_to_body and sticks\nthe result in self.response_body. …\n",null,1],["render","ActionController::Instrumentation","Rails/classes/ActionController/Instrumentation.html#method-i-render","(*args)","",null,1],["render","ActionView::Helpers::RenderingHelper","Rails/classes/ActionView/Helpers/RenderingHelper.html#method-i-render","(options = {}, locals = {}, &block)","<p>Returns the result of a render that&#39;s dictated by the options hash. The\nprimary options are:\n<p><code>:partial</code> …\n",null,1],["render","ActionView::PartialRenderer","Rails/classes/ActionView/PartialRenderer.html#method-i-render","(context, options, block)","",null,1],["render","ActionView::Renderer","Rails/classes/ActionView/Renderer.html#method-i-render","(context, options)","<p>Main render entry point shared by AV and AC.\n",null,1],["render","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-render","(view, locals, buffer=nil, &block)","<p>Render a template. If the template was not compiled yet, it is done exactly\nbefore rendering.\n<p>This method …\n",null,1],["render_bind","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-i-render_bind","(column, value)","",null,1],["render_body","ActionView::Renderer","Rails/classes/ActionView/Renderer.html#method-i-render_body","(context, options)","<p>Render but returns a valid Rack body. If fibers are defined, we return a\nstreaming body that renders …\n",null,1],["render_collection","ActionView::LogSubscriber","Rails/classes/ActionView/LogSubscriber.html#method-i-render_collection","(event)","",null,1],["render_collection","ActionView::PartialRenderer","Rails/classes/ActionView/PartialRenderer.html#method-i-render_collection","()","",null,1],["render_partial","ActionView::LogSubscriber","Rails/classes/ActionView/LogSubscriber.html#method-i-render_partial","(event)","",null,1],["render_partial","ActionView::PartialRenderer","Rails/classes/ActionView/PartialRenderer.html#method-i-render_partial","()","",null,1],["render_template","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-render_template","(template_file, out_file = nil)","<p>Load and render the erb template in the given <code>template_file</code>\nand write it out to <code>out_file</code>.\n<p>Both <code>template_file</code> …\n",null,0],["render_template","ActionView::LogSubscriber","Rails/classes/ActionView/LogSubscriber.html#method-i-render_template","(event)","",null,1],["render_to_body","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-render_to_body","(options = {})","<p>Raw rendering of a template. :api: plugin\n",null,1],["render_to_body","ActionController::Renderers","Rails/classes/ActionController/Renderers.html#method-i-render_to_body","(options)","",null,1],["render_to_body","ActionController::Rendering","Rails/classes/ActionController/Rendering.html#method-i-render_to_body","(*)","",null,1],["render_to_string","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-render_to_string","(*args, &block)","<p>Raw rendering of a template to a string.\n<p>It is similar to render, except that it does not set the response_body …\n",null,1],["render_to_string","ActionController::Rendering","Rails/classes/ActionController/Rendering.html#method-i-render_to_string","(*)","<p>Overwrite render_to_string because body can now be set to a rack body.\n",null,1],["renew","Rinda::SimpleRenewer","Ruby/classes/Rinda/SimpleRenewer.html#method-i-renew","()","<p>Called by the TupleSpace to check if the object is still alive.\n",null,0],["renew","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-renew","(sec_or_renewer)","<p>Reset the expiry time according to <code>sec_or_renewer</code>.\n<p><code>nil</code> &mdash; it is set to expire in the far future.\n<p><code>false</code> &mdash; it …\n",null,0],["reopen","IO","Ruby/classes/IO.html#method-i-reopen","(p1, p2 = v2, p3 = {})","<p>Reassociates <em>ios</em> with the I/O stream given in <em>other_IO</em> or\nto a new stream opened on <em>path</em>. This may dynamically …\n",null,0],["reopen","StringIO","Ruby/classes/StringIO.html#method-i-reopen","(*args)","<p>Reinitializes <strong>strio</strong> with the given <em>other_StrIO</em> or\n<em>string</em> and <em>mode</em> (see StringIO#new).\n",null,0],["reopen","Syslog","Ruby/classes/Syslog.html#method-c-reopen","(*args)","<p>Closes and then reopens the syslog.\n<p>Arguments are the same as for open().\n",null,0],["reorder","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-reorder","(*args)","<p>Replaces any existing order defined on the relation with the specified\norder.\n\n<pre>User.order(&#39;email DESC&#39;).reorder(&#39;id ...</pre>\n",null,1],["reorder_characters","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-reorder_characters","(codepoints)","<p>Re-order codepoints so the string becomes canonical.\n",null,1],["reorganize","GDBM","Ruby/classes/GDBM.html#method-i-reorganize","()","<p>Reorganizes the database file. This operation removes reserved space of\nelements that have already been …\n",null,0],["repair_command","Rake::AltSystem","Ruby/classes/Rake/AltSystem.html#method-i-repair_command","(cmd)","",null,0],["repeated_combination","Array","Ruby/classes/Array.html#method-i-repeated_combination","(p1)","<p>When invoked with a block, yields all repeated combinations of length\n<code>n</code> of elements from the array and …\n",null,0],["repeated_permutation","Array","Ruby/classes/Array.html#method-i-repeated_permutation","(p1)","<p>When invoked with a block, yield all repeated permutations of length\n<code>n</code> of the elements of the array, …\n",null,0],["replace","Array","Ruby/classes/Array.html#method-i-replace","(p1)","<p>Replaces the contents of <code>self</code> with the contents of\n<code>other_ary</code>, truncating or expanding if necessary.\n\n<pre><code>a ...</code></pre>\n",null,0],["replace","DBM","Ruby/classes/DBM.html#method-i-replace","(p1)","<p>Replaces the contents of the database with the contents of the specified\nobject. Takes any object which …\n",null,0],["replace","ENV","Ruby/classes/ENV.html#method-c-replace","(p1)","<p>Replaces the contents of the environment variables with the contents of\n<code>hash</code>.\n",null,0],["replace","GDBM","Ruby/classes/GDBM.html#method-i-replace","(p1)","<p>Replaces the content of <em>gdbm</em> with the key-value pairs of\n<em>other</em>. <em>other</em> must have an each_pair method. …\n",null,0],["replace","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-replace","(other)","",null,0],["replace","Hash","Ruby/classes/Hash.html#method-i-replace","(p1)","<p>Replaces the contents of <em>hsh</em> with the contents of\n<em>other_hash</em>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200 }\nh.replace({ ...\n</code></pre>\n",null,0],["replace","SDBM","Ruby/classes/SDBM.html#method-i-replace","(p1)","<p>Empties the database, then inserts the given key-value pairs.\n<p>This method will work with any object which …\n",null,0],["replace","Set","Ruby/classes/Set.html#method-i-replace","(enum)","<p>Replaces the contents of the set with the contents of the given enumerable\nobject and returns self.\n",null,0],["replace","String","Ruby/classes/String.html#method-i-replace","(p1)","<p>Replaces the contents and taintedness of <em>str</em> with the\ncorresponding values in <em>other_str</em>.\n\n<pre><code>s = &quot;hello&quot;  ...</code></pre>\n",null,0],["replace","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-replace","( hsh )","<p>Replaces the contents of the database with the contents of the specified\nobject. Takes any object which …\n",null,0],["replace","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-replace","(other_array)","<p>Replaces this collection with <code>other_array</code>. This will perform a\ndiff and delete/add only records that …\n",null,1],["replace","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-replace","(other_hash)","<p>Replaces the contents of this hash with other_hash.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">replace</span>({ <span class=\"ruby-string\">&quot;c&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["replace","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-replace","(other_hash)","<p>Replaces the contents of this hash with other_hash.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">replace</span>({ <span class=\"ruby-string\">&quot;c&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["replace_child","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-replace_child","( to_replace, replacement )","<p>Replaces one child with another, making sure the nodelist is correct @param\nto_replace the child to replace …\n",null,0],["replace_with","REXML::Child","Ruby/classes/REXML/Child.html#method-i-replace_with","( child )","<p>Replaces this object with another object.  Basically, calls\nParent.replace_child\n<p>Returns &mdash; self\n\n",null,0],["replacement","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-replacement","()","<p>Returns the replacement string.\n\n<pre><code>ec = Encoding::Converter.new(&quot;euc-jp&quot;, &quot;us-ascii&quot;)\np ec.replacement   ...</code></pre>\n",null,0],["replacement=","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-replacement-3D","(p1)","<p>Sets the replacement string.\n\n<pre><code>ec = Encoding::Converter.new(&quot;utf-8&quot;, &quot;us-ascii&quot;, :undef =&gt; :replace)\nec.replacement ...\n</code></pre>\n",null,0],["replicate","Encoding","Ruby/classes/Encoding.html#method-i-replicate","(p1)","<p>Returns a replicated encoding of <em>enc</em> whose name is <em>name</em>.\nThe new encoding should have the same byte structure …\n",null,0],["reply","Socket::UDPSource","Ruby/classes/Socket/UDPSource.html#method-i-reply","(msg)","<p>Sends the String <code>msg</code> to the source\n",null,0],["reply_service","Rinda::RingServer","Ruby/classes/Rinda/RingServer.html#method-i-reply_service","()","<p>Creates a thread that notifies waiting clients from the TupleSpace.\n",null,0],["report","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-report","(p1 = v1)","<p>Writes the GC::Profiler.result to <code>$stdout</code> or the given IO\nobject.\n",null,0],["report","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-report","()","<p>Returns a report on which items are not documented\n",null,0],["report_attributes","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-report_attributes","(cm)","<p>Returns a report on undocumented attributes in ClassModule <code>cm</code>\n",null,0],["report_class_module","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-report_class_module","(cm)","<p>Returns a report on undocumented items in ClassModule <code>cm</code>\n",null,0],["report_constants","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-report_constants","(cm)","<p>Returns a report on undocumented constants in ClassModule <code>cm</code>\n",null,0],["report_methods","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-report_methods","(cm)","<p>Returns a report on undocumented methods in ClassModule <code>cm</code>\n",null,0],["represent_map","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-represent_map","(tag, map)","<p>Emit a sequence with <code>map</code> and <code>tag</code>\n",null,0],["represent_object","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-represent_object","(tag, obj)","<p>Emit an arbitrary object <code>obj</code> and <code>tag</code>\n",null,0],["represent_scalar","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-represent_scalar","(tag, value)","<p>Emit a scalar with <code>value</code> and <code>tag</code>\n",null,0],["represent_seq","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-represent_seq","(tag, list)","<p>Emit a sequence with <code>list</code> and <code>tag</code>\n",null,0],["reqs","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-reqs","()","",null,1],["request","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-request","(uri, request_class, last_modified = nil)","<p>Performs a Net::HTTP request of type <code>request_class</code> on\n<code>uri</code> returning a Net::HTTP response object.  request …\n",null,0],["request","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-request","(req, body = nil)","<p>Sends an HTTPRequest object <code>req</code> to the HTTP server.\n<p>If <code>req</code> is a Net::HTTP::Post or Net::HTTP::Put request …\n",null,0],["request","ActionController::Base","Rails/classes/ActionController/Base.html#method-i-request","","<p>Returns an ActionDispatch::Request instance that represents the current\nrequest.\n",null,1],["request_body_permitted?","Net::HTTPGenericRequest","Ruby/classes/Net/HTTPGenericRequest.html#method-i-request_body_permitted-3F","()","",null,0],["request_get","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-request_get","(path, initheader = nil)","<p>Sends a GET request to the <code>path</code>. Returns the response as a\nNet::HTTPResponse object.\n<p>When called with …\n",null,0],["request_head","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-request_head","(path, initheader = nil, &block)","<p>Sends a HEAD request to the <code>path</code> and returns the response as a\nNet::HTTPResponse object.\n<p>Returns the response. …\n",null,0],["request_http_basic_authentication","ActionController::HttpAuthentication::Basic::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-request_http_basic_authentication","(realm = \"Application\")","",null,1],["request_http_digest_authentication","ActionController::HttpAuthentication::Digest::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-request_http_digest_authentication","(realm = \"Application\", message = nil)","<p>Render output including the HTTP Digest authentication header\n",null,1],["request_http_token_authentication","ActionController::HttpAuthentication::Token::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-request_http_token_authentication","(realm = \"Application\")","",null,1],["request_method","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-request_method","()","<p>Returns the HTTP method that the application should see. In the case where\nthe method was overridden …\n",null,1],["request_method_symbol","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-request_method_symbol","()","<p>Returns a symbol form of the #request_method\n",null,1],["request_parameters","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-request_parameters","()","",null,1],["request_post","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-request_post","(path, data, initheader = nil)","<p>Sends a POST request to the <code>path</code>.\n<p>Returns the response as a Net::HTTPResponse object.\n<p>When called with …\n",null,0],["request_uri","URI::HTTP","Ruby/classes/URI/HTTP.html#method-i-request_uri","()","<p>Description\n<p>Returns the full path for an HTTP request, as required by Net::HTTP::Get.\n<p>If the URI contains …\n",null,0],["requester","Gem::DependencyResolver::DependencyConflict","Ruby/classes/Gem/DependencyResolver/DependencyConflict.html#method-i-requester","()","<p>Return the Specification that listed the dependency\n",null,0],["requests","Gem::DependencyResolver","Ruby/classes/Gem/DependencyResolver.html#method-i-requests","(s, act)","",null,0],["require","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-require","(file, priv = nil)","",null,0],["require","ActionController::Parameters","Rails/classes/ActionController/Parameters.html#method-i-require","(key)","<p>Ensures that a parameter is present. If it&#39;s present, returns the\nparameter at the given <code>key</code>, otherwise …\n",null,1],["require_debugger","Rails::Console","Rails/classes/Rails/Console.html#method-i-require_debugger","()","",null,1],["require_engine","ActionView::Template::Handlers::Builder","Rails/classes/ActionView/Template/Handlers/Builder.html#method-i-require_engine","()","",null,1],["require_fixture_classes","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-require_fixture_classes","(fixture_set_names = nil)","",null,1],["require_path","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-require_path","()","<p>Singular accessor for #require_paths\n",null,0],["require_path=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-require_path-3D","(path)","<p>Singular accessor for #require_paths\n",null,0],["require_path_info?","XMLRPC::WEBrickServlet","Ruby/classes/XMLRPC/WEBrickServlet.html#method-i-require_path_info-3F","()","<p>Deprecated from WEBrick/1.2.2, but does not break anything.\n",null,0],["require_relative","Kernel","Ruby/classes/Kernel.html#method-i-require_relative","(p1)","<p>Ruby tries to load the library named <em>string</em> relative to the\nrequiring file&#39;s path.  If the file&#39;s …\n",null,0],["require_tzinfo","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-require_tzinfo","()","",null,1],["required","ActionController::Parameters","Rails/classes/ActionController/Parameters.html#method-i-required","(key)","<p>Alias of #require.\n",null,1],["required_attribute?","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-required_attribute-3F","(name)","<p>Is <code>name</code> a required attribute?\n",null,0],["required_attributes","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-required_attributes","()","<p>Required specification attributes\n",null,0],["required_prefix","RSS::Element","Ruby/classes/RSS/Element.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::ITunesChannelModel::ITunesCategory","Ruby/classes/RSS/ITunesChannelModel/ITunesCategory.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::ITunesChannelModel::ITunesImage","Ruby/classes/RSS/ITunesChannelModel/ITunesImage.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::ITunesChannelModel::ITunesOwner","Ruby/classes/RSS/ITunesChannelModel/ITunesOwner.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::ImageFaviconModel::ImageFavicon","Ruby/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::ImageItemModel::ImageItem","Ruby/classes/RSS/ImageItemModel/ImageItem.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::TaxonomyTopicModel::TaxonomyTopic","Ruby/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::TaxonomyTopicsModel::TaxonomyTopics","Ruby/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::TrackBackModel10::TrackBackAbout","Ruby/classes/RSS/TrackBackModel10/TrackBackAbout.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::TrackBackModel10::TrackBackPing","Ruby/classes/RSS/TrackBackModel10/TrackBackPing.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::TrackBackModel20::TrackBackAbout","Ruby/classes/RSS/TrackBackModel20/TrackBackAbout.html#method-i-required_prefix","()","",null,0],["required_prefix","RSS::TrackBackModel20::TrackBackPing","Ruby/classes/RSS/TrackBackModel20/TrackBackPing.html#method-i-required_prefix","()","",null,0],["required_ruby_version=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-required_ruby_version-3D","(req)","<p>The version of Ruby required by this gem.  The ruby version can be\nspecified to the patch-level:\n\n<pre><code>$ ruby ...</code></pre>\n",null,0],["required_rubygems_version=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-required_rubygems_version-3D","(req)","<p>The RubyGems version required by this gem\n",null,0],["required_uri","RSS::Atom::CommonModel","Ruby/classes/RSS/Atom/CommonModel.html#method-i-required_uri","()","",null,0],["required_uri","RSS::Element","Ruby/classes/RSS/Element.html#method-i-required_uri","()","",null,0],["required_uri","RSS::ITunesChannelModel::ITunesCategory","Ruby/classes/RSS/ITunesChannelModel/ITunesCategory.html#method-i-required_uri","()","",null,0],["required_uri","RSS::ITunesChannelModel::ITunesImage","Ruby/classes/RSS/ITunesChannelModel/ITunesImage.html#method-i-required_uri","()","",null,0],["required_uri","RSS::ITunesChannelModel::ITunesOwner","Ruby/classes/RSS/ITunesChannelModel/ITunesOwner.html#method-i-required_uri","()","",null,0],["required_uri","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-required_uri","()","",null,0],["required_uri","RSS::ImageFaviconModel::ImageFavicon","Ruby/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-i-required_uri","()","",null,0],["required_uri","RSS::ImageItemModel::ImageItem","Ruby/classes/RSS/ImageItemModel/ImageItem.html#method-i-required_uri","()","",null,0],["required_uri","RSS::RDF","Ruby/classes/RSS/RDF.html#method-i-required_uri","()","",null,0],["required_uri","RSS::RDF::Li","Ruby/classes/RSS/RDF/Li.html#method-i-required_uri","()","",null,0],["required_uri","RSS::RDF::Li","Ruby/classes/RSS/RDF/Li.html#method-i-required_uri","()","",null,0],["required_uri","RSS::RDF::Li","Ruby/classes/RSS/RDF/Li.html#method-i-required_uri","()","",null,0],["required_uri","RSS::RDF::Seq","Ruby/classes/RSS/RDF/Seq.html#method-i-required_uri","()","",null,0],["required_uri","RSS::RDF::Seq","Ruby/classes/RSS/RDF/Seq.html#method-i-required_uri","()","",null,0],["required_uri","RSS::TaxonomyTopicModel::TaxonomyTopic","Ruby/classes/RSS/TaxonomyTopicModel/TaxonomyTopic.html#method-i-required_uri","()","",null,0],["required_uri","RSS::TaxonomyTopicsModel::TaxonomyTopics","Ruby/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-i-required_uri","()","",null,0],["required_uri","RSS::TrackBackModel10::TrackBackAbout","Ruby/classes/RSS/TrackBackModel10/TrackBackAbout.html#method-i-required_uri","()","",null,0],["required_uri","RSS::TrackBackModel10::TrackBackPing","Ruby/classes/RSS/TrackBackModel10/TrackBackPing.html#method-i-required_uri","()","",null,0],["required_uri","RSS::TrackBackModel20::TrackBackAbout","Ruby/classes/RSS/TrackBackModel20/TrackBackAbout.html#method-i-required_uri","()","",null,0],["required_uri","RSS::TrackBackModel20::TrackBackPing","Ruby/classes/RSS/TrackBackModel20/TrackBackPing.html#method-i-required_uri","()","",null,0],["requirement","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-requirement","()","<p>What does this dependency require?\n",null,0],["requirements","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-requirements","()","<p>Lists the external (to RubyGems) requirements that must be met for this gem\nto work.  It&#39;s simply …\n",null,0],["requirements=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-requirements-3D","(req)","<p>Set requirements to <code>req</code>, ensuring it is an array. Don&#39;t\nuse this, push onto the array instead.\n",null,0],["requirements_list","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-requirements_list","()","<p>DOC: this method needs documentation or :nodoc&#39;&#39;d\n",null,0],["requires_reloading?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-requires_reloading-3F","()","<p>Returns true if its required to reload the connection between requests for\ndevelopment mode. This is …\n",null,1],["requires_reloading?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-requires_reloading-3F","()","",null,1],["rerdoc_task_description","RDoc::Task","Ruby/classes/RDoc/Task.html#method-i-rerdoc_task_description","()","<p>Task description for the rerdoc task or its renamed description\n",null,0],["rescue_from","ActiveSupport::Rescuable::ClassMethods","Rails/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from","(*klasses, &block)","<p>Rescue exceptions raised in controller actions.\n<p><code>rescue_from</code> receives a series of exception classes or …\n",null,1],["rescue_template","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-rescue_template","()","",null,1],["rescue_with_handler","ActionController::Rescue","Rails/classes/ActionController/Rescue.html#method-i-rescue_with_handler","(exception)","",null,1],["rescue_with_handler","ActiveSupport::Rescuable","Rails/classes/ActiveSupport/Rescuable.html#method-i-rescue_with_handler","(exception)","<p>Tries to rescue the exception by looking up and calling a registered\nhandler.\n",null,1],["reset","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-reset","(value = nil, name = nil)","<p>Generate a reset button Input element, as a String.\n<p>This resets the values on a form to their initial …\n",null,0],["reset","Digest::HMAC","Ruby/classes/Digest/HMAC.html#method-i-reset","()","<p>Resets the hmac to the initial state and returns self.\n",null,0],["reset","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-reset","()","<p>Resets the digest to the initial state and returns self.\n<p>This method is overridden by each implementation …\n",null,0],["reset","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-c-reset","()","<p>Reset the authoritative instance of the command manager.\n",null,0],["reset","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-reset","(connection)","<p>Resets HTTP connection <code>connection</code>.\n",null,0],["reset","Gem::Security","Ruby/classes/Gem/Security.html#method-c-reset","()","<p>Resets the trust directory for verifying gems.\n",null,0],["reset","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-reset","()","<p>Reset the list of known specs, running pre and post reset hooks registered\nin Gem.\n",null,0],["reset","Net::POP3","Ruby/classes/Net/POP3.html#method-i-reset","()","<p>Resets the session.  This clears all “deleted” marks from messages.\n<p>This method raises a POPError …\n",null,0],["reset","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-reset","()","<p>Fully resets the internal state of the Cipher. By using this, the same\nCipher instance may be used several …\n",null,0],["reset","OpenSSL::Digest","Ruby/classes/OpenSSL/Digest.html#method-i-reset","()","<p>Resets the Digest in the sense that any Digest#update that has been\nperformed is abandoned and the Digest …\n",null,0],["reset","OpenSSL::HMAC","Ruby/classes/OpenSSL/HMAC.html#method-i-reset","()","",null,0],["reset","RDoc::Markup::PreProcess","Ruby/classes/RDoc/Markup/PreProcess.html#method-c-reset","()","<p>Clears all registered directives and post-processors\n",null,0],["reset","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-reset","()","<p>Resets the tools\n",null,0],["reset","REXML::Validation::Choice","Ruby/classes/REXML/Validation/Choice.html#method-i-reset","()","",null,0],["reset","REXML::Validation::Interleave","Ruby/classes/REXML/Validation/Interleave.html#method-i-reset","()","",null,0],["reset","REXML::Validation::OneOrMore","Ruby/classes/REXML/Validation/OneOrMore.html#method-i-reset","()","",null,0],["reset","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-i-reset","()","",null,0],["reset","REXML::Validation::Validator","Ruby/classes/REXML/Validation/Validator.html#method-i-reset","()","",null,0],["reset","StringScanner","Ruby/classes/StringScanner.html#method-i-reset","()","<p>Reset the scan pointer (index 0) and clear matching data.\n",null,0],["reset","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-reset","()","<p>Resets and initializes the stream. All data in both input and output buffer\nare discarded.\n",null,0],["reset","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-reset","()","",null,1],["reset!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-reset-21","()","<p>Reset the state of this connection, directing the DBMS to clear\ntransactions and other connection-related …\n",null,1],["reset!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-reset-21","()","",null,1],["reset!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-reset-21","()","",null,1],["reset!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-reset-21","()","",null,1],["reset_cache","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-c-reset_cache","()","",null,1],["reset_callbacks","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-reset_callbacks","(symbol)","<p>Remove all set callbacks for the given event.\n",null,1],["reset_column_information","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-reset_column_information","()","<p>Resets all the cached information about columns, which will cause them to\nbe reloaded on the next request. …\n",null,1],["reset_counters","ActiveRecord::CounterCache::ClassMethods","Rails/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-reset_counters","(id, *counters)","<p>Resets one or more counter caches to their correct value using an SQL count\nquery. This is useful when …\n",null,1],["reset_cycle","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-reset_cycle","(name = \"default\")","<p>Resets a cycle so that it starts from the first element the next time it is\ncalled. Pass in <code>name</code> to reset …\n",null,1],["reset_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-reset_locking_column","()","<p>Reset the column used for optimistic locking back to the\n<code>lock_version</code> default.\n",null,1],["reset_nil_attributes_to_default","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-reset_nil_attributes_to_default","()","<p>Reset nil attributes to their default values to make the spec valid\n",null,0],["reset_prog_mode","Curses","Ruby/classes/Curses.html#method-c-reset_prog_mode","()","<p>Reset the current terminal modes to the saved state by the\nCurses.def_prog_mode\n<p>This is done automatically …\n",null,0],["reset_runtime","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-c-reset_runtime","()","",null,1],["reset_sequence!","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-reset_sequence-21","(table, column, sequence = nil)","<p>Set the sequence to the max value of the table&#39;s column.\n",null,1],["reset_session","ActionController::RackDelegation","Rails/classes/ActionController/RackDelegation.html#method-i-reset_session","()","",null,1],["reset_session","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-reset_session","()","<p>TODO This should be broken apart into AD::Request::Session and probably be\nincluded by the session middleware. …\n",null,1],["resize","Curses","Ruby/classes/Curses.html#method-c-resize","(p1, p2)","<p>Resize the current term to Fixnum <code>lines</code> and Fixnum\n<code>cols</code>\n",null,0],["resize","Curses::Window","Ruby/classes/Curses/Window.html#method-i-resize","(p1, p2)","<p>Resize the current window to Fixnum <code>lines</code> and Fixnum\n<code>cols</code>\n",null,0],["resizeterm","Curses","Ruby/classes/Curses.html#method-c-resizeterm","(p1, p2)","<p>Resize the current term to Fixnum <code>lines</code> and Fixnum\n<code>cols</code>\n",null,0],["resolve","Gem::DependencyResolver","Ruby/classes/Gem/DependencyResolver.html#method-i-resolve","()","<p>Proceed with resolution! Returns an array of ActivationRequest objects.\n",null,0],["resolve","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-resolve","(set=nil)","<p>Resolve the requested dependencies and return an Array of Specification\nobjects to be activated.\n",null,0],["resolve","RDoc::CrossReference","Ruby/classes/RDoc/CrossReference.html#method-i-resolve","(name, text)","<p>Returns a reference to <code>name</code>.\n<p>If the reference is found and <code>name</code> is not documented\n<code>text</code> will be returned. …\n",null,0],["resolve","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-resolve","()","<p>Resolve all the pending adds now.\n",null,0],["resolve","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-c-resolve","(uri)","",null,1],["resolve","ActionDispatch::RailsMetaStore","Rails/classes/ActionDispatch/RailsMetaStore.html#method-c-resolve","(uri)","",null,1],["resolve_add","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-resolve_add","(fn)","",null,0],["resolve_aliases","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-resolve_aliases","(added)","<p>Tries to resolve unmatched aliases when a method or attribute has just been\nadded.\n",null,0],["resolve_args","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-resolve_args","(args)","<p>Resolve the arguments for a task/rule.  Returns a triplet of [task_name,\narg_name_list, prerequisites]. …\n",null,0],["resolve_current","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-resolve_current","()","<p>Resolve the requested dependencies against the gems available via Gem.path\nand return an Array of Specification …\n",null,0],["resolve_for","Gem::DependencyResolver","Ruby/classes/Gem/DependencyResolver.html#method-i-resolve_for","(needed, specs)","<p>The meat of the algorithm. Given <code>needed</code> DependencyRequest\nobjects and <code>specs</code> being a list to ActivationRequest …\n",null,0],["resource","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resource","(*resources, &block)","<p>Sometimes, you have a resource that clients always look up without\nreferencing an ID. A common example, …\n",null,1],["resource_errors","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-resource_errors","()","",null,1],["resource_location","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-resource_location","()","<p>Returns the resource location by retrieving it from the options or\nreturning the resources array.\n",null,1],["resourceful?","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-resourceful-3F","()","<p>Checks whether the resource responds to the current format or not.\n",null,1],["resources","RSS::TaxonomyTopicsModel::TaxonomyTopics","Ruby/classes/RSS/TaxonomyTopicsModel/TaxonomyTopics.html#method-i-resources","()","",null,0],["resources","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resources","(*resources, &block)","<p>In Rails, a resourceful route provides a mapping between HTTP verbs and\nURLs and controller actions. …\n",null,1],["resources_path_names","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resources_path_names","(options)","",null,1],["respond","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-respond","()","<p>Main entry point for responder responsible to dispatch to the proper\nformat.\n",null,1],["respond_to","ActionController::MimeResponds","Rails/classes/ActionController/MimeResponds.html#method-i-respond_to","(*mimes, &block)","<p>Without web-service support, an action which collects the data for\ndisplaying a list of people might …\n",null,1],["respond_to","ActionController::MimeResponds::ClassMethods","Rails/classes/ActionController/MimeResponds/ClassMethods.html#method-i-respond_to","(*mimes)","<p>Defines mime types that are rendered by default when invoking\n<code>respond_with</code>.\n\n<pre>respond_to :html, :xml, :json</pre>\n",null,1],["respond_to?","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-i-respond_to-3F","(msg_id, priv=false)","<p>Routes respond_to? to the referenced remote object.\n",null,0],["respond_to?","DRb::DRbObject","Ruby/classes/DRb/DRbObject.html#method-i-respond_to-3F","(msg_id, priv=false)","<p>Routes respond_to? to the referenced remote object.\n",null,0],["respond_to?","Object","Ruby/classes/Object.html#method-i-respond_to-3F","(p1, p2 = v2)","<p>Returns <code>true</code> if <em>obj</em> responds to the given method. \nPrivate and protected methods are included in the …\n",null,0],["respond_to?","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-respond_to-3F","(method)","",null,1],["respond_to?","ActiveModel::AttributeMethods","Rails/classes/ActiveModel/AttributeMethods.html#method-i-respond_to-3F","(method, include_private_methods = false)","",null,1],["respond_to?","ActiveRecord::AttributeMethods","Rails/classes/ActiveRecord/AttributeMethods.html#method-i-respond_to-3F","(name, include_private = false)","<p>A Person object with a name attribute can ask\n<code>person.respond_to?(:name)</code>,\n<code>person.respond_to?(:name=)</code>, …\n",null,1],["respond_to?","Rails::Railtie::Configurable::ClassMethods","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-respond_to-3F","(*args)","",null,1],["respond_to?","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-respond_to-3F","(name)","",null,1],["respond_to_missing?","Delegator","Ruby/classes/Delegator.html#method-i-respond_to_missing-3F","(m, include_private)","<p>Checks for a method provided by this the delegate object by forwarding the\ncall through _<em>getobj</em>_.\n",null,0],["respond_to_missing?","Object","Ruby/classes/Object.html#method-i-respond_to_missing-3F","(p1, p2)","<p>DO NOT USE THIS DIRECTLY.\n<p>Hook method to return whether the <em>obj</em> can respond to <em>id</em>\nmethod or not.\n<p>See #respond_to? …\n",null,0],["respond_to_missing?","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-respond_to_missing-3F","(method, include_private)","<p>Returns <code>true</code> if <em>obj</em> responds to the given method.\nPrivate methods are included in the search only if …\n",null,1],["respond_to_missing?","ActiveSupport::OrderedOptions","Rails/classes/ActiveSupport/OrderedOptions.html#method-i-respond_to_missing-3F","(name, include_private)","",null,1],["respond_to_missing?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-respond_to_missing-3F","(sym, include_priv)","<p>Ensure proxy class responds to all methods that underlying time instance\nresponds to.\n",null,1],["respond_to_missing?","Mime::NullType","Rails/classes/Mime/NullType.html#method-i-respond_to_missing-3F","(method, include_private = false)","",null,1],["respond_to_without_attributes?","ActiveModel::AttributeMethods","Rails/classes/ActiveModel/AttributeMethods.html#method-i-respond_to_without_attributes-3F","(method, include_private_methods = false)","<p>A <code>Person</code> instance with a <code>name</code> attribute can ask\n<code>person.respond_to?(:name)</code>,\n<code>person.respond_to?(:name=)</code> …\n",null,1],["respond_with","ActionController::MimeResponds","Rails/classes/ActionController/MimeResponds.html#method-i-respond_with","(*resources, &block)","<p>For a given controller action, respond_with generates an appropriate\nresponse based on the mime-type …\n",null,1],["response","ActionController::Base","Rails/classes/ActionController/Base.html#method-i-response","","<p>Returns an ActionDispatch::Response that represents the current response.\n",null,1],["response","ActionController::MimeResponds::Collector","Rails/classes/ActionController/MimeResponds/Collector.html#method-i-response","()","",null,1],["response_body=","ActionController::Live","Rails/classes/ActionController/Live.html#method-i-response_body-3D","(body)","",null,1],["response_body=","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-response_body-3D","(body)","",null,1],["response_body=","ActionController::RackDelegation","Rails/classes/ActionController/RackDelegation.html#method-i-response_body-3D","(body)","",null,1],["response_body_permitted?","Net::HTTPGenericRequest","Ruby/classes/Net/HTTPGenericRequest.html#method-i-response_body_permitted-3F","()","",null,0],["response_code","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-response_code","()","<p>The response code of the request.\n",null,1],["response_overridden?","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-response_overridden-3F","()","",null,1],["rest","StringScanner","Ruby/classes/StringScanner.html#method-i-rest","()","<p>Returns the “rest” of the string (i.e. everything after the scan pointer).\nIf there is no more …\n",null,0],["rest?","StringScanner","Ruby/classes/StringScanner.html#method-i-rest-3F","()","<p>Returns true iff there is more data in the string.  See #eos?. This method\nis obsolete; use #eos? instead. …\n",null,0],["rest_size","StringScanner","Ruby/classes/StringScanner.html#method-i-rest_size","()","<p><code>s.rest_size</code> is equivalent to <code>s.rest.size</code>.\n",null,0],["restore","CGI::Session::FileStore","Ruby/classes/CGI/Session/FileStore.html#method-i-restore","()","<p>Restore session state from the session&#39;s FileStore file.\n<p>Returns the session state as a hash.\n",null,0],["restore","CGI::Session::MemoryStore","Ruby/classes/CGI/Session/MemoryStore.html#method-i-restore","()","<p>Restore session state.\n<p>Returns session data as a hash.\n",null,0],["restore","CGI::Session::NullStore","Ruby/classes/CGI/Session/NullStore.html#method-i-restore","()","<p>Restore (empty) session state.\n",null,0],["restore","CGI::Session::PStore","Ruby/classes/CGI/Session/PStore.html#method-i-restore","()","<p>Restore session state from the session&#39;s PStore file.\n<p>Returns the session state as a hash.\n",null,0],["restore","JSON","Ruby/classes/JSON.html#method-c-restore","(source, proc = nil, options = {})","",null,0],["restore","Marshal","Ruby/classes/Marshal.html#method-c-restore","(p1, p2 = v2)","<p>Returns the result of converting the serialized data in source into a Ruby\nobject (possibly with associated …\n",null,0],["restsize","StringScanner","Ruby/classes/StringScanner.html#method-i-restsize","()","<p><code>s.restsize</code> is equivalent to <code>s.rest_size</code>. This\nmethod is obsolete; use #rest_size instead.\n",null,0],["result","Coverage","Ruby/classes/Coverage.html#method-c-result","()","<p>Returns a hash that contains filename as key and coverage array as value\nand disables coverage measurement. …\n",null,0],["result","ERB","Ruby/classes/ERB.html#method-i-result","(b=new_toplevel)","<p>Executes the generated ERB code to produce a completed template, returning\nthe results of that code. …\n",null,0],["result","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-result","()","<p>Returns a profile data report such as:\n\n<pre><code>GC 1 invokes.\nIndex    Invoke Time(sec)       Use Size(byte)   ...</code></pre>\n",null,0],["result","StopIteration","Ruby/classes/StopIteration.html#method-i-result","()","<p>Returns the return value of the iterator.\n\n<pre><code>o = Object.new\ndef o.each\n  yield 1\n  yield 2\n  yield 3\n  100 ...\n</code></pre>\n",null,0],["result","ActionDispatch::Routing::ConsoleFormatter","Rails/classes/ActionDispatch/Routing/ConsoleFormatter.html#method-i-result","()","",null,1],["result","ActionDispatch::Routing::HtmlTableFormatter","Rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-i-result","()","",null,1],["result","ActiveRecord::DynamicMatchers::Finder","Rails/classes/ActiveRecord/DynamicMatchers/Finder.html#method-i-result","()","<p>Extended in activerecord-deprecated_finders\n",null,1],["resume","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-resume","()","",null,0],["resume","Fiber","Ruby/classes/Fiber.html#method-i-resume","(*args)","<p>Resumes the fiber from the point at which the last <code>Fiber.yield</code>\nwas called, or starts running it if it …\n",null,0],["retrbinary","Net::FTP","Ruby/classes/Net/FTP.html#method-i-retrbinary","(cmd, blocksize, rest_offset = nil)","<p>Puts the connection into binary (image) mode, issues the given command, and\nfetches the data returned, …\n",null,0],["retrieve_connection","ActiveRecord::ConnectionHandling","Rails/classes/ActiveRecord/ConnectionHandling.html#method-i-retrieve_connection","()","",null,1],["retrieve_connection_pool","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-retrieve_connection_pool","(klass)","<p>Retrieving the connection pool happens a lot so we cache it in\n@class_to_pool. This makes retrieving …\n",null,1],["retrlines","Net::FTP","Ruby/classes/Net/FTP.html#method-i-retrlines","(cmd)","<p>Puts the connection into ASCII (text) mode, issues the given command, and\npasses the resulting data, …\n",null,0],["return_headers?","CSV","Ruby/classes/CSV.html#method-i-return_headers-3F","()","<p>Returns <code>true</code> if headers will be returned as a row of results.\nSee CSV::new for details.\n",null,0],["return_type","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-return_type","()","<p>Returns string of return value type of method.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</code></pre>\n",null,0],["return_type_detail","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-return_type_detail","()","<p>Returns detail information of return value type of method. The information\nis array.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</code></pre>\n",null,0],["return_value","TracePoint","Ruby/classes/TracePoint.html#method-i-return_value","()","<p>Return value from <code>:return</code>, <code>c_return</code>, and\n<code>b_return</code> event\n",null,0],["return_vtype","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-return_vtype","()","<p>Returns number of return value type of method.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</code></pre>\n",null,0],["retval?","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-i-retval-3F","()","<p>Returns true if argument is return value.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;DirectX 7 for Visual Basic Type Library&#39;, ...</code></pre>\n",null,0],["reverse","Array","Ruby/classes/Array.html#method-i-reverse","()","<p>Returns a new array containing <code>self</code>&#39;s elements in reverse\norder.\n\n<pre><code>[ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ].reverse   #=&gt; [&quot;c&quot;, ...\n</code></pre>\n",null,0],["reverse","IPAddr","Ruby/classes/IPAddr.html#method-i-reverse","()","<p>Returns a string for DNS reverse lookup.  It returns a string in RFC3172\nform for an IPv6 address.\n",null,0],["reverse","String","Ruby/classes/String.html#method-i-reverse","()","<p>Returns a new string with the characters from <em>str</em> in reverse\norder.\n\n<pre><code>&quot;stressed&quot;.reverse   #=&gt; &quot;desserts&quot;\n</code></pre>\n",null,0],["reverse","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-reverse","()","<p>Reverses all characters in the string.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;Café&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">reverse</span>.<span class=\"ruby-identifier\">to_s</span> <span class=\"ruby-comment\"># =&gt; &#39;éfaC&#39;</span>\n</pre>\n",null,1],["reverse!","Array","Ruby/classes/Array.html#method-i-reverse-21","()","<p>Reverses <code>self</code> in place.\n\n<pre><code>a = [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ]\na.reverse!       #=&gt; [&quot;c&quot;, &quot;b&quot;, &quot;a&quot;]\na                #=&gt; ...\n</code></pre>\n",null,0],["reverse!","String","Ruby/classes/String.html#method-i-reverse-21","()","<p>Reverses <em>str</em> in place.\n",null,0],["reverse_each","Array","Ruby/classes/Array.html#method-i-reverse_each","()","<p>Same as Array#each, but traverses <code>self</code> in reverse order.\n\n<pre><code>a = [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ]\na.reverse_each {|x| print ...\n</code></pre>\n",null,0],["reverse_each","Enumerable","Ruby/classes/Enumerable.html#method-i-reverse_each","(*args)","<p>Builds a temporary array and traverses that array in reverse order.\n<p>If no block is given, an enumerator …\n",null,0],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge","(other_hash)","<p>Like <code>merge</code> but the other way around: Merges the receiver into\nthe argument and returns a new hash with …\n",null,1],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge","(other_hash)","<p>Like <code>merge</code> but the other way around: Merges the receiver into\nthe argument and returns a new hash with …\n",null,1],["reverse_merge","Hash","Rails/classes/Hash.html#method-i-reverse_merge","(other_hash)","<p>Merges the caller into <code>other_hash</code>. For example,\n\n<pre>options = options.reverse_merge(size: 25, velocity: 10)</pre>\n",null,1],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge-21","(other_hash)","<p>Same semantics as <code>reverse_merge</code> but modifies the receiver\nin-place.\n",null,1],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge-21","(other_hash)","<p>Same semantics as <code>reverse_merge</code> but modifies the receiver\nin-place.\n",null,1],["reverse_merge!","Hash","Rails/classes/Hash.html#method-i-reverse_merge-21","(other_hash)","<p>Destructive <code>reverse_merge</code>.\n",null,1],["reverse_order","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-reverse_order","()","<p>Reverse the existing order clause on the relation.\n\n<pre>User.order(&#39;name ASC&#39;).reverse_order # generated SQL ...</pre>\n",null,1],["reverse_update","Hash","Rails/classes/Hash.html#method-i-reverse_update","(other_hash)","",null,1],["reversible","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-reversible","()","<p>Used to specify an operation that can be run in one direction or another.\nCall the methods <code>up</code> and <code>down</code> …\n",null,1],["revert","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-revert","(*migration_classes)","<p>Reverses the migration commands for the given block and the given\nmigrations.\n<p>The following migration …\n",null,1],["revert","ActiveRecord::Migration::CommandRecorder","Rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-revert","()","<p>While executing the given block, the recorded will be in reverting mode.\nAll commands recorded will end …\n",null,1],["reverting?","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-reverting-3F","()","",null,1],["revoked","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-revoked","()","",null,0],["revoked=","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-revoked-3D","(p1)","",null,0],["rewind","ARGF","Ruby/classes/ARGF.html#method-i-rewind","()","<p>Positions the current file to the beginning of input, resetting\n<code>ARGF.lineno</code> to zero.\n\n<pre><code>ARGF.readline   #=&gt; ...\n</code></pre>\n",null,0],["rewind","CSV","Ruby/classes/CSV.html#method-i-rewind","()","<p>Rewinds the underlying IO object and resets CSV&#39;s lineno() counter.\n",null,0],["rewind","Dir","Ruby/classes/Dir.html#method-i-rewind","()","<p>Repositions <em>dir</em> to the first entry.\n\n<pre><code>d = Dir.new(&quot;testdir&quot;)\nd.read     #=&gt; &quot;.&quot;\nd.rewind   #=&gt; #&lt;Dir:0x401b3fb0&gt; ...\n</code></pre>\n",null,0],["rewind","Enumerator","Ruby/classes/Enumerator.html#method-i-rewind","()","<p>Rewinds the enumeration sequence to the beginning.\n<p>If the enclosed object responds to a “rewind” …\n",null,0],["rewind","Gem::Package::TarReader","Ruby/classes/Gem/Package/TarReader.html#method-i-rewind","()","<p>NOTE: Do not call #rewind during #each\n",null,0],["rewind","Gem::Package::TarReader::Entry","Ruby/classes/Gem/Package/TarReader/Entry.html#method-i-rewind","()","<p>Rewinds to the beginning of the tar file entry\n",null,0],["rewind","IO","Ruby/classes/IO.html#method-i-rewind","()","<p>Positions <em>ios</em> to the beginning of input, resetting\n<code>lineno</code> to zero.\n\n<pre><code>f = File.new(&quot;testfile&quot;)\nf.readline ...</code></pre>\n",null,0],["rewind","Prime::EratosthenesGenerator","Ruby/classes/Prime/EratosthenesGenerator.html#method-i-rewind","()","",null,0],["rewind","Prime::Generator23","Ruby/classes/Prime/Generator23.html#method-i-rewind","()","",null,0],["rewind","Prime::PseudoPrimeGenerator","Ruby/classes/Prime/PseudoPrimeGenerator.html#method-i-rewind","()","<p>Rewinds the internal position for enumeration.\n<p>See <code>Enumerator</code>#rewind.\n",null,0],["rewind","Prime::TrialDivisionGenerator","Ruby/classes/Prime/TrialDivisionGenerator.html#method-i-rewind","()","",null,0],["rewind","REXML::Parsers::LightParser","Ruby/classes/REXML/Parsers/LightParser.html#method-i-rewind","()","",null,0],["rewind","REXML::Parsers::UltraLightParser","Ruby/classes/REXML/Parsers/UltraLightParser.html#method-i-rewind","()","",null,0],["rewind","StringIO","Ruby/classes/StringIO.html#method-i-rewind","()","<p>Positions <strong>strio</strong> to the beginning of input, resetting\n<code>lineno</code> to zero.\n",null,0],["rewind","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-rewind","()","<p>Resets the position of the file pointer to the point created the GzipReader\nobject.  The associated  …\n",null,0],["rewind","ActionDispatch::Http::UploadedFile","Rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-rewind","()","<p>Shortcut for <code>tempfile.rewind</code>.\n",null,1],["rewrite_param_values","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-rewrite_param_values","(array_params)","<p>This removes the `“` characters wrapping the value.\n",null,1],["rfc1123_date","CGI","Ruby/classes/CGI.html#method-c-rfc1123_date","(time)","<p>Format a <code>Time</code> object as a String using the format specified by\nRFC 1123.\n\n<pre><code>CGI::rfc1123_date(Time.now)\n ...</code></pre>\n",null,0],["rfc2822","Date","Ruby/classes/Date.html#method-c-rfc2822","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 2822 formats.\n\n<pre><code>Date.rfc2822(&#39;Sat, ...</code></pre>\n",null,0],["rfc2822","Date","Ruby/classes/Date.html#method-i-rfc2822","()","<p>This method is equivalent to strftime(&#39;%a, %-d %b %Y %T %z&#39;).\n",null,0],["rfc2822","DateTime","Ruby/classes/DateTime.html#method-c-rfc2822","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 2822 formats.\n\n<pre><code>DateTime.rfc2822(&#39;Sat, ...</code></pre>\n",null,0],["rfc2822","Time","Ruby/classes/Time.html#method-i-rfc2822","(date)","<p>Parses <code>date</code> as date-time defined by RFC 2822 and converts it\nto a Time object.  The format is identical …\n",null,0],["rfc2822","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-rfc2822","()","<p>Returns a string of the object&#39;s date and time in the RFC 2822 standard\nformat.\n\n<pre>Time.zone.now.rfc2822 ...</pre>\n",null,1],["rfc3339","Date","Ruby/classes/Date.html#method-i-rfc3339","()","<p>This method is equivalent to strftime(&#39;%FT%T%:z&#39;).\n",null,0],["rfc3339","Date","Ruby/classes/Date.html#method-c-rfc3339","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 3339 formats.\n\n<pre><code>Date.rfc3339(&#39;2001-02-03T04:05:06+07:00&#39;) ...</code></pre>\n",null,0],["rfc3339","DateTime","Ruby/classes/DateTime.html#method-i-rfc3339","(*args)","<p>This method is equivalent to strftime(&#39;%FT%T&#39;).  The optional\nargument n is length of fractional …\n",null,0],["rfc3339","DateTime","Ruby/classes/DateTime.html#method-c-rfc3339","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 3339 formats.\n\n<pre><code>DateTime.rfc3339(&#39;2001-02-03T04:05:06+07:00&#39;) ...</code></pre>\n",null,0],["rfc822","Date","Ruby/classes/Date.html#method-i-rfc822","()","<p>This method is equivalent to strftime(&#39;%a, %-d %b %Y %T %z&#39;).\n",null,0],["rfc822","Date","Ruby/classes/Date.html#method-c-rfc822","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 2822 formats.\n\n<pre><code>Date.rfc2822(&#39;Sat, ...</code></pre>\n",null,0],["rfc822","DateTime","Ruby/classes/DateTime.html#method-c-rfc822","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical RFC 2822 formats.\n\n<pre><code>DateTime.rfc2822(&#39;Sat, ...</code></pre>\n",null,0],["rfc822","Time","Ruby/classes/Time.html#method-i-rfc822","(date)","",null,0],["rfc822","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-rfc822","()","",null,1],["ri_dir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-ri_dir","()","<p>Returns the full path to this spec&#39;s ri directory.\n",null,0],["ri_installed?","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-ri_installed-3F","()","<p>Is ri data installed?\n",null,0],["ri_installed?","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-ri_installed-3F","()","<p>Is ri data installed?\n",null,0],["ri_paths","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-ri_paths","(&block)","<p>Enumerates the ri paths.  See RDoc::RI::Paths#each\n",null,0],["rid","Process::GID","Ruby/classes/Process/GID.html#method-c-rid","()","<p>Returns the (real) group ID for this process.\n\n<pre><code>Process.gid   #=&gt; 500\n</code></pre>\n",null,0],["rid","Process::UID","Ruby/classes/Process/UID.html#method-c-rid","()","<p>Returns the (real) user ID of this process.\n\n<pre><code>Process.uid   #=&gt; 501\n</code></pre>\n",null,0],["rindex","Array","Ruby/classes/Array.html#method-i-rindex","(p1)","<p>Returns the <em>index</em> of the last object in <code>self</code>\n<code>==</code> to <code>obj</code>.\n<p>If a block is given instead of an argument, returns …\n",null,0],["rindex","String","Ruby/classes/String.html#method-i-rindex","(p1, p2 = v2)","<p>Returns the index of the last occurrence of the given <em>substring</em> or\npattern (<em>regexp</em>) in <em>str</em>. Returns  …\n",null,0],["rjust","String","Ruby/classes/String.html#method-i-rjust","(*args)","<p>If <em>integer</em> is greater than the length of <em>str</em>, returns a\nnew <code>String</code> of length <em>integer</em> with <em>str</em> right\njustified …\n",null,0],["rm","FileUtils","Ruby/classes/FileUtils.html#method-c-rm","(list, options = {})","<p>Options: force noop verbose\n<p>Remove file(s) specified in <code>list</code>.  This method cannot remove\ndirectories. …\n",null,0],["rm","Object","Ruby/classes/Object.html#method-i-rm","()","<p>Remove the FILE\n\n<pre><code>ruby -run -e rm -- [OPTION] FILE\n\n-f          ignore nonexistent files\n-r          remove ...</code></pre>\n",null,0],["rm_f","FileUtils","Ruby/classes/FileUtils.html#method-c-rm_f","(list, options = {})","<p>Options: noop verbose\n<p>Equivalent to\n\n<pre><code>#rm(list, :force =&gt; true)\n</code></pre>\n",null,0],["rm_r","FileUtils","Ruby/classes/FileUtils.html#method-c-rm_r","(list, options = {})","<p>Options: force noop verbose secure\n<p>remove files <code>list[0]</code> <code>list[1]</code>… If\n<code>list[n]</code> is a directory, removes …\n",null,0],["rm_rf","FileUtils","Ruby/classes/FileUtils.html#method-c-rm_rf","(list, options = {})","<p>Options: noop verbose secure\n<p>Equivalent to\n\n<pre><code>#rm_r(list, :force =&gt; true)\n</code></pre>\n",null,0],["rmdir","Dir","Ruby/classes/Dir.html#method-c-rmdir","(p1)","<p>Deletes the named directory. Raises a subclass of\n<code>SystemCallError</code> if the directory isn&#39;t empty.\n",null,0],["rmdir","FileUtils","Ruby/classes/FileUtils.html#method-c-rmdir","(list, options = {})","<p>Options: noop, verbose\n<p>Removes one or more directories.\n\n<pre><code>FileUtils.rmdir &#39;somedir&#39;\nFileUtils.rmdir %w(somedir ...</code></pre>\n",null,0],["rmdir","Net::FTP","Ruby/classes/Net/FTP.html#method-i-rmdir","(dirname)","<p>Removes a remote directory.\n",null,0],["rmdir","Object","Ruby/classes/Object.html#method-i-rmdir","()","<p>Remove the DIR.\n\n<pre><code>ruby -run -e rmdir -- [OPTION] DIR\n\n-p          remove DIRECTORY and its ancestors.\n-v ...</code></pre>\n",null,0],["rmdir","Pathname","Ruby/classes/Pathname.html#method-i-rmdir","()","<p>Remove the referenced directory.\n<p>See Dir.rmdir.\n",null,0],["rmdir","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-rmdir","(*path)","<p>Same as Dir.rmdir, except multiple directories are allowed.\n",null,0],["rmtree","FileUtils","Ruby/classes/FileUtils.html#method-c-rmtree","(list, options = {})","",null,0],["rmtree","Pathname","Ruby/classes/Pathname.html#method-i-rmtree","()","<p>Recursively deletes a directory, including all directories beneath it.\n<p>See FileUtils.rm_r\n",null,0],["robots","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/public/robots_txt.html","","<p>See www.robotstxt.org/wc/norobots.html for documentation on how to use the\nrobots.txt file\n<p>To ban all …\n",null,1],["rollback_active_record_state!","ActiveRecord::Transactions","Rails/classes/ActiveRecord/Transactions.html#method-i-rollback_active_record_state-21","()","<p>Reset id and @new_record if the transaction rolls back.\n",null,1],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-rollback_db_transaction","()","<p>Rolls back the transaction (and turns on auto-committing). Must be done if\nthe transaction block raises …\n",null,1],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-rollback_db_transaction","()","<p>Aborts a transaction.\n",null,1],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-rollback_to_savepoint","()","",null,1],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rollback_to_savepoint","()","",null,1],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-rollback_to_savepoint","()","",null,1],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-rollback_to_savepoint","()","",null,1],["rolledback?","ActiveRecord::ConnectionAdapters::TransactionState","Rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-rolledback-3F","()","",null,1],["root","Gem::Server","Ruby/classes/Gem/Server.html#method-i-root","(req, res)","",null,0],["root","Psych::Nodes::Document","Ruby/classes/Psych/Nodes/Document.html#method-i-root","()","<p>Returns the root node.  A Document may only have one root node:\nyaml.org/spec/1.1/#id898031\n",null,0],["root","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-root","(req, res)","<p>Generates the root page on <code>res</code>.  <code>req</code> is ignored.\n",null,0],["root","REXML::Document","Ruby/classes/REXML/Document.html#method-i-root","()","<p>@return the root Element of the document, or nil if this document has no\nchildren.\n",null,0],["root","REXML::Element","Ruby/classes/REXML/Element.html#method-i-root","()","",null,0],["root","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-root","()","",null,0],["root","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-root","(options = {})","<p>You can specify what Rails should route “/” to with the root method:\n\n<pre>root to: &#39;pages#main&#39;</pre>\n<p>For …\n",null,1],["root","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-root","(path, options={})","",null,1],["root","Rails","Rails/classes/Rails.html#method-c-root","()","",null,1],["root=","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-root-3D","(value)","",null,1],["root?","PStore","Ruby/classes/PStore.html#method-i-root-3F","(name)","<p>Returns true if the supplied <em>name</em> is currently in the data store.\n<p><strong>WARNING</strong>:  This method is only valid …\n",null,0],["root?","Pathname","Ruby/classes/Pathname.html#method-i-root-3F","()","<p>Predicate method for root directories.  Returns <code>true</code> if the\npathname consists of consecutive slashes. …\n",null,0],["root_node","REXML::Element","Ruby/classes/REXML/Element.html#method-i-root_node","()","<p>Evaluates to the root node of the document that this element belongs to. If\nthis element doesn&#39;t …\n",null,0],["root_search","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-root_search","(req, res)","<p>Generates a search index for the root page on <code>res</code>. \n<code>req</code> is ignored.\n",null,0],["roots","PStore","Ruby/classes/PStore.html#method-i-roots","()","<p>Returns the names of all object hierarchies currently in the store.\n<p><strong>WARNING</strong>:  This method is only valid …\n",null,0],["rotate","Array","Ruby/classes/Array.html#method-i-rotate","(p1 = v1)","<p>Returns a new array by rotating <code>self</code> so that the element at\n<code>count</code> is the first element of the new array. …\n",null,0],["rotate!","Array","Ruby/classes/Array.html#method-i-rotate-21","(p1 = v1)","<p>Rotates <code>self</code> in place so that the element at\n<code>count</code> comes first, and returns <code>self</code>.\n<p>If <code>count</code> is negative …\n",null,0],["round","BigDecimal","Ruby/classes/BigDecimal.html#method-i-round","(p1 = v1, p2 = v2)","<p>Round to the nearest 1 (by default), returning the result as a BigDecimal.\n\n<pre><code>BigDecimal(&#39;3.14159&#39;).round ...</code></pre>\n",null,0],["round","Float","Ruby/classes/Float.html#method-i-round","(p1 = v1)","<p>Rounds <em>flt</em> to a given precision in decimal digits (default 0\ndigits). Precision may be negative.  Returns …\n",null,0],["round","Integer","Ruby/classes/Integer.html#method-i-round","(p1)","<p>Rounds <em>flt</em> to a given precision in decimal digits (default 0\ndigits). Precision may be negative.  Returns …\n",null,0],["round","Integer","Ruby/classes/Integer.html#method-i-round","(p1)","<p>Rounds <em>flt</em> to a given precision in decimal digits (default 0\ndigits). Precision may be negative.  Returns …\n",null,0],["round","Matrix","Ruby/classes/Matrix.html#method-i-round","(ndigits=0)","<p>Returns a matrix with entries rounded to the given precision (see\nFloat#round)\n",null,0],["round","Numeric","Ruby/classes/Numeric.html#method-i-round","(*args)","<p>Rounds <em>num</em> to a given precision in decimal digits (default 0\ndigits). Precision may be negative.  Returns …\n",null,0],["round","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-round","( number )","",null,0],["round","Rational","Ruby/classes/Rational.html#method-i-round","(*args)","<p>Returns the truncated value (toward the nearest integer; 0.5 =&gt; 1; -0.5\n=&gt; -1).\n\n<pre><code>Rational(3).round ...</code></pre>\n",null,0],["round","Time","Ruby/classes/Time.html#method-i-round","(p1 = v1)","<p>Rounds sub seconds to a given precision in decimal digits (0 digits by\ndefault). It returns a new Time …\n",null,0],["route","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-route","(routing_code)","<p>Make an entry in Rails routing file config/routes.rb\n\n<pre>route &quot;root &#39;welcome#index&#39;&quot;</pre>\n",null,1],["route_from","URI::Generic","Ruby/classes/URI/Generic.html#method-i-route_from","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,0],["route_key","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-route_key","(record_or_class)","<p>Returns string to use while generating route names. It differs for\nnamespaced models regarding whether …\n",null,1],["route_to","URI::Generic","Ruby/classes/URI/Generic.html#method-i-route_to","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,0],["route_url","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-route_url","()","",null,1],["routes","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-routes","()","<p>Defines the routes for this engine. If a block is given to routes, it is\nappended to the engine.\n",null,1],["row","Matrix","Ruby/classes/Matrix.html#method-i-row","(i)","<p>Returns row vector number <code>i</code> of the matrix as a Vector\n(starting at 0 like an array).  When a block is …\n",null,0],["row_count","Matrix","Ruby/classes/Matrix.html#method-i-row_count","()","<p>Returns the number of rows.\n",null,0],["row_size","Matrix","Ruby/classes/Matrix.html#method-i-row_size","()","",null,0],["row_vector","Matrix","Ruby/classes/Matrix.html#method-c-row_vector","(row)","<p>Creates a single-row matrix where the values of that row are as given in\n<code>row</code>.\n\n<pre><code>Matrix.row_vector([4,5,6]) ...</code></pre>\n",null,0],["row_vectors","Matrix","Ruby/classes/Matrix.html#method-i-row_vectors","()","<p>Returns an array of the row vectors of the matrix.  See Vector.\n",null,0],["rows","Matrix","Ruby/classes/Matrix.html#method-c-rows","(rows, copy = true)","<p>Creates a matrix where <code>rows</code> is an array of arrays, each of\nwhich is a row of the matrix.  If the optional …\n",null,0],["rpartition","String","Ruby/classes/String.html#method-i-rpartition","(p1)","<p>Searches <em>sep</em> or pattern (<em>regexp</em>) in the string from the\nend of the string, and returns the part before …\n",null,0],["rsqrt","Math","Ruby/classes/Math.html#method-c-rsqrt","(a)","<p>Compute square root of a non negative number. This method is internally\nused by <code>Math.sqrt</code>.\n",null,0],["rss","RSS::BaseParser","Ruby/classes/RSS/BaseParser.html#method-i-rss","()","",null,0],["rstrip","String","Ruby/classes/String.html#method-i-rstrip","()","<p>Returns a copy of <em>str</em> with trailing whitespace removed. See also\n<code>String#lstrip</code> and <code>String#strip</code>.\n\n<pre><code>&quot;  hello ...</code></pre>\n",null,0],["rstrip!","String","Ruby/classes/String.html#method-i-rstrip-21","()","<p>Removes trailing whitespace from <em>str</em>, returning <code>nil</code>\nif no change was made. See also <code>String#lstrip!</code> and …\n",null,0],["ruby","FileUtils","Ruby/classes/FileUtils.html#method-i-ruby","(*args,&block)","<p>Run a Ruby interpreter with the given arguments.\n<p>Example:\n\n<pre><code>ruby %{-pe &#39;$_.upcase!&#39; &lt;README}</code></pre>\n",null,0],["ruby","Gem","Ruby/classes/Gem.html#method-c-ruby","()","<p>The path to the running Ruby interpreter.\n",null,0],["ruby","Sys","Ruby/classes/Sys.html#method-i-ruby","(*args)","<p>Run a Ruby interpreter with the given arguments.\n",null,0],["ruby?","RDoc::Markup::Verbatim","Ruby/classes/RDoc/Markup/Verbatim.html#method-i-ruby-3F","()","<p>Is this verbatim section ruby code?\n",null,0],["ruby_engine","Gem","Ruby/classes/Gem.html#method-c-ruby_engine","()","<p>A wrapper around RUBY_ENGINE const that may not be defined\n",null,0],["ruby_version","Gem","Ruby/classes/Gem.html#method-c-ruby_version","()","<p>A Gem::Version for the currently running ruby.\n",null,0],["rubygems_api_key","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-rubygems_api_key","()","<p>Returns the RubyGems.org API key\n",null,0],["rubygems_api_key=","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-rubygems_api_key-3D","(api_key)","<p>Sets the RubyGems.org API key to <code>api_key</code>\n",null,0],["rubygems_api_request","Gem::GemcutterUtilities","Ruby/classes/Gem/GemcutterUtilities.html#method-i-rubygems_api_request","(method, path, host = nil, &block)","",null,0],["rubygems_version","Gem","Ruby/classes/Gem.html#method-c-rubygems_version","()","<p>A Gem::Version for the currently running RubyGems\n",null,0],["run","ERB","Ruby/classes/ERB.html#method-i-run","(b=new_toplevel)","<p>Generate results and print them. (see ERB#result)\n",null,0],["run","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-i-run","(args, build_args=nil)","<p>Run the command specified by <code>args</code>.\n",null,0],["run","Gem::Ext::Builder","Ruby/classes/Gem/Ext/Builder.html#method-c-run","(command, results, command_name = nil)","",null,0],["run","Gem::GemRunner","Ruby/classes/Gem/GemRunner.html#method-i-run","(args)","<p>Run the gem command with the following arguments.\n",null,0],["run","Gem::Server","Ruby/classes/Gem/Server.html#method-i-run","()","",null,0],["run","Gem::Server","Ruby/classes/Gem/Server.html#method-c-run","(options)","",null,0],["run","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-c-run","(argv = ARGV)","<p>Runs the ri command line executable using <code>argv</code>\n",null,0],["run","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-run","()","<p>Looks up and displays ri data according to the options given.\n",null,0],["run","Rake::Application","Ruby/classes/Rake/Application.html#method-i-run","()","<p>Run the Rake application.  The run method performs the following three\nsteps:\n<p>Initialize the command line …\n",null,0],["run","Rake::Application","Ruby/classes/Rake/Application.html#method-i-run","()","<p>Run the Rake application.  The run method performs the following three\nsteps:\n<p>Initialize the command line …\n",null,0],["run","Sys","Ruby/classes/Sys.html#method-i-run","(cmd)","<p>Run the system command <code>cmd</code>.\n",null,0],["run","Thread","Ruby/classes/Thread.html#method-i-run","()","<p>Wakes up <em>thr</em>, making it eligible for scheduling.\n\n<pre><code>a = Thread.new { puts &quot;a&quot;; Thread.stop; puts &quot;c&quot; }\nsleep ...</code></pre>\n",null,0],["run","WEBrick::GenericServer","Ruby/classes/WEBrick/GenericServer.html#method-i-run","(sock)","<p>You must subclass GenericServer and implement #run which accepts a TCP\nclient socket\n",null,0],["run","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-run","(sock)","<p>Processes requests on <code>sock</code>\n",null,0],["run","ActiveRecord::ConnectionAdapters::ConnectionPool::Reaper","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Reaper.html#method-i-run","()","",null,1],["run","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-run","(*migration_classes)","<p>Runs the given migration classes. Last argument can specify options:\n<p>:direction (default is :up)\n<p>:revert …\n",null,1],["run","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-i-run","(*args)","",null,1],["run!","Build","Rails/classes/Build.html#method-i-run-21","(options = {})","",null,1],["run_callbacks","ActiveSupport::Callbacks","Rails/classes/ActiveSupport/Callbacks.html#method-i-run_callbacks","(kind, &block)","<p>Runs the callbacks for the given event.\n<p>Calls the before and around callbacks in the order they were set, …\n",null,1],["run_config","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-c-run_config","()","<p>include run file.\n",null,0],["run_in_transaction?","ActiveRecord::TestFixtures","Rails/classes/ActiveRecord/TestFixtures.html#method-i-run_in_transaction-3F","()","",null,1],["run_initializers","Rails::Initializable","Rails/classes/Rails/Initializable.html#method-i-run_initializers","(group=:default, *args)","",null,1],["run_load_hooks","ActiveSupport","Rails/classes/ActiveSupport.html#method-c-run_load_hooks","(name, base = Object)","",null,1],["run_with_threads","Rake::Application","Ruby/classes/Rake/Application.html#method-i-run_with_threads","()","<p>Run the given block with the thread startup and shutdown.\n",null,0],["run_with_threads","Rake::Application","Ruby/classes/Rake/Application.html#method-i-run_with_threads","()","<p>Run the given block with the thread startup and shutdown.\n",null,0],["runner","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-runner","(&blk)","",null,1],["runtime","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-c-runtime","()","",null,1],["runtime=","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-c-runtime-3D","(value)","",null,1],["runtime_dependencies","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-runtime_dependencies","()","<p>List of dependencies that will automatically be activated at runtime.\n",null,0],["safe_concat","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-safe_concat","(string)","",null,1],["safe_concat","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-safe_concat","(value)","",null,1],["safe_constantize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-safe_constantize","(camel_cased_word)","<p>Tries to find a constant with the name specified in the argument string.\n\n<pre>&#39;Module&#39;.safe_constantize    ...</pre>\n",null,1],["safe_constantize","String","Rails/classes/String.html#method-i-safe_constantize","()","<p><code>safe_constantize</code> tries to find a declared constant with the\nname specified in the string. It returns …\n",null,1],["safe_get","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-safe_get","(key)","",null,1],["safe_join","ActionView::Helpers::OutputSafetyHelper","Rails/classes/ActionView/Helpers/OutputSafetyHelper.html#method-i-safe_join","(array, sep=$,)","<p>This method returns a html safe string similar to what\n<code>Array#join</code> would return. All items in the array, …\n",null,1],["safe_level","Thread","Ruby/classes/Thread.html#method-i-safe_level","()","<p>Returns the safe level in effect for <em>thr</em>. Setting thread-local\nsafe levels can help when implementing …\n",null,0],["safe_ln","FileUtils","Ruby/classes/FileUtils.html#method-i-safe_ln","(*args)","<p>Attempt to do a normal file link, but fall back to a copy if the link\nfails.\n",null,0],["safe_unlink","FileUtils","Ruby/classes/FileUtils.html#method-c-safe_unlink","(list, options = {})","",null,0],["sample","Array","Ruby/classes/Array.html#method-i-sample","(p1)","<p>Choose a random element or <code>n</code> random elements from the array.\n<p>The elements are chosen by using random and …\n",null,0],["sandbox?","Rails::Console","Rails/classes/Rails/Console.html#method-i-sandbox-3F","()","",null,1],["sanitize","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-sanitize","(spec)","<p>Sanitize the descriptive fields in the spec.  Sometimes non-ASCII\ncharacters will garble the site index. …\n",null,0],["sanitize","ActionView::Helpers::SanitizeHelper","Rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize","(html, options = {})","<p>This <code>sanitize</code> helper will html encode all tags and strip all\nattributes that aren&#39;t specifically …\n",null,1],["sanitize","HTML::FullSanitizer","Rails/classes/HTML/FullSanitizer.html#method-i-sanitize","(text, options = {})","",null,1],["sanitize","HTML::Sanitizer","Rails/classes/HTML/Sanitizer.html#method-i-sanitize","(text, options = {})","",null,1],["sanitize_conditions","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_conditions","(condition, table_name = self.table_name)","",null,1],["sanitize_css","ActionView::Helpers::SanitizeHelper","Rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize_css","(style)","<p>Sanitizes a block of CSS code. Used by <code>sanitize</code> when it comes\nacross a style attribute.\n",null,1],["sanitize_css","HTML::WhiteListSanitizer","Rails/classes/HTML/WhiteListSanitizer.html#method-i-sanitize_css","(style)","<p>Sanitizes a block of css code. Used by #sanitize when it comes across a\nstyle attribute\n",null,1],["sanitize_limit","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-sanitize_limit","(limit)","<p>Sanitizes the given LIMIT parameter in order to prevent SQL injection.\n<p>The <code>limit</code> may be anything that …\n",null,1],["sanitize_path","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-sanitize_path","(path)","<p>Removes directories from <code>path</code> that are outside the current\ndirectory\n",null,0],["sanitize_sql","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql","(condition, table_name = self.table_name)","",null,1],["sanitize_sql_array","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_array","(ary)","<p>Accepts an array of conditions. The array has each value sanitized and\ninterpolated into the SQL statement. …\n",null,1],["sanitize_sql_for_assignment","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_for_assignment","(assignments, default_table_name = self.table_name)","<p>Accepts an array, hash, or string of SQL conditions and sanitizes them into\na valid SQL fragment for …\n",null,1],["sanitize_sql_for_conditions","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_for_conditions","(condition, table_name = self.table_name)","<p>Accepts an array, hash, or string of SQL conditions and sanitizes them into\na valid SQL fragment for …\n",null,1],["sanitize_sql_hash","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_hash","(attrs, default_table_name = self.table_name)","",null,1],["sanitize_sql_hash_for_assignment","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_hash_for_assignment","(attrs, table)","<p>Sanitizes a hash of attribute/value pairs into SQL conditions for a SET\nclause.\n\n<pre>{ status: nil, group_id: ...</pre>\n",null,1],["sanitize_sql_hash_for_conditions","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_hash_for_conditions","(attrs, default_table_name = self.table_name)","<p>Sanitizes a hash of attribute/value pairs into SQL conditions for a WHERE\nclause.\n\n<pre>{ name: &quot;foo&#39;bar&quot;, group_id: ...</pre>\n",null,1],["sanitize_string","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-sanitize_string","(string)","<p>Sanitize a single string.\n",null,0],["sanitizeable?","HTML::LinkSanitizer","Rails/classes/HTML/LinkSanitizer.html#method-i-sanitizeable-3F","(text)","",null,1],["sanitizeable?","HTML::Sanitizer","Rails/classes/HTML/Sanitizer.html#method-i-sanitizeable-3F","(text)","",null,1],["satisfied_by?","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-satisfied_by-3F","(version)","<p>True if <code>version</code> satisfies this Requirement.\n",null,0],["satisfied_by?","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-satisfied_by-3F","(version)","<p>True if <code>version</code> satisfies this Requirement.\n",null,0],["satisfies_requirement?","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-satisfies_requirement-3F","(dependency)","<p>Checks if this specification meets the requirement of\n<code>dependency</code>.\n",null,0],["saturday?","Date","Ruby/classes/Date.html#method-i-saturday-3F","()","<p>Returns true if the date is Saturday.\n",null,0],["saturday?","Time","Ruby/classes/Time.html#method-i-saturday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Saturday.\n\n<pre><code>t = Time.local(2006, 6, 10)      #=&gt; 2006-06-10 00:00:00 -0500 ...\n</code></pre>\n",null,0],["save","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-save","()","<p>Saves all entries in the store\n",null,0],["save","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-save","(*)","<p>Saves the model.\n<p>If the model is new a record gets created in the database, otherwise the\nexisting record …\n",null,1],["save","ActiveRecord::Validations","Rails/classes/ActiveRecord/Validations.html#method-i-save","(options={})","<p>The validation process on save can be skipped by passing <code>validate:\nfalse</code>. The regular Base#save method …\n",null,1],["save","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-i-save","()","<p>POST create\n",null,1],["save!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-save-21","(*)","<p>Saves the model.\n<p>If the model is new a record gets created in the database, otherwise the\nexisting record …\n",null,1],["save!","ActiveRecord::Validations","Rails/classes/ActiveRecord/Validations.html#method-i-save-21","(options={})","<p>Attempts to save the record just like Base#save but will raise a\n<code>RecordInvalid</code> exception instead of returning …\n",null,1],["save_cache","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-save_cache","()","<p>Writes the cache file for this store\n",null,0],["save_class","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-save_class","(klass)","<p>Writes the ri data for <code>klass</code> (or module)\n",null,0],["save_exception_mode","BigDecimal","Ruby/classes/BigDecimal.html#method-c-save_exception_mode","()","<p>Excecute the provided block, but preserve the exception mode\n\n<pre><code>BigDecimal.save_exception_mode do\n  BigDecimal.mode(BigDecimal::EXCEPTION_OVERFLOW, ...</code></pre>\n",null,0],["save_history","IRB::Context","Ruby/classes/IRB/Context.html#method-i-save_history","()","<p>A copy of the default <code>IRB.conf[:SAVE_HISTORY]</code>\n",null,0],["save_history=","IRB::Context","Ruby/classes/IRB/Context.html#method-i-save_history-3D","(val)","<p>Sets <code>IRB.conf[:SAVE_HISTORY]</code> to the given <code>val</code> and\ncalls #init_save_history with this context.\n<p>Will store …\n",null,0],["save_limit","BigDecimal","Ruby/classes/BigDecimal.html#method-c-save_limit","()","<p>Excecute the provided block, but preserve the precision limit\n\n<pre><code>BigDecimal.limit(100)\nputs BigDecimal.limit ...</code></pre>\n",null,0],["save_method","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-save_method","(klass, method)","<p>Writes the ri data for <code>method</code> on <code>klass</code>\n",null,0],["save_page","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-save_page","(page)","<p>Writes the ri data for <code>page</code>\n",null,0],["save_rounding_mode","BigDecimal","Ruby/classes/BigDecimal.html#method-c-save_rounding_mode","()","<p>Excecute the provided block, but preserve the rounding mode\n\n<pre><code>BigDecimal.save_exception_mode do\n  BigDecimal.mode(BigDecimal::ROUND_MODE, ...</code></pre>\n",null,0],["say","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-say","(statement=\"\")","<p>Display a statement.\n",null,0],["say","Gem::UserInteraction","Ruby/classes/Gem/UserInteraction.html#method-i-say","(*args)","",null,0],["say","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-say","(message, subitem=false)","",null,1],["say_with_time","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-say_with_time","(message)","",null,1],["scalar","Matrix","Ruby/classes/Matrix.html#method-c-scalar","(n, value)","<p>Creates an <code>n</code> by <code>n</code> diagonal matrix where each\ndiagonal element is <code>value</code>.\n\n<pre><code>Matrix.scalar(2, 5)\n  =&gt; 5 0\n ...\n</code></pre>\n",null,0],["scalar","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-scalar","(*args)","",null,0],["scalar","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-scalar","(value, anchor, tag, plain, quoted, style)","<p>Called when a scalar <code>value</code> is found.  The scalar may have an\n<code>anchor</code>, a <code>tag</code>, be implicitly <code>plain</code>\nor implicitly …\n",null,0],["scalar","Psych::TreeBuilder","Ruby/classes/Psych/TreeBuilder.html#method-i-scalar","(value, anchor, tag, plain, quoted, style)","",null,0],["scalar=","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-scalar-3D","(value)","<p>Emit a scalar with <code>value</code>\n",null,0],["scan","OpenSSL::X509::Name::RFC2253DN","Ruby/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-scan","(dn)","",null,0],["scan","RDoc::Parser::C","Ruby/classes/RDoc/Parser/C.html#method-i-scan","()","<p>Extracts the classes, modules, methods, attributes, constants and aliases\nfrom a C file and returns an …\n",null,0],["scan","RDoc::Parser::ChangeLog","Ruby/classes/RDoc/Parser/ChangeLog.html#method-i-scan","()","<p>Converts the ChangeLog into an RDoc::Markup::Document\n",null,0],["scan","RDoc::Parser::Markdown","Ruby/classes/RDoc/Parser/Markdown.html#method-i-scan","()","<p>Creates an Markdown-format TopLevel for the given file.\n",null,0],["scan","RDoc::Parser::RD","Ruby/classes/RDoc/Parser/RD.html#method-i-scan","()","<p>Creates an rd-format TopLevel for the given file.\n",null,0],["scan","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-scan","()","<p>Scans this ruby file for ruby constructs\n",null,0],["scan","RDoc::Parser::Simple","Ruby/classes/RDoc/Parser/Simple.html#method-i-scan","()","<p>Extract the file contents and attach them to the TopLevel as a comment\n",null,0],["scan","REXML::IOSource","Ruby/classes/REXML/IOSource.html#method-i-scan","(pattern, cons=false)","",null,0],["scan","REXML::Source","Ruby/classes/REXML/Source.html#method-i-scan","(pattern, cons=false)","<p>Scans the source for a given pattern.  Note, that this is not your usual\nscan() method.  For one thing, …\n",null,0],["scan","String","Ruby/classes/String.html#method-i-scan","(p1)","<p>Both forms iterate through <em>str</em>, matching the pattern (which may be\na <code>Regexp</code> or a <code>String</code>). For each match, …\n",null,0],["scan","StringScanner","Ruby/classes/StringScanner.html#method-i-scan","(p1)","<p>Tries to match with <code>pattern</code> at the current position. If\nthere&#39;s a match, the scanner advances the …\n",null,0],["scan_full","StringScanner","Ruby/classes/StringScanner.html#method-i-scan_full","(p1, p2, p3)","<p>Tests whether the given <code>pattern</code> is matched from the current\nscan pointer. Advances the scan pointer if …\n",null,0],["scan_until","StringScanner","Ruby/classes/StringScanner.html#method-i-scan_until","(p1)","<p>Scans the string <em>until</em> the <code>pattern</code> is matched. \nReturns the substring up to and including the end of …\n",null,0],["scanf","IO","Ruby/classes/IO.html#method-i-scanf","(str)","<p>Scans the current string until the match is exhausted, yielding each match\nas it is encountered in the …\n",null,0],["scanf","Kernel","Ruby/classes/Kernel.html#method-i-scanf","(format, &b)","<p>Scans STDIN for data matching <code>format</code>.  See IO#scanf for\ndetails.\n<p>See Scanf for details on creating a format …\n",null,0],["scanf","String","Ruby/classes/String.html#method-i-scanf","(fstr)","<p>Scans the current string. If a block is given, it functions exactly like\nblock_scanf.\n\n<pre><code>arr = &quot;123 456&quot;.scanf(&quot;%d%d&quot;) ...</code></pre>\n",null,0],["schema_cache=","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-schema_cache-3D","(cache)","",null,1],["schema_creation","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-schema_creation","()","",null,1],["schema_creation","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-schema_creation","()","",null,1],["schema_creation","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-schema_creation","()","",null,1],["schema_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-schema_exists-3F","(name)","<p>Returns true if schema exists.\n",null,1],["schema_names","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-schema_names","()","<p>Returns an array of schema names.\n",null,1],["schema_search_path","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-schema_search_path","()","<p>Returns the active schema search path.\n",null,1],["schema_search_path=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-schema_search_path-3D","(schema_csv)","<p>Sets the schema search path to a string of comma-separated schema names.\nNames beginning with $ have …\n",null,1],["scheme=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-scheme-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["scheme_list","URI","Ruby/classes/URI.html#method-c-scheme_list","()","<p>Returns a Hash of the defined schemes\n",null,0],["scope","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-scope","()","<p>returns scope.\n",null,0],["scope","ActionDispatch::Routing::Mapper::Scoping","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-scope","(*args)","<p>Scopes a set of routes to the given default options.\n<p>Take the following route definition as an example: …\n",null,1],["scope","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-scope","()","<p>Returns a <code>Relation</code> object for the records in this association\n",null,1],["scope","ActiveRecord::Scoping::Named::ClassMethods","Rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-scope","(name, body, &block)","<p>Adds a class method for retrieving and querying objects. A scope represents\na narrowing of a database …\n",null,1],["scope=","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-scope-3D","(val)","<p>setter for scope <code>val</code>\n",null,0],["scope_for_create","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-scope_for_create","()","",null,1],["scope_name","Rake::Task","Ruby/classes/Rake/Task.html#method-i-scope_name","(scope, task_name)","<p>Apply the scope to the task name according to the rules for this kind of\ntask.  Generic tasks will accept …\n",null,0],["scoping","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-scoping","()","<p>We don&#39;t want this object to be put on the scoping stack, because that\ncould create an infinite loop …\n",null,1],["scoping","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-scoping","()","<p>Scope all queries to the current scope.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Comment</span>.<span class=\"ruby-identifier\">where</span>(<span class=\"ruby-identifier\">post_id</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-value\">1</span>).<span class=\"ruby-identifier\">scoping</span> <span class=\"ruby-keyword\">do</span>\n  <span class=\"ruby-constant\">Comment</span>.<span class=\"ruby-identifier\">first</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["scrl","Curses","Ruby/classes/Curses.html#method-c-scrl","(p1)","<p>Scrolls the current window Fixnum <code>num</code> lines. The current\ncursor position is not changed.\n<p>For positive …\n",null,0],["scrl","Curses::Window","Ruby/classes/Curses/Window.html#method-i-scrl","(p1)","<p>Scrolls the current window Fixnum <code>num</code> lines. The current\ncursor position is not changed.\n<p>For positive …\n",null,0],["scroll","Curses::Window","Ruby/classes/Curses/Window.html#method-i-scroll","()","<p>Scrolls the current window up one line.\n",null,0],["scrolling_list","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-scrolling_list","(name = \"\", *values)","",null,0],["scrollok","Curses::Window","Ruby/classes/Curses/Window.html#method-i-scrollok","(p1)","<p>Controls what happens when the cursor of a window is moved off the edge of\nthe window or scrolling region, …\n",null,0],["search","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-search","(key)","<p>Returns the associated job for the given <code>key</code>.\n<p>If given an Integer, it will return the <code>key</code> index for the …\n",null,0],["search","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-search","(keys, charset = nil)","<p>Sends a SEARCH command to search the mailbox for messages that match the\ngiven searching criteria, and …\n",null,0],["search","OptionParser::List","Ruby/classes/OptionParser/List.html#method-i-search","(id, key)","<p>Searches <code>key</code> in <code>id</code> list. The result is returned\nor yielded if a block is given. If it isn&#39;t found, …\n",null,0],["search_const","OptionParser","Ruby/classes/OptionParser.html#method-i-search_const","(klass, name)","",null,0],["search_convpath","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-c-search_convpath","(*args)","<p>Returns a conversion path.\n\n<pre><code>p Encoding::Converter.search_convpath(&quot;ISO-8859-1&quot;, &quot;EUC-JP&quot;)\n#=&gt; [[#&lt;Encoding:ISO-8859-1&gt;, ...\n</code></pre>\n",null,0],["search_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-search_field","(object_name, method, options = {})","<p>Returns an input of type “search” for accessing a specified attribute\n(identified by <code>method</code> …\n",null,1],["search_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-search_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “search”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,1],["search_for_dependency","Gem::SpecFetcher","Ruby/classes/Gem/SpecFetcher.html#method-i-search_for_dependency","(dependency, matching_platform=true)","<p>Find and fetch gem name tuples that match <code>dependency</code>.\n<p>If <code>matching_platform</code> is false, gems for all platforms …\n",null,0],["search_full","StringScanner","Ruby/classes/StringScanner.html#method-i-search_full","(p1, p2, p3)","<p>Scans the string <em>until</em> the <code>pattern</code> is matched.\nAdvances the scan pointer if <code>advance_pointer_p</code>, otherwise …\n",null,0],["search_record","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-search_record","()","<p>Search record used by RDoc::Generator::JsonIndex\n",null,0],["search_record","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-search_record","()","<p>Used by RDoc::Generator::JsonIndex to create a record for the search\nengine.\n",null,0],["search_record","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-search_record","()","<p>Search record used by RDoc::Generator::JsonIndex\n",null,0],["search_servlet","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-search_servlet","(path)","<p>Finds a servlet for <code>path</code>\n",null,0],["search_string","RDoc::Generator::JsonIndex","Ruby/classes/RDoc/Generator/JsonIndex.html#method-i-search_string","(string)","<p>Removes whitespace and downcases <code>string</code>\n",null,0],["sec","Time","Ruby/classes/Time.html#method-i-sec","()","<p>Returns the second of the minute (0..60) for <em>time</em>.\n<p><strong>Note:</strong> Seconds range from zero to 60 to allow the system …\n",null,0],["sec=","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-sec-3D","(value)","<p>Set <code>value</code> as the new date/time component.\n<p>Raises an ArgumentError if the given <code>value</code> isn&#39;t between …\n",null,0],["second","Array","Rails/classes/Array.html#method-i-second","()","<p>Equal to <code>self[1]</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-node\">%w( a b c d e )</span>.<span class=\"ruby-identifier\">second</span> <span class=\"ruby-comment\"># =&gt; &quot;b&quot;</span>\n</pre>\n",null,1],["second","Numeric","Rails/classes/Numeric.html#method-i-second","()","",null,1],["second=","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-second-3D","(second)","",null,0],["second=","RSS::Maker::ITunesItemModel::ITunesDurationBase","Ruby/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html#method-i-second-3D","(second)","",null,0],["seconds","Numeric","Rails/classes/Numeric.html#method-i-seconds","()","<p>Enables the use of time calculations and declarations, like 45.minutes +\n2.hours + 4.years.\n<p>These methods …\n",null,1],["seconds_since_midnight","DateTime","Rails/classes/DateTime.html#method-i-seconds_since_midnight","()","<p>Seconds since midnight: DateTime.now.seconds_since_midnight.\n",null,1],["seconds_since_midnight","Time","Rails/classes/Time.html#method-i-seconds_since_midnight","()","<p>Seconds since midnight: Time.now.seconds_since_midnight\n",null,1],["seconds_to_utc_offset","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-seconds_to_utc_offset","(seconds, colon = true)","<p>Assumes self represents an offset from UTC in seconds (as returned from\nTime#utc_offset) and turns this …\n",null,1],["seconds_until_end_of_day","DateTime","Rails/classes/DateTime.html#method-i-seconds_until_end_of_day","()","<p>Returns the number of seconds until 23:59:59.\n\n<pre>DateTime.new(2012, 8, 29,  0,  0,  0).seconds_until_end_of_day ...</pre>\n",null,1],["seconds_until_end_of_day","Time","Rails/classes/Time.html#method-i-seconds_until_end_of_day","()","<p>Returns the number of seconds until 23:59:59.\n\n<pre>Time.new(2012, 8, 29,  0,  0,  0).seconds_until_end_of_day ...</pre>\n",null,1],["secret_token","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-secret_token","(request)","",null,1],["section","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-section","(name)","",null,0],["section","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-section","()","<p>The section this CodeObject is in.  Sections allow grouping of constants,\nattributes and methods inside …\n",null,0],["section","ActionDispatch::Routing::ConsoleFormatter","Rails/classes/ActionDispatch/Routing/ConsoleFormatter.html#method-i-section","(routes)","",null,1],["section","ActionDispatch::Routing::HtmlTableFormatter","Rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-i-section","(routes)","",null,1],["section_contents","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-section_contents","()","<p>Returns RDoc::Context::Section objects referenced in this context for use\nin a table of contents.\n",null,0],["section_title","ActionDispatch::Routing::ConsoleFormatter","Rails/classes/ActionDispatch/Routing/ConsoleFormatter.html#method-i-section_title","(title)","",null,1],["section_title","ActionDispatch::Routing::HtmlTableFormatter","Rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-i-section_title","(title)","",null,1],["sections","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-sections","()","",null,0],["sections","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-sections","()","<p>Sections in this context\n",null,0],["secure=","CGI::Cookie","Ruby/classes/CGI/Cookie.html#method-i-secure-3D","(val)","<p>Set whether the Cookie is a secure cookie or not.\n<p><code>val</code> must be a boolean.\n",null,0],["security","","Ruby/files/ruby/doc/security_rdoc.html","","<p>Ruby Security\n<p>The Ruby programming language is large and complex and there are many\nsecurity pitfalls …\n",null,0],["see","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-see","()","<p>A method/attribute to look at, in particular if this method/attribute has\nno documentation.\n<p>It can be …\n",null,0],["seed","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-seed","()","<p>See the OpenSSL documentation for EC_GROUP_get0_seed()\n",null,0],["seed","Random","Ruby/classes/Random.html#method-i-seed","()","<p>Returns the seed value used to initialize the generator. This may be used\nto initialize another generator …\n",null,0],["seed=","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-seed-3D","(p1)","<p>See the OpenSSL documentation for EC_GROUP_set_seed()\n",null,0],["seek","ARGF","Ruby/classes/ARGF.html#method-i-seek","(*args)","<p>Seeks to offset <em>amount</em> (an <code>Integer</code>) in the\n<code>ARGF</code> stream according to the value of <em>whence</em>. See\n+IO#seek+ …\n",null,0],["seek","Dir","Ruby/classes/Dir.html#method-i-seek","(p1)","<p>Seeks to a particular location in <em>dir</em>. <em>integer</em> must be a\nvalue returned by <code>Dir#tell</code>.\n\n<pre><code>d = Dir.new(&quot;testdir&quot;) ...</code></pre>\n",null,0],["seek","Gem::Package::TarReader","Ruby/classes/Gem/Package/TarReader.html#method-i-seek","(name)","<p>Seeks through the tar file until it finds the <code>entry</code> with\n<code>name</code> and yields it.  Rewinds the tar file to …\n",null,0],["seek","IO","Ruby/classes/IO.html#method-i-seek","(p1, p2 = v2)","<p>Seeks to a given offset <em>anInteger</em> in the stream according to the\nvalue of <em>whence</em>:\n\n<pre><code>IO::SEEK_CUR  | Seeks ...</code></pre>\n",null,0],["seek","StringIO","Ruby/classes/StringIO.html#method-i-seek","(p1, p2 = v2)","<p>Seeks to a given offset <em>amount</em> in the stream according to the\nvalue of <em>whence</em> (see IO#seek).\n",null,0],["select","Array","Ruby/classes/Array.html#method-i-select","()","<p>Returns a new array containing all elements of <code>ary</code> for which\nthe given <code>block</code> returns a true value.\n<p>If …\n",null,0],["select","DBM","Ruby/classes/DBM.html#method-i-select","()","<p>Returns a new array consisting of the [key, value] pairs for which the code\nblock returns true.\n",null,0],["select","ENV","Ruby/classes/ENV.html#method-c-select","()","<p>Returns a copy of the environment for entries where the block returns true.\n<p>Returns an Enumerator if no …\n",null,0],["select","Enumerable","Ruby/classes/Enumerable.html#method-i-select","()","<p>Returns an array containing all elements of <code>enum</code> for which the\ngiven <code>block</code> returns a true value.\n<p>If no …\n",null,0],["select","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-select","()","",null,0],["select","GDBM","Ruby/classes/GDBM.html#method-i-select","()","<p>Returns a new array of all key-value pairs of the database for which\n<em>block</em> evaluates to true.\n",null,0],["select","Hash","Ruby/classes/Hash.html#method-i-select","()","<p>Returns a new hash consisting of entries for which the block returns true.\n<p>If no block is given, an enumerator …\n",null,0],["select","IO","Ruby/classes/IO.html#method-c-select","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Calls select(2) system call. It monitors given arrays of <code>IO</code>\nobjects, waits one or more of <code>IO</code> objects …\n",null,0],["select","Kernel","Ruby/classes/Kernel.html#method-i-select","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Calls select(2) system call. It monitors given arrays of <code>IO</code>\nobjects, waits one or more of <code>IO</code> objects …\n",null,0],["select","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-select","(mailbox)","<p>Sends a SELECT command to select a <code>mailbox</code> so that messages in\nthe <code>mailbox</code> can be accessed.\n<p>After you …\n",null,0],["select","SDBM","Ruby/classes/SDBM.html#method-i-select","()","<p>Returns a new Array of key-value pairs for which the block returns\n<code>true</code>.\n<p>Example:\n\n<pre><code>require &#39;sdbm&#39;\n\nSDBM.open ...\n</code></pre>\n",null,0],["select","Struct","Ruby/classes/Struct.html#method-i-select","(*args)","<p>Invokes the block passing in successive elements from <em>struct</em>,\nreturning an array containing those elements …\n",null,0],["select","URI::Generic","Ruby/classes/URI/Generic.html#method-i-select","(*components)","<p>Args\n<p><code>components</code> &mdash; Multiple Symbol arguments defined in URI::HTTP\n\n<p>Description\n",null,0],["select","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-select","( *keys )","<p>If a block is provided, returns a new array containing [key, value] pairs\nfor which the block returns …\n",null,0],["select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-select","(method, choices, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::FormOptionsHelper#select for form builders:\n\n<pre>&lt;%= form_for @post do |f| %&gt;\n  ...</pre>\n",null,1],["select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-select","(object, method, choices, options = {}, html_options = {})","<p>Create a select tag and a series of contained option tags for the provided\nobject and method. The option …\n",null,1],["select","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-select","(select = nil, &block)","<p>Works in two ways.\n<p><strong>First:</strong> Specify a subset of fields to be selected from the\nresult set.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["select","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select","(sql, name = nil, binds = [])","<p>Returns an array of record hashes with the column names as keys and column\nvalues as values.\n",null,1],["select","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-select","(sql, name = nil, binds = [])","<p>Returns an array of record hashes with the column names as keys and column\nvalues as values.\n",null,1],["select","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-select","(*fields)","<p>Works in two unique ways.\n<p>First: takes a block so it can be used just like Array#select.\n\n<pre>Model.all.select ...</pre>\n",null,1],["select","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-select","(root)","<p>Selects and returns an array with all matching elements, beginning with one\nnode and traversing through …\n",null,1],["select","HTML::Tag","Rails/classes/HTML/Tag.html#method-i-select","(selector, *values)","",null,1],["select!","Array","Ruby/classes/Array.html#method-i-select-21","()","<p>Invokes the given block passing in successive elements from\n<code>self</code>, deleting elements for which the block …\n",null,0],["select!","ENV","Ruby/classes/ENV.html#method-c-select-21","()","<p>Equivalent to ENV#keep_if but returns <code>nil</code> if no changes were\nmade.\n",null,0],["select!","Hash","Ruby/classes/Hash.html#method-i-select-21","()","<p>Equivalent to <code>Hash#keep_if</code>, but returns <code>nil</code> if no\nchanges were made.\n",null,0],["select!","Set","Ruby/classes/Set.html#method-i-select-21","(&block)","<p>Equivalent to Set#keep_if, but returns nil if no changes were made.\n",null,0],["select_all","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_all","(arel, name = nil, binds = [])","<p>Returns an array of record hashes with the column names as keys and column\nvalues as values.\n",null,1],["select_all","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-select_all","(arel, name = nil, binds = [])","",null,1],["select_date","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_date","(date = Date.current, options = {}, html_options = {})","<p>Returns a set of html select-tags (one for year, month, and day)\npre-selected with the <code>date</code>. It&#39;s …\n",null,1],["select_datetime","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_datetime","(datetime = Time.current, options = {}, html_options = {})","<p>Returns a set of html select-tags (one for year, month, day, hour, minute,\nand second) pre-selected with …\n",null,1],["select_day","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_day","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the days 1 through 31 with\nthe current day selected. The …\n",null,1],["select_first","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-select_first","(root)","<p>Similar to #select but returns the first matching element. Returns\n<code>nil</code> if no element matches the selector. …\n",null,1],["select_hour","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_hour","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the hours 0 through 23 with\nthe current hour selected. …\n",null,1],["select_minute","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_minute","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the minutes 0 through 59 with\nthe current minute selected. …\n",null,1],["select_month","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_month","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the months January through\nDecember with the current month …\n",null,1],["select_one","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_one","(arel, name = nil, binds = [])","<p>Returns a record hash with the column names as keys and column values as\nvalues.\n",null,1],["select_rows","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_rows","(sql, name = nil)","<p>Returns an array of arrays containing the field values. Order is the same\nas that returned by <code>columns</code> …\n",null,1],["select_rows","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-select_rows","(sql, name = nil)","<p>Returns an array of arrays containing the field values. Order is the same\nas that returned by <code>columns</code> …\n",null,1],["select_rows","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-select_rows","(sql, name = nil)","<p>DATABASE STATEMENTS ======================================\n",null,1],["select_rows","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-select_rows","(sql, name = nil)","<p>Executes a SELECT query and returns an array of rows. Each row is an array\nof field values.\n",null,1],["select_rows","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-select_rows","(sql, name = nil)","",null,1],["select_second","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_second","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the seconds 0 through 59 with\nthe current second selected. …\n",null,1],["select_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-select_tag","(name, option_tags = nil, options = {})","<p>Creates a dropdown selection box, or if the <code>:multiple</code> option\nis set to true, a multiple choice selection …\n",null,1],["select_time","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_time","(datetime = Time.current, options = {}, html_options = {})","<p>Returns a set of html select-tags (one for hour and minute). You can set\n<code>:time_separator</code> key to format …\n",null,1],["select_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_value","(arel, name = nil, binds = [])","<p>Returns a single value from a record\n",null,1],["select_values","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_values","(arel, name = nil)","<p>Returns an array of the values of the first column in a select:\n\n<pre>select_values(&quot;SELECT id FROM companies ...</pre>\n",null,1],["select_year","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_year","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the five years on each side\nof the current, which is selected. …\n",null,1],["selector","HTML","Rails/classes/HTML.html#method-c-selector","(statement, *values)","<p>See HTML::Selector.new\n",null,1],["self","TracePoint","Ruby/classes/TracePoint.html#method-i-self","()","<p>Return the trace object during event\n<p>Same as TracePoint#binding:\n\n<pre><code>trace.binding.eval(&#39;self&#39;)</code></pre>\n",null,0],["send","BasicSocket","Ruby/classes/BasicSocket.html#method-i-send","(p1, p2, p3 = v3)","<p>send <em>mesg</em> via <em>basicsocket</em>.\n<p><em>mesg</em> should be a string.\n<p><em>flags</em> should be a bitwise OR of Socket::MSG_* constants. …\n",null,0],["send","Object","Ruby/classes/Object.html#method-i-send","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments\nspecified. You can use <code>__send__</code> if …\n",null,0],["send","UDPSocket","Ruby/classes/UDPSocket.html#method-i-send","(p1, p2, p3, p4)","<p>Sends <em>mesg</em> via <em>udpsocket</em>.\n<p><em>flags</em> should be a bitwise OR of Socket::MSG_* constants.\n\n<pre><code>u1 = UDPSocket.new\nu1.bind(&quot;127.0.0.1&quot;, ...</code></pre>\n",null,0],["send_action","ActionController::ImplicitRender","Rails/classes/ActionController/ImplicitRender.html#method-i-send_action","(method, *args)","",null,1],["send_data","ActionController::DataStreaming","Rails/classes/ActionController/DataStreaming.html#method-i-send_data","(data, options = {})","<p>Sends the given binary data to the browser. This method is similar to\n<code>render text: data</code>, but also allows …\n",null,1],["send_data","ActionController::Instrumentation","Rails/classes/ActionController/Instrumentation.html#method-i-send_data","(data, options = {})","",null,1],["send_data","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-send_data","(event)","",null,1],["send_file","ActionController::DataStreaming","Rails/classes/ActionController/DataStreaming.html#method-i-send_file","(path, options = {})","<p>Sends the file. This uses a server-appropriate method (such as X-Sendfile)\nvia the Rack::Sendfile middleware. …\n",null,1],["send_file","ActionController::Instrumentation","Rails/classes/ActionController/Instrumentation.html#method-i-send_file","(path, options={})","",null,1],["send_file","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-send_file","(event)","",null,1],["send_gem","Gem::Commands::PushCommand","Ruby/classes/Gem/Commands/PushCommand.html#method-i-send_gem","(name)","",null,0],["send_io","UNIXSocket","Ruby/classes/UNIXSocket.html#method-i-send_io","(p1)","<p>Sends <em>io</em> as file descriptor passing.\n\n<pre><code>s1, s2 = UNIXSocket.pair\n\ns1.send_io STDOUT\nstdout = s2.recv_io\n ...</code></pre>\n",null,0],["send_mail","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-send_mail","(msgstr, from_addr, *to_addrs)","",null,0],["send_message","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-send_message","(msgstr, from_addr, *to_addrs)","<p>Sends <code>msgstr</code> as a message.  Single CR (“r”) and LF (“n”) found\nin the <code>msgstr</code>, are …\n",null,0],["send_request","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-send_request","(name, path, data = nil, header = nil)","<p>Sends an HTTP request to the HTTP server. Also sends a DATA string if\n<code>data</code> is given.\n<p>Returns a Net::HTTPResponse …\n",null,0],["sendcmd","Net::FTP","Ruby/classes/Net/FTP.html#method-i-sendcmd","(cmd)","<p>Sends a command and returns the response.\n",null,0],["sender","IRB::Frame","Ruby/classes/IRB/Frame.html#method-c-sender","()","<p>Returns the binding context of the caller from the last frame initialized\n",null,0],["sendmail","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-sendmail","(msgstr, from_addr, *to_addrs)","",null,0],["sendmsg","BasicSocket","Ruby/classes/BasicSocket.html#method-i-sendmsg","(*args)","<p>sendmsg sends a message using sendmsg(2) system call in blocking manner.\n<p><em>mesg</em> is a string to send.\n<p><em>flags</em> …\n",null,0],["sendmsg_nonblock","BasicSocket","Ruby/classes/BasicSocket.html#method-i-sendmsg_nonblock","(*args)","<p>sendmsg_nonblock sends a message using sendmsg(2) system call in\nnon-blocking manner.\n<p>It is similar to …\n",null,0],["separator","OptionParser","Ruby/classes/OptionParser.html#method-i-separator","(string)","<p>Add separator in summary.\n",null,0],["seplist","PP::PPMethods","Ruby/classes/PP/PPMethods.html#method-i-seplist","(list, sep=nil, iter_method=:each)","<p>Adds a separated list. The list is separated by comma with breakable space,\nby default.\n<p>#seplist iterates …\n",null,0],["seq=","Psych::Coder","Ruby/classes/Psych/Coder.html#method-i-seq-3D","(list)","<p>Emit a sequence of <code>list</code>\n",null,0],["sequence","RDoc::Context::Section","Ruby/classes/RDoc/Context/Section.html#method-i-sequence","()","<p>Section sequence number (deprecated)\n",null,0],["sequence_name","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-sequence_name","()","",null,1],["sequence_name=","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-sequence_name-3D","(value)","<p>Sets the name of the sequence to use when generating ids to the given\nvalue, or (if the value is nil …\n",null,1],["serial","OpenSSL::OCSP::CertificateId","Ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-serial","()","",null,0],["serial","OpenSSL::PKCS7::RecipientInfo","Ruby/classes/OpenSSL/PKCS7/RecipientInfo.html#method-i-serial","()","",null,0],["serial","OpenSSL::PKCS7::SignerInfo","Ruby/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-serial","()","",null,0],["serial","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-serial","()","",null,0],["serial","OpenSSL::X509::Revoked","Ruby/classes/OpenSSL/X509/Revoked.html#method-i-serial","()","",null,0],["serial=","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-serial-3D","(p1)","",null,0],["serial=","OpenSSL::X509::Revoked","Ruby/classes/OpenSSL/X509/Revoked.html#method-i-serial-3D","(p1)","",null,0],["serial_sequence","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-serial_sequence","(table, column)","",null,1],["serializable_hash","ActiveModel::Serialization","Rails/classes/ActiveModel/Serialization.html#method-i-serializable_hash","(options = nil)","<p>Returns a serialized hash of your object.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Serialization</span>\n\n  <span class=\"ruby-identifier\">attr_accessor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["serializable_hash","ActiveRecord::Serialization","Rails/classes/ActiveRecord/Serialization.html#method-i-serializable_hash","(options = nil)","",null,1],["serialize","ActiveRecord::AttributeMethods::Serialization::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html#method-i-serialize","(attr_name, class_name = Object)","<p>If you have an attribute that needs to be saved to the database as an\nobject, and retrieved as the same …\n",null,1],["serialized_attributes","ActiveRecord::AttributeMethods::Serialization","Rails/classes/ActiveRecord/AttributeMethods/Serialization.html#method-i-serialized_attributes","()","<p><strong>DEPRECATED</strong>: Use\nActiveRecord::AttributeMethods::Serialization::ClassMethods#serialized_attributes\nclass …\n",null,1],["serialized_attributes","ActiveRecord::AttributeMethods::Serialization::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html#method-i-serialized_attributes","","<p>Returns a hash of all the attributes that have been specified for\nserialization as keys and their class …\n",null,1],["serve","GServer","Ruby/classes/GServer.html#method-i-serve","(io)","",null,0],["serve","HttpServer","Ruby/classes/HttpServer.html#method-i-serve","(io)","<p>Handles the HTTP request and writes the response back to the client,\n<code>io</code>.\n<p>If an Exception is raised while …\n",null,0],["serve","XMLRPC::CGIServer","Ruby/classes/XMLRPC/CGIServer.html#method-i-serve","()","<p>Call this after you have added all you handlers to the server.\n<p>This method processes a XML-RPC method …\n",null,0],["serve","XMLRPC::ModRubyServer","Ruby/classes/XMLRPC/ModRubyServer.html#method-i-serve","()","<p>Call this after you have added all you handlers to the server.\n<p>This method processes a XML-RPC method …\n",null,0],["serve","XMLRPC::Server","Ruby/classes/XMLRPC/Server.html#method-i-serve","()","<p>Call this after you have added all you handlers to the server. This method\nstarts the server to listen …\n",null,0],["server_error?","WEBrick::HTTPStatus","Ruby/classes/WEBrick/HTTPStatus.html#method-c-server_error-3F","(code)","<p>Is <code>code</code> a server error status?\n",null,0],["server_name","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-server_name","()","<p>The server name this request is for\n",null,0],["server_port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-server_port","()","",null,1],["server_software","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-server_software","()","<p>Returns the lowercase name of the HTTP server software.\n",null,1],["service","DRb::ExtServManager","Ruby/classes/DRb/ExtServManager.html#method-i-service","(name)","",null,0],["service","WEBrick::CGI","Ruby/classes/WEBrick/CGI.html#method-i-service","(req, res)","<p>Services the request <code>req</code> which will fill in the response\n<code>res</code>.  See WEBrick::HTTPServlet::AbstractServlet#service …\n",null,0],["service","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-service","(req, res)","<p>Services <code>req</code> and fills in <code>res</code>\n",null,0],["service","WEBrick::HTTPServlet::AbstractServlet","Ruby/classes/WEBrick/HTTPServlet/AbstractServlet.html#method-i-service","(req, res)","<p>Dispatches to a <code>do_</code> method based on <code>req</code> if such a\nmethod is available.  (<code>do_GET</code> for a GET request).  …\n",null,0],["service","XMLRPC::WEBrickServlet","Ruby/classes/XMLRPC/WEBrickServlet.html#method-i-service","(request, response)","",null,0],["session=","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-session-3D","(p1)","<p>Sets the Session to be used when the connection is established.\n",null,0],["session_add","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_add","(p1)","<p>Adds <code>session</code> to the session cache\n",null,0],["session_auth=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-session_auth-3D","(user)","<p>Set the authorized user for this session\n",null,1],["session_cache_mode","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_mode","()","<p>The current session cache mode.\n",null,0],["session_cache_mode=","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_mode-3D","(p1)","<p>Sets the SSL session cache mode.  Bitwise-or together the desired\nSESSION_CACHE_* constants to set.  …\n",null,0],["session_cache_size","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_size","()","<p>Returns the current session cache size.  Zero is used to represent an\nunlimited cache size.\n",null,0],["session_cache_size=","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_size-3D","(p1)","<p>Sets the session cache size.  Returns the previously valid session cache\nsize.  Zero is used to represent …\n",null,0],["session_cache_stats","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_stats","()","<p>Returns a Hash containing the following keys:\n<p>:accept &mdash; Number of started SSL/TLS handshakes in server mode …\n",null,0],["session_options=","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-session_options-3D","(options)","",null,1],["session_remove","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_remove","(p1)","<p>Removes <code>session</code> from the session cache\n",null,0],["session_reused?","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-session_reused-3F","()","<p>Returns true if a reused session was negotiated during the handshake.\n",null,0],["session_store","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-session_store","(*args)","",null,1],["set","IPAddr","Ruby/classes/IPAddr.html#method-i-set","(addr, *family)","<p>Set +@addr+, the internal stored ip address, to given <code>addr</code>.\nThe parameter <code>addr</code> is validated using the …\n",null,0],["set","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-set","(key, value)","<p>Set messages for <code>key</code> to <code>value</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">get</span>(:<span class=\"ruby-identifier\">name</span>) <span class=\"ruby-comment\"># =&gt; [&quot;can not be nil&quot;]</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">set</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["set_arg_names","Rake::Task","Ruby/classes/Rake/Task.html#method-i-set_arg_names","(args)","<p>Set the names of the arguments for this task. <code>args</code> should be\nan array of symbols, one for each argument …\n",null,0],["set_attributes","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-set_attributes","(val)","<p>private setter for attributes <code>val</code>\n",null,0],["set_attrs","RDoc::Markup::AttrSpan","Ruby/classes/RDoc/Markup/AttrSpan.html#method-i-set_attrs","(start, length, bits)","<p>Toggles <code>bits</code> from <code>start</code> to <code>length</code>\n",null,0],["set_backtrace","Exception","Ruby/classes/Exception.html#method-i-set_backtrace","(p1)","<p>Sets the backtrace information associated with <code>exc</code>. The\n<code>backtrace</code> must be an array of String objects …\n",null,0],["set_backtrace","OptionParser::ParseError","Ruby/classes/OptionParser/ParseError.html#method-i-set_backtrace","(array)","",null,0],["set_callback","DL","Ruby/classes/DL.html#method-i-set_callback","(ty, argc, &cbp)","",null,0],["set_callback","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-set_callback","(name, *filter_list, &block)","<p>Install a callback for the given event.\n\n<pre>set_callback :save, :before, :before_meth\nset_callback :save, ...</pre>\n",null,1],["set_callback_internal","DL","Ruby/classes/DL.html#method-i-set_callback_internal","(proc_entry, addr_entry, argc, ty, abi = nil, &cbp)","",null,0],["set_cdecl_callback","DL","Ruby/classes/DL.html#method-i-set_cdecl_callback","(ty, argc, &cbp)","",null,0],["set_close_on_exec","WEBrick::Utils","Ruby/classes/WEBrick/Utils.html#method-c-set_close_on_exec","(io)","<p>Sets the close on exec flag for <code>io</code>\n",null,0],["set_content_type","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-set_content_type","(type, params = {})","<p>Sets the content type in an HTTP header. The <code>type</code> should be a\nfull HTTP content type, e.g. “text/html”. …\n",null,0],["set_content_type","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-set_content_type","(m, user_content_type, class_default)","",null,1],["set_cookie","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-set_cookie","(key, value)","",null,1],["set_ctypes","DL::CStructEntity","Ruby/classes/DL/CStructEntity.html#method-i-set_ctypes","(types)","<p>Given <code>types</code>, calculate the offsets and sizes for the types in\nthe struct.\n",null,0],["set_ctypes","DL::CUnionEntity","Ruby/classes/DL/CUnionEntity.html#method-i-set_ctypes","(types)","<p>Given <code>types</code>, calculate the necessary offset and for each union\nmember\n",null,0],["set_ctypes","Fiddle::CStructEntity","Ruby/classes/Fiddle/CStructEntity.html#method-i-set_ctypes","(types)","<p>Calculates the offsets and sizes for the given <code>types</code> in the\nstruct.\n",null,0],["set_ctypes","Fiddle::CUnionEntity","Ruby/classes/Fiddle/CUnionEntity.html#method-i-set_ctypes","(types)","<p>Calculate the necessary offset and for each union member with the given\n<code>types</code>\n",null,0],["set_current_section","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-set_current_section","(title, comment)","<p>Sets the current section to a section with <code>title</code>.  See also\n#add_section\n",null,0],["set_debug_output","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-set_debug_output","(output)","<p><strong>WARNING</strong> This method opens a serious security hole. Never\nuse this method in production code.\n<p>Sets an output …\n",null,0],["set_debug_output","Net::POP3","Ruby/classes/Net/POP3.html#method-i-set_debug_output","(arg)","<p><strong>WARNING</strong>: This method causes a serious security hole. Use\nthis method only for debugging.\n<p>Set an output …\n",null,0],["set_debug_output","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-set_debug_output","(arg)","",null,0],["set_default","OpenSSL::Engine","Ruby/classes/OpenSSL/Engine.html#method-i-set_default","(p1)","",null,0],["set_default_handler","XMLRPC::BasicServer","Ruby/classes/XMLRPC/BasicServer.html#method-i-set_default_handler","(&handler)","<p>Sets <code>handler</code> as the default-handler, which is called when no\nhandler for a method-name is found.\n<p><code>handler</code> …\n",null,0],["set_default_paths","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-set_default_paths","()","<p>Adds the default certificates to the certificate store.  These certificates\nare loaded from the default …\n",null,0],["set_dictionary","Zlib::Deflate","Ruby/classes/Zlib/Deflate.html#method-i-set_dictionary","(p1)","<p>Sets the preset dictionary and returns <code>string</code>. This method is\navailable just only after Zlib::Deflate.new …\n",null,0],["set_dictionary","Zlib::Inflate","Ruby/classes/Zlib/Inflate.html#method-i-set_dictionary","(p1)","<p>Sets the preset dictionary and returns <code>string</code>.  This method is\navailable just only after a Zlib::NeedDict …\n",null,0],["set_dn","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-set_dn","(val)","<p>private setter for dn <code>val</code>\n",null,0],["set_encoding","ARGF","Ruby/classes/ARGF.html#method-i-set_encoding","(*args)","<p>If single argument is specified, strings read from ARGF are tagged with the\nencoding specified.\n<p>If two …\n",null,0],["set_encoding","IO","Ruby/classes/IO.html#method-i-set_encoding","(p1, p2 = v2, p3 = {})","<p>If single argument is specified, read string from io is tagged with the\nencoding specified.  If encoding …\n",null,0],["set_encoding","RDoc::Encoding","Ruby/classes/RDoc/Encoding.html#method-c-set_encoding","(string)","<p>Sets the encoding of <code>string</code> based on the magic comment\n",null,0],["set_encoding","StringIO","Ruby/classes/StringIO.html#method-i-set_encoding","(p1, p2 = v2, p3 = {})","<p>Specify the encoding of the StringIO as <em>ext_enc</em>. Use the default\nexternal encoding if <em>ext_enc</em> is nil. …\n",null,0],["set_environment","Rails::Server","Rails/classes/Rails/Server.html#method-i-set_environment","()","",null,1],["set_environment!","Rails::Console","Rails/classes/Rails/Console.html#method-i-set_environment-21","()","",null,1],["set_eoutvar","ERB","Ruby/classes/ERB.html#method-i-set_eoutvar","(compiler, eoutvar = '_erbout')","<p>Can be used to set <em>eoutvar</em> as described in ERB::new.  It&#39;s\nprobably easier to just use the constructor …\n",null,0],["set_eoutvar","RDoc::ERBIO","Ruby/classes/RDoc/ERBIO.html#method-i-set_eoutvar","(compiler, io_variable)","<p>Instructs <code>compiler</code> how to write to <code>io_variable</code>\n",null,0],["set_eoutvar","RDoc::ERBPartial","Ruby/classes/RDoc/ERBPartial.html#method-i-set_eoutvar","(compiler, eoutvar = '_erbout')","<p>Overrides <code>compiler</code> startup to set the <code>eoutvar</code> to\nan empty string only if it isn&#39;t already set.\n",null,0],["set_error","GetoptLong","Ruby/classes/GetoptLong.html#method-i-set_error","(type, message)","<p>Set an error (a protected method).\n",null,0],["set_error","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-set_error","(ex, backtrace=false)","<p>Creates an error page for exception <code>ex</code> with an optional\n<code>backtrace</code>\n",null,0],["set_extensions","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-set_extensions","(val)","<p>private setter for extensions <code>val</code>\n",null,0],["set_filter","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-set_filter","(val)","<p>private setter for filter <code>val</code>\n",null,0],["set_fixture_class","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-set_fixture_class","(class_names = {})","<p>Sets the model class for a fixture when the class name cannot be inferred\nfrom the fixture name.\n<p>Examples: …\n",null,1],["set_form","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-set_form","(params, enctype='application/x-www-form-urlencoded', formopt={})","<p>Set a HTML form data set. <code>params</code> is the form data set; it is\nan Array of Arrays or a Hash +enctype is …\n",null,0],["set_form_data","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-set_form_data","(params, sep = '&')","<p>Set header fields and a body from HTML form data. <code>params</code>\nshould be an Array of Arrays or a Hash containing …\n",null,0],["set_fragment","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_fragment","(v)","<p>protected setter for the fragment component <code>v</code>\n<p>see also URI::Generic.fragment=\n",null,0],["set_generator","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-set_generator","(p1, p2, p3)","<p>See the OpenSSL documentation for EC_GROUP_set_generator()\n",null,0],["set_get_line_procs","Tracer","Ruby/classes/Tracer.html#method-c-set_get_line_procs","(file_name, p = proc)","<p>Register an event handler <code>p</code> which is called everytime a line\nin <code>file_name</code> is executed.\n<p>Example:\n\n<pre><code>Tracer.set_get_line_procs(&quot;example.rb&quot;, ...</code></pre>\n",null,0],["set_headers","URI::MailTo","Ruby/classes/URI/MailTo.html#method-i-set_headers","(v)","<p>private setter for headers <code>v</code>\n",null,0],["set_host","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_host","(v)","<p>protected setter for the host component <code>v</code>\n<p>see also URI::Generic.host=\n",null,0],["set_last_thread","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-set_last_thread","(th)","",null,0],["set_last_value","IRB::Context","Ruby/classes/IRB/Context.html#method-i-set_last_value","(value)","<p>Sets the return value from the last statement evaluated in this context to\n#last_value.\n",null,0],["set_log","Logger::Application","Ruby/classes/Logger/Application.html#method-i-set_log","(logdev, shift_age = 0, shift_size = 1024000)","<p>Sets the log device for this application.  See <code>Logger.new</code> for\nan explanation of the arguments.\n",null,0],["set_member_mappings_for_resource","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-set_member_mappings_for_resource","()","",null,1],["set_name_cache","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-c-set_name_cache","(name, value)","",null,1],["set_next_element","RSS::Element","Ruby/classes/RSS/Element.html#method-i-set_next_element","(tag_name, next_element)","",null,0],["set_non_blocking","WEBrick::Utils","Ruby/classes/WEBrick/Utils.html#method-c-set_non_blocking","(io)","<p>Sets IO operations on <code>io</code> to be non-blocking\n",null,0],["set_opaque","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_opaque","(v)","<p>protected setter for the opaque component <code>v</code>\n<p>see also URI::Generic.opaque=\n",null,0],["set_option","OptionParser::ParseError","Ruby/classes/OptionParser/ParseError.html#method-i-set_option","(opt, eq)","",null,0],["set_options","GetoptLong","Ruby/classes/GetoptLong.html#method-i-set_options","(*arguments)","<p>Set options. Takes the same argument as GetoptLong.new.\n<p>Raises a RuntimeError if option processing has …\n",null,0],["set_params","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-set_params","(params={})","<p>Sets the parameters for this SSL context to the values in\n<code>params</code>. The keys in <code>params</code> must be assignment …\n",null,0],["set_parser","XMLRPC::ParserWriterChooseMixin","Ruby/classes/XMLRPC/ParserWriterChooseMixin.html#method-i-set_parser","(parser)","<p>Sets the XMLParser to use for parsing XML documents.\n<p>Should be an instance of a class from module XMLRPC::XMLParser …\n",null,0],["set_passwd","WEBrick::HTTPAuth::Htdigest","Ruby/classes/WEBrick/HTTPAuth/Htdigest.html#method-i-set_passwd","(realm, user, pass)","<p>Sets a password in the database for <code>user</code> in <code>realm</code>\nto <code>pass</code>.\n",null,0],["set_passwd","WEBrick::HTTPAuth::Htpasswd","Ruby/classes/WEBrick/HTTPAuth/Htpasswd.html#method-i-set_passwd","(realm, user, pass)","<p>Sets a password in the database for <code>user</code> in <code>realm</code>\nto <code>pass</code>.\n",null,0],["set_passwd","WEBrick::HTTPAuth::UserDB","Ruby/classes/WEBrick/HTTPAuth/UserDB.html#method-i-set_passwd","(realm, user, pass)","<p>Sets a password in <code>realm</code> with <code>user</code> and\n<code>password</code> for the auth_type of this database.\n",null,0],["set_password","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_password","(v)","<p>protected setter for the password component <code>v</code>\n<p>see also URI::Generic.password=\n",null,0],["set_path","URI::FTP","Ruby/classes/URI/FTP.html#method-i-set_path","(v)","",null,0],["set_path","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_path","(v)","<p>protected setter for the path component <code>v</code>\n<p>see also URI::Generic.path=\n",null,0],["set_port","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_port","(v)","<p>protected setter for the port component <code>v</code>\n<p>see also URI::Generic.port=\n",null,0],["set_query","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_query","(v)","<p>protected setter for the query component <code>v</code>\n<p>see also URI::Generic.query=\n",null,0],["set_range","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-set_range","(r, e = nil)","<p>Sets the HTTP Range: header. Accepts either a Range object as a single\nargument, or a beginning index …\n",null,0],["set_redirect","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-set_redirect","(status, url)","<p>Redirects to <code>url</code> with a WEBrick::HTTPStatus::Redirect\n<code>status</code>.\n<p>Example:\n\n<pre><code>res.set_redirect WEBrick::HTTPStatus::TemporaryRedirect</code></pre>\n",null,0],["set_registry","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_registry","(v)","<p>protected setter for the registry component <code>v</code>\n<p>see also URI::Generic.registry=\n",null,0],["set_response!","ActionController::Live","Rails/classes/ActionController/Live.html#method-i-set_response-21","(request)","",null,1],["set_scheme","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_scheme","(v)","<p>protected setter for the scheme component <code>v</code>\n<p>see also URI::Generic.scheme=\n",null,0],["set_scope","URI::LDAP","Ruby/classes/URI/LDAP.html#method-i-set_scope","(val)","<p>private setter for scope <code>val</code>\n",null,0],["set_screen_size","Readline","Ruby/classes/Readline.html#method-c-set_screen_size","(p1, p2)","<p>Set terminal size to <code>rows</code> and <code>columns</code>.\n<p>See GNU Readline&#39;s rl_set_screen_size function.\n<p>Raises NotImplementedError …\n",null,0],["set_service_hook","XMLRPC::BasicServer","Ruby/classes/XMLRPC/BasicServer.html#method-i-set_service_hook","(&handler)","<p>A service-hook is called for each service request (RPC).\n<p>You can use a service-hook for example to wrap …\n",null,0],["set_session","ActionDispatch::Session::CacheStore","Rails/classes/ActionDispatch/Session/CacheStore.html#method-i-set_session","(env, sid, session, options)","<p>Set a session in the cache.\n",null,1],["set_size","RSS::ImageFaviconModel::ImageFavicon","Ruby/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-i-set_size","(new_value)","",null,0],["set_socket","Net::FTP","Ruby/classes/Net/FTP.html#method-i-set_socket","(sock, get_greeting = true)","<p>WRITEME or make private\n",null,0],["set_standard_conforming_strings","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-set_standard_conforming_strings","()","<p>Enable standard-conforming strings if available.\n",null,1],["set_state","ActiveRecord::ConnectionAdapters::TransactionState","Rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-set_state","(state)","",null,1],["set_stdcall_callback","DL","Ruby/classes/DL.html#method-i-set_stdcall_callback","(ty, argc, &cbp)","",null,0],["set_to","URI::MailTo","Ruby/classes/URI/MailTo.html#method-i-set_to","(v)","<p>private setter for to <code>v</code>\n",null,0],["set_to_infinity!","OpenSSL::PKey::EC::Point","Ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-set_to_infinity-21","()","",null,0],["set_trace","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-set_trace","( arg )","",null,0],["set_trace_func","Kernel","Ruby/classes/Kernel.html#method-i-set_trace_func","(p1)","<p>Establishes <em>proc</em> as the handler for tracing, or disables tracing\nif the parameter is <code>nil</code>.\n<p><em>proc</em> takes up …\n",null,0],["set_trace_func","Thread","Ruby/classes/Thread.html#method-i-set_trace_func","(p1)","<p>Establishes <em>proc</em> on <em>thr</em> as the handler for tracing, or\ndisables tracing if the parameter is <code>nil</code>. See …\n",null,0],["set_typecode","URI::FTP","Ruby/classes/URI/FTP.html#method-i-set_typecode","(v)","<p>private setter for the typecode <code>v</code>\n<p>see also URI::FTP.typecode=\n",null,0],["set_user","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_user","(v)","<p>protected setter for the user component <code>v</code>\n<p>see also URI::Generic.user=\n",null,0],["set_userinfo","URI::Generic","Ruby/classes/URI/Generic.html#method-i-set_userinfo","(user, password = nil)","<p>protect setter for the <code>user</code> component, and\n<code>password</code> if available. (with validation)\n<p>see also URI::Generic.userinfo= …\n",null,0],["set_valid_ip","XMLRPC::WEBrickServlet","Ruby/classes/XMLRPC/WEBrickServlet.html#method-i-set_valid_ip","(*ip_addr)","<p>Specifies the valid IP addresses that are allowed to connect to the server.\n<p>Each IP is either a String …\n",null,0],["set_visibility_for","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-set_visibility_for","(methods, visibility, singleton = false)","<p>Given an array <code>methods</code> of method names, set the visibility of\neach to <code>visibility</code>\n",null,0],["set_writer","XMLRPC::ParserWriterChooseMixin","Ruby/classes/XMLRPC/ParserWriterChooseMixin.html#method-i-set_writer","(writer)","<p>Sets the XMLWriter to use for generating XML output.\n<p>Should be an instance of a class from module XMLRPC::XMLWriter …\n",null,0],["setacl","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-setacl","(mailbox, user, rights)","<p>Sends the SETACL command along with <code>mailbox</code>, <code>user</code>\nand the <code>rights</code> that user is to have on that mailbox. …\n",null,0],["setbyte","String","Ruby/classes/String.html#method-i-setbyte","(p1, p2)","<p>modifies the <em>index</em>th byte as <em>integer</em>.\n",null,0],["setegid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setegid","(p1)","<p>Set the effective group ID of the calling process to <em>group</em>.  Not\navailable on all platforms.\n",null,0],["seteuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-seteuid","(p1)","<p>Set the effective user ID of the calling process to <em>user</em>.  Not\navailable on all platforms.\n",null,0],["setgid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setgid","(p1)","<p>Set the group ID of the current process to <em>group</em>. Not available on\nall platforms.\n",null,0],["setgid?","File","Ruby/classes/File.html#method-c-setgid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setgid bit set.\n",null,0],["setgid?","File::Stat","Ruby/classes/File/Stat.html#method-i-setgid-3F","()","<p>Returns <code>true</code> if <em>stat</em> has the set-group-id permission\nbit set, <code>false</code> if it doesn&#39;t or if the operating …\n",null,0],["setgid?","FileTest","Ruby/classes/FileTest.html#method-i-setgid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setgid bit set.\n",null,0],["setgid?","Pathname","Ruby/classes/Pathname.html#method-i-setgid-3F","()","<p>See FileTest.setgid?.\n",null,0],["setgrent","Etc","Ruby/classes/Etc.html#method-c-setgrent","()","<p>Resets the process of reading the /etc/group file, so that the next call to\n::getgrent will return the …\n",null,0],["setpgid","Process","Ruby/classes/Process.html#method-c-setpgid","(p1, p2)","<p>Sets the process group ID of <em>pid</em> (0 indicates this process) to\n<em>integer</em>. Not available on all platforms. …\n",null,0],["setpgrp","Process","Ruby/classes/Process.html#method-c-setpgrp","()","<p>Equivalent to <code>setpgid(0,0)</code>. Not available on all platforms.\n",null,0],["setpos","Curses","Ruby/classes/Curses.html#method-c-setpos","(p1, p2)","<p>A setter for the position of the cursor, using coordinates <code>x</code>\nand <code>y</code>\n",null,0],["setpos","Curses::Window","Ruby/classes/Curses/Window.html#method-i-setpos","(p1, p2)","<p>A setter for the position of the cursor in the current window, using\ncoordinates <code>x</code> and <code>y</code>\n",null,0],["setpriority","Process","Ruby/classes/Process.html#method-c-setpriority","(p1, p2, p3)","<p>See <code>Process#getpriority</code>.\n\n<pre><code>Process.setpriority(Process::PRIO_USER, 0, 19)      #=&gt; 0\nProcess.setpriority(Process::PRIO_PROCESS, ...\n</code></pre>\n",null,0],["setproperty","WIN32OLE","Ruby/classes/WIN32OLE.html#method-i-setproperty","(*args)","<p>Sets property of OLE object. When you want to set property with argument,\nyou can use this method.\n\n<pre><code>excel ...</code></pre>\n",null,0],["setpwent","Etc","Ruby/classes/Etc.html#method-c-setpwent","()","<p>Resets the process of reading the /etc/passwd file, so that the next call\nto ::getpwent will return the …\n",null,0],["setquota","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-setquota","(mailbox, quota)","<p>Sends a SETQUOTA command along with the specified <code>mailbox</code> and\n<code>quota</code>.  If <code>quota</code> is nil, then quota will …\n",null,0],["setregid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setregid","(p1, p2)","<p>Sets the (group) real and/or effective group IDs of the current process to\n<em>rid</em> and <em>eid</em>, respectively. …\n",null,0],["setresgid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setresgid","(p1, p2, p3)","<p>Sets the (group) real, effective, and saved user IDs of the current process\nto <em>rid</em>, <em>eid</em>, and <em>sid</em> respectively. …\n",null,0],["setresuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setresuid","(p1, p2, p3)","<p>Sets the (user) real, effective, and saved user IDs of the current process\nto <em>rid</em>, <em>eid</em>, and <em>sid</em> respectively. …\n",null,0],["setreuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setreuid","(p1, p2)","<p>Sets the (user) real and/or effective user IDs of the current process to\n<em>rid</em> and <em>eid</em>, respectively.  …\n",null,0],["setrgid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setrgid","(p1)","<p>Set the real group ID of the calling process to <em>group</em>. Not\navailable on all platforms.\n",null,0],["setrlimit","Process","Ruby/classes/Process.html#method-c-setrlimit","(p1, p2, p3 = v3)","<p>Sets the resource limit of the process. <em>cur_limit</em> means current\n(soft) limit and <em>max_limit</em> means maximum …\n",null,0],["setruid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setruid","(p1)","<p>Set the real user ID of the calling process to <em>user</em>. Not available\non all platforms.\n",null,0],["setscrreg","Curses","Ruby/classes/Curses.html#method-c-setscrreg","(p1, p2)","<p>Set a software scrolling region in a window. <code>top</code> and\n<code>bottom</code> are lines numbers of the margin.\n<p>If this option …\n",null,0],["setscrreg","Curses::Window","Ruby/classes/Curses/Window.html#method-i-setscrreg","(p1, p2)","<p>Set a software scrolling region in a window. <code>top</code> and\n<code>bottom</code> are lines numbers of the margin.\n<p>If this option …\n",null,0],["setsid","Process","Ruby/classes/Process.html#method-c-setsid","()","<p>Establishes this process as a new session and process group leader, with no\ncontrolling tty. Returns …\n",null,0],["setsockopt","BasicSocket","Ruby/classes/BasicSocket.html#method-i-setsockopt","(p1, p2, p3)","<p>Sets a socket option. These are protocol and system specific, see your\nlocal system documentation for …\n",null,0],["setter","RSS::BaseListener","Ruby/classes/RSS/BaseListener.html#method-i-setter","(uri, tag_name)","<p>return the setter for the uri, tag_name pair, or nil.\n",null,0],["setuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setuid","(p1)","<p>Set the user ID of the current process to <em>user</em>. Not available on\nall platforms.\n",null,0],["setuid?","File","Ruby/classes/File.html#method-c-setuid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setuid bit set.\n",null,0],["setuid?","File::Stat","Ruby/classes/File/Stat.html#method-i-setuid-3F","()","<p>Returns <code>true</code> if <em>stat</em> has the set-user-id permission\nbit set, <code>false</code> if it doesn&#39;t or if the operating …\n",null,0],["setuid?","FileTest","Ruby/classes/FileTest.html#method-i-setuid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setuid bit set.\n",null,0],["setuid?","Pathname","Ruby/classes/Pathname.html#method-i-setuid-3F","()","<p>See FileTest.setuid?.\n",null,0],["setup","Object","Ruby/classes/Object.html#method-i-setup","(options = \"\", *long_options)","",null,0],["setup","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-setup","()","<p>This method is called automatically when a new SSLSocket is created.\nNormally you do not need to call …\n",null,0],["setup","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-setup","()","<p>Prepares for generation of output from the current directory\n",null,0],["setup","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-setup","()","<p>Prepares the spec for documentation generation\n",null,0],["setup","RDoc::RubygemsHook","Ruby/classes/RDoc/RubygemsHook.html#method-i-setup","()","<p>Prepares the spec for documentation generation\n",null,0],["setup_certificate","DRb::DRbSSLSocket::SSLConfig","Ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-setup_certificate","()","<p>Ensures that :SSLCertificate and :SSLPrivateKey have been provided or that\na new certificate is generated …\n",null,0],["setup_fixture_accessors","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-setup_fixture_accessors","(fixture_set_names = nil)","",null,1],["setup_fixtures","ActiveRecord::TestFixtures","Rails/classes/ActiveRecord/TestFixtures.html#method-i-setup_fixtures","()","",null,1],["setup_generator","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-setup_generator","(generator_name = @generator_name)","<p>Set up an output generator for the named <code>generator_name</code>.\n<p>If the found generator responds to :setup_options …\n",null,0],["setup_horo_variables","Rails::API::Task","Rails/classes/Rails/API/Task.html#method-i-setup_horo_variables","()","",null,1],["setup_maker","RSS::Atom::Entry","Ruby/classes/RSS/Atom/Entry.html#method-i-setup_maker","(maker)","<p>sets up the <code>maker</code> for constructing Entry elements\n",null,0],["setup_maker","RSS::RDF::Seq","Ruby/classes/RSS/RDF/Seq.html#method-i-setup_maker","(target)","",null,0],["setup_maker","RSS::RDF::Seq","Ruby/classes/RSS/RDF/Seq.html#method-i-setup_maker","(target)","",null,0],["setup_maker","RSS::RootElementMixin","Ruby/classes/RSS/RootElementMixin.html#method-i-setup_maker","(maker)","",null,0],["setup_maker","RSS::SetupMaker","Ruby/classes/RSS/SetupMaker.html#method-i-setup_maker","(maker)","",null,0],["setup_maker","RSS::XMLStyleSheet","Ruby/classes/RSS/XMLStyleSheet.html#method-i-setup_maker","(maker)","",null,0],["setup_maker_elements","RSS::Rss","Ruby/classes/RSS/Rss.html#method-i-setup_maker_elements","(maker)","",null,0],["setup_output_dir","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-setup_output_dir","(dir, force)","<p>Create an output dir if it doesn&#39;t exist. If it does exist, but\ndoesn&#39;t contain the flag file …\n",null,0],["setup_pager","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-setup_pager","()","<p>Sets up a pager program to pass output through.  Tries the RI_PAGER and\nPAGER environment variables followed …\n",null,0],["setup_params","WEBrick::AccessLog","Ruby/classes/WEBrick/AccessLog.html#method-i-setup_params","(config, req, res)","<p>This format specification is a subset of mod_log_config of Apache:\n<p>%a &mdash; Remote IP address\n<p>%b &mdash; Total response …\n",null,0],["setup_scanner","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-setup_scanner","(input)","<p>Creates the StringScanner\n",null,0],["setup_signer","Gem::Package","Ruby/classes/Gem/Package.html#method-i-setup_signer","()","<p>Prepares the gem for signing and checksum generation.  If a signing\ncertificate and key are not present …\n",null,0],["setup_ssl_context","DRb::DRbSSLSocket::SSLConfig","Ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-setup_ssl_context","()","<p>Establish the OpenSSL::SSL::SSLContext with the configuration parameters\nprovided.\n",null,0],["sexp","Ripper","Ruby/classes/Ripper.html#method-c-sexp","(src, filename = '-', lineno = 1)","<p>EXPERIMENTAL &mdash; Parses <code>src</code> and create S-exp tree. Returns more readable tree\nrather than Ripper.sexp_raw …\n",null,0],["sexp_raw","Ripper","Ruby/classes/Ripper.html#method-c-sexp_raw","(src, filename = '-', lineno = 1)","<p>EXPERIMENTAL &mdash; Parses <code>src</code> and create S-exp tree. This method is mainly for\ndeveloper use.\n\n<pre><code>require &#39;ripper&#39; ...\n</code></pre>\n\n",null,0],["sfork","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-sfork","(command)","<p>simple fork\n",null,0],["sh","FileUtils","Ruby/classes/FileUtils.html#method-i-sh","(*cmd, &block)","<p>Run the system command <code>cmd</code>. If multiple arguments are given\nthe command is not run with the shell (same …\n",null,0],["shallow","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-shallow","()","",null,1],["shallow?","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-shallow-3F","()","",null,1],["shebang","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-shebang","(bin_file_name)","<p>Generates a #! line for <code>bin_file_name</code>&#39;s wrapper copying\narguments if necessary.\n<p>If the :custom_shebang …\n",null,0],["shellescape","Shellwords","Ruby/classes/Shellwords.html#method-c-shellescape","(str)","<p>Escapes a string so that it can be safely used in a Bourne shell command\nline.  <code>str</code> can be a non-string …\n",null,0],["shellescape","String","Ruby/classes/String.html#method-i-shellescape","()","<p>Escapes <code>str</code> so that it can be safely used in a Bourne shell\ncommand line.\n<p>See Shellwords.shellescape for …\n",null,0],["shelljoin","Array","Ruby/classes/Array.html#method-i-shelljoin","()","<p>Builds a command line string from an argument list <code>array</code>\njoining all elements escaped for Bourne shell …\n",null,0],["shelljoin","Shellwords","Ruby/classes/Shellwords.html#method-c-shelljoin","(array)","<p>Builds a command line string from an argument list, <code>array</code>.\n<p>All elements are joined into a single string …\n",null,0],["shellsplit","Shellwords","Ruby/classes/Shellwords.html#method-c-shellsplit","(line)","<p>Splits a string into an array of tokens in the same way the UNIX Bourne\nshell does.\n\n<pre><code>argv = Shellwords.split(&#39;here ...</code></pre>\n",null,0],["shellsplit","String","Ruby/classes/String.html#method-i-shellsplit","()","<p>Splits <code>str</code> into an array of tokens in the same way the UNIX\nBourne shell does.\n<p>See Shellwords.shellsplit …\n",null,0],["shellwords","Shellwords","Ruby/classes/Shellwords.html#method-c-shellwords","(line)","",null,0],["shift","Array","Ruby/classes/Array.html#method-i-shift","(*args)","<p>Removes the first element of <code>self</code> and returns it (shifting all\nother elements down by one). Returns  …\n",null,0],["shift","CSV","Ruby/classes/CSV.html#method-i-shift","()","<p>The primary read method for wrapped Strings and IOs, a single row is pulled\nfrom the data source, parsed …\n",null,0],["shift","DBM","Ruby/classes/DBM.html#method-i-shift","()","<p>Removes a [key, value] pair from the database, and returns it. If the\ndatabase is empty, returns nil. …\n",null,0],["shift","ENV","Ruby/classes/ENV.html#method-c-shift","()","<p>Removes an environment variable name-value pair from ENV and returns it as\nan Array.  Returns <code>nil</code> if …\n",null,0],["shift","GDBM","Ruby/classes/GDBM.html#method-i-shift","()","<p>Removes a key-value-pair from this database and returns it as a two-item\narray [ <em>key</em>, <em>value</em> ]. Returns …\n",null,0],["shift","Hash","Ruby/classes/Hash.html#method-i-shift","()","<p>Removes a key-value pair from <em>hsh</em> and returns it as the two-item\narray <code>[</code> <em>key, value</em> <code>]</code>, or the hash&#39;s\n…\n",null,0],["shift","Queue","Ruby/classes/Queue.html#method-i-shift","(non_block=false)","<p>Alias of pop\n",null,0],["shift","SDBM","Ruby/classes/SDBM.html#method-i-shift","()","<p>Removes a key-value pair from the database and returns them as an Array. If\nthe database is empty, returns …\n",null,0],["shift","SizedQueue","Ruby/classes/SizedQueue.html#method-i-shift","(*args)","<p>Alias of pop\n",null,0],["shift","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-shift","()","<p>Removes a [key, value] pair from the database, and returns it. If the\ndatabase is empty, returns <code>nil</code> …\n",null,0],["short_name","OpenSSL::ASN1::ObjectId","Ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-short_name","()","",null,0],["show_detailed_exceptions?","ActionController::Rescue","Rails/classes/ActionController/Rescue.html#method-i-show_detailed_exceptions-3F","()","<p>Override this method if you want to customize when detailed exceptions must\nbe shown. This method is …\n",null,1],["show_documentation","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-show_documentation","(req, res)","<p>Displays documentation for <code>req</code> on <code>res</code>, whether\nthat be HTML or some asset.\n",null,0],["show_exceptions_app","Rails::Application","Rails/classes/Rails/Application.html#method-i-show_exceptions_app","()","",null,1],["show_help","Gem::Command","Ruby/classes/Gem/Command.html#method-i-show_help","()","<p>Display the help message for the command.\n",null,0],["show_lookup_failure","Gem::Command","Ruby/classes/Gem/Command.html#method-i-show_lookup_failure","(gem_name, version, errors, domain)","<p>Display to the user that a gem couldn&#39;t be found and reasons why\n",null,0],["show_owners","Gem::Commands::OwnerCommand","Ruby/classes/Gem/Commands/OwnerCommand.html#method-i-show_owners","(name)","",null,0],["show_rdoc_for_pattern","Gem::Server","Ruby/classes/Gem/Server.html#method-i-show_rdoc_for_pattern","(pattern, res)","<p>Returns true and prepares http response, if rdoc for the requested gem name\npattern was found.\n<p>The search …\n",null,0],["show_release_notes","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-show_release_notes","()","",null,0],["show_variable","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-show_variable","(name)","<p>SHOW VARIABLES LIKE &#39;name&#39;\n",null,1],["show_version","OptionParser","Ruby/classes/OptionParser.html#method-i-show_version","(*pkgs)","",null,0],["shuffle","Array","Ruby/classes/Array.html#method-i-shuffle","(*args)","<p>Returns a new array with elements of <code>self</code> shuffled.\n\n<pre><code>a = [ 1, 2, 3 ]           #=&gt; [1, 2, 3]\na.shuffle ...\n</code></pre>\n",null,0],["shuffle!","Array","Ruby/classes/Array.html#method-i-shuffle-21","(*args)","<p>Shuffles elements in <code>self</code> in place.\n<p>The optional <code>rng</code> argument will be used as the random number\ngenerator. …\n",null,0],["shutdown","BasicSocket","Ruby/classes/BasicSocket.html#method-i-shutdown","(p1 = v1)","<p>Calls shutdown(2) system call.\n<p>s.shutdown(Socket::SHUT_RD) disallows further read.\n<p>s.shutdown(Socket::SHUT_WR) …\n",null,0],["shutdown","GServer","Ruby/classes/GServer.html#method-i-shutdown","()","<p>Schedule a shutdown for the server\n",null,0],["shutdown","WEBrick::GenericServer","Ruby/classes/WEBrick/GenericServer.html#method-i-shutdown","()","<p>Shuts down the server and all listening sockets.  New listeners must be\nprovided to restart the server. …\n",null,0],["shutdown","XMLRPC::Server","Ruby/classes/XMLRPC/Server.html#method-i-shutdown","()","<p>Stops and shuts the server down.\n",null,0],["sid_available?","Process::GID","Ruby/classes/Process/GID.html#method-c-sid_available-3F","()","<p>Returns <code>true</code> if the current platform has saved group ID\nfunctionality.\n",null,0],["sid_available?","Process::UID","Ruby/classes/Process/UID.html#method-c-sid_available-3F","()","<p>Returns <code>true</code> if the current platform has saved user ID\nfunctionality.\n",null,0],["sign","BigDecimal","Ruby/classes/BigDecimal.html#method-i-sign","()","<p>Returns the sign of the value.\n<p>Returns a positive value if &gt; 0, a negative value if &lt; 0, and a zero\n…\n",null,0],["sign","Gem::Commands::CertCommand","Ruby/classes/Gem/Commands/CertCommand.html#method-i-sign","(cert_file)","",null,0],["sign","Gem::Security","Ruby/classes/Gem/Security.html#method-c-sign","(certificate, signing_key, signing_cert, age = ONE_YEAR, extensions = EXTENSIONS, serial = 1)","<p>Sign the public key from <code>certificate</code> with the\n<code>signing_key</code> and <code>signing_cert</code>, using the\nGem::Security::DIGEST_ALGORITHM …\n",null,0],["sign","Gem::Security::Signer","Ruby/classes/Gem/Security/Signer.html#method-i-sign","(data)","<p>Sign data with given digest algorithm\n",null,0],["sign","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-sign","(p1, p2)","<p>Parameters\n<p><code>key</code> - the private key to be used for signing this instance\n<p><code>digest</code> - the digest to be used for …\n",null,0],["sign","OpenSSL::OCSP::BasicResponse","Ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-sign","(p1, p2, p3 = v3, p4 = v4)","",null,0],["sign","OpenSSL::OCSP::Request","Ruby/classes/OpenSSL/OCSP/Request.html#method-i-sign","(p1, p2, p3 = v3, p4 = v4)","",null,0],["sign","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-c-sign","(p1, p2, p3, p4 = v4, p5 = v5)","",null,0],["sign","OpenSSL::PKey::PKey","Ruby/classes/OpenSSL/PKey/PKey.html#method-i-sign","(p1, p2)","<p>To sign the <code>String</code> <code>data</code>, <code>digest</code>, an\ninstance of OpenSSL::Digest, must be provided. The return value is …\n",null,0],["sign","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-sign","(p1, p2)","",null,0],["sign","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-sign","(p1, p2)","",null,0],["sign","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-sign","(p1, p2)","",null,0],["sign_in","Gem::GemcutterUtilities","Ruby/classes/Gem/GemcutterUtilities.html#method-i-sign_in","(sign_in_host = nil)","",null,0],["signal","ConditionVariable","Ruby/classes/ConditionVariable.html#method-i-signal","()","<p>Wakes up the first thread in line waiting for this lock.\n",null,0],["signal","MonitorMixin::ConditionVariable","Ruby/classes/MonitorMixin/ConditionVariable.html#method-i-signal","()","<p>Wakes up the first thread in line waiting for this lock.\n",null,0],["signal","Rinda::WaitTemplateEntry","Ruby/classes/Rinda/WaitTemplateEntry.html#method-i-signal","()","",null,0],["signal_handle","IRB::Irb","Ruby/classes/IRB/Irb.html#method-i-signal_handle","()","<p>Handler for the signal SIGINT, see Kernel#trap for more information.\n",null,0],["signal_status","IRB::Irb","Ruby/classes/IRB/Irb.html#method-i-signal_status","(status)","<p>Evaluates the given block using the given <code>status</code>.\n",null,0],["signaled?","Process::Status","Ruby/classes/Process/Status.html#method-i-signaled-3F","()","<p>Returns <code>true</code> if <em>stat</em> terminated because of an\nuncaught signal.\n",null,0],["signame","Signal","Ruby/classes/Signal.html#method-c-signame","(p1)","<p>convert signal number to signal name\n\n<pre><code>Signal.trap(&quot;INT&quot;) { |signo| puts Signal.signame(signo) }\nProcess.kill(&quot;INT&quot;, ...\n</code></pre>\n",null,0],["signature","RDoc::TomDoc","Ruby/classes/RDoc/TomDoc.html#method-c-signature","(comment)","<p>Extracts the Signature section&#39;s method signature\n<p>comment &mdash; An RDoc::Comment that will be parsed and …\n\n",null,0],["signature","ActiveRecord::DynamicMatchers::Finder","Rails/classes/ActiveRecord/DynamicMatchers/Finder.html#method-i-signature","()","<p>Extended in activerecord-deprecated_finders\n",null,1],["signature_algorithm","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-signature_algorithm","()","",null,0],["signature_algorithm","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-signature_algorithm","()","",null,0],["signature_algorithm","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-signature_algorithm","()","",null,0],["signed","ActionDispatch::Cookies::ChainedCookieJars","Rails/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-signed","()","<p>Returns a jar that&#39;ll automatically generate a signed representation of\ncookie value and verify it …\n",null,1],["signed_or_encrypted","ActionDispatch::Cookies::ChainedCookieJars","Rails/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-signed_or_encrypted","()","<p>Returns the <code>signed</code> or <code>encrypted</code> jar, preferring\n<code>encrypted</code> if <code>secret_key_base</code> is set. Used by\nActionDispatch::Session::CookieStore …\n",null,1],["signed_time","OpenSSL::PKCS7::SignerInfo","Ruby/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-signed_time","()","",null,0],["signed_value","DL::ValueUtil","Ruby/classes/DL/ValueUtil.html#method-i-signed_value","(val, ty)","",null,0],["signers","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-signers","()","",null,0],["signo","SignalException","Ruby/classes/SignalException.html#method-i-signo","()","<p>Returns a signal number.\n",null,0],["silence","ActiveSupport::Benchmarkable","Rails/classes/ActiveSupport/Benchmarkable.html#method-i-silence","()","<p>Silence the logger during the execution of the block.\n",null,1],["silence","ActiveSupport::Deprecation::Reporting","Rails/classes/ActiveSupport/Deprecation/Reporting.html#method-i-silence","()","<p>Silence deprecation warnings within the block.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ActiveSupport</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Deprecation</span>.<span class=\"ruby-identifier\">warn</span>(<span class=\"ruby-string\">&#39;something broke!&#39;</span>)\n<span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["silence","Kernel","Rails/classes/Kernel.html#method-i-silence","(stream)","",null,1],["silence","LoggerSilence","Rails/classes/LoggerSilence.html#method-i-silence","(temporary_level = Logger::ERROR)","<p>Silences the logger for the duration of the block.\n",null,1],["silence!","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-silence-21","()","<p>Silence the logger.\n",null,1],["silence_stream","Kernel","Rails/classes/Kernel.html#method-i-silence_stream","(stream)","<p>Silences any stream for the duration of the block.\n\n<pre>silence_stream(STDOUT) do\n  puts &#39;This will never be ...</pre>\n",null,1],["silence_warnings","Kernel","Rails/classes/Kernel.html#method-i-silence_warnings","()","<p>Sets $VERBOSE to nil for the duration of the block and back to its original\nvalue afterwards.\n\n<pre>silence_warnings ...</pre>\n",null,1],["simple_format","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-simple_format","(text, html_options = {}, options = {})","<p>Returns <code>text</code> transformed into HTML using simple formatting\nrules. Two or more consecutive newlines(<code>\\n\\n</code> …\n",null,1],["simple_selector","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-simple_selector","(statement, values, can_negate = true)","<p>Creates a simple selector given the statement and array of substitution\nvalues.\n<p>Returns a hash with the …\n",null,1],["sin","BigMath","Ruby/classes/BigMath.html#method-i-sin","(x, prec)","<p>Computes the sine of x to the specified number of digits of precision.\n<p>If x is infinite or NaN, returns …\n",null,0],["sin","CMath","Ruby/classes/CMath.html#method-c-sin","(z)","<p>returns the sine of <code>z</code>, where <code>z</code> is given in\nradians\n",null,0],["sin","Math","Ruby/classes/Math.html#method-c-sin","(p1)","<p>Computes the sine of <em>x</em> (expressed in radians). Returns -1..1.\n",null,0],["sin!","CMath","Ruby/classes/CMath.html#method-c-sin-21","(z)","",null,0],["since","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-since","(time = ::Time.current)","<p>Calculates a new Time or Date that is as far in the future as this Duration\nrepresents.\n",null,1],["since","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-since","(other)","",null,1],["since","Date","Rails/classes/Date.html#method-i-since","(seconds)","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the beginning of the …\n",null,1],["since","DateTime","Rails/classes/DateTime.html#method-i-since","(seconds)","<p>Returns a new DateTime representing the time a number of seconds since the\ninstance time. Do not use …\n",null,1],["since","Numeric","Rails/classes/Numeric.html#method-i-since","(time = ::Time.current)","<p>Reads best with argument:  10.minutes.since(time)\n",null,1],["since","Time","Rails/classes/Time.html#method-i-since","(seconds)","<p>Returns a new Time representing the time a number of seconds since the\ninstance time\n",null,1],["single?","REXML::Validation::Event","Ruby/classes/REXML/Validation/Event.html#method-i-single-3F","()","",null,0],["single_delegate","SingleForwardable","Ruby/classes/SingleForwardable.html#method-i-single_delegate","(hash)","<p>Takes a hash as its argument.  The key is a symbol or an array of symbols. \nThese symbols correspond …\n",null,0],["singleline_format","PrettyPrint","Ruby/classes/PrettyPrint.html#method-c-singleline_format","(output='', maxwidth=nil, newline=nil, genspace=nil)","<p>This is similar to PrettyPrint::format but the result has no breaks.\n<p><code>maxwidth</code>, <code>newline</code> and <code>genspace</code> are …\n",null,0],["singleline_pp","PP","Ruby/classes/PP.html#method-c-singleline_pp","(obj, out=$>)","<p>Outputs <code>obj</code> to <code>out</code> like PP.pp but with no indent\nand newline.\n<p>PP.singleline_pp returns <code>out</code>.\n",null,0],["singleton_class","Object","Ruby/classes/Object.html#method-i-singleton_class","()","<p>Returns the singleton class of <em>obj</em>.  This method creates a new\nsingleton class if <em>obj</em> does not have it. …\n",null,0],["singleton_method_added","Numeric","Ruby/classes/Numeric.html#method-i-singleton_method_added","(p1)","<p>Trap attempts to add methods to <code>Numeric</code> objects. Always raises\na <code>TypeError</code>\n",null,0],["singleton_methods","Object","Ruby/classes/Object.html#method-i-singleton_methods","(p1 = v1)","<p>Returns an array of the names of singleton methods for <em>obj</em>. If the\noptional <em>all</em> parameter is true, the …\n",null,0],["singular","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-singular","(record_or_class)","<p>Returns the singular class name of a record or class.\n\n<pre>ActiveModel::Naming.singular(post)             # ...</pre>\n",null,1],["singular","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-singular","(rule, replacement)","<p>Specifies a new singularization rule and its replacement. The rule can\neither be a string or a regular …\n",null,1],["singular?","Matrix","Ruby/classes/Matrix.html#method-i-singular-3F","()","<p>Returns <code>true</code> is this is a singular matrix.\n",null,0],["singular?","Matrix::LUPDecomposition","Ruby/classes/Matrix/LUPDecomposition.html#method-i-singular-3F","()","<p>Returns <code>true</code> if <code>U</code>, and hence <code>A</code>, is\nsingular.\n",null,0],["singular_route_key","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-singular_route_key","(record_or_class)","<p>Returns string to use while generating route names. It differs for\nnamespaced models regarding whether …\n",null,1],["singular_table_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-singular_table_name","()","",null,1],["singularize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-singularize","(word, locale = :en)","<p>The reverse of <code>pluralize</code>, returns the singular form of a word\nin a string.\n<p>If passed an optional <code>locale</code> …\n",null,1],["singularize","String","Rails/classes/String.html#method-i-singularize","(locale = :en)","<p>The reverse of <code>pluralize</code>, returns the singular form of a word\nin a string.\n<p>If the optional parameter  …\n",null,1],["sinh","CMath","Ruby/classes/CMath.html#method-c-sinh","(z)","<p>returns the hyperbolic sine of <code>z</code>, where <code>z</code> is\ngiven in radians\n",null,0],["sinh","Math","Ruby/classes/Math.html#method-c-sinh","(p1)","<p>Computes the hyperbolic sine of <em>x</em> (expressed in radians).\n",null,0],["sinh!","CMath","Ruby/classes/CMath.html#method-c-sinh-21","(z)","",null,0],["site","Net::FTP","Ruby/classes/Net/FTP.html#method-i-site","(arg)","<p>Issues a SITE command.\n",null,0],["site_dir","RDoc::RI::Paths","Ruby/classes/RDoc/RI/Paths.html#method-c-site_dir","()","<p>The location of ri data installed into the site dir.\n<p>Historically this was available for documentation …\n",null,0],["size","Array","Ruby/classes/Array.html#method-i-size","()","",null,0],["size","Bignum","Ruby/classes/Bignum.html#method-i-size","()","<p>Returns the number of bytes in the machine representation of <em>big</em>.\n\n<pre><code>(256**10 - 1).size   #=&gt; 12\n(256**20 ...\n</code></pre>\n",null,0],["size","DBM","Ruby/classes/DBM.html#method-i-size","()","<p>Returns the number of entries in the database.\n",null,0],["size","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-size","()","<p>Get the size of this pointer.\n",null,0],["size","DL::CStructEntity","Ruby/classes/DL/CStructEntity.html#method-c-size","(types)","<p>Given <code>types</code>, returns the offset for the packed sizes of those\ntypes\n\n<pre><code>DL::CStructEntity.size([DL::TYPE_DOUBLE, ...</code></pre>\n",null,0],["size","DL::CUnionEntity","Ruby/classes/DL/CUnionEntity.html#method-c-size","(types)","<p>Given <code>types</code>, returns the size needed for the union.\n\n<pre><code>DL::CUnionEntity.size([DL::TYPE_DOUBLE, DL::TYPE_INT, ...</code></pre>\n",null,0],["size","DL::Packer","Ruby/classes/DL/Packer.html#method-i-size","()","",null,0],["size","DL::Stack","Ruby/classes/DL/Stack.html#method-i-size","()","",null,0],["size","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-size","()","<p>Returns digest_obj.digest_length().\n",null,0],["size","ENV","Ruby/classes/ENV.html#method-c-size","()","<p>Returns the number of environment variables.\n",null,0],["size","Enumerator","Ruby/classes/Enumerator.html#method-i-size","()","<p>Returns the size of the enumerator, or <code>nil</code> if it can&#39;t be\ncalculated lazily.\n\n<pre><code>(1..100).to_a.permutation(4).size ...</code></pre>\n",null,0],["size","Fiddle::CStructEntity","Ruby/classes/Fiddle/CStructEntity.html#method-c-size","(types)","<p>Returns the offset for the packed sizes for the given <code>types</code>.\n\n<pre><code>Fiddle::CStructEntity.size(\n  [ Fiddle::TYPE_DOUBLE, ...</code></pre>\n",null,0],["size","Fiddle::CUnionEntity","Ruby/classes/Fiddle/CUnionEntity.html#method-c-size","(types)","<p>Returns the size needed for the union with the given <code>types</code>.\n\n<pre><code>Fiddle::CUnionEntity.size(\n  [ Fiddle::TYPE_DOUBLE, ...</code></pre>\n",null,0],["size","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-size","()","<p>Get the size of this pointer.\n",null,0],["size","File","Ruby/classes/File.html#method-c-size","(p1)","<p>Returns the size of <code>file_name</code>.\n<p><em>file_name</em> can be an IO object.\n",null,0],["size","File","Ruby/classes/File.html#method-i-size","()","<p>Returns the size of <em>file</em> in bytes.\n\n<pre><code>File.new(&quot;testfile&quot;).size   #=&gt; 66\n</code></pre>\n",null,0],["size","File::Stat","Ruby/classes/File/Stat.html#method-i-size","()","<p>Returns the size of <em>stat</em> in bytes.\n\n<pre><code>File.stat(&quot;testfile&quot;).size   #=&gt; 66\n</code></pre>\n",null,0],["size","FileTest","Ruby/classes/FileTest.html#method-i-size","(p1)","<p>Returns the size of <code>file_name</code>.\n<p><em>file_name</em> can be an IO object.\n",null,0],["size","Fixnum","Ruby/classes/Fixnum.html#method-i-size","()","<p>Returns the number of <em>bytes</em> in the machine representation of a\n<code>Fixnum</code>.\n\n<pre><code>1.size            #=&gt; 4\n-1.size ...\n</code></pre>\n",null,0],["size","GDBM","Ruby/classes/GDBM.html#method-i-size","()","<p>Returns the number of key-value pairs in this database.\n",null,0],["size","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-size","()","",null,0],["size","Hash","Ruby/classes/Hash.html#method-i-size","()","<p>Returns the number of key-value pairs in the hash.\n\n<pre><code>h = { &quot;d&quot; =&gt; 100, &quot;a&quot; =&gt; 200, &quot;v&quot; =&gt; 300, &quot;e&quot; =&gt; 400 ...\n</code></pre>\n",null,0],["size","MatchData","Ruby/classes/MatchData.html#method-i-size","()","<p>Returns the number of elements in the match array.\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.length   ...</code></pre>\n",null,0],["size","Net::FTP","Ruby/classes/Net/FTP.html#method-i-size","(filename)","<p>Returns the size of the given (remote) filename.\n",null,0],["size","Pathname","Ruby/classes/Pathname.html#method-i-size","()","<p>See FileTest.size.\n",null,0],["size","Queue","Ruby/classes/Queue.html#method-i-size","()","<p>Alias of length.\n",null,0],["size","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-size","()","",null,0],["size","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-size","()","<p>@return the number of children of this parent\n",null,0],["size","REXML::SyncEnumerator","Ruby/classes/REXML/SyncEnumerator.html#method-i-size","()","<p>Returns the number of enumerated Enumerable objects, i.e. the size of each\nrow.\n",null,0],["size","Range","Ruby/classes/Range.html#method-i-size","()","<p>Returns the number of elements in the range. Both the begin and the end of\nthe Range must be Numeric …\n",null,0],["size","Rinda::Tuple","Ruby/classes/Rinda/Tuple.html#method-i-size","()","<p>The number of elements in the tuple.\n",null,0],["size","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-size","()","<p>The size of the tuple.\n",null,0],["size","SDBM","Ruby/classes/SDBM.html#method-i-size","()","<p>Returns the number of keys in the database.\n",null,0],["size","Set","Ruby/classes/Set.html#method-i-size","()","<p>Returns the number of elements.\n",null,0],["size","String","Ruby/classes/String.html#method-i-size","()","<p>Returns the character length of <em>str</em>.\n",null,0],["size","StringIO","Ruby/classes/StringIO.html#method-i-size","()","<p>Returns the size of the buffer string.\n",null,0],["size","Struct","Ruby/classes/Struct.html#method-i-size","()","<p>Returns the number of instance variables.\n\n<pre><code>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</code></pre>\n",null,0],["size","Symbol","Ruby/classes/Symbol.html#method-i-size","()","<p>Same as <code>sym.to_s.length</code>.\n",null,0],["size","Tempfile","Ruby/classes/Tempfile.html#method-i-size","()","<p>Returns the size of the temporary file.  As a side effect, the IO buffer is\nflushed before determining …\n",null,0],["size","Vector","Ruby/classes/Vector.html#method-i-size","()","<p>Returns the number of elements in the vector.\n",null,0],["size","ActionDispatch::Http::UploadedFile","Rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-size","()","<p>Shortcut for <code>tempfile.size</code>.\n",null,1],["size","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-size","()","",null,1],["size","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-size","()","<p>Returns the number of error messages.\n\n<pre>person.errors.add(:name, &quot;can&#39;t be blank&quot;)\nperson.errors.size # ...</pre>\n",null,1],["size","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-size","()","<p>Returns the size of the collection. If the collection hasn&#39;t been\nloaded, it executes a <code>SELECT COUNT(*)</code> …\n",null,1],["size","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-size","()","",null,1],["size","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-i-size","()","",null,1],["size","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-size","()","<p>Returns size of the records.\n",null,1],["size=","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-size-3D","(p1)","<p>Set the size of this pointer to <code>size</code>\n",null,0],["size=","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-size-3D","(p1)","<p>Set the size of this pointer to <code>size</code>\n",null,0],["size=","RSS::ImageFaviconModel::ImageFavicon","Ruby/classes/RSS/ImageFaviconModel/ImageFavicon.html#method-i-size-3D","(new_value)","",null,0],["size?","File","Ruby/classes/File.html#method-c-size-3F","(p1)","<p>Returns <code>nil</code> if <code>file_name</code> doesn&#39;t exist or has\nzero size, the size of the file otherwise.\n<p><em>file_name</em> …\n",null,0],["size?","File::Stat","Ruby/classes/File/Stat.html#method-i-size-3F","()","<p>Returns the size of <em>stat</em> in bytes.\n\n<pre><code>File.stat(&quot;testfile&quot;).size   #=&gt; 66\n</code></pre>\n",null,0],["size?","FileTest","Ruby/classes/FileTest.html#method-i-size-3F","(p1)","<p>Returns <code>nil</code> if <code>file_name</code> doesn&#39;t exist or has\nzero size, the size of the file otherwise.\n<p><em>file_name</em> …\n",null,0],["size?","Pathname","Ruby/classes/Pathname.html#method-i-size-3F","()","<p>See FileTest.size?.\n",null,0],["size_opt_params","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-size_opt_params","()","<p>Returns the size of optional parameters.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</code></pre>\n",null,0],["size_params","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-size_params","()","<p>Returns the size of arguments of the method.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</code></pre>\n",null,0],["sizeof","DL::Importer","Ruby/classes/DL/Importer.html#method-i-sizeof","(ty)","",null,0],["sizeof","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-sizeof","(ty)","<p>Returns the sizeof <code>ty</code>, using Fiddle::Importer.parse_ctype to\ndetermine the C type and the appropriate …\n",null,0],["skip","ARGF","Ruby/classes/ARGF.html#method-i-skip","()","\n<pre><code>Sets the current file to the next file in ARGV. If there aren&#39;t any more\nfiles it has no effect.</code></pre>\n<p>For example: …\n",null,0],["skip","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-skip","(token_type, error = true)","<p>Skips the next token if its type is <code>token_type</code>.\n<p>Optionally raises an error if the next token is not of …\n",null,0],["skip","StringScanner","Ruby/classes/StringScanner.html#method-i-skip","(p1)","<p>Attempts to skip over the given <code>pattern</code> beginning with the\nscan pointer. If it matches, the scan pointer …\n",null,0],["skip_action_callback","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_action_callback","(*names)","<p>Skip before, after, and around action callbacks matching any of the names\nAliased as skip_filter.\n<p>Parameters …\n",null,1],["skip_after_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_after_action","","<p>Skip a callback after actions. See _insert_callbacks for parameter details.\nAliased as skip_after_filter. …\n",null,1],["skip_around_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_around_action","","<p>Skip a callback around actions. See _insert_callbacks for parameter\ndetails. Aliased as skip_around_filter. …\n",null,1],["skip_before_action","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_before_action","","<p>Skip a callback before actions. See _insert_callbacks for parameter\ndetails. Aliased as skip_before_filter. …\n",null,1],["skip_blanks?","CSV","Ruby/classes/CSV.html#method-i-skip_blanks-3F","()","<p>Returns <code>true</code> blank lines are skipped by the parser. See\nCSV::new for details.\n",null,0],["skip_callback","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-skip_callback","(name, *filter_list, &block)","<p>Skip a previously set callback. Like <code>set_callback</code>,\n<code>:if</code> or <code>:unless</code> options may be passed in order to\ncontrol …\n",null,1],["skip_during","Gem::Deprecate","Ruby/classes/Gem/Deprecate.html#method-c-skip_during","()","<p>Temporarily turn off warnings. Intended for tests only.\n",null,0],["skip_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_filter","(*names)","",null,1],["skip_for_variable","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-skip_for_variable","()","<p>skip the var [in] part of a &#39;for&#39; statement\n",null,0],["skip_method","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-skip_method","(container)","<p>Skips the next method in <code>container</code>\n",null,0],["skip_optional_do_after_expression","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-skip_optional_do_after_expression","()","<p>while, until, and for have an optional do\n",null,0],["skip_tkspace","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-skip_tkspace","(skip_nl = true)","<p>Skips whitespace tokens including newlines if <code>skip_nl</code> is true\n",null,0],["skip_tkspace_comment","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-skip_tkspace_comment","(skip_nl = true)","<p>Skip spaces until a comment is found\n",null,0],["skip_until","StringScanner","Ruby/classes/StringScanner.html#method-i-skip_until","(p1)","<p>Advances the scan pointer until <code>pattern</code> is matched and\nconsumed.  Returns the number of bytes advanced, …\n",null,0],["sleep","Kernel","Ruby/classes/Kernel.html#method-i-sleep","(*args)","<p>Suspends the current thread for <em>duration</em> seconds (which may be any\nnumber, including a <code>Float</code> with fractional …\n",null,0],["sleep","Mutex","Ruby/classes/Mutex.html#method-i-sleep","(p1 = v1)","<p>Releases the lock and sleeps <code>timeout</code> seconds if it is given\nand non-nil or forever.  Raises <code>ThreadError</code> …\n",null,0],["sleep","Mutex_m","Ruby/classes/Mutex_m.html#method-i-sleep","(timeout = nil)","<p>See Mutex#sleep\n",null,0],["slice","Array","Ruby/classes/Array.html#method-i-slice","(p1, p2 = v2)","<p>Element Reference — Returns the element at <code>index</code>, or returns a\nsubarray starting at the <code>start</code> index …\n",null,0],["slice","Ripper","Ruby/classes/Ripper.html#method-c-slice","(src, pattern, n = 0)","<p>EXPERIMENTAL &mdash; Parses <code>src</code> and return a string which was matched to\n<code>pattern</code>. <code>pattern</code> should be described …\n",null,0],["slice","String","Ruby/classes/String.html#method-i-slice","(*args)","<p>Element Reference — If passed a single <code>index</code>, returns a\nsubstring of one character at that index.  …\n",null,0],["slice","Symbol","Ruby/classes/Symbol.html#method-i-slice","(*args)","<p>Returns <code>sym.to_s[]</code>.\n",null,0],["slice","ActionController::Parameters","Rails/classes/ActionController/Parameters.html#method-i-slice","(*keys)","<p>Returns a new <code>ActionController::Parameters</code> instance that\nincludes only the given <code>keys</code>. If the given  …\n",null,1],["slice","ActiveRecord::Core","Rails/classes/ActiveRecord/Core.html#method-i-slice","(*methods)","<p>Returns a hash of the given methods with their names as keys and returned\nvalues as values.\n",null,1],["slice","Hash","Rails/classes/Hash.html#method-i-slice","(*keys)","<p>Slice a hash to include only the given keys. This is useful for limiting an\noptions hash to valid keys …\n",null,1],["slice!","Array","Ruby/classes/Array.html#method-i-slice-21","(p1, p2 = v2)","<p>Deletes the element(s) given by an <code>index</code> (optionally up to\n<code>length</code> elements) or by a <code>range</code>.\n<p>Returns the …\n",null,0],["slice!","String","Ruby/classes/String.html#method-i-slice-21","(*args)","<p>Deletes the specified portion from <em>str</em>, and returns the portion\ndeleted.\n\n<pre><code>string = &quot;this is a string&quot;\nstring.slice!(2) ...</code></pre>\n",null,0],["slice!","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-slice-21","(*args)","<p>Works like like <code>String#slice!</code>, but returns an instance of\nChars, or nil if the string was not modified. …\n",null,1],["slice!","Hash","Rails/classes/Hash.html#method-i-slice-21","(*keys)","<p>Replaces the hash with only the given keys. Returns a hash containing the\nremoved key/value pairs.\n\n<pre>{ a: ...</pre>\n",null,1],["slice_before","Enumerable","Ruby/classes/Enumerable.html#method-i-slice_before","(p1 = v1)","<p>Creates an enumerator for each chunked elements. The beginnings of chunks\nare defined by <em>pattern</em> and …\n",null,0],["slice_before","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-slice_before","(*args)","",null,0],["sn","OpenSSL::ASN1::ObjectId","Ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-sn","()","",null,0],["snippet","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-snippet","(text, limit = 100)","<p>The first <code>limit</code> characters of <code>text</code> as HTML\n",null,0],["sockaddr_in","Socket","Ruby/classes/Socket.html#method-c-sockaddr_in","(p1, p2)","<p>Packs <em>port</em> and <em>host</em> as an AF_INET/AF_INET6 sockaddr\nstring.\n\n<pre><code>Socket.sockaddr_in(80, &quot;127.0.0.1&quot;)\n#=&gt; &quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&quot; ...\n</code></pre>\n",null,0],["sockaddr_un","Socket","Ruby/classes/Socket.html#method-c-sockaddr_un","(p1)","<p>Packs <em>path</em> as an AF_UNIX sockaddr string.\n\n<pre><code>Socket.sockaddr_un(&quot;/tmp/sock&quot;) #=&gt; &quot;\\x01\\x00/tmp/sock\\x00\\x00...&quot;\n</code></pre>\n",null,0],["socket?","File","Ruby/classes/File.html#method-c-socket-3F","(p1)","<p>Returns <code>true</code> if the named file is a socket.\n<p><em>file_name</em> can be an IO object.\n",null,0],["socket?","File::Stat","Ruby/classes/File/Stat.html#method-i-socket-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a socket, <code>false</code>\nif it isn&#39;t or if the operating system doesn&#39;t support …\n",null,0],["socket?","FileTest","Ruby/classes/FileTest.html#method-i-socket-3F","(p1)","<p>Returns <code>true</code> if the named file is a socket.\n<p><em>file_name</em> can be an IO object.\n",null,0],["socket?","Pathname","Ruby/classes/Pathname.html#method-i-socket-3F","()","<p>See FileTest.socket?.\n",null,0],["socketpair","Socket","Ruby/classes/Socket.html#method-c-socketpair","(p1, p2, p3 = v3)","<p>Creates a pair of sockets connected each other.\n<p><em>domain</em> should be a communications domain such as: :INET, …\n",null,0],["socketpair","UNIXSocket","Ruby/classes/UNIXSocket.html#method-c-socketpair","(p1 = v1, p2 = v2)","<p>Creates a pair of sockets connected each other.\n<p><em>socktype</em> should be a socket type such as: :STREAM, :DGRAM, …\n",null,0],["socktype","Addrinfo","Ruby/classes/Addrinfo.html#method-i-socktype","()","<p>returns the socket type as an integer.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).socktype == Socket::SOCK_STREAM #=&gt; ...\n</code></pre>\n",null,0],["solve","Matrix::LUPDecomposition","Ruby/classes/Matrix/LUPDecomposition.html#method-i-solve","(b)","<p>Returns <code>m</code> so that <code>A*m = b</code>, or equivalently so\nthat <code>L*U*m = P*b</code> <code>b</code> can be a Matrix or a Vector\n",null,0],["sort","Array","Ruby/classes/Array.html#method-i-sort","()","<p>Returns a new array created by sorting <code>self</code>.\n<p>Comparisons for the sort will be done using the <code>&lt;=&gt;</code> …\n",null,0],["sort","Enumerable","Ruby/classes/Enumerable.html#method-i-sort","()","<p>Returns an array containing the items in <em>enum</em> sorted, either\naccording to their own <code>&lt;=&gt;</code> method, …\n",null,0],["sort","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-sort","(sort_keys, search_keys, charset)","<p>Sends a SORT command to sort messages in the mailbox. Returns an array of\nmessage sequence numbers.  …\n",null,0],["sort!","Array","Ruby/classes/Array.html#method-i-sort-21","()","<p>Sorts <code>self</code> in place.\n<p>Comparisons for the sort will be done using the <code>&lt;=&gt;</code>\noperator or using an optional …\n",null,0],["sort_by","Enumerable","Ruby/classes/Enumerable.html#method-i-sort_by","()","<p>Sorts <em>enum</em> using a set of keys generated by mapping the values in\n<em>enum</em> through the given block.\n<p>If no …\n",null,0],["sort_by!","Array","Ruby/classes/Array.html#method-i-sort_by-21","()","<p>Sorts <code>self</code> in place using a set of keys generated by mapping\nthe values in <code>self</code> through the given block. …\n",null,0],["sort_obj","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-sort_obj","()","<p>Returns an object you can use to sort specifications in #sort_by.\n",null,0],["sort_sections","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-sort_sections","()","<p>Sorts sections alphabetically (default) or in TomDoc fashion (none, Public,\nInternal, Deprecated)\n",null,0],["sorted","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-sorted","()","",null,0],["sorted_requests","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-sorted_requests","()","",null,0],["source","Gem::RequestSet::GemDepedencyAPI","Ruby/classes/Gem/RequestSet/GemDepedencyAPI.html#method-i-source","(url)","<p>DSL\n",null,0],["source","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-source","()","<p>Source of the contents of this store.\n<p>For a store from a gem the source is the gem name.  For a store …\n",null,0],["source","REXML::Parsers::SAX2Parser","Ruby/classes/REXML/Parsers/SAX2Parser.html#method-i-source","()","",null,0],["source","Rake::Task","Ruby/classes/Rake/Task.html#method-i-source","()","<p>First source from a rule (nil if no sources)\n",null,0],["source","Regexp","Ruby/classes/Regexp.html#method-i-source","()","<p>Returns the original string of the pattern.\n\n<pre><code>/ab+c/ix.source #=&gt; &quot;ab+c&quot;\n</code></pre>\n<p>Note that escape sequences are retained …\n",null,0],["source_encoding","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-source_encoding","()","<p>Returns the source encoding as an Encoding object.\n",null,0],["source_encoding","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-source_encoding","()","<p>Returns the source encoding as an encoding object.\n<p>Note that the result may not be equal to the source …\n",null,0],["source_encoding","Encoding::UndefinedConversionError","Ruby/classes/Encoding/UndefinedConversionError.html#method-i-source_encoding","()","<p>Returns the source encoding as an encoding object.\n<p>Note that the result may not be equal to the source …\n",null,0],["source_encoding_name","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-source_encoding_name","()","<p>Returns the source encoding name as a string.\n",null,0],["source_encoding_name","Encoding::UndefinedConversionError","Ruby/classes/Encoding/UndefinedConversionError.html#method-i-source_encoding_name","()","<p>Returns the source encoding name as a string.\n",null,0],["source_extract","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-source_extract","()","",null,1],["source_file","IRB::IrbLoader","Ruby/classes/IRB/IrbLoader.html#method-i-source_file","(path)","<p>Loads a given file in the current session and displays the source lines\n<p>See Irb#suspend_input_method for …\n",null,0],["source_for","Gem::AvailableSet","Ruby/classes/Gem/AvailableSet.html#method-i-source_for","(spec)","",null,0],["source_location","Method","Ruby/classes/Method.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this method or\nnil if this method was not …\n",null,0],["source_location","Proc","Ruby/classes/Proc.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this proc or\n<code>nil</code> if this proc was not defined …\n",null,0],["source_location","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this method or\nnil if this method was not …\n",null,0],["source_ole_types","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-source_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the\nWIN32OLE_TYPE object and having …\n",null,0],["source_root","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-source_root","(path=nil)","<p>Returns the source root for this generator using default_source_root as\ndefault.\n",null,1],["sources","Gem","Ruby/classes/Gem.html#method-c-sources","()","<p>Returns an Array of sources to fetch remote gems from. Uses default_sources\nif the sources list is empty. …\n",null,0],["sources","Rake::Task","Ruby/classes/Rake/Task.html#method-i-sources","()","",null,0],["sources=","Gem","Ruby/classes/Gem.html#method-c-sources-3D","(new_sources)","<p>Need to be able to set the sources without calling Gem.sources.replace\nsince that would cause an infinite …\n",null,0],["spawn","Kernel","Ruby/classes/Kernel.html#method-i-spawn","(*args)","<p>spawn executes specified command and return its pid.\n<p>This method doesn&#39;t wait for end of the command. …\n",null,0],["spawn","PTY","Ruby/classes/PTY.html#method-c-spawn","(*args)","<p>Spawns the specified command on a newly allocated pty. You can also use the\nalias ::getpty.\n<p>The command&#39;s …\n",null,0],["spawn","Process","Ruby/classes/Process.html#method-c-spawn","(*args)","<p>spawn executes specified command and return its pid.\n<p>This method doesn&#39;t wait for end of the command. …\n",null,0],["spec","Gem::DependencyResolver::IndexSpecification","Ruby/classes/Gem/DependencyResolver/IndexSpecification.html#method-i-spec","()","",null,0],["spec","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-spec","()","<p>Lazy accessor for the installer&#39;s spec.\n",null,0],["spec","Gem::Package","Ruby/classes/Gem/Package.html#method-i-spec","()","<p>The spec for this gem.\n<p>If this is a package for a built gem the spec is loaded from the gem and\nreturned. …\n",null,0],["spec","Gem::Package::Old","Ruby/classes/Gem/Package/Old.html#method-i-spec","()","<p>The specification for this gem\n",null,0],["spec_dir","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-spec_dir","()","<p>Returns the full path to the directory containing this spec&#39;s gemspec\nfile. eg: /usr/local/lib/ruby/gems/1.8/specifications …\n",null,0],["spec_file","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-spec_file","()","<p>The location of of the spec file that is installed.\n",null,0],["spec_file","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-spec_file","()","<p>Returns the full path to this spec&#39;s gemspec file. eg:\n/usr/local/lib/ruby/gems/1.8/specifications/mygem-1.0.gemspec …\n",null,0],["spec_for_dependency","Gem::SpecFetcher","Ruby/classes/Gem/SpecFetcher.html#method-i-spec_for_dependency","(dependency, matching_platform=true)","<p>Find and fetch specs that match <code>dependency</code>.\n<p>If <code>matching_platform</code> is false, gems for all platforms are …\n",null,0],["spec_name","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-i-spec_name","()","<p>Return the name that the gemspec file would be\n",null,0],["spec_name","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-spec_name","()","<p>The default name of the gemspec.  See also #file_name\n\n<pre><code>spec.spec_name # =&gt; &quot;example-1.0.gemspec&quot;\n</code></pre>\n",null,0],["spec_path","Gem::Commands::LockCommand","Ruby/classes/Gem/Commands/LockCommand.html#method-i-spec_path","(gem_full_name)","",null,0],["spec_predecessors","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-spec_predecessors","()","<p>Return a hash of predecessors.  <code>result[spec]</code> is an Array of\ngemspecs that have a dependency satisfied …\n",null,0],["special_prefixes","Readline","Ruby/classes/Readline.html#method-c-special_prefixes","()","<p>Gets the list of characters that are word break characters, but should be\nleft in text when it is passed …\n",null,0],["special_prefixes=","Readline","Ruby/classes/Readline.html#method-c-special_prefixes-3D","(p1)","<p>Sets the list of characters that are word break characters, but should be\nleft in text when it is passed …\n",null,0],["specific?","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-specific-3F","()","<p>True if the dependency will not always match the latest version.\n",null,0],["specific?","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-specific-3F","()","<p>True if the requirement will not always match the latest version.\n",null,0],["specific?","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-specific-3F","()","<p>True if the requirement will not always match the latest version.\n",null,0],["specific_extra_args","Gem::Command","Ruby/classes/Gem/Command.html#method-c-specific_extra_args","(cmd)","<p>Return an array of extra arguments for the command.  The extra arguments\ncome from the gem configuration …\n",null,0],["specific_extra_args_hash","Gem::Command","Ruby/classes/Gem/Command.html#method-c-specific_extra_args_hash","()","<p>Accessor for the specific extra args hash (self initializing).\n",null,0],["specs","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-specs","()","",null,0],["specs","Gem::Server","Ruby/classes/Gem/Server.html#method-i-specs","(req, res)","",null,0],["specs_in","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-specs_in","(dir)","",null,0],["split","BigDecimal","Ruby/classes/BigDecimal.html#method-i-split","()","<p>Splits a BigDecimal number into four parts, returned as an array of values.\n<p>The first value represents …\n",null,0],["split","File","Ruby/classes/File.html#method-c-split","(p1)","<p>Splits the given string into a directory and a file component and returns\nthem in a two-element array. …\n",null,0],["split","Pathname","Ruby/classes/Pathname.html#method-i-split","()","<p>Returns the #dirname and the #basename in an Array.\n<p>See File.split.\n",null,0],["split","Shellwords","Ruby/classes/Shellwords.html#method-c-split","(line)","",null,0],["split","String","Ruby/classes/String.html#method-i-split","(p1 = v1, p2 = v2)","<p>Divides <em>str</em> into substrings based on a delimiter, returning an\narray of these substrings.\n<p>If <em>pattern</em> is …\n",null,0],["split","URI","Ruby/classes/URI.html#method-c-split","(uri)","<p>Synopsis\n\n<pre><code>URI::split(uri)</code></pre>\n<p>Args\n",null,0],["split","URI::Parser","Ruby/classes/URI/Parser.html#method-i-split","(uri)","<p>Returns a split URI against regexp\n",null,0],["split","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-split","(*args)","<p>Works just like <code>String#split</code>, with the exception that the\nitems in the resulting list are Chars instances …\n",null,1],["split","Array","Rails/classes/Array.html#method-i-split","(value = nil, &block)","<p>Divides the array into one or more subarrays based on a delimiting\n<code>value</code> or the result of an optional …\n",null,1],["split_all","FileUtils","Ruby/classes/FileUtils.html#method-i-split_all","(path)","<p>Split a file path into individual directory names.\n<p>Example:\n\n<pre><code>split_all(&quot;a/b/c&quot;) =&gt;  [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]\n</code></pre>\n",null,0],["split_all","Sys","Ruby/classes/Sys.html#method-i-split_all","(path)","<p>Split a file path into individual directory names.\n<p>For example:\n\n<pre><code>split_all(&quot;a/b/c&quot;) =&gt;  [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]\n</code></pre>\n",null,0],["split_header_value","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-c-split_header_value","(str)","<p>Splits a header value <code>str</code> according to HTTP specification.\n",null,0],["split_into_flow","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-split_into_flow","()","<p>Splits the string into chunks by attribute change\n",null,0],["sprintf","Kernel","Ruby/classes/Kernel.html#method-i-sprintf","(*args)","<p>Returns the string resulting from applying <em>format_string</em> to any\nadditional arguments.  Within the format …\n",null,0],["sql","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-i-sql","(event)","",null,1],["sql_for_insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-sql_for_insert","(sql, pk, id_value, sequence_name, binds)","",null,1],["sql_for_insert","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-sql_for_insert","(sql, pk, id_value, sequence_name, binds)","",null,1],["sql_query_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-sql_query_length","()","<p>Returns the maximum length of an SQL query.\n",null,1],["sqlite_version","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-sqlite_version","()","",null,1],["sqrt","BigDecimal","Ruby/classes/BigDecimal.html#method-i-sqrt","(p1)","<p>Returns the square root of the value.\n<p>Result has at least n significant digits.\n",null,0],["sqrt","BigMath","Ruby/classes/BigMath.html#method-i-sqrt","(x,prec)","<p>Computes the square root of x to the specified number of digits of\nprecision.\n<p>BigDecimal.new(&#39;2&#39;).sqrt(16).to_s …\n",null,0],["sqrt","CMath","Ruby/classes/CMath.html#method-c-sqrt","(z)","<p>Returns the non-negative square root of Complex.\n\n<pre><code>sqrt(-1)            #=&gt; 0+1.0i\nsqrt(Complex(-1,0)) #=&gt; ...\n</code></pre>\n",null,0],["sqrt","Math","Ruby/classes/Math.html#method-c-sqrt","(a)","<p>Computes the square root of <code>a</code>.  It makes use of Complex and\nRational to have no rounding errors if possible. …\n",null,0],["sqrt!","CMath","Ruby/classes/CMath.html#method-c-sqrt-21","(z)","",null,0],["square?","Matrix","Ruby/classes/Matrix.html#method-i-square-3F","()","<p>Returns <code>true</code> is this is a square matrix.\n",null,0],["squeeze","String","Ruby/classes/String.html#method-i-squeeze","(*args)","<p>Builds a set of characters from the <em>other_str</em> parameter(s) using\nthe procedure described for <code>String#count</code> …\n",null,0],["squeeze!","String","Ruby/classes/String.html#method-i-squeeze-21","(*args)","<p>Squeezes <em>str</em> in place, returning either <em>str</em>, or\n<code>nil</code> if no changes were made.\n",null,0],["squish","String","Rails/classes/String.html#method-i-squish","()","<p>Returns the string, first removing all whitespace on both ends of the\nstring, and then changing remaining …\n",null,1],["squish!","String","Rails/classes/String.html#method-i-squish-21","()","<p>Performs a destructive squish. See String#squish.\n",null,1],["srand","Kernel","Ruby/classes/Kernel.html#method-i-srand","(p1 = v1)","<p>Seeds the system pseudo-random number generator, Random::DEFAULT, with\n<code>number</code>.  The previous seed value …\n",null,0],["srand","Random","Ruby/classes/Random.html#method-c-srand","(p1 = v1)","<p>Seeds the system pseudo-random number generator, Random::DEFAULT, with\n<code>number</code>.  The previous seed value …\n",null,0],["src_type","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-src_type","()","<p>Returns source class when the OLE class is &#39;Alias&#39;.\n\n<pre><code>tobj =  WIN32OLE_TYPE.new(&#39;Microsoft Office ...</code></pre>\n",null,0],["ssl?","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-ssl-3F","()","",null,0],["ssl?","WEBrick::HTTPRequest","Ruby/classes/WEBrick/HTTPRequest.html#method-i-ssl-3F","()","<p>Is this an SSL request?\n",null,0],["ssl_params","Net::POP3","Ruby/classes/Net/POP3.html#method-c-ssl_params","()","<p>returns the SSL Parameters\n<p>see also POP3.enable_ssl\n",null,0],["ssl_version","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-ssl_version","()","<p>Returns a String representing the SSL/TLS version that was negotiated for\nthe connection, for example …\n",null,0],["ssl_version=","OpenSSL::SSL::SSLContext","Ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-ssl_version-3D","(p1)","<p>You can get a list of valid versions with OpenSSL::SSL::SSLContext::METHODS\n",null,0],["stale?","ActionController::ConditionalGet","Rails/classes/ActionController/ConditionalGet.html#method-i-stale-3F","(record_or_options, additional_options = {})","<p>Sets the <code>etag</code> and/or <code>last_modified</code> on the\nresponse and checks it against the client request. If the request …\n",null,1],["stale_session_check!","ActionDispatch::Session::StaleSessionCheck","Rails/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-stale_session_check-21","()","",null,1],["stand_alone?","REXML::Document","Ruby/classes/REXML/Document.html#method-i-stand_alone-3F","()","<p>@return the XMLDecl standalone value of this document as a String. If no\nXMLDecl has been set, returns …\n",null,0],["standard_exception_handling","Rake::Application","Ruby/classes/Rake/Application.html#method-i-standard_exception_handling","()","<p>Provide standard exception handling for the given block.\n",null,0],["standard_exception_handling","Rake::Application","Ruby/classes/Rake/Application.html#method-i-standard_exception_handling","()","<p>Provide standard exception handling for the given block.\n",null,0],["standard_library","","Ruby/files/ruby/doc/standard_library_rdoc.html","","<p>Ruby Standard Library\n<p>The Ruby Standard Library is a vast collection of classes and modules that\nyou can …\n",null,0],["standard_port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-standard_port","()","<p>Returns the standard port number for this request&#39;s protocol.\n",null,1],["standard_port?","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-standard_port-3F","()","<p>Returns whether this request is using the standard port\n",null,1],["standard_rake_options","Rake::Application","Ruby/classes/Rake/Application.html#method-i-standard_rake_options","()","<p>A list of all the standard options used in rake, suitable for passing to\nOptionParser.\n",null,0],["standard_rake_options","Rake::Application","Ruby/classes/Rake/Application.html#method-i-standard_rake_options","()","<p>A list of all the standard options used in rake, suitable for passing to\nOptionParser.\n",null,0],["standend","Curses","Ruby/classes/Curses.html#method-c-standend","()","<p>Enables the Normal display (no highlight)\n<p>This is equivalent to Curses.attron(A_NORMAL)\n<p>see also Curses::Window.attrset …\n",null,0],["standend","Curses::Window","Ruby/classes/Curses/Window.html#method-i-standend","()","<p>Enables the Normal display (no highlight)\n<p>This is equivalent to Curses::Window.attron(A_NORMAL)\n<p>see also …\n",null,0],["standout","Curses","Ruby/classes/Curses.html#method-c-standout","()","<p>Enables the best highlighting mode of the terminal.\n<p>This is equivalent to Curses:Window.attron(A_STANDOUT) …\n",null,0],["standout","Curses::Window","Ruby/classes/Curses/Window.html#method-i-standout","()","<p>Enables the best highlighting mode of the terminal.\n<p>This is equivalent to Curses::Window.attron(A_STANDOUT) …\n",null,0],["start","Coverage","Ruby/classes/Coverage.html#method-c-start","()","<p>Enables coverage measurement.\n",null,0],["start","Date","Ruby/classes/Date.html#method-i-start","()","<p>Returns the Julian day number denoting the day of calendar reform.\n\n<pre><code>Date.new(2001,2,3).start           ...</code></pre>\n",null,0],["start","GC","Ruby/classes/GC.html#method-c-start","()","<p>Initiates garbage collection, unless manually disabled.\n",null,0],["start","GServer","Ruby/classes/GServer.html#method-i-start","(maxConnections = -1)","<p>Start the server if it isn&#39;t already running\n<p><code>maxConnections</code> &mdash; override <code>maxConnections</code> given to the constructor. …\n\n",null,0],["start","IRB","Ruby/classes/IRB.html#method-c-start","(ap_path = nil)","<p>Initializes IRB and creates a new Irb.irb object at the\n<code>TOPLEVEL_BINDING</code>\n",null,0],["start","Logger::Application","Ruby/classes/Logger/Application.html#method-i-start","()","<p>Start the application.  Return the status code.\n",null,0],["start","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-start","()","<p>Opens a TCP connection and HTTP session.\n<p>When this method is called with a block, it passes the Net::HTTP …\n",null,0],["start","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-start","(address, *arg)","<p>Creates a new Net::HTTP object, then additionally opens the TCP connection\nand HTTP session.\n<p>Arguments …\n",null,0],["start","Net::POP3","Ruby/classes/Net/POP3.html#method-c-start","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Creates a new POP3 object and open the connection.  Equivalent to\n\n<pre><code>Net::POP3.new(address, port, isapop).start(account, ...</code></pre>\n",null,0],["start","Net::POP3","Ruby/classes/Net/POP3.html#method-i-start","(account, password)","<p>Starts a POP3 session.\n<p>When called with block, gives a POP3 object to the block and closes the\nsession …\n",null,0],["start","Net::SMTP","Ruby/classes/Net/SMTP.html#method-c-start","(address, port = nil, helo = 'localhost', user = nil, secret = nil, authtype = nil)","<p>Creates a new Net::SMTP object and connects to the server.\n<p>This method is equivalent to:\n\n<pre><code>Net::SMTP.new(address, ...</code></pre>\n",null,0],["start","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-start","(helo = 'localhost', user = nil, secret = nil, authtype = nil)","<p>Opens a TCP connection and starts the SMTP session.\n<p>Parameters\n<p><code>helo</code> is the <em>HELO</em> <em>domain</em> that you&#39;ll …\n",null,0],["start","Psych::Streaming","Ruby/classes/Psych/Streaming.html#method-i-start","(encoding = Nodes::Stream::UTF8)","<p>Start streaming using <code>encoding</code>\n",null,0],["start","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-start","(encoding = Nodes::Stream::UTF8)","",null,0],["start","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-start","()","",null,0],["start","Thread","Ruby/classes/Thread.html#method-c-start","(*args)","<p>Basically the same as ::new. However, if class Thread is subclassed, then\ncalling <code>start</code> in that subclass …\n",null,0],["start","WEBrick::CGI","Ruby/classes/WEBrick/CGI.html#method-i-start","(env=ENV, stdin=$stdin, stdout=$stdout)","<p>Starts the CGI process with the given environment <code>env</code> and\nstandard input and output <code>stdin</code> and <code>stdout</code> …\n",null,0],["start","WEBrick::Daemon","Ruby/classes/WEBrick/Daemon.html#method-c-start","()","<p>Performs the standard operations for daemonizing a process.  Runs a block,\nif given.\n",null,0],["start","WEBrick::GenericServer","Ruby/classes/WEBrick/GenericServer.html#method-i-start","(&block)","<p>Starts the server and runs the <code>block</code> for each connection. \nThis method does not return until the server …\n",null,0],["start","WEBrick::SimpleServer","Ruby/classes/WEBrick/SimpleServer.html#method-c-start","()","<p>A SimpleServer only yields when you start it\n",null,0],["start","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-i-start","(name, id, payload)","",null,1],["start","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-start","(name, id, payload)","",null,1],["start","ActiveSupport::Notifications::Fanout::Subscribers::Timed","Rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/Timed.html#method-i-start","(name, id, payload)","",null,1],["start","ActiveSupport::Notifications::Instrumenter","Rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-i-start","(name, payload)","<p>Send a start notification with <code>name</code> and <code>payload</code>.\n",null,1],["start","ActiveSupport::Subscriber","Rails/classes/ActiveSupport/Subscriber.html#method-i-start","(name, id, payload)","",null,1],["start","Rails::Console","Rails/classes/Rails/Console.html#method-c-start","(*args)","",null,1],["start","Rails::Console","Rails/classes/Rails/Console.html#method-i-start","()","",null,1],["start","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-c-start","()","",null,1],["start","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-i-start","()","",null,1],["start","Rails::Server","Rails/classes/Rails/Server.html#method-i-start","()","",null,1],["startElement","RSS::REXMLLikeXMLParser","Ruby/classes/RSS/REXMLLikeXMLParser.html#method-i-startElement","(name, attrs)","",null,0],["startElement","XMLRPC::XMLParser::StreamParserMixin","Ruby/classes/XMLRPC/XMLParser/StreamParserMixin.html#method-i-startElement","(name, attrs=[])","",null,0],["start_accepting","RDoc::Markup::ToAnsi","Ruby/classes/RDoc/Markup/ToAnsi.html#method-i-start_accepting","()","<p>Starts accepting with a reset screen\n",null,0],["start_accepting","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-start_accepting","()","<p>Prepares the visitor for HTML generation\n",null,0],["start_accepting","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-start_accepting","()","<p>Prepares the visitor for HTML snippet generation\n",null,0],["start_accepting","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-start_accepting","()","<p>Prepares the visitor for text generation\n",null,0],["start_accepting","RDoc::Markup::ToTableOfContents","Ruby/classes/RDoc/Markup/ToTableOfContents.html#method-i-start_accepting","()","<p>Prepares the visitor for text generation\n",null,0],["start_accepting","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-start_accepting","()","<p>Prepares the visitor for gathering tt sections\n",null,0],["start_collecting_tokens","RDoc::TokenStream","Ruby/classes/RDoc/TokenStream.html#method-i-start_collecting_tokens","()","",null,0],["start_color","Curses","Ruby/classes/Curses.html#method-c-start_color","()","<p>Initializes the color attributes, for terminals that support it.\n<p>This must be called, in order to use …\n",null,0],["start_doc","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-start_doc","()","<p>Enable capture of documentation unless documentation has been turned off by\n:enddoc:\n",null,0],["start_document","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-start_document","(version, tag_directives, implicit)","<p>Called when the document starts with the declared <code>version</code>,\n<code>tag_directives</code>, if the document is <code>implicit</code> …\n",null,0],["start_document","Psych::TreeBuilder","Ruby/classes/Psych/TreeBuilder.html#method-i-start_document","(version, tag_directives, implicit)","<p>Handles start_document events with <code>version</code>,\n<code>tag_directives</code>, and <code>implicit</code> styling.\n<p>See Psych::Handler#start_document …\n",null,0],["start_document","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-start_document","()","",null,0],["start_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-start_document","()","",null,1],["start_element","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-start_element","(uri, localname, qname, attributes)","",null,0],["start_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-start_element","(name, attrs = [])","",null,1],["start_element?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-start_element-3F","()","<p>Content: [ String tag_name, Hash attributes ]\n",null,0],["start_export","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-start_export","()","",null,0],["start_import","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-start_import","()","",null,0],["start_job","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-start_job","(command = nil)","<p>start a job\n",null,0],["start_mapping","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-start_mapping","(anchor, tag, implicit, style)","<p>Called when a map starts.\n<p><code>anchor</code> is the anchor associated with the map or\n<code>nil</code>. <code>tag</code> is the tag associated …\n",null,0],["start_prefix_mapping","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-start_prefix_mapping","(prefix, uri)","",null,0],["start_processing","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-start_processing","(event)","",null,1],["start_profile","Profiler__","Ruby/classes/Profiler__.html#method-i-start_profile","()","",null,0],["start_sequence","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-start_sequence","(anchor, tag, implicit, style)","<p>Called when a sequence is started.\n<p><code>anchor</code> is the anchor associated with the sequence or nil.\n<code>tag</code> is the …\n",null,0],["start_server","RDoc::RI::Driver","Ruby/classes/RDoc/RI/Driver.html#method-i-start_server","()","<p>Starts a WEBrick server for ri.\n",null,0],["start_service","DRb","Ruby/classes/DRb.html#method-c-start_service","(uri=nil, front=nil, config=nil)","<p>Start a dRuby server locally.\n<p>The new dRuby server will become the primary server, even if another server\n…\n",null,0],["start_stream","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-start_stream","(encoding)","<p>Called with <code>encoding</code> when the YAML stream starts.  This method\nis called once per stream.  A stream may …\n",null,0],["start_stream","Psych::TreeBuilder","Ruby/classes/Psych/TreeBuilder.html#method-i-start_stream","(encoding)","",null,0],["start_with?","String","Ruby/classes/String.html#method-i-start_with-3F","(*args)","<p>Returns true if <code>str</code> starts with one of the\n<code>prefixes</code> given.\n\n<pre><code>&quot;hello&quot;.start_with?(&quot;hell&quot;)               #=&gt; ...\n</code></pre>\n",null,0],["started?","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-started-3F","()","<p>Returns true if the HTTP session has been started.\n",null,0],["started?","Net::POP3","Ruby/classes/Net/POP3.html#method-i-started-3F","()","<p><code>true</code> if the POP3 session has started.\n",null,0],["started?","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-started-3F","()","<p><code>true</code> if the SMTP session has been started.\n",null,0],["started_request_message","Rails::Rack::Logger","Rails/classes/Rails/Rack/Logger.html#method-i-started_request_message","(request)","<p>Started GET “/session/new” for 127.0.0.1 at 2012-09-26 14:51:42 -0700\n",null,1],["starting","GServer","Ruby/classes/GServer.html#method-i-starting","()","<p>Called when the server is starting up, if auditing is enabled.\n",null,0],["starts_with","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-starts_with","( string, test )","<p>Fixed by Mike Stok\n",null,0],["starttls","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-starttls","(options = {}, verify = true)","<p>Sends a STARTTLS command to start TLS session.\n",null,0],["starttls","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-starttls","()","<p>SMTP command dispatcher\n",null,0],["starttls?","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-starttls-3F","()","<p>Returns truth value if this object uses STARTTLS. If this object always\nuses STARTTLS, returns :always. …\n",null,0],["starttls_always?","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-starttls_always-3F","()","<p>true if this object uses STARTTLS.\n",null,0],["starttls_auto?","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-starttls_auto-3F","()","<p>true if this object uses STARTTLS when server advertises STARTTLS.\n",null,0],["stat","File","Ruby/classes/File.html#method-c-stat","(p1)","<p>Returns a <code>File::Stat</code> object for the named file (see\n<code>File::Stat</code>).\n\n<pre><code>File.stat(&quot;testfile&quot;).mtime   #=&gt; Tue ...\n</code></pre>\n",null,0],["stat","GC","Ruby/classes/GC.html#method-c-stat","(p1 = v1)","<p>Returns a Hash containing information about the GC.\n<p>The hash includes information about internal statistics …\n",null,0],["stat","IO","Ruby/classes/IO.html#method-i-stat","()","<p>Returns status information for <em>ios</em> as an object of type\n<code>File::Stat</code>.\n\n<pre><code>f = File.new(&quot;testfile&quot;)\ns = f.stat ...</code></pre>\n",null,0],["stat","Pathname","Ruby/classes/Pathname.html#method-i-stat","()","<p>Returns a File::Stat object.\n<p>See File.stat.\n",null,0],["state","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-state","()","<p>A description of the current connection state.\n",null,0],["stats","ActiveSupport::Cache::MemCacheStore","Rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-stats","()","<p>Get the statistics from the memcached servers.\n",null,1],["status","Net::FTP","Ruby/classes/Net/FTP.html#method-i-status","()","<p>Returns the status (STAT command).\n",null,0],["status","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-status","(mailbox, attr)","<p>Sends a STATUS command, and returns the status of the indicated\n<code>mailbox</code>. <code>attr</code> is a list of one or more …\n",null,0],["status","OpenSSL::OCSP::BasicResponse","Ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-status","()","",null,0],["status","OpenSSL::OCSP::Response","Ruby/classes/OpenSSL/OCSP/Response.html#method-i-status","()","",null,0],["status","PTY::ChildExited","Ruby/classes/PTY/ChildExited.html#method-i-status","()","<p>Returns the exit status of the child for which PTY#check raised this\nexception\n",null,0],["status","SystemExit","Ruby/classes/SystemExit.html#method-i-status","()","<p>Return the status value associated with this system exit.\n",null,0],["status","Thread","Ruby/classes/Thread.html#method-i-status","()","<p>Returns the status of <em>thr</em>: “<code>sleep</code>&#39;&#39; if\n<em>thr</em> is sleeping or waiting on I/O, “<code>run</code>&#39;&#39; if\n…\n",null,0],["status","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-status","()","",null,1],["status=","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-status-3D","(status)","<p>Sets the response&#39;s status to the <code>status</code> code\n",null,0],["status=","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-status-3D","(status)","",null,1],["status=","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-status-3D","(status)","<p>Sets the HTTP status code.\n",null,1],["status_code","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-status_code","()","",null,1],["status_code_for_exception","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-c-status_code_for_exception","(class_name)","",null,1],["status_line","WEBrick::HTTPResponse","Ruby/classes/WEBrick/HTTPResponse.html#method-i-status_line","()","<p>The response&#39;s HTTP status line\n",null,0],["status_message","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-status_message","()","",null,1],["status_string","OpenSSL::OCSP::Response","Ruby/classes/OpenSSL/OCSP/Response.html#method-i-status_string","()","",null,0],["status_type_char","Net::SMTP::Response","Ruby/classes/Net/SMTP/Response.html#method-i-status_type_char","()","<p>Takes the first digit of the reply code to determine the status type\n",null,0],["stdout","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-stdout","()","<p>Returns the IO used as stdout. Defaults to STDOUT\n",null,0],["stdout=","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-stdout-3D","(s)","<p>Sets the IO used as stdout. Defaults to STDOUT\n",null,0],["stdscr","Curses","Ruby/classes/Curses.html#method-c-stdscr","()","<p>The Standard Screen.\n<p>Upon initializing curses, a default window called stdscr, which is the size\nof the …\n",null,0],["step","Date","Ruby/classes/Date.html#method-i-step","(p1, p2 = v2)","<p>Iterates evaluation of the given block, which takes a date object. The\nlimit should be a date object. …\n",null,0],["step","Numeric","Ruby/classes/Numeric.html#method-i-step","(*args)","<p>Invokes <em>block</em> with the sequence of numbers starting at\n<em>num</em>, incremented by <em>step</em> (default 1) on each call. …\n",null,0],["step","Range","Ruby/classes/Range.html#method-i-step","(p1 = v1)","<p>Iterates over the range, passing each <code>n</code>th element to the\nblock. If begin and end are numeric, <code>n</code> is added …\n",null,0],["sti_name","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-sti_name","()","",null,1],["sticky?","File","Ruby/classes/File.html#method-c-sticky-3F","(p1)","<p>Returns <code>true</code> if the named file has the sticky bit set.\n",null,0],["sticky?","File::Stat","Ruby/classes/File/Stat.html#method-i-sticky-3F","()","<p>Returns <code>true</code> if <em>stat</em> has its sticky bit set,\n<code>false</code> if it doesn&#39;t or if the operating system doesn&#39;t\n…\n",null,0],["sticky?","FileTest","Ruby/classes/FileTest.html#method-i-sticky-3F","(p1)","<p>Returns <code>true</code> if the named file has the sticky bit set.\n",null,0],["sticky?","Pathname","Ruby/classes/Pathname.html#method-i-sticky-3F","()","<p>See FileTest.sticky?.\n",null,0],["stop","GServer","Ruby/classes/GServer.html#method-i-stop","()","<p>Stop the server\n",null,0],["stop","GServer","Ruby/classes/GServer.html#method-c-stop","(port, host = DEFAULT_HOST)","<p>Stop the server running on the given port, bound to the given host\n<p><code>port</code> &mdash; port, as a FixNum, of the server …\n",null,0],["stop","Thread","Ruby/classes/Thread.html#method-c-stop","()","<p>Stops execution of the current thread, putting it into a “sleep&#39;&#39;\nstate, and schedules execution …\n",null,0],["stop","WEBrick::GenericServer","Ruby/classes/WEBrick/GenericServer.html#method-i-stop","()","<p>Stops the server from accepting new connections.\n",null,0],["stop?","Thread","Ruby/classes/Thread.html#method-i-stop-3F","()","<p>Returns <code>true</code> if <em>thr</em> is dead or sleeping.\n\n<pre><code>a = Thread.new { Thread.stop }\nb = Thread.current\na.stop?   #=&gt; ...\n</code></pre>\n",null,0],["stop_doc","RDoc::CodeObject","Ruby/classes/RDoc/CodeObject.html#method-i-stop_doc","()","<p>Disable capture of documentation\n",null,0],["stop_profile","Profiler__","Ruby/classes/Profiler__.html#method-i-stop_profile","()","",null,0],["stop_service","DRb","Ruby/classes/DRb.html#method-c-stop_service","()","<p>Stop the local dRuby server.\n<p>This operates on the primary server.  If there is no primary server\ncurrently …\n",null,0],["stop_service","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-i-stop_service","()","<p>Stop this server.\n",null,0],["stop_service","DRb::ExtServ","Ruby/classes/DRb/ExtServ.html#method-i-stop_service","()","",null,0],["stopped?","GServer","Ruby/classes/GServer.html#method-i-stopped-3F","()","<p>Returns true if the server has stopped.\n",null,0],["stopped?","Process::Status","Ruby/classes/Process/Status.html#method-i-stopped-3F","()","<p>Returns <code>true</code> if this process is stopped. This is only returned\nif the corresponding <code>wait</code> call had the …\n",null,0],["stopped?","Rake::PseudoStatus","Ruby/classes/Rake/PseudoStatus.html#method-i-stopped-3F","()","",null,0],["stopping","GServer","Ruby/classes/GServer.html#method-i-stopping","()","<p>Called when the server is shutting down, if auditing is enabled.\n",null,0],["stopsig","Process::Status","Ruby/classes/Process/Status.html#method-i-stopsig","()","<p>Returns the number of the signal that caused <em>stat</em> to stop (or\n<code>nil</code> if self is not stopped).\n",null,0],["storbinary","Net::FTP","Ruby/classes/Net/FTP.html#method-i-storbinary","(cmd, file, blocksize, rest_offset = nil)","<p>Puts the connection into binary (image) mode, issues the given server-side\ncommand (such as “STOR …\n",null,0],["store","DBM","Ruby/classes/DBM.html#method-i-store","(p1, p2)","<p>Stores the specified string value in the database, indexed via the string\nkey provided.\n",null,0],["store","ENV","Ruby/classes/ENV.html#method-c-store","(p1, p2)","<p>Sets the environment variable <code>name</code> to <code>value</code>.  If\nthe value given is <code>nil</code> the environment variable is deleted. …\n",null,0],["store","GDBM","Ruby/classes/GDBM.html#method-i-store","(p1, p2)","<p>Associates the value <em>value</em> with the specified <em>key</em>.\n",null,0],["store","Hash","Ruby/classes/Hash.html#method-i-store","(p1, p2)","<p>Element Assignment\n<p>Associates the value given by <code>value</code> with the key given by\n<code>key</code>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; ...\n</code></pre>\n",null,0],["store","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-store","(set, attr, flags)","<p>Sends a STORE command to alter data associated with messages in the\nmailbox, in particular their flags. …\n",null,0],["store","SDBM","Ruby/classes/SDBM.html#method-i-store","(p1, p2)","<p>Stores a new <code>value</code> in the database with the given\n<code>key</code> as an index.\n<p>If the <code>key</code> already exists, this will …\n",null,0],["store","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-store","( key, val )","<p>Stores <code>value</code> in database with <code>key</code> as the index.\n<code>value</code> is converted to YAML before being stored.\n<p>Returns …\n",null,0],["store","ActiveRecord::Store::ClassMethods","Rails/classes/ActiveRecord/Store/ClassMethods.html#method-i-store","(store_attribute, options = {})","",null,1],["store","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-store","(klass)","",null,1],["store=","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-i-store-3D","(store)","<p>Sets the store for this method and its referenced code objects.\n",null,0],["store=","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-store-3D","(store)","<p>Sets the store for this class or module and its contained code objects.\n",null,0],["store=","RDoc::Constant","Ruby/classes/RDoc/Constant.html#method-i-store-3D","(store)","<p>Sets the store for this class or module and its contained code objects.\n",null,0],["store=","RDoc::Extend","Ruby/classes/RDoc/Extend.html#method-i-store-3D","(store)","<p>Sets the store for this class or module and its contained code objects.\n",null,0],["store=","RDoc::Include","Ruby/classes/RDoc/Include.html#method-i-store-3D","(store)","<p>Sets the store for this class or module and its contained code objects.\n",null,0],["store=","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-store-3D","(store)","<p>Sets the store for this class or module and its contained code objects.\n",null,0],["store=","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-store-3D","(store)","<p>Sets the current documentation tree to <code>store</code> and sets the\nstore&#39;s rdoc driver to this instance.\n",null,0],["store_accessor","ActiveRecord::Store::ClassMethods","Rails/classes/ActiveRecord/Store/ClassMethods.html#method-i-store_accessor","(store_attribute, *keys)","",null,1],["store_for","RDoc::Servlet","Ruby/classes/RDoc/Servlet.html#method-i-store_for","(source_name)","<p>Returns an RDoc::Store for the given <code>source_name</code>\n(&#39;ruby&#39; or a gem name).\n",null,0],["store_inherited","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-c-store_inherited","(klass, descendant)","<p>This is the only method that is not thread safe, but is only ever called\nduring the eager loading phase. …\n",null,1],["storlines","Net::FTP","Ruby/classes/Net/FTP.html#method-i-storlines","(cmd, file)","<p>Puts the connection into ASCII (text) mode, issues the given server-side\ncommand (such as “STOR …\n",null,0],["stream=","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-stream-3D","( source )","",null,0],["stream_end?","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-stream_end-3F","()","<p>Returns true if the stream is finished.\n",null,0],["streaming?","Psych::Handler","Ruby/classes/Psych/Handler.html#method-i-streaming-3F","()","<p>Is this handler a streaming handler?\n",null,0],["stress","GC","Ruby/classes/GC.html#method-c-stress","()","<p>Returns current status of GC stress mode.\n",null,0],["stress=","GC","Ruby/classes/GC.html#method-c-stress-3D","(p1)","<p>Updates the GC stress mode.\n<p>When stress mode is enabled, the GC is invoked at every GC opportunity: all\n…\n",null,0],["strftime","Date","Ruby/classes/Date.html#method-i-strftime","(*args)","\n<pre><code>Formats date according to the directives in the given format\nstring.\nThe directives begins with a percent ...</code></pre>\n",null,0],["strftime","DateTime","Ruby/classes/DateTime.html#method-i-strftime","(*args)","\n<pre><code>Formats date according to the directives in the given format\nstring.\nThe directives begins with a percent ...</code></pre>\n",null,0],["strftime","Time","Ruby/classes/Time.html#method-i-strftime","(p1)","<p>Formats <em>time</em> according to the directives in the given format\nstring.\n<p>The directives begin with a percent …\n",null,0],["strftime","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-strftime","(format)","<p>Replaces <code>%Z</code> and <code>%z</code> directives with\n<code>zone</code> and <code>formatted_offset</code>, respectively, before\npassing to Time#strftime …\n",null,1],["strict_decode64","Base64","Ruby/classes/Base64.html#method-i-strict_decode64","(str)","<p>Returns the Base64-decoded version of <code>str</code>. This method\ncomplies with RFC 4648. ArgumentError is raised …\n",null,0],["strict_encode64","Base64","Ruby/classes/Base64.html#method-i-strict_encode64","(bin)","<p>Returns the Base64-encoded version of <code>bin</code>. This method\ncomplies with RFC 4648. No line feeds are added. …\n",null,0],["strict_mode?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-strict_mode-3F","()","",null,1],["string","MatchData","Ruby/classes/MatchData.html#method-i-string","()","<p>Returns a frozen copy of the string passed in to <code>match</code>.\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.string ...</code></pre>\n",null,0],["string","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-string","( object=nil )","<p>A node-set is converted to a string by returning the string-value of the\nnode in the node-set that is …\n",null,0],["string","StringIO","Ruby/classes/StringIO.html#method-i-string","()","<p>Returns underlying String object, the subject of IO.\n",null,0],["string","StringScanner","Ruby/classes/StringScanner.html#method-i-string","()","<p>Returns the string being scanned.\n",null,0],["string=","StringIO","Ruby/classes/StringIO.html#method-i-string-3D","(p1)","<p>Changes underlying String object, the subject of IO.\n",null,0],["string=","StringScanner","Ruby/classes/StringScanner.html#method-i-string-3D","(p1)","<p>Changes the string being scanned to <code>str</code> and resets the\nscanner. Returns <code>str</code>.\n",null,0],["string_length","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-string_length","( string )","<p>UNTESTED\n",null,0],["string_to_array","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-string_to_array","(string, oid)","",null,1],["string_to_bit","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-string_to_bit","(value)","",null,1],["string_to_cidr","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-string_to_cidr","(string)","",null,1],["string_to_hstore","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-string_to_hstore","(string)","",null,1],["string_to_json","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-string_to_json","(string)","",null,1],["string_to_point","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-string_to_point","(string)","",null,1],["string_to_time","ActiveRecord::ConnectionAdapters::PostgreSQLColumn::Cast","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn/Cast.html#method-i-string_to_time","(string)","",null,1],["string_value","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-string_value","( o )","<p>A node-set is converted to a string by returning the concatenation of the\nstring-value of each of the …\n",null,0],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys","()","",null,1],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys","()","",null,1],["stringify_keys","Hash","Rails/classes/Hash.html#method-i-stringify_keys","()","<p>Return a new hash with all keys converted to strings.\n\n<pre>hash = { name: &#39;Rob&#39;, age: &#39;28&#39; }\n\nhash.stringify_keys ...</pre>\n",null,1],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys-21","()","",null,1],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys-21","()","",null,1],["stringify_keys!","Hash","Rails/classes/Hash.html#method-i-stringify_keys-21","()","<p>Destructively convert all keys to strings. Same as\n<code>stringify_keys</code>, but modifies <code>self</code>.\n",null,1],["strip","String","Ruby/classes/String.html#method-i-strip","()","<p>Returns a copy of <em>str</em> with leading and trailing whitespace\nremoved.\n\n<pre><code>&quot;    hello    &quot;.strip   #=&gt; &quot;hello&quot; ...\n</code></pre>\n",null,0],["strip!","String","Ruby/classes/String.html#method-i-strip-21","()","<p>Removes leading and trailing whitespace from <em>str</em>. Returns\n<code>nil</code> if <em>str</em> was not altered.\n",null,0],["strip_hashes","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-strip_hashes","(text)","<p>Strips leading # characters from <code>text</code>\n",null,0],["strip_heredoc","String","Rails/classes/String.html#method-i-strip_heredoc","()","<p>Strips indentation in heredocs.\n<p>For example in\n\n<pre>if options[:usage]\n  puts &lt;&lt;-USAGE.strip_heredoc\n    This ...</pre>\n",null,1],["strip_links","ActionView::Helpers::SanitizeHelper","Rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-strip_links","(html)","<p>Strips all link tags from <code>text</code> leaving just the link text.\n\n<pre>strip_links(&#39;&lt;a href=&quot;http://www.rubyonrails.org&quot;&gt;Ruby ...</pre>\n",null,1],["strip_newlines","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-strip_newlines","(text)","<p>Strips leading and trailing n characters from <code>text</code>\n",null,0],["strip_stars","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-strip_stars","(text)","<p>Strips       style comments\n",null,0],["strip_tags","ActionView::Helpers::SanitizeHelper","Rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-strip_tags","(html)","<p>Strips all HTML tags from the <code>html</code>, including comments. This\nuses the html-scanner tokenizer and so its …\n",null,1],["strong","RDoc::Markdown","Ruby/classes/RDoc/Markdown.html#method-i-strong","(text)","<p>Wraps <code>text</code> in strong markup for rdoc inline formatting\n",null,0],["strongly_connected_components","TSort","Ruby/classes/TSort.html#method-i-strongly_connected_components","()","<p>Returns strongly connected components as an array of arrays of nodes. The\narray is sorted from children …\n",null,0],["strptime","Date","Ruby/classes/Date.html#method-c-strptime","(p1 = v1, p2 = v2, p3 = v3)","<p>Parses the given representation of date and time with the given template,\nand creates a date object. …\n",null,0],["strptime","DateTime","Ruby/classes/DateTime.html#method-c-strptime","(p1 = v1, p2 = v2, p3 = v3)","<p>Parses the given representation of date and time with the given template,\nand creates a date object. …\n",null,0],["strptime","Time","Ruby/classes/Time.html#method-i-strptime","(date, format, now=self.now)","<p>Parses <code>date</code> using Date._strptime and converts it to a Time\nobject.\n<p>If a block is given, the year described …\n",null,0],["struct","DL::Importer","Ruby/classes/DL/Importer.html#method-i-struct","(signature)","<p>Creates a class to wrap the C struct described by <code>signature</code>.\n\n<pre><code>MyStruct = struct [&#39;int i&#39;, &#39;char c&#39;]</code></pre>\n",null,0],["struct","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-struct","(signature)","<p>Creates a class to wrap the C struct described by <code>signature</code>.\n\n<pre><code>MyStruct = struct [&#39;int i&#39;, &#39;char c&#39;]</code></pre>\n",null,0],["struct","XMLRPC::Convert","Ruby/classes/XMLRPC/Convert.html#method-c-struct","(hash)","<p>Converts the given <code>hash</code> to a marshalled object.\n<p>Returns the given <code>hash</code> if an exception occurs.\n",null,0],["structure_dump","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-structure_dump","(*arguments)","",null,1],["structure_load","ActiveRecord::Tasks::DatabaseTasks","Rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-structure_load","(*arguments)","",null,1],["stylesheet_link_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-stylesheet_link_tag","(*sources)","<p>Returns a stylesheet link tag for the sources specified as arguments. If\nyou don&#39;t specify an extension, …\n",null,1],["stylesheet_path","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-stylesheet_path","(source, options = {})","<p>Computes the path to a stylesheet asset in the public stylesheets\ndirectory. If the <code>source</code> filename has …\n",null,1],["stylesheet_url","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-stylesheet_url","(source, options = {})","<p>Computes the full URL to a stylesheet asset in the public stylesheets\ndirectory. This will use <code>stylesheet_path</code> …\n",null,1],["stylesheets","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-stylesheets","()","",null,1],["su","WEBrick::Utils","Ruby/classes/WEBrick/Utils.html#method-c-su","(user)","<p>Changes the process&#39;s uid and gid to the ones of <code>user</code>\n",null,0],["sub","BigDecimal","Ruby/classes/BigDecimal.html#method-i-sub","(p1, p2)","",null,0],["sub","Kernel","Ruby/classes/Kernel.html#method-i-sub","(*args)","<p>Equivalent to <code>$_.sub(<em>args</em>)</code>, except that\n<code>$_</code> will be updated if substitution occurs. Available only when\n…\n",null,0],["sub","Pathname","Ruby/classes/Pathname.html#method-i-sub","(*args)","<p>Return a pathname which is substituted by String#sub.\n\n<pre><code>path1 = Pathname.new(&#39;/usr/bin/perl&#39;)\npath1.sub(&#39;perl&#39;, ...</code></pre>\n",null,0],["sub","String","Ruby/classes/String.html#method-i-sub","(*args)","<p>Returns a copy of <code>str</code> with the <em>first</em> occurrence of\n<code>pattern</code> replaced by the second argument. The\n<code>pattern</code> …\n",null,0],["sub!","String","Ruby/classes/String.html#method-i-sub-21","(*args)","<p>Performs the same substitution as String#sub in-place.\n<p>Returns <code>str</code> if a substitution was performed or …\n",null,0],["sub_ext","Pathname","Ruby/classes/Pathname.html#method-i-sub_ext","(p1)","<p>Return a pathname with <code>repl</code> added as a suffix to the basename.\n<p>If self has no extension part, <code>repl</code> is …\n",null,0],["sub_type","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-sub_type","()","<p>Returns a content type string such as “html”. This method returns nil if\nContent-Type: header …\n",null,0],["subclasses","Class","Rails/classes/Class.html#method-i-subclasses","()","<p>Returns an array with the direct children of <code>self</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Integer</span>.<span class=\"ruby-identifier\">subclasses</span> <span class=\"ruby-comment\"># =&gt; [Fixnum, Bignum]</span>\n\n<span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Foo</span>; <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["subclasses","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-subclasses","()","<p>Track all generators subclasses.\n",null,1],["subclasses","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-subclasses","()","",null,1],["subdomain","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-subdomain","(tld_length = @@tld_length)","<p>Returns all the subdomains as a string, so <code>&quot;dev.www&quot;</code>\nwould be returned for “dev.www.rubyonrails.org …\n",null,1],["subdomain_of?","Resolv::DNS::Name","Ruby/classes/Resolv/DNS/Name.html#method-i-subdomain_of-3F","(other)","<p>Returns true if <code>other</code> is a subdomain.\n<p>Example:\n\n<pre><code>domain = Resolv::DNS::Name.create(&quot;y.z&quot;)\np Resolv::DNS::Name.create(&quot;w.x.y.z&quot;).subdomain_of?(domain) ...</code></pre>\n",null,0],["subdomains","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-subdomains","(tld_length = @@tld_length)","<p>Returns all the subdomains as an array, so <code>[&quot;dev&quot;,\n&quot;www&quot;]</code> would be returned for “ …\n",null,1],["subject","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-subject","()","",null,0],["subject","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-subject","()","",null,0],["subject=","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-subject-3D","(p1)","",null,0],["subject=","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-subject-3D","(p1)","",null,0],["subject_certificate=","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-subject_certificate-3D","(p1)","",null,0],["subject_request=","OpenSSL::X509::ExtensionFactory","Ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-subject_request-3D","(p1)","",null,0],["submit","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-submit","(value = nil, name = nil)","<p>Generate a submit button Input element, as a String.\n<p><code>value</code> is the text to display on the button.  <code>name</code>\n…\n",null,0],["submit","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-submit","(value=nil, options={})","<p>Add the submit button for the given form. When no value is given, it checks\nif the object is a new resource …\n",null,1],["submit_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-submit_tag","(value = \"Save changes\", options = {})","<p>Creates a submit button with the text <code>value</code> as the caption.\n<p>Options\n<p><code>:data</code> - This option can be used to …\n",null,1],["subpad","Curses::Pad","Ruby/classes/Curses/Pad.html#method-i-subpad","(p1, p2, p3, p4)","<p>Contruct a new subpad with constraints of <code>height</code> lines,\n<code>width</code> columns, begin at <code>begin_x</code> line, and\n<code>begin_y</code> …\n",null,0],["subquery_for","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-subquery_for","(key, select)","<p>MySQL is too stupid to create a temporary table for use subquery, so we\nhave to give it some prompting …\n",null,1],["subquery_for","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-subquery_for","(key, select)","<p>Return a subquery for the given key using the join information.\n",null,1],["subscribe","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-subscribe","(mailbox)","<p>Sends a SUBSCRIBE command to add the specified <code>mailbox</code> name to\nthe server&#39;s set of “active” …\n",null,0],["subscribe","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-subscribe","(*args, &block)","",null,1],["subscribe","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-subscribe","(pattern = nil, block = Proc.new)","",null,1],["subscribed","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-subscribed","(callback, *args, &block)","",null,1],["subscribers","ActiveSupport::Subscriber","Rails/classes/ActiveSupport/Subscriber.html#method-c-subscribers","()","",null,1],["subsec","Time","Ruby/classes/Time.html#method-i-subsec","()","<p>Returns the fraction for <em>time</em>.\n<p>The return value can be a rational number.\n\n<pre><code>t = Time.now        #=&gt; 2009-03-26 ...\n</code></pre>\n",null,0],["subset?","Set","Ruby/classes/Set.html#method-i-subset-3F","(set)","<p>Returns true if the set is a subset of the given set.\n",null,0],["substitute_at","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-substitute_at","(column, index)","<p>Returns a bind substitution value given a <code>column</code> and list of\ncurrent <code>binds</code>.\n",null,1],["substitute_at","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-substitute_at","(column, index)","",null,1],["substring","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-substring","( string, start, length=nil )","<p>Take equal portions of Mike Stok and Sean Russell; mix vigorously, and pour\ninto a tall, chilled glass. …\n",null,0],["substring_after","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-substring_after","( string, test )","<p>Kouhei fixed this too\n",null,0],["substring_before","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-substring_before","( string, test )","<p>Kouhei fixed this\n",null,0],["subtract","Set","Ruby/classes/Set.html#method-i-subtract","(enum)","<p>Deletes every element that appears in the given enumerable object and\nreturns self.\n",null,0],["subwin","Curses::Window","Ruby/classes/Curses/Window.html#method-i-subwin","(p1, p2, p3, p4)","<p>Contruct a new subwindow with constraints of <code>height</code> lines,\n<code>width</code> columns, begin at <code>top</code> line, and begin …\n",null,0],["succ","Date","Ruby/classes/Date.html#method-i-succ","()","<p>Returns a date object denoting the following day.\n",null,0],["succ","Fixnum","Ruby/classes/Fixnum.html#method-i-succ","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre><code>1.next      #=&gt; 2\n(-1).next   #=&gt; 0\n</code></pre>\n",null,0],["succ","IPAddr","Ruby/classes/IPAddr.html#method-i-succ","()","<p>Returns the successor to the ipaddr.\n",null,0],["succ","Integer","Ruby/classes/Integer.html#method-i-succ","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre><code>1.next      #=&gt; 2\n(-1).next   #=&gt; 0\n</code></pre>\n",null,0],["succ","Integer","Ruby/classes/Integer.html#method-i-succ","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre><code>1.next      #=&gt; 2\n(-1).next   #=&gt; 0\n</code></pre>\n",null,0],["succ","Prime::EratosthenesGenerator","Ruby/classes/Prime/EratosthenesGenerator.html#method-i-succ","()","",null,0],["succ","Prime::Generator23","Ruby/classes/Prime/Generator23.html#method-i-succ","()","",null,0],["succ","Prime::OldCompatibility","Ruby/classes/Prime/OldCompatibility.html#method-i-succ","()","<p>Returns the next prime number and forwards internal pointer.\n",null,0],["succ","Prime::PseudoPrimeGenerator","Ruby/classes/Prime/PseudoPrimeGenerator.html#method-i-succ","()","<p>returns the next pseudo-prime number, and move the internal position\nforward.\n<p><code>PseudoPrimeGenerator</code>#succ …\n",null,0],["succ","Prime::TrialDivisionGenerator","Ruby/classes/Prime/TrialDivisionGenerator.html#method-i-succ","()","",null,0],["succ","String","Ruby/classes/String.html#method-i-succ","()","<p>Returns the successor to <em>str</em>. The successor is calculated by\nincrementing characters starting from the …\n",null,0],["succ","Symbol","Ruby/classes/Symbol.html#method-i-succ","()","<p>Same as <code>sym.to_s.succ.intern</code>.\n",null,0],["succ","Time","Ruby/classes/Time.html#method-i-succ","()","<p>Returns a new Time object, one second later than <em>time</em>. Time#succ\nis obsolete since 1.9.2 for time is …\n",null,0],["succ!","String","Ruby/classes/String.html#method-i-succ-21","()","<p>Equivalent to <code>String#succ</code>, but modifies the receiver in place.\n",null,0],["success?","Net::SMTP::Response","Ruby/classes/Net/SMTP/Response.html#method-i-success-3F","()","<p>Determines whether the response received was a Positive Completion reply\n(2xx reply code)\n",null,0],["success?","Process::Status","Ruby/classes/Process/Status.html#method-i-success-3F","()","<p>Returns <code>true</code> if <em>stat</em> is successful,\n<code>false</code> if not. Returns <code>nil</code> if <code>exited?</code>\nis not <code>true</code>.\n",null,0],["success?","SystemExit","Ruby/classes/SystemExit.html#method-i-success-3F","()","<p>Returns <code>true</code> if exiting successful, <code>false</code> if not.\n",null,0],["success?","WEBrick::HTTPStatus","Ruby/classes/WEBrick/HTTPStatus.html#method-c-success-3F","(code)","<p>Is <code>code</code> a successful status?\n",null,0],["suffix","ActiveRecord::DynamicMatchers::FindByBang","Rails/classes/ActiveRecord/DynamicMatchers/FindByBang.html#method-c-suffix","()","",null,1],["suffix","ActiveRecord::DynamicMatchers::Method","Rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-c-suffix","()","",null,1],["suffix_pattern","Gem","Ruby/classes/Gem.html#method-c-suffix_pattern","()","<p>Glob pattern for require-able path suffixes.\n",null,0],["suffixes","Gem","Ruby/classes/Gem.html#method-c-suffixes","()","<p>Suffixes for require-able paths.\n",null,0],["suggest_gems_from_name","Gem::SpecFetcher","Ruby/classes/Gem/SpecFetcher.html#method-i-suggest_gems_from_name","(gem_name)","<p>Suggests gems based on the supplied <code>gem_name</code>. Returns an array\nof alternative gem names.\n",null,0],["sum","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-sum","( nodes )","",null,0],["sum","String","Ruby/classes/String.html#method-i-sum","(p1 = v1)","<p>Returns a basic <em>n</em>-bit checksum of the characters in <em>str</em>,\nwhere <em>n</em> is the optional <code>Fixnum</code> parameter, defaulting\n…\n",null,0],["sum","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-sum","(*args)","<p>Calculates the sum of values on a given column. The value is returned with\nthe same data type of the …\n",null,1],["sum","Enumerable","Rails/classes/Enumerable.html#method-i-sum","(identity = 0, &block)","<p>Calculates a sum from the elements.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">payments</span>.<span class=\"ruby-identifier\">sum</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">p</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">price</span> * <span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">tax_rate</span> }\n<span class=\"ruby-identifier\">payments</span>.<span class=\"ruby-identifier\">sum</span>(&amp;:<span class=\"ruby-identifier\">price</span>)\n</pre>\n<p>The …\n",null,1],["summarize","OptionParser","Ruby/classes/OptionParser.html#method-i-summarize","(to = [], width = @summary_width, max = width - 1, indent = @summary_indent, &blk)","<p>Puts option summary into <code>to</code> and returns <code>to</code>.\nYields each line if a block is given.\n<p><code>to</code> &mdash; Output destination, …\n",null,0],["summarize","OptionParser::List","Ruby/classes/OptionParser/List.html#method-i-summarize","(*args, &block)","<p>Creates the summary table, passing each line to the <code>block</code>\n(without newline). The arguments <code>args</code> are passed …\n",null,0],["summarize","OptionParser::Switch","Ruby/classes/OptionParser/Switch.html#method-i-summarize","(sdone = [], ldone = [], width = 1, max = width - 1, indent = \"\")","<p>Produces the summary text. Each line of the summary is yielded to the block\n(without newline).\n<p><code>sdone</code> &mdash; ",null,0],["summary","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-summary","()","<p>Returns a summary of the collected statistics.\n",null,0],["summary=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-summary-3D","(str)","<p>A short summary of this gem&#39;s description.\n",null,0],["sunday","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-sunday","()","<p>Returns Sunday of this week assuming that week starts on Monday.\n<code>DateTime</code> objects have their time set …\n",null,1],["sunday?","Date","Ruby/classes/Date.html#method-i-sunday-3F","()","<p>Returns true if the date is Sunday.\n",null,0],["sunday?","Time","Ruby/classes/Time.html#method-i-sunday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Sunday.\n\n<pre><code>t = Time.local(1990, 4, 1)       #=&gt; 1990-04-01 00:00:00 -0600 ...\n</code></pre>\n",null,0],["super_each","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-super_each","(rs = nil)","",null,0],["superclass","Class","Ruby/classes/Class.html#method-i-superclass","()","<p>Returns the superclass of <em>class</em>, or <code>nil</code>.\n\n<pre><code>File.superclass          #=&gt; IO\nIO.superclass            #=&gt; ...\n</code></pre>\n",null,0],["superclass","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-superclass","()","<p>Get the superclass of this class.  Attempts to retrieve the superclass\nobject, returns the name if it …\n",null,0],["superclass","RDoc::NormalModule","Ruby/classes/RDoc/NormalModule.html#method-i-superclass","()","<p>Modules don&#39;t have one, raises NoMethodError\n",null,0],["superclass=","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-superclass-3D","(superclass)","<p>Set the superclass of this class to <code>superclass</code>\n",null,0],["superclass_delegating_accessor","Class","Rails/classes/Class.html#method-i-superclass_delegating_accessor","(name, options = {})","",null,1],["superclass_method","RDoc::AnyMethod","Ruby/classes/RDoc/AnyMethod.html#method-i-superclass_method","()","<p>For methods that <code>super</code>, find the superclass method that would\nbe called.\n",null,0],["superset?","Set","Ruby/classes/Set.html#method-i-superset-3F","(set)","<p>Returns true if the set is a superset of the given set.\n",null,0],["supported?","RSS::Maker","Ruby/classes/RSS/Maker.html#method-i-supported-3F","(version)","<p>Returns true if the version is supported\n",null,0],["supports_add_column?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_add_column-3F","()","<p>Returns true\n",null,1],["supports_bulk_alter?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_bulk_alter-3F","()","",null,1],["supports_count_distinct?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_count_distinct-3F","()","<p>Does this adapter support using DISTINCT within COUNT? This is\n<code>true</code> for all adapters except sqlite.\n",null,1],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_ddl_transactions-3F","()","<p>Does this adapter support DDL rollbacks in transactions? That is, would\nCREATE TABLE or ALTER TABLE get …\n",null,1],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_ddl_transactions-3F","()","",null,1],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_ddl_transactions-3F","()","<p>Returns true\n",null,1],["supports_explain?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_explain-3F","()","<p>Does this adapter support explain? As of this writing sqlite3, mysql2, and\npostgresql are the only ones …\n",null,1],["supports_explain?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-supports_explain-3F","()","",null,1],["supports_explain?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_explain-3F","()","<p>Returns true.\n",null,1],["supports_explain?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_explain-3F","()","<p>Returns true.\n",null,1],["supports_extensions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_extensions-3F","()","<p>Does this adapter support database extensions? As of this writing only\npostgresql does.\n",null,1],["supports_extensions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_extensions-3F","()","<p>Returns true if pg &gt; 9.1\n",null,1],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_index_sort_order-3F","()","<p>Does this adapter support index sort order?\n",null,1],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_index_sort_order-3F","()","<p>Technically MySQL allows to create indexes with the sort order syntax but\nat the moment (5.5) it doesn&#39;t …\n",null,1],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_index_sort_order-3F","()","",null,1],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_index_sort_order-3F","()","",null,1],["supports_insert_with_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_insert_with_returning-3F","()","",null,1],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_migrations-3F","()","<p>Does this adapter support migrations? Backend specific, as the abstract\nadapter always returns <code>false</code> …\n",null,1],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_migrations-3F","()","<p>Returns true, since this connection adapter supports migrations.\n",null,1],["supports_migrations?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_migrations-3F","()","<p>Returns true, since this connection adapter supports migrations.\n",null,1],["supports_partial_index?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_partial_index-3F","()","<p>Does this adapter support partial indices?\n",null,1],["supports_partial_index?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_partial_index-3F","()","",null,1],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_primary_key-3F","()","<p>Can this adapter determine the primary key for tables not attached to an\nActive Record class, such as …\n",null,1],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_primary_key-3F","()","",null,1],["supports_ranges?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_ranges-3F","()","<p>Range datatypes weren&#39;t introduced until PostgreSQL 9.2\n",null,1],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_savepoints-3F","()","<p>Does this adapter support savepoints? PostgreSQL and MySQL do, SQLite &lt;\n3.6.8 does not.\n",null,1],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_savepoints-3F","()","<p>Returns true, since this connection adapter supports savepoints.\n",null,1],["supports_savepoints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_savepoints-3F","()","<p>Returns true, since this connection adapter supports savepoints.\n",null,1],["supports_savepoints?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_savepoints-3F","()","<p>Returns true if SQLite version is &#39;3.6.8&#39; or greater, false\notherwise.\n",null,1],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-supports_statement_cache-3F","()","<p>Returns <code>true</code> when the connection adapter supports prepared\nstatement caching, otherwise returns <code>false</code> …\n",null,1],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-supports_statement_cache-3F","()","<p>Returns true, since this connection adapter supports prepared statement\ncaching.\n",null,1],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_statement_cache-3F","()","<p>Returns <code>true</code>, since this connection adapter supports prepared\nstatement caching.\n",null,1],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_statement_cache-3F","()","<p>Returns true, since this connection adapter supports prepared statement\ncaching.\n",null,1],["supports_streaming?","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-supports_streaming-3F","()","<p>Returns if the underlying handler supports streaming. If so, a streaming\nbuffer <strong>may</strong> be passed when it …\n",null,1],["supports_streaming?","ActionView::Template::Handlers::ERB","Rails/classes/ActionView/Template/Handlers/ERB.html#method-i-supports_streaming-3F","()","",null,1],["supports_transaction_isolation?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_transaction_isolation-3F","()","<p>Does this adapter support setting the isolation level for a transaction?\n",null,1],["supports_transaction_isolation?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_transaction_isolation-3F","()","<p>MySQL 4 technically support transaction isolation, but it is affected by a\nbug where the transaction …\n",null,1],["supports_transaction_isolation?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_transaction_isolation-3F","()","",null,1],["suppress","Kernel","Rails/classes/Kernel.html#method-i-suppress","(*exception_classes)","<p>Blocks and ignores any exception passed as argument if raised within the\nblock.\n\n<pre>suppress(ZeroDivisionError) ...</pre>\n",null,1],["suppress_messages","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-suppress_messages","()","",null,1],["suppressed?","RDoc::Markup::ToTableOfContents","Ruby/classes/RDoc/Markup/ToTableOfContents.html#method-i-suppressed-3F","(heading)","<p>Returns true if <code>heading</code> is below the display threshold\n",null,0],["suspend","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-suspend","()","",null,0],["suspend_context","IRB::Irb","Ruby/classes/IRB/Irb.html#method-i-suspend_context","(context)","<p>Evaluates the given block using the given <code>context</code> as the\nContext.\n",null,0],["suspend_input_method","IRB::Irb","Ruby/classes/IRB/Irb.html#method-i-suspend_input_method","(input_method)","<p>Evaluates the given block using the given <code>input_method</code> as the\nContext#io.\n<p>Used by the irb commands <code>source</code> …\n",null,0],["suspend_name","IRB::Irb","Ruby/classes/IRB/Irb.html#method-i-suspend_name","(path = nil, name = nil)","<p>Evaluates the given block using the given <code>path</code> as the\nContext#irb_path and <code>name</code> as the Context#irb_name …\n",null,0],["suspend_workspace","IRB::Irb","Ruby/classes/IRB/Irb.html#method-i-suspend_workspace","(workspace)","<p>Evaluates the given block using the given <code>workspace</code> as the\nContext#workspace.\n<p>Used by the irb command …\n",null,0],["swap","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-swap","(target, *args, &block)","",null,1],["swap","Rails::Configuration::MiddlewareStackProxy","Rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-swap","(*args, &block)","",null,1],["swapcase","String","Ruby/classes/String.html#method-i-swapcase","()","<p>Returns a copy of <em>str</em> with uppercase alphabetic characters\nconverted to lowercase and lowercase characters …\n",null,0],["swapcase","Symbol","Ruby/classes/Symbol.html#method-i-swapcase","()","<p>Same as <code>sym.to_s.swapcase.intern</code>.\n",null,0],["swapcase","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-swapcase","()","<p>Converts characters in the string to the opposite case.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;El Cañón&quot;.mb_chars.swapcase.to_s # =&gt; &quot;eL cAÑÓN&quot;\n</span></pre>\n",null,1],["swapcase","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-swapcase","(string)","",null,1],["swapcase!","String","Ruby/classes/String.html#method-i-swapcase-21","()","<p>Equivalent to <code>String#swapcase</code>, but modifies the receiver in\nplace, returning <em>str</em>, or <code>nil</code> if no changes …\n",null,0],["swapcase_mapping","ActiveSupport::Multibyte::Unicode::Codepoint","Rails/classes/ActiveSupport/Multibyte/Unicode/Codepoint.html#method-i-swapcase_mapping","()","",null,1],["switch","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-switch","(key)","<p>Changes the current active irb session to the given <code>key</code> in the\njobs Array.\n<p>Raises an IrbAlreadyDead exception …\n",null,0],["switch","Process::GID","Ruby/classes/Process/GID.html#method-c-switch","()","<p>Switch the effective and real group IDs of the current process. If a\n<em>block</em> is given, the group IDs will …\n",null,0],["switch","Process::UID","Ruby/classes/Process/UID.html#method-c-switch","()","<p>Switch the effective and real user IDs of the current process. If a\n<em>block</em> is given, the user IDs will …\n",null,0],["switch_name","OptionParser::Switch","Ruby/classes/OptionParser/Switch.html#method-i-switch_name","()","<p>Main name of the switch.\n",null,0],["sym","DL::CompositeHandler","Ruby/classes/DL/CompositeHandler.html#method-i-sym","(symbol)","",null,0],["sym","DL::Handle","Ruby/classes/DL/Handle.html#method-i-sym","(p1)","\n<pre><code>Document-method: []</code></pre>\n<p>Get the address as an Integer for the function named <code>name</code>.\n",null,0],["sym","DL::Handle","Ruby/classes/DL/Handle.html#method-c-sym","(p1)","\n<pre><code>Document-method: []</code></pre>\n<p>Get the address as an Integer for the function named <code>name</code>.\n",null,0],["sym","Fiddle::CompositeHandler","Ruby/classes/Fiddle/CompositeHandler.html#method-i-sym","(symbol)","<p>Returns the address as an Integer from any handlers with the function named\n<code>symbol</code>.\n<p>Raises a DLError if …\n",null,0],["sym","Fiddle::Handle","Ruby/classes/Fiddle/Handle.html#method-c-sym","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.\n",null,0],["sym","Fiddle::Handle","Ruby/classes/Fiddle/Handle.html#method-i-sym","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.\n",null,0],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-symbolize_keys","()","",null,1],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-symbolize_keys","()","",null,1],["symbolize_keys","Hash","Rails/classes/Hash.html#method-i-symbolize_keys","()","<p>Return a new hash with all keys converted to symbols, as long as they\nrespond to <code>to_sym</code>.\n\n<pre>hash = { &#39;name&#39; ...</pre>\n",null,1],["symbolize_keys!","Hash","Rails/classes/Hash.html#method-i-symbolize_keys-21","()","<p>Destructively convert all keys to symbols, as long as they respond to\n<code>to_sym</code>. Same as <code>symbolize_keys</code> …\n",null,1],["symbolized_base_class","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-symbolized_base_class","()","",null,1],["symbolized_path_parameters","ActionDispatch::Http::Parameters","Rails/classes/ActionDispatch/Http/Parameters.html#method-i-symbolized_path_parameters","()","<p>The same as <code>path_parameters</code> with explicitly symbolized keys.\n",null,1],["symbolized_sti_name","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-symbolized_sti_name","()","",null,1],["symbols","Mime::Mimes","Rails/classes/Mime/Mimes.html#method-i-symbols","()","",null,1],["symlink","File","Ruby/classes/File.html#method-c-symlink","(p1, p2)","<p>Creates a symbolic link called <em>new_name</em> for the existing file\n<em>old_name</em>. Raises a <code>NotImplemented</code> exception …\n",null,0],["symlink","FileUtils","Ruby/classes/FileUtils.html#method-c-symlink","(src, dest, options = {})","",null,0],["symlink","Sys","Ruby/classes/Sys.html#method-i-symlink","(file_name, dest_file)","<p>Symlink <code>file_name</code> to <code>dest_file</code>.\n",null,0],["symlink?","File","Ruby/classes/File.html#method-c-symlink-3F","(p1)","<p>Returns <code>true</code> if the named file is a symbolic link.\n",null,0],["symlink?","File::Stat","Ruby/classes/File/Stat.html#method-i-symlink-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a symbolic link,\n<code>false</code> if it isn&#39;t or if the operating system doesn&#39;t …\n",null,0],["symlink?","FileTest","Ruby/classes/FileTest.html#method-i-symlink-3F","(p1)","<p>Returns <code>true</code> if the named file is a symbolic link.\n",null,0],["symlink?","Pathname","Ruby/classes/Pathname.html#method-i-symlink-3F","()","<p>See FileTest.symlink?.\n",null,0],["symlink?","Rake::FtpFile","Ruby/classes/Rake/FtpFile.html#method-i-symlink-3F","()","",null,0],["symlink_files","Sys","Ruby/classes/Sys.html#method-i-symlink_files","(wildcard, dest_dir)","<p>Symlink all files matching <code>wildcard</code> into the directory\n<code>dest_dir</code>.\n",null,0],["symmetric?","Matrix","Ruby/classes/Matrix.html#method-i-symmetric-3F","()","<p>Returns <code>true</code> is this is a symmetric matrix. Raises an error if\nmatrix is not square.\n",null,0],["sync","GDBM","Ruby/classes/GDBM.html#method-i-sync","()","<p>Unless the <em>gdbm</em> object has been opened with the\n<strong>SYNC</strong> flag, it is not guarenteed that database modification\n…\n",null,0],["sync","IO","Ruby/classes/IO.html#method-i-sync","()","<p>Returns the current “sync mode&#39;&#39; of <em>ios</em>. When sync mode is\ntrue, all output is immediately flushed …\n",null,0],["sync","StringIO","Ruby/classes/StringIO.html#method-i-sync","()","<p>Returns <code>true</code> always.\n",null,0],["sync","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-sync","()","<p>Same as IO#sync\n",null,0],["sync","Zlib::Inflate","Ruby/classes/Zlib/Inflate.html#method-i-sync","(p1)","<p>Inputs <code>string</code> into the end of input buffer and skips data\nuntil a full flush point can be found.  If …\n",null,0],["sync=","IO","Ruby/classes/IO.html#method-i-sync-3D","(p1)","<p>Sets the “sync mode&#39;&#39; to <code>true</code> or <code>false</code>.\nWhen sync mode is true, all output is immediately flushed …\n",null,0],["sync=","StringIO","Ruby/classes/StringIO.html#method-i-sync-3D","(p1)","",null,0],["sync=","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-sync-3D","(p1)","<p>Same as IO.  If flag is <code>true</code>, the associated IO object must\nrespond to the <code>flush</code> method.  While <code>sync</code> …\n",null,0],["sync_exclusive?","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_exclusive-3F","()","",null,0],["sync_exclusive?","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_exclusive-3F","()","",null,0],["sync_extend","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_extend","()","",null,0],["sync_extend","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_extend","()","",null,0],["sync_inspect","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_inspect","()","",null,0],["sync_inspect","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_inspect","()","",null,0],["sync_lock","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_lock","(m = EX)","",null,0],["sync_lock","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_lock","(m = EX)","",null,0],["sync_locked?","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_locked-3F","()","<p>accessing\n",null,0],["sync_locked?","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_locked-3F","()","<p>accessing\n",null,0],["sync_point?","Zlib::Inflate","Ruby/classes/Zlib/Inflate.html#method-i-sync_point-3F","()","<p>Quoted verbatim from original documentation:\n\n<pre><code>What is this?</code></pre>\n<p><code>:)</code>\n",null,0],["sync_shared?","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_shared-3F","()","",null,0],["sync_shared?","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_shared-3F","()","",null,0],["sync_synchronize","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_synchronize","(mode = EX)","",null,0],["sync_synchronize","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_synchronize","(mode = EX)","",null,0],["sync_try_lock","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_try_lock","(mode = EX)","<p>locking methods.\n",null,0],["sync_try_lock","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_try_lock","(mode = EX)","<p>locking methods.\n",null,0],["sync_unlock","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_unlock","(m = EX)","",null,0],["sync_unlock","Sync_m","Ruby/classes/Sync_m.html#method-i-sync_unlock","(m = EX)","",null,0],["synchronize","MonitorMixin","Ruby/classes/MonitorMixin.html#method-i-synchronize","()","",null,0],["synchronize","Mutex","Ruby/classes/Mutex.html#method-i-synchronize","()","<p>Obtains a lock, runs the block, and releases the lock when the block\ncompletes.  See the example under …\n",null,0],["syncmode=","GDBM","Ruby/classes/GDBM.html#method-i-syncmode-3D","(p1)","<p>Turns the database&#39;s synchronization mode on or off. If the\nsynchronization mode is turned on, the …\n",null,0],["syntax","","Ruby/files/ruby/doc/syntax_rdoc.html","","<p>Ruby Syntax\n<p>The Ruby syntax is large and is split up into the following sections:\n<p>Literals  &mdash; Numbers, Strings …\n",null,0],["synthesize_file_task","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-synthesize_file_task","(task_name)","",null,0],["sysaccept","Socket","Ruby/classes/Socket.html#method-i-sysaccept","()","<p>Accepts an incoming connection returning an array containing the (integer)\nfile descriptor for the incoming …\n",null,0],["sysaccept","TCPServer","Ruby/classes/TCPServer.html#method-i-sysaccept","()","<p>Returns a file descriptor of a accepted connection.\n\n<pre><code>TCPServer.open(&quot;127.0.0.1&quot;, 28561) {|serv|\n  fd = ...\n</code></pre>\n",null,0],["sysaccept","UNIXServer","Ruby/classes/UNIXServer.html#method-i-sysaccept","()","<p>Accepts a new connection. It returns the new file descriptor which is an\ninteger.\n\n<pre><code>UNIXServer.open(&quot;/tmp/sock&quot;) ...</code></pre>\n",null,0],["syscall","Kernel","Ruby/classes/Kernel.html#method-i-syscall","(*args)","\n<pre><code>Calls the operating system function identified by _num_ and\nreturns the result of the function or raises ...</code></pre>\n",null,0],["sysclose","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-sysclose","()","<p>Shuts down the SSL connection and prepares it for another connection.\n",null,0],["sysconfdir","Etc","Ruby/classes/Etc.html#method-c-sysconfdir","()","<p>Returns system configuration directory.\n<p>This is typically “/etc”, but is modified by the prefix …\n",null,0],["syslog","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-c-syslog","()","<p>Returns the internal Syslog object that is initialized when the first\ninstance is created.\n",null,0],["syslog=","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-c-syslog-3D","(syslog)","<p>Specifies the internal Syslog object to be used.\n",null,0],["sysopen","IO","Ruby/classes/IO.html#method-c-sysopen","(p1, p2 = v2, p3 = v3)","<p>Opens the given path, returning the underlying file descriptor as a\n<code>Fixnum</code>.\n\n<pre><code>IO.sysopen(&quot;testfile&quot;)   #=&gt; ...\n</code></pre>\n",null,0],["sysopen","Pathname","Ruby/classes/Pathname.html#method-i-sysopen","(p1 = v1, p2 = v2)","<p>See IO.sysopen.\n",null,0],["sysread","IO","Ruby/classes/IO.html#method-i-sysread","(p1, p2 = v2)","<p>Reads <em>maxlen</em> bytes from <em>ios</em> using a low-level read and\nreturns them as a string.  Do not mix with other …\n",null,0],["sysread","IO::readable","Ruby/classes/IO/readable.html#method-i-sysread","(*args)","<p>Similar to #read, but raises <code>EOFError</code> at end of string instead\nof returning <code>nil</code>, as well as IO#sysread …\n",null,0],["sysread","Object","Ruby/classes/Object.html#method-i-sysread","(io, size)","<p>cgi_runner.rb – CGI launcher.\n<p>Author: IPR – Internet Programming with Ruby – writers Copyright © …\n",null,0],["sysread","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-sysread","(*args)","<p>Reads <code>length</code> bytes from the SSL connection.  If a\npre-allocated <code>buffer</code> is provided the data will be written …\n",null,0],["sysseek","IO","Ruby/classes/IO.html#method-i-sysseek","(p1, p2 = v2)","<p>Seeks to a given <em>offset</em> in the stream according to the value of\n<em>whence</em> (see <code>IO#seek</code> for values of <em>whence</em> …\n",null,0],["syssign","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-syssign","(p1)","<p>Computes and returns the DSA signature of <code>string</code>, where\n<code>string</code> is expected to be an already-computed …\n",null,0],["system","Kernel","Ruby/classes/Kernel.html#method-i-system","(*args)","<p>Executes <em>command…</em> in a subshell. <em>command…</em> is one of\nfollowing forms.\n\n<pre><code>commandline                 : ...</code></pre>\n",null,0],["system","Net::FTP","Ruby/classes/Net/FTP.html#method-i-system","()","<p>Returns system information.\n",null,0],["system","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-system","()","<p>This method retrieves the system identifier identifying the document&#39;s\nDTD\n<p>Method contributed by  …\n",null,0],["system","Rake::AltSystem","Ruby/classes/Rake/AltSystem.html#method-i-system","(cmd, *args)","",null,0],["system","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-system","(command, *opts)","<p>Executes the given <code>command</code> with the <code>options</code>\nparameter.\n<p>Example:\n\n<pre><code>print sh.system(&quot;ls&quot;, &quot;-l&quot;)\nsh.system(&quot;ls&quot;, ...</code></pre>\n",null,0],["system_dir","RDoc::RI::Paths","Ruby/classes/RDoc/RI/Paths.html#method-c-system_dir","()","<p>The location of the built-in ri data.\n<p>This data is built automatically when `make` is run when ruby is …\n",null,0],["system_dir","Rake::Application","Ruby/classes/Rake/Application.html#method-i-system_dir","()","<p>The directory path containing the system wide rakefiles.\n",null,0],["system_dir","Rake::Application","Ruby/classes/Rake/Application.html#method-i-system_dir","()","<p>The directory path containing the system wide rakefiles.\n",null,0],["system_path=","Shell","Ruby/classes/Shell.html#method-i-system_path-3D","(path)","<p>Sets the system path (the Shell instance&#39;s PATH environment variable).\n<p><code>path</code> should be an array of …\n",null,0],["systmpdir","Etc","Ruby/classes/Etc.html#method-c-systmpdir","()","<p>Returns system temporary directory; typically “/tmp”.\n",null,0],["sysverify","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-sysverify","(p1, p2)","<p>Verifies whether the signature is valid given the message digest input. It\ndoes so by validating <code>sig</code> …\n",null,0],["syswrite","IO","Ruby/classes/IO.html#method-i-syswrite","(p1)","<p>Writes the given string to <em>ios</em> using a low-level write. Returns\nthe number of bytes written. Do not mix …\n",null,0],["syswrite","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-syswrite","(p1)","<p>Writes <code>string</code> to the SSL connection.\n",null,0],["t","Matrix","Ruby/classes/Matrix.html#method-i-t","()","",null,0],["t","AbstractController::Translation","Rails/classes/AbstractController/Translation.html#method-i-t","(*args)","",null,1],["t","ActionView::Helpers::TranslationHelper","Rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-t","(key, options = {})","",null,1],["table","CSV","Ruby/classes/CSV.html#method-c-table","(path, options = Hash.new)","<p>A shortcut for:\n\n<pre><code>CSV.read( path, { headers:           true,\n                  converters:        :numeric, ...</code></pre>\n",null,0],["table_alias_for","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-table_alias_for","(table_name)","<p>Truncates a table alias according to the limits of the current adapter.\n",null,1],["table_alias_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-table_alias_length","()","<p>Returns the maximum length of a table alias.\n",null,1],["table_alias_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-table_alias_length","()","<p>Returns the configured supported identifier length supported by PostgreSQL\n",null,1],["table_exists?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-table_exists-3F","(name)","",null,1],["table_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-table_exists-3F","(name)","<p>Returns true if table exists. If the schema is not specified as part of\n<code>name</code> then it will only find tables …\n",null,1],["table_exists?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-table_exists-3F","(table_name)","",null,1],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-table_exists-3F","(name)","<p>A cached lookup for table existence.\n",null,1],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-table_exists-3F","(table_name)","<p>Checks to see if the table <code>table_name</code> exists on the database.\n\n<pre>table_exists?(:developers)</pre>\n",null,1],["table_exists?","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_exists-3F","()","<p>Indicates whether the table associated with this class exists\n",null,1],["table_name","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_name","()","<p>Guesses the table name (in forced lower-case) based on the name of the\nclass in the inheritance hierarchy …\n",null,1],["table_name","ActiveRecord::SchemaMigration","Rails/classes/ActiveRecord/SchemaMigration.html#method-c-table_name","()","",null,1],["table_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-table_name","()","",null,1],["table_name=","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_name-3D","(value)","<p>Sets the table name explicitly. Example:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Project</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">table_name</span> = <span class=\"ruby-string\">&quot;project&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["table_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-table_name_length","()","<p>Returns the maximum length of a table name.\n",null,1],["table_of_contents","RDoc::Markup::Document","Ruby/classes/RDoc/Markup/Document.html#method-i-table_of_contents","()","<p>Returns an Array of headings in the document.\n<p>Require &#39;rdoc/markup/formatter&#39; before calling this …\n",null,0],["table_rows","ActiveRecord::FixtureSet","Rails/classes/ActiveRecord/FixtureSet.html#method-i-table_rows","()","<p>Return a hash of rows to be inserted. The key is the table, the value is a\nlist of rows to insert to …\n",null,1],["table_structure","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-table_structure","(table_name)","",null,1],["tableize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-tableize","(class_name)","<p>Create the name of a table like Rails does for models to table names. This\nmethod uses the <code>pluralize</code> …\n",null,1],["tableize","String","Rails/classes/String.html#method-i-tableize","()","<p>Creates the name of a table like Rails does for models to table names. This\nmethod uses the <code>pluralize</code> …\n",null,1],["tables","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-tables","(name = nil)","<p>Returns the list of all tables in the schema search path or a specified\nschema.\n",null,1],["tables","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-tables","(name = nil)","",null,1],["tag","XMLRPC::XMLWriter::Abstract","Ruby/classes/XMLRPC/XMLWriter/Abstract.html#method-i-tag","(name, txt)","",null,0],["tag","ActionView::Helpers::ActiveModelInstanceTag","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-tag","(type, options, *)","",null,1],["tag","ActionView::Helpers::TagHelper","Rails/classes/ActionView/Helpers/TagHelper.html#method-i-tag","(name, options = nil, open = false, escape = true)","<p>Returns an empty HTML tag of type <code>name</code> which by default is\nXHTML compliant. Set <code>open</code> to true to create …\n",null,1],["tag_end","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-tag_end","(name)","<p>Called when the end tag is reached.  In the case of &lt;tag/&gt;, tag_end\nwill be called immidiately …\n",null,0],["tag_end","RSS::ListenerMixin","Ruby/classes/RSS/ListenerMixin.html#method-i-tag_end","(name)","",null,0],["tag_name","RSS::Element","Ruby/classes/RSS/Element.html#method-i-tag_name","()","",null,0],["tag_start","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-tag_start","(name, attrs)","<p>Called when a tag is encountered. @p name the tag name @p attrs an array of\narrays of attribute/value …\n",null,0],["tag_start","RSS::ListenerMixin","Ruby/classes/RSS/ListenerMixin.html#method-i-tag_start","(name, attributes)","",null,0],["tagged","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-i-tagged","(*tags)","",null,1],["tagurize","Psych","Ruby/classes/Psych.html#method-c-tagurize","(thing)","",null,0],["tail!","Rails::Rack::LogTailer","Rails/classes/Rails/Rack/LogTailer.html#method-i-tail-21","()","",null,1],["taint","Delegator","Ruby/classes/Delegator.html#method-i-taint","","<p>Taint both the object returned by _<em>getobj</em>_ and self.\n",null,0],["taint","Object","Ruby/classes/Object.html#method-i-taint","()","<p>Marks <em>obj</em> as tainted—if the <code>$SAFE</code> level is set\nappropriately, many method calls which might alter the …\n",null,0],["taint","Pathname","Ruby/classes/Pathname.html#method-i-taint","()","<p>Taints this Pathname.\n<p>See Object.taint.\n",null,0],["tainted?","Object","Ruby/classes/Object.html#method-i-tainted-3F","()","<p>Returns <code>true</code> if the object is tainted.\n",null,0],["take","Array","Ruby/classes/Array.html#method-i-take","(p1)","<p>Returns first <code>n</code> elements from the array.\n<p>If a negative number is given, raises an ArgumentError.\n<p>See also …\n",null,0],["take","Enumerable","Ruby/classes/Enumerable.html#method-i-take","(p1)","<p>Returns first n elements from <em>enum</em>.\n\n<pre><code>a = [1, 2, 3, 4, 5, 0]\na.take(3)             #=&gt; [1, 2, 3]\n</code></pre>\n",null,0],["take","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-take","(p1)","",null,0],["take","Rinda::TupleSpace","Ruby/classes/Rinda/TupleSpace.html#method-i-take","(tuple, sec=nil, &block)","<p>Removes <code>tuple</code>\n",null,0],["take","Rinda::TupleSpaceProxy","Ruby/classes/Rinda/TupleSpaceProxy.html#method-i-take","(tuple, sec=nil, &block)","<p>Takes <code>tuple</code> from the proxied TupleSpace.  See TupleSpace#take.\n",null,0],["take","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-take","(limit = nil)","<p>Gives a record (or N records if a parameter is supplied) without any\nimplied order. The order will depend …\n",null,1],["take!","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-take-21","()","<p>Same as <code>take</code> but raises\n<code>ActiveRecord::RecordNotFound</code> if no record is found. Note that\n<code>take!</code> accepts no …\n",null,1],["take_while","Array","Ruby/classes/Array.html#method-i-take_while","()","<p>Passes elements to the block until the block returns <code>nil</code> or\n<code>false</code>, then stops iterating and returns an …\n",null,0],["take_while","Enumerable","Ruby/classes/Enumerable.html#method-i-take_while","()","<p>Passes elements to the block until the block returns <code>nil</code> or\n<code>false</code>, then stops iterating and returns an …\n",null,0],["take_while","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-take_while","()","",null,0],["tan","CMath","Ruby/classes/CMath.html#method-c-tan","(z)","<p>returns the tangent of <code>z</code>, where <code>z</code> is given in\nradians\n",null,0],["tan","Math","Ruby/classes/Math.html#method-c-tan","(p1)","<p>Returns the tangent of <em>x</em> (expressed in radians).\n",null,0],["tan!","CMath","Ruby/classes/CMath.html#method-c-tan-21","(z)","",null,0],["tanh","CMath","Ruby/classes/CMath.html#method-c-tanh","(z)","<p>returns the hyperbolic tangent of <code>z</code>, where <code>z</code> is\ngiven in radians\n",null,0],["tanh","Math","Ruby/classes/Math.html#method-c-tanh","(p1)","<p>Computes the hyperbolic tangent of <em>x</em> (expressed in radians).\n",null,0],["tanh!","CMath","Ruby/classes/CMath.html#method-c-tanh-21","(z)","",null,0],["tap","Object","Ruby/classes/Object.html#method-i-tap","()","<p>Yields <code>x</code> to the block, and then returns <code>x</code>. The\nprimary purpose of this method is to “tap into” …\n",null,0],["tar_bz2_file","Rake::PackageTask","Ruby/classes/Rake/PackageTask.html#method-i-tar_bz2_file","()","",null,0],["tar_gz_file","Rake::PackageTask","Ruby/classes/Rake/PackageTask.html#method-i-tar_gz_file","()","",null,0],["target","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-target","()","",null,1],["task_defined?","Rake::Task","Ruby/classes/Rake/Task.html#method-i-task_defined-3F","(task_name)","<p>TRUE if the task name is already defined.\n",null,0],["tasks","Rake::NameSpace","Ruby/classes/Rake/NameSpace.html#method-i-tasks","()","<p>Return the list of tasks defined in this and nested namespaces.\n",null,0],["tasks","Rake::Task","Ruby/classes/Rake/Task.html#method-i-tasks","()","<p>List of all defined tasks.\n",null,0],["tasks","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-tasks","()","<p>List of all defined tasks in this application.\n",null,0],["tasks","Build","Rails/classes/Build.html#method-i-tasks","()","",null,1],["tasks_in_scope","Rake::TaskManager","Ruby/classes/Rake/TaskManager.html#method-i-tasks_in_scope","(scope)","<p>List of all the tasks defined in the given scope (and its sub-scopes).\n",null,0],["tcp","Addrinfo","Ruby/classes/Addrinfo.html#method-c-tcp","(p1, p2)","<p>returns an addrinfo object for TCP address.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, &quot;smtp&quot;) #=&gt; #&lt;Addrinfo: 127.0.0.1:25 ...\n</code></pre>\n",null,0],["tcp_server_loop","Socket","Ruby/classes/Socket.html#method-c-tcp_server_loop","(host=nil, port)","<p>creates a TCP/IP server on <em>port</em> and calls the block for each\nconnection accepted. The block is called …\n",null,0],["tcp_server_sockets","Socket","Ruby/classes/Socket.html#method-c-tcp_server_sockets","(host=nil, port)","<p>creates TCP/IP server sockets for <em>host</em> and <em>port</em>.\n<em>host</em> is optional.\n<p>If no block given, it returns an array …\n",null,0],["teardown_fixtures","ActiveRecord::TestFixtures","Rails/classes/ActiveRecord/TestFixtures.html#method-i-teardown_fixtures","()","",null,1],["tee","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-tee","(file)","<p>Returns a Tee filter object, with the given <code>file</code> command\n",null,0],["telephone_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-telephone_field","(object_name, method, options = {})","<p>Returns a text_field of type “tel”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">telephone_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;phone&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_phone&quot; ...</span>\n</pre>\n",null,1],["telephone_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-telephone_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “tel”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,1],["tell","ARGF","Ruby/classes/ARGF.html#method-i-tell","()","<p>Returns the current offset (in bytes) of the current file in\n<code>ARGF</code>.\n\n<pre><code>ARGF.pos    #=&gt; 0\nARGF.gets   #=&gt; &quot;This ...\n</code></pre>\n",null,0],["tell","Dir","Ruby/classes/Dir.html#method-i-tell","()","<p>Returns the current position in <em>dir</em>. See also\n<code>Dir#seek</code>.\n\n<pre><code>d = Dir.new(&quot;testdir&quot;)\nd.tell   #=&gt; 0\nd.read  ...\n</code></pre>\n",null,0],["tell","IO","Ruby/classes/IO.html#method-i-tell","()","<p>Returns the current offset (in bytes) of <em>ios</em>.\n\n<pre><code>f = File.new(&quot;testfile&quot;)\nf.pos    #=&gt; 0\nf.gets   #=&gt; &quot;This ...\n</code></pre>\n",null,0],["tell","StringIO","Ruby/classes/StringIO.html#method-i-tell","()","<p>Returns the current offset (in bytes) of <strong>strio</strong>.\n",null,0],["tell","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-tell","()","<p>Total number of output bytes output so far.\n",null,0],["tell","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-tell","()","<p>Total number of input bytes read so far.\n",null,0],["telnetmode","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-telnetmode","(mode = nil)","<p>Set telnet command interpretation on (<code>mode</code> == true) or off\n(<code>mode</code> == false), or return the current value …\n",null,0],["telnetmode=","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-telnetmode-3D","(mode)","<p>Turn telnet command interpretation on (true) or off (false).  It should be\non for true telnet sessions, …\n",null,0],["template","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-template","(source, *args, &block)","",null,1],["template_dir_for","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-template_dir_for","(template)","<p>Finds the template dir for <code>template</code>\n",null,0],["template_exists?","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-template_exists-3F","(name, prefixes = [], partial = false, keys = [], options = {})","",null,1],["template_for","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-template_for","(file, page = true, klass = ERB)","<p>Retrieves a cache template for <code>file</code>, if present, or fills the\ncache.\n",null,0],["template_result","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-template_result","(template, context, template_file)","<p>Creates the result for <code>template</code> with <code>context</code>.  If\nan error is raised a Pathname <code>template_file</code> will indicate …\n",null,0],["terabyte","Numeric","Rails/classes/Numeric.html#method-i-terabyte","()","",null,1],["terabytes","Numeric","Rails/classes/Numeric.html#method-i-terabytes","()","",null,1],["terminal_width","Rake::Application","Ruby/classes/Rake/Application.html#method-i-terminal_width","()","",null,0],["terminal_width","Rake::Application","Ruby/classes/Rake/Application.html#method-i-terminal_width","()","",null,0],["terminate","GetoptLong","Ruby/classes/GetoptLong.html#method-i-terminate","()","<p>Explicitly terminate option processing.\n",null,0],["terminate","OptionParser","Ruby/classes/OptionParser.html#method-c-terminate","(arg = nil)","",null,0],["terminate","OptionParser","Ruby/classes/OptionParser.html#method-i-terminate","(arg = nil)","<p>Terminates option parsing. Optional parameter <code>arg</code> is a string\npushed back to be the first non-option …\n",null,0],["terminate","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-terminate","()","",null,0],["terminate","StringScanner","Ruby/classes/StringScanner.html#method-i-terminate","()","<p>Set the scan pointer to the end of the string and clear matching data.\n",null,0],["terminate","Thread","Ruby/classes/Thread.html#method-i-terminate","()","<p>Terminates <em>thr</em> and schedules another thread to be run. If this\nthread is already marked to be killed, …\n",null,0],["terminate_interaction","Gem::MockGemUi","Ruby/classes/Gem/MockGemUi.html#method-i-terminate_interaction","(status=0)","",null,0],["terminate_interaction","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-terminate_interaction","(status = 0)","<p>Terminate the application with exit code <code>status</code>, running any\nexit handlers that might have been defined. …\n",null,0],["terminate_interaction","Gem::UserInteraction","Ruby/classes/Gem/UserInteraction.html#method-i-terminate_interaction","(*args)","",null,0],["terminate_job","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-terminate_job","(command)","<p>terminate a job\n",null,0],["terminated?","Gem::MockGemUi","Ruby/classes/Gem/MockGemUi.html#method-i-terminated-3F","()","",null,0],["terminated?","GetoptLong","Ruby/classes/GetoptLong.html#method-i-terminated-3F","()","<p>Returns true if option processing has terminated, false otherwise.\n",null,0],["termsig","Process::Status","Ruby/classes/Process/Status.html#method-i-termsig","()","<p>Returns the number of the signal that caused <em>stat</em> to terminate (or\n<code>nil</code> if self was not terminated by …\n",null,0],["test","Kernel","Ruby/classes/Kernel.html#method-i-test","(*args)","<p>Uses the integer <code>cmd</code> to perform various tests on\n<code>file1</code> (first table below) or on <code>file1</code> and\n<code>file2</code> (second …\n",null,0],["test","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-test","(command, file1, file2=nil)","<p>Tests if the given <code>command</code> exists in <code>file1</code>, or\noptionally <code>file2</code>.\n<p>Example:\n\n<pre><code>sh[?e, &quot;foo&quot;]\nsh[:e, &quot;foo&quot;]\nsh[&quot;e&quot;, ...</code></pre>\n",null,0],["test","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-test","()","",null,1],["test","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-test","()","",null,1],["test_dummy_assets","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-test_dummy_assets","()","",null,1],["test_dummy_clean","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-test_dummy_clean","()","",null,1],["test_dummy_config","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-test_dummy_config","()","",null,1],["test_errors_aref","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_errors_aref","()","<p>Errors Testing\n<p>Returns an object that implements [](attribute) defined which returns an\nArray of Strings …\n",null,1],["test_file","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-test_file","()","<p>Singular accessor for #test_files\n",null,0],["test_file=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-test_file-3D","(file)","<p>Singular mutator for #test_files\n",null,0],["test_files","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-test_files","()","<p>Test files included in this gem.  You cannot append to this accessor, you\nmust assign to it.\n",null,0],["test_files=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-test_files-3D","(files)","<p>A collection of unit test files.  They will be loaded as unit tests when\nthe user requests a gem to be …\n",null,0],["test_model_naming","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_model_naming","()","<p>Naming\n<p>Model.model_name must return a string with some convenience methods:\n<code>:human</code>, <code>:singular</code> and <code>:plural</code> …\n",null,1],["test_persisted?","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_persisted-3F","()","<p>Responds to <code>persisted?</code>\n<p>Returns a boolean that specifies whether the object has been persisted yet.\nThis …\n",null,1],["test_to_key","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_to_key","()","<p>Responds to <code>to_key</code>\n<p>Returns an Enumerable of all (primary) key attributes or nil if\n<code>model.persisted?</code> is …\n",null,1],["test_to_param","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_to_param","()","<p>Responds to <code>to_param</code>\n<p>Returns a string representing the object&#39;s key suitable for use in URLs\nor <code>nil</code> …\n",null,1],["test_to_partial_path","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_to_partial_path","()","<p>Responds to <code>to_partial_path</code>\n<p>Returns a string giving a relative path. This is used for looking up\npartials. …\n",null,1],["text","PrettyPrint","Ruby/classes/PrettyPrint.html#method-i-text","(obj, width=obj.length)","<p>This adds <code>obj</code> as a text of <code>width</code> columns in\nwidth.\n<p>If <code>width</code> is not specified, obj.length is used.\n",null,0],["text","PrettyPrint::SingleLine","Ruby/classes/PrettyPrint/SingleLine.html#method-i-text","(obj, width=nil)","",null,0],["text","RDoc::Markup::IndentedParagraph","Ruby/classes/RDoc/Markup/IndentedParagraph.html#method-i-text","(hard_break = nil)","<p>Joins the raw paragraph text and converts inline HardBreaks to the\n<code>hard_break</code> text followed by the indent. …\n",null,0],["text","RDoc::Markup::Paragraph","Ruby/classes/RDoc/Markup/Paragraph.html#method-i-text","(hard_break = '')","<p>Joins the raw paragraph text and converts inline HardBreaks to the\n<code>hard_break</code> text.\n",null,0],["text","RDoc::Markup::Raw","Ruby/classes/RDoc/Markup/Raw.html#method-i-text","()","<p>The raw text\n",null,0],["text","RDoc::Markup::Verbatim","Ruby/classes/RDoc/Markup/Verbatim.html#method-i-text","()","<p>The text of the section\n",null,0],["text","REXML::Element","Ruby/classes/REXML/Element.html#method-i-text","( path = nil )","<p>A convenience method which returns the String value of the <em>first</em>\nchild text element, if one exists, and …\n",null,0],["text","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-text","( )","",null,0],["text","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-text","(text)","<p>Called when text is encountered in the document @p text the text content.\n",null,0],["text","RSS::ListenerMixin","Ruby/classes/RSS/ListenerMixin.html#method-i-text","(data)","",null,0],["text","XMLRPC::XMLWriter::Simple","Ruby/classes/XMLRPC/XMLWriter/Simple.html#method-i-text","(txt)","",null,0],["text","XMLRPC::XMLWriter::XMLParser","Ruby/classes/XMLRPC/XMLWriter/XMLParser.html#method-i-text","(txt)","",null,0],["text=","RDoc::Comment","Ruby/classes/RDoc/Comment.html#method-i-text-3D","(text)","<p>Replaces this comment&#39;s text with <code>text</code> and resets the\nparsed document.\n<p>An error is raised if the comment …\n",null,0],["text=","REXML::Element","Ruby/classes/REXML/Element.html#method-i-text-3D","( text )","<p>Sets the first Text child of this object.  See text() for a discussion\nabout Text children.\n<p>If a Text …\n",null,0],["text=","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-text-3D","( foo )","",null,0],["text?","RDoc::TopLevel","Ruby/classes/RDoc/TopLevel.html#method-i-text-3F","()","<p>Is this TopLevel from a text file instead of a source code file?\n",null,0],["text?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-text-3F","()","<p>Content: [ String raw_text, String unnormalized_text ]\n",null,0],["text_area","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-text_area","(object_name, method, options = {})","<p>Returns a textarea opening and closing tag set tailored for accessing a\nspecified attribute (identified …\n",null,1],["text_area_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-text_area_tag","(name, content = nil, options = {})","<p>Creates a text input area; use a textarea for longer text inputs such as\nblog posts or descriptions. …\n",null,1],["text_field","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-text_field","(name = \"\", value = nil, size = 40, maxlength = nil)","<p>Generate a text field Input element, as a String.\n<p><code>name</code> is the name of the input field.  <code>value</code> is\nits initial …\n",null,0],["text_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-text_field","(object_name, method, options = {})","<p>Returns an input tag of the “text” type tailored for accessing a specified\nattribute (identified …\n",null,1],["text_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-text_field_tag","(name, value = nil, options = {})","<p>Creates a standard text field; use these text fields to input smaller\nchunks of text like a username …\n",null,1],["textarea","CGI::HtmlExtension","Ruby/classes/CGI/HtmlExtension.html#method-i-textarea","(name = \"\", cols = 70, rows = 10)","<p>Generate a TextArea element, as a String.\n<p><code>name</code> is the name of the textarea.  <code>cols</code> is the\nnumber of columns …\n",null,0],["textinput","RSS::Rss","Ruby/classes/RSS/Rss.html#method-i-textinput","()","",null,0],["texts","REXML::Element","Ruby/classes/REXML/Element.html#method-i-texts","()","<p>Get an array of all Text children. IMMUTABLE\n",null,0],["tgz_file","Rake::PackageTask","Ruby/classes/Rake/PackageTask.html#method-i-tgz_file","()","",null,0],["third","Array","Rails/classes/Array.html#method-i-third","()","<p>Equal to <code>self[2]</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-node\">%w( a b c d e )</span>.<span class=\"ruby-identifier\">third</span> <span class=\"ruby-comment\"># =&gt; &quot;c&quot;</span>\n</pre>\n",null,1],["thread","DRb","Ruby/classes/DRb.html#method-c-thread","()","<p>Get the thread of the primary server.\n<p>This returns nil if there is no primary server.  See #primary_server …\n",null,0],["thread","IRB::JobManager","Ruby/classes/IRB/JobManager.html#method-i-thread","(key)","<p>Returns the thread for the given <code>key</code> object, see #search for\nmore information.\n",null,0],["thread","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-thread","(algorithm, search_keys, charset)","<p>As for #search(), but returns message sequence numbers in threaded format,\nas a Net::IMAP::ThreadMember …\n",null,0],["thread_list","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-thread_list","(num)","",null,0],["thread_list_all","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-thread_list_all","()","",null,0],["thread_variable?","Thread","Ruby/classes/Thread.html#method-i-thread_variable-3F","(p1)","<p>Returns <code>true</code> if the given string (or symbol) exists as a\nthread-local variable.\n\n<pre><code>me = Thread.current\nme.thread_variable_set(:oliver, ...</code></pre>\n",null,0],["thread_variable?","Thread","Rails/classes/Thread.html#method-i-thread_variable-3F","(key)","<p>Returns <code>true</code> if the given string (or symbol) exists as a\nthread-local variable.\n\n<pre>me = Thread.current\nme.thread_variable_set(:oliver, ...</pre>\n",null,1],["thread_variable_get","Thread","Ruby/classes/Thread.html#method-i-thread_variable_get","(p1)","<p>Returns the value of a thread local variable that has been set.  Note that\nthese are different than fiber …\n",null,0],["thread_variable_get","Thread","Rails/classes/Thread.html#method-i-thread_variable_get","(key)","<p>Returns the value of a thread local variable that has been set. Note that\nthese are different than fiber …\n",null,1],["thread_variable_set","Thread","Ruby/classes/Thread.html#method-i-thread_variable_set","(p1, p2)","<p>Sets a thread local with <code>key</code> to <code>value</code>.  Note that\nthese are local to threads, and not to fibers.  Please …\n",null,0],["thread_variable_set","Thread","Rails/classes/Thread.html#method-i-thread_variable_set","(key, value)","<p>Sets a thread local with <code>key</code> to <code>value</code>. Note that\nthese are local to threads, and not to fibers. Please …\n",null,1],["thread_variables","Thread","Ruby/classes/Thread.html#method-i-thread_variables","()","<p>Returns an an array of the names of the thread-local variables (as\nSymbols).\n\n<pre><code>thr = Thread.new do\n  Thread.current.thread_variable_set(:cat, ...</code></pre>\n",null,0],["thread_variables","Thread","Rails/classes/Thread.html#method-i-thread_variables","()","<p>Returns an an array of the names of the thread-local variables (as\nSymbols).\n\n<pre>thr = Thread.new do\n  Thread.current.thread_variable_set(:cat, ...</pre>\n",null,1],["threadsafe!","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-threadsafe-21","()","",null,1],["throw","Kernel","Ruby/classes/Kernel.html#method-i-throw","(p1, p2 = v2)","<p>Transfers control to the end of the active <code>catch</code> block waiting\nfor <em>tag</em>. Raises <code>ArgumentError</code> if there …\n",null,0],["thursday?","Date","Ruby/classes/Date.html#method-i-thursday-3F","()","<p>Returns true if the date is Thursday.\n",null,0],["thursday?","Time","Ruby/classes/Time.html#method-i-thursday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Thursday.\n\n<pre><code>t = Time.local(1995, 12, 21)     #=&gt; 1995-12-21 00:00:00 -0600 ...\n</code></pre>\n",null,0],["tidy_bytes","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-tidy_bytes","(force = false)","<p>Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent\nresulting in a valid UTF-8 string. …\n",null,1],["tidy_bytes","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-tidy_bytes","(string, force = false)","<p>Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent\nresulting in a valid UTF-8 string. …\n",null,1],["time","Gem","Ruby/classes/Gem.html#method-c-time","(msg, width = 0, display = Gem.configuration.verbose)","<p>Prints the amount of time the supplied block takes to run using the debug\nUI output.\n",null,0],["time","OpenSSL::SSL::Session","Ruby/classes/OpenSSL/SSL/Session.html#method-i-time","()","<p>Gets start time of the session.\n",null,0],["time","OpenSSL::X509::Revoked","Ruby/classes/OpenSSL/X509/Revoked.html#method-i-time","()","",null,0],["time","Rake::FtpFile","Ruby/classes/Rake/FtpFile.html#method-c-time","()","",null,0],["time","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-time","()","<p>Returns a Time or DateTime instance that represents the time in\n<code>time_zone</code>.\n",null,1],["time2wtime","Win32::Registry","Ruby/classes/Win32/Registry.html#method-c-time2wtime","(time)","<p>Convert Time object or Integer object into 64-bit FILETIME.\n",null,0],["time=","OpenSSL::SSL::Session","Ruby/classes/OpenSSL/SSL/Session.html#method-i-time-3D","(p1)","<p>Sets start time of the session. Time resolution is in seconds.\n",null,0],["time=","OpenSSL::X509::Revoked","Ruby/classes/OpenSSL/X509/Revoked.html#method-i-time-3D","(p1)","",null,0],["time=","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-time-3D","(p1)","",null,0],["time_ago_in_words","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-time_ago_in_words","(from_time, include_seconds_or_options = {})","<p>Like <code>distance_of_time_in_words</code>, but where <code>to_time</code>\nis fixed to <code>Time.now</code>.\n\n<pre>time_ago_in_words(3.minutes.from_now) ...</pre>\n",null,1],["time_delta_string","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-time_delta_string","(seconds)","<p>Return a string describing the amount of time in the given number of\nseconds in terms a human can understand …\n",null,0],["time_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-time_field","(object_name, method, options = {})","<p>Returns a text_field of type “time”.\n<p>The default value is generated by trying to call <code>strftime</code> …\n",null,1],["time_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-time_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “time”.\n<p>Options\n<p><code>:min</code> - The minimum acceptable value.\n",null,1],["time_select","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-time_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for hour, minute and optionally second)\npre-selected for accessing …\n",null,1],["time_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-time_select","(method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::DateHelper#time_select for form builders:\n\n<pre>&lt;%= form_for @race do |f| %&gt;\n  &lt;%= ...</pre>\n",null,1],["time_tag","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-time_tag","(date_or_time, *args, &block)","<p>Returns an html time tag for the given date or time.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">time_tag</span> <span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">today</span>  <span class=\"ruby-comment\"># =&gt;</span>\n  <span class=\"ruby-operator\">&lt;</span><span class=\"ruby-identifier\">time</span> <span class=\"ruby-identifier\">datetime</span>=<span class=\"ruby-string\">&quot;2010-11-04&quot;</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-constant\">November</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["time_with_datetime_fallback","Time","Rails/classes/Time.html#method-c-time_with_datetime_fallback","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0, usec=0)","<p><strong>DEPRECATED</strong>: Use +Time#utc+ or +Time#local+ instead.\n<p>Returns a new Time if requested year can be accommodated …\n",null,1],["time_zone_options_for_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_options_for_select","(selected = nil, priority_zones = nil, model = ::ActiveSupport::TimeZone)","<p>Returns a string of option tags for pretty much any time zone in the world.\nSupply a ActiveSupport::TimeZone …\n",null,1],["time_zone_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-time_zone_select","(method, priority_zones = nil, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::FormOptionsHelper#time_zone_select for form\nbuilders:\n\n<pre>&lt;%= form_for @user do ...</pre>\n",null,1],["time_zone_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_select","(object, method, priority_zones = nil, options = {}, html_options = {})","<p>Return select and option tags for the given object and method, using\n#time_zone_options_for_select to …\n",null,1],["timeout","Object","Ruby/classes/Object.html#method-i-timeout","(n, e = nil, &block)","<p>Identical to:\n\n<pre><code>Timeout::timeout(n, e, &amp;block).</code></pre>\n<p>This method is deprecated and provided only for backwards …\n",null,0],["timeout","OpenSSL::SSL::Session","Ruby/classes/OpenSSL/SSL/Session.html#method-i-timeout","()","<p>Gets how long until the session expires in seconds.\n",null,0],["timeout","Timeout","Ruby/classes/Timeout.html#method-c-timeout","(sec, klass = nil)","<p>Perform an operation in a block, raising an error if it takes longer than\n<code>sec</code> seconds to complete.\n<p><code>sec</code> … &mdash; ",null,0],["timeout","WEBrick::Utils","Ruby/classes/WEBrick/Utils.html#method-c-timeout","(seconds, exception=Timeout::Error)","<p>Executes the passed block and raises <code>exception</code> if execution\ntakes more than <code>seconds</code>.\n<p>If <code>seconds</code> is zero …\n",null,0],["timeout=","Curses","Ruby/classes/Curses.html#method-c-timeout-3D","(p1)","<p>Sets block and non-blocking reads for the window.\n<p>If delay is negative, blocking read is used (i.e., waits …\n",null,0],["timeout=","Curses::Window","Ruby/classes/Curses/Window.html#method-i-timeout-3D","(p1)","<p>Sets block and non-blocking reads for the window.\n<p>If delay is negative, blocking read is used (i.e., waits …\n",null,0],["timeout=","OpenSSL::SSL::Session","Ruby/classes/OpenSSL/SSL/Session.html#method-i-timeout-3D","(p1)","<p>Sets how long until the session expires in seconds.\n",null,0],["timeout=","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-timeout-3D","(new_timeout)","<p>Sets the Net::HTTP#read_timeout and Net::HTTP#open_timeout to\n<code>new_timeout</code>\n",null,0],["timeouts=","Resolv::DNS","Ruby/classes/Resolv/DNS.html#method-i-timeouts-3D","(values)","<p>Sets the resolver timeouts.  This may be a single positive number or an\narray of positive numbers representing …\n",null,0],["times","Integer","Ruby/classes/Integer.html#method-i-times","()","<p>Iterates block <em>int</em> times, passing in values from zero to\n<em>int</em> - 1.\n<p>If no block is given, an enumerator …\n",null,0],["times","Integer","Ruby/classes/Integer.html#method-i-times","()","<p>Iterates block <em>int</em> times, passing in values from zero to\n<em>int</em> - 1.\n<p>If no block is given, an enumerator …\n",null,0],["times","Process","Ruby/classes/Process.html#method-c-times","()","<p>Returns a <code>Tms</code> structure (see <code>Struct::Tms</code>) that\ncontains user and system CPU times for this process, and …\n",null,0],["timestamp","Rake::FileCreationTask","Ruby/classes/Rake/FileCreationTask.html#method-i-timestamp","()","<p>Time stamp for file creation task.  This time stamp is earlier than any\nother time stamp.\n",null,0],["timestamp","Rake::FileTask","Ruby/classes/Rake/FileTask.html#method-i-timestamp","()","<p>Time stamp for file task.\n",null,0],["timestamp","Rake::Task","Ruby/classes/Rake/Task.html#method-i-timestamp","()","<p>Timestamp for this task.  Basic tasks return the current time for their\ntime stamp.  Other tasks can …\n",null,0],["timestamp","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-timestamp","()","<p>returns the timestamp as a time object.\n<p><em>ancillarydata</em> should be one of following type:\n<p>SOL_SOCKET/SCM_TIMESTAMP …\n",null,0],["timestamps","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-timestamps","()","<p>Adds timestamps (<code>created_at</code> and <code>updated_at</code>)\ncolumns to the table. See SchemaStatements#add_timestamps …\n",null,1],["timestamps","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-timestamps","(*args)","<p>Appends <code>:datetime</code> columns <code>:created_at</code> and\n<code>:updated_at</code> to the table.\n",null,1],["title","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-title","()","<p>Gets the title for this RDoc store.  This is used as the title in each page\non the RDoc server\n",null,0],["title=","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-title-3D","(title)","<p>Sets the title page for this RDoc store.\n",null,0],["titlecase","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-titlecase","()","",null,1],["titlecase","String","Rails/classes/String.html#method-i-titlecase","()","",null,1],["titleize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-titleize","(word)","<p>Capitalizes all the words and replaces some characters in the string to\ncreate a nicer looking title. …\n",null,1],["titleize","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-titleize","()","<p>Capitalizes the first letter of every word, when possible.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;ÉL QUE SE ENTERÓ&quot;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">titleize</span>    <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["titleize","String","Rails/classes/String.html#method-i-titleize","()","<p>Capitalizes all the words and replaces some characters in the string to\ncreate a nicer looking title. …\n",null,1],["tls?","Net::SMTP","Ruby/classes/Net/SMTP.html#method-i-tls-3F","()","<p>true if this object uses SMTP/TLS (SMTPS).\n",null,0],["tmp","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-tmp","()","",null,1],["tmpdir","Dir","Ruby/classes/Dir.html#method-c-tmpdir","()","<p>Returns the operating system&#39;s temporary file path.\n",null,0],["to","Array","Rails/classes/Array.html#method-i-to","(position)","<p>Returns the beginning of the array up to <code>position</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">to</span>(<span class=\"ruby-value\">0</span>)  <span class=\"ruby-comment\"># =&gt; [&quot;a&quot;]</span>\n<span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">to</span>(<span class=\"ruby-value\">2</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["to","String","Rails/classes/String.html#method-i-to","(position)","<p>Returns a substring from the beginning of the string to the given position.\nIf the position is negative, …\n",null,1],["to=","URI::MailTo","Ruby/classes/URI/MailTo.html#method-i-to-3D","(v)","<p>setter for to <code>v</code>\n",null,0],["to_a","ARGF","Ruby/classes/ARGF.html#method-i-to_a","(*args)","<p>Reads <code>ARGF</code>&#39;s current file in its entirety, returning an\n<code>Array</code> of its lines, one line per element. …\n",null,0],["to_a","Array","Ruby/classes/Array.html#method-i-to_a","()","<p>Returns <code>self</code>.\n<p>If called on a subclass of Array, converts the receiver to an Array object.\n",null,0],["to_a","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-i-to_a","()","<p>Returns a new 6-element array, consisting of the label, user CPU time,\nsystem CPU time, children&#39;s …\n",null,0],["to_a","CSV::Table","Ruby/classes/CSV/Table.html#method-i-to_a","()","<p>Returns the table as an Array of Arrays.  Headers will be the first row,\nthen all of the field rows will …\n",null,0],["to_a","DBM","Ruby/classes/DBM.html#method-i-to_a","()","<p>Converts the contents of the database to an array of [key, value] arrays,\nand returns it.\n",null,0],["to_a","ENV","Ruby/classes/ENV.html#method-c-to_a","()","<p>Converts the environment variables into an array of names and value arrays.\n\n<pre><code>ENV.to_a # =&gt; [[&quot;TERM&quot;, &quot;xterm-color&quot;], ...\n</code></pre>\n",null,0],["to_a","Enumerable","Ruby/classes/Enumerable.html#method-i-to_a","(*args)","<p>Returns an array containing the items in <em>enum</em>.\n\n<pre><code>(1..7).to_a                       #=&gt; [1, 2, 3, 4, 5, 6, ...\n</code></pre>\n",null,0],["to_a","GDBM","Ruby/classes/GDBM.html#method-i-to_a","()","<p>Returns an array of all key-value pairs contained in the database.\n",null,0],["to_a","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-i-to_a","()","<p>Convert back to the [name, version, platform] tuple\n",null,0],["to_a","Gem::Platform","Ruby/classes/Gem/Platform.html#method-i-to_a","()","",null,0],["to_a","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-to_a","()","",null,0],["to_a","Hash","Ruby/classes/Hash.html#method-i-to_a","()","<p>Converts <em>hsh</em> to a nested array of <code>[</code> <em>key,\nvalue</em> <code>]</code> arrays.\n\n<pre><code>h = { &quot;c&quot; =&gt; 300, &quot;a&quot; =&gt; 100, &quot;d&quot; =&gt; 400, &quot;c&quot; ...\n</code></pre>\n",null,0],["to_a","MatchData","Ruby/classes/MatchData.html#method-i-to_a","()","<p>Returns the array of matches.\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.to_a   #=&gt; [&quot;HX1138&quot;, &quot;H&quot;, &quot;X&quot;, ...\n</code></pre>\n",null,0],["to_a","Matrix","Ruby/classes/Matrix.html#method-i-to_a","()","<p>Returns an array of arrays that describe the rows of the matrix.\n",null,0],["to_a","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-i-to_a","()","",null,0],["to_a","Matrix::LUPDecomposition","Ruby/classes/Matrix/LUPDecomposition.html#method-i-to_a","()","",null,0],["to_a","NilClass","Ruby/classes/NilClass.html#method-i-to_a","()","<p>Always returns an empty array.\n\n<pre><code>nil.to_a   #=&gt; []\n</code></pre>\n",null,0],["to_a","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-i-to_a","()","",null,0],["to_a","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-to_a","()","<p>Returns an Array representation of the distinguished name suitable for\npassing to ::new\n",null,0],["to_a","OptionParser","Ruby/classes/OptionParser.html#method-i-to_a","()","<p>Returns option summary list.\n",null,0],["to_a","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-to_a","()","",null,0],["to_a","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-to_a","()","<p>Return the internal array object.\n",null,0],["to_a","Rinda::RingFinger","Ruby/classes/Rinda/RingFinger.html#method-c-to_a","()","<p>Contains all discovered TupleSpaces except for the primary.\n",null,0],["to_a","Rinda::RingFinger","Ruby/classes/Rinda/RingFinger.html#method-i-to_a","()","<p>Contains all discovered TupleSpaces except for the primary.\n",null,0],["to_a","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-to_a","()","<p>Returns an Array with 14 elements representing the instruction sequence\nwith the following data:\n<p>magic … &mdash; ",null,0],["to_a","SDBM","Ruby/classes/SDBM.html#method-i-to_a","()","<p>Returns a new Array containing each key-value pair in the database.\n<p>Example:\n\n<pre><code>require &#39;sdbm&#39;\n\nSDBM.open ...\n</code></pre>\n",null,0],["to_a","Set","Ruby/classes/Set.html#method-i-to_a","()","<p>Converts the set to an array.  The order of elements is uncertain.\n",null,0],["to_a","Shell::Filter","Ruby/classes/Shell/Filter.html#method-i-to_a","()","",null,0],["to_a","Struct","Ruby/classes/Struct.html#method-i-to_a","()","<p>Returns the values for this instance as an array.\n\n<pre><code>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</code></pre>\n",null,0],["to_a","Time","Ruby/classes/Time.html#method-i-to_a","()","<p>Returns a ten-element <em>array</em> of values for <em>time</em>:\n\n<pre><code>[sec, min, hour, day, month, year, wday, yday, isdst, ...</code></pre>\n",null,0],["to_a","Vector","Ruby/classes/Vector.html#method-i-to_a","()","<p>Returns the elements of the vector in an array.\n",null,0],["to_a","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-to_a","()","<p>Returns all date/time components in an array.\n<p>Returns +[year, month, day, hour, min, sec]+.\n",null,0],["to_a","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-to_a","()","<p>Converts the contents of the database to an array of [key, value] arrays,\nand returns it.\n",null,0],["to_a","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-to_a","()","",null,1],["to_a","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-to_a","()","<p>Returns an array of error messages, with the attribute name included.\n\n<pre>person.errors.add(:name, &quot;can&#39;t ...</pre>\n",null,1],["to_a","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-to_a","()","<p>Converts relation objects to Array.\n",null,1],["to_a","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_a","()","",null,1],["to_a","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-to_a","()","",null,1],["to_ary","Array","Ruby/classes/Array.html#method-i-to_ary","()","<p>Returns <code>self</code>.\n",null,0],["to_ary","Gem::SourceList","Ruby/classes/Gem/SourceList.html#method-i-to_ary","()","",null,0],["to_ary","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-i-to_ary","()","<p>Returns [eigenvector_matrix, eigenvalue_matrix, eigenvector_matrix_inv]\n",null,0],["to_ary","Matrix::LUPDecomposition","Ruby/classes/Matrix/LUPDecomposition.html#method-i-to_ary","()","<p>Returns <code>L</code>, <code>U</code>, <code>P</code> in an array\n",null,0],["to_ary","Rake::FileList","Ruby/classes/Rake/FileList.html#method-i-to_ary","()","<p>Return the internal array object.\n",null,0],["to_ary","WEBrick::HTTPUtils::FormData","Ruby/classes/WEBrick/HTTPUtils/FormData.html#method-i-to_ary","()","<p>A FormData will behave like an Array\n",null,0],["to_ary","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-to_ary","()","",null,1],["to_ary","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-i-to_ary","()","",null,1],["to_ary","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-to_ary","()","",null,1],["to_atom","RSS::RootElementMixin","Ruby/classes/RSS/RootElementMixin.html#method-i-to_atom","(type, &block)","",null,0],["to_basic","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-c-to_basic","(list)","<p>Turn an array of NameTuple objects back into an array of\n<p>name, version, platform &mdash; tuples.\n\n",null,0],["to_bn","Integer","Ruby/classes/Integer.html#method-i-to_bn","()","",null,0],["to_bn","Integer","Ruby/classes/Integer.html#method-i-to_bn","()","",null,0],["to_bn","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-to_bn","()","",null,0],["to_bn","OpenSSL::PKey::EC::Point","Ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-to_bn","()","<p>See the OpenSSL documentation for EC_POINT_point2bn()\n",null,0],["to_c","Complex","Ruby/classes/Complex.html#method-i-to_c","()","<p>Returns self.\n\n<pre><code>Complex(2).to_c      #=&gt; (2+0i)\nComplex(-8, 6).to_c  #=&gt; (-8+6i)\n</code></pre>\n",null,0],["to_c","NilClass","Ruby/classes/NilClass.html#method-i-to_c","()","<p>Returns zero as a complex.\n",null,0],["to_c","Numeric","Ruby/classes/Numeric.html#method-i-to_c","()","<p>Returns the value as a complex.\n",null,0],["to_c","String","Ruby/classes/String.html#method-i-to_c","()","<p>Returns a complex which denotes the string form.  The parser ignores\nleading whitespaces and trailing …\n",null,0],["to_class_name","RSS::Utils","Ruby/classes/RSS/Utils.html#method-i-to_class_name","(name)","<p>Convert a name_with_underscores to CamelCase.\n",null,0],["to_cleanup","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-c-to_cleanup","(*args, &block)","<p>Add a cleanup callback. Cleanup callbacks are run after each request is\ncomplete (after #close is called …\n",null,1],["to_csv","CSV::Row","Ruby/classes/CSV/Row.html#method-i-to_csv","(options = Hash.new)","<p>Returns the row as a CSV String.  Headers are not used.  Equivalent to:\n\n<pre><code>csv_row.fields.to_csv( options ...</code></pre>\n",null,0],["to_csv","CSV::Table","Ruby/classes/CSV/Table.html#method-i-to_csv","(options = Hash.new)","<p>Returns the table as a complete CSV String.  Headers will be listed first,\nthen all of the field rows. …\n",null,0],["to_d","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_d","()","<p>Returns self.\n",null,0],["to_d","Float","Ruby/classes/Float.html#method-i-to_d","(precision=nil)","<p>Convert <code>flt</code> to a BigDecimal and return it.\n\n<pre><code>require &#39;bigdecimal&#39;\nrequire &#39;bigdecimal/util&#39;\n\n0.5.to_d\n# ...\n</code></pre>\n",null,0],["to_d","Integer","Ruby/classes/Integer.html#method-i-to_d","()","<p>Convert <code>int</code> to a BigDecimal and return it.\n\n<pre><code>require &#39;bigdecimal&#39;\nrequire &#39;bigdecimal/util&#39;\n\n42.to_d\n# =&gt; ...\n</code></pre>\n",null,0],["to_d","Integer","Ruby/classes/Integer.html#method-i-to_d","()","<p>Convert <code>int</code> to a BigDecimal and return it.\n\n<pre><code>require &#39;bigdecimal&#39;\nrequire &#39;bigdecimal/util&#39;\n\n42.to_d\n# =&gt; ...\n</code></pre>\n",null,0],["to_d","Rational","Ruby/classes/Rational.html#method-i-to_d","(precision)","<p>Converts a Rational to a BigDecimal.\n<p>The required <code>precision</code> parameter is used to determine the\namount …\n",null,0],["to_d","String","Ruby/classes/String.html#method-i-to_d","()","<p>Convert <code>string</code> to a BigDecimal and return it.\n\n<pre><code>require &#39;bigdecimal&#39;\nrequire &#39;bigdecimal/util&#39;\n\n&quot;0.5&quot;.to_d ...\n</code></pre>\n",null,0],["to_d","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_d","()","",null,1],["to_date","Date","Ruby/classes/Date.html#method-i-to_date","()","<p>Returns self;\n",null,0],["to_date","DateTime","Ruby/classes/DateTime.html#method-i-to_date","()","<p>Returns a Date object which denotes self.\n",null,0],["to_date","Time","Ruby/classes/Time.html#method-i-to_date","()","<p>Returns a Date object which denotes self.\n",null,0],["to_date","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-to_date","()","<p>Return a Date object of the date which represents <code>self</code>.\n<p>The Date object do <em>not</em> contain the time component …\n",null,0],["to_date","Mysql::Time","Rails/classes/Mysql/Time.html#method-i-to_date","()","",null,1],["to_date","String","Rails/classes/String.html#method-i-to_date","()","<p>Converts a string to a Date value.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;1-1-2012&quot;</span>.<span class=\"ruby-identifier\">to_date</span>   <span class=\"ruby-comment\">#=&gt; Sun, 01 Jan 2012</span>\n<span class=\"ruby-string\">&quot;01/01/2012&quot;</span>.<span class=\"ruby-identifier\">to_date</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["to_datetime","Date","Ruby/classes/Date.html#method-i-to_datetime","()","<p>Returns a DateTime object which denotes self.\n",null,0],["to_datetime","DateTime","Ruby/classes/DateTime.html#method-i-to_datetime","()","<p>Returns self.\n",null,0],["to_datetime","Time","Ruby/classes/Time.html#method-i-to_datetime","()","<p>Returns a DateTime object which denotes self.\n",null,0],["to_datetime","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_datetime","()","",null,1],["to_datetime","String","Rails/classes/String.html#method-i-to_datetime","()","<p>Converts a string to a DateTime value.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;1-1-2012&quot;</span>.<span class=\"ruby-identifier\">to_datetime</span>            <span class=\"ruby-comment\">#=&gt; Sun, 01 Jan 2012 00:00:00 ...</span>\n</pre>\n",null,1],["to_default_s","Array","Rails/classes/Array.html#method-i-to_default_s","(format = :default)","",null,1],["to_default_s","Date","Rails/classes/Date.html#method-i-to_default_s","(format = :default)","",null,1],["to_default_s","DateTime","Rails/classes/DateTime.html#method-i-to_default_s","(format = :default)","",null,1],["to_default_s","Range","Rails/classes/Range.html#method-i-to_default_s","(format = :default)","",null,1],["to_default_s","Time","Rails/classes/Time.html#method-i-to_default_s","(format = :default)","",null,1],["to_der","OpenSSL::ASN1::ASN1Data","Ruby/classes/OpenSSL/ASN1/ASN1Data.html#method-i-to_der","()","<p>Encodes this ASN1Data into a DER-encoded String value. The result is\nDER-encoded except for the possibility …\n",null,0],["to_der","OpenSSL::ASN1::Constructive","Ruby/classes/OpenSSL/ASN1/Constructive.html#method-i-to_der","()","<p>See ASN1Data#to_der for details.\n",null,0],["to_der","OpenSSL::ASN1::Primitive","Ruby/classes/OpenSSL/ASN1/Primitive.html#method-i-to_der","()","<p>See ASN1Data#to_der for details. *\n",null,0],["to_der","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-to_der","()","<p>Returns the DER encoding of this SPKI.\n",null,0],["to_der","OpenSSL::OCSP::Request","Ruby/classes/OpenSSL/OCSP/Request.html#method-i-to_der","()","",null,0],["to_der","OpenSSL::OCSP::Response","Ruby/classes/OpenSSL/OCSP/Response.html#method-i-to_der","()","",null,0],["to_der","OpenSSL::PKCS12","Ruby/classes/OpenSSL/PKCS12.html#method-i-to_der","()","",null,0],["to_der","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-to_der","()","",null,0],["to_der","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-to_der","()","<p>Encodes this DH to its DER encoding. Note that any existing per-session\npublic/private keys will <strong>not</strong> …\n",null,0],["to_der","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-to_der","()","<p>Encodes this DSA to its DER encoding.\n",null,0],["to_der","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-to_der","()","<p>See the OpenSSL documentation for i2d_ECPrivateKey_bio()\n",null,0],["to_der","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-to_der","()","<p>See the OpenSSL documentation for i2d_ECPKParameters_bio()\n",null,0],["to_der","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_der","()","<p>Outputs this keypair in DER encoding.\n",null,0],["to_der","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_der","()","<p>Outputs this keypair in DER encoding.\n",null,0],["to_der","OpenSSL::SSL::Session","Ruby/classes/OpenSSL/SSL/Session.html#method-i-to_der","()","<p>Returns an ASN1 encoded String that contains the Session object.\n",null,0],["to_der","OpenSSL::X509::Attribute","Ruby/classes/OpenSSL/X509/Attribute.html#method-i-to_der","()","",null,0],["to_der","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-to_der","()","",null,0],["to_der","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-to_der","()","",null,0],["to_der","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-i-to_der","()","",null,0],["to_der","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-to_der","()","<p>Converts the name to DER encoding\n",null,0],["to_der","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-to_der","()","",null,0],["to_digits","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_digits","()","<p>Converts a BigDecimal to a String of the form “nnnnnn.mmm”. This method is\ndeprecated; use …\n",null,0],["to_element_methods","RSS::Element","Ruby/classes/RSS/Element.html#method-i-to_element_methods","()","",null,0],["to_enum","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-to_enum","(*args)","<p>Similar to Kernel#to_enum, except it returns a lazy enumerator. This makes\nit easy to define Enumerable …\n",null,0],["to_enum","Object","Ruby/classes/Object.html#method-i-to_enum","(*args)","<p>Creates a new Enumerator which will enumerate by calling\n<code>method</code> on <code>obj</code>, passing <code>args</code> if any.\n<p>If a block …\n",null,0],["to_f","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_f","()","<p>Returns a new Float object having approximately the same value as the\nBigDecimal number. Normal accuracy …\n",null,0],["to_f","Bignum","Ruby/classes/Bignum.html#method-i-to_f","()","<p>Converts <em>big</em> to a <code>Float</code>. If <em>big</em> doesn&#39;t\nfit in a <code>Float</code>, the result is infinity.\n",null,0],["to_f","Complex","Ruby/classes/Complex.html#method-i-to_f","()","<p>Returns the value as a float if possible (the imaginary part should be\nexactly zero).\n\n<pre><code>Complex(1, 0).to_f ...</code></pre>\n",null,0],["to_f","Fixnum","Ruby/classes/Fixnum.html#method-i-to_f","()","<p>Converts <em>fix</em> to a <code>Float</code>.\n",null,0],["to_f","Float","Ruby/classes/Float.html#method-i-to_f","()","<p>As <code>flt</code> is already a float, returns <code>self</code>.\n",null,0],["to_f","NilClass","Ruby/classes/NilClass.html#method-i-to_f","()","<p>Always returns zero.\n\n<pre><code>nil.to_f   #=&gt; 0.0\n</code></pre>\n",null,0],["to_f","Rational","Ruby/classes/Rational.html#method-i-to_f","()","<p>Return the value as a float.\n\n<pre><code>Rational(2).to_f      #=&gt; 2.0\nRational(9, 4).to_f   #=&gt; 2.25\nRational(-3, ...\n</code></pre>\n",null,0],["to_f","String","Ruby/classes/String.html#method-i-to_f","()","<p>Returns the result of interpreting leading characters in <em>str</em> as a\nfloating point number. Extraneous characters …\n",null,0],["to_f","Time","Ruby/classes/Time.html#method-i-to_f","()","<p>Returns the value of <em>time</em> as a floating point number of seconds\nsince the Epoch.\n\n<pre><code>t = Time.now\n&quot;%10.5f&quot; ...</code></pre>\n",null,0],["to_f","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_f","()","",null,1],["to_f","DateTime","Rails/classes/DateTime.html#method-i-to_f","()","<p>Converts <code>self</code> to a floating-point number of seconds since the\nUnix epoch.\n",null,1],["to_feed","RSS::Maker::Atom::Entry::Items","Ruby/classes/RSS/Maker/Atom/Entry/Items.html#method-i-to_feed","(entry)","",null,0],["to_feed","RSS::Maker::Atom::Entry::Items::Item","Ruby/classes/RSS/Maker/Atom/Entry/Items/Item.html#method-i-to_feed","(entry)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Channel","Ruby/classes/RSS/Maker/Atom/Feed/Channel.html#method-i-to_feed","(feed)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Channel::Cloud","Ruby/classes/RSS/Maker/Atom/Feed/Channel/Cloud.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Channel::SkipDays","Ruby/classes/RSS/Maker/Atom/Feed/Channel/SkipDays.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Channel::SkipHours","Ruby/classes/RSS/Maker/Atom/Feed/Channel/SkipHours.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Image","Ruby/classes/RSS/Maker/Atom/Feed/Image.html#method-i-to_feed","(feed)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Items","Ruby/classes/RSS/Maker/Atom/Feed/Items.html#method-i-to_feed","(feed)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Items::Item","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item.html#method-i-to_feed","(feed)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Items::Item::Content","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Content.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Items::Item::Enclosure","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Enclosure.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Items::Item::Guid","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Guid.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Items::Item::Source","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::Atom::Feed::Items::Item::Source::Icon","Ruby/classes/RSS/Maker/Atom/Feed/Items/Item/Source/Icon.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::AtomCategory","Ruby/classes/RSS/Maker/AtomCategory.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::AtomGenerator","Ruby/classes/RSS/Maker/AtomGenerator.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::AtomLink","Ruby/classes/RSS/Maker/AtomLink.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::AtomLogo","Ruby/classes/RSS/Maker/AtomLogo.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::ITunesChannelModel::ITunesCategoriesBase::ITunesCategoryBase","Ruby/classes/RSS/Maker/ITunesChannelModel/ITunesCategoriesBase/ITunesCategoryBase.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::ITunesChannelModel::ITunesImageBase","Ruby/classes/RSS/Maker/ITunesChannelModel/ITunesImageBase.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::ITunesChannelModel::ITunesOwnerBase","Ruby/classes/RSS/Maker/ITunesChannelModel/ITunesOwnerBase.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::ITunesItemModel::ITunesDurationBase","Ruby/classes/RSS/Maker/ITunesItemModel/ITunesDurationBase.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::ImageFaviconModel::ImageFaviconBase","Ruby/classes/RSS/Maker/ImageFaviconModel/ImageFaviconBase.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::ImageItemModel::ImageItemBase","Ruby/classes/RSS/Maker/ImageItemModel/ImageItemBase.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::RSS09::Channel","Ruby/classes/RSS/Maker/RSS09/Channel.html#method-i-to_feed","(rss)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Authors","Ruby/classes/RSS/Maker/RSS09/Channel/Authors.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Authors::Author","Ruby/classes/RSS/Maker/RSS09/Channel/Authors/Author.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Categories","Ruby/classes/RSS/Maker/RSS09/Channel/Categories.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Cloud","Ruby/classes/RSS/Maker/RSS09/Channel/Cloud.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Contributors","Ruby/classes/RSS/Maker/RSS09/Channel/Contributors.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Copyright","Ruby/classes/RSS/Maker/RSS09/Channel/Copyright.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Description","Ruby/classes/RSS/Maker/RSS09/Channel/Description.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Generator","Ruby/classes/RSS/Maker/RSS09/Channel/Generator.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Links","Ruby/classes/RSS/Maker/RSS09/Channel/Links.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Links::Link","Ruby/classes/RSS/Maker/RSS09/Channel/Links/Link.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::SkipDays","Ruby/classes/RSS/Maker/RSS09/Channel/SkipDays.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::SkipDays::Day","Ruby/classes/RSS/Maker/RSS09/Channel/SkipDays/Day.html#method-i-to_feed","(rss, days)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::SkipHours","Ruby/classes/RSS/Maker/RSS09/Channel/SkipHours.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::SkipHours::Hour","Ruby/classes/RSS/Maker/RSS09/Channel/SkipHours/Hour.html#method-i-to_feed","(rss, hours)","",null,0],["to_feed","RSS::Maker::RSS09::Channel::Title","Ruby/classes/RSS/Maker/RSS09/Channel/Title.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS09::Image","Ruby/classes/RSS/Maker/RSS09/Image.html#method-i-to_feed","(rss)","",null,0],["to_feed","RSS::Maker::RSS09::Items","Ruby/classes/RSS/Maker/RSS09/Items.html#method-i-to_feed","(rss)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item","Ruby/classes/RSS/Maker/RSS09/Items/Item.html#method-i-to_feed","(rss)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Authors","Ruby/classes/RSS/Maker/RSS09/Items/Item/Authors.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Categories","Ruby/classes/RSS/Maker/RSS09/Items/Item/Categories.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Content","Ruby/classes/RSS/Maker/RSS09/Items/Item/Content.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Contributors","Ruby/classes/RSS/Maker/RSS09/Items/Item/Contributors.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Description","Ruby/classes/RSS/Maker/RSS09/Items/Item/Description.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Enclosure","Ruby/classes/RSS/Maker/RSS09/Items/Item/Enclosure.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Guid","Ruby/classes/RSS/Maker/RSS09/Items/Item/Guid.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Links","Ruby/classes/RSS/Maker/RSS09/Items/Item/Links.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Links::Link","Ruby/classes/RSS/Maker/RSS09/Items/Item/Links/Link.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Rights","Ruby/classes/RSS/Maker/RSS09/Items/Item/Rights.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Authors","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Authors.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Categories","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Categories.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Contributors","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Contributors.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Generator","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Generator.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Icon","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Icon.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Links","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Links.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Logo","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Logo.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Rights","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Rights.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Subtitle","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Subtitle.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Source::Title","Ruby/classes/RSS/Maker/RSS09/Items/Item/Source/Title.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS09::Items::Item::Title","Ruby/classes/RSS/Maker/RSS09/Items/Item/Title.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS09::Textinput","Ruby/classes/RSS/Maker/RSS09/Textinput.html#method-i-to_feed","(rss)","",null,0],["to_feed","RSS::Maker::RSS10::Channel","Ruby/classes/RSS/Maker/RSS10/Channel.html#method-i-to_feed","(rss)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Authors","Ruby/classes/RSS/Maker/RSS10/Channel/Authors.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Authors::Author","Ruby/classes/RSS/Maker/RSS10/Channel/Authors/Author.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Categories","Ruby/classes/RSS/Maker/RSS10/Channel/Categories.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Cloud","Ruby/classes/RSS/Maker/RSS10/Channel/Cloud.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Contributors","Ruby/classes/RSS/Maker/RSS10/Channel/Contributors.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Copyright","Ruby/classes/RSS/Maker/RSS10/Channel/Copyright.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Description","Ruby/classes/RSS/Maker/RSS10/Channel/Description.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Generator","Ruby/classes/RSS/Maker/RSS10/Channel/Generator.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Links","Ruby/classes/RSS/Maker/RSS10/Channel/Links.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Links::Link","Ruby/classes/RSS/Maker/RSS10/Channel/Links/Link.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::SkipDays","Ruby/classes/RSS/Maker/RSS10/Channel/SkipDays.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::SkipHours","Ruby/classes/RSS/Maker/RSS10/Channel/SkipHours.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Channel::Title","Ruby/classes/RSS/Maker/RSS10/Channel/Title.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS10::Image","Ruby/classes/RSS/Maker/RSS10/Image.html#method-i-to_feed","(rss)","",null,0],["to_feed","RSS::Maker::RSS10::Items","Ruby/classes/RSS/Maker/RSS10/Items.html#method-i-to_feed","(rss)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item","Ruby/classes/RSS/Maker/RSS10/Items/Item.html#method-i-to_feed","(rss)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Authors","Ruby/classes/RSS/Maker/RSS10/Items/Item/Authors.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Categories","Ruby/classes/RSS/Maker/RSS10/Items/Item/Categories.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Content","Ruby/classes/RSS/Maker/RSS10/Items/Item/Content.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Contributors","Ruby/classes/RSS/Maker/RSS10/Items/Item/Contributors.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Description","Ruby/classes/RSS/Maker/RSS10/Items/Item/Description.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Enclosure","Ruby/classes/RSS/Maker/RSS10/Items/Item/Enclosure.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Guid","Ruby/classes/RSS/Maker/RSS10/Items/Item/Guid.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Links","Ruby/classes/RSS/Maker/RSS10/Items/Item/Links.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Rights","Ruby/classes/RSS/Maker/RSS10/Items/Item/Rights.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Authors","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Authors.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Categories","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Categories.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Contributors","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Contributors.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Generator","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Generator.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Icon","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Icon.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Links","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Links.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Logo","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Logo.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Rights","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Rights.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Subtitle","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Subtitle.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Source::Title","Ruby/classes/RSS/Maker/RSS10/Items/Item/Source/Title.html#method-i-to_feed","(*args)","",null,0],["to_feed","RSS::Maker::RSS10::Items::Item::Title","Ruby/classes/RSS/Maker/RSS10/Items/Item/Title.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS10::Textinput","Ruby/classes/RSS/Maker/RSS10/Textinput.html#method-i-to_feed","(rss)","",null,0],["to_feed","RSS::Maker::RSS20::Channel::Categories","Ruby/classes/RSS/Maker/RSS20/Channel/Categories.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS20::Channel::Categories::Category","Ruby/classes/RSS/Maker/RSS20/Channel/Categories/Category.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS20::Channel::Cloud","Ruby/classes/RSS/Maker/RSS20/Channel/Cloud.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS20::Channel::Generator","Ruby/classes/RSS/Maker/RSS20/Channel/Generator.html#method-i-to_feed","(rss, channel)","",null,0],["to_feed","RSS::Maker::RSS20::Items::Item::Authors","Ruby/classes/RSS/Maker/RSS20/Items/Item/Authors.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS20::Items::Item::Authors::Author","Ruby/classes/RSS/Maker/RSS20/Items/Item/Authors/Author.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS20::Items::Item::Categories","Ruby/classes/RSS/Maker/RSS20/Items/Item/Categories.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS20::Items::Item::Categories::Category","Ruby/classes/RSS/Maker/RSS20/Items/Item/Categories/Category.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS20::Items::Item::Enclosure","Ruby/classes/RSS/Maker/RSS20/Items/Item/Enclosure.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS20::Items::Item::Guid","Ruby/classes/RSS/Maker/RSS20/Items/Item/Guid.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS20::Items::Item::Source","Ruby/classes/RSS/Maker/RSS20/Items/Item/Source.html#method-i-to_feed","(rss, item)","",null,0],["to_feed","RSS::Maker::RSS20::Items::Item::Source::Links","Ruby/classes/RSS/Maker/RSS20/Items/Item/Source/Links.html#method-i-to_feed","(rss, source)","",null,0],["to_feed","RSS::Maker::RSS20::Items::Item::Source::Links::Link","Ruby/classes/RSS/Maker/RSS20/Items/Item/Source/Links/Link.html#method-i-to_feed","(rss, source)","",null,0],["to_feed","RSS::Maker::RSSBase","Ruby/classes/RSS/Maker/RSSBase.html#method-i-to_feed","()","",null,0],["to_feed","RSS::Maker::TrackBackModel::TrackBackAboutsBase::TrackBackAboutBase","Ruby/classes/RSS/Maker/TrackBackModel/TrackBackAboutsBase/TrackBackAboutBase.html#method-i-to_feed","(feed, current)","",null,0],["to_feed","RSS::Maker::XMLStyleSheets::XMLStyleSheet","Ruby/classes/RSS/Maker/XMLStyleSheets/XMLStyleSheet.html#method-i-to_feed","(feed)","",null,0],["to_feed","RSS::RootElementMixin","Ruby/classes/RSS/RootElementMixin.html#method-i-to_feed","(type, &block)","",null,0],["to_feed_for_categories","RSS::Maker::ITunesChannelModel::ITunesCategoriesBase::ITunesCategoryBase","Ruby/classes/RSS/Maker/ITunesChannelModel/ITunesCategoriesBase/ITunesCategoryBase.html#method-i-to_feed_for_categories","(feed, current)","",null,0],["to_format","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-to_format","()","<p>All other formats follow the procedure below. First we try to render a\ntemplate, if the template is not …\n",null,1],["to_formatted_s","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_formatted_s","(format = :default)","",null,1],["to_formatted_s","Array","Rails/classes/Array.html#method-i-to_formatted_s","(format = :default)","<p>Converts a collection of elements into a formatted string by calling\n<code>to_s</code> on all elements and joining …\n",null,1],["to_formatted_s","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_formatted_s","(*args)","",null,1],["to_formatted_s","Date","Rails/classes/Date.html#method-i-to_formatted_s","(format = :default)","<p>Convert to a formatted string. See DATE_FORMATS for predefined formats.\n<p>This method is aliased to <code>to_s</code> …\n",null,1],["to_formatted_s","DateTime","Rails/classes/DateTime.html#method-i-to_formatted_s","(format = :default)","<p>Convert to a formatted string. See Time::DATE_FORMATS for predefined\nformats.\n<p>This method is aliased to …\n",null,1],["to_formatted_s","Numeric","Rails/classes/Numeric.html#method-i-to_formatted_s","(format = :default, options = {})","<p>Provides options for converting numbers into formatted strings. Options are\nprovided for phone numbers, …\n",null,1],["to_formatted_s","Range","Rails/classes/Range.html#method-i-to_formatted_s","(format = :default)","<p>Gives a human readable format of the range.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">100</span>).<span class=\"ruby-identifier\">to_formatted_s</span> <span class=\"ruby-comment\"># =&gt; &quot;1..100&quot;</span>\n</pre>\n",null,1],["to_formatted_s","Time","Rails/classes/Time.html#method-i-to_formatted_s","(format = :default)","<p>Converts to a formatted string. See DATE_FORMATS for builtin formats.\n<p>This method is aliased to <code>to_s</code>. …\n",null,1],["to_h","ENV","Ruby/classes/ENV.html#method-c-to_h","()","<p>Creates a hash with a copy of the environment variables.\n",null,0],["to_h","Hash","Ruby/classes/Hash.html#method-i-to_h","()","<p>Returns <code>self</code>. If called on a subclass of Hash, converts the\nreceiver to a Hash object.\n",null,0],["to_h","NilClass","Ruby/classes/NilClass.html#method-i-to_h","()","<p>Always returns an empty hash.\n\n<pre><code>nil.to_h   #=&gt; {}\n</code></pre>\n",null,0],["to_h","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-i-to_h","()","",null,0],["to_h","OpenStruct","Ruby/classes/OpenStruct.html#method-i-to_h","()","<p>Converts the OpenStruct to a hash with keys representing each attribute (as\nsymbols) and their corresponding …\n",null,0],["to_h","Struct","Ruby/classes/Struct.html#method-i-to_h","()","<p>Returns the values for this instance as a hash with keys corresponding to\nthe instance variable name. …\n",null,0],["to_h","XMLRPC::FaultException","Ruby/classes/XMLRPC/FaultException.html#method-i-to_h","()","<p>The <code>faultCode</code> and <code>faultString</code> of the exception in\na Hash.\n",null,0],["to_hash","CSV::Row","Ruby/classes/CSV/Row.html#method-i-to_hash","()","<p>Collapses the row into a simple Hash.  Be warning that this discards field\norder and clobbers duplicate …\n",null,0],["to_hash","DBM","Ruby/classes/DBM.html#method-i-to_hash","()","<p>Converts the contents of the database to an in-memory Hash object, and\nreturns it.\n",null,0],["to_hash","ENV","Ruby/classes/ENV.html#method-c-to_hash","()","<p>Creates a hash with a copy of the environment variables.\n",null,0],["to_hash","GDBM","Ruby/classes/GDBM.html#method-i-to_hash","()","<p>Returns a hash of all key-value pairs contained in the database.\n",null,0],["to_hash","Hash","Ruby/classes/Hash.html#method-i-to_hash","()","<p>Returns <code>self</code>.\n",null,0],["to_hash","JSON::GenericObject","Ruby/classes/JSON/GenericObject.html#method-i-to_hash","()","",null,0],["to_hash","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-to_hash","()","<p>Returns a Hash consisting of header names and values. e.g. {“cache-control”\n=&gt; “private”, …\n",null,0],["to_hash","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-i-to_hash","()","",null,0],["to_hash","SDBM","Ruby/classes/SDBM.html#method-i-to_hash","()","<p>Returns a new Hash containing each key-value pair in the database.\n",null,0],["to_hash","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-to_hash","()","<p>Converts the contents of the database to an in-memory Hash object, and\nreturns it.\n",null,0],["to_hash","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-to_hash","()","",null,1],["to_hash","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-to_hash","(full_messages = false)","<p>Returns a Hash of attributes with their error messages. If\n<code>full_messages</code> is <code>true</code>, it will contain full …\n",null,1],["to_hash","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-i-to_hash","()","",null,1],["to_hash","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_hash","()","<p>Convert to a regular hash with string keys.\n",null,1],["to_hash","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_hash","()","<p>Convert to a regular hash with string keys.\n",null,1],["to_html","RDoc::Markup::ToHtml","Ruby/classes/RDoc/Markup/ToHtml.html#method-i-to_html","(item)","<p>Converts <code>item</code> to HTML using RDoc::Text#to_html\n",null,0],["to_html","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-to_html","(text)","<p>Converts ampersand, dashes, ellipsis, quotes, copyright and registered\ntrademark symbols in <code>text</code> to properly …\n",null,0],["to_html","RDoc::TokenStream","Ruby/classes/RDoc/TokenStream.html#method-c-to_html","(token_stream)","<p>Converts <code>token_stream</code> to HTML wrapping various tokens with\n<code>&lt;span&gt;</code> elements.  The following tokens …\n",null,0],["to_html","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-to_html","()","<p>HTML format does not render the resource, it always attempt to render a\ntemplate.\n",null,1],["to_html","Rails::Info","Rails/classes/Rails/Info.html#method-c-to_html","()","",null,1],["to_i","ARGF","Ruby/classes/ARGF.html#method-i-to_i","()","<p>Returns an integer representing the numeric file descriptor for the current\nfile. Raises an <code>ArgumentError</code> …\n",null,0],["to_i","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_i","()","<p>Returns the value as an integer (Fixnum or Bignum).\n<p>If the BigNumber is infinity or NaN, raises FloatDomainError …\n",null,0],["to_i","Complex","Ruby/classes/Complex.html#method-i-to_i","()","<p>Returns the value as an integer if possible (the imaginary part should be\nexactly zero).\n\n<pre><code>Complex(1, 0).to_i ...</code></pre>\n",null,0],["to_i","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-to_i","()","<p>Returns the memory location of this function pointer as an integer.\n",null,0],["to_i","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-to_i","()","<p>Returns the integer memory location of this DL::CPtr.\n",null,0],["to_i","DL::Function","Ruby/classes/DL/Function.html#method-i-to_i","()","",null,0],["to_i","DL::Handle","Ruby/classes/DL/Handle.html#method-i-to_i","()","<p>Returns the memory address for this handle.\n",null,0],["to_i","Fiddle::Closure","Ruby/classes/Fiddle/Closure.html#method-i-to_i","()","<p>Returns the memory address for this closure\n",null,0],["to_i","Fiddle::Function","Ruby/classes/Fiddle/Function.html#method-i-to_i","()","<p>The integer memory location of this function\n",null,0],["to_i","Fiddle::Handle","Ruby/classes/Fiddle/Handle.html#method-i-to_i","()","<p>Returns the memory address for this handle.\n",null,0],["to_i","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-to_i","()","<p>Returns the integer memory location of this pointer.\n",null,0],["to_i","Float","Ruby/classes/Float.html#method-i-to_i","()","<p>Returns <em>flt</em> truncated to an <code>Integer</code>.\n",null,0],["to_i","IO","Ruby/classes/IO.html#method-i-to_i","()","",null,0],["to_i","IPAddr","Ruby/classes/IPAddr.html#method-i-to_i","()","<p>Returns the integer representation of the ipaddr.\n",null,0],["to_i","Integer","Ruby/classes/Integer.html#method-i-to_i","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["to_i","Integer","Ruby/classes/Integer.html#method-i-to_i","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["to_i","NilClass","Ruby/classes/NilClass.html#method-i-to_i","()","<p>Always returns zero.\n\n<pre><code>nil.to_i   #=&gt; 0\n</code></pre>\n",null,0],["to_i","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-to_i","()","",null,0],["to_i","Process::Status","Ruby/classes/Process/Status.html#method-i-to_i","()","<p>Returns the bits in <em>stat</em> as a <code>Fixnum</code>. Poking around\nin these bits is platform dependent.\n\n<pre><code>fork { exit 0xab ...</code></pre>\n",null,0],["to_i","Rake::PseudoStatus","Ruby/classes/Rake/PseudoStatus.html#method-i-to_i","()","",null,0],["to_i","Rational","Ruby/classes/Rational.html#method-i-to_i","()","<p>Returns the truncated value as an integer.\n<p>Equivalent to\n\n<pre><code>rat.truncate.\n\nRational(2, 3).to_i   #=&gt; 0\nRational(3).to_i ...\n</code></pre>\n",null,0],["to_i","String","Ruby/classes/String.html#method-i-to_i","(p1 = v1)","<p>Returns the result of interpreting leading characters in <em>str</em> as an\ninteger base <em>base</em> (between 2 and 36). …\n",null,0],["to_i","Time","Ruby/classes/Time.html#method-i-to_i","()","<p>Returns the value of <em>time</em> as an integer number of seconds since\nthe Epoch.\n\n<pre><code>t = Time.now\n&quot;%10.5f&quot; % t.to_f ...</code></pre>\n",null,0],["to_i","WEBrick::HTTPStatus::Status","Ruby/classes/WEBrick/HTTPStatus/Status.html#method-i-to_i","()","",null,0],["to_i","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_i","()","",null,1],["to_i","DateTime","Rails/classes/DateTime.html#method-i-to_i","()","<p>Converts <code>self</code> to an integer number of seconds since the Unix\nepoch.\n",null,1],["to_id","DRb","Ruby/classes/DRb.html#method-c-to_id","(obj)","<p>Get a reference id for an object using the current server.\n<p>This raises a DRbServerNotFound error if there …\n",null,0],["to_id","DRb::DRbIdConv","Ruby/classes/DRb/DRbIdConv.html#method-i-to_id","(obj)","<p>Convert an object into a reference id.\n<p>This implementation returns the object&#39;s __id__ in the local …\n",null,0],["to_id","DRb::DRbIdConv","Ruby/classes/DRb/DRbIdConv.html#method-i-to_id","(obj)","<p>Convert an object into a reference id.\n<p>This implementation returns the object&#39;s __id__ in the local …\n",null,0],["to_id","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-i-to_id","(obj)","<p>Convert a local object to a dRuby reference.\n",null,0],["to_int","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_int","()","<p>Returns the value as an integer (Fixnum or Bignum).\n<p>If the BigNumber is infinity or NaN, raises FloatDomainError …\n",null,0],["to_int","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-to_int","()","<p>Returns the integer memory location of this DL::CPtr.\n",null,0],["to_int","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-to_int","()","<p>Returns the integer memory location of this pointer.\n",null,0],["to_int","Float","Ruby/classes/Float.html#method-i-to_int","()","<p>Returns <em>flt</em> truncated to an <code>Integer</code>.\n",null,0],["to_int","Integer","Ruby/classes/Integer.html#method-i-to_int","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["to_int","Integer","Ruby/classes/Integer.html#method-i-to_int","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["to_int","Numeric","Ruby/classes/Numeric.html#method-i-to_int","()","<p>Invokes the child class&#39;s <code>to_i</code> method to convert\n<code>num</code> to an integer.\n\n<pre><code>1.0.class =&gt; Float\n1.0.to_int.class ...\n</code></pre>\n",null,0],["to_int","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-to_int","()","",null,0],["to_integer","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Range","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Range.html#method-i-to_integer","(value)","",null,1],["to_io","ARGF","Ruby/classes/ARGF.html#method-i-to_io","()","<p>Returns an <code>IO</code> object representing the current file. This will\nbe a <code>File</code> object unless the current file …\n",null,0],["to_io","IO","Ruby/classes/IO.html#method-i-to_io","()","<p>Returns <em>ios</em>.\n",null,0],["to_io","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-i-to_io","()","<p>Same as IO.\n",null,0],["to_js","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-to_js","()","<p>to_js simply tries to render a template. If no template is found, raises\nthe error.\n",null,1],["to_json","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_json","(*)","<p>return the JSON value\n",null,0],["to_json","Complex","Ruby/classes/Complex.html#method-i-to_json","(*)","",null,0],["to_json","Date","Ruby/classes/Date.html#method-i-to_json","(*args)","<p>Stores class name (Date) with Julian year <code>y</code>, month\n<code>m</code>, day <code>d</code> and Day of Calendar Reform\n<code>sg</code> as JSON string …\n",null,0],["to_json","DateTime","Ruby/classes/DateTime.html#method-i-to_json","(*args)","<p>Stores class name (DateTime) with Julian year <code>y</code>, month\n<code>m</code>, day <code>d</code>, hour <code>H</code>, minute\n<code>M</code>, second <code>S</code>, offset  …\n",null,0],["to_json","Exception","Ruby/classes/Exception.html#method-i-to_json","(*args)","<p>Stores class name (Exception) with message <code>m</code> and backtrace\narray <code>b</code> as JSON string\n",null,0],["to_json","JSON::GenericObject","Ruby/classes/JSON/GenericObject.html#method-i-to_json","(*a)","",null,0],["to_json","OpenStruct","Ruby/classes/OpenStruct.html#method-i-to_json","(*args)","<p>Stores class name (OpenStruct) with this struct&#39;s values <code>v</code>\nas a JSON string.\n",null,0],["to_json","Psych","Ruby/classes/Psych.html#method-c-to_json","(o)","<p>Dump Ruby object <code>o</code> to a JSON string.\n",null,0],["to_json","Range","Ruby/classes/Range.html#method-i-to_json","(*args)","<p>Stores class name (Range) with JSON array of arguments <code>a</code> which\ninclude <code>first</code> (integer), <code>last</code> (integer), …\n",null,0],["to_json","Rational","Ruby/classes/Rational.html#method-i-to_json","(*)","",null,0],["to_json","Regexp","Ruby/classes/Regexp.html#method-i-to_json","(*)","<p>Stores class name (Regexp) with options <code>o</code> and source\n<code>s</code> (Regexp or String) as JSON string\n",null,0],["to_json","Struct","Ruby/classes/Struct.html#method-i-to_json","(*args)","<p>Stores class name (Struct) with Struct values <code>v</code> as a JSON\nstring. Only named structs are supported.\n",null,0],["to_json","Symbol","Ruby/classes/Symbol.html#method-i-to_json","(*a)","<p>Stores class name (Symbol) with String representation of Symbol as a JSON\nstring.\n",null,0],["to_json","Time","Ruby/classes/Time.html#method-i-to_json","(*args)","<p>Stores class name (Time) with number of seconds since epoch and number of\nmicroseconds for Time as JSON …\n",null,0],["to_json","Object","Rails/classes/Object.html#method-i-to_json","(options = nil)","<p>Dumps object in JSON (JavaScript Object Notation). See www.json.org for\nmore info.\n",null,1],["to_key","ActiveModel::Conversion","Rails/classes/ActiveModel/Conversion.html#method-i-to_key","()","<p>Returns an Enumerable of all key attributes if any is set, regardless if\nthe object is persisted or not. …\n",null,1],["to_key","ActiveRecord::AttributeMethods::PrimaryKey","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-to_key","()","<p>Returns this record&#39;s primary key value wrapped in an Array if one is\navailable.\n",null,1],["to_mailtext","URI::MailTo","Ruby/classes/URI/MailTo.html#method-i-to_mailtext","()","<p>Returns the RFC822 e-mail text equivalent of the URL, as a String.\n<p>Example:\n\n<pre><code>require &#39;uri&#39;\n\nuri = URI.parse(&quot;mailto:ruby-list@ruby-lang.org?Subject=subscribe&amp;cc=myaddr&quot;) ...\n</code></pre>\n",null,0],["to_model","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-to_model","()","",null,1],["to_model","ActiveModel::Conversion","Rails/classes/ActiveModel/Conversion.html#method-i-to_model","()","<p>If your object is already designed to implement all of the Active Model you\ncan use the default <code>:to_model</code> …\n",null,1],["to_name","Resolv::IPv4","Ruby/classes/Resolv/IPv4.html#method-i-to_name","()","<p>Turns this IPv4 address into a Resolv::DNS::Name.\n",null,0],["to_name","Resolv::IPv6","Ruby/classes/Resolv/IPv6.html#method-i-to_name","()","<p>Turns this IPv6 address into a Resolv::DNS::Name.\n",null,0],["to_obj","DRb","Ruby/classes/DRb.html#method-c-to_obj","(ref)","<p>Convert a reference into an object using the current server.\n<p>This raises a DRbServerNotFound error if …\n",null,0],["to_obj","DRb::DRbIdConv","Ruby/classes/DRb/DRbIdConv.html#method-i-to_obj","(ref)","<p>Convert an object reference id to an object.\n<p>This implementation looks up the reference id in the local …\n",null,0],["to_obj","DRb::DRbIdConv","Ruby/classes/DRb/DRbIdConv.html#method-i-to_obj","(ref)","<p>Convert an object reference id to an object.\n<p>This implementation looks up the reference id in the local …\n",null,0],["to_obj","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-i-to_obj","(ref)","<p>Convert a dRuby reference to the local object it refers to.\n",null,0],["to_options","Hash","Rails/classes/Hash.html#method-i-to_options","()","",null,1],["to_options!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_options-21","()","",null,1],["to_options!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_options-21","()","",null,1],["to_options!","Hash","Rails/classes/Hash.html#method-i-to_options-21","()","",null,1],["to_p","Win32::SSPI::Identity","Ruby/classes/Win32/SSPI/Identity.html#method-i-to_p","()","",null,0],["to_p","Win32::SSPI::SecurityBuffer","Ruby/classes/Win32/SSPI/SecurityBuffer.html#method-i-to_p","()","",null,0],["to_p","Win32::SSPI::SecurityHandle","Ruby/classes/Win32/SSPI/SecurityHandle.html#method-i-to_p","()","",null,0],["to_p","Win32::SSPI::TimeStamp","Ruby/classes/Win32/SSPI/TimeStamp.html#method-i-to_p","()","",null,0],["to_param","ActiveModel::Conversion","Rails/classes/ActiveModel/Conversion.html#method-i-to_param","()","<p>Returns a <code>string</code> representing the object&#39;s key suitable\nfor use in URLs, or <code>nil</code> if <code>persisted?</code> is …\n",null,1],["to_param","ActiveRecord::Integration","Rails/classes/ActiveRecord/Integration.html#method-i-to_param","()","<p>Returns a String, which Action Pack uses for constructing an URL to this\nobject. The default implementation …\n",null,1],["to_param","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-to_param","()","",null,1],["to_param","Array","Rails/classes/Array.html#method-i-to_param","()","<p>Calls <code>to_param</code> on all its elements and joins the result with\nslashes. This is used by <code>url_for</code> in Action …\n",null,1],["to_param","FalseClass","Rails/classes/FalseClass.html#method-i-to_param","()","<p>Returns <code>self</code>.\n",null,1],["to_param","Hash","Rails/classes/Hash.html#method-i-to_param","(namespace = nil)","<p>Returns a string representation of the receiver suitable for use as a URL\nquery string:\n\n<pre>{name: &#39;David&#39;, ...</pre>\n",null,1],["to_param","NilClass","Rails/classes/NilClass.html#method-i-to_param","()","<p>Returns <code>self</code>.\n",null,1],["to_param","Object","Rails/classes/Object.html#method-i-to_param","()","<p>Alias of <code>to_s</code>.\n",null,1],["to_param","TrueClass","Rails/classes/TrueClass.html#method-i-to_param","()","<p>Returns <code>self</code>.\n",null,1],["to_partial_path","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-to_partial_path","()","",null,1],["to_partial_path","ActiveModel::Conversion","Rails/classes/ActiveModel/Conversion.html#method-i-to_partial_path","()","<p>Returns a <code>string</code> identifying the path associated with the\nobject. ActionPack uses this to find a suitable …\n",null,1],["to_path","Dir","Ruby/classes/Dir.html#method-i-to_path","()","<p>Returns the path parameter passed to <em>dir</em>&#39;s constructor.\n\n<pre><code>d = Dir.new(&quot;..&quot;)\nd.path   #=&gt; &quot;..&quot;\n</code></pre>\n",null,0],["to_path","File","Ruby/classes/File.html#method-i-to_path","()","<p>Returns the pathname used to create <em>file</em> as a string. Does not\nnormalize the name.\n\n<pre><code>File.new(&quot;testfile&quot;).path ...</code></pre>\n",null,0],["to_path","Pathname","Ruby/classes/Pathname.html#method-i-to_path","()","<p>Return the path as a String.\n<p>to_path is implemented so Pathname objects are usable with File.open, etc.\n…\n",null,0],["to_path","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-to_path","()","",null,1],["to_path","ActionView::FileSystemResolver","Rails/classes/ActionView/FileSystemResolver.html#method-i-to_path","()","",null,1],["to_pem","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-to_pem","()","<p>Returns the PEM encoding of this SPKI.\n",null,0],["to_pem","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-to_pem","()","",null,0],["to_pem","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-to_pem","()","",null,0],["to_pem","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-to_pem","(p1 = v1, p2 = v2)","",null,0],["to_pem","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-to_pem","(p1 = v1, p2 = v2)","",null,0],["to_pem","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-to_pem","()","<p>See the OpenSSL documentation for PEM_write_bio_ECPKParameters()\n",null,0],["to_pem","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_pem","(p1 = v1, p2 = v2)","",null,0],["to_pem","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_pem","(p1 = v1, p2 = v2)","",null,0],["to_pem","OpenSSL::SSL::Session","Ruby/classes/OpenSSL/SSL/Session.html#method-i-to_pem","()","<p>Returns a PEM encoded String that contains the Session object.\n",null,0],["to_pem","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-to_pem","()","",null,0],["to_pem","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-to_pem","()","",null,0],["to_pem","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-to_pem","()","",null,0],["to_prepare","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-c-to_prepare","(*args, &block)","<p>Add a prepare callback. Prepare callbacks are run before each request,\nprior to ActionDispatch::Callback&#39;s …\n",null,1],["to_prepare","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-to_prepare","(&blk)","<p>Defines generic callbacks to run before #after_initialize. Useful for\nRails::Railtie subclasses.\n",null,1],["to_prepare_blocks","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-to_prepare_blocks","()","<p>Array of callbacks defined by #to_prepare.\n",null,1],["to_proc","Method","Ruby/classes/Method.html#method-i-to_proc","()","<p>Returns a <code>Proc</code> object corresponding to this method.\n",null,0],["to_proc","Proc","Ruby/classes/Proc.html#method-i-to_proc","()","<p>Part of the protocol for converting objects to <code>Proc</code> objects.\nInstances of class <code>Proc</code> simply return themselves. …\n",null,0],["to_proc","Symbol","Ruby/classes/Symbol.html#method-i-to_proc","()","<p>Returns a <em>Proc</em> object which respond to the given method by\n<em>sym</em>.\n\n<pre><code>(1..3).collect(&amp;:to_s)  #=&gt; [&quot;1&quot;, &quot;2&quot;, ...\n</code></pre>\n",null,0],["to_ptr","DL::CPtr","Ruby/classes/DL/CPtr.html#method-c-to_ptr","(p1)","<p>Get the underlying pointer for ruby object <code>val</code> and return it\nas a DL::CPtr object.\n",null,0],["to_ptr","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-c-to_ptr","(p1)","<p>Get the underlying pointer for ruby object <code>val</code> and return it\nas a Fiddle::Pointer object.\n",null,0],["to_query","Array","Rails/classes/Array.html#method-i-to_query","(key)","<p>Converts an array into a string suitable for use as a URL query string,\nusing the given <code>key</code> as the param …\n",null,1],["to_query","Hash","Rails/classes/Hash.html#method-i-to_query","(namespace = nil)","",null,1],["to_query","Object","Rails/classes/Object.html#method-i-to_query","(key)","<p>Converts an object into a string suitable for use as a URL query string,\nusing the given <code>key</code> as the param …\n",null,1],["to_r","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_r","()","<p>Converts a BigDecimal to a Rational.\n",null,0],["to_r","Complex","Ruby/classes/Complex.html#method-i-to_r","()","<p>Returns the value as a rational if possible (the imaginary part should be\nexactly zero).\n\n<pre><code>Complex(1, 0).to_r ...</code></pre>\n",null,0],["to_r","Float","Ruby/classes/Float.html#method-i-to_r","()","<p>Returns the value as a rational.\n<p>NOTE: 0.3.to_r isn&#39;t the same as &#39;0.3&#39;.to_r.  The latter …\n",null,0],["to_r","Integer","Ruby/classes/Integer.html#method-i-to_r","()","<p>Returns the value as a rational.\n\n<pre><code>1.to_r        #=&gt; (1/1)\n(1&lt;&lt;64).to_r  #=&gt; (18446744073709551616/1)\n</code></pre>\n",null,0],["to_r","Integer","Ruby/classes/Integer.html#method-i-to_r","()","<p>Returns the value as a rational.\n\n<pre><code>1.to_r        #=&gt; (1/1)\n(1&lt;&lt;64).to_r  #=&gt; (18446744073709551616/1)\n</code></pre>\n",null,0],["to_r","NilClass","Ruby/classes/NilClass.html#method-i-to_r","()","<p>Returns zero as a rational.\n",null,0],["to_r","Rational","Ruby/classes/Rational.html#method-i-to_r","()","<p>Returns self.\n\n<pre><code>Rational(2).to_r      #=&gt; (2/1)\nRational(-8, 6).to_r  #=&gt; (-4/3)\n</code></pre>\n",null,0],["to_r","String","Ruby/classes/String.html#method-i-to_r","()","<p>Returns a rational which denotes the string form.  The parser ignores\nleading whitespaces and trailing …\n",null,0],["to_r","Time","Ruby/classes/Time.html#method-i-to_r","()","<p>Returns the value of <em>time</em> as a rational number of seconds since\nthe Epoch.\n\n<pre><code>t = Time.now\np t.to_r      ...</code></pre>\n",null,0],["to_r","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_r","()","",null,1],["to_range","IPAddr","Ruby/classes/IPAddr.html#method-i-to_range","()","<p>Creates a Range object for the network address.\n",null,0],["to_rfc822text","URI::MailTo","Ruby/classes/URI/MailTo.html#method-i-to_rfc822text","()","",null,0],["to_rss","RSS::RootElementMixin","Ruby/classes/RSS/RootElementMixin.html#method-i-to_rss","(type, &block)","",null,0],["to_ruby","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-to_ruby","()","<p>Returns a Ruby code representation of this specification, such that it can\nbe eval&#39;ed and reconstruct …\n",null,0],["to_ruby","Psych::Nodes::Node","Ruby/classes/Psych/Nodes/Node.html#method-i-to_ruby","()","<p>Convert this node to Ruby.\n<p>See also Psych::Visitors::ToRuby\n",null,0],["to_ruby_for_cache","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-to_ruby_for_cache","()","<p>Returns a Ruby lighter-weight code representation of this specification,\nused for indexing only.\n<p>See  …\n",null,0],["to_s","ARGF","Ruby/classes/ARGF.html#method-i-to_s","()","<p>Returns “ARGF”.\n",null,0],["to_s","Addrinfo","Ruby/classes/Addrinfo.html#method-i-to_s","()","<p>returns the socket address as packed struct sockaddr string.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).to_sockaddr ...</code></pre>\n",null,0],["to_s","Array","Ruby/classes/Array.html#method-i-to_s","()","",null,0],["to_s","Benchmark::Tms","Ruby/classes/Benchmark/Tms.html#method-i-to_s","()","<p>Same as #format.\n",null,0],["to_s","BigDecimal","Ruby/classes/BigDecimal.html#method-i-to_s","(p1 = v1)","<p>Converts the value to a string.\n<p>The default format looks like  0.xxxxEnn.\n<p>The optional parameter s consists …\n",null,0],["to_s","Bignum","Ruby/classes/Bignum.html#method-i-to_s","(p1 = v1)","<p>Returns a string containing the representation of <em>big</em> radix\n<em>base</em> (2 through 36).\n\n<pre><code>12345654321.to_s     ...</code></pre>\n",null,0],["to_s","CGI::Cookie","Ruby/classes/CGI/Cookie.html#method-i-to_s","()","<p>Convert the Cookie to its string representation.\n",null,0],["to_s","CSV::Row","Ruby/classes/CSV/Row.html#method-i-to_s","(options = Hash.new)","",null,0],["to_s","CSV::Table","Ruby/classes/CSV/Table.html#method-i-to_s","(options = Hash.new)","",null,0],["to_s","Complex","Ruby/classes/Complex.html#method-i-to_s","()","<p>Returns the value as a string.\n\n<pre><code>Complex(2).to_s                       #=&gt; &quot;2+0i&quot;\nComplex(&#39;-8/6&#39;).to_s  ...\n</code></pre>\n",null,0],["to_s","DL::CFunc","Ruby/classes/DL/CFunc.html#method-i-to_s","()","<p>Returns a string formatted with an easily readable representation of the\ninternal state of the DL::CFunc …\n",null,0],["to_s","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-to_s","(p1 = v1)","<p>Returns the pointer contents as a string.  When called with no arguments,\nthis method will return the …\n",null,0],["to_s","Date","Ruby/classes/Date.html#method-i-to_s","()","<p>Returns a string in an ISO 8601 format (This method doesn&#39;t use the\nexpanded representations).\n\n<pre><code>Date.new(2001,2,3).to_s ...</code></pre>\n",null,0],["to_s","DateTime","Ruby/classes/DateTime.html#method-i-to_s","()","<p>Returns a string in an ISO 8601 format (This method doesn&#39;t use the\nexpanded representations).\n\n<pre><code>DateTime.new(2001,2,3,4,5,6,&#39;-7&#39;).to_s ...</code></pre>\n",null,0],["to_s","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-to_s","()","<p>Returns digest_obj.hexdigest().\n",null,0],["to_s","ENV","Ruby/classes/ENV.html#method-c-to_s","()","<p>Returns “ENV”\n",null,0],["to_s","Encoding","Ruby/classes/Encoding.html#method-i-to_s","()","<p>Returns the name of the encoding.\n\n<pre><code>Encoding::UTF_8.name      #=&gt; &quot;UTF-8&quot;\n</code></pre>\n",null,0],["to_s","Exception","Ruby/classes/Exception.html#method-i-to_s","()","<p>Returns exception&#39;s message (or the name of the exception if no message\nis set).\n",null,0],["to_s","FalseClass","Ruby/classes/FalseClass.html#method-i-to_s","()","<p>&#39;nuf said…\n",null,0],["to_s","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-to_s","(p1 = v1)","<p>Returns the pointer contents as a string.\n<p>When called with no arguments, this method will return the contents …\n",null,0],["to_s","Fixnum","Ruby/classes/Fixnum.html#method-i-to_s","(p1 = v1)","<p>Returns a string containing the representation of <em>fix</em> radix\n<em>base</em> (between 2 and 36).\n\n<pre><code>12345.to_s       ...</code></pre>\n",null,0],["to_s","Float","Ruby/classes/Float.html#method-i-to_s","()","<p>Returns a string containing a representation of self. As well as a fixed or\nexponential form of the number, …\n",null,0],["to_s","Gem::DependencyResolver::DependencyRequest","Ruby/classes/Gem/DependencyResolver/DependencyRequest.html#method-i-to_s","()","",null,0],["to_s","Gem::NameTuple","Ruby/classes/Gem/NameTuple.html#method-i-to_s","()","",null,0],["to_s","Gem::Platform","Ruby/classes/Gem/Platform.html#method-i-to_s","()","",null,0],["to_s","Hash","Ruby/classes/Hash.html#method-i-to_s","()","",null,0],["to_s","IPAddr","Ruby/classes/IPAddr.html#method-i-to_s","()","<p>Returns a string containing the IP address representation.\n",null,0],["to_s","MatchData","Ruby/classes/MatchData.html#method-i-to_s","()","<p>Returns the entire matched string.\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.to_s   #=&gt; &quot;HX1138&quot;\n</code></pre>\n",null,0],["to_s","Matrix","Ruby/classes/Matrix.html#method-i-to_s","()","<p>Overrides Object#to_s\n",null,0],["to_s","Method","Ruby/classes/Method.html#method-i-to_s","()","<p>Returns the name of the underlying method.\n\n<pre><code>&quot;cat&quot;.method(:count).inspect   #=&gt; &quot;#&lt;Method: String#count&gt;&quot;\n</code></pre>\n",null,0],["to_s","Module","Ruby/classes/Module.html#method-i-to_s","()","<p>Return a string representing this module or class. For basic classes and\nmodules, this is the name.  …\n",null,0],["to_s","NameError","Ruby/classes/NameError.html#method-i-to_s","()","<p>Produce a nicely-formatted string representing the <code>NameError</code>.\n",null,0],["to_s","NilClass","Ruby/classes/NilClass.html#method-i-to_s","()","<p>Always returns the empty string.\n",null,0],["to_s","Object","Ruby/classes/Object.html#method-i-to_s","()","<p>Returns a string representing <em>obj</em>. The default <code>to_s</code>\nprints the object&#39;s class and an encoding of …\n",null,0],["to_s","OpenSSL::BN","Ruby/classes/OpenSSL/BN.html#method-i-to_s","(p1 = v1)","<p>Parameters\n<p><code>base</code> - integer\n<p><p>Valid values:\n",null,0],["to_s","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-to_s","()","",null,0],["to_s","OpenSSL::HMAC","Ruby/classes/OpenSSL/HMAC.html#method-i-to_s","()","",null,0],["to_s","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-to_s","()","",null,0],["to_s","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-to_s","()","",null,0],["to_s","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-to_s","()","",null,0],["to_s","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-to_s","(p1 = v1, p2 = v2)","",null,0],["to_s","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_s","(p1 = v1, p2 = v2)","",null,0],["to_s","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_s","(p1 = v1, p2 = v2)","",null,0],["to_s","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-to_s","()","",null,0],["to_s","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-to_s","()","",null,0],["to_s","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-i-to_s","()","",null,0],["to_s","OpenSSL::X509::Name","Ruby/classes/OpenSSL/X509/Name.html#method-i-to_s","(p1 = v1)","<p>Returns this name as a Distinguished Name string.  <code>flags</code> may\nbe one of:\n<p>OpenSSL::X509::Name::COMPAT\n<p>OpenSSL::X509::Name::RFC2253 …\n",null,0],["to_s","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-to_s","()","",null,0],["to_s","OpenStruct","Ruby/classes/OpenStruct.html#method-i-to_s","()","",null,0],["to_s","OptionParser","Ruby/classes/OptionParser.html#method-i-to_s","()","",null,0],["to_s","OptionParser::ParseError","Ruby/classes/OptionParser/ParseError.html#method-i-to_s","()","",null,0],["to_s","Pathname","Ruby/classes/Pathname.html#method-i-to_s","()","<p>Return the path as a String.\n<p>to_path is implemented so Pathname objects are usable with File.open, etc.\n…\n",null,0],["to_s","Proc","Ruby/classes/Proc.html#method-i-to_s","()","<p>Returns the unique identifier for this proc, along with an indication of\nwhere the proc was defined. …\n",null,0],["to_s","Process::Status","Ruby/classes/Process/Status.html#method-i-to_s","()","<p>Show pid and exit status as a string.\n\n<pre><code>system(&quot;false&quot;)\np $?.to_s         #=&gt; &quot;pid 12766 exit 1&quot;\n</code></pre>\n",null,0],["to_s","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-to_s","()","<p>Returns the attribute value, with entities replaced\n",null,0],["to_s","REXML::CData","Ruby/classes/REXML/CData.html#method-i-to_s","()","<p>Returns the content of this CData object\n<p><em>Examples</em>\n\n<pre><code>c = CData.new( &quot;Some text&quot; )\nc.to_s        # -&gt; &quot;Some ...</code></pre>\n",null,0],["to_s","REXML::DTD::EntityDecl","Ruby/classes/REXML/DTD/EntityDecl.html#method-i-to_s","()","",null,0],["to_s","REXML::DTD::NotationDecl","Ruby/classes/REXML/DTD/NotationDecl.html#method-i-to_s","()","",null,0],["to_s","REXML::Entity","Ruby/classes/REXML/Entity.html#method-i-to_s","()","<p>Returns this entity as a string.  See write().\n",null,0],["to_s","REXML::Light::Node","Ruby/classes/REXML/Light/Node.html#method-i-to_s","()","",null,0],["to_s","REXML::Node","Ruby/classes/REXML/Node.html#method-i-to_s","(indent=nil)","<p>indent &mdash; <strong>DEPRECATED</strong> This parameter is now ignored.  See the\nformatters in the REXML::Formatters package …\n\n",null,0],["to_s","REXML::Output","Ruby/classes/REXML/Output.html#method-i-to_s","()","",null,0],["to_s","REXML::ParseException","Ruby/classes/REXML/ParseException.html#method-i-to_s","()","",null,0],["to_s","REXML::Text","Ruby/classes/REXML/Text.html#method-i-to_s","()","<p>Returns the string value of this text node.  This string is always escaped,\nmeaning that it is a valid …\n",null,0],["to_s","REXML::Validation::Event","Ruby/classes/REXML/Validation/Event.html#method-i-to_s","()","",null,0],["to_s","REXML::Validation::Ref","Ruby/classes/REXML/Validation/Ref.html#method-i-to_s","()","",null,0],["to_s","REXML::Validation::State","Ruby/classes/REXML/Validation/State.html#method-i-to_s","()","",null,0],["to_s","RSS::Element","Ruby/classes/RSS/Element.html#method-i-to_s","(need_convert=true, indent='')","",null,0],["to_s","RSS::XML::Element","Ruby/classes/RSS/XML/Element.html#method-i-to_s","()","",null,0],["to_s","RSS::XMLStyleSheet","Ruby/classes/RSS/XMLStyleSheet.html#method-i-to_s","()","",null,0],["to_s","Rake::EarlyTime","Ruby/classes/Rake/EarlyTime.html#method-i-to_s","()","",null,0],["to_s","Rake::InvocationChain","Ruby/classes/Rake/InvocationChain.html#method-i-to_s","()","",null,0],["to_s","Rake::InvocationChain::EmptyInvocationChain","Ruby/classes/Rake/InvocationChain/EmptyInvocationChain.html#method-i-to_s","()","",null,0],["to_s","Rake::Task","Ruby/classes/Rake/Task.html#method-i-to_s","()","<p>Return task name\n",null,0],["to_s","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-i-to_s","()","",null,0],["to_s","Range","Ruby/classes/Range.html#method-i-to_s","()","<p>Convert this range object to a printable form (using #to_s to convert the\nbegin and end objects).\n",null,0],["to_s","Rational","Ruby/classes/Rational.html#method-i-to_s","()","<p>Returns the value as a string.\n\n<pre><code>Rational(2).to_s      #=&gt; &quot;2/1&quot;\nRational(-8, 6).to_s  #=&gt; &quot;-4/3&quot;\nRational(&#39;1/2&#39;).to_s ...\n</code></pre>\n",null,0],["to_s","Regexp","Ruby/classes/Regexp.html#method-i-to_s","()","<p>Returns a string containing the regular expression and its options (using\nthe <code>(?opts:source)</code> notation. …\n",null,0],["to_s","Resolv::DNS::Name","Ruby/classes/Resolv/DNS/Name.html#method-i-to_s","()","<p>returns the domain name as a string.\n<p>The domain name doesn&#39;t have a trailing dot even if the name …\n",null,0],["to_s","Shell::Filter","Ruby/classes/Shell/Filter.html#method-i-to_s","()","",null,0],["to_s","Socket::Option","Ruby/classes/Socket/Option.html#method-i-to_s","()","<p>returns the socket option data as a string.\n\n<pre><code>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).data ...</code></pre>\n",null,0],["to_s","String","Ruby/classes/String.html#method-i-to_s","()","<p>Returns the receiver.\n",null,0],["to_s","Struct","Ruby/classes/Struct.html#method-i-to_s","()","",null,0],["to_s","Symbol","Ruby/classes/Symbol.html#method-i-to_s","()","<p>Returns the name or string corresponding to <em>sym</em>.\n\n<pre><code>:fred.id2name   #=&gt; &quot;fred&quot;\n</code></pre>\n",null,0],["to_s","Thread::Backtrace::Location","Ruby/classes/Thread/Backtrace/Location.html#method-i-to_s","()","<p>Returns a Kernel#caller style string representing this frame.\n",null,0],["to_s","Time","Ruby/classes/Time.html#method-i-to_s","()","<p>Returns a string representing <em>time</em>. Equivalent to calling\n#strftime with the appropriate format string. …\n",null,0],["to_s","TrueClass","Ruby/classes/TrueClass.html#method-i-to_s","()","<p>The string representation of <code>true</code> is “true”.\n",null,0],["to_s","URI::FTP","Ruby/classes/URI/FTP.html#method-i-to_s","()","",null,0],["to_s","URI::Generic","Ruby/classes/URI/Generic.html#method-i-to_s","()","<p>Constructs String from URI\n",null,0],["to_s","URI::MailTo","Ruby/classes/URI/MailTo.html#method-i-to_s","()","<p>Constructs String from URI\n",null,0],["to_s","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-to_s","()","<p>Returns the name of the underlying method.\n\n<pre><code>&quot;cat&quot;.method(:count).inspect   #=&gt; &quot;#&lt;Method: String#count&gt;&quot;\n</code></pre>\n",null,0],["to_s","Vector","Ruby/classes/Vector.html#method-i-to_s","()","<p>Overrides Object#to_s\n",null,0],["to_s","WEBrick::Cookie","Ruby/classes/WEBrick/Cookie.html#method-i-to_s","()","<p>The cookie string suitable for use in an HTTP header\n",null,0],["to_s","WEBrick::HTTPUtils::FormData","Ruby/classes/WEBrick/HTTPUtils/FormData.html#method-i-to_s","()","<p>This FormData&#39;s body\n",null,0],["to_s","WEBrick::HTTPVersion","Ruby/classes/WEBrick/HTTPVersion.html#method-i-to_s","()","<p>The HTTP version as show in the HTTP request and response.  For example,\n“1.1”\n",null,0],["to_s","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-to_s","()","",null,0],["to_s","WIN32OLE_PARAM","Ruby/classes/WIN32OLE_PARAM.html#method-i-to_s","()","",null,0],["to_s","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-to_s","()","",null,0],["to_s","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-to_s","()","",null,0],["to_s","WIN32OLE_VARIABLE","Ruby/classes/WIN32OLE_VARIABLE.html#method-i-to_s","()","",null,0],["to_s","Win32::SSPI::SSPIResult","Ruby/classes/Win32/SSPI/SSPIResult.html#method-i-to_s","()","",null,0],["to_s","ActionDispatch::RemoteIp::GetIp","Rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-to_s","()","<p>Memoizes the value returned by #calculate_ip and returns it for\nActionDispatch::Request to use.\n",null,1],["to_s","ActionView::FileSystemResolver","Rails/classes/ActionView/FileSystemResolver.html#method-i-to_s","()","",null,1],["to_s","ActionView::Resolver::Path","Rails/classes/ActionView/Resolver/Path.html#method-i-to_s","()","",null,1],["to_s","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-i-to_s","","<p>Returns the class name.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">BlogPost</span>\n  <span class=\"ruby-identifier\">extend</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Naming</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-constant\">BlogPost</span>.<span class=\"ruby-identifier\">model_name</span>.<span class=\"ruby-identifier\">to_s</span> <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["to_s","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-to_s","()","",null,1],["to_s","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_s","(format = :default)","<p><code>:db</code> format outputs time in UTC; all others output time in\nlocal. Uses TimeWithZone&#39;s <code>strftime</code>, so …\n",null,1],["to_s","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-to_s","()","<p>Returns a textual representation of this time zone.\n",null,1],["to_s","Array","Rails/classes/Array.html#method-i-to_s","(format = :default)","",null,1],["to_s","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_s","(*args)","",null,1],["to_s","Date","Rails/classes/Date.html#method-i-to_s","(format = :default)","",null,1],["to_s","DateTime","Rails/classes/DateTime.html#method-i-to_s","(format = :default)","",null,1],["to_s","Mime::Type","Rails/classes/Mime/Type.html#method-i-to_s","()","",null,1],["to_s","Rails::Info","Rails/classes/Rails/Info.html#method-c-to_s","()","",null,1],["to_s","Range","Rails/classes/Range.html#method-i-to_s","(format = :default)","",null,1],["to_s","SourceAnnotationExtractor::Annotation","Rails/classes/SourceAnnotationExtractor/Annotation.html#method-i-to_s","(options={})","<p>Returns a representation of the annotation that looks like this:\n\n<pre>[126] [TODO] This algorithm is simple ...</pre>\n",null,1],["to_s","Time","Rails/classes/Time.html#method-i-to_s","(format = :default)","",null,1],["to_sentence","Array","Rails/classes/Array.html#method-i-to_sentence","(options = {})","<p>Converts the array to a comma-separated sentence where the last element is\njoined by the connector word. …\n",null,1],["to_session_value","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-to_session_value","()","",null,1],["to_set","Enumerable","Ruby/classes/Enumerable.html#method-i-to_set","(klass = Set, *args, &block)","<p>Makes a set from the enumerable object with given arguments. Needs to\n+require “set”+ to use …\n",null,0],["to_sockaddr","Addrinfo","Ruby/classes/Addrinfo.html#method-i-to_sockaddr","()","<p>returns the socket address as packed struct sockaddr string.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).to_sockaddr ...</code></pre>\n",null,0],["to_spec","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-to_spec","()","<p>DOC: this method needs either documented or :nodoc&#39;d\n",null,0],["to_specs","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-to_specs","()","<p>DOC: this method needs either documented or :nodoc&#39;d\n",null,0],["to_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-to_sql","(arel, binds = [])","<p>Converts an arel AST to SQL\n",null,1],["to_sql","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-to_sql","()","<p>Returns sql statement for the relation.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">where</span>(<span class=\"ruby-identifier\">name</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-string\">&#39;Oscar&#39;</span>).<span class=\"ruby-identifier\">to_sql</span>\n<span class=\"ruby-comment\"># =&gt; SELECT &quot;users&quot;.* FROM &quot;users&quot; ...</span>\n</pre>\n",null,1],["to_str","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-to_str","(p1 = v1)","<p>Returns the pointer contents as a string.  When called with no arguments,\nthis method will return the …\n",null,0],["to_str","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-to_str","(p1 = v1)","<p>Returns the pointer contents as a string.\n<p>When called with no arguments, this method will return the contents …\n",null,0],["to_str","String","Ruby/classes/String.html#method-i-to_str","()","<p>Returns the receiver.\n",null,0],["to_str","ActionView::Resolver::Path","Rails/classes/ActionView/Resolver/Path.html#method-i-to_str","()","",null,1],["to_str","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-i-to_str","","<p>Equivalent to <code>to_s</code>.\n",null,1],["to_str","Mime::Type","Rails/classes/Mime/Type.html#method-i-to_str","()","",null,1],["to_string","IPAddr","Ruby/classes/IPAddr.html#method-i-to_string","()","<p>Returns a string containing the IP address representation in canonical\nform.\n",null,0],["to_string","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-to_string","()","<p>Returns this attribute out as XML source, expanding the name\n\n<pre><code>a = Attribute.new( &quot;x&quot;, &quot;y&quot; )\na.to_string ...</code></pre>\n",null,0],["to_sym","String","Ruby/classes/String.html#method-i-to_sym","()","<p>Returns the <code>Symbol</code> corresponding to <em>str</em>, creating the\nsymbol if it did not previously exist. See <code>Symbol#id2name</code> …\n",null,0],["to_sym","Symbol","Ruby/classes/Symbol.html#method-i-to_sym","()","<p>In general, <code>to_sym</code> returns the <code>Symbol</code>\ncorresponding to an object. As <em>sym</em> is already a symbol,\n<code>self</code> is …\n",null,0],["to_sym","Mime::Type","Rails/classes/Mime/Type.html#method-i-to_sym","()","",null,1],["to_tag","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-to_tag","(key, value, options)","",null,1],["to_text","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-to_text","()","<p>Returns a textual representation of this SPKI, useful for debugging\npurposes.\n",null,0],["to_text","OpenSSL::PKey::DH","Ruby/classes/OpenSSL/PKey/DH.html#method-i-to_text","()","<p>Prints all parameters of key to buffer INSECURE: PRIVATE INFORMATIONS CAN\nLEAK OUT!!! Don&#39;t use :-)) …\n",null,0],["to_text","OpenSSL::PKey::DSA","Ruby/classes/OpenSSL/PKey/DSA.html#method-i-to_text","()","<p>Prints all parameters of key to buffer INSECURE: PRIVATE INFORMATIONS CAN\nLEAK OUT!!! Don&#39;t use :-)) …\n",null,0],["to_text","OpenSSL::PKey::EC","Ruby/classes/OpenSSL/PKey/EC.html#method-i-to_text","()","<p>See the OpenSSL documentation for EC_KEY_print()\n",null,0],["to_text","OpenSSL::PKey::EC::Group","Ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-to_text","()","<p>See the OpenSSL documentation for ECPKParameters_print()\n",null,0],["to_text","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_text","()","<p>THIS METHOD IS INSECURE, PRIVATE INFORMATION CAN LEAK OUT!!!\n<p>Dumps all parameters of a keypair to a String …\n",null,0],["to_text","OpenSSL::PKey::RSA","Ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_text","()","<p>THIS METHOD IS INSECURE, PRIVATE INFORMATION CAN LEAK OUT!!!\n<p>Dumps all parameters of a keypair to a String …\n",null,0],["to_text","OpenSSL::SSL::Session","Ruby/classes/OpenSSL/SSL/Session.html#method-i-to_text","()","<p>Shows everything in the Session object.\n",null,0],["to_text","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-to_text","()","",null,0],["to_text","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-to_text","()","",null,0],["to_text","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-to_text","()","",null,0],["to_time","Date","Ruby/classes/Date.html#method-i-to_time","()","<p>Returns a Time object which denotes self.\n",null,0],["to_time","DateTime","Ruby/classes/DateTime.html#method-i-to_time","()","<p>Returns a Time object which denotes self.\n",null,0],["to_time","Time","Ruby/classes/Time.html#method-i-to_time","()","<p>Returns a copy of self as local mode.\n",null,0],["to_time","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-to_time","()","<p>Return a Time object of the date/time which represents <code>self</code>.\nIf the <code>@year</code> is below 1970, this method …\n",null,0],["to_time","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_time","()","<p>Return an instance of Time in the system timezone.\n",null,1],["to_time","Date","Rails/classes/Date.html#method-i-to_time","(form = :local)","<p>Converts a Date instance to a Time, where the time is set to the beginning\nof the day. The timezone can …\n",null,1],["to_time","String","Rails/classes/String.html#method-i-to_time","(form = :local)","<p>Converts a string to a Time value. The <code>form</code> can be either :utc\nor :local (default :local).\n<p>The time is …\n",null,1],["to_time_in_current_zone","Date","Rails/classes/Date.html#method-i-to_time_in_current_zone","()","<p><strong>DEPRECATED</strong>: Use +Date#in_time_zone+ instead.\n<p>Converts Date to a TimeWithZone in the current zone if\n<code>Time.zone</code> …\n",null,1],["to_toc","RDoc::Markup::ToTableOfContents","Ruby/classes/RDoc/Markup/ToTableOfContents.html#method-c-to_toc","()","<p>Singleton for table-of-contents generation\n",null,0],["to_value","DL::CPtr","Ruby/classes/DL/CPtr.html#method-i-to_value","()","<p>Cast this CPtr to a ruby object.\n",null,0],["to_value","Fiddle::Pointer","Ruby/classes/Fiddle/Pointer.html#method-i-to_value","()","<p>Cast this pointer to a ruby object.\n",null,0],["to_write_io","ARGF","Ruby/classes/ARGF.html#method-i-to_write_io","()","<p>Returns IO instance tied to <em>ARGF</em> for writing if inplace mode is\nenabled.\n",null,0],["to_xml","RSS::RootElementMixin","Ruby/classes/RSS/RootElementMixin.html#method-i-to_xml","(type=nil, &block)","",null,0],["to_xml","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-to_xml","(options={})","<p>Returns an xml formatted representation of the Errors hash.\n\n<pre>person.errors.add(:name, &quot;can&#39;t be blank&quot;) ...</pre>\n",null,1],["to_xml","ActiveModel::Serializers::Xml","Rails/classes/ActiveModel/Serializers/Xml.html#method-i-to_xml","(options = {}, &block)","<p>Returns XML representing the model. Configuration can be passed through\n<code>options</code>.\n<p>Without any <code>options</code>, …\n",null,1],["to_xml","ActiveRecord::Serialization","Rails/classes/ActiveRecord/Serialization.html#method-i-to_xml","(options = {}, &block)","<p>Builds an XML document to represent the model. Some configuration is\navailable through <code>options</code>. However …\n",null,1],["to_xml","Array","Rails/classes/Array.html#method-i-to_xml","(options = {})","<p>Returns a string that represents the array in XML by invoking\n<code>to_xml</code> on each element. Active Record collections …\n",null,1],["to_xml","Hash","Rails/classes/Hash.html#method-i-to_xml","(options = {})","<p>Returns a string containing an XML representation of its receiver:\n\n<pre class=\"ruby\">{<span class=\"ruby-string\">&#39;foo&#39;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span>, <span class=\"ruby-string\">&#39;bar&#39;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>}.<span class=\"ruby-identifier\">to_xml</span>\n<span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["to_yaml","Object","Ruby/classes/Object.html#method-i-to_yaml","(options = {})","",null,0],["to_yaml","Psych::Nodes::Node","Ruby/classes/Psych/Nodes/Node.html#method-i-to_yaml","(io = nil, options = {})","",null,0],["to_yaml_properties","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-to_yaml_properties","()","",null,0],["to_yaml_properties","Gem::Requirement","Ruby/classes/Gem/Requirement.html#method-i-to_yaml_properties","()","",null,0],["to_yaml_properties","Gem::Version","Ruby/classes/Gem/Version.html#method-i-to_yaml_properties","()","",null,0],["to_yaml_type","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-to_yaml_type","()","",null,1],["today","Date","Ruby/classes/Date.html#method-c-today","(p1 = v1)","<p>Creates a date object denoting the present day.\n",null,0],["today","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-today","()","<p>Return the current date in this time zone.\n",null,1],["today?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-today-3F","()","<p>Returns true if the current object&#39;s time falls within the current day.\n",null,1],["today?","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-today-3F","()","<p>Returns true if the date/time is today.\n",null,1],["toeuc","Kconv","Ruby/classes/Kconv.html#method-c-toeuc","(str)","<p>Convert <code>str</code> to EUC-JP\n",null,0],["toeuc","String","Ruby/classes/String.html#method-i-toeuc","()","<p>Convert <code>self</code> to EUC-JP\n",null,0],["toggle","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-toggle","(attribute)","<p>Assigns to <code>attribute</code> the boolean opposite of\n<code>attribute?</code>. So if the predicate returns <code>true</code> the\nattribute …\n",null,1],["toggle!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-toggle-21","(attribute)","<p>Wrapper around <code>toggle</code> that saves the record. This method\ndiffers from its non-bang version in that it …\n",null,1],["tojis","Kconv","Ruby/classes/Kconv.html#method-c-tojis","(str)","<p>Convert <code>str</code> to ISO-2022-JP\n",null,0],["tojis","String","Ruby/classes/String.html#method-i-tojis","()","<p>Convert <code>self</code> to ISO-2022-JP\n",null,0],["token","Win32::SSPI::SecurityBuffer","Ruby/classes/Win32/SSPI/SecurityBuffer.html#method-i-token","()","",null,0],["token_and_options","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-token_and_options","(request)","<p>Parses the token and options out of the token authorization header. If the\nheader looks like this:\n\n<pre>Authorization: ...</pre>\n",null,1],["token_listener","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-token_listener","(obj)","<p>Has <code>obj</code> listen to tokens\n",null,0],["token_params_from","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-token_params_from","(auth)","",null,1],["token_pos","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-token_pos","(byte_offset)","<p>Calculates the column (by character) and line of the current token from\n<code>scanner</code> based on <code>byte_offset</code> …\n",null,0],["token_stream","RDoc::TokenStream","Ruby/classes/RDoc/TokenStream.html#method-i-token_stream","()","<p>Current token stream\n",null,0],["token_to_str","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-token_to_str","(t)","<p>Convert internal ID of token symbol to the string.\n",null,0],["tokenize","Psych::ScalarScanner","Ruby/classes/Psych/ScalarScanner.html#method-i-tokenize","(string)","<p>Tokenize <code>string</code> returning the ruby object\n",null,0],["tokenize","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-c-tokenize","(str)","<p>Returns a token stream for <code>str</code>, for testing\n",null,0],["tokenize","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-tokenize","(input)","<p>Turns text <code>input</code> into a stream of tokens\n",null,0],["tokenize","RDoc::RubyLex","Ruby/classes/RDoc/RubyLex.html#method-c-tokenize","(ruby, options)","<p>Returns an Array of <code>ruby</code> tokens.  See ::new for a description\nof <code>options</code>.\n",null,0],["tokenize","RDoc::TomDoc","Ruby/classes/RDoc/TomDoc.html#method-i-tokenize","(text)","<p>Turns text into an Array of tokens\n<p>text &mdash; A String containing TomDoc-format text.\n\n<p>Returns\n",null,0],["tokenize","Ripper","Ruby/classes/Ripper.html#method-c-tokenize","(src, filename = '-', lineno = 1)","<p>Tokenizes the Ruby program and returns an array of strings.\n\n<pre><code>p Ripper.tokenize(&quot;def m(a) nil end&quot;)\n   # ...\n</code></pre>\n",null,0],["tokenize","HTML::Sanitizer","Rails/classes/HTML/Sanitizer.html#method-i-tokenize","(text, options)","",null,1],["tokenize","HTML::WhiteListSanitizer","Rails/classes/HTML/WhiteListSanitizer.html#method-i-tokenize","(text, options)","",null,1],["tokens_to_s","RDoc::TokenStream","Ruby/classes/RDoc/TokenStream.html#method-i-tokens_to_s","()","<p>Returns a string representation of the token stream\n",null,0],["tolocale","Kconv","Ruby/classes/Kconv.html#method-c-tolocale","(str)","<p>Convert <code>self</code> to locale encoding\n",null,0],["tolocale","String","Ruby/classes/String.html#method-i-tolocale","()","<p>Convert <code>self</code> to locale encoding\n",null,0],["tomdoc?","RDoc::Comment","Ruby/classes/RDoc/Comment.html#method-i-tomdoc-3F","()","<p>Returns true if this comment is in TomDoc format.\n",null,0],["tomorrow","Date","Rails/classes/Date.html#method-c-tomorrow","()","<p>Returns a new Date representing the date 1 day after today (i.e.\ntomorrow&#39;s date).\n",null,1],["tomorrow","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-tomorrow","()","<p>Returns a new date/time representing tomorrow.\n",null,1],["top","IRB::Frame","Ruby/classes/IRB/Frame.html#method-c-top","(n = 0)","<p>Convenience method for Frame#top\n",null,0],["top","IRB::Frame","Ruby/classes/IRB/Frame.html#method-i-top","(n = 0)","<p>Returns the <code>n</code> number of frames on the call stack from the last\nframe initialized.\n<p>Raises FrameUnderflow …\n",null,0],["top","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-top","(lines, dest = '')","<p>Fetches the message header and <code>lines</code> lines of body.\n<p>The optional <code>dest</code> argument is obsolete.\n<p>This method …\n",null,0],["top","OptionParser","Ruby/classes/OptionParser.html#method-c-top","()","",null,0],["top","OptionParser","Ruby/classes/OptionParser.html#method-i-top","()","<p>Subject of #on / #on_head, #accept / #reject\n",null,0],["top_level","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-top_level","()","<p>Return the TopLevel that owns us\n",null,0],["top_level","RDoc::Require","Ruby/classes/RDoc/Require.html#method-i-top_level","()","<p>The RDoc::TopLevel corresponding to this require, or <code>nil</code> if\nnot found.\n",null,0],["top_level","Rake::Application","Ruby/classes/Rake/Application.html#method-i-top_level","()","<p>Run the top level tasks of a Rake application.\n",null,0],["top_level","Rake::Application","Ruby/classes/Rake/Application.html#method-i-top_level","()","<p>Run the top level tasks of a Rake application.\n",null,0],["top_level_test","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-top_level_test","(command, file1, file2=nil)","<p>See Shell::CommandProcessor#test\n",null,0],["toplevel_load","IRB::Locale","Ruby/classes/IRB/Locale.html#method-i-toplevel_load","(file, priv=nil)","",null,0],["tosjis","Kconv","Ruby/classes/Kconv.html#method-c-tosjis","(str)","<p>Convert <code>str</code> to Shift_JIS\n",null,0],["tosjis","String","Ruby/classes/String.html#method-i-tosjis","()","<p>Convert <code>self</code> to Shift_JIS\n",null,0],["total_in","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-total_in","()","<p>Returns the total bytes of the input data to the stream.  FIXME\n",null,0],["total_out","Zlib::ZStream","Ruby/classes/Zlib/ZStream.html#method-i-total_out","()","<p>Returns the total bytes of the output data from the stream.  FIXME\n",null,0],["total_time","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-total_time","()","<p>The total time used for garbage collection in seconds\n",null,0],["touch","FileUtils","Ruby/classes/FileUtils.html#method-c-touch","(list, options = {})","<p>Options: noop verbose\n<p>Updates modification time (mtime) and access time (atime) of file(s) in\n<code>list</code>.   …\n",null,0],["touch","Object","Ruby/classes/Object.html#method-i-touch","()","<p>Update the access and modification times of each FILE to the current time.\n\n<pre><code>ruby -run -e touch -- [OPTION] ...</code></pre>\n",null,0],["touch","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-touch","(name = nil)","<p>Saves the record with the updated_at/on attributes set to the current time.\nPlease note that no validation …\n",null,1],["toutf16","Kconv","Ruby/classes/Kconv.html#method-c-toutf16","(str)","<p>Convert <code>str</code> to UTF-16\n",null,0],["toutf16","String","Ruby/classes/String.html#method-i-toutf16","()","<p>Convert <code>self</code> to UTF-16\n",null,0],["toutf32","Kconv","Ruby/classes/Kconv.html#method-c-toutf32","(str)","<p>Convert <code>str</code> to UTF-32\n",null,0],["toutf32","String","Ruby/classes/String.html#method-i-toutf32","()","<p>Convert <code>self</code> to UTF-32\n",null,0],["toutf8","Kconv","Ruby/classes/Kconv.html#method-c-toutf8","(str)","<p>Convert <code>str</code> to UTF-8\n",null,0],["toutf8","String","Ruby/classes/String.html#method-i-toutf8","()","<p>Convert <code>self</code> to UTF-8\n",null,0],["tr","Matrix","Ruby/classes/Matrix.html#method-i-tr","()","",null,0],["tr","String","Ruby/classes/String.html#method-i-tr","(p1, p2)","<p>Returns a copy of <code>str</code> with the characters in\n<code>from_str</code> replaced by the corresponding characters in\n<code>to_str</code> …\n",null,0],["tr!","String","Ruby/classes/String.html#method-i-tr-21","(p1, p2)","<p>Translates <em>str</em> in place, using the same rules as\n<code>String#tr</code>. Returns <em>str</em>, or <code>nil</code> if no\nchanges were made. …\n",null,0],["tr_s","String","Ruby/classes/String.html#method-i-tr_s","(p1, p2)","<p>Processes a copy of <em>str</em> as described under <code>String#tr</code>,\nthen removes duplicate characters in regions that …\n",null,0],["tr_s!","String","Ruby/classes/String.html#method-i-tr_s-21","(p1, p2)","<p>Performs <code>String#tr_s</code> processing on <em>str</em> in place,\nreturning <em>str</em>, or <code>nil</code> if no changes were made.\n",null,0],["trace","Matrix","Ruby/classes/Matrix.html#method-i-trace","()","<p>Returns the trace (sum of diagonal elements) of the matrix.\n\n<pre><code>Matrix[[7,6], [3,9]].trace\n  =&gt; 16\n</code></pre>\n",null,0],["trace","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-trace","(path, initheader = nil)","<p>Sends a TRACE request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,0],["trace","Rake::Application","Ruby/classes/Rake/Application.html#method-i-trace","(*strings)","",null,0],["trace","Rake::Application","Ruby/classes/Rake/Application.html#method-i-trace","(*strings)","",null,0],["trace","TracePoint","Ruby/classes/TracePoint.html#method-c-trace","(*args)","<p>A convenience method for TracePoint.new, that activates the trace\nautomatically.\n\n<pre><code>trace = TracePoint.trace(:call) ...</code></pre>\n",null,0],["trace_func","IRB::Frame","Ruby/classes/IRB/Frame.html#method-i-trace_func","(event, file, line, id, binding)","<p>Used by Kernel#set_trace_func to register each event in the call stack\n",null,0],["trace_on","Rake::TraceOutput","Ruby/classes/Rake/TraceOutput.html#method-i-trace_on","(out, *strings)","<p>Write trace output to output stream <code>out</code>.\n<p>The write is done as a single IO call (to print) to lessen the …\n",null,0],["trace_var","Kernel","Ruby/classes/Kernel.html#method-i-trace_var","(p1, p2 = v2)","<p>Controls tracing of assignments to global variables. The parameter +symbol_\nidentifies the variable (as …\n",null,0],["transact","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-transact","(&block)","<p>Executes a block as self\n<p>Example:\n\n<pre><code>sh.transact { system(&quot;ls&quot;, &quot;-l&quot;) | head &gt; STDOUT }</code></pre>\n",null,0],["transaction","PStore","Ruby/classes/PStore.html#method-i-transaction","(read_only = false)","<p>Opens a new transaction for the data store.  Code executed inside a block\npassed to this method may read …\n",null,0],["transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-transaction","(options = {})","<p>Runs the given block in a database transaction, and returns the result of\nthe block.\n<p>Nested transactions …\n",null,1],["transaction","ActiveRecord::Transactions","Rails/classes/ActiveRecord/Transactions.html#method-i-transaction","(options = {}, &block)","<p>See ActiveRecord::Transactions::ClassMethods for detailed documentation.\n",null,1],["transaction","ActiveRecord::Transactions::ClassMethods","Rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-transaction","(options = {}, &block)","<p>See ActiveRecord::Transactions::ClassMethods for detailed documentation.\n",null,1],["transaction_isolation_levels","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-transaction_isolation_levels","()","",null,1],["transaction_joinable=","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-transaction_joinable-3D","(joinable)","",null,1],["transaction_open?","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-transaction_open-3F","()","",null,1],["transfer","Fiber","Ruby/classes/Fiber.html#method-i-transfer","(*args)","<p>Transfer control to another fiber, resuming it from where it last stopped\nor starting it if it was not …\n",null,0],["transform","Psych::Nodes::Node","Ruby/classes/Psych/Nodes/Node.html#method-i-transform","()","",null,0],["transform_keys","Hash","Rails/classes/Hash.html#method-i-transform_keys","()","<p>Return a new hash with all keys converted using the block operation.\n\n<pre>hash = { name: &#39;Rob&#39;, age: &#39;28&#39; } ...</pre>\n",null,1],["transform_keys!","Hash","Rails/classes/Hash.html#method-i-transform_keys-21","()","<p>Destructively convert all keys using the block operations. Same as\ntransform_keys but modifies <code>self</code>. …\n",null,1],["translate","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-translate","( string, tr1, tr2 )","<p>This is entirely Mike Stok&#39;s beast\n",null,0],["translate","AbstractController::Translation","Rails/classes/AbstractController/Translation.html#method-i-translate","(*args)","<p>Delegates to <code>I18n.translate</code>. Also aliased as <code>t</code>.\n<p>When the given key starts with a period, it will be scoped …\n",null,1],["translate","ActionView::Helpers::TranslationHelper","Rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-translate","(key, options = {})","<p>Delegates to <code>I18n#translate</code> but also performs three additional\nfunctions.\n<p>First, it will ensure that any …\n",null,1],["translate_exception","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-translate_exception","(exception, message)","",null,1],["translate_exception","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-translate_exception","(exception, message)","",null,1],["translate_exception","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-translate_exception","(exception, message)","",null,1],["translate_exception","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-translate_exception","(exception, message)","",null,1],["transliterate","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-transliterate","(string, replacement = \"?\")","<p>Replaces non-ASCII characters with an ASCII approximation, or if none\nexists, a replacement character …\n",null,1],["transpose","Array","Ruby/classes/Array.html#method-i-transpose","()","<p>Assumes that <code>self</code> is an array of arrays and transposes the\nrows and columns.\n\n<pre><code>a = [[1,2], [3,4], [5,6]] ...</code></pre>\n",null,0],["transpose","Matrix","Ruby/classes/Matrix.html#method-i-transpose","()","<p>Returns the transpose of the matrix.\n\n<pre><code>Matrix[[1,2], [3,4], [5,6]]\n  =&gt; 1 2\n     3 4\n     5 6\nMatrix[[1,2], ...\n</code></pre>\n",null,0],["trap","Kernel","Ruby/classes/Kernel.html#method-i-trap","(*args)","<p>Specifies the handling of signals. The first parameter is a signal name (a\nstring such as “SIGALRM&#39;&#39;, …\n",null,0],["trap","Signal","Ruby/classes/Signal.html#method-c-trap","(*args)","<p>Specifies the handling of signals. The first parameter is a signal name (a\nstring such as “SIGALRM&#39;&#39;, …\n",null,0],["traverse","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-traverse","(trail = [], &block)","<p>Recursively walk dependencies of this spec, executing the\n<code>block</code> for each hop.\n",null,0],["traverse","OpenSSL::ASN1","Ruby/classes/OpenSSL/ASN1.html#method-c-traverse","(p1)","<p>If a block is given, it prints out each of the elements encountered. Block\nparameters are (in that order): …\n",null,0],["tree","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-tree","()","",null,0],["trigger","ActiveSupport::FileWatcher","Rails/classes/ActiveSupport/FileWatcher.html#method-i-trigger","(files)","",null,1],["trigger","ActiveSupport::FileWatcher::Backend","Rails/classes/ActiveSupport/FileWatcher/Backend.html#method-i-trigger","(files)","",null,1],["true","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-true","( )","<p>UNTESTED\n",null,0],["truncate","BigDecimal","Ruby/classes/BigDecimal.html#method-i-truncate","(p1 = v1)","<p>Truncate to the nearest 1, returning the result as a BigDecimal.\n\n<pre><code>BigDecimal(&#39;3.14159&#39;).truncate #=&gt; 3 ...\n</code></pre>\n",null,0],["truncate","File","Ruby/classes/File.html#method-c-truncate","(p1, p2)","<p>Truncates the file <em>file_name</em> to be at most <em>integer</em> bytes\nlong. Not available on all platforms.\n\n<pre><code>f = File.new(&quot;out&quot;, ...</code></pre>\n",null,0],["truncate","File","Ruby/classes/File.html#method-i-truncate","(p1)","<p>Truncates <em>file</em> to at most <em>integer</em> bytes. The file must be\nopened for writing. Not available on all platforms. …\n",null,0],["truncate","Float","Ruby/classes/Float.html#method-i-truncate","()","<p>Returns <em>flt</em> truncated to an <code>Integer</code>.\n",null,0],["truncate","Integer","Ruby/classes/Integer.html#method-i-truncate","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["truncate","Integer","Ruby/classes/Integer.html#method-i-truncate","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["truncate","Numeric","Ruby/classes/Numeric.html#method-i-truncate","()","<p>Returns <em>num</em> truncated to an integer. <code>Numeric</code>\nimplements this by converting its value to a float and invoking …\n",null,0],["truncate","Pathname","Ruby/classes/Pathname.html#method-i-truncate","(p1)","<p>Truncates the file to <code>length</code> bytes.\n<p>See File.truncate.\n",null,0],["truncate","RDoc::Markup::ToHtmlSnippet","Ruby/classes/RDoc/Markup/ToHtmlSnippet.html#method-i-truncate","(text)","<p>Truncates <code>text</code> at the end of the first word after the\ncharacter_limit.\n",null,0],["truncate","Rake::Application","Ruby/classes/Rake/Application.html#method-i-truncate","(string, width)","",null,0],["truncate","Rake::Application","Ruby/classes/Rake/Application.html#method-i-truncate","(string, width)","",null,0],["truncate","Rational","Ruby/classes/Rational.html#method-i-truncate","(*args)","<p>Returns the truncated value (toward zero).\n\n<pre><code>Rational(3).truncate      #=&gt; 3\nRational(2, 3).truncate   #=&gt; ...\n</code></pre>\n",null,0],["truncate","StringIO","Ruby/classes/StringIO.html#method-i-truncate","(p1)","<p>Truncates the buffer string to at most <em>integer</em> bytes. The\n<strong>strio</strong> must be opened for writing.\n",null,0],["truncate","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-truncate","(text, options = {}, &block)","<p>Truncates a given <code>text</code> after a given <code>:length</code> if\n<code>text</code> is longer than <code>:length</code> (defaults to 30). The\nlast …\n",null,1],["truncate","String","Rails/classes/String.html#method-i-truncate","(truncate_at, options = {})","<p>Truncates a given <code>text</code> after a given <code>length</code> if\n<code>text</code> is longer than <code>length</code>:\n\n<pre>&#39;Once upon a time in a world ...</pre>\n",null,1],["truncate_output?","Rake::Application","Ruby/classes/Rake/Application.html#method-i-truncate_output-3F","()","<p>We will truncate output if we are outputting to a TTY or if we&#39;ve been\ngiven an explicit column width …\n",null,0],["truncate_output?","Rake::Application","Ruby/classes/Rake/Application.html#method-i-truncate_output-3F","()","<p>We will truncate output if we are outputting to a TTY or if we&#39;ve been\ngiven an explicit column width …\n",null,0],["trust","Delegator","Ruby/classes/Delegator.html#method-i-trust","","<p>Trust both the object returned by _<em>getobj</em>_ and self.\n",null,0],["trust","Object","Ruby/classes/Object.html#method-i-trust","()","<p>Removes the untrusted mark from <em>obj</em>.\n",null,0],["trust=","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-trust-3D","(p1)","",null,0],["trust_cert","Gem::Security::TrustDir","Ruby/classes/Gem/Security/TrustDir.html#method-i-trust_cert","(certificate)","<p>Add a certificate to trusted certificate list.\n",null,0],["trust_dir","Gem::Security","Ruby/classes/Gem/Security.html#method-c-trust_dir","()","<p>Returns a Gem::Security::TrustDir which wraps the directory where trusted\ncertificates live.\n",null,0],["trusted_certificates","Gem::Security","Ruby/classes/Gem/Security.html#method-c-trusted_certificates","(&block)","<p>Enumerates the trusted certificates via Gem::Security::TrustDir.\n",null,0],["try","NilClass","Rails/classes/NilClass.html#method-i-try","(*args)","<p>Calling <code>try</code> on <code>nil</code> always returns\n<code>nil</code>. It becomes specially helpful when navigating through\nassociations …\n",null,1],["try","Object","Rails/classes/Object.html#method-i-try","(*a, &b)","<p>Invokes the public method whose name goes as first argument just like\n<code>public_send</code> does, except that if …\n",null,1],["try!","NilClass","Rails/classes/NilClass.html#method-i-try-21","(*args)","",null,1],["try!","Object","Rails/classes/Object.html#method-i-try-21","(*a, &b)","<p>Same as #try, but will raise a NoMethodError exception if the receiving is\nnot nil and does not implemented …\n",null,1],["try_activate","Gem","Ruby/classes/Gem.html#method-c-try_activate","(path)","<p>Try to activate a gem containing <code>path</code>. Returns true if\nactivation succeeded or wasn&#39;t needed because …\n",null,0],["try_const","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-try_const","(const, headers = nil, opt = \"\", &b)","<p>Returns whether or not the constant <code>const</code> is defined.\n<p>See also <code>have_const</code>\n",null,0],["try_convert","Array","Ruby/classes/Array.html#method-c-try_convert","(p1)","<p>Tries to convert <code>obj</code> into an array, using <code>to_ary</code>\nmethod.  Returns the converted array or <code>nil</code> if\n<code>obj</code> cannot …\n",null,0],["try_convert","Hash","Ruby/classes/Hash.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into a hash, using to_hash method. Returns\nconverted hash or nil if <em>obj</em> cannot be …\n",null,0],["try_convert","IO","Ruby/classes/IO.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into an IO, using to_io method. Returns\nconverted IO or nil if <em>obj</em> cannot be converted …\n",null,0],["try_convert","Regexp","Ruby/classes/Regexp.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into a Regexp, using to_regexp method. Returns\nconverted regexp or nil if <em>obj</em> cannot …\n",null,0],["try_convert","String","Ruby/classes/String.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into a String, using to_str method. Returns\nconverted string or nil if <em>obj</em> cannot …\n",null,0],["try_lock","Mutex","Ruby/classes/Mutex.html#method-i-try_lock","()","<p>Attempts to obtain the lock and returns immediately. Returns\n<code>true</code> if the lock was granted.\n",null,0],["try_mon_enter","MonitorMixin","Ruby/classes/MonitorMixin.html#method-i-try_mon_enter","()","<p>For backward compatibility\n",null,0],["try_to_load_dependency","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-try_to_load_dependency","(file_name)","",null,1],["try_type","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-try_type","(type, headers = nil, opt = \"\", &b)","<p>Returns whether or not the static type <code>type</code> is defined.\n<p>See also <code>have_type</code>\n",null,0],["tsort","TSort","Ruby/classes/TSort.html#method-i-tsort","()","<p>Returns a topologically sorted array of nodes. The array is sorted from\nchildren to parents, i.e. the …\n",null,0],["tsort_each","TSort","Ruby/classes/TSort.html#method-i-tsort_each","()","<p>The iterator version of the #tsort method.\n<code><em>obj</em>.tsort_each</code> is similar to\n<code><em>obj</em>.tsort.each</code>, but modification …\n",null,0],["tsort_each_child","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-tsort_each_child","(node)","",null,0],["tsort_each_child","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-tsort_each_child","(node)","",null,0],["tsort_each_child","TSort","Ruby/classes/TSort.html#method-i-tsort_each_child","(node)","<p>Should be implemented by a extended class.\n<p>#tsort_each_child is used to iterate for child nodes of <em>node</em> …\n",null,0],["tsort_each_child","Rails::Initializable::Collection","Rails/classes/Rails/Initializable/Collection.html#method-i-tsort_each_child","(initializer, &block)","",null,1],["tsort_each_node","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-tsort_each_node","(&block)","",null,0],["tsort_each_node","Gem::RequestSet","Ruby/classes/Gem/RequestSet.html#method-i-tsort_each_node","(&block)","",null,0],["tsort_each_node","TSort","Ruby/classes/TSort.html#method-i-tsort_each_node","()","<p>Should be implemented by a extended class.\n<p>#tsort_each_node is used to iterate for all nodes over a graph. …\n",null,0],["tsrange","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-tsrange","(name, options = {})","",null,1],["tstzrange","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-tstzrange","(name, options = {})","",null,1],["tsvector","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-tsvector","(*args)","",null,1],["tt?","RDoc::Markup::Formatter","Ruby/classes/RDoc/Markup/Formatter.html#method-i-tt-3F","(tag)","<p>Is <code>tag</code> a tt tag?\n",null,0],["tt_sections","RDoc::Markup::ToTtOnly","Ruby/classes/RDoc/Markup/ToTtOnly.html#method-i-tt_sections","(text)","<p>Extracts tt sections from <code>text</code>\n",null,0],["tty?","Gem::MockGemUi::TTY","Ruby/classes/Gem/MockGemUi/TTY.html#method-i-tty-3F","()","",null,0],["tty?","Gem::StreamUI","Ruby/classes/Gem/StreamUI.html#method-i-tty-3F","()","",null,0],["tty?","IO","Ruby/classes/IO.html#method-i-tty-3F","()","<p>Returns <code>true</code> if <em>ios</em> is associated with a terminal\ndevice (tty), <code>false</code> otherwise.\n\n<pre><code>File.new(&quot;testfile&quot;).isatty ...</code></pre>\n",null,0],["tty?","StringIO","Ruby/classes/StringIO.html#method-i-tty-3F","()","",null,0],["tty_output=","Rake::Application","Ruby/classes/Rake/Application.html#method-i-tty_output-3D","( tty_output_state )","<p>Override the detected TTY output state (mostly for testing)\n",null,0],["tty_output=","Rake::Application","Ruby/classes/Rake/Application.html#method-i-tty_output-3D","( tty_output_state )","<p>Override the detected TTY output state (mostly for testing)\n",null,0],["tty_output?","Rake::Application","Ruby/classes/Rake/Application.html#method-i-tty_output-3F","()","<p>True if we are outputting to TTY, false otherwise\n",null,0],["tty_output?","Rake::Application","Ruby/classes/Rake/Application.html#method-i-tty_output-3F","()","<p>True if we are outputting to TTY, false otherwise\n",null,0],["tuesday?","Date","Ruby/classes/Date.html#method-i-tuesday-3F","()","<p>Returns true if the date is Tuesday.\n",null,0],["tuesday?","Time","Ruby/classes/Time.html#method-i-tuesday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Tuesday.\n\n<pre><code>t = Time.local(1991, 2, 19)      #=&gt; 1991-02-19 00:00:00 -0600 ...\n</code></pre>\n",null,0],["tuples_for","Gem::SpecFetcher","Ruby/classes/Gem/SpecFetcher.html#method-i-tuples_for","(source, type, gracefully_ignore=false)","",null,0],["tv_nsec","Time","Ruby/classes/Time.html#method-i-tv_nsec","()","<p>Returns the number of nanoseconds for <em>time</em>.\n\n<pre><code>t = Time.now        #=&gt; 2007-11-17 15:18:03 +0900\n&quot;%10.9f&quot; ...\n</code></pre>\n",null,0],["tv_sec","Time","Ruby/classes/Time.html#method-i-tv_sec","()","<p>Returns the value of <em>time</em> as an integer number of seconds since\nthe Epoch.\n\n<pre><code>t = Time.now\n&quot;%10.5f&quot; % t.to_f ...</code></pre>\n",null,0],["tv_sec","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-tv_sec","()","",null,1],["tv_usec","Time","Ruby/classes/Time.html#method-i-tv_usec","()","<p>Returns the number of microseconds for <em>time</em>.\n\n<pre><code>t = Time.now        #=&gt; 2007-11-19 08:03:26 -0600\n&quot;%10.6f&quot; ...\n</code></pre>\n",null,0],["type","Gem::Dependency","Ruby/classes/Gem/Dependency.html#method-i-type","()","<p>Dependency type.\n",null,0],["type","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-type","()","",null,0],["type","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-type","()","<p>&#39;module&#39; or &#39;class&#39;\n",null,0],["type","RDoc::MethodAttr","Ruby/classes/RDoc/MethodAttr.html#method-i-type","()","<p>Type of method/attribute (class or instance)\n",null,0],["type","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-type","()","<p>returns the cmsg type as an integer.\n\n<pre><code>p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, &quot;&quot;).type\n#=&gt; ...\n</code></pre>\n",null,0],["type","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-type","()","",null,1],["type","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Date","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Date.html#method-i-type","()","",null,1],["type","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::DateTime","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/DateTime.html#method-i-type","()","",null,1],["type","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Float","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Float.html#method-i-type","()","",null,1],["type","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Time","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Time.html#method-i-type","()","",null,1],["type","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Type","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Type.html#method-i-type","()","",null,1],["type","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Date","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Date.html#method-i-type","()","",null,1],["type","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Timestamp","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Timestamp.html#method-i-type","()","",null,1],["type","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Type","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Type.html#method-i-type","()","",null,1],["type2name","Win32::Registry","Ruby/classes/Win32/Registry.html#method-c-type2name","(type)","<p>Convert registry type value to readable string.\n",null,0],["type=","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-type-3D","(p1)","",null,0],["type_cast","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-type_cast","(v)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-type_cast","(value, column)","<p>QUOTING ==================================================\n",null,1],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Boolean","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Boolean.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Date","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Date.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::DateTime","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/DateTime.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Decimal","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Decimal.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Float","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Float.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Identity","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Identity.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Integer","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Integer.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Time","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Time.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Array","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Array.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Bit","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Bit.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Boolean","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Boolean.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Bytea","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Bytea.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Cidr","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Cidr.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Date","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Date.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Decimal","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Decimal.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Float","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Float.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Hstore","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Hstore.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Identity","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Identity.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Integer","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Integer.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Json","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Json.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Money","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Money.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Point","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Point.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Range","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Range.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Time","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Time.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Timestamp","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Timestamp.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Vector","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Vector.html#method-i-type_cast","(value)","<p>FIXME: this should probably split on <code>delim</code> and use\n<code>subtype</code> to cast the values.  Unfortunately, the current …\n",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Quoting.html#method-i-type_cast","(value, column, array_member = false)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLColumn","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html#method-i-type_cast","(value)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-type_cast","(value, column)","<p>Cast a <code>value</code> to a type that the database understands. For\nexample, SQLite does not understand dates, …\n",null,1],["type_cast_config_to_boolean","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-c-type_cast_config_to_boolean","(config)","",null,1],["type_cast_config_to_integer","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-c-type_cast_config_to_integer","(config)","",null,1],["type_cast_for_write","ActiveRecord::ConnectionAdapters::MysqlAdapter::Fields::Type","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/Fields/Type.html#method-i-type_cast_for_write","(value)","",null,1],["type_cast_for_write","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::OID::Type","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/OID/Type.html#method-i-type_cast_for_write","(value)","",null,1],["type_params","Net::HTTPHeader","Ruby/classes/Net/HTTPHeader.html#method-i-type_params","()","<p>Any parameters specified for the content type, returned as a Hash. For\nexample, a header of Content-Type: …\n",null,0],["type_to_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-type_to_sql","(type, limit = nil, precision = nil, scale = nil)","<p>Maps logical Rails types to MySQL-specific data types.\n",null,1],["type_to_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/SchemaStatements.html#method-i-type_to_sql","(type, limit = nil, precision = nil, scale = nil)","<p>Maps logical Rails types to PostgreSQL-specific data types.\n",null,1],["typealias","DL::Importer","Ruby/classes/DL/Importer.html#method-i-typealias","(alias_type, orig_type)","",null,0],["typealias","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-typealias","(alias_type, orig_type)","<p>Sets the type alias for <code>alias_type</code> as <code>orig_type</code>\n",null,0],["typecode=","URI::FTP","Ruby/classes/URI/FTP.html#method-i-typecode-3D","(typecode)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["typekind","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-typekind","()","<p>Returns number which represents type.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Word 10.0 Object Library&#39;, &#39;Documents&#39;) ...</code></pre>\n",null,0],["typelibs","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-c-typelibs","()","<p>Returns array of type libraries. This method will be OBSOLETE. Use\nWIN32OLE_TYPELIB.typelibs.collect{|t| …\n",null,0],["typelibs","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-c-typelibs","()","<p>Returns the array of WIN32OLE_TYPELIB object.\n\n<pre><code>tlibs = WIN32OLE_TYPELIB.typelibs</code></pre>\n",null,0],["types","DL::Stack","Ruby/classes/DL/Stack.html#method-i-types","()","",null,0],["u","ERB::Util","Ruby/classes/ERB/Util.html#method-c-u","(s)","",null,0],["u","Matrix::LUPDecomposition","Ruby/classes/Matrix/LUPDecomposition.html#method-i-u","()","<p>Returns the upper triangular factor <code>U</code>\n",null,0],["udp","Addrinfo","Ruby/classes/Addrinfo.html#method-c-udp","(p1, p2)","<p>returns an addrinfo object for UDP address.\n\n<pre><code>Addrinfo.udp(&quot;localhost&quot;, &quot;daytime&quot;) #=&gt; #&lt;Addrinfo: 127.0.0.1:13 ...\n</code></pre>\n",null,0],["udp_server_loop","Socket","Ruby/classes/Socket.html#method-c-udp_server_loop","(host=nil, port)","<p>creates a UDP/IP server on <em>port</em> and calls the block for each\nmessage arrived. The block is called with …\n",null,0],["udp_server_loop_on","Socket","Ruby/classes/Socket.html#method-c-udp_server_loop_on","(sockets)","<p>Run UDP/IP server loop on the given sockets.\n<p>The return value of Socket.udp_server_sockets is appropriate …\n",null,0],["udp_server_recv","Socket","Ruby/classes/Socket.html#method-c-udp_server_recv","(sockets)","<p>Receive UDP/IP packets from the given <em>sockets</em>. For each packet\nreceived, the block is called.\n<p>The block …\n",null,0],["udp_server_sockets","Socket","Ruby/classes/Socket.html#method-c-udp_server_sockets","(host=nil, port)","<p>Creates UDP/IP sockets for a UDP server.\n<p>If no block given, it returns an array of sockets.\n<p>If a block …\n",null,0],["ui","Gem","Ruby/classes/Gem.html#method-c-ui","()","<p>Lazily loads DefaultUserInteraction and returns the default UI.\n",null,0],["ui","Gem::DefaultUserInteraction","Ruby/classes/Gem/DefaultUserInteraction.html#method-i-ui","()","<p>See DefaultUserInteraction::ui\n",null,0],["ui","Gem::DefaultUserInteraction","Ruby/classes/Gem/DefaultUserInteraction.html#method-c-ui","()","<p>Return the default UI.\n",null,0],["ui=","Gem::DefaultUserInteraction","Ruby/classes/Gem/DefaultUserInteraction.html#method-c-ui-3D","(new_ui)","<p>Set the default UI.  If the default UI is never explicitly set, a simple\nconsole based UserInteraction …\n",null,0],["ui=","Gem::DefaultUserInteraction","Ruby/classes/Gem/DefaultUserInteraction.html#method-i-ui-3D","(new_ui)","<p>See DefaultUserInteraction::ui=\n",null,0],["uid","File::Stat","Ruby/classes/File/Stat.html#method-i-uid","()","<p>Returns the numeric user id of the owner of <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).uid   #=&gt; 501\n</code></pre>\n",null,0],["uid","Process","Ruby/classes/Process.html#method-c-uid","()","<p>Returns the (real) user ID of this process.\n\n<pre><code>Process.uid   #=&gt; 501\n</code></pre>\n",null,0],["uid=","Process","Ruby/classes/Process.html#method-c-uid-3D","(p1)","<p>Sets the (user) user ID for this process. Not available on all platforms.\n",null,0],["uid_copy","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-uid_copy","(set, mailbox)","<p>As for #copy(), but <code>set</code> contains unique identifiers.\n",null,0],["uid_fetch","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-uid_fetch","(set, attr)","<p>As for #fetch(), but <code>set</code> contains unique identifiers.\n",null,0],["uid_search","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-uid_search","(keys, charset = nil)","<p>As for #search(), but returns unique identifiers.\n",null,0],["uid_sort","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-uid_sort","(sort_keys, search_keys, charset)","<p>As for #sort(), but returns an array of unique identifiers.\n",null,0],["uid_store","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-uid_store","(set, attr, flags)","<p>As for #store(), but <code>set</code> contains unique identifiers.\n",null,0],["uid_thread","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-uid_thread","(algorithm, search_keys, charset)","<p>As for #thread(), but returns unique identifiers instead of message\nsequence numbers.\n",null,0],["uidl","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-uidl","()","",null,0],["umask","File","Ruby/classes/File.html#method-c-umask","(*args)","<p>Returns the current umask value for this process. If the optional argument\nis given, set the umask to …\n",null,0],["umount","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-umount","(dir)","",null,0],["unadvise","WIN32OLE_EVENT","Ruby/classes/WIN32OLE_EVENT.html#method-i-unadvise","()","<p>disconnects OLE server. If this method called, then the WIN32OLE_EVENT\nobject does not receive the OLE …\n",null,0],["unalias_command","Shell","Ruby/classes/Shell.html#method-c-unalias_command","(ali)","<p>Convenience method for Shell::CommandProcessor.unalias_command\n",null,0],["unalias_command","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-c-unalias_command","(ali)","<p>Unaliases the given <code>alias</code> command.\n",null,0],["unbind","DL::Function","Ruby/classes/DL/Function.html#method-i-unbind","()","",null,0],["unbind","Method","Ruby/classes/Method.html#method-i-unbind","()","<p>Dissociates <em>meth</em> from its current receiver. The resulting\n<code>UnboundMethod</code> can subsequently be bound to …\n",null,0],["unbind_at_call","DL::Function","Ruby/classes/DL/Function.html#method-i-unbind_at_call","()","",null,0],["unbind_at_call","DL::TempFunction","Ruby/classes/DL/TempFunction.html#method-i-unbind_at_call","()","",null,0],["uncached","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-uncached","()","<p>Disable the query cache within the block.\n",null,1],["uncached","ActiveRecord::QueryCache::ClassMethods","Rails/classes/ActiveRecord/QueryCache/ClassMethods.html#method-i-uncached","(&block)","<p>Disable the query cache within the block if Active Record is configured. If\nit&#39;s not, it will execute …\n",null,1],["unconverted_fields?","CSV","Ruby/classes/CSV.html#method-i-unconverted_fields-3F","()","<p>Returns <code>true</code> if unconverted_fields() to parsed results.  See\nCSV::new for details.\n",null,0],["uncountable","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-uncountable","(*words)","<p>Add uncountable words that shouldn&#39;t be attempted inflected.\n\n<pre>uncountable &#39;money&#39;\nuncountable &#39;money&#39;, ...</pre>\n",null,1],["uncountable?","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-uncountable-3F","(record_or_class)","<p>Identifies whether the class name of a record or class is uncountable.\n\n<pre>ActiveModel::Naming.uncountable?(Sheep) ...</pre>\n",null,1],["uncountable?","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-uncountable-3F","()","",null,1],["undef_system_command","Shell","Ruby/classes/Shell.html#method-c-undef_system_command","(command)","<p>Convenience method for Shell::CommandProcessor.undef_system_command\n",null,0],["undef_system_command","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-c-undef_system_command","(command)","<p>Undefines a command\n",null,0],["undefine_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-undefine_attribute_methods","()","<p>Removes all the previously dynamically defined methods from the class.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">AttributeMethods</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["undefine_finalizer","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-undefine_finalizer","(p1)","<p>Removes all finalizers for <em>obj</em>.\n",null,0],["underscore","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-underscore","(camel_cased_word)","<p>Makes an underscored, lowercase form from the expression in the string.\n<p>Changes &#39;::&#39; to &#39;/&#39; …\n",null,1],["underscore","String","Rails/classes/String.html#method-i-underscore","()","<p>The reverse of <code>camelize</code>. Makes an underscored, lowercase form\nfrom the expression in the string.\n<p><code>underscore</code> …\n",null,1],["undoc_params","RDoc::Stats","Ruby/classes/RDoc/Stats.html#method-i-undoc_params","(method)","<p>Determines which parameters in <code>method</code> were not documented. \nReturns a total parameter count and an Array …\n",null,0],["unescape","CGI","Ruby/classes/CGI.html#method-c-unescape","(string,encoding=@@accept_charset)","<p>URL-decode a string with encoding(optional).\n\n<pre><code>string = CGI::unescape(&quot;%27Stop%21%27+said+Fred&quot;)\n   # =&gt; ...\n</code></pre>\n",null,0],["unescape","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-unescape","(str)","",null,0],["unescape","URI::Escape","Ruby/classes/URI/Escape.html#method-i-unescape","(*arg)","<p>Synopsis\n\n<pre><code>URI.unescape(str)</code></pre>\n<p>Args\n",null,0],["unescape","URI::Parser","Ruby/classes/URI/Parser.html#method-i-unescape","(str, escaped = @regexp[:ESCAPED])","<p>Args\n<p><code>str</code> &mdash; String to remove escapes from\n<p><code>unsafe</code> &mdash; Regexp to apply. Defaults to self.regexp\n",null,0],["unescape","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-i-unescape","(str)","<p>Unescapes HTTP reserved and unwise characters in <code>str</code>\n",null,0],["unescape","Object","Rails/classes/Object.html#method-i-unescape","(str, escaped = /%[a-fA-F\\d]{2}/)","",null,1],["unescapeElement","CGI","Ruby/classes/CGI.html#method-c-unescapeElement","(string, *elements)","<p>Undo escaping such as that done by CGI::escapeElement()\n\n<pre><code>print CGI::unescapeElement(\n        CGI::escapeHTML(&#39;&lt;BR&gt;&lt;A ...</code></pre>\n",null,0],["unescapeHTML","CGI","Ruby/classes/CGI.html#method-c-unescapeHTML","(string)","<p>Unescape a string that has been HTML-escaped\n\n<pre><code>CGI::unescapeHTML(&quot;Usage: foo &amp;quot;bar&amp;quot; &amp;lt;baz&amp;gt;&quot;) ...</code></pre>\n",null,0],["unescape_auth_info","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-unescape_auth_info","(str)","",null,0],["unescape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Quoting.html#method-i-unescape_bytea","(value)","<p>Unescapes bytea output from a database to the binary string it represents.\nNOTE: This is NOT an inverse …\n",null,1],["unescape_element","CGI","Ruby/classes/CGI.html#method-c-unescape_element","(str)","<p>Synonym for CGI::unescapeElement(str)\n",null,0],["unescape_form","WEBrick::HTTPUtils","Ruby/classes/WEBrick/HTTPUtils.html#method-i-unescape_form","(str)","<p>Unescapes form reserved characters in <code>str</code>\n",null,0],["unescape_html","CGI","Ruby/classes/CGI.html#method-c-unescape_html","(str)","<p>Synonym for CGI::unescapeHTML(str)\n",null,0],["unescape_path","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-i-unescape_path","(path)","",null,1],["unget","RDoc::Markup::Parser","Ruby/classes/RDoc/Markup/Parser.html#method-i-unget","()","<p>Returns the current token to the token stream\n",null,0],["unget_tk","RDoc::Parser::RubyTools","Ruby/classes/RDoc/Parser/RubyTools.html#method-i-unget_tk","(tk)","<p>Returns <code>tk</code> to the scanner\n",null,0],["ungetbyte","IO","Ruby/classes/IO.html#method-i-ungetbyte","(p1)","<p>Pushes back bytes (passed as a parameter) onto <em>ios</em>, such that a\nsubsequent buffered read will return …\n",null,0],["ungetbyte","StringIO","Ruby/classes/StringIO.html#method-i-ungetbyte","(p1)","<p>See IO#ungetbyte\n",null,0],["ungetbyte","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-ungetbyte","(p1)","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["ungetc","IO","Ruby/classes/IO.html#method-i-ungetc","(p1)","<p>Pushes back one character (passed as a parameter) onto <em>ios</em>, such\nthat a subsequent buffered character …\n",null,0],["ungetc","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-ungetc","(c)","<p>Pushes character <code>c</code> back onto the stream such that a subsequent\nbuffered character read will return it. …\n",null,0],["ungetc","StringIO","Ruby/classes/StringIO.html#method-i-ungetc","(p1)","<p>Pushes back one character (passed as a parameter) onto\n<strong>strio</strong> such that a subsequent buffered read will …\n",null,0],["ungetc","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-ungetc","(p1)","<p>See Zlib::GzipReader documentation for a description.\n",null,0],["ungetch","Curses","Ruby/classes/Curses.html#method-c-ungetch","(p1)","<p>Places <code>ch</code> back onto the input queue to be returned by the next\ncall to Curses.getch.\n<p>There is just one …\n",null,0],["ungetmouse","Curses","Ruby/classes/Curses.html#method-c-ungetmouse","(p1)","<p>It pushes a KEY_MOUSE event onto the input queue, and associates with that\nevent the given state data …\n",null,0],["uninstall","Gem::Uninstaller","Ruby/classes/Gem/Uninstaller.html#method-i-uninstall","()","<p>Performs the uninstall of the gem.  This removes the spec, the Gem\ndirectory, and the cached .gem file. …\n",null,0],["uninstall_dep","Gem::Commands::CleanupCommand","Ruby/classes/Gem/Commands/CleanupCommand.html#method-i-uninstall_dep","(spec)","",null,0],["uninstall_gem","Gem::Uninstaller","Ruby/classes/Gem/Uninstaller.html#method-i-uninstall_gem","(spec)","<p>Uninstalls gem <code>spec</code>\n",null,0],["uninstall_old_gemcutter","Gem::Commands::SetupCommand","Ruby/classes/Gem/Commands/SetupCommand.html#method-i-uninstall_old_gemcutter","()","",null,0],["union","DL::Importer","Ruby/classes/DL/Importer.html#method-i-union","(signature)","<p>Creates a class to wrap the C union described by <code>signature</code>.\n\n<pre><code>MyUnion = union [&#39;int i&#39;, &#39;char c&#39;]</code></pre>\n",null,0],["union","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-union","(signature)","<p>Creates a class to wrap the C union described by <code>signature</code>.\n\n<pre><code>MyUnion = union [&#39;int i&#39;, &#39;char c&#39;]</code></pre>\n",null,0],["union","Regexp","Ruby/classes/Regexp.html#method-c-union","(*args)","<p>Return a <code>Regexp</code> object that is the union of the given\n<em>pattern</em>s, i.e., will match any of its parts. The …\n",null,0],["union","Set","Ruby/classes/Set.html#method-i-union","(enum)","",null,0],["uniq","Array","Ruby/classes/Array.html#method-i-uniq","()","<p>Returns a new array by removing duplicate values in <code>self</code>.\n<p>If a block is given, it will use the return …\n",null,0],["uniq","ActiveRecord::Associations::CollectionProxy","Rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-uniq","()","",null,1],["uniq","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-uniq","(value = true)","",null,1],["uniq!","Array","Ruby/classes/Array.html#method-i-uniq-21","()","<p>Removes duplicate elements from <code>self</code>.\n<p>If a block is given, it will use the return value of the block for …\n",null,0],["uniq_by","Array","Rails/classes/Array.html#method-i-uniq_by","(&block)","<p><strong>DEPRECATED</strong>: Use <code>Array#uniq</code> instead.\n<p>Returns a unique array based on the criteria in the block.\n\n<pre>[1, 2, 3, ...</pre>\n",null,1],["uniq_by!","Array","Rails/classes/Array.html#method-i-uniq_by-21","(&block)","<p><strong>DEPRECATED</strong>: Use <code>Array#uniq!</code> instead.\n<p>Same as <code>uniq_by</code>, but modifies <code>self</code>.\n",null,1],["uniq_value","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-uniq_value","()","<p><code>uniq</code> and <code>uniq!</code> are silently deprecated.\n<code>uniq_value</code> delegates to <code>distinct_value</code> to\nmaintain backwards …\n",null,1],["unique_classes","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-unique_classes","()","<p>Returns the unique classes discovered by RDoc.\n<p>::complete must have been called prior to using this method. …\n",null,0],["unique_classes_and_modules","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-unique_classes_and_modules","()","<p>Returns the unique classes and modules discovered by RDoc. ::complete must\nhave been called prior to …\n",null,0],["unique_id","Net::POPMail","Ruby/classes/Net/POPMail.html#method-i-unique_id","()","<p>Returns the unique-id of the message. Normally the unique-id is a hash\nstring of the message.\n<p>This method …\n",null,0],["unique_modules","RDoc::Store","Ruby/classes/RDoc/Store.html#method-i-unique_modules","()","<p>Returns the unique modules discovered by RDoc. ::complete must have been\ncalled prior to using this method. …\n",null,0],["unit","Matrix","Ruby/classes/Matrix.html#method-c-unit","(n)","",null,0],["unitary?","Matrix","Ruby/classes/Matrix.html#method-i-unitary-3F","()","<p>Returns <code>true</code> is this is a unitary matrix Raises an error if\nmatrix is not square.\n",null,0],["unix","Addrinfo","Ruby/classes/Addrinfo.html#method-c-unix","(p1, p2 = v2)","<p>returns an addrinfo object for UNIX socket address.\n<p><em>socktype</em> specifies the socket type. If it is omitted, …\n",null,0],["unix","Socket","Ruby/classes/Socket.html#method-c-unix","(path)","<p>creates a new socket connected to path using UNIX socket socket.\n<p>If a block is given, the block is called …\n",null,0],["unix?","Addrinfo","Ruby/classes/Addrinfo.html#method-i-unix-3F","()","<p>returns true if addrinfo is UNIX address. returns false otherwise.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).unix? ...</code></pre>\n",null,0],["unix?","Rake::Application","Ruby/classes/Rake/Application.html#method-i-unix-3F","()","",null,0],["unix?","Rake::Application","Ruby/classes/Rake/Application.html#method-i-unix-3F","()","",null,0],["unix_path","Addrinfo","Ruby/classes/Addrinfo.html#method-i-unix_path","()","<p>Returns the socket path as a string.\n\n<pre><code>Addrinfo.unix(&quot;/tmp/sock&quot;).unix_path       #=&gt; &quot;/tmp/sock&quot;\n</code></pre>\n",null,0],["unix_rights","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-i-unix_rights","()","<p>returns the array of IO objects for SCM_RIGHTS control message in UNIX\ndomain socket.\n<p>The class of the …\n",null,0],["unix_rights","Socket::AncillaryData","Ruby/classes/Socket/AncillaryData.html#method-c-unix_rights","(*args)","<p>Creates a new Socket::AncillaryData object which contains file descriptors\nas data.\n\n<pre><code>p Socket::AncillaryData.unix_rights(STDERR) ...</code></pre>\n",null,0],["unix_server_loop","Socket","Ruby/classes/Socket.html#method-c-unix_server_loop","(path)","<p>creates a UNIX socket server on <em>path</em>. It calls the block for each\nsocket accepted.\n<p>If <em>host</em> is specified, …\n",null,0],["unix_server_socket","Socket","Ruby/classes/Socket.html#method-c-unix_server_socket","(path)","<p>creates a UNIX server socket on <em>path</em>\n<p>If no block given, it returns a listening socket.\n<p>If a block is given, …\n",null,0],["unknown","","Ruby/classes/unknown.html","","",null,0],["unknown","","Ruby/classes/unknown.html","","",null,0],["unknown","Logger","Ruby/classes/Logger.html#method-i-unknown","(progname = nil, &block)","<p>Log an <code>UNKNOWN</code> message.  This will be printed no matter what\nthe logger&#39;s level is.\n<p>See #info for …\n",null,0],["unknown","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-i-unknown","","<p>Logs a <code>message</code> at the unknown (syslog alert) log level, or\nlogs the message returned from the block. …\n",null,0],["unlink","Dir","Ruby/classes/Dir.html#method-c-unlink","(p1)","<p>Deletes the named directory. Raises a subclass of\n<code>SystemCallError</code> if the directory isn&#39;t empty.\n",null,0],["unlink","File","Ruby/classes/File.html#method-c-unlink","(*args)","<p>Deletes the named files, returning the number of names passed as arguments.\nRaises an exception on any …\n",null,0],["unlink","Pathname","Ruby/classes/Pathname.html#method-i-unlink","()","<p>Removes a file or directory, using File.unlink if <code>self</code> is a\nfile, or Dir.unlink as necessary.\n",null,0],["unlink","Shell::CommandProcessor","Ruby/classes/Shell/CommandProcessor.html#method-i-unlink","(path)","<p>See IO.unlink when <code>path</code> is a file.\n<p>See Dir.unlink when <code>path</code> is a directory.\n",null,0],["unlink","Tempfile","Ruby/classes/Tempfile.html#method-i-unlink","()","<p>Unlinks (deletes) the file from the filesystem. One should always unlink\nthe file after using it, as …\n",null,0],["unlock","Mutex","Ruby/classes/Mutex.html#method-i-unlock","()","<p>Releases the lock. Raises <code>ThreadError</code> if <code>mutex</code>\nwasn&#39;t locked by the current thread.\n",null,0],["unlock","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-unlock","(path, body, initheader = nil)","<p>Sends a UNLOCK request to the <code>path</code> and gets a response, as an\nHTTPResponse object.\n",null,0],["unmask_protected_sequences","RDoc::Markup::AttributeManager","Ruby/classes/RDoc/Markup/AttributeManager.html#method-i-unmask_protected_sequences","()","<p>Unescapes special sequences of text\n",null,0],["unmount","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-unmount","(dir)","<p>Unmounts <code>dir</code>\n",null,0],["unnormalize","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-unnormalize","( string, entities=nil, filter=nil )","<p>Unescapes all possible entities\n",null,0],["unnormalize","REXML::Text","Ruby/classes/REXML/Text.html#method-c-unnormalize","( string, doctype=nil, filter=nil, illegal=nil )","<p>Unescapes all possible entities\n",null,0],["unnormalized","REXML::Entity","Ruby/classes/REXML/Entity.html#method-i-unnormalized","()","<p>Evaluates to the unnormalized value of this entity; that is, replacing all\nentities – both %ent; and …\n",null,0],["unpack","DL::Packer","Ruby/classes/DL/Packer.html#method-i-unpack","(ary)","",null,0],["unpack","DL::Stack","Ruby/classes/DL/Stack.html#method-i-unpack","(ary)","",null,0],["unpack","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-unpack","(directory)","<p>Unpacks the gem into the given directory.\n",null,0],["unpack","Socket::Option","Ruby/classes/Socket/Option.html#method-i-unpack","(p1)","<p>Calls String#unpack on sockopt.data.\n\n<pre><code>sockopt = Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, [1].pack(&quot;i&quot;)) ...</code></pre>\n",null,0],["unpack","String","Ruby/classes/String.html#method-i-unpack","(p1)","<p>Decodes <em>str</em> (which may contain binary data) according to the\nformat string, returning an array of each …\n",null,0],["unpack_graphemes","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-unpack_graphemes","(string)","<p>Unpack the string at grapheme boundaries. Returns a list of character\nlists.\n\n<pre>Unicode.unpack_graphemes(&#39;क्षि&#39;) ...</pre>\n",null,1],["unpack_sockaddr_in","Socket","Ruby/classes/Socket.html#method-c-unpack_sockaddr_in","(p1)","<p>Unpacks <em>sockaddr</em> into port and ip_address.\n<p><em>sockaddr</em> should be a string or an addrinfo for AF_INET/AF_INET6. …\n",null,0],["unpack_sockaddr_un","Socket","Ruby/classes/Socket.html#method-c-unpack_sockaddr_un","(p1)","<p>Unpacks <em>sockaddr</em> into path.\n<p><em>sockaddr</em> should be a string or an addrinfo for AF_UNIX.\n\n<pre><code>sockaddr = Socket.sockaddr_un(&quot;/tmp/sock&quot;) ...</code></pre>\n",null,0],["unpackdw","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-unpackdw","(dw)","",null,0],["unpackqw","Win32::Registry::API","Ruby/classes/Win32/Registry/API.html#method-i-unpackqw","(qw)","",null,0],["unpermitted_parameters","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-unpermitted_parameters","(event)","",null,1],["unprepared_statement","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-unprepared_statement","()","",null,1],["unprepared_visitor","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-unprepared_visitor","()","",null,1],["unregist","DRb::ExtServManager","Ruby/classes/DRb/ExtServManager.html#method-i-unregist","(name)","",null,0],["unregister","Mime::Type","Rails/classes/Mime/Type.html#method-c-unregister","(symbol)","<p>This method is opposite of register method.\n<p>Usage:\n\n<pre>Mime::Type.unregister(:mobile)</pre>\n",null,1],["unregister_command","Gem::CommandManager","Ruby/classes/Gem/CommandManager.html#method-i-unregister_command","(command)","<p>Unregister the Symbol <code>command</code> as a gem command.\n",null,0],["unresolved_deps","Gem::Specification","Ruby/classes/Gem/Specification.html#method-c-unresolved_deps","()","<p>DOC: This method needs documented or nodoc&#39;d\n",null,0],["unscan","StringScanner","Ruby/classes/StringScanner.html#method-i-unscan","()","<p>Set the scan pointer to the previous position.  Only one previous position\nis remembered, and it changes …\n",null,0],["unscope","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-unscope","(*args)","<p>Removes an unwanted relation that is already defined on a chain of\nrelations. This is useful when passing …\n",null,1],["unscoped","ActiveRecord::Scoping::Default::ClassMethods","Rails/classes/ActiveRecord/Scoping/Default/ClassMethods.html#method-i-unscoped","()","<p>Returns a scope for the model without the <code>default_scope</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Post</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">default_scope</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["unshift","Array","Ruby/classes/Array.html#method-i-unshift","(*args)","<p>Prepends objects to the front of <code>self</code>, moving other elements\nupwards. See also Array#shift for the opposite …\n",null,0],["unshift","REXML::Parent","Ruby/classes/REXML/Parent.html#method-i-unshift","( object )","",null,0],["unshift","REXML::Parsers::BaseParser","Ruby/classes/REXML/Parsers/BaseParser.html#method-i-unshift","(token)","<p>Push an event back on the head of the stream.  This method has\n(theoretically) infinite depth.\n",null,0],["unshift","REXML::Parsers::PullParser","Ruby/classes/REXML/Parsers/PullParser.html#method-i-unshift","(token)","",null,0],["unshift","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-unshift","(*args, &block)","",null,1],["unshift","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-unshift","(path)","",null,1],["unsigned_value","DL::ValueUtil","Ruby/classes/DL/ValueUtil.html#method-i-unsigned_value","(val, ty)","",null,0],["unsubscribe","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-unsubscribe","(mailbox)","<p>Sends a UNSUBSCRIBE command to remove the specified <code>mailbox</code>\nname from the server&#39;s set of “active” …\n",null,0],["unsubscribe","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-unsubscribe","(args)","",null,1],["unsubscribe","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-unsubscribe","(subscriber)","",null,1],["untaint","Delegator","Ruby/classes/Delegator.html#method-i-untaint","","<p>Untaint both the object returned by _<em>getobj</em>_ and self.\n",null,0],["untaint","Object","Ruby/classes/Object.html#method-i-untaint","()","<p>Removes the taint from <em>obj</em>.\n",null,0],["untaint","Pathname","Ruby/classes/Pathname.html#method-i-untaint","()","<p>Untaints this Pathname.\n<p>See Object.untaint.\n",null,0],["until","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-until","(time = ::Time.current)","",null,1],["until","Numeric","Rails/classes/Numeric.html#method-i-until","(time = ::Time.current)","<p>Reads best with argument:  10.minutes.until(time)\n",null,1],["untrace_var","Kernel","Ruby/classes/Kernel.html#method-i-untrace_var","(p1, p2 = v2)","<p>Removes tracing for the specified command on the given global variable and\nreturns <code>nil</code>. If no command …\n",null,0],["untrust","Delegator","Ruby/classes/Delegator.html#method-i-untrust","","<p>Untrust both the object returned by _<em>getobj</em>_ and self.\n",null,0],["untrust","Object","Ruby/classes/Object.html#method-i-untrust","()","<p>Marks <em>obj</em> as untrusted.\n",null,0],["untrusted?","Object","Ruby/classes/Object.html#method-i-untrusted-3F","()","<p>Returns <code>true</code> if the object is untrusted.\n",null,0],["unused","Zlib::GzipReader","Ruby/classes/Zlib/GzipReader.html#method-i-unused","()","<p>Returns the rest of the data which had read for parsing gzip format, or\n<code>nil</code> if the whole gzip file is …\n",null,0],["unyank_gem","Gem::Commands::YankCommand","Ruby/classes/Gem/Commands/YankCommand.html#method-i-unyank_gem","(version, platform, api_key)","",null,0],["up","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-up","()","",null,1],["upcase","String","Ruby/classes/String.html#method-i-upcase","()","<p>Returns a copy of <em>str</em> with all lowercase letters replaced with\ntheir uppercase counterparts. The operation …\n",null,0],["upcase","Symbol","Ruby/classes/Symbol.html#method-i-upcase","()","<p>Same as <code>sym.to_s.upcase.intern</code>.\n",null,0],["upcase","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-upcase","()","<p>Converts characters in the string to uppercase.\n\n<pre>&#39;Laurent, où sont les tests ?&#39;.mb_chars.upcase.to_s # ...</pre>\n",null,1],["upcase","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-upcase","(string)","",null,1],["upcase!","String","Ruby/classes/String.html#method-i-upcase-21","()","<p>Upcases the contents of <em>str</em>, returning <code>nil</code> if no\nchanges were made. Note: case replacement is effective …\n",null,0],["update","CGI::Session","Ruby/classes/CGI/Session.html#method-i-update","()","<p>Store session data on the server.  For some session storage types, this is\na no-op.\n",null,0],["update","CGI::Session::FileStore","Ruby/classes/CGI/Session/FileStore.html#method-i-update","()","<p>Save session state to the session&#39;s FileStore file.\n",null,0],["update","CGI::Session::MemoryStore","Ruby/classes/CGI/Session/MemoryStore.html#method-i-update","()","<p>Update session state.\n<p>A no-op.\n",null,0],["update","CGI::Session::NullStore","Ruby/classes/CGI/Session/NullStore.html#method-i-update","()","<p>Update session state.\n<p>A no-op.\n",null,0],["update","CGI::Session::PStore","Ruby/classes/CGI/Session/PStore.html#method-i-update","()","<p>Save session state to the session&#39;s PStore file.\n",null,0],["update","DBM","Ruby/classes/DBM.html#method-i-update","(p1)","<p>Updates the database with multiple values from the specified object. Takes\nany object which implements …\n",null,0],["update","Digest::HMAC","Ruby/classes/Digest/HMAC.html#method-i-update","(text)","<p>Updates the hmac using a given <code>string</code> and returns self.\n",null,0],["update","Digest::Instance","Ruby/classes/Digest/Instance.html#method-i-update","(p1)","<p>Updates the digest using a given <em>string</em> and returns self.\n<p>The update() method and the left-shift operator …\n",null,0],["update","ENV","Ruby/classes/ENV.html#method-c-update","(p1)","<p>Adds the contents of <code>hash</code> to the environment variables.  If no\nblock is specified entries with duplicate …\n",null,0],["update","GDBM","Ruby/classes/GDBM.html#method-i-update","(p1)","<p>Adds the key-value pairs of <em>other</em> to <em>gdbm</em>, overwriting\nentries with duplicate keys with those from <em>other</em> …\n",null,0],["update","Gem::StreamUI::SilentDownloadReporter","Ruby/classes/Gem/StreamUI/SilentDownloadReporter.html#method-i-update","(current)","",null,0],["update","Gem::StreamUI::VerboseDownloadReporter","Ruby/classes/Gem/StreamUI/VerboseDownloadReporter.html#method-i-update","(bytes)","",null,0],["update","Hash","Ruby/classes/Hash.html#method-i-update","(p1)","<p>Adds the contents of <em>other_hash</em> to <em>hsh</em>.  If no block is\nspecified, entries with duplicate keys are overwritten …\n",null,0],["update","HttpServer::Table","Ruby/classes/HttpServer/Table.html#method-i-update","(hash)","",null,0],["update","OpenSSL::Cipher","Ruby/classes/OpenSSL/Cipher.html#method-i-update","(p1, p2 = v2)","<p>Encrypts data in a streaming fashion. Hand consecutive blocks of data to\nthe <code>update</code> method in order to …\n",null,0],["update","OpenSSL::Digest","Ruby/classes/OpenSSL/Digest.html#method-i-update","(p1)","<p>Not every message digest can be computed in one single pass. If a message\ndigest is to be computed from …\n",null,0],["update","OpenSSL::HMAC","Ruby/classes/OpenSSL/HMAC.html#method-i-update","(p1)","",null,0],["update","SDBM","Ruby/classes/SDBM.html#method-i-update","(p1)","<p>Insert or update key-value pairs.\n<p>This method will work with any object which implements an each_pair …\n",null,0],["update","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-update","( hsh )","<p>Updates the database with multiple values from the specified object. Takes\nany object which implements …\n",null,0],["update","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-update","(arel, name = nil, binds = [])","<p>Executes the update statement and returns the number of rows affected.\n",null,1],["update","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update","(attributes)","<p>Updates the attributes of the model from the passed-in hash and saves the\nrecord, all wrapped in a transaction. …\n",null,1],["update","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-update","(id, attributes)","<p>Updates an object (or multiple objects) and saves it to the database, if\nvalidations pass. The resulting …\n",null,1],["update","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-update","(other_hash)","<p>Updates the receiver in-place, merging in the hash passed as argument:\n\n<pre>hash_1 = ActiveSupport::HashWithIndifferentAccess.new ...</pre>\n",null,1],["update","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-update","(other_hash)","<p>Updates the receiver in-place, merging in the hash passed as argument:\n\n<pre>hash_1 = ActiveSupport::HashWithIndifferentAccess.new ...</pre>\n",null,1],["update","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-i-update","(params=nil)","<p>PATCH/PUT update\n",null,1],["update!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update-21","(attributes)","<p>Updates its receiver just like <code>update</code> but calls\n<code>save!</code> instead of <code>save</code>, so an exception is raised\nif the …\n",null,1],["update_aliases","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-update_aliases","()","<p>Updates the child modules &amp; classes by replacing the ones that are\naliases through a constant.\n<p>The …\n",null,0],["update_all","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-update_all","(updates)","<p>Updates all records with details given if they match a set of conditions\nsupplied, limits and order can …\n",null,1],["update_attribute","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update_attribute","(name, value)","<p>Updates a single attribute and saves the record. This is especially useful\nfor boolean flags on existing …\n",null,1],["update_attributes","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update_attributes","(attributes)","",null,1],["update_attributes!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update_attributes-21","(attributes)","",null,1],["update_cache?","Gem::Source","Ruby/classes/Gem/Source.html#method-i-update_cache-3F","()","",null,0],["update_checksum","Gem::Package::TarHeader","Ruby/classes/Gem/Package/TarHeader.html#method-i-update_checksum","()","<p>Updates the TarHeader&#39;s checksum\n",null,0],["update_column","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update_column","(name, value)","<p>Equivalent to <code>update_columns(name =&gt; value)</code>.\n",null,1],["update_columns","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update_columns","(attributes)","<p>Updates the attributes directly in the database issuing an UPDATE SQL\nstatement and sets them in the …\n",null,1],["update_counters","ActiveRecord::CounterCache::ClassMethods","Rails/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-update_counters","(id, counters)","<p>A generic “counter updater” implementation, intended primarily to be used\nby increment_counter …\n",null,1],["update_counters","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-update_counters","(id, counters)","<p>Make sure the lock version column gets updated when counters are updated.\n",null,1],["update_extends","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-update_extends","()","<p>Deletes from #extends those whose module has been removed from the\ndocumentation.\n",null,0],["update_gem","Gem::Commands::UpdateCommand","Ruby/classes/Gem/Commands/UpdateCommand.html#method-i-update_gem","(name, version = Gem::Requirement.default)","",null,0],["update_gems","Gem::Commands::UpdateCommand","Ruby/classes/Gem/Commands/UpdateCommand.html#method-i-update_gems","(gems_to_update)","",null,0],["update_includes","RDoc::ClassModule","Ruby/classes/RDoc/ClassModule.html#method-i-update_includes","()","<p>Deletes from #includes those whose module has been removed from the\ndocumentation.\n",null,0],["update_index","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-update_index","()","<p>Perform an in-place update of the repository from newly added gems.\n",null,0],["update_output_dir","RDoc::RDoc","Ruby/classes/RDoc/RDoc.html#method-i-update_output_dir","(op_dir, time, last = {})","<p>Update the flag file in an output directory.\n",null,0],["update_rubygems","Gem::Commands::UpdateCommand","Ruby/classes/Gem/Commands/UpdateCommand.html#method-i-update_rubygems","()","<p>Update RubyGems software to the latest version.\n",null,0],["update_specs_index","Gem::Indexer","Ruby/classes/Gem/Indexer.html#method-i-update_specs_index","(index, source, dest)","<p>Combines specs in <code>index</code> and <code>source</code> then writes\nout a new copy to <code>dest</code>.  For a latest index, does not …\n",null,0],["update_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-update_sql","(sql, name = nil)","<p>Executes the update statement and returns the number of rows affected.\n",null,1],["update_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/DatabaseStatements.html#method-i-update_sql","(sql, name = nil)","<p>Executes an UPDATE query and returns the number of affected tuples.\n",null,1],["updated","Gem::StreamUI::SilentProgressReporter","Ruby/classes/Gem/StreamUI/SilentProgressReporter.html#method-i-updated","(message)","",null,0],["updated","Gem::StreamUI::SimpleProgressReporter","Ruby/classes/Gem/StreamUI/SimpleProgressReporter.html#method-i-updated","(message)","<p>Prints out a dot and ignores <code>message</code>.\n",null,0],["updated","Gem::StreamUI::VerboseProgressReporter","Ruby/classes/Gem/StreamUI/VerboseProgressReporter.html#method-i-updated","(message)","<p>Prints out the position relative to the total and the <code>message</code>.\n",null,0],["updated","RSS::Maker::ChannelBase","Ruby/classes/RSS/Maker/ChannelBase.html#method-i-updated","()","",null,0],["updated","RSS::Maker::ItemsBase::ItemBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-updated","()","",null,0],["updated","RSS::Maker::ItemsBase::ItemBase::SourceBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase.html#method-i-updated","()","",null,0],["updated=","RSS::Maker::ChannelBase","Ruby/classes/RSS/Maker/ChannelBase.html#method-i-updated-3D","(date)","",null,0],["updated=","RSS::Maker::ItemsBase::ItemBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase.html#method-i-updated-3D","(date)","",null,0],["updated=","RSS::Maker::ItemsBase::ItemBase::SourceBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/SourceBase.html#method-i-updated-3D","(date)","",null,0],["updated?","ActiveSupport::FileUpdateChecker","Rails/classes/ActiveSupport/FileUpdateChecker.html#method-i-updated-3F","()","<p>Check if any of the entries were updated. If so, the watched and/or\nupdated_at values are cached until …\n",null,1],["upgrade_to_class","RDoc::Context","Ruby/classes/RDoc/Context.html#method-i-upgrade_to_class","(mod, class_type, enclosing)","<p>Upgrades NormalModule <code>mod</code> in <code>enclosing</code> to a\n<code>class_type</code>\n",null,0],["upload","CompositePublisher","Ruby/classes/CompositePublisher.html#method-i-upload","()","<p>Upload all the individual publishers.\n",null,0],["upload","Rake::CompositePublisher","Ruby/classes/Rake/CompositePublisher.html#method-i-upload","()","<p>Upload all the individual publishers.\n",null,0],["upload","Rake::SshDirPublisher","Ruby/classes/Rake/SshDirPublisher.html#method-i-upload","()","",null,0],["upload","Rake::SshFilePublisher","Ruby/classes/Rake/SshFilePublisher.html#method-i-upload","()","<p>Upload the local directory to the remote directory.\n",null,0],["upload","Rake::SshFreshDirPublisher","Ruby/classes/Rake/SshFreshDirPublisher.html#method-i-upload","()","",null,0],["upload","SshDirPublisher","Ruby/classes/SshDirPublisher.html#method-i-upload","()","",null,0],["upload","SshFilePublisher","Ruby/classes/SshFilePublisher.html#method-i-upload","()","<p>Upload the local directory to the remote directory.\n",null,0],["upload","SshFreshDirPublisher","Ruby/classes/SshFreshDirPublisher.html#method-i-upload","()","",null,0],["upload_files","Rake::FtpUploader","Ruby/classes/Rake/FtpUploader.html#method-i-upload_files","(wildcard)","<p>Upload all files matching <code>wildcard</code> to the uploader&#39;s root\npath.\n",null,0],["upper","Win32::SSPI::SecurityHandle","Ruby/classes/Win32/SSPI/SecurityHandle.html#method-i-upper","()","",null,0],["upper_bound","Prime::PseudoPrimeGenerator","Ruby/classes/Prime/PseudoPrimeGenerator.html#method-i-upper_bound","()","",null,0],["upper_bound=","Prime::PseudoPrimeGenerator","Ruby/classes/Prime/PseudoPrimeGenerator.html#method-i-upper_bound-3D","(ubound)","",null,0],["upper_triangular?","Matrix","Ruby/classes/Matrix.html#method-i-upper_triangular-3F","()","<p>Returns <code>true</code> is this is an upper triangular matrix.\n",null,0],["upto","Date","Ruby/classes/Date.html#method-i-upto","(p1)","<p>This method is equivalent to step(max, 1){|date| …}.\n",null,0],["upto","Integer","Ruby/classes/Integer.html#method-i-upto","(p1)","<p>Iterates <em>block</em>, passing in integer values from <em>int</em> up to\nand including <em>limit</em>.\n<p>If no block is given, an …\n",null,0],["upto","Integer","Ruby/classes/Integer.html#method-i-upto","(p1)","<p>Iterates <em>block</em>, passing in integer values from <em>int</em> up to\nand including <em>limit</em>.\n<p>If no block is given, an …\n",null,0],["upto","String","Ruby/classes/String.html#method-i-upto","(p1, p2 = v2)","<p>Iterates through successive values, starting at <em>str</em> and ending at\n<em>other_str</em> inclusive, passing each value …\n",null,0],["uptodate?","FileUtils","Ruby/classes/FileUtils.html#method-c-uptodate-3F","(new, old_list)","<p>Options: (none)\n<p>Returns true if <code>newer</code> is newer than all <code>old_list</code>.\nNon-existent files are older than any …\n",null,0],["uri","DRb","Ruby/classes/DRb.html#method-c-uri","()","<p>Get the URI defining the local dRuby space.\n<p>This is the URI of the current server.  See #current_server …\n",null,0],["uri_escaper","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-uri_escaper","()","",null,0],["uri_option","DRb::DRbProtocol","Ruby/classes/DRb/DRbProtocol.html#method-c-uri_option","(uri, config, first=true)","<p>Parse <code>uri</code> into a [uri, option] pair.\n<p>The DRbProtocol module asks each registered protocol in turn to try …\n",null,0],["uri_registered?","RSS::BaseListener","Ruby/classes/RSS/BaseListener.html#method-i-uri_registered-3F","(uri, name)","<p>test if this uri is registered against this name\n",null,0],["url","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-url","()","<p>Returns the complete URL used for this request.\n",null,1],["url_encode","ERB::Util","Ruby/classes/ERB/Util.html#method-c-url_encode","(s)","<p>A utility method for encoding the String <em>s</em> as a URL.\n\n<pre><code>require &quot;erb&quot;\ninclude ERB::Util\n\nputs url_encode(&quot;Programming ...\n</code></pre>\n",null,0],["url_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-url_field","(object_name, method, options = {})","<p>Returns a text_field of type “url”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">url_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;homepage&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_homepage&quot; ...</span>\n</pre>\n",null,1],["url_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-url_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “url”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,1],["url_for","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-url_for","(string)","<p>basic url_for that can be overridden for more robust functionality\n",null,1],["url_for","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-c-url_for","(options = {})","",null,1],["url_for","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-url_for","(options = nil)","<p>Generate a url based on the options provided, default_url_options and the\nroutes defined in routes.rb. …\n",null,1],["url_for","ActionView::RoutingUrlFor","Rails/classes/ActionView/RoutingUrlFor.html#method-i-url_for","(options = nil)","<p>Returns the URL for the set of <code>options</code> provided. This takes\nthe same options as <code>url_for</code> in Action Controller …\n",null,1],["url_options","ActionController::UrlFor","Rails/classes/ActionController/UrlFor.html#method-i-url_options","()","",null,1],["url_options","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-url_options","()","<p>Hook overridden in controller to add request information with\n`default_url_options`. Application logic …\n",null,1],["url_to_asset","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_asset","(source, options = {})","",null,1],["url_to_audio","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_audio","(source, options = {})","",null,1],["url_to_font","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_font","(source, options = {})","",null,1],["url_to_image","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_image","(source, options = {})","",null,1],["url_to_javascript","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_javascript","(source, options = {})","",null,1],["url_to_stylesheet","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_stylesheet","(source, options = {})","",null,1],["url_to_video","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_video","(source, options = {})","",null,1],["urlsafe_base64","SecureRandom","Ruby/classes/SecureRandom.html#method-c-urlsafe_base64","(n=nil, padding=false)","<p>SecureRandom.urlsafe_base64 generates a random URL-safe base64 string.\n<p>The argument <em>n</em> specifies the length …\n",null,0],["urlsafe_decode64","Base64","Ruby/classes/Base64.html#method-i-urlsafe_decode64","(str)","<p>Returns the Base64-decoded version of <code>str</code>. This method\ncomplies with “Base 64 Encoding with URL and …\n",null,0],["urlsafe_encode64","Base64","Ruby/classes/Base64.html#method-i-urlsafe_encode64","(bin)","<p>Returns the Base64-encoded version of <code>bin</code>. This method\ncomplies with “Base 64 Encoding with URL and …\n",null,0],["us_zones","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-us_zones","()","<p>A convenience method for returning a collection of TimeZone objects for\ntime zones in the USA.\n",null,1],["usage","Gem::Command","Ruby/classes/Gem/Command.html#method-i-usage","()","<p>Override to display the usage for an individual gem command.\n<p>The text “[options]” is automatically …\n",null,0],["usage_path","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-usage_path","()","",null,1],["use","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-use","(*args, &block)","<p>Pushes the given Rack middleware and its arguments to the bottom of the\nmiddleware stack.\n",null,1],["use","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-use","(*args, &block)","",null,1],["use","Rails::Configuration::MiddlewareStackProxy","Rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-use","(*args, &block)","",null,1],["use_accept_header","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-use_accept_header","()","",null,1],["use_default_colors","Curses","Ruby/classes/Curses.html#method-c-use_default_colors","()","<p>tells the curses library to use terminal&#39;s default colors.\n<p>see also the system manual for default_colors …\n",null,0],["use_insert_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-use_insert_returning-3F","()","",null,1],["use_loader","IRB::Context","Ruby/classes/IRB/Context.html#method-i-use_loader","()","<p>Returns whether <code>irb</code>&#39;s own file reader method is used by\n<code>load</code>/<code>require</code> or not.\n<p>This mode is globally …\n",null,0],["use_loader=","IRB::Context","Ruby/classes/IRB/Context.html#method-i-use_loader-3D","(opt)","<p>Sets IRB.conf\n<p>See #use_loader for more information.\n",null,0],["use_loader?","IRB::Context","Ruby/classes/IRB/Context.html#method-i-use_loader-3F","()","",null,0],["use_markup","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-use_markup","(content)","<p>If there is a <code>markup: parser_name</code> comment at the front of the\nfile, use it to determine the parser.  …\n",null,0],["use_paths","Gem","Ruby/classes/Gem.html#method-c-use_paths","(home, *paths)","<p>Use the <code>home</code> and <code>paths</code> values for Gem.dir and\nGem.path.  Used mainly by the unit tests to provide environment …\n",null,0],["use_prefix","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-use_prefix","()","<p>Adds the stored #prefix to the output and clears it.  Lists generate a\nprefix for later consumption. …\n",null,0],["use_readline=","IRB::Context","Ruby/classes/IRB/Context.html#method-i-use_readline-3D","(opt)","<p>Obsolete method.\n<p>Can be set using the <code>--noreadline</code> and <code>--readline</code>\ncommand line options.\n<p>See IRB@Command+line+options …\n",null,0],["use_registry","URI::Generic","Ruby/classes/URI/Generic.html#method-c-use_registry","()","<p>Returns whether a registry of naming authorities are being used.\n",null,0],["use_renderer","ActionController::Renderers::ClassMethods","Rails/classes/ActionController/Renderers/ClassMethods.html#method-i-use_renderer","(*args)","",null,1],["use_renderers","ActionController::Renderers::ClassMethods","Rails/classes/ActionController/Renderers/ClassMethods.html#method-i-use_renderers","(*args)","",null,1],["use_ssl=","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-use_ssl-3D","(flag)","<p>Turn on/off SSL. This flag must be set before starting session. If you\nchange use_ssl value after session …\n",null,0],["use_ssl?","Net::HTTP","Ruby/classes/Net/HTTP.html#method-i-use_ssl-3F","()","<p>Returns true if SSL/TLS is being used with HTTP.\n",null,0],["use_ssl?","Net::POP3","Ruby/classes/Net/POP3.html#method-i-use_ssl-3F","()","<p>does this instance use SSL?\n",null,0],["use_ssl?","Net::POP3","Ruby/classes/Net/POP3.html#method-c-use_ssl-3F","()","<p>returns <code>true</code> if POP3.ssl_params is set\n",null,0],["use_tracer=","IRB::Context","Ruby/classes/IRB/Context.html#method-i-use_tracer-3D","(opt)","<p>Sets whether or not to use the Tracer library when evaluating statements in\nthis context.\n<p>See <code>lib/tracer.rb</code> …\n",null,0],["use_ui","Gem::DefaultUserInteraction","Ruby/classes/Gem/DefaultUserInteraction.html#method-i-use_ui","(new_ui, &block)","<p>See DefaultUserInteraction::use_ui\n",null,0],["use_ui","Gem::DefaultUserInteraction","Ruby/classes/Gem/DefaultUserInteraction.html#method-c-use_ui","(new_ui)","<p>Use <code>new_ui</code> for the duration of <code>block</code>.\n",null,0],["use_zone","Time","Rails/classes/Time.html#method-c-use_zone","(time_zone)","<p>Allows override of <code>Time.zone</code> locally inside supplied block;\nresets <code>Time.zone</code> to existing value when done. …\n",null,1],["usec","Time","Ruby/classes/Time.html#method-i-usec","()","<p>Returns the number of microseconds for <em>time</em>.\n\n<pre><code>t = Time.now        #=&gt; 2007-11-19 08:03:26 -0600\n&quot;%10.6f&quot; ...\n</code></pre>\n",null,0],["usec","DateTime","Rails/classes/DateTime.html#method-i-usec","()","<p>Returns the fraction of a second as microseconds\n",null,1],["user","URI::Generic","Ruby/classes/URI/Generic.html#method-i-user","()","<p>returns the user component\n",null,0],["user=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-user-3D","(user)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,0],["user=","XMLRPC::Client","Ruby/classes/XMLRPC/Client.html#method-i-user-3D","(new_user)","<p>Changes the user for the Basic Authentication header to\n<code>new_user</code>\n",null,0],["user_agent","Gem::RemoteFetcher","Ruby/classes/Gem/RemoteFetcher.html#method-i-user_agent","()","",null,0],["user_dir","Gem","Ruby/classes/Gem.html#method-c-user_dir","()","<p>Path for gems in the user&#39;s home directory\n",null,0],["user_home","Gem","Ruby/classes/Gem.html#method-c-user_home","()","<p>The home directory for the user.\n",null,0],["user_name_and_password","ActionController::HttpAuthentication::Basic","Rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-user_name_and_password","(request)","",null,1],["userinfo","URI::Generic","Ruby/classes/URI/Generic.html#method-i-userinfo","()","<p>returns the userinfo, either as &#39;user&#39; or &#39;user:password&#39;\n",null,0],["userinfo=","URI::Generic","Ruby/classes/URI/Generic.html#method-i-userinfo-3D","(userinfo)","<p>Sets userinfo, argument is string like &#39;name:pass&#39;\n",null,0],["uses_transaction","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-uses_transaction","(*methods)","",null,1],["uses_transaction?","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-uses_transaction-3F","(method)","",null,1],["using_limitable_reflections?","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-using_limitable_reflections-3F","(reflections)","",null,1],["using_match_shorthand?","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-using_match_shorthand-3F","(path, options)","",null,1],["utc","Time","Ruby/classes/Time.html#method-c-utc","(*args)","<p>Creates a Time object based on given values, interpreted as UTC (GMT). The\nyear must be specified. Other …\n",null,0],["utc","Time","Ruby/classes/Time.html#method-i-utc","()","<p>Converts <em>time</em> to UTC (GMT), modifying the receiver.\n\n<pre><code>t = Time.now   #=&gt; 2007-11-19 08:18:31 -0600\nt.gmt? ...\n</code></pre>\n",null,0],["utc","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-utc","()","<p>Returns a Time or DateTime instance that represents the time in UTC.\n",null,1],["utc","DateTime","Rails/classes/DateTime.html#method-i-utc","()","<p>Adjusts DateTime to UTC by adding its offset value; offset is set to 0.\n\n<pre>DateTime.civil(2005, 2, 21, 10, ...</pre>\n",null,1],["utc?","Time","Ruby/classes/Time.html#method-i-utc-3F","()","<p>Returns <code>true</code> if <em>time</em> represents a time in UTC (GMT).\n\n<pre><code>t = Time.now                        #=&gt; 2007-11-19 ...\n</code></pre>\n",null,0],["utc?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-utc-3F","()","<p>Returns true if the current time zone is set to UTC.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">zone</span> = <span class=\"ruby-string\">&#39;UTC&#39;</span>                           <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["utc?","DateTime","Rails/classes/DateTime.html#method-i-utc-3F","()","<p>Returns <code>true</code> if <code>offset == 0</code>.\n",null,1],["utc_offset","Time","Ruby/classes/Time.html#method-i-utc_offset","()","<p>Returns the offset in seconds between the timezone of <em>time</em> and\nUTC.\n\n<pre><code>t = Time.gm(2000,1,1,20,15,1)   #=&gt; ...\n</code></pre>\n",null,0],["utc_offset","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-utc_offset","()","<p>Returns the offset from current time to UTC time in seconds.\n",null,1],["utc_offset","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-utc_offset","()","<p>Returns the offset of this time zone from UTC in seconds.\n",null,1],["utc_offset","DateTime","Rails/classes/DateTime.html#method-i-utc_offset","()","<p>Returns the offset value in seconds.\n",null,1],["utc_time","Time","Rails/classes/Time.html#method-c-utc_time","(*args)","<p><strong>DEPRECATED</strong>: Use +Time#utc+ instead.\n<p>Wraps class method <code>time_with_datetime_fallback</code> with\n<code>utc_or_local</code> set …\n",null,1],["utc_to_local","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-utc_to_local","(time)","<p>Adjust the given time to the simultaneous time in the time zone represented\nby <code>self</code>. Returns a Time.utc() …\n",null,1],["utf8_enforcer_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-utf8_enforcer_tag","()","<p>Creates the hidden UTF8 enforcer tag. Override this method in a helper to\ncustomize the tag.\n",null,1],["utime","File","Ruby/classes/File.html#method-c-utime","(p1, p2, *args)","<p>Sets the access and modification times of each named file to the first two\narguments. Returns the number …\n",null,0],["utime","Pathname","Ruby/classes/Pathname.html#method-i-utime","(p1, p2)","<p>Update the access and modification times of the file.\n<p>See File.utime.\n",null,0],["uuid","SecureRandom","Ruby/classes/SecureRandom.html#method-c-uuid","()","<p>SecureRandom.uuid generates a v4 random UUID (Universally Unique\nIDentifier).\n\n<pre><code>p SecureRandom.uuid #=&gt; ...\n</code></pre>\n",null,0],["uuid","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-uuid","()","<p>Returns the unique request id, which is based off either the X-Request-Id\nheader that can be generated …\n",null,1],["uuid","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-uuid","(name, options = {})","",null,1],["v","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-i-v","()","",null,0],["v_inv","Matrix::EigenvalueDecomposition","Ruby/classes/Matrix/EigenvalueDecomposition.html#method-i-v_inv","()","",null,0],["valid?","RSS::Element","Ruby/classes/RSS/Element.html#method-i-valid-3F","(ignore_unknown_element=true)","",null,0],["valid?","ActiveModel::Validations","Rails/classes/ActiveModel/Validations.html#method-i-valid-3F","(context = nil)","<p>Runs all the specified validations and returns <code>true</code> if no\nerrors were added otherwise <code>false</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["valid?","ActiveRecord::DynamicMatchers::Method","Rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-i-valid-3F","()","",null,1],["valid?","ActiveRecord::Validations","Rails/classes/ActiveRecord/Validations.html#method-i-valid-3F","(context = nil)","<p>Runs all the validations within the specified context. Returns\n<code>true</code> if no errors are found, <code>false</code> otherwise. …\n",null,1],["valid_accept_header","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-valid_accept_header","()","",null,1],["valid_alter_table_options","ActiveRecord::ConnectionAdapters::SQLite3Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-valid_alter_table_options","( type, options)","<p>See: www.sqlite.org/lang_altertable.html SQLite has an additional\nrestriction on the ALTER TABLE statement …\n",null,1],["valid_civil?","Date","Ruby/classes/Date.html#method-c-valid_civil-3F","(p1, p2, p3, p4 = v4)","<p>Returns true if the given calendar date is valid, and false if not.\n\n<pre><code>Date.valid_date?(2001,2,3)        ...</code></pre>\n",null,0],["valid_commercial?","Date","Ruby/classes/Date.html#method-c-valid_commercial-3F","(p1, p2, p3, p4 = v4)","<p>Returns true if the given week date is valid, and false if not.\n\n<pre><code>Date.valid_commercial?(2001,5,6)  #=&gt; ...\n</code></pre>\n",null,0],["valid_date?","Date","Ruby/classes/Date.html#method-c-valid_date-3F","(p1, p2, p3, p4 = v4)","<p>Returns true if the given calendar date is valid, and false if not.\n\n<pre><code>Date.valid_date?(2001,2,3)        ...</code></pre>\n",null,0],["valid_encoding?","String","Ruby/classes/String.html#method-i-valid_encoding-3F","()","<p>Returns true for a string which encoded correctly.\n\n<pre><code>&quot;\\xc2\\xa1&quot;.force_encoding(&quot;UTF-8&quot;).valid_encoding? ...</code></pre>\n",null,0],["valid_jd?","Date","Ruby/classes/Date.html#method-c-valid_jd-3F","(p1, p2 = v2)","<p>Just returns true.  It&#39;s nonsense, but is for symmetry.\n\n<pre><code>Date.valid_jd?(2451944)           #=&gt; true\n</code></pre>\n",null,0],["valid_ordinal?","Date","Ruby/classes/Date.html#method-c-valid_ordinal-3F","(p1, p2, p3 = v3)","<p>Returns true if the given ordinal date is valid, and false if not.\n\n<pre><code>Date.valid_ordinal?(2001,34)      #=&gt; ...\n</code></pre>\n",null,0],["valid_type?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-valid_type-3F","(type)","",null,1],["valid_type?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-valid_type-3F","(type)","",null,1],["valid_type?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-valid_type-3F","(type)","",null,1],["validate","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-validate","(packaging = true)","<p>Checks that the specification contains all required fields, and does a very\nbasic sanity check.\n<p>Raises …\n",null,0],["validate","REXML::Validation::Validator","Ruby/classes/REXML/Validation/Validator.html#method-i-validate","( event )","",null,0],["validate","RSS::Element","Ruby/classes/RSS/Element.html#method-i-validate","(ignore_unknown_element=true)","",null,0],["validate","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validate","(*args, &block)","<p>Adds a validation method or block to the class. This is useful when\noverriding the <code>validate</code> instance …\n",null,1],["validate","ActiveModel::Validator","Rails/classes/ActiveModel/Validator.html#method-i-validate","(record)","<p>Override this method in subclasses with validation logic, adding errors to\nthe records <code>errors</code> array where …\n",null,1],["validate_digest_response","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-validate_digest_response","(request, realm, &password_procedure)","<p>Returns false unless the request credentials response value matches the\nexpected value. First try the …\n",null,1],["validate_duplicate_links","RSS::Atom::DuplicateLinkChecker","Ruby/classes/RSS/Atom/DuplicateLinkChecker.html#method-i-validate_duplicate_links","(links)","<p>Checks if there are duplicate links with the same type and hreflang\nattributes that have an alternate …\n",null,0],["validate_fallbacks","I18n::Railtie","Rails/classes/I18n/Railtie.html#method-c-validate_fallbacks","(fallbacks)","",null,1],["validate_for_stream","RSS::Element","Ruby/classes/RSS/Element.html#method-i-validate_for_stream","(tags, ignore_unknown_element=true)","",null,0],["validate_nonce","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-validate_nonce","(secret_key, request, value, seconds_to_timeout=5*60)","<p>Might want a shorter timeout depending on whether the request is a PATCH,\nPUT, or POST, and if client …\n",null,1],["validate_one_tag_name","RSS::ImageModelUtils","Ruby/classes/RSS/ImageModelUtils.html#method-i-validate_one_tag_name","(ignore_unknown_element, name, tags)","",null,0],["validate_options","HTML::Sanitizer","Rails/classes/HTML/Sanitizer.html#method-i-validate_options","(options)","",null,1],["validate_permissions","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-validate_permissions","()","<p>Checks to see if the files to be packaged are world-readable.\n",null,0],["validates","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates","(*attributes)","<p>This method is a shortcut to all default validators and any custom\nvalidator classes ending in &#39;Validator&#39;. …\n",null,1],["validates!","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates-21","(*attributes)","<p>This method is used to define validations that cannot be corrected by end\nusers and are considered exceptional. …\n",null,1],["validates_absence_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_absence_of","(*attr_names)","<p>Validates that the specified attributes are blank (as defined by\nObject#blank?). Happens by default on …\n",null,1],["validates_acceptance_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_acceptance_of","(*attr_names)","<p>Encapsulates the pattern of wanting to validate the acceptance of a terms\nof service check box (or similar …\n",null,1],["validates_associated","ActiveRecord::Validations::ClassMethods","Rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_associated","(*attr_names)","<p>Validates whether the associated object or objects are all valid. Works\nwith any kind of association. …\n",null,1],["validates_confirmation_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_confirmation_of","(*attr_names)","<p>Encapsulates the pattern of wanting to validate a password or email address\nfield with a confirmation. …\n",null,1],["validates_each","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates_each","(*attr_names, &block)","<p>Validates each attribute against a block.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Validations</span>\n\n  <span class=\"ruby-identifier\">attr_accessor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["validates_exclusion_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_exclusion_of","(*attr_names)","<p>Validates that the value of the specified attribute is not in a particular\nenumerable object.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["validates_format_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_format_of","(*attr_names)","<p>Validates whether the value of the specified attribute is of the correct\nform, going by the regular expression …\n",null,1],["validates_inclusion_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_inclusion_of","(*attr_names)","<p>Validates whether the value of the specified attribute is available in a\nparticular enumerable object. …\n",null,1],["validates_length_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_length_of","(*attr_names)","<p>Validates that the specified attribute matches the length restrictions\nsupplied. Only one option can …\n",null,1],["validates_numericality_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_numericality_of","(*attr_names)","<p>Validates whether the value of the specified attribute is numeric by trying\nto convert it to a float …\n",null,1],["validates_presence_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_presence_of","(*attr_names)","<p>Validates that the specified attributes are not blank (as defined by\nObject#blank?). Happens by default …\n",null,1],["validates_presence_of","ActiveRecord::Validations::ClassMethods","Rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_presence_of","(*attr_names)","<p>Validates that the specified attributes are not blank (as defined by\nObject#blank?), and, if the attribute …\n",null,1],["validates_size_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_size_of","(*attr_names)","",null,1],["validates_uniqueness_of","ActiveRecord::Validations::ClassMethods","Rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_uniqueness_of","(*attr_names)","<p>Validates whether the value of the specified attributes are unique across\nthe system. Useful for making …\n",null,1],["validates_with","ActiveModel::Validations","Rails/classes/ActiveModel/Validations.html#method-i-validates_with","(*args, &block)","<p>Passes the record off to the class or classes specified and allows them to\nadd errors based on more complex …\n",null,1],["validates_with","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates_with","(*args, &block)","<p>Passes the record off to the class or classes specified and allows them to\nadd errors based on more complex …\n",null,1],["validators","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validators","()","<p>List all validators that are being used to validate the model using\n<code>validates_with</code> method.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["validators_on","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validators_on","(*attributes)","<p>List all validators that are being used to validate a specific attribute.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Validations</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["value","CGI::Cookie","Ruby/classes/CGI/Cookie.html#method-i-value","()","<p>Returns the value or list of values for this cookie.\n",null,0],["value","DL::Importer","Ruby/classes/DL/Importer.html#method-i-value","(ty, val=nil)","",null,0],["value","Fiddle::Importer","Ruby/classes/Fiddle/Importer.html#method-i-value","(ty, val=nil)","",null,0],["value","Net::HTTPResponse","Ruby/classes/Net/HTTPResponse.html#method-i-value","()","<p>Raises an HTTP error if the response is not 2xx (success).\n",null,0],["value","OpenSSL::Config","Ruby/classes/OpenSSL/Config.html#method-i-value","(arg1, arg2 = nil)","",null,0],["value","OpenSSL::X509::Attribute","Ruby/classes/OpenSSL/X509/Attribute.html#method-i-value","()","",null,0],["value","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-i-value","()","",null,0],["value","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-value","()","<p>Returns the UNNORMALIZED value of this attribute.  That is, entities have\nbeen expanded to their values …\n",null,0],["value","REXML::CData","Ruby/classes/REXML/CData.html#method-i-value","()","",null,0],["value","REXML::Entity","Ruby/classes/REXML/Entity.html#method-i-value","()","<p>Returns the value of this entity.  At the moment, only internal entities\nare processed.  If the value …\n",null,0],["value","REXML::Text","Ruby/classes/REXML/Text.html#method-i-value","()","<p>Returns the string value of this text.  This is the text without entities,\nas it might be used programmatically, …\n",null,0],["value","Rinda::Tuple","Ruby/classes/Rinda/Tuple.html#method-i-value","()","<p>Return the tuple itself\n",null,0],["value","Rinda::TupleEntry","Ruby/classes/Rinda/TupleEntry.html#method-i-value","()","<p>Return the object which makes up the tuple itself: the Array or Hash.\n",null,0],["value","Thread","Ruby/classes/Thread.html#method-i-value","()","<p>Waits for <em>thr</em> to complete (via <code>Thread#join</code>) and\nreturns its value.\n\n<pre><code>a = Thread.new { 2 + 2 }\na.value   ...</code></pre>\n",null,0],["value","WIN32OLE_VARIABLE","Ruby/classes/WIN32OLE_VARIABLE.html#method-i-value","()","<p>Returns value if value is exists. If the value does not exist, this method\nreturns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</code></pre>\n",null,0],["value","WIN32OLE_VARIANT","Ruby/classes/WIN32OLE_VARIANT.html#method-i-value","()","<p>Returns Ruby object value from OLE variant.\n\n<pre><code>obj = WIN32OLE_VARIANT.new(1, WIN32OLE::VARIANT::VT_BSTR) ...</code></pre>\n",null,0],["value=","CGI::Cookie","Ruby/classes/CGI/Cookie.html#method-i-value-3D","(val)","<p>Replaces the value of this cookie with a new value or list of values.\n",null,0],["value=","OpenSSL::X509::Attribute","Ruby/classes/OpenSSL/X509/Attribute.html#method-i-value-3D","(p1)","",null,0],["value=","OpenSSL::X509::Extension","Ruby/classes/OpenSSL/X509/Extension.html#method-i-value-3D","(p1)","",null,0],["value=","REXML::Text","Ruby/classes/REXML/Text.html#method-i-value-3D","( val )","<p>Sets the contents of this text node.  This expects the text to be\nunnormalized.  It returns self.\n\n<pre><code>e = ...</code></pre>\n",null,0],["value=","RSS::ITunesItemModel::ITunesDuration","Ruby/classes/RSS/ITunesItemModel/ITunesDuration.html#method-i-value-3D","(value)","",null,0],["value=","WIN32OLE_VARIANT","Ruby/classes/WIN32OLE_VARIANT.html#method-i-value-3D","(p1)","<p>Sets variant value to val. If the val type does not match variant value\ntype(vartype), then val is changed …\n",null,0],["value?","DBM","Ruby/classes/DBM.html#method-i-value-3F","(p1)","<p>Returns true if the database contains the specified string value, false\notherwise.\n",null,0],["value?","ENV","Ruby/classes/ENV.html#method-c-value-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>value</code>.\n",null,0],["value?","GDBM","Ruby/classes/GDBM.html#method-i-value-3F","(p1)","<p>Returns true if the given value <em>v</em> exists within the database.\nReturns false otherwise.\n",null,0],["value?","Hash","Ruby/classes/Hash.html#method-i-value-3F","(p1)","<p>Returns <code>true</code> if the given value is present for some key in\n<em>hsh</em>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200 }\nh.has_value?(100) ...\n</code></pre>\n",null,0],["value?","SDBM","Ruby/classes/SDBM.html#method-i-value-3F","(p1)","<p>Returns <code>true</code> if the database contains the given\n<code>value</code>.\n",null,0],["values","DBM","Ruby/classes/DBM.html#method-i-values","()","<p>Returns an array of all the string values in the database.\n",null,0],["values","ENV","Ruby/classes/ENV.html#method-c-values","()","<p>Returns every environment variable value as an Array\n",null,0],["values","GDBM","Ruby/classes/GDBM.html#method-i-values","()","<p>Returns an array of all values of this database.\n",null,0],["values","Hash","Ruby/classes/Hash.html#method-i-values","()","<p>Returns a new array populated with the values from <em>hsh</em>. See also\n<code>Hash#keys</code>.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200, ...\n</code></pre>\n",null,0],["values","SDBM","Ruby/classes/SDBM.html#method-i-values","()","<p>Returns a new Array containing the values in the database.\n",null,0],["values","Struct","Ruby/classes/Struct.html#method-i-values","()","<p>Returns the values for this instance as an array.\n\n<pre><code>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</code></pre>\n",null,0],["values","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-values","()","<p>Returns an array of values from the database.\n",null,0],["values","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-values","()","<p>Returns all message values.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">messages</span> <span class=\"ruby-comment\"># =&gt; {:name=&gt;[&quot;can not be nil&quot;, &quot;must be specified&quot;]} ...</span>\n</pre>\n",null,1],["values","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-values","()","",null,1],["values","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-values","()","",null,1],["values_at","Array","Ruby/classes/Array.html#method-i-values_at","(*args)","<p>Returns an array containing the elements in <code>self</code> corresponding\nto the given <code>selector</code>(s).\n<p>The selectors …\n",null,0],["values_at","CSV::Row","Ruby/classes/CSV/Row.html#method-i-values_at","(*headers_and_or_indices)","",null,0],["values_at","CSV::Table","Ruby/classes/CSV/Table.html#method-i-values_at","(*indices_or_headers)","<p>The mixed mode default is to treat a list of indices as row access,\nreturning the rows indicated.  Anything …\n",null,0],["values_at","DBM","Ruby/classes/DBM.html#method-i-values_at","(*args)","<p>Returns an array containing the values associated with the given keys.\n",null,0],["values_at","ENV","Ruby/classes/ENV.html#method-c-values_at","(*args)","<p>Returns an array containing the environment variable values associated with\nthe given names.  See also …\n",null,0],["values_at","GDBM","Ruby/classes/GDBM.html#method-i-values_at","(*args)","<p>Returns an array of the values associated with each specified <em>key</em>.\n",null,0],["values_at","Hash","Ruby/classes/Hash.html#method-i-values_at","(*args)","<p>Return an array containing the values associated with the given keys. Also\nsee <code>Hash.select</code>.\n\n<pre><code>h = { &quot;cat&quot; ...</code></pre>\n",null,0],["values_at","MatchData","Ruby/classes/MatchData.html#method-i-values_at","(*args)","<p>Uses each <em>index</em> to access the matching values, returning an array\nof the corresponding matches.\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138: ...</code></pre>\n",null,0],["values_at","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-i-values_at","(*keys)","",null,0],["values_at","SDBM","Ruby/classes/SDBM.html#method-i-values_at","(*args)","<p>Returns an Array of values corresponding to the given keys.\n",null,0],["values_at","Struct","Ruby/classes/Struct.html#method-i-values_at","(*args)","<p>Returns an array containing the elements in <code>self</code> corresponding\nto the given selector(s). The selectors …\n",null,0],["values_at","YAML::DBM","Ruby/classes/YAML/DBM.html#method-i-values_at","( *keys )","<p>Returns an array containing the values associated with the given keys.\n",null,0],["values_at","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-values_at","(*indices)","<p>Returns an array of the values at the specified indices:\n\n<pre>hash = ActiveSupport::HashWithIndifferentAccess.new ...</pre>\n",null,1],["values_at","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-values_at","(*indices)","<p>Returns an array of the values at the specified indices:\n\n<pre>hash = ActiveSupport::HashWithIndifferentAccess.new ...</pre>\n",null,1],["values_at","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-values_at","(*list)","",null,1],["variable_is_set?","RSS::Maker::Base","Ruby/classes/RSS/Maker/Base.html#method-i-variable_is_set-3F","()","",null,0],["variable_kind","WIN32OLE_VARIABLE","Ruby/classes/WIN32OLE_VARIABLE.html#method-i-variable_kind","()","<p>Returns variable kind string.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;XlSheetType&#39;) ...</code></pre>\n",null,0],["variables","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-variables","()","",null,0],["variables","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-variables","()","<p>Returns array of WIN32OLE_VARIABLE objects which represent variables\ndefined in OLE class.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...</code></pre>\n",null,0],["variables=","REXML::Functions","Ruby/classes/REXML/Functions.html#method-c-variables-3D","(x)","",null,0],["variables=","REXML::XPathParser","Ruby/classes/REXML/XPathParser.html#method-i-variables-3D","( vars={} )","",null,0],["varkind","WIN32OLE_VARIABLE","Ruby/classes/WIN32OLE_VARIABLE.html#method-i-varkind","()","<p>Returns the number which represents variable kind.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object ...</code></pre>\n",null,0],["vartype","WIN32OLE_VARIANT","Ruby/classes/WIN32OLE_VARIANT.html#method-i-vartype","()","<p>Returns OLE variant type.\n\n<pre><code>obj = WIN32OLE_VARIANT.new(&quot;string&quot;)\nobj.vartype # =&gt; WIN32OLE::VARIANT::VT_BSTR\n</code></pre>\n",null,0],["vendor","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-vendor","()","",null,1],["vendor","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-vendor","(filename, data=nil, &block)","<p>Create a new file in the vendor/ directory. Code can be specified in a\nblock or a data string can be …\n",null,1],["vendor_javascripts","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-vendor_javascripts","()","",null,1],["vendor_stylesheets","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-vendor_stylesheets","()","",null,1],["ver","BigDecimal","Ruby/classes/BigDecimal.html#method-c-ver","()","<p>Returns the BigDecimal version number.\n",null,0],["ver","OptionParser","Ruby/classes/OptionParser.html#method-i-ver","()","<p>Returns version string from program_name, version and release.\n",null,0],["verb","ActionDispatch::Routing::RouteWrapper","Rails/classes/ActionDispatch/Routing/RouteWrapper.html#method-i-verb","()","",null,1],["verbose","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-i-verbose","()","<p>Get whether the server is in verbose mode.\n<p>In verbose mode, failed calls are logged to stdout.\n",null,0],["verbose","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-c-verbose","()","<p>Get the default value of the :verbose option.\n",null,0],["verbose","Rake::FileUtilsExt","Ruby/classes/Rake/FileUtilsExt.html#method-i-verbose","(value=nil)","<p>Get/set the verbose flag controlling output from the FileUtils utilities. \nIf verbose is true, then the …\n",null,0],["verbose","Sys","Ruby/classes/Sys.html#method-i-verbose","(&block)","<p>Perform a block with $verbose enabled.\n",null,0],["verbose=","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-i-verbose-3D","(v)","<p>Set whether to operate in verbose mode.\n<p>In verbose mode, failed calls are logged to stdout.\n",null,0],["verbose=","DRb::DRbServer","Ruby/classes/DRb/DRbServer.html#method-c-verbose-3D","(on)","<p>Set the default value of the :verbose option.\n<p>See #new().  The initial default value is false.\n",null,0],["verbose?","IRB::Context","Ruby/classes/IRB/Context.html#method-i-verbose-3F","()","<p>Returns whether messages are displayed or not.\n",null,0],["verified_request?","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-verified_request-3F","()","<p>Returns true or false if a request is verified. Checks:\n<p>is it a GET or HEAD request?  Gets should be safe …\n",null,1],["verify","Gem::Package","Ruby/classes/Gem/Package.html#method-i-verify","()","<p>Verifies that this gem:\n<p>Contains a valid gem specification\n<p>Contains a contents archive\n",null,0],["verify","Gem::Package::Old","Ruby/classes/Gem/Package/Old.html#method-i-verify","()","<p>Raises an exception if a security policy that verifies data is active. Old\nformat gems cannot be verified …\n",null,0],["verify","Gem::Security::Policy","Ruby/classes/Gem/Security/Policy.html#method-i-verify","(chain, key = nil, digests = {})","<p>Verifies the certificate <code>chain</code> is valid, the\n<code>digests</code> match the signatures <code>signatures</code> created\nby the signer …\n",null,0],["verify","Gem::Security::TrustDir","Ruby/classes/Gem/Security/TrustDir.html#method-i-verify","()","<p>Make sure the trust directory exists.  If it does exist, make sure it&#39;s\nactually a directory.  If …\n",null,0],["verify","Net::POP3","Ruby/classes/Net/POP3.html#method-c-verify","()","<p>returns whether verify_mode is enable from POP3.ssl_params\n",null,0],["verify","OpenSSL::Netscape::SPKI","Ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-verify","(p1)","<p>Parameters\n<p><code>key</code> - the public key to be used for verifying the SPKI\nsignature\n\n<p>Returns <code>true</code> if the signature …\n",null,0],["verify","OpenSSL::OCSP::BasicResponse","Ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-verify","(p1, p2, p3 = v3)","",null,0],["verify","OpenSSL::OCSP::Request","Ruby/classes/OpenSSL/OCSP/Request.html#method-i-verify","(p1, p2, p3 = v3)","",null,0],["verify","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-i-verify","(p1, p2, p3 = v3, p4 = v4)","",null,0],["verify","OpenSSL::PKey::PKey","Ruby/classes/OpenSSL/PKey/PKey.html#method-i-verify","(p1, p2, p3)","<p>To verify the <code>String</code> <code>signature</code>,\n<code>digest</code>, an instance of OpenSSL::Digest, must be provided to\nre-compute …\n",null,0],["verify","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-verify","(p1)","",null,0],["verify","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-verify","(p1)","<p>Checks that cert signature is made with PRIVversion of this PUBLIC\n&#39;key&#39;\n",null,0],["verify","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-verify","(p1)","<p>Checks that cert signature is made with PRIVversion of this PUBLIC\n&#39;key&#39;\n",null,0],["verify","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-verify","(p1, p2 = v2)","",null,0],["verify","ActiveSupport::MessageVerifier","Rails/classes/ActiveSupport/MessageVerifier.html#method-i-verify","(signed_message)","",null,1],["verify!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-verify-21","(*ignored)","<p>Checks whether the connection to the database is still active (i.e. not\nstale). This is done under the …\n",null,1],["verify_and_upgrade_legacy_signed_message","ActionDispatch::Cookies::VerifyAndUpgradeLegacySignedMessage","Rails/classes/ActionDispatch/Cookies/VerifyAndUpgradeLegacySignedMessage.html#method-i-verify_and_upgrade_legacy_signed_message","(name, signed_message)","",null,1],["verify_api_key","Gem::GemcutterUtilities","Ruby/classes/Gem/GemcutterUtilities.html#method-i-verify_api_key","(key)","",null,0],["verify_authenticity_token","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-verify_authenticity_token","()","<p>The actual before_action that is used. Modify this to change how you handle\nunverified requests.\n",null,1],["verify_callback=","OpenSSL::X509::Store","Ruby/classes/OpenSSL/X509/Store.html#method-i-verify_callback-3D","(p1)","<p>General callback for OpenSSL verify\n",null,0],["verify_files","Gem::Package","Ruby/classes/Gem/Package.html#method-i-verify_files","(gem)","<p>Verifies the files of the <code>gem</code>\n",null,0],["verify_gem","Gem::Validator","Ruby/classes/Gem/Validator.html#method-i-verify_gem","(gem_data)","<p>Given a gem file&#39;s contents, validates against its own MD5 checksum\n<p>gem_data &mdash; <p>String &mdash; Contents of the …\n\n\n",null,0],["verify_gem_file","Gem::Validator","Ruby/classes/Gem/Validator.html#method-i-verify_gem_file","(gem_path)","<p>Given the path to a gem file, validates against its own MD5 checksum\n<p>gem_path &mdash; <p>String &mdash; Path to gem file …\n\n\n",null,0],["verify_gem_home","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-verify_gem_home","(unpack = false)","<p>DOC: Missing docs or :nodoc:.\n",null,0],["verify_request?","Mime::Type","Rails/classes/Mime/Type.html#method-i-verify_request-3F","()","<p>Returns true if Action Pack should check requests using this Mime Type for\npossible request forgery. …\n",null,1],["verify_result","OpenSSL::SSL::SSLSocket","Ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-verify_result","()","<p>Returns the result of the peer certificates verification.  See verify(1)\nfor error values and descriptions. …\n",null,0],["verify_signatures","Gem::Security::Policy","Ruby/classes/Gem/Security/Policy.html#method-i-verify_signatures","(spec, digests, signatures)","<p>Extracts the certificate chain from the <code>spec</code> and calls #verify\nto ensure the signatures and certificate …\n",null,0],["version","ERB","Ruby/classes/ERB.html#method-c-version","()","<p>Returns revision information for the erb.rb module.\n",null,0],["version","Gem::DependencyResolver::ActivationRequest","Ruby/classes/Gem/DependencyResolver/ActivationRequest.html#method-i-version","()","",null,0],["version","IRB","Ruby/classes/IRB.html#method-c-version","()","<p>Returns the current version of IRB, including release version and last\nupdated date.\n",null,0],["version","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-version","()","",null,0],["version","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-version","()","",null,0],["version","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-version","()","",null,0],["version","OptionParser","Ruby/classes/OptionParser.html#method-i-version","()","<p>Version\n",null,0],["version","REXML::Document","Ruby/classes/REXML/Document.html#method-i-version","()","<p>@return the XMLDecl version of this document as a String. If no XMLDecl has\nbeen set, returns the default …\n",null,0],["version","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-version","()","<p>Returns the type library version.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;)\nputs ...</code></pre>\n",null,0],["version","ActionMailer","Rails/classes/ActionMailer.html#method-c-version","()","<p>Returns the version of the currently loaded ActionMailer as a Gem::Version\n",null,1],["version","ActionPack","Rails/classes/ActionPack.html#method-c-version","()","<p>Returns the version of the currently loaded ActionPack as a Gem::Version\n",null,1],["version","ActiveModel","Rails/classes/ActiveModel.html#method-c-version","()","<p>Returns the version of the currently loaded ActiveModel as a Gem::Version\n",null,1],["version","ActiveRecord","Rails/classes/ActiveRecord.html#method-c-version","()","<p>Returns the version of the currently loaded ActiveRecord as a Gem::Version\n",null,1],["version","ActiveRecord::SchemaMigration","Rails/classes/ActiveRecord/SchemaMigration.html#method-i-version","()","",null,1],["version","ActiveSupport","Rails/classes/ActiveSupport.html#method-c-version","()","<p>Returns the version of the currently loaded ActiveSupport as a Gem::Version\n",null,1],["version","Rails","Rails/classes/Rails.html#method-c-version","()","",null,1],["version=","Gem::Specification","Ruby/classes/Gem/Specification.html#method-i-version-3D","(version)","<p>Set the version to <code>version</code>, potentially also setting\nrequired_rubygems_version if <code>version</code> indicates it …\n",null,0],["version=","OpenSSL::X509::CRL","Ruby/classes/OpenSSL/X509/CRL.html#method-i-version-3D","(p1)","",null,0],["version=","OpenSSL::X509::Certificate","Ruby/classes/OpenSSL/X509/Certificate.html#method-i-version-3D","(p1)","",null,0],["version=","OpenSSL::X509::Request","Ruby/classes/OpenSSL/X509/Request.html#method-i-version-3D","(p1)","",null,0],["version_1_2","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-version_1_2","()","<p>Turns on net/http 1.2 (ruby 1.8) features. Defaults to ON in ruby 1.8 or\nlater.\n",null,0],["version_1_2?","Net::HTTP","Ruby/classes/Net/HTTP.html#method-c-version_1_2-3F","()","<p>Returns true if net/http is in version 1.2 mode. Defaults to true.\n",null,0],["versions","Gem::DependencyResolver::APISet","Ruby/classes/Gem/DependencyResolver/APISet.html#method-i-versions","(name)","<p>Return data for all versions of the gem <code>name</code>.\n",null,0],["versions","RSS::Maker","Ruby/classes/RSS/Maker.html#method-i-versions","()","<p>Returns collection of supported maker versions\n",null,0],["vi_editing_mode","Readline","Ruby/classes/Readline.html#method-c-vi_editing_mode","()","<p>Specifies VI editing mode. See the manual of GNU Readline for details of VI\nediting mode.\n<p>Raises NotImplementedError …\n",null,0],["vi_editing_mode?","Readline","Ruby/classes/Readline.html#method-c-vi_editing_mode-3F","()","<p>Returns true if vi mode is active. Returns false if not.\n<p>Raises NotImplementedError if the using readline …\n",null,0],["video_path","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-video_path","(source, options = {})","<p>Computes the path to a video asset in the public videos directory. Full\npaths from the document root …\n",null,1],["video_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-video_tag","(*sources)","<p>Returns an html video tag for the <code>sources</code>. If\n<code>sources</code> is a string, a single video tag will be returned. …\n",null,1],["video_url","ActionView::Helpers::AssetUrlHelper","Rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-video_url","(source, options = {})","<p>Computes the full URL to a video asset in the public videos directory. This\nwill use <code>video_path</code> internally, …\n",null,1],["view_assigns","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-view_assigns","()","<p>This method should return a hash with assigns. You can overwrite this\nconfiguration per controller. :api: …\n",null,1],["view_cache_dependencies","ActionController::Caching","Rails/classes/ActionController/Caching.html#method-i-view_cache_dependencies","()","",null,1],["view_cache_dependency","ActionController::Caching::ClassMethods","Rails/classes/ActionController/Caching/ClassMethods.html#method-i-view_cache_dependency","(&dependency)","",null,1],["view_context","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-view_context","()","<p>An instance of a view class. The default view class is ActionView::Base\n<p>The view class must have the following …\n",null,1],["view_context_class","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-view_context_class","()","",null,1],["view_context_class","AbstractController::Rendering::ClassMethods","Rails/classes/AbstractController/Rendering/ClassMethods.html#method-i-view_context_class","()","",null,1],["view_paths","AbstractController::ViewPaths::ClassMethods","Rails/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-view_paths","()","<p>A list of all of the default view paths for this controller.\n",null,1],["view_paths=","AbstractController::ViewPaths::ClassMethods","Rails/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-view_paths-3D","(paths)","<p>Set the view paths.\n<p>Parameters\n<p><code>paths</code> - If a PathSet is provided, use that; otherwise, process\nthe parameter …\n",null,1],["view_paths=","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-view_paths-3D","(paths)","<p>Whenever setting view paths, makes a copy so we can manipulate then in\ninstance objects as we wish.\n",null,1],["view_renderer","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-view_renderer","()","<p>Returns an object that is able to render templates.\n",null,1],["virtual_host","WEBrick::HTTPServer","Ruby/classes/WEBrick/HTTPServer.html#method-i-virtual_host","(server)","<p>Adds <code>server</code> as a virtual host.\n",null,0],["visible?","WIN32OLE_METHOD","Ruby/classes/WIN32OLE_METHOD.html#method-i-visible-3F","()","<p>Returns true if the method is public.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbooks&#39;) ...</code></pre>\n",null,0],["visible?","WIN32OLE_TYPE","Ruby/classes/WIN32OLE_TYPE.html#method-i-visible-3F","()","<p>Returns true if the OLE class is public.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</code></pre>\n",null,0],["visible?","WIN32OLE_TYPELIB","Ruby/classes/WIN32OLE_TYPELIB.html#method-i-visible-3F","()","<p>Returns true if the type library information is not hidden. If wLibFlags of\nTLIBATTR is 0 or LIBFLAG_FRESTRICTED …\n",null,0],["visible?","WIN32OLE_VARIABLE","Ruby/classes/WIN32OLE_VARIABLE.html#method-i-visible-3F","()","<p>Returns true if the variable is public.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...</code></pre>\n",null,0],["visible_action?","ActionController::HideActions::ClassMethods","Rails/classes/ActionController/HideActions/ClassMethods.html#method-i-visible_action-3F","(action_name)","",null,1],["visit_Array","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Array","(o)","",null,0],["visit_BigDecimal","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_BigDecimal","(o)","",null,0],["visit_Class","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Class","(o)","",null,0],["visit_Complex","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Complex","(o)","",null,0],["visit_Date","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Date","(o)","",null,0],["visit_DateTime","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_DateTime","(o)","",null,0],["visit_Exception","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Exception","(o)","",null,0],["visit_FalseClass","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_FalseClass","(o)","",null,0],["visit_Float","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Float","(o)","",null,0],["visit_Hash","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Hash","(o)","",null,0],["visit_Integer","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Integer","(o)","",null,0],["visit_Module","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Module","(o)","",null,0],["visit_NilClass","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_NilClass","(o)","",null,0],["visit_Object","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Object","(o)","",null,0],["visit_Psych_Nodes_Alias","Psych::Visitors::Emitter","Ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Alias","(o)","",null,0],["visit_Psych_Nodes_Alias","Psych::Visitors::ToRuby","Ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Alias","(o)","",null,0],["visit_Psych_Nodes_Document","Psych::Visitors::Emitter","Ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Document","(o)","",null,0],["visit_Psych_Nodes_Document","Psych::Visitors::ToRuby","Ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Document","(o)","",null,0],["visit_Psych_Nodes_Mapping","Psych::Visitors::Emitter","Ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Mapping","(o)","",null,0],["visit_Psych_Nodes_Mapping","Psych::Visitors::ToRuby","Ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Mapping","(o)","",null,0],["visit_Psych_Nodes_Scalar","Psych::Visitors::Emitter","Ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Scalar","(o)","",null,0],["visit_Psych_Nodes_Scalar","Psych::Visitors::ToRuby","Ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Scalar","(o)","",null,0],["visit_Psych_Nodes_Sequence","Psych::Visitors::Emitter","Ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Sequence","(o)","",null,0],["visit_Psych_Nodes_Sequence","Psych::Visitors::ToRuby","Ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Sequence","(o)","",null,0],["visit_Psych_Nodes_Stream","Psych::Visitors::Emitter","Ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Stream","(o)","",null,0],["visit_Psych_Nodes_Stream","Psych::Visitors::ToRuby","Ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Stream","(o)","",null,0],["visit_Psych_Omap","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Psych_Omap","(o)","",null,0],["visit_Psych_Set","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Psych_Set","(o)","",null,0],["visit_Range","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Range","(o)","",null,0],["visit_Rational","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Rational","(o)","",null,0],["visit_Regexp","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Regexp","(o)","",null,0],["visit_String","Gem::NoAliasYAMLTree","Ruby/classes/Gem/NoAliasYAMLTree.html#method-i-visit_String","(str)","",null,0],["visit_String","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_String","(o)","",null,0],["visit_Struct","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Struct","(o)","",null,0],["visit_Symbol","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Symbol","(o)","",null,0],["visit_Time","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Time","(o)","",null,0],["visit_TrueClass","Psych::Visitors::YAMLTree","Ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_TrueClass","(o)","",null,0],["voidcmd","Net::FTP","Ruby/classes/Net/FTP.html#method-i-voidcmd","(cmd)","<p>Sends a command and expect a response beginning with &#39;2&#39;.\n",null,0],["w3cdtf","Time","Ruby/classes/Time.html#method-i-w3cdtf","(date)","",null,0],["wait","ConditionVariable","Ruby/classes/ConditionVariable.html#method-i-wait","(mutex, timeout=nil)","<p>Releases the lock held in <code>mutex</code> and waits; reacquires the lock\non wakeup.\n<p>If <code>timeout</code> is given, this method …\n",null,0],["wait","IO","Ruby/classes/IO.html#method-i-wait","(p1 = v1)","<p>Waits until input is available or times out and returns self or nil when\nEOF is reached.\n",null,0],["wait","MonitorMixin::ConditionVariable","Ruby/classes/MonitorMixin/ConditionVariable.html#method-i-wait","(timeout = nil)","<p>Releases the lock held in the associated monitor and waits; reacquires the\nlock on wakeup.\n<p>If <code>timeout</code> …\n",null,0],["wait","Process","Ruby/classes/Process.html#method-c-wait","(p1 = v1, p2 = v2)","<p>Waits for a child process to exit, returns its process id, and sets\n<code>$?</code> to a <code>Process::Status</code> object containing …\n",null,0],["wait","Rinda::WaitTemplateEntry","Ruby/classes/Rinda/WaitTemplateEntry.html#method-i-wait","()","",null,0],["wait","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-wait","()","<p>This is a sync queue, so there is no waiting.\n",null,1],["wait2","Process","Ruby/classes/Process.html#method-c-wait2","(*args)","<p>Waits for a child process to exit (see Process::waitpid for exact\nsemantics) and returns an array containing …\n",null,0],["wait?","Shell::BuiltInCommand","Ruby/classes/Shell/BuiltInCommand.html#method-i-wait-3F","()","",null,0],["wait?","Shell::SystemCommand","Ruby/classes/Shell/SystemCommand.html#method-i-wait-3F","()","",null,0],["wait_all_jobs_execution","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-wait_all_jobs_execution","()","<p>wait for all jobs to terminate\n",null,0],["wait_readable","IO","Ruby/classes/IO.html#method-i-wait_readable","(p1 = v1)","<p>Waits until input is available or times out and returns self or nil when\nEOF is reached.\n",null,0],["wait_to_finish_all_process_controllers","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-wait_to_finish_all_process_controllers","()","",null,0],["wait_until","MonitorMixin::ConditionVariable","Ruby/classes/MonitorMixin/ConditionVariable.html#method-i-wait_until","()","<p>Calls wait repeatedly until the given block yields a truthy value.\n",null,0],["wait_while","MonitorMixin::ConditionVariable","Ruby/classes/MonitorMixin/ConditionVariable.html#method-i-wait_while","()","<p>Calls wait repeatedly while the given block yields a truthy value.\n",null,0],["wait_writable","IO","Ruby/classes/IO.html#method-i-wait_writable","(p1 = v1)","<p>Waits until IO writable is available or times out and returns self or nil\nwhen EOF is reached.\n",null,0],["wait_writable","Object","Ruby/classes/Object.html#method-i-wait_writable","()","<p>Wait until the file becomes writable.\n\n<pre><code>ruby -run -e wait_writable -- [OPTION] FILE\n\n-n RETRY    count to ...</code></pre>\n",null,0],["waitall","Process","Ruby/classes/Process.html#method-c-waitall","()","<p>Waits for all children, returning an array of <em>pid</em>/<em>status</em>\npairs (where <em>status</em> is a <code>Process::Status</code> object). …\n",null,0],["waitfor","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-waitfor","(options)","<p>Read data from the host until a certain sequence is matched.\n<p>If a block is given, the received data will …\n",null,0],["waiting","DEBUGGER__","Ruby/classes/DEBUGGER__.html#method-i-waiting","()","<p>Returns the list of waiting threads.\n<p>When stepping through the traces of a function, thread gets suspended, …\n",null,0],["waiting_job?","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-waiting_job-3F","(job)","",null,0],["waiting_jobs","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-waiting_jobs","()","",null,0],["waiting_jobs_exist?","Shell::ProcessController","Ruby/classes/Shell/ProcessController.html#method-i-waiting_jobs_exist-3F","()","",null,0],["waitpid","Process","Ruby/classes/Process.html#method-c-waitpid","(p1 = v1, p2 = v2)","<p>Waits for a child process to exit, returns its process id, and sets\n<code>$?</code> to a <code>Process::Status</code> object containing …\n",null,0],["waitpid2","Process","Ruby/classes/Process.html#method-c-waitpid2","(*args)","<p>Waits for a child process to exit (see Process::waitpid for exact\nsemantics) and returns an array containing …\n",null,0],["wakeup","Thread","Ruby/classes/Thread.html#method-i-wakeup","()","<p>Marks <em>thr</em> as eligible for scheduling (it may still remain blocked\non I/O, however). Does not invoke the …\n",null,0],["warn","Kernel","Ruby/classes/Kernel.html#method-i-warn","(*args)","<p>Displays each of the given messages followed by a record separator on\nSTDERR unless warnings have been …\n",null,0],["warn","Logger","Ruby/classes/Logger.html#method-i-warn","(progname = nil, &block)","<p>Log a <code>WARN</code> message.\n<p>See #info for more information.\n",null,0],["warn","OptionParser","Ruby/classes/OptionParser.html#method-i-warn","(mesg = $!)","",null,0],["warn","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-warn","(message)","<p>Displays a warning using Kernel#warn if we&#39;re being verbose\n",null,0],["warn","RDoc::Parser::Ruby","Ruby/classes/RDoc/Parser/Ruby.html#method-i-warn","(message)","<p>Prints <code>message</code> to +$stderr+ unless we&#39;re being quiet\n",null,0],["warn","Syslog::Logger","Ruby/classes/Syslog/Logger.html#method-i-warn","","<p>Logs a <code>message</code> at the warn (syslog notice) log level, or logs\nthe message returned from the block.\n",null,0],["warn","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-warn","(msg)","<p>Shortcut for logging a WARN message\n",null,0],["warn","ActiveSupport::Deprecation::Reporting","Rails/classes/ActiveSupport/Deprecation/Reporting.html#method-i-warn","(message = nil, callstack = nil)","<p>Outputs a deprecation warning to the output configured by\n<code>ActiveSupport::Deprecation.behavior</code>.\n\n<pre>ActiveSupport::Deprecation.warn(&#39;something ...</pre>\n",null,1],["warn?","Logger","Ruby/classes/Logger.html#method-i-warn-3F","()","<p>Returns <code>true</code> iff the current severity level allows for the\nprinting of <code>WARN</code> messages.\n",null,0],["warn?","WEBrick::BasicLog","Ruby/classes/WEBrick/BasicLog.html#method-i-warn-3F","()","<p>Will the logger output WARN messages?\n",null,0],["watch","ActiveSupport::FileWatcher","Rails/classes/ActiveSupport/FileWatcher.html#method-i-watch","(pattern, &block)","",null,1],["watch_namespaces","ActiveSupport::Dependencies::WatchStack","Rails/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-watch_namespaces","(namespaces)","<p>Add a set of modules to the watch stack, remembering the initial constants.\n",null,1],["watchable_dirs","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-watchable_dirs","()","<p>Add directories that should be watched for change. The key of the hashes\nshould be directories and the …\n",null,1],["watchable_files","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-watchable_files","()","<p>Add files that should be watched for change.\n",null,1],["watching?","ActiveSupport::Dependencies::WatchStack","Rails/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-watching-3F","()","",null,1],["wday","Date","Ruby/classes/Date.html#method-i-wday","()","<p>Returns the day of week (0-6, Sunday is zero).\n\n<pre><code>Date.new(2001,2,3).wday           #=&gt; 6\n</code></pre>\n",null,0],["wday","Time","Ruby/classes/Time.html#method-i-wday","()","<p>Returns an integer representing the day of the week, 0..6, with Sunday ==\n0.\n\n<pre><code>t = Time.now   #=&gt; 2007-11-20 ...\n</code></pre>\n",null,0],["weakref_alive?","WeakRef","Ruby/classes/WeakRef.html#method-i-weakref_alive-3F","()","<p>Returns true if the referenced object is still alive.\n",null,0],["wednesday?","Date","Ruby/classes/Date.html#method-i-wednesday-3F","()","<p>Returns true if the date is Wednesday.\n",null,0],["wednesday?","Time","Ruby/classes/Time.html#method-i-wednesday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Wednesday.\n\n<pre><code>t = Time.local(1993, 2, 24)      #=&gt; 1993-02-24 00:00:00 -0600 ...\n</code></pre>\n",null,0],["week","Numeric","Rails/classes/Numeric.html#method-i-week","()","",null,1],["week_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-week_field","(object_name, method, options = {})","<p>Returns a text_field of type “week”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">week_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;born_on&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_born_on&quot; ...</span>\n</pre>\n",null,1],["week_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-week_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “week”.\n<p>Options\n<p><code>:min</code> - The minimum acceptable value.\n",null,1],["weeks","Numeric","Rails/classes/Numeric.html#method-i-weeks","()","",null,1],["weeks_ago","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-weeks_ago","(weeks)","<p>Returns a new date/time the specified number of weeks ago.\n",null,1],["weeks_since","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-weeks_since","(weeks)","<p>Returns a new date/time the specified number of weeks in the future.\n",null,1],["when_invoked","Gem::Command","Ruby/classes/Gem/Command.html#method-i-when_invoked","(&block)","<p>Call the given block when invoked.\n<p>Normal command invocations just executes the <code>execute</code> method of\nthe …\n",null,0],["when_writing","Rake::FileUtilsExt","Ruby/classes/Rake/FileUtilsExt.html#method-i-when_writing","(msg=nil)","<p>Use this function to prevent potentially destructive ruby code from running\nwhen the :nowrite flag is …\n",null,0],["where","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-where","(opts = :chain, *rest)","<p>Returns a new relation, which is the result of filtering the current\nrelation according to the conditions …\n",null,1],["where_values_hash","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-where_values_hash","()","<p>Returns a hash of where conditions.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">where</span>(<span class=\"ruby-identifier\">name</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-string\">&#39;Oscar&#39;</span>).<span class=\"ruby-identifier\">where_values_hash</span>\n<span class=\"ruby-comment\"># =&gt; {name: &quot;Oscar&quot;}</span>\n</pre>\n",null,1],["which_to_update","Gem::Commands::UpdateCommand","Ruby/classes/Gem/Commands/UpdateCommand.html#method-i-which_to_update","(highest_installed_gems, gem_names, system = false)","",null,0],["whiny_nils=","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-whiny_nils-3D","(*)","",null,1],["whitespace","REXML::Element","Ruby/classes/REXML/Element.html#method-i-whitespace","()","<p>Evaluates to <code>true</code> if whitespace is respected for this element.\nThis is the case if:\n<p>Neither :<code>respect_whitespace</code> …\n",null,0],["why_not_ok?","Gem::DependencyList","Ruby/classes/Gem/DependencyList.html#method-i-why_not_ok-3F","(quick = false)","",null,0],["win32_last_error","DL::CFunc","Ruby/classes/DL/CFunc.html#method-c-win32_last_error","()","<p>Returns the last win32 error for the current executing thread\n",null,0],["win32_last_error","Fiddle","Ruby/classes/Fiddle.html#method-c-win32_last_error","()","<p>Returns the last win32 <code>Error</code> of the current executing\n<code>Thread</code> or nil if none\n",null,0],["win32_last_error=","Fiddle","Ruby/classes/Fiddle.html#method-c-win32_last_error-3D","(error)","<p>Sets the last win32 <code>Error</code> of the current executing\n<code>Thread</code> to <code>error</code>\n",null,0],["win_platform?","Gem","Ruby/classes/Gem.html#method-c-win_platform-3F","()","<p>Is this a windows platform?\n",null,0],["windows?","Rake::Application","Ruby/classes/Rake/Application.html#method-i-windows-3F","()","",null,0],["windows?","Rake::Application","Ruby/classes/Rake/Application.html#method-i-windows-3F","()","",null,0],["windows?","Rake::Win32","Ruby/classes/Rake/Win32.html#method-i-windows-3F","()","<p>True if running on a windows system.\n",null,0],["windows_stub_script","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-windows_stub_script","(bindir, bin_file_name)","<p>return the stub script text used to launch the true ruby script\n",null,0],["winsize","IO","Ruby/classes/IO.html#method-i-winsize","()","<p>Returns console size.\n<p>You must require &#39;io/console&#39; to use this method.\n",null,0],["winsize=","IO","Ruby/classes/IO.html#method-i-winsize-3D","(p1)","<p>Tries to set console size.  The effect depends on the platform and the\nrunning environment.\n<p>You must require …\n",null,0],["with","OptionParser","Ruby/classes/OptionParser.html#method-c-with","(*args, &block)","<p>Initializes a new instance and evaluates the optional block in context of\nthe instance. Arguments <code>args</code> …\n",null,0],["with","AbstractController::Railties::RoutesHelpers","Rails/classes/AbstractController/Railties/RoutesHelpers.html#method-c-with","(routes)","",null,1],["with_backend","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-with_backend","(name)","",null,1],["with_backend","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-with_backend","(name)","",null,1],["with_config","MakeMakefile","Ruby/classes/MakeMakefile.html#method-i-with_config","(config, default=nil)","<p>Tests for the presence of a <code>--with-</code><em>config</em> or\n<code>--without-</code><em>config</em> option.  Returns <code>true</code>\nif the with option …\n",null,0],["with_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-with_connection","()","<p>If a connection already exists yield it to the block. If no connection\nexists checkout a connection, …\n",null,1],["with_default_scope","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-with_default_scope","(scope, &block)","",null,1],["with_defaults","Rake::TaskArguments","Ruby/classes/Rake/TaskArguments.html#method-i-with_defaults","(defaults)","<p>Specify a hash of default values for task arguments. Use the defaults only\nif there is no specific value …\n",null,0],["with_exclusive_scope","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-with_exclusive_scope","()","",null,1],["with_fallbacks","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-with_fallbacks","()","<p>Add fallbacks to the view paths. Useful in cases you are rendering a :file.\n",null,1],["with_index","Enumerator","Ruby/classes/Enumerator.html#method-i-with_index","(p1 = v1)","<p>Iterates the given block for each element with an index, which starts from\n<code>offset</code>.  If no block is given, …\n",null,0],["with_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_indifferent_access","()","",null,1],["with_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_indifferent_access","()","",null,1],["with_indifferent_access","Hash","Rails/classes/Hash.html#method-i-with_indifferent_access","()","<p>Returns an <code>ActiveSupport::HashWithIndifferentAccess</code> out of its\nreceiver:\n\n<pre>{ a: 1 }.with_indifferent_access[&#39;a&#39;] ...</pre>\n",null,1],["with_local_cache","ActiveSupport::Cache::Strategy::LocalCache","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache.html#method-i-with_local_cache","()","<p>Use a local cache for the duration of block.\n",null,1],["with_lock","ActiveRecord::Locking::Pessimistic","Rails/classes/ActiveRecord/Locking/Pessimistic.html#method-i-with_lock","(lock = true)","<p>Wraps the passed block in a transaction, locking the object before\nyielding. You pass can the SQL locking …\n",null,1],["with_object","Enumerator","Ruby/classes/Enumerator.html#method-i-with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object,\n<code>obj</code>, and returns <code>obj</code>\n<p>If no block is …\n",null,0],["with_object","Prime::PseudoPrimeGenerator","Ruby/classes/Prime/PseudoPrimeGenerator.html#method-i-with_object","(obj)","<p>see <code>Enumerator</code>#with_object.\n",null,0],["with_options","Object","Rails/classes/Object.html#method-i-with_options","(options)","<p>An elegant way to factor duplication out of options passed to a series of\nmethod calls. Each method called …\n",null,1],["with_response","Gem::GemcutterUtilities","Ruby/classes/Gem/GemcutterUtilities.html#method-i-with_response","(resp, error_prefix = nil)","",null,0],["with_scope_level","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-with_scope_level","(kind, resource = parent_resource)","",null,1],["with_transaction_returning_status","ActiveRecord::Transactions","Rails/classes/ActiveRecord/Transactions.html#method-i-with_transaction_returning_status","()","<p>Executes <code>method</code> within a transaction and captures its return\nvalue as a status flag. If the status is …\n",null,1],["with_warnings","Kernel","Rails/classes/Kernel.html#method-i-with_warnings","(flag)","<p>Sets $VERBOSE for the duration of the block and back to its original value\nafterwards.\n",null,1],["without_modules","ActionController::Base","Rails/classes/ActionController/Base.html#method-c-without_modules","(*modules)","<p>Shortcut helper that returns all the modules included in\nActionController::Base except the ones passed …\n",null,1],["without_prepared_statement?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-without_prepared_statement-3F","(binds)","",null,1],["word_wrap","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-word_wrap","(text, options = {})","<p>Wraps the <code>text</code> into lines no longer than\n<code>line_width</code> width. This method breaks on the first whitespace …\n",null,1],["wordy","Gem::PlatformMismatch","Ruby/classes/Gem/PlatformMismatch.html#method-i-wordy","()","<p>A wordy description of the error.\n",null,0],["wordy","Gem::SourceFetchProblem","Ruby/classes/Gem/SourceFetchProblem.html#method-i-wordy","()","",null,0],["workspaces","IRB::Context","Ruby/classes/IRB/Context.html#method-i-workspaces","()","<p>WorkSpaces in the current stack\n",null,0],["world_readable?","File","Ruby/classes/File.html#method-c-world_readable-3F","(p1)","<p>If <em>file_name</em> is readable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,0],["world_readable?","File::Stat","Ruby/classes/File/Stat.html#method-i-world_readable-3F","()","<p>If <em>stat</em> is readable by others, returns an integer representing the\nfile permission bits of <em>stat</em>. Returns …\n",null,0],["world_readable?","FileTest","Ruby/classes/FileTest.html#method-i-world_readable-3F","(p1)","<p>If <em>file_name</em> is readable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,0],["world_readable?","Pathname","Ruby/classes/Pathname.html#method-i-world_readable-3F","()","<p>See FileTest.world_readable?.\n",null,0],["world_writable?","File","Ruby/classes/File.html#method-c-world_writable-3F","(p1)","<p>If <em>file_name</em> is writable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,0],["world_writable?","File::Stat","Ruby/classes/File/Stat.html#method-i-world_writable-3F","()","<p>If <em>stat</em> is writable by others, returns an integer representing the\nfile permission bits of <em>stat</em>. Returns …\n",null,0],["world_writable?","FileTest","Ruby/classes/FileTest.html#method-i-world_writable-3F","(p1)","<p>If <em>file_name</em> is writable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,0],["world_writable?","Pathname","Ruby/classes/Pathname.html#method-i-world_writable-3F","()","<p>See FileTest.world_writable?.\n",null,0],["wrap","Gem::Command","Ruby/classes/Gem/Command.html#method-i-wrap","(text, width)","<p>Wraps <code>text</code> to <code>width</code>\n",null,0],["wrap","Gem::Package::DigestIO","Ruby/classes/Gem/Package/DigestIO.html#method-c-wrap","(io, digests)","<p>Wraps <code>io</code> and updates digest for each of the digest algorithms\nin the <code>digests</code> Hash.  Returns the digests …\n",null,0],["wrap","JSON::JSONError","Ruby/classes/JSON/JSONError.html#method-c-wrap","(exception)","",null,0],["wrap","RDoc::Markup::ToRdoc","Ruby/classes/RDoc/Markup/ToRdoc.html#method-i-wrap","(text)","<p>Wraps <code>text</code> to #width\n",null,0],["wrap","RDoc::Text","Ruby/classes/RDoc/Text.html#method-i-wrap","(txt, line_len = 76)","<p>Wraps <code>txt</code> to <code>line_len</code>\n",null,0],["wrap","REXML::Text","Ruby/classes/REXML/Text.html#method-i-wrap","(string, width, addnewline=false)","",null,0],["wrap","Zlib::GzipFile","Ruby/classes/Zlib/GzipFile.html#method-c-wrap","(*args)","<p>Creates a GzipReader or GzipWriter associated with <code>io</code>, passing\nin any necessary extra options, and executes …\n",null,0],["wrap","Array","Rails/classes/Array.html#method-c-wrap","(object)","<p>Wraps its argument in an array unless it is already an array (or\narray-like).\n<p>Specifically:\n<p>If the argument …\n",null,1],["wrap_arg","DL::ValueUtil","Ruby/classes/DL/ValueUtil.html#method-i-wrap_arg","(arg, ty, funcs = [], &block)","",null,0],["wrap_args","DL::ValueUtil","Ruby/classes/DL/ValueUtil.html#method-i-wrap_args","(args, tys, funcs, &block)","",null,0],["wrap_parameters","ActionController::ParamsWrapper::ClassMethods","Rails/classes/ActionController/ParamsWrapper/ClassMethods.html#method-i-wrap_parameters","(name_or_model_or_options, options = {})","<p>Sets the name of the wrapper key, or the model which\n<code>ParamsWrapper</code> would use to determine the attribute …\n",null,1],["wrap_result","DL::Function","Ruby/classes/DL/Function.html#method-i-wrap_result","(r)","",null,0],["wrap_with_namespace","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-wrap_with_namespace","(content)","",null,1],["writable?","File","Ruby/classes/File.html#method-c-writable-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the effective\nuser id of this process.\n",null,0],["writable?","File::Stat","Ruby/classes/File/Stat.html#method-i-writable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is writable by the effective\nuser id of this process.\n\n<pre><code>File.stat(&quot;testfile&quot;).writable? ...</code></pre>\n",null,0],["writable?","FileTest","Ruby/classes/FileTest.html#method-i-writable-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the effective\nuser id of this process.\n",null,0],["writable?","Pathname","Ruby/classes/Pathname.html#method-i-writable-3F","()","<p>See FileTest.writable?.\n",null,0],["writable_real?","File","Ruby/classes/File.html#method-c-writable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the real user id\nof this process.\n",null,0],["writable_real?","File::Stat","Ruby/classes/File/Stat.html#method-i-writable_real-3F","()","<p>Returns <code>true</code> if <em>stat</em> is writable by the real user id\nof this process.\n\n<pre><code>File.stat(&quot;testfile&quot;).writable_real? ...</code></pre>\n",null,0],["writable_real?","FileTest","Ruby/classes/FileTest.html#method-i-writable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the real user id\nof this process.\n",null,0],["writable_real?","Pathname","Ruby/classes/Pathname.html#method-i-writable_real-3F","()","<p>See FileTest.writable_real?.\n",null,0],["write","ARGF","Ruby/classes/ARGF.html#method-i-write","(p1)","<p>Writes <em>string</em> if inplace mode.\n",null,0],["write","Gem::ConfigFile","Ruby/classes/Gem/ConfigFile.html#method-i-write","()","<p>Writes out this config file, replacing its source.\n",null,0],["write","Gem::Package::DigestIO","Ruby/classes/Gem/Package/DigestIO.html#method-i-write","(data)","<p>Writes <code>data</code> to the underlying IO and updates the digests\n",null,0],["write","Gem::Package::TarWriter::BoundedStream","Ruby/classes/Gem/Package/TarWriter/BoundedStream.html#method-i-write","(data)","<p>Writes <code>data</code> onto the IO, raising a FileOverflow exception if\nthe number of bytes will be more than #limit …\n",null,0],["write","Gem::Package::TarWriter::RestrictedStream","Ruby/classes/Gem/Package/TarWriter/RestrictedStream.html#method-i-write","(data)","<p>Writes <code>data</code> onto the IO\n",null,0],["write","Gem::Security","Ruby/classes/Gem/Security.html#method-c-write","(pemmable, path, permissions = 0600)","<p>Writes <code>pemmable</code>, which must respond to <code>to_pem</code> to\n<code>path</code> with the given <code>permissions</code>.\n",null,0],["write","IO","Ruby/classes/IO.html#method-i-write","(p1)","<p>Writes the given string to <em>ios</em>. The stream must be opened for\nwriting. If the argument is not a string, …\n",null,0],["write","IO","Ruby/classes/IO.html#method-c-write","(*args)","<p>Opens the file, optionally seeks to the given <em>offset</em>, writes\n<em>string</em>, then returns the length written. …\n",null,0],["write","Logger::LogDevice","Ruby/classes/Logger/LogDevice.html#method-i-write","(message)","",null,0],["write","Net::InternetMessageIO::WriteAdapter","Ruby/classes/Net/InternetMessageIO/WriteAdapter.html#method-i-write","(str)","",null,0],["write","Net::Telnet","Ruby/classes/Net/Telnet.html#method-i-write","(string)","<p>Write <code>string</code> to the host.\n<p>Does not perform any conversions on <code>string</code>.  Will log\n<code>string</code> to the dumplog, …\n",null,0],["write","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-write","(s)","<p>Writes <code>s</code> to the stream.  If the argument is not a string it\nwill be converted using String#to_s.  Returns …\n",null,0],["write","REXML::AttlistDecl","Ruby/classes/REXML/AttlistDecl.html#method-i-write","(out, indent=-1)","<p>Write out exactly what we got in.\n",null,0],["write","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-write","( output, indent=-1 )","<p>Writes this attribute (EG, puts &#39;key=“value”&#39; to the output)\n",null,0],["write","REXML::CData","Ruby/classes/REXML/CData.html#method-i-write","( output=$stdout, indent=-1, transitive=false, ie_hack=false )","<p>DEPRECATED\n<p>See the rexml/formatters package\n<p>Generates XML output of this object\n",null,0],["write","REXML::Comment","Ruby/classes/REXML/Comment.html#method-i-write","( output, indent=-1, transitive=false, ie_hack=false )","<p>DEPRECATED\n<p>See REXML::Formatters\n<p>output &mdash; Where to write the string\n",null,0],["write","REXML::DTD::EntityDecl","Ruby/classes/REXML/DTD/EntityDecl.html#method-i-write","( output, indent )","",null,0],["write","REXML::DTD::NotationDecl","Ruby/classes/REXML/DTD/NotationDecl.html#method-i-write","( output, indent )","",null,0],["write","REXML::DocType","Ruby/classes/REXML/DocType.html#method-i-write","( output, indent=0, transitive=false, ie_hack=false )","<p>output &mdash; Where to write the string\n<p>indent &mdash; An integer.  If -1, no indentation will be used; otherwise, the …\n",null,0],["write","REXML::Document","Ruby/classes/REXML/Document.html#method-i-write","(*arguments)","<p>Write the XML tree out, optionally with indent.  This writes out the entire\nXML document, including  …\n",null,0],["write","REXML::Element","Ruby/classes/REXML/Element.html#method-i-write","(output=$stdout, indent=-1, transitive=false, ie_hack=false)","<p>DEPRECATED\n<p>See REXML::Formatters\n<p>Writes out this element, and recursively, all children.\n",null,0],["write","REXML::Entity","Ruby/classes/REXML/Entity.html#method-i-write","(out, indent=-1)","<p>Write out a fully formed, correct entity definition (assuming the Entity\nobject itself is valid.)\n<p>out … &mdash; ",null,0],["write","REXML::Formatters::Default","Ruby/classes/REXML/Formatters/Default.html#method-i-write","( node, output )","<p>Writes the node to some output.\n<p>node &mdash; The node to write\n<p>output &mdash; A class implementing <code>&amp;lt;&amp;lt;</code>.   …\n",null,0],["write","REXML::Instruction","Ruby/classes/REXML/Instruction.html#method-i-write","(writer, indent=-1, transitive=false, ie_hack=false)","<p>DEPRECATED\n<p>See the rexml/formatters package\n",null,0],["write","REXML::Text","Ruby/classes/REXML/Text.html#method-i-write","( writer, indent=-1, transitive=false, ie_hack=false )","<p>DEPRECATED\n<p>See REXML::Formatters\n",null,0],["write","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-i-write","(writer, indent=-1, transitive=false, ie_hack=false)","<p>indent &mdash; Ignored.  There must be no whitespace before an XML declaration\n<p>transitive &mdash; Ignored\n<p>ie_hack &mdash; Ignored …\n",null,0],["write","Rinda::TupleSpace","Ruby/classes/Rinda/TupleSpace.html#method-i-write","(tuple, sec=nil)","<p>Adds <code>tuple</code>\n",null,0],["write","Rinda::TupleSpaceProxy","Ruby/classes/Rinda/TupleSpaceProxy.html#method-i-write","(tuple, sec=nil)","<p>Adds <code>tuple</code> to the proxied TupleSpace.  See TupleSpace#write.\n",null,0],["write","StringIO","Ruby/classes/StringIO.html#method-i-write","(p1)","<p>Appends the given string to the underlying buffer string of\n<strong>strio</strong>. The stream must be opened for writing. …\n",null,0],["write","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-write","(name, type, data)","<p>Write data to a registry value named name. When name is nil, write to the\n`default&#39; value.\n<p>type is …\n",null,0],["write","Zlib::GzipWriter","Ruby/classes/Zlib/GzipWriter.html#method-i-write","(p1)","<p>Same as IO.\n",null,0],["write","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-i-write","(body)","",null,1],["write","ActionDispatch::RailsMetaStore","Rails/classes/ActionDispatch/RailsMetaStore.html#method-i-write","(key, value)","",null,1],["write","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-write","(text=\"\")","",null,1],["write","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-write","(name, value, options = nil)","<p>Writes the value to the cache, with the key.\n<p>Options are passed to the underlying cache implementation. …\n",null,1],["writeTo","HttpServer::Table","Ruby/classes/HttpServer/Table.html#method-i-writeTo","(port)","<p>Output the Hash table for the HTTP header\n",null,0],["write_attribute","ActiveRecord::AttributeMethods::Write","Rails/classes/ActiveRecord/AttributeMethods/Write.html#method-i-write_attribute","(attr_name, value)","<p>Updates the attribute identified by <code>attr_name</code> with the\nspecified <code>value</code>. Empty strings for fixnum and …\n",null,1],["write_bin","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-write_bin","(name, value)","<p>Write value to a registry value named name.\n<p>The value type is REG_SZ(write_s), REG_DWORD(write_i), or …\n",null,0],["write_build_info_file","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-write_build_info_file","()","<p>Writes the file containing the arguments for building this gem&#39;s\nextensions.\n",null,0],["write_cache_file","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-write_cache_file","()","<p>Writes the .gem file to the cache directory\n",null,0],["write_cdata","REXML::Formatters::Default","Ruby/classes/REXML/Formatters/Default.html#method-i-write_cdata","( node, output )","",null,0],["write_cdata","REXML::Formatters::Pretty","Ruby/classes/REXML/Formatters/Pretty.html#method-i-write_cdata","( node, output)","",null,0],["write_comment","REXML::Formatters::Default","Ruby/classes/REXML/Formatters/Default.html#method-i-write_comment","( node, output )","",null,0],["write_comment","REXML::Formatters::Pretty","Ruby/classes/REXML/Formatters/Pretty.html#method-i-write_comment","( node, output)","",null,0],["write_document","REXML::Formatters::Default","Ruby/classes/REXML/Formatters/Default.html#method-i-write_document","( node, output )","",null,0],["write_document","REXML::Formatters::Pretty","Ruby/classes/REXML/Formatters/Pretty.html#method-i-write_document","( node, output )","",null,0],["write_element","REXML::Formatters::Default","Ruby/classes/REXML/Formatters/Default.html#method-i-write_element","( node, output )","",null,0],["write_element","REXML::Formatters::Pretty","Ruby/classes/REXML/Formatters/Pretty.html#method-i-write_element","(node, output)","",null,0],["write_element","REXML::Formatters::Transitive","Ruby/classes/REXML/Formatters/Transitive.html#method-i-write_element","( node, output )","",null,0],["write_entry","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-write_entry","(key, entry, options)","",null,1],["write_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-write_entry","(key, value, options)","",null,1],["write_fragment","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-write_fragment","(key, content, options = nil)","<p>Writes <code>content</code> to the location signified by <code>key</code>\n(see <code>expire_fragment</code> for acceptable formats).\n",null,1],["write_headers?","CSV","Ruby/classes/CSV.html#method-i-write_headers-3F","()","<p>Returns <code>true</code> if headers are written in output. See CSV::new\nfor details.\n",null,0],["write_i","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-write_i","(name, value)","<p>Write value to a registry value named name.\n<p>The value type is REG_SZ(write_s), REG_DWORD(write_i), or …\n",null,0],["write_instruction","REXML::Formatters::Default","Ruby/classes/REXML/Formatters/Default.html#method-i-write_instruction","( node, output )","",null,0],["write_nonblock","IO","Ruby/classes/IO.html#method-i-write_nonblock","(p1)","<p>Writes the given string to <em>ios</em> using the write(2) system call\nafter O_NONBLOCK is set for the underlying …\n",null,0],["write_nonblock","OpenSSL::Buffering","Ruby/classes/OpenSSL/Buffering.html#method-i-write_nonblock","(s)","<p>Writes <code>str</code> in the non-blocking manner.\n<p>If there is buffered data, it is flushed first.  This may block. …\n",null,0],["write_options","RDoc::Options","Ruby/classes/RDoc/Options.html#method-i-write_options","()","<p>Writes the YAML file .rdoc_options to the current directory containing the\nparsed options.\n",null,0],["write_s","Win32::Registry","Ruby/classes/Win32/Registry.html#method-i-write_s","(name, value)","<p>Write value to a registry value named name.\n<p>The value type is REG_SZ(write_s), REG_DWORD(write_i), or …\n",null,0],["write_service","Rinda::RingServer","Ruby/classes/Rinda/RingServer.html#method-i-write_service","()","<p>Creates a thread that picks up UDP packets and passes them to do_write for\ndecoding.\n",null,0],["write_smime","OpenSSL::PKCS7","Ruby/classes/OpenSSL/PKCS7.html#method-c-write_smime","(p1, p2 = v2, p3 = v3)","",null,0],["write_spec","Gem::Installer","Ruby/classes/Gem/Installer.html#method-i-write_spec","()","<p>Writes the .gemspec specification (in Ruby) to the gem home&#39;s\nspecifications directory.\n",null,0],["write_store_attribute","ActiveRecord::Store","Rails/classes/ActiveRecord/Store.html#method-i-write_store_attribute","(store_attribute, key, value)","",null,1],["write_style_sheet","RDoc::Generator::Darkfish","Ruby/classes/RDoc/Generator/Darkfish.html#method-i-write_style_sheet","()","<p>Copy over the stylesheet into the appropriate place in the output\ndirectory.\n",null,0],["write_text","REXML::Formatters::Default","Ruby/classes/REXML/Formatters/Default.html#method-i-write_text","( node, output )","",null,0],["write_text","REXML::Formatters::Pretty","Ruby/classes/REXML/Formatters/Pretty.html#method-i-write_text","( node, output )","",null,0],["write_text","REXML::Formatters::Transitive","Ruby/classes/REXML/Formatters/Transitive.html#method-i-write_text","( node, output )","",null,0],["write_with_substitution","REXML::Text","Ruby/classes/REXML/Text.html#method-i-write_with_substitution","(out, input)","<p>Writes out text, substituting special characters beforehand.\n<code>out</code> A String, IO, or any other object supporting …\n",null,0],["wtime2time","Win32::Registry","Ruby/classes/Win32/Registry.html#method-c-wtime2time","(wtime)","<p>Convert 64-bit FILETIME integer into Time object.\n",null,0],["xhr?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-xhr-3F","()","",null,1],["xhtml","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-xhtml","()","",null,0],["xhtml","RSS::Atom::TextConstruct","Ruby/classes/RSS/Atom/TextConstruct.html#method-i-xhtml","()","",null,0],["xhtml=","RSS::Maker::AtomTextConstructBase::EnsureXMLContent","Ruby/classes/RSS/Maker/AtomTextConstructBase/EnsureXMLContent.html#method-i-xhtml-3D","(content)","",null,0],["xlist","Net::IMAP","Ruby/classes/Net/IMAP.html#method-i-xlist","(refname, mailbox)","<p>Sends a XLIST command, and returns a subset of names from the complete set\nof all names available to …\n",null,0],["xml","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-xml","()","",null,0],["xml","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::ColumnMethods","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/ColumnMethods.html#method-i-xml","(*args)","",null,1],["xml=","RSS::Maker::ItemsBase::ItemBase::ContentBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-xml-3D","(content)","",null,0],["xmlDecl","RSS::REXMLLikeXMLParser","Ruby/classes/RSS/REXMLLikeXMLParser.html#method-i-xmlDecl","(version, encoding, standalone)","",null,0],["xml_content=","RSS::Maker::AtomTextConstructBase::EnsureXMLContent","Ruby/classes/RSS/Maker/AtomTextConstructBase/EnsureXMLContent.html#method-i-xml_content-3D","(content)","",null,0],["xml_content=","RSS::Maker::ItemsBase::ItemBase::ContentBase","Ruby/classes/RSS/Maker/ItemsBase/ItemBase/ContentBase.html#method-i-xml_content-3D","(content)","",null,0],["xml_decl","REXML::Document","Ruby/classes/REXML/Document.html#method-i-xml_decl","()","<p>@return the XMLDecl of this document; if no XMLDecl has been set, the\ndefault declaration is returned. …\n",null,0],["xml_getter","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-xml_getter","()","",null,0],["xml_getter","RSS::Atom::TextConstruct","Ruby/classes/RSS/Atom/TextConstruct.html#method-i-xml_getter","()","",null,0],["xml_http_request?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-xml_http_request-3F","()","<p>Returns true if the “X-Requested-With” header contains “XMLHttpRequest”\n(case-insensitive). …\n",null,1],["xml_setter","RSS::Atom::Feed::Entry::Content","Ruby/classes/RSS/Atom/Feed/Entry/Content.html#method-i-xml_setter","()","",null,0],["xml_setter","RSS::Atom::TextConstruct","Ruby/classes/RSS/Atom/TextConstruct.html#method-i-xml_setter","()","",null,0],["xmldecl","REXML::SAX2Listener","Ruby/classes/REXML/SAX2Listener.html#method-i-xmldecl","(version, encoding, standalone)","<p>Called when an XML PI is encountered in the document. EG: &lt;?xml\nversion=“1.0” encoding=“utf”?&gt; …\n",null,0],["xmldecl","REXML::StreamListener","Ruby/classes/REXML/StreamListener.html#method-i-xmldecl","(version, encoding, standalone)","<p>Called when an XML PI is encountered in the document. EG: &lt;?xml\nversion=“1.0” encoding=“utf”?&gt; …\n",null,0],["xmldecl","REXML::XMLDecl","Ruby/classes/REXML/XMLDecl.html#method-i-xmldecl","(version, encoding, standalone)","",null,0],["xmldecl","RSS::ListenerMixin","Ruby/classes/RSS/ListenerMixin.html#method-i-xmldecl","(version, encoding, standalone)","<p>set instance vars for version, encoding, standalone\n",null,0],["xmldecl","RSS::REXMLListener","Ruby/classes/RSS/REXMLListener.html#method-i-xmldecl","(version, encoding, standalone)","",null,0],["xmldecl","RSS::XMLParserListener","Ruby/classes/RSS/XMLParserListener.html#method-i-xmldecl","(version, encoding, standalone)","",null,0],["xmldecl?","REXML::Parsers::PullEvent","Ruby/classes/REXML/Parsers/PullEvent.html#method-i-xmldecl-3F","()","<p>Content: [ String version, String encoding, String standalone ]\n",null,0],["xmlschema","Date","Ruby/classes/Date.html#method-i-xmlschema","()","<p>This method is equivalent to strftime(&#39;%F&#39;).\n",null,0],["xmlschema","Date","Ruby/classes/Date.html#method-c-xmlschema","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical XML Schema formats.\n\n<pre><code>Date.xmlschema(&#39;2001-02-03&#39;) ...</code></pre>\n",null,0],["xmlschema","DateTime","Ruby/classes/DateTime.html#method-i-xmlschema","(p1 = v1)","<p>This method is equivalent to strftime(&#39;%FT%T&#39;).  The optional\nargument n is length of fractional …\n",null,0],["xmlschema","DateTime","Ruby/classes/DateTime.html#method-c-xmlschema","(p1 = v1, p2 = v2)","<p>Creates a new Date object by parsing from a string according to some\ntypical XML Schema formats.\n\n<pre><code>DateTime.xmlschema(&#39;2001-02-03T04:05:06+07:00&#39;) ...</code></pre>\n",null,0],["xmlschema","Time","Ruby/classes/Time.html#method-i-xmlschema","(date)","<p>Parses <code>date</code> as a dateTime defined by the XML Schema and\nconverts it to a Time object.  The format is …\n",null,0],["xmlschema","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-xmlschema","(fraction_digits = 0)","",null,1],["xmlschema","Date","Rails/classes/Date.html#method-i-xmlschema","()","",null,1],["xmp","Object","Ruby/classes/Object.html#method-i-xmp","(exps, bind = nil)","<p>A convenience method that&#39;s only available when the you require the\nIRB::XMP standard library.\n<p>Creates …\n",null,0],["xpath","REXML::Attribute","Ruby/classes/REXML/Attribute.html#method-i-xpath","()","",null,0],["xpath","REXML::Element","Ruby/classes/REXML/Element.html#method-i-xpath","()","",null,0],["xpath","REXML::Text","Ruby/classes/REXML/Text.html#method-i-xpath","()","<p>FIXME This probably won&#39;t work properly\n",null,0],["yaml","Psych::Nodes::Node","Ruby/classes/Psych/Nodes/Node.html#method-i-yaml","(io = nil, options = {})","<p>Convert this node to YAML.\n<p>See also Psych::Visitors::Emitter\n",null,0],["yaml_as","Module","Ruby/classes/Module.html#method-i-yaml_as","(url)","",null,0],["yaml_initialize","Gem::Version","Ruby/classes/Gem/Version.html#method-i-yaml_initialize","(tag, map)","",null,0],["yaml_tag","Object","Ruby/classes/Object.html#method-c-yaml_tag","(url)","",null,0],["yank_gem","Gem::Commands::YankCommand","Ruby/classes/Gem/Commands/YankCommand.html#method-i-yank_gem","(version, platform, api_key)","",null,0],["yday","Date","Ruby/classes/Date.html#method-i-yday","()","<p>Returns the day of the year (1-366).\n\n<pre><code>Date.new(2001,2,3).yday           #=&gt; 34\n</code></pre>\n",null,0],["yday","Time","Ruby/classes/Time.html#method-i-yday","()","<p>Returns an integer representing the day of the year, 1..366.\n\n<pre><code>t = Time.now   #=&gt; 2007-11-19 08:32:31 -0600 ...\n</code></pre>\n",null,0],["year","Date","Ruby/classes/Date.html#method-i-year","()","<p>Returns the year.\n\n<pre><code>Date.new(2001,2,3).year           #=&gt; 2001\n(Date.new(1,1,1) - 1).year        #=&gt; 0\n</code></pre>\n",null,0],["year","Time","Ruby/classes/Time.html#method-i-year","()","<p>Returns the year for <em>time</em> (including the century).\n\n<pre><code>t = Time.now   #=&gt; 2007-11-19 08:27:51 -0600\nt.year ...\n</code></pre>\n",null,0],["year","Integer","Rails/classes/Integer.html#method-i-year","()","",null,1],["year=","XMLRPC::DateTime","Ruby/classes/XMLRPC/DateTime.html#method-i-year-3D","(value)","<p>Set <code>value</code> as the new date/time component.\n<p>Raises ArgumentError if the given <code>value</code> is out of range, or …\n",null,0],["years","Integer","Rails/classes/Integer.html#method-i-years","()","",null,1],["years_ago","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-years_ago","(years)","<p>Returns a new date/time the specified number of years ago.\n",null,1],["years_since","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-years_since","(years)","<p>Returns a new date/time the specified number of years in the future.\n",null,1],["yesterday","Date","Rails/classes/Date.html#method-c-yesterday","()","<p>Returns a new Date representing the date 1 day ago (i.e. yesterday&#39;s\ndate).\n",null,1],["yesterday","DateAndTime::Calculations","Rails/classes/DateAndTime/Calculations.html#method-i-yesterday","()","<p>Returns a new date/time representing yesterday.\n",null,1],["yield","Fiber","Ruby/classes/Fiber.html#method-c-yield","(*args)","<p>Yields control back to the context that resumed the fiber, passing along\nany arguments that were passed …\n",null,0],["yield","Proc","Ruby/classes/Proc.html#method-i-yield","(*args)","<p>Invokes the block, setting the block&#39;s parameters to the values in\n<em>params</em> using something close to …\n",null,0],["yyaccept","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-yyaccept","()","<p>Exit parser. Return value is Symbol_Value_Stack.\n",null,0],["yyerrok","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-yyerrok","()","<p>Leave error recovering mode.\n",null,0],["yyerror","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-yyerror","()","<p>Enter error recovering mode. This method does not call #on_error.\n",null,0],["yyparse","Racc::Parser","Ruby/classes/Racc/Parser.html#method-i-yyparse","(recv, mid)","<p>Another entry point for the parser. If you use this method, you must\nimplement RECEIVER#METHOD_ID method. …\n",null,0],["zero","Matrix","Ruby/classes/Matrix.html#method-c-zero","(row_count, column_count = row_count)","<p>Creates a zero matrix.\n\n<pre><code>Matrix.zero(2)\n  =&gt; 0 0\n     0 0\n</code></pre>\n",null,0],["zero?","BigDecimal","Ruby/classes/BigDecimal.html#method-i-zero-3F","()","<p>Returns True if the value is zero.\n",null,0],["zero?","File","Ruby/classes/File.html#method-c-zero-3F","(p1)","<p>Returns <code>true</code> if the named file exists and has a zero size.\n<p><em>file_name</em> can be an IO object.\n",null,0],["zero?","File::Stat","Ruby/classes/File/Stat.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a zero-length file;\n<code>false</code> otherwise.\n\n<pre><code>File.stat(&quot;testfile&quot;).zero?   #=&gt; false\n</code></pre>\n",null,0],["zero?","FileTest","Ruby/classes/FileTest.html#method-i-zero-3F","(p1)","<p>Returns <code>true</code> if the named file exists and has a zero size.\n<p><em>file_name</em> can be an IO object.\n",null,0],["zero?","Fixnum","Ruby/classes/Fixnum.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>fix</em> is zero.\n",null,0],["zero?","Float","Ruby/classes/Float.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>flt</em> is 0.0.\n",null,0],["zero?","Matrix","Ruby/classes/Matrix.html#method-i-zero-3F","()","<p>Returns <code>true</code> is this is a matrix with only zero elements\n",null,0],["zero?","Numeric","Ruby/classes/Numeric.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>num</em> has a zero value.\n",null,0],["zero?","Pathname","Ruby/classes/Pathname.html#method-i-zero-3F","()","<p>See FileTest.zero?.\n",null,0],["zip","Array","Ruby/classes/Array.html#method-i-zip","(*args)","<p>Converts any arguments to arrays, then merges elements of <code>self</code>\nwith corresponding elements from each …\n",null,0],["zip","Enumerable","Ruby/classes/Enumerable.html#method-i-zip","(*args)","<p>Takes one element from <em>enum</em> and merges corresponding elements from\neach <em>args</em>.  This generates a sequence …\n",null,0],["zip","Enumerator::Lazy","Ruby/classes/Enumerator/Lazy.html#method-i-zip","(*args)","",null,0],["zip?","RDoc::Parser","Ruby/classes/RDoc/Parser.html#method-c-zip-3F","(file)","<p>Checks if <code>file</code> is a zip file in disguise.  Signatures from\nwww.garykessler.net/library/file_sigs.html …\n",null,0],["zip_file","Rake::PackageTask","Ruby/classes/Rake/PackageTask.html#method-i-zip_file","()","",null,0],["zlib_version","Zlib","Ruby/classes/Zlib.html#method-c-zlib_version","()","<p>Returns the string which represents the version of zlib library.\n",null,0],["zone","Time","Ruby/classes/Time.html#method-i-zone","()","<p>Returns the name of the time zone used for <em>time</em>. As of Ruby 1.8,\nreturns “UTC&#39;&#39; rather than …\n",null,0],["zone","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-zone","()","<p>Time uses <code>zone</code> to display the time zone abbreviation, so\nwe&#39;re duck-typing it.\n",null,1],["zone","Time","Rails/classes/Time.html#method-c-zone","()","<p>Returns the TimeZone for the current request, if this has been set (via\nTime.zone=). If <code>Time.zone</code> has …\n",null,1],["zone=","Time","Rails/classes/Time.html#method-c-zone-3D","(time_zone)","<p>Sets <code>Time.zone</code> to a TimeZone object for the current\nrequest/thread.\n<p>This method accepts any of the following: …\n",null,1],["zone_offset","Time","Ruby/classes/Time.html#method-i-zone_offset","(zone, year=self.now.year)","<p>Return the number of seconds the specified time zone differs from UTC.\n<p>Numeric time zones that include …\n",null,0],["zones_map","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-zones_map","()","",null,1],["|","Array","Ruby/classes/Array.html#method-i-7C","(p1)","<p>Set Union — Returns a new array by joining <code>ary</code> with\n<code>other_ary</code>, excluding any duplicates and preserving …\n",null,0],["|","Bignum","Ruby/classes/Bignum.html#method-i-7C","(p1)","<p>Performs bitwise <code>or</code> between <em>big</em> and <em>numeric</em>.\n",null,0],["|","FalseClass","Ruby/classes/FalseClass.html#method-i-7C","(p1)","<p>Or—Returns <code>false</code> if <em>obj</em> is <code>nil</code> or\n<code>false</code>; <code>true</code> otherwise.\n",null,0],["|","Fixnum","Ruby/classes/Fixnum.html#method-i-7C","(p1)","<p>Bitwise OR.\n",null,0],["|","IPAddr","Ruby/classes/IPAddr.html#method-i-7C","(other)","<p>Returns a new ipaddr built by bitwise OR.\n",null,0],["|","JSON::GenericObject","Ruby/classes/JSON/GenericObject.html#method-i-7C","(other)","",null,0],["|","NilClass","Ruby/classes/NilClass.html#method-i-7C","(p1)","<p>Or—Returns <code>false</code> if <em>obj</em> is <code>nil</code> or\n<code>false</code>; <code>true</code> otherwise.\n",null,0],["|","Set","Ruby/classes/Set.html#method-i-7C","(enum)","<p>Returns a new set built by merging the set and the elements of the given\nenumerable object.\n",null,0],["|","Shell::Filter","Ruby/classes/Shell/Filter.html#method-i-7C","(filter)","<p>Processes a pipeline.\n",null,0],["|","TrueClass","Ruby/classes/TrueClass.html#method-i-7C","(p1)","<p>Or—Returns <code>true</code>. As <em>anObject</em> is an argument to a\nmethod call, it is always evaluated; there is no short-circuit …\n",null,0],["~","Bignum","Ruby/classes/Bignum.html#method-i-7E","()","<p>Inverts the bits in big. As Bignums are conceptually infinite length, the\nresult acts as if it had an …\n",null,0],["~","Complex","Ruby/classes/Complex.html#method-i-7E","()","<p>Returns the complex conjugate.\n\n<pre><code>Complex(1, 2).conjugate  #=&gt; (1-2i)\n</code></pre>\n",null,0],["~","Fixnum","Ruby/classes/Fixnum.html#method-i-7E","()","<p>One&#39;s complement: returns a number where each bit is flipped.\n",null,0],["~","IPAddr","Ruby/classes/IPAddr.html#method-i-7E","()","<p>Returns a new ipaddr built by bitwise negation.\n",null,0],["~","Regexp","Ruby/classes/Regexp.html#method-i-7E","()","<p>Match—Matches <em>rxp</em> against the contents of <code>$_</code>.\nEquivalent to <code><em>rxp</em> =~ $_</code>.\n\n<pre><code>$_ = &quot;input data&quot;\n~ /at/   #=&gt; ...\n</code></pre>\n",null,0]]},"badges":["Ruby","Rails"]}